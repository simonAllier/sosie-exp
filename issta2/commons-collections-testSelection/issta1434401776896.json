{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":586,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":217,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":542,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":662,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":253,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":86,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":194,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":337,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":594,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":40,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":23,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":515,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":514,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":802,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":362,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFullIterator":829,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":407,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":527,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":529,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":654,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":77,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":324,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":742,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":364,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":756,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":839,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":490,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":267,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":200,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":651,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":237,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":766,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":28,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":0,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":112,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":218,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":752,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":232,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":774,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":297,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":442,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":798,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":748,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":125,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":744,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":669,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":273,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":60,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":666,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":823,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":341,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiRemove":831,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":2,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":319,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":548,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":861,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":258,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":410,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":565,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":278,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":360,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":325,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":729,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":367,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":408,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":638,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":811,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":833,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":526,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":241,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":173,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":174,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":378,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":803,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":14,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":175,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":87,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":760,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":193,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":795,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":652,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":764,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":346,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":280,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":107,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":559,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":587,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":52,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":373,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":713,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":646,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":296,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":435,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":553,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":277,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":457,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":395,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":402,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":396,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":397,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":445,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":562,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":38,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":440,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":441,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":439,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":274,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":415,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":431,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":682,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":783,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":701,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":820,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":658,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":235,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":295,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":12,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":257,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":380,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":252,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":242,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":226,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":166,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":118,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":593,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":639,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":69,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":640,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":37,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":428,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":338,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":136,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":779,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":810,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":219,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":220,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":221,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":689,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":596,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":299,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":291,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":345,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":482,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":300,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":214,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":110,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":611,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove1":676,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove2":677,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove3":678,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":149,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":450,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":656,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":121,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":244,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":106,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":556,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":540,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":759,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":835,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":537,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":693,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":746,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":183,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":708,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":254,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":661,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":518,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":688,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":608,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":369,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":584,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":785,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":434,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":775,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":800,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":533,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":331,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":578,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.initializationError":598,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":393,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":75,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":585,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":446,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":122,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":58,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":630,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":124,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":352,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":411,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":35,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":637,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":714,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":328,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEmptyIterator":715,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":385,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":650,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":59,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":230,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":16,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":290,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":791,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":303,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":621,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":70,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":432,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testNextAndPreviousIndex":22,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":347,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":363,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":20,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastEntrySet":602,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":266,"org.apache.commons.collections4.map.LinkedMapTest.testReset":293,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":404,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":703,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":704,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":323,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":695,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":702,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":469,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":240,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":406,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":97,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":105,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":577,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":734,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":374,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":524,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":141,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":496,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":579,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":535,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":152,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":561,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":523,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":853,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":379,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":840,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":368,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":850,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":315,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":5,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":132,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":181,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":420,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":634,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":384,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":199,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":605,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":433,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":480,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":549,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":192,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":357,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":134,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":358,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":648,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":111,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":359,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":31,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":786,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":216,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":599,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":765,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":500,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":855,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":126,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":421,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":762,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":414,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":322,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":629,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":392,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":552,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":544,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":282,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":9,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":47,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":49,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":127,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":473,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":25,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":711,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":848,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":19,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":506,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":494,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":51,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":288,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":309,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":308,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":310,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":188,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":444,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":797,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":302,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":184,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":215,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":326,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":236,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":501,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":828,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":581,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":655,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":755,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":4,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":470,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains2":674,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains3":675,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains1":673,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":321,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":320,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":276,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":763,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":208,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":187,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":251,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":520,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":641,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":71,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":787,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":354,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":227,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":355,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":489,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":356,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":426,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":211,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":210,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":209,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":412,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":778,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":168,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":512,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":509,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":233,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":664,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":201,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":492,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":26,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":782,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":245,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking":741,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":265,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":770,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":63,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":336,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":80,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":430,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":582,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":773,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":464,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":772,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":632,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":771,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":351,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":268,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":256,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":841,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":29,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":780,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":140,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":628,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":687,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":667,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastEntrySet":660,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":382,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":465,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":180,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":128,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":610,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":563,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":304,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":710,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":281,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":271,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":488,"org.apache.commons.collections4.map.LRUMapTest.testLRU":342,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":503,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":497,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":108,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":202,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":452,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":580,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":642,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":643,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":681,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":644,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":78,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":156,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":472,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":153,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":626,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":53,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":370,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":567,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":796,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":191,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":72,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":789,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":454,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":768,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":758,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":525,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":699,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":659,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":62,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":391,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":394,"org.apache.commons.collections4.map.ListOrderedMap2Test.testNextKey":684,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":234,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":145,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":468,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":182,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":6,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":206,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":635,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":314,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":806,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":694,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":401,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":179,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":543,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":858,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":622,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":176,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":852,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":101,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":448,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":627,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":113,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":65,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":860,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":13,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":814,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":225,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":455,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":365,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":541,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":808,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":329,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":809,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":333,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":712,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.initializationError":625,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":463,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":335,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":504,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":508,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":155,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":377,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":56,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":135,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":246,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":633,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":856,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":709,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":387,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":204,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":375,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":735,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":607,"org.apache.commons.collections4.CollectionUtilsTest.transform1":830,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":485,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":753,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":849,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":353,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":165,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":851,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":119,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":405,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":505,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":817,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":818,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":816,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":730,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":466,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":197,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":143,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":285,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":82,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":443,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":429,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":733,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":270,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":572,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":332,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":93,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":151,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":103,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":459,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":794,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":68,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":532,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":538,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":104,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":189,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":793,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":573,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":398,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":50,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":88,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":334,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":784,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":612,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":679,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":453,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":400,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":399,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":161,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":142,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":247,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":146,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":186,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":306,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":73,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":481,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":862,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":792,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove1":618,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":721,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove2":619,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove3":620,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":33,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":286,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":249,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":683,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":3,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":502,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":534,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":569,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":636,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":238,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":645,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":631,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":294,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":239,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":815,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":843,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":706,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":413,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":707,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":727,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":275,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":807,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":54,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":162,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":719,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":74,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":812,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":837,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":609,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":437,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":436,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":120,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":705,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":799,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":491,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":438,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking":737,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":15,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":27,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":224,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":223,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":339,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":484,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":222,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":738,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking":736,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":203,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":427,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":846,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":487,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":389,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":842,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":575,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":301,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":788,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":819,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":590,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":589,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetClearChangesMap":672,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":317,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":854,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":606,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":198,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":292,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":307,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":7,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":376,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":229,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":123,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":517,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":177,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":555,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":528,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":318,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":138,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":479,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":91,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains1":615,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":805,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains2":616,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains3":617,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":511,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":390,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":89,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":649,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":90,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":102,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":207,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":671,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":476,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":571,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":604,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":83,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":196,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":248,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":595,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":554,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":507,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":85,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":477,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":720,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":716,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":750,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":822,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":462,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":471,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":499,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":566,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":316,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEmptyIterator":718,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":624,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":653,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":46,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":381,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":692,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":493,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":804,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":39,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":195,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":383,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":130,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":424,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":551,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":154,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":348,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":686,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":148,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":164,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":790,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":478,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":857,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":547,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":313,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":131,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":158,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":305,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":312,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":311,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":546,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":550,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":228,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":24,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":340,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":623,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":350,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":447,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":767,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":403,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":366,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":423,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":18,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":272,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":603,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":531,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":657,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":680,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":144,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":114,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":185,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":361,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":691,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":81,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":647,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":262,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":263,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":264,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":98,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":530,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":409,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":419,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":43,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":574,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":205,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":560,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":147,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":163,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":386,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsSelfHashCode":576,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":722,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":451,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":422,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":213,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":167,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":79,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":327,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":486,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":1,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":743,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":283,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":99,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":754,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":826,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":564,"org.apache.commons.collections4.map.ListOrderedMapTest.testNextKey":685,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":456,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":536,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":600,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":670,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":160,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":827,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":84,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":116,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":781,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":731,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":157,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":250,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":745,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":129,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":832,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":284,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":117,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.initializationError":597,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":32,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":150,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":178,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":698,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":740,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":498,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":298,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":483,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":591,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":836,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":495,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetClearChangesMap":614,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":458,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":522,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":665,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":48,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":416,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":732,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":190,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":728,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":844,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":474,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":557,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":388,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":757,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":834,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":425,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":776,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":30,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":769,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":8,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":17,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":449,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":749,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":726,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":94,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":96,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":95,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":690,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":824,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":269,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsSelfHashCode":516,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":700,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":467,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":64,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":777,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":545,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":821,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":461,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":588,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":668,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":460,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":583,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":349,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":231,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":847,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":519,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":825,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":260,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":261,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":259,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":169,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":76,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":115,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":813,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":838,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":66,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":289,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":863,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":417,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":570,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":592,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":723,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":724,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":725,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":21,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":170,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":171,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":539,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":663,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":801,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":697,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":751,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":845,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":747,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":418,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":279,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":11,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking":739,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":10,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":255,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":859,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":287,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":42,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":137,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":510,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":92,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":343,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":44,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":761,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":45,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":558,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":568,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":521,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":613,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":601,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":475,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":212,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":717,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":109,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":172,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":330,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":133,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":243,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":139,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":513,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":344,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":372,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":371,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":159,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":696},"transformations":[{"failures":[],"tindex":"f74be74a-13a0-11e5-9c65-890371a3bf99","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1419","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.EntrySet.(contains(java.lang.Object)) == false) {\n    return false;\n} "},"variableMap":{"obj":"key1","this":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:159","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"f74c0e5b-13a0-11e5-9c65-5d9f1a69ab68","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"start2","newCapacity":"end2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:263","type":"CtWhileImpl","sourcecode":"while ((int < int) || (int < int)) {\n    if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n        ++int;\n    } else {\n        if ((int - int) > (int - int)) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        } else {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        }\n    }\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"tindex":"f74c0e5c-13a0-11e5-9c65-fdfe483c4d22","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:145","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} "},"status":-1},{"failures":[],"tindex":"f74c0e5d-13a0-11e5-9c65-41decfc3e36d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1045","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"newNode","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1284","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue(), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"f74c356e-13a0-11e5-9c65-03b51ccfe884","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"maxSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:301","type":"CtTryImpl","sourcecode":"try {\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n    while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n    (int)++;\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.removeEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.reuseEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.addEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int);\n} catch (final java.lang.NullPointerException ex) {\n    throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n}"},"status":-2},{"failures":[],"tindex":"f74c5c7f-13a0-11e5-9c65-6d1467885787","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"status":-2},{"failures":[],"tindex":"f74c5c80-13a0-11e5-9c65-7b26859c2fe0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1164","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"variableMap":{"node":"found","right":"found"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1022","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} "},"status":0},{"failures":[],"tindex":"f74c5c81-13a0-11e5-9c65-355b353daef7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:123","type":"CtLocalVariableImpl","sourcecode":"int int = (\"ConstantTransformer\".hashCode()) << 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:258","type":"CtLocalVariableImpl","sourcecode":"int int = 17"},"status":-2},{"failures":[12],"tindex":"f74c5c82-13a0-11e5-9c65-2376a7b2f710","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:610","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.mapIterator();\n} "},"status":-1},{"failures":[13,14,15,16,17,18,19,20,21],"tindex":"f74c5c83-13a0-11e5-9c65-4bc2682a8e8a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:190","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.SingletonMap<K, V>.isEqualKey(java.lang.Object)) {\n    return V;\n} "},"status":-1},{"failures":[],"tindex":"f74c5c84-13a0-11e5-9c65-c99bb0eb612a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:855","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"node","node":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:490","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n} else {\n    while (true) {\n        final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n        if (int == 0) {\n            throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n        } else if (int < 0) {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        } else {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        }\n    }\n}"},"status":-2},{"failures":[22],"tindex":"f74c8395-13a0-11e5-9c65-65e51f0cb227","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:112","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<E>.hasNext()) == false) {\n    return 0;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:171","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<E>.hasPrevious()) == false) {\n    return (java.util.List<E>.size()) - 1;\n} "},"status":-1},{"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36],"tindex":"f74c8396-13a0-11e5-9c65-e7b8966d0775","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:732","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return null;\n} "},"variableMap":{"parent":"right","current":"parent","right":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"f74caaa7-13a0-11e5-9c65-8f4abd58d009","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:580","type":"CtForEachImpl","sourcecode":"for (java.lang.Character java.lang.Character : java.util.List<java.lang.Character>) {\n    java.lang.StringBuilder.append(java.lang.Character);\n}"},"status":-2},{"failures":[],"tindex":"f74caaa8-13a0-11e5-9c65-e521b5183fd2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        return null;\n    }\n} "},"variableMap":{"lengthInBits":"bitIndex","root":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:197","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[37,38,39,40,41,42],"tindex":"f74d1fd9-13a0-11e5-9c65-656ecde8622c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"start2","lengthInBits":"y","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"start2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:224","type":"CtWhileImpl","sourcecode":"while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    int[][int] = int--;\n    int--;\n}"},"status":-1},{"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115],"tindex":"f74d1fda-13a0-11e5-9c65-79abf5c145b1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:129","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"exhausted":"isLocked"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"f74d1fdb-13a0-11e5-9c65-bf8d6735e45a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtIfImpl","sourcecode":"if (java.util.Collection<T> == null) {\n    throw new java.lang.NullPointerException(\"The collection must not be null\");\n} "},"variableMap":{"collection":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:665","type":"CtForEachImpl","sourcecode":"for (final T T : java.lang.Iterable<T>) {\n    C.execute(T);\n}"},"status":0},{"failures":[],"tindex":"f74d1fdc-13a0-11e5-9c65-4fa3c81b8848","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:280","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n    return V;\n} "},"status":-2},{"failures":[116,117,118,119,120,121,122,123,124,125],"tindex":"f74d1fdd-13a0-11e5-9c65-f1822c14f7a5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:380","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E);\n    final int int = org.apache.commons.collections4.Bag<?>.getCount(E);\n    if ((1 <= int) && (int <= int)) {\n        org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n    } else {\n        org.apache.commons.collections4.Bag<E>.add(E, int);\n    }\n}"},"status":-1},{"failures":[126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469],"tindex":"f74d1fde-13a0-11e5-9c65-fb3404d0803b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1295","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(this)"},"variableMap":{"cloned":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:638","type":"CtForImpl","sourcecode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n        do {\n            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n    } \n}"},"status":-1},{"failures":[],"tindex":"f74d46ef-13a0-11e5-9c65-5f74e3c0508c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:207","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    java.util.Iterator<? extends E>.remove();\n    return ;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:252","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    while ((java.util.ListIterator<?>.previousIndex()) >= 0) {\n        java.util.ListIterator<?>.previous();\n    }\n    return ;\n} "},"status":0},{"failures":[470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578],"tindex":"f74d46f0-13a0-11e5-9c65-9b83bfd3b692","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:562","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[579,580,581,582],"tindex":"f74d46f1-13a0-11e5-9c65-5b6f74fb4305","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:99","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>.isSetValueChecking()) {\n    return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this);\n} "},"status":-1},{"failures":[],"tindex":"f74d46f2-13a0-11e5-9c65-51ef571d39c4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:61","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super E>[].int) != (org.apache.commons.collections4.Closure<? super E>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and closure arrays must be the same size\");\n} "},"status":-2},{"failures":[583,584,585,586,587,588,589,590,591,592,593,594,595,596],"tindex":"f74d6e03-13a0-11e5-9c65-ff5fbff7f1d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1746","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getKey() can only be called after next() and before remove()\");\n} "},"variableMap":{"lastReturnedNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:949","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement : org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.values()) {\n    if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                } else {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-1},{"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36],"tindex":"f74d6e04-13a0-11e5-9c65-bb4dded0a6f2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:708","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"variableMap":{"current":"current","tree":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"f74d6e05-13a0-11e5-9c65-cbccbff16113","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:356","type":"CtIfImpl","sourcecode":"if ((java.util.BitSet.get(int)) == false) {\n    org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n} "},"status":-2},{"failures":[],"tindex":"f74d6e06-13a0-11e5-9c65-3fd8cf957ba0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:152","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject()"},"variableMap":{"this":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:146","type":"CtIfImpl","sourcecode":"if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"f74d6e07-13a0-11e5-9c65-fd98566dba13","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:164","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682],"tindex":"f74d6e08-13a0-11e5-9c65-bf315cbd61f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:305","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySet<K, V>(this);\n} "},"status":-1},{"failures":[],"tindex":"f74d9519-13a0-11e5-9c65-69209c900f84","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedClosure:68","type":"CtIfImpl","sourcecode":"if (java.util.Collection<org.apache.commons.collections4.Closure<E>> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure collection must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"f74d951a-13a0-11e5-9c65-51c2c3609809","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:99","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[683],"tindex":"f74d951b-13a0-11e5-9c65-69ce58adf2ca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:92","type":"CtInvocationImpl","sourcecode":"java.util.ListIterator<E>.remove()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:102","type":"CtInvocationImpl","sourcecode":"java.util.ListIterator<E>.add(E)"},"status":-1},{"failures":[684,685,686],"tindex":"f74d951c-13a0-11e5-9c65-9752a61c3515","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    return java.util.List<K>.get((int - 1));\n} "},"variableMap":{"insertOrder":"insertOrder","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:195","type":"CtIfImpl","sourcecode":"if ((int >= 0) && (int < (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) - 1))) {\n    return java.util.List<K>.get((int + 1));\n} "},"status":-1},{"failures":[1,2,3,4,6,7,8,9,10,11],"tindex":"f74d951d-13a0-11e5-9c65-3bdad85e8fe4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:279","type":"CtReturnImpl","sourcecode":"return boolean"},"variableMap":{"changed":"previousObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:265","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[99,100,101,102,103,105,106,108,109,110,111,112,115],"tindex":"f74d951e-13a0-11e5-9c65-e1f0ff44b43a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:468","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.CompositeMap<K, V>.entrySet().equals(java.util.Map<?, ?>.entrySet())"},"status":-1},{"failures":[],"tindex":"f74d951f-13a0-11e5-9c65-bbcfdcfa6d0c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:184","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n} "},"variableMap":{"entry":"next","hashCode":"hashCode","this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:183","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[494,495,498,499,477,478,479,480,482,483,485,487,500,501,502,503,504,505,506,507,508,509,510,511,514,520,687,688,689,558,559,539,540,541,542,544,545,547,549,560,561,562,563,564,565,566,567,568,569,570,571,574],"tindex":"f74d9520-13a0-11e5-9c65-5d99c1b637b0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:586","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.List) == false) {\n    return false;\n} "},"status":-1},{"failures":[199,203,288,292,327,328,330,331,332,334,335,337,340,341,690,691,692,693,694,695,696,697,698,699,373,374,376,377,378,380,381,383,386,387,424,428,455,456,458,459,460,462,463,465,468,469],"tindex":"f74dbc31-13a0-11e5-9c65-792937f1f7ed","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1352","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.util.Map.Entry<K, V>>.hasNext()) {\n    int += java.util.Iterator<java.util.Map.Entry<K, V>>.next().hashCode();\n}"},"status":-1},{"failures":[],"tindex":"f74dbc32-13a0-11e5-9c65-c7a8ea778d63","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:115","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int[].int) ; int++) {\n    if ((((boolean[][int]) && (int < ((int[].int) - 1))) && ((int[][int]) > (int[][(int + 1)]))) || (((!(boolean[][int])) && (int > 0)) && ((int[][int]) > (int[][(int - 1)])))) {\n        if ((int[][int]) > int) {\n            int = int[][int];\n            int = int;\n        } \n    } \n}"},"variableMap":{"indexOfLargestMobileInteger":"i","keys":"tmp","largestKey":"i","length":"j","direction":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1442","type":"CtWhileImpl","sourcecode":"while (int > int) {\n    java.lang.Object = java.lang.Object[][int];\n    java.lang.Object[][int] = java.lang.Object[][int];\n    java.lang.Object[][int] = java.lang.Object;\n    int--;\n    int++;\n}"},"status":-2},{"failures":[597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682],"tindex":"f74dbc33-13a0-11e5-9c65-7192a30c5efd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:305","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySet<K, V>(this);\n} "},"status":-1},{"failures":[700,701,702,703,704,705,706,707,288],"tindex":"f74dbc34-13a0-11e5-9c65-e9fba7a6b929","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:225","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"f74dbc35-13a0-11e5-9c65-55aae9065471","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:147","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.TreeList<E>.checkInterval(int, 0, org.apache.commons.collections4.list.TreeList<E>.size())"},"variableMap":{"this":"nextP","fromIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:141","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int[].int) ; int++) {\n    if ((int[][int]) > int) {\n        boolean[][int] = !(boolean[][int]);\n    } \n    java.util.List<E>.add(java.util.Map<java.lang.Integer, E>.get(java.lang.Integer.valueOf(int[][int])));\n}"},"status":-2},{"failures":[],"tindex":"f74dbc36-13a0-11e5-9c65-63514f66bdb7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.FactoryUtils:56","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionFactory.<T>exceptionFactory()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:67","type":"CtTryImpl","sourcecode":"try {\n    T.getClass().getConstructor(new java.lang.Class<?>[]{ T.getClass() });\n    return new org.apache.commons.collections4.functors.InstantiateFactory<T>(((java.lang.Class<T>)(T.getClass())) , new java.lang.Class<?>[]{ T.getClass() } , new java.lang.Object[]{ T });\n} catch (final java.lang.NoSuchMethodException ex2) {\n    if (T instanceof java.io.Serializable) {\n        return ((org.apache.commons.collections4.Factory<T>)(new org.apache.commons.collections4.functors.PrototypeFactory.PrototypeSerializationFactory<java.io.Serializable>(((java.io.Serializable)(T)))));\n    } \n}"},"status":-2},{"failures":[162],"tindex":"f74de347-13a0-11e5-9c65-cb95742c6c04","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:189","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends J, ? extends U> java.util.Map.Entry<? extends J, ? extends U> : java.util.Map<? extends J, ? extends U>.entrySet()) {\n    java.util.Map<K, V>.put(org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>.transformKey(java.util.Map.Entry<? extends J, ? extends U>.getKey()), org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>.transformValue(java.util.Map.Entry<? extends J, ? extends U>.getValue()));\n}"},"status":-1},{"failures":[],"tindex":"f74de348-13a0-11e5-9c65-8934a8d996ae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:133","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap()"},"status":0},{"failures":[],"tindex":"f74de349-13a0-11e5-9c65-e5e6dbc8b11b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:254","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.previousIndex()) >= 0) {\n    java.util.ListIterator<?>.previous();\n}"},"variableMap":{"li":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtIfImpl","sourcecode":"if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n} else {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-2},{"failures":[708,709,710,711,712],"tindex":"f74de34a-13a0-11e5-9c65-c1f82c3574e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"i","modifications":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:118","type":"CtIfImpl","sourcecode":"if ((int[][int]) > int) {\n    int = int[][int];\n    int = int;\n} "},"status":-1},{"failures":[713],"tindex":"f74de34b-13a0-11e5-9c65-056da576dc23","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:103","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.Predicate<E>[][int] = java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>>.getKey()"},"status":-1},{"failures":[],"tindex":"f74de34c-13a0-11e5-9c65-5796aa4faf31","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1589","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.FixedSizeSortedMap.fixedSizeSortedMap(java.util.SortedMap<K, V>)"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LazySortedMap:144","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)"},"status":0},{"failures":[],"tindex":"f74de34d-13a0-11e5-9c65-b95c332fa7a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1069","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.list.TreeList.TreeListIterator<E>.(hasPrevious())) {\n    throw new java.util.NoSuchElementException(\"Already at start of list.\");\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:393","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    java.lang.StringBuilder.append((java.lang.Object == (this) ? \"(this Collection)\" : java.lang.Object));\n    boolean = java.util.Iterator<E>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(\", \");\n    } \n}"},"status":-2},{"failures":[],"tindex":"f74de34e-13a0-11e5-9c65-534dde20430c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1044","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"currentNode","currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:886","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":-2},{"failures":[714,715,716,717,718,719],"tindex":"f74e0a5f-13a0-11e5-9c65-09df2222998f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:147","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[720],"tindex":"f74e0a60-13a0-11e5-9c65-59e5bcb3b61c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:784","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry().getKey()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:814","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey() : null;\n} else {\n    return null;\n}"},"status":-1},{"failures":[592,593,594,595,721,722,596,587,588],"tindex":"f74e0a61-13a0-11e5-9c65-117586d8ab66","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:964","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"dataElement":"dataElement","deletedNode":"from","replacement":"to"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"f74e0a62-13a0-11e5-9c65-dfccf53171e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n    break;\n} "},"variableMap":{"coll":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<? extends O> == null) || (java.lang.Iterable<? extends O> == null)) {\n    throw new java.lang.IllegalArgumentException(\"The collections must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"f74e0a63-13a0-11e5-9c65-734e9e71df06","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtIfImpl","sourcecode":"if (java.util.Map<? super I, ? extends O> == null) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:98","type":"CtIfImpl","sourcecode":"if ((java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>>.size()) == 0) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} "},"status":0},{"failures":[],"tindex":"f74e0a64-13a0-11e5-9c65-4df8ddff10f1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtIfImpl","sourcecode":"if (java.util.List<T> == null) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"f74e0a65-13a0-11e5-9c65-2fd594c4b523","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:959","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            }\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":-2},{"failures":[723,724,725,726,727,728,729,730,731,732,733],"tindex":"f74e3176-13a0-11e5-9c65-a5d322e8873c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:179","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> != (java.util.Iterator<? extends E>)) {\n    if ((java.util.Iterator<? extends E>) != null) {\n        org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-1},{"failures":[206,734,207],"tindex":"f74e3177-13a0-11e5-9c65-3bbfb9cc3227","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:582","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-1},{"failures":[735,736,737,738,739,740,741,742],"tindex":"f74e3178-13a0-11e5-9c65-61aa250b3553","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:287","type":"CtIfImpl","sourcecode":"if ((int < int) || (int > int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Invalid index:\" + int) + \", size=\") + org.apache.commons.collections4.list.TreeList<E>.(size())));\n} "},"status":-1},{"failures":[743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,583,790,791,792,793,584,794,585,586,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,587,810,811,812,588,813,814,815,816,817,818,589,590,819,591,820,821,593,822,823,594,595,721,722,596,592],"tindex":"f74e3179-13a0-11e5-9c65-fb79e349426c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:540","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"f74e317a-13a0-11e5-9c65-f76350665279","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:411","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Collection<?>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"variableMap":{"coll2":"iterable","coll1":"iterable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? extends C> instanceof java.util.Collection<?>) {\n    return java.util.Collection<C>.addAll(((java.util.Collection<? extends C>)(java.lang.Iterable<? extends C>)));\n} "},"status":-2},{"failures":[],"tindex":"f74e317b-13a0-11e5-9c65-afdec0e205d2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:383","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.BitSet.size()) ; int++) {\n    if (java.util.BitSet.get(int)) {\n        return true;\n    } \n}"},"variableMap":{"set":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:230","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n    return true;\n} "},"status":-2},{"failures":[37,38,39,40,41,42],"tindex":"f74e317c-13a0-11e5-9c65-0dcf2bc4b0a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:215","type":"CtIfImpl","sourcecode":"if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n    int[][int] = (int[][(int + 1)]) - 1;\n} else {\n    int[][int] = int[][(int - 1)];\n}"},"status":-1},{"failures":[],"tindex":"f74e317d-13a0-11e5-9c65-238344231ec0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:342","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:243","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"status":-2},{"failures":[],"tindex":"f74e317e-13a0-11e5-9c65-857666c34bab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:122","type":"CtReturnImpl","sourcecode":"return ((java.lang.String.charAt(int)) & org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.(org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int))) != 0"},"variableMap":{"this":"object","index":"length","bit":"length","key":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"f74e588f-13a0-11e5-9c65-c36963d394aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:556","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-2},{"failures":[],"tindex":"f74e5890-13a0-11e5-9c65-09afe5092a76","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtIfImpl","sourcecode":"if ((int - int) > (int - int)) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n} else {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n}"},"status":-2},{"failures":[],"tindex":"f74e5891-13a0-11e5-9c65-3186bb0deef8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:124","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.hasPrevious();\n} "},"status":0},{"failures":[],"tindex":"f74e5892-13a0-11e5-9c65-59ab29297768","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1009","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.print(\"(this Map)\")"},"variableMap":{"out":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:262","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(1);\n    java.util.Collection<V>.add(((V)(java.lang.Object)));\n    if ((java.util.Collection<V>.size()) > 0) {\n        org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n        boolean = true;\n    } \n} else {\n    boolean = java.util.Collection<V>.add(((V)(java.lang.Object)));\n}"},"status":-2},{"failures":[],"tindex":"f74e5893-13a0-11e5-9c65-bba332ee9e18","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2050","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"f74e5894-13a0-11e5-9c65-09a698af4b23","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:289","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":0},{"failures":[824,253,254,255,280,256,257,258],"tindex":"f74e5895-13a0-11e5-9c65-4fe544b030df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:578","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"hash2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:586","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.clear();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V> = null;\n} else {\n    int = 0;\n    int = int = int = 0;\n    K = K = K = null;\n    V = V = V = null;\n}"},"status":-1},{"failures":[723,724,725,726,727,825,728,729,730,731,732,733],"tindex":"f74e5896-13a0-11e5-9c65-5125ccc32fe8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:163","type":"CtIfImpl","sourcecode":"if (E instanceof java.util.Iterator) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)));\n} else {\n    E = E;\n    boolean = true;\n}"},"status":-1},{"failures":[700,824,12,253,254,255,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276],"tindex":"f74e5897-13a0-11e5-9c65-1b79d2e4e246","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"size","index":"size","beyond":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:398","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 2 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 1 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":-1},{"failures":[826,827,828,829],"tindex":"f74e7fa8-13a0-11e5-9c65-e10d9ae04204","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:239","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"Comparator ordering cannot be changed after the first comparison is performed\");\n} "},"variableMap":{"isLocked":"chainExhausted"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:83","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if ((java.util.Iterator<? extends E>) == null) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n        boolean = true;\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-1},{"failures":[],"tindex":"f74e7fa9-13a0-11e5-9c65-19453fd58e71","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:323","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n        if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        } else {\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        }\n        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n        return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":0},{"failures":[288],"tindex":"f74e7faa-13a0-11e5-9c65-11f20c32cc00","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:333","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((V) == null) {\n                return true;\n            } \n        case 2 :\n            if ((V) == null) {\n                return true;\n            } \n        case 1 :\n            if ((V) == null) {\n                return true;\n            } \n    }\n} else {\n    switch (int) {\n        case 3 :\n            if (java.lang.Object.equals(V)) {\n                return true;\n            } \n        case 2 :\n            if (java.lang.Object.equals(V)) {\n                return true;\n            } \n        case 1 :\n            if (java.lang.Object.equals(V)) {\n                return true;\n            } \n    }\n}"},"status":-1},{"failures":[205,206,734,207],"tindex":"f74e7fab-13a0-11e5-9c65-bdef87a28053","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:398","type":"CtOperatorAssignmentImpl","sourcecode":"int += int << 4"},"variableMap":{"h":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:675","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 14"},"status":-1},{"failures":[830],"tindex":"f74e7fac-13a0-11e5-9c65-c7c6164ae5d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:53","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super T, ? extends T> == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n} "},"variableMap":{"transformer":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:801","type":"CtForImpl","sourcecode":"for (final java.util.ListIterator<C> java.util.ListIterator<C> = java.util.List<C>.listIterator() ; java.util.ListIterator<C>.hasNext() ; ) {\n    java.util.ListIterator<C>.set(org.apache.commons.collections4.Transformer<? super C, ? extends C>.transform(java.util.ListIterator<C>.next()));\n}"},"status":-1},{"failures":[37,39,40],"tindex":"f74e7fad-13a0-11e5-9c65-73167c63c556","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"j","currentIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:263","type":"CtWhileImpl","sourcecode":"while ((int < int) || (int < int)) {\n    if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n        ++int;\n    } else {\n        if ((int - int) > (int - int)) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        } else {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        }\n    }\n}"},"status":-1},{"failures":[757,758,760,761,762,765,586,796,800,801,803,804,805,808,587,812,588,819,595],"tindex":"f74e7fae-13a0-11e5-9c65-01a82c321ae7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2138","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<V, K>>) == null) {\n    java.util.Set<java.util.Map.Entry<V, K>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseEntryView();\n} "},"variableMap":{"inverseEntrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:416","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.EntryView();\n} "},"status":-1},{"failures":[],"tindex":"f74e7faf-13a0-11e5-9c65-ada02674e14c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:827","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"node":"node","rightChild":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:499","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"f74ea6c0-13a0-11e5-9c65-b70f46ff2db4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1570","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"e":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:211","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":0},{"failures":[831],"tindex":"f74ea6c1-13a0-11e5-9c65-39b3d471c220","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:49","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Closure must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:118","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[750,751,757,758,760,761,762,763,765,583,791,792,793,584,585,586,800,801,802,803,804,805,806,808,587,812,588],"tindex":"f74ea6c2-13a0-11e5-9c65-3be2eb9a5d31","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse = new org.apache.commons.collections4.bidimap.TreeBidiMap.Inverse();\n} "},"status":-1},{"failures":[],"tindex":"f74ecdd3-13a0-11e5-9c65-050bc0805601","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    return ;\n} "},"variableMap":{"oldCapacity":"length","newCapacity":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:146","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<? super E>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<? super E>[][int].evaluate(E)) == true) {\n        org.apache.commons.collections4.Closure<? super E>[][int].execute(E);\n        return ;\n    } \n}"},"status":-2},{"failures":[832,833,834,835,836,837,838,839,840,841,842,843,531,532,844,845,846,847,848,527,849,528,529,850,530,851,852,521,853,523,526,854],"tindex":"f74ecdd4-13a0-11e5-9c65-8b23d9dd0b68","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:398","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\", \")"},"status":-1},{"failures":[587,588,591,592,593,594,595,721,722,596],"tindex":"f74ecdd5-13a0-11e5-9c65-79f8de9eac0d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1179","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.swapColors(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"x":"xFormerLeftChild","y":"xFormerLeftChild","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1112","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        if (boolean) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"f74ecdd6-13a0-11e5-9c65-d3afd4792468","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1423","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(java.util.Map.Entry<?, ?>.getKey())"},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:233","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.ListOrderedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue())"},"status":-2},{"failures":[],"tindex":"f74ecdd7-13a0-11e5-9c65-f552fe9a5c34","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger != null) {\n    return org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n} "},"status":-2},{"failures":[855],"tindex":"f74ecdd8-13a0-11e5-9c65-bb54b52d44b7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"remove() cannot be called\");\n} "},"variableMap":{"nextObjectSet":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:217","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    boolean |= org.apache.commons.collections4.collection.IndexedCollection<K, C>.remove(java.lang.Object);\n}"},"status":-1},{"failures":[856],"tindex":"f74ef4e9-13a0-11e5-9c65-f34f0d00a37f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:578","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedClosure:77","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> : java.util.Collection<org.apache.commons.collections4.Closure<E>>) {\n    org.apache.commons.collections4.Closure<? super E>[][int++] = org.apache.commons.collections4.Closure<? super E>;\n}"},"status":-1},{"failures":[],"tindex":"f74ef4ea-13a0-11e5-9c65-f347398834d8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"rval":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:499","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[857,858,859,860,861,67,68,71,73,74,862],"tindex":"f74ef4eb-13a0-11e5-9c65-412253aa6c09","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:675","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    return false;\n} "},"variableMap":{"entryKey":"obj","entryValue":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:134","type":"CtIfImpl","sourcecode":"if (java.util.Collection<E>.contains(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"f74ef4ec-13a0-11e5-9c65-53b64bc70080","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:147","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[863],"tindex":"f74ef4ed-13a0-11e5-9c65-fbcf35fce7b7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:291","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, java.lang.Object> java.util.Map.Entry<? extends K, java.lang.Object> : ((org.apache.commons.collections4.MultiMap<? extends K, V>)(java.util.Map<? extends K, ?>)).entrySet()) {\n    org.apache.commons.collections4.map.MultiValueMap<K, V>.putAll(java.util.Map.Entry<? extends K, java.lang.Object>.getKey(), ((java.util.Collection<V>)(java.util.Map.Entry<? extends K, java.lang.Object>.getValue())));\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}