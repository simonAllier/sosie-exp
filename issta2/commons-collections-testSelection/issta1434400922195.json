{"failureDictionary":{"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":726,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":454,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":465,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":164,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":102,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":208,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":227,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":305,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":641,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":511,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":512,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":526,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":64,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":498,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":880,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":881,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":882,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":440,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":217,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":422,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":94,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":591,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":803,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testRemove":32,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":88,"org.apache.commons.collections4.CollectionUtilsTest.get":342,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":193,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":849,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":699,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":538,"org.apache.commons.collections4.map.CompositeMapTest.testFullMapCompatibility":157,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":128,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":236,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":460,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":877,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":144,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectEqualsSelf":33,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":204,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":432,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":694,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectEqualsSelf":605,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":679,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":776,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsContract":12,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":199,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":87,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEqualsNull":22,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":386,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":778,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":229,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":416,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":829,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":244,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":184,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":470,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":168,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":550,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEqualsNull":9,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":562,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":739,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":352,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":681,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":733,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":859,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":792,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":508,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":441,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":116,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":317,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":312,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":260,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":313,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":582,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":103,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":575,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":631,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":817,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":691,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":304,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":592,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":0,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalEmptyCollectionExists":23,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":424,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":782,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":809,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsSelfHashCode":52,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":541,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":800,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":864,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":578,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":170,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":123,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":839,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":518,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":548,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":724,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":337,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":597,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsSelfHashCode":26,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":79,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":256,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":571,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":716,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":143,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":167,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":878,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":280,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":281,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":534,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":335,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":479,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":753,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":684,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":675,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":798,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":299,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":300,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":298,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":200,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":272,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":696,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":772,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":685,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":383,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":215,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":426,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":666,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":610,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":163,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":183,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":69,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":807,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":147,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":814,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":323,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":318,"org.apache.commons.collections4.comparators.ComparatorChainTest.testBadListComparatorChain":524,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":628,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":443,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":340,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":788,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":58,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":146,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":833,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSimpleSerialization":24,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEqualsNull":48,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":137,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":279,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":822,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":703,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":396,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":324,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":325,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":642,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":755,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":84,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":712,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":595,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":762,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":211,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":220,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":180,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":486,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":357,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":771,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":452,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":425,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":569,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":126,"org.apache.commons.collections4.comparators.ComparatorChainTest.testNoopComparatorChain":517,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEqualsNull":522,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":689,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":370,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":456,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":655,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":758,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":122,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":810,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":463,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":723,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":242,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":203,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":638,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":450,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":634,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":165,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":594,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":637,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":860,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":561,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":709,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":855,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":580,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":224,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":212,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":435,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":92,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":537,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":61,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":786,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":252,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":251,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":618,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":683,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":533,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":85,"org.apache.commons.collections4.map.LRUMapTest.testReset":419,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":674,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSimpleSerialization":50,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":827,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":549,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":29,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEmptyIterator":30,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":222,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":65,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":530,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":665,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEmptyIterator":4,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":86,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":777,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":458,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":179,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":410,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":138,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":333,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":192,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":358,"org.apache.commons.collections4.map.LinkedMapTest.testReset":408,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":785,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":334,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":60,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":590,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":295,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":613,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":455,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":439,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":113,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":121,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":875,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":82,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":649,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":331,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":816,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":702,"org.apache.commons.collections4.set.MapBackedSetTest.testEqualsNull":405,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":257,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":841,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":401,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":660,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":725,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":748,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":373,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":837,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":478,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":261,"org.apache.commons.collections4.map.CompositeMapTest.testMakeMap":155,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":661,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":532,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":737,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":59,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":392,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":448,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":825,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":437,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":742,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":307,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":711,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":719,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":761,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":485,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":469,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":607,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":303,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":713,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":268,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":394,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":615,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":269,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":824,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":127,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":270,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":542,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":668,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":579,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":604,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":735,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":387,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":577,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":271,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":234,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":466,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":172,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":74,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":406,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEmptyIterator":17,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":76,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":388,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":527,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":492,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":490,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":57,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":78,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":231,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":858,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":230,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":745,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":314,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":453,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":630,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":632,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":499,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":547,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalFullCollectionExists":47,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":418,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":417,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":697,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":409,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":202,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":55,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":819,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":322,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":461,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":139,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":791,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":205,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":266,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":267,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":423,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":559,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":708,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalFullCollectionExists":21,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":774,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":444,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":235,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":763,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":495,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":764,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":328,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":503,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":535,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":633,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testRemove":45,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsContract":25,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":614,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":191,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":566,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":564,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":90,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":97,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":769,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testReset":28,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":544,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":756,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":835,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":194,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectEqualsSelf":46,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":182,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":686,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":793,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":158,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":539,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":237,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":400,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":654,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":558,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":557,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":556,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":670,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":135,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":593,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":515,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":293,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":843,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":447,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":389,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":598,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":411,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":171,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":197,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":62,"org.apache.commons.collections4.map.LRUMapTest.testLRU":421,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":603,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":669,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":622,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":865,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":124,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":770,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":308,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":41,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":520,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectEqualsSelf":20,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":95,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":377,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":799,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":836,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":374,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":80,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":519,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":730,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":707,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":729,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsContract":38,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":676,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":784,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":715,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":472,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":445,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":734,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalFullCollectionExists":8,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":140,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":206,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":360,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":420,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":695,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":574,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":754,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":248,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":89,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":434,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":794,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":728,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":365,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":367,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":294,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":449,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":330,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":514,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":588,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectEqualsSelf":600,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":243,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":336,"org.apache.commons.collections4.comparators.ComparatorChainTest.testListComparatorChain":516,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":117,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":529,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":385,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":66,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":129,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":133,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":5,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":706,"org.apache.commons.collections4.comparators.ComparatorChainTest.testBadNoopComparatorChain":523,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":152,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":286,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":650,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":704,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":464,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":586,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":413,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":414,"org.apache.commons.collections4.CollectionUtilsTest.getFromList":879,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":292,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":226,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":501,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":494,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":259,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":376,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":63,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":624,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":83,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":395,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":672,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":775,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":320,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":667,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":639,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSerializeDeserializeThenCompare":14,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":265,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":781,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":451,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":430,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":680,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":830,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":801,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":384,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":644,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":845,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":488,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":812,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":404,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":442,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":789,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":438,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":491,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":844,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalEmptyCollectionExists":49,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":353,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":852,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":428,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":306,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":403,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":429,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":883,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":54,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":175,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":560,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":673,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":91,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":759,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":361,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":160,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":780,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":356,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":196,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":225,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSerializeDeserializeThenCompare":53,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":109,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":372,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":119,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":289,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":688,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":136,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":862,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":832,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":120,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":779,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":301,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":752,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":285,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":620,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":765,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":568,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":282,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":647,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":77,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":104,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":866,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":757,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":283,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":382,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":159,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":343,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":402,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":368,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":238,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":412,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":141,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":701,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":150,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":773,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":209,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":552,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":545,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":664,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":176,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":500,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":662,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":863,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":474,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":811,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":315,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":648,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":820,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":616,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":145,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":316,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":671,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":787,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":349,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":565,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":201,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":585,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsSelfHashCode":13,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":81,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":44,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":142,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":587,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":797,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":297,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":296,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":738,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":821,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":767,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":740,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":536,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":327,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":623,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":326,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":651,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":309,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":278,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":489,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":838,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":854,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":629,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":612,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":677,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":153,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":656,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":589,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsSelfHashCode":407,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":181,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":749,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":258,"org.apache.commons.collections4.ListUtilsTest.testSubtract":876,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":457,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSimpleSerialization":11,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":705,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":783,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":687,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":415,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":398,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":484,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":107,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":68,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":546,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":870,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":584,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":497,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":433,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":646,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":806,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":105,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":106,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":692,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":861,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":828,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":118,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":635,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":627,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":805,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":717,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":332,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":151,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":476,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":363,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":513,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":253,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":99,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":321,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":341,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":213,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsSelfHashCode":39,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":493,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":101,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":482,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":609,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":818,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":528,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":31,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":682,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":67,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":218,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":626,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":364,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":570,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":362,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":3,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":471,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":602,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEmptyIterator":43,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":148,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":73,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":255,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":241,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":262,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":16,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":608,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":583,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":678,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":446,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":263,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsNull":521,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":766,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":277,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":375,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":857,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":693,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEqualsNull":35,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":750,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":483,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":468,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":233,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":379,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":391,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testRemove":19,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":232,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":228,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":525,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSimpleSerialization":37,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":198,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":747,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":366,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":130,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":625,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":658,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":731,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":606,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":240,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":98,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":344,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":188,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":189,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":190,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":114,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":284,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":275,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":477,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":868,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":502,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":329,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":599,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":369,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":264,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalEmptyCollectionExists":36,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":210,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":18,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":56,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":617,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":842,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":846,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":276,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":831,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":690,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":718,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":848,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testReset":2,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":96,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":221,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":427,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":796,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":815,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":173,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":663,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":714,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":653,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":115,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":480,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":287,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":721,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":869,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":732,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":636,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalEmptyCollectionExists":10,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":381,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":743,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":100,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":813,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":850,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":720,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":847,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":354,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":378,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":390,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":823,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":174,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":768,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":826,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":543,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":371,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":247,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":751,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":601,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":871,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":219,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":487,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":339,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":741,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":481,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":288,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":840,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":736,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":75,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":867,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":436,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":355,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":302,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":351,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":873,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":611,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":149,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":154,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":853,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":216,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":573,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":540,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":884,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":509,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":510,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":727,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":15,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":700,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":572,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":621,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":348,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":110,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":112,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":111,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":659,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":239,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":162,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":195,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":161,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testRemove":6,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":132,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":640,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":746,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":790,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":795,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":551,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":467,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":291,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":338,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":290,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":834,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":156,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":567,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":851,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":760,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":459,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":350,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsContract":51,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":186,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":531,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":187,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":744,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":185,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":254,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":431,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":643,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":553,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":554,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":93,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":131,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":555,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalFullCollectionExists":34,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":710,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":134,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":178,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":652,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":657,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":273,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":475,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":207,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":345,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":563,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":346,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":347,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":310,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":311,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":462,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":581,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":722,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":246,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":1,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":872,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":274,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":698,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":169,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSerializeDeserializeThenCompare":40,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":166,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":177,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":504,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectEqualsSelf":7,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSerializeDeserializeThenCompare":27,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":505,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":397,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":496,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":108,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":71,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":576,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":72,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":596,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":473,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":619,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":808,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":249,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":250,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":42,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":506,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":804,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":125,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":507,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":802,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":223,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":319,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":393,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":359,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":399,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":856,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":214,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":645,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":874,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":380,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":245},"transformations":[{"failures":[],"tindex":"f9d8981c-139e-11e5-a770-2f172ec94236","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:204","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key2","next":"entry","entry":"entry","key2":"key3","previous":"entry","hashCode":"index","this":"this","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:337","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"f9d8bf2d-139e-11e5-a770-ffd7ac91e3da","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:312","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":0},{"failures":[],"tindex":"f9d8e63e-139e-11e5-a770-2d42373cc009","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hash","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:324","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n    if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    } else {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n    (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n    return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n} "},"status":-2},{"failures":[],"tindex":"f9d8e63f-139e-11e5-a770-e54e1303b5f1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2157","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(java.lang.Object, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"object","obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"tindex":"f9d8e640-139e-11e5-a770-a1eae9b15617","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"bound"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s before the start of the array. \"));\n} "},"status":-1},{"failures":[57],"tindex":"f9d8e641-139e-11e5-a770-b7dc84e73976","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:456","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? java.lang.Object : ((java.lang.ref.Reference<K>)(java.lang.Object)).get()"},"variableMap":{"key2":"otherValue","org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.HARD":"otherValue","keyType":"otherValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1167","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = java.util.Map<?, ?>.get(K)"},"status":-1},{"failures":[58,59,60,61,62,63,64,65,66,67,68,69],"tindex":"f9d90d52-139e-11e5-a770-0db600e3eb5e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:384","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    return true;\n} "},"variableMap":{"set":"valueSet","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:315","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.ArrayList<E>.set(int, java.util.Iterator<? extends E>.next());\n    java.util.BitSet.set(int);\n    return true;\n} "},"status":-1},{"failures":[70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142],"tindex":"f9d90d53-139e-11e5-a770-7304c77158f6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.TransformIterator:90","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends I>.remove()"},"variableMap":{"iterator":"lastUsedIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:212","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    } else {\n        java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n    }\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-1},{"failures":[143,144,145,146],"tindex":"f9d98284-139e-11e5-a770-b3c413f687c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"status":-1},{"failures":[],"tindex":"f9d98285-139e-11e5-a770-dd8799288e50","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:195","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[64,65,67],"tindex":"f9d98286-139e-11e5-a770-47478488c9ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"lastReturned","lengthInBits":"lastReturned","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"lastReturned","otherOffsetInBits":"lastReturned","otherLengthInBits":"lastReturned"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"status":-1},{"failures":[102,103,104,105,106,107,108,147,148,109,110,111,112,149,150,113,114,151,152,153,115,154,155,116,156,117,157,118,119,120,121,158,122,123,124,125,126,127,159,160],"tindex":"f9d9a997-139e-11e5-a770-9fa50bae2e6d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:578","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:431","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    int += this.java.util.Map<K, V>[][int].size();\n}"},"status":-1},{"failures":[161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,57,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202],"tindex":"f9d9a998-139e-11e5-a770-cb312608fb79","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.size();\n} "},"status":-1},{"failures":[],"tindex":"f9d9a999-139e-11e5-a770-159dcd16d94b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:276","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.Values<V>(this);\n} "},"status":-2},{"failures":[],"tindex":"f9d9a99a-139e-11e5-a770-29606470431b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:854","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"leftChild":"deletedNode","node":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"f9d9a99b-139e-11e5-a770-0f27d6e133b4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:476","type":"CtWhileImpl","sourcecode":"while (int < (T[].int)) {\n    T[][int++] = null;\n}"},"variableMap":{"array":"obj","length":"length","i":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.KeyValue) {\n    for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n        final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(java.lang.Object));\n        java.util.Map<K, V>.put(org.apache.commons.collections4.KeyValue<K, V>.getKey(), org.apache.commons.collections4.KeyValue<K, V>.getValue());\n    }\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n        final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(java.lang.Object[][int]));\n        if ((java.lang.Object[] == null) || ((java.lang.Object[].int) < 2)) {\n            throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + int));\n        } \n        java.util.Map<K, V>.put(((K)(java.lang.Object[][0])), ((V)(java.lang.Object[][1])));\n    }\n} else {\n    for (int int = 0 ; int < ((java.lang.Object[].int) - 1) ; ) {\n        java.util.Map<K, V>.put(((K)(java.lang.Object[][int++])), ((V)(java.lang.Object[][int++])));\n    }\n}"},"status":-2},{"failures":[],"tindex":"f9d9a99c-139e-11e5-a770-450312637628","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:816","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.keyvalue.MultiKey<?> == null) {\n    throw new java.lang.NullPointerException(\"Key must not be null\");\n} "},"status":-2},{"failures":[203,204,205,206,207,208,209,210,211],"tindex":"f9d9a99d-139e-11e5-a770-555d4f22627b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1179","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.swapColors(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"x":"rval","y":"rval","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[212,213,214],"tindex":"f9d9a99e-139e-11e5-a770-11c0e960b4a0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"uniqueIndex","beforeFirst":"uniqueIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:243","type":"CtIfImpl","sourcecode":"if ((boolean) && (org.apache.commons.collections4.MultiMap<K, C>.containsKey(K))) {\n    throw new java.lang.IllegalArgumentException(\"Duplicate key in uniquely indexed collection.\");\n} "},"status":-1},{"failures":[],"tindex":"f9d9d0af-139e-11e5-a770-01281c8b8357","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1330","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(size())) {\n    return false;\n} "},"variableMap":{"other":"other","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1334","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    try {\n        for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    } catch (final java.lang.ClassCastException ex) {\n        return false;\n    } catch (final java.lang.NullPointerException ex) {\n        return false;\n    }\n} "},"status":0},{"failures":[],"tindex":"f9d9d0b0-139e-11e5-a770-677488e32cb5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"f9d9d0b1-139e-11e5-a770-7346c77c16d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1335","type":"CtTryImpl","sourcecode":"try {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n} catch (final java.lang.ClassCastException ex) {\n    return false;\n} catch (final java.lang.NullPointerException ex) {\n    return false;\n}"},"variableMap":{"other":"other","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1334","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    try {\n        for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    } catch (final java.lang.ClassCastException ex) {\n        return false;\n    } catch (final java.lang.NullPointerException ex) {\n        return false;\n    }\n} "},"status":0},{"failures":[215,163],"tindex":"f9d9d0b2-139e-11e5-a770-7d0e084bc2c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1089","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.map.Flat3Map<K, V>.mapIterator() ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<?, ?>.next());\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<?, ?>.getValue());\n}"},"status":-1},{"failures":[],"tindex":"f9d9d0b3-139e-11e5-a770-a1a8e52b9b2d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtIfImpl","sourcecode":"if ((java.util.SortedMap<K, V>.size()) > 0) {\n    final java.util.Map<K, V> java.util.Map<K, V> = org.apache.commons.collections4.map.TransformedSortedMap<K, V>.transformMap(java.util.SortedMap<K, V>);\n    org.apache.commons.collections4.map.TransformedSortedMap<K, V>.clear();\n    org.apache.commons.collections4.map.TransformedSortedMap<K, V>.decorated().putAll(java.util.Map<K, V>);\n} "},"variableMap":{"map":"normalMap","decorated":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:235","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.BidiMap<V, K>) == null) {\n    org.apache.commons.collections4.BidiMap<V, K> = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.createBidiMap(java.util.Map<V, K>, java.util.Map<K, V>, this);\n} "},"status":-2},{"failures":[216],"tindex":"f9d9d0b4-139e-11e5-a770-5589af223a60","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2364","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.nextEntryInSubtree(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"subtree":"root","prior":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1218","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"f9d9d0b5-139e-11e5-a770-7d47544b9f5c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"end1","currentIndex":"end1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:257","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.sequence.SequencesComparator.Snake == null) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) {\n    int int = int;\n    int int = int;\n    while ((int < int) || (int < int)) {\n        if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n            ++int;\n        } else {\n            if ((int - int) > (int - int)) {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            } else {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            }\n        }\n    }\n} else {\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(int, org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), org.apache.commons.collections4.sequence.EditScript<T>);\n    for (int int = org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart() ; int < (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) ; ++int) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    }\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), int, org.apache.commons.collections4.sequence.EditScript<T>);\n}"},"status":-2},{"failures":[],"tindex":"f9d9d0b6-139e-11e5-a770-5b2142bffdbe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"status":-2},{"failures":[217],"tindex":"f9d9f7c7-139e-11e5-a770-13fc9dbe2fc0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? extends C> instanceof java.util.Collection<?>) {\n    return java.util.Collection<C>.addAll(((java.util.Collection<? extends C>)(java.lang.Iterable<? extends C>)));\n} "},"status":-1},{"failures":[218],"tindex":"f9d9f7c8-139e-11e5-a770-1be9e7960478","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:80","type":"CtIfImpl","sourcecode":"if (java.util.List<E> == null) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"f9d9f7c9-139e-11e5-a770-9f15ac0373ef","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"size","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n} else {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"f9d9f7ca-139e-11e5-a770-5b07fa63aa78","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:708","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"variableMap":{"current":"parent","tree":"tree"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"f9d9f7cb-139e-11e5-a770-a1a62a524d4a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"status":-2},{"failures":[],"tindex":"f9d9f7cc-139e-11e5-a770-3b28f767602d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"status":-2},{"failures":[],"tindex":"f9d9f7cd-139e-11e5-a770-73c6f30a7ac0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtIfImpl","sourcecode":"if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n} else {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-2},{"failures":[],"tindex":"f9d9f7ce-139e-11e5-a770-43415b91e115","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:118","type":"CtIfImpl","sourcecode":"if ((int[][int]) > int) {\n    int = int[][int];\n    int = int;\n} "},"variableMap":{"indexOfLargestMobileInteger":"size","keys":"object","largestKey":"value","i":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:325","type":"CtIfImpl","sourcecode":"if (int < (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int)) {\n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int -= int;\n    int -= int;\n} else {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(java.lang.Object);\n    int -= org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n}"},"status":-2},{"failures":[219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,168,169,171,172,173,176,181,185,186,188,189,199,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328],"tindex":"f9db575f-139e-11e5-a770-4d236765125a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:457","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[329,330,331,332],"tindex":"f9db5760-139e-11e5-a770-6141ef0629f4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:677","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 10"},"status":-1},{"failures":[],"tindex":"f9db5761-139e-11e5-a770-23072b776658","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"index","maxElements":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:553","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n} else {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"f9db5762-139e-11e5-a770-09226b7d9d31","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:134","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    final java.util.Collection<K> java.util.Collection<K> = org.apache.commons.collections4.CollectionUtils.intersection(this.java.util.Map<K, V>[][int].keySet(), java.util.Map<K, V>.keySet());\n    if ((java.util.Collection<K>.size()) != 0) {\n        if ((this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n            throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n        } \n        this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(this, this.java.util.Map<K, V>[][int], java.util.Map<K, V>, java.util.Collection<K>);\n    } \n}"},"status":-2},{"failures":[172,57,194,254,259,263,333,274,277,334,289,293,335,304,307,336,318,321],"tindex":"f9db5763-139e-11e5-a770-936bcd107aff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n    return true;\n} "},"status":-1},{"failures":[58,59,60,61,62,63,64,65,66,67,68,69],"tindex":"f9db5764-139e-11e5-a770-e300ee83ffa5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:315","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.ArrayList<E>.set(int, java.util.Iterator<? extends E>.next());\n    java.util.BitSet.set(int);\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"f9db5765-139e-11e5-a770-3d245e732967","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:553","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n} else {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"f9db7e76-139e-11e5-a770-092484e29816","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1603","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return org.apache.commons.collections4.IteratorUtils.toList(java.util.Iterator<O>, int);\n} else {\n    final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>(int);\n    O O = null;\n    while (java.util.Iterator<O>.hasNext()) {\n        final O O = java.util.Iterator<O>.next();\n        if ((O == null) || (!(O.equals(O)))) {\n            java.util.ArrayList<O>.add(O);\n        } \n        O = O;\n    }\n    java.util.ArrayList<O>.trimToSize();\n    return java.util.ArrayList<O>;\n}"},"status":-2},{"failures":[],"tindex":"f9db7e77-139e-11e5-a770-2712264837ed","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"rval":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"f9db7e78-139e-11e5-a770-4bf42e911dbc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:124","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"f9db7e79-139e-11e5-a770-d5a6cc9c788d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"siblingNode","leftChild":"siblingNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1068","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"f9db7e7a-139e-11e5-a770-bd0ed16fb76b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:757","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[337,338,339,207,340,208,341,209,210,211],"tindex":"f9db7e7b-139e-11e5-a770-736ad40524f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:757","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"f9db7e7c-139e-11e5-a770-994734c4970f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:562","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-2},{"failures":[342,343,344],"tindex":"f9db7e7d-139e-11e5-a770-3343036715d6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    return java.util.Iterator<T>.next();\n} "},"variableMap":{"iterator":"iterator","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1179","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<T>.hasNext()) {\n    int--;\n    if (int == (-1)) {\n        return java.util.Iterator<T>.next();\n    } \n    java.util.Iterator<T>.next();\n}"},"status":-1},{"failures":[],"tindex":"f9db7e7e-139e-11e5-a770-7f7bba8fffed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:808","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"parent":"this","modCount":"newCapacity","expectedModCount":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:638","type":"CtForImpl","sourcecode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n        do {\n            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n    } \n}"},"status":-2},{"failures":[345,346,347,348,349,350,351,352,353,354,355,356],"tindex":"f9dba58f-139e-11e5-a770-df3dd5f5389f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"hasNext","nextCalled":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:163","type":"CtIfImpl","sourcecode":"if (E instanceof java.util.Iterator) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)));\n} else {\n    E = E;\n    boolean = true;\n}"},"status":-1},{"failures":[],"tindex":"f9dba590-139e-11e5-a770-f570b96e4f76","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:385","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) == 0) {\n    return \"[]\";\n} "},"status":0},{"failures":[357,358],"tindex":"f9dba591-139e-11e5-a770-fbf9fa4b95cc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"size","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:175","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-1},{"failures":[359,360,361,362,363,364],"tindex":"f9dba592-139e-11e5-a770-45daa61f83f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1008","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n    java.io.PrintStream.print(\"(this Map)\");\n} else {\n    java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n}"},"status":-1},{"failures":[],"tindex":"f9dba593-139e-11e5-a770-4fcdb70225b2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:676","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} "},"variableMap":{"current":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:766","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,221,222,413,223,224,225,414,226,227,228,229,415,416,417,418,419,420,421,235,422,423,424,239,240,425,241,242,243,244,245,246,247,248,426,427,428,429,165,166,183,168,169,170,171,172,173,176,57,180,181,195,196,197,198,256,257,430,258,259,260,261,262,263,264,265,431,432,433,434,435,271,272,436,273,274,275,437,276,277,278,279,438,439,440,441,442,443,444,301,302,445,303,304,305,446,306,307,308,309,447,448,449,450,451,452,453,454,315,316,455,317,318,319,456,320,321,322,323,457,458,459,460],"tindex":"f9dba594-139e-11e5-a770-b9dd0ad2ddbe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:905","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this)"},"status":-1},{"failures":[],"tindex":"f9dba595-139e-11e5-a770-f3b172371f7e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"node":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501],"tindex":"f9dba596-139e-11e5-a770-d7643f8fb61f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"status":-1},{"failures":[502,503,504,505,506,507,508,509,510,511,512,513],"tindex":"f9dbcca7-139e-11e5-a770-811b9d244845","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:82","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n    } \n}"},"status":-1},{"failures":[514],"tindex":"f9dbcca8-139e-11e5-a770-29123565d31f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.OnePredicate:98","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"variableMap":{"match":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:252","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n} "},"status":-1},{"failures":[],"tindex":"f9dbcca9-139e-11e5-a770-1d63e5f944e5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1016","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.EqualPredicate:109","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Equator<T>) != null) {\n    return org.apache.commons.collections4.Equator<T>.equate(T, T);\n} else {\n    return T.equals(T);\n}"},"status":-2},{"failures":[515,516,517,518,519,520],"tindex":"f9dbccaa-139e-11e5-a770-43f9852bcac0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"retval","maxElements":"retval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:280","type":"CtIfImpl","sourcecode":"if ((java.util.BitSet.get(int)) == true) {\n    if (int > 0) {\n        int = -1;\n    } else {\n        int = 1;\n    }\n} "},"status":-1},{"failures":[74,77,86],"tindex":"f9dbccab-139e-11e5-a770-7b8750bcacf5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"i","index":"i","beyond":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:165","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.CompositeSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; int++) {\n    java.lang.Object[][int] = java.util.Iterator<E>.next();\n}"},"status":-1},{"failures":[],"tindex":"f9dbccac-139e-11e5-a770-9d17aa4591d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"status":-2},{"failures":[64],"tindex":"f9dbccad-139e-11e5-a770-2526fda0d665","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"lastReturned","maxElements":"lastReturned"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"status":-1},{"failures":[],"tindex":"f9dbccae-139e-11e5-a770-c15fd3158000","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtIfImpl","sourcecode":"if ((java.util.SortedMap<K, V>.size()) > 0) {\n    final java.util.Map<K, V> java.util.Map<K, V> = org.apache.commons.collections4.map.TransformedSortedMap<K, V>.transformMap(java.util.SortedMap<K, V>);\n    org.apache.commons.collections4.map.TransformedSortedMap<K, V>.clear();\n    org.apache.commons.collections4.map.TransformedSortedMap<K, V>.decorated().putAll(java.util.Map<K, V>);\n} "},"variableMap":{"map":"map","decorated":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:91","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(java.util.Map<K, V>)"},"status":-2},{"failures":[463,521,483,522],"tindex":"f9dbccaf-139e-11e5-a770-dfb0a6e9af1a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:172","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object.getClass().equals(java.lang.Object.getClass()))) {\n    return false;\n} "},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.List) == false) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"f9dbccb0-139e-11e5-a770-c51f577de568","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:126","type":"CtInvocationImpl","sourcecode":"((org.apache.commons.collections4.ResettableIterator<? extends E>)(java.util.Iterator<? extends E>)).reset()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:87","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>.hasNext()) == false) {\n    org.apache.commons.collections4.iterators.LoopingIterator<E>.reset();\n} "},"status":-2},{"failures":[221,222,223,224,225,226,227,228,229,239,240,241,242,243,245,246,247,248,168,169,171,172,173,176,57,180,181,256,257,258,259,260,262,263,264,265,271,272,273,274,275,276,277,278,279,286,287,288,289,290,292,293,294,295,301,302,303,304,305,306,307,308,309,315,316,317,318,319,320,321,322,323],"tindex":"f9dbf3c1-139e-11e5-a770-658128519da4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1397","type":"CtReturnImpl","sourcecode":"return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0"},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n        return false;\n    } \n} else {\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"f9dbf3c2-139e-11e5-a770-a319ab8450ef","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.EditScript:106","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.sequence.EditCommand<T> org.apache.commons.collections4.sequence.EditCommand<T> : java.util.List<org.apache.commons.collections4.sequence.EditCommand<T>>) {\n    org.apache.commons.collections4.sequence.EditCommand<T>.accept(org.apache.commons.collections4.sequence.CommandVisitor<T>);\n}"},"status":-2},{"failures":[523,524],"tindex":"f9dbf3c3-139e-11e5-a770-f5f109c5aaf5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.ListOrderedSet:84","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Set and List must be empty\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:252","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"ComparatorChains must contain at least one Comparator\")"},"status":-1},{"failures":[525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570],"tindex":"f9dbf3c4-139e-11e5-a770-636395c0ac92","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:202","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[571,572],"tindex":"f9dbf3c5-139e-11e5-a770-21cc081ceac8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:721","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n} "},"variableMap":{"listIterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:125","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof org.apache.commons.collections4.ResettableIterator) {\n    ((org.apache.commons.collections4.ResettableIterator<? extends E>)(java.util.Iterator<? extends E>)).reset();\n} "},"status":-1},{"failures":[573,574,575,576,577,578,579,580,581,582,583,584,585,586,337,587,338],"tindex":"f9dbf3c6-139e-11e5-a770-6b3e5ebbf809","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"nodeCount","currentIndex":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1360","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n    }\n} "},"status":-1},{"failures":[365,371,372,377,379,392,393,398,400,145,229,588,589,590,591],"tindex":"f9dbf3c7-139e-11e5-a770-b96d4784a6b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"hashIndex","lengthInBits":"hashIndex","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"hashIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:583","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} else {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"f9dbf3c8-139e-11e5-a770-a7c005357842","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:138","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Closure<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Closure<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + int) + \" was null\"));\n    } \n}"},"status":-2},{"failures":[],"tindex":"f9dc1ad9-139e-11e5-a770-9b3d8faf7d28","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"relativePosition","lengthInBits":"relativePosition","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"relativePosition","otherOffsetInBits":"relativePosition","otherLengthInBits":"relativePosition"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:186","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) != null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(java.lang.Object[], org.apache.commons.collections4.list.TreeList.AVLNode<E>.int);\n} "},"status":-2},{"failures":[],"tindex":"f9dc1ada-139e-11e5-a770-af46da6bc32e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1038","type":"CtWhileImpl","sourcecode":"while (true) {\n    final K K = ((K)(java.io.ObjectInputStream.readObject()));\n    if (K == null) {\n        break;\n    } \n    final V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.put(K, V);\n}"},"status":-2},{"failures":[164,165,166,167,168,169,170,171,172,173,174,175,176,177,57,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202],"tindex":"f9dc1adb-139e-11e5-a770-77c768ba95e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:291","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n} "},"status":-1},{"failures":[],"tindex":"f9dc1adc-139e-11e5-a770-1bf0cf199342","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:205","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"variableMap":{"key1":"key3","entry":"entry","key2":"key3","previous":"entry","hashCode":"hashCode","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:559","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2},{"failures":[],"tindex":"f9dc1add-139e-11e5-a770-a5e2a0009839","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:297","type":"CtIfImpl","sourcecode":"if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n    return false;\n} "},"variableMap":{"composite":"composite","i":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:296","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":"f9dc1ade-139e-11e5-a770-e58bef34e8f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:332","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<O>.evaluate(O)) {\n    org.apache.commons.collections4.bag.HashBag<O>.add(O);\n} "},"status":-2},{"failures":[],"tindex":"f9dc1adf-139e-11e5-a770-39af5d99078b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:970","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY","deletedNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:502","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[592],"tindex":"f9dc1ae0-139e-11e5-a770-bd046ca27f44","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.IfClosure:76","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Closure<? super E> == null) || (org.apache.commons.collections4.Closure<? super E> == null)) {\n    throw new java.lang.IllegalArgumentException(\"Closures must not be null\");\n} "},"variableMap":{"falseClosure":"iTrueClosure","trueClosure":"iTrueClosure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.IfClosure:119","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    org.apache.commons.collections4.Closure<? super E>.execute(E);\n} else {\n    org.apache.commons.collections4.Closure<? super E>.execute(E);\n}"},"status":-1},{"failures":[],"tindex":"f9dc1ae1-139e-11e5-a770-5b9861290fbf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:188","type":"CtIfImpl","sourcecode":"if ((T[].int) >= int) {\n    java.lang.Object[] = T[];\n} else {\n    java.lang.Object[] = ((java.lang.Object[])(java.lang.reflect.Array.newInstance(T[].getClass().getComponentType(), int)));\n}"},"variableMap":{"result":"object","size":"total","array":"object","length":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int++;\n        java.util.Enumeration<?>.nextElement();\n    }\n} else {\n    try {\n        int = java.lang.reflect.Array.getLength(java.lang.Object);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"f9dc40f2-139e-11e5-a770-cd686e08f3ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:363","type":"CtForImpl","sourcecode":"for (int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n}"},"status":-2},{"failures":[],"tindex":"f9dc40f3-139e-11e5-a770-0b7a1e5ff762","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:432","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<K>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:398","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<java.util.Map.Entry<K, V>>emptyOrderedIterator();\n} "},"status":-2},{"failures":[],"tindex":"f9dc40f4-139e-11e5-a770-9ff03d371f9c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:378","type":"CtForEachImpl","sourcecode":"for (java.util.Set<E> java.util.Set<E> : java.util.Set<E>[]) {\n    org.apache.commons.collections4.set.CompositeSet<E>.addComposited(java.util.Set<E>);\n}"},"status":-2},{"failures":[],"tindex":"f9dc40f5-139e-11e5-a770-c5531ebb1dd2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"f9dc40f6-139e-11e5-a770-43ce5b4fd3ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:115","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[],"tindex":"f9dc40f7-139e-11e5-a770-efce7b91de45","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:104","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> : java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>>) {\n    org.apache.commons.collections4.Predicate<T>[][int] = org.apache.commons.collections4.Predicate<T>;\n    if ((org.apache.commons.collections4.Predicate<T>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + int) + \" was null\"));\n    } \n    int++;\n}"},"status":0},{"failures":[],"tindex":"f9dc40f8-139e-11e5-a770-79300c53e3b4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:130","type":"CtIfImpl","sourcecode":"if (K == null) {\n    throw new java.lang.NullPointerException(\"Key cannot be null\");\n} "},"status":-2},{"failures":[461,593,594,595,462,463,464,465,466,467,468,469,596,597,478,479,598,480,470,471,472,473,474,475,476,477,599,600,481,482,483,484,485,486,487,488,489,490,601,602,499,500,603,501,491,492,493,494,495,496,497,498,604,605],"tindex":"f9dc40f9-139e-11e5-a770-8d805181c022","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:352","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"f9dc40fa-139e-11e5-a770-7d0a8c987952","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:379","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V> == null) || ((java.util.Collection<V>.size()) == 0)) {\n    return false;\n} "},"variableMap":{"values":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:338","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    return false;\n} "},"status":0},{"failures":[606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877],"tindex":"f9dc40fb-139e-11e5-a770-cd1c2afd49df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(E);\n    int += int;\n    if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n        return true;\n    } \n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int += int;\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"f9dc680c-139e-11e5-a770-d3d82949b2d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"status":-2},{"failures":[],"tindex":"f9dc680d-139e-11e5-a770-3d6fa651fdbb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1770","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.ViewIterator.navigatePrevious().getValue()"},"variableMap":{"this":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:160","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-2},{"failures":[878,344,879],"tindex":"f9dc680e-139e-11e5-a770-0f98e6f3b9e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1213","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.checkIndexBounds(int)"},"status":-1},{"failures":[216,880,881,882,883,884],"tindex":"f9dc680f-139e-11e5-a770-3fe6e20a12a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:439","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}