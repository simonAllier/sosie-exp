{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":643,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":728,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":329,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":117,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":193,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":205,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":148,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":748,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":679,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":596,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":762,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":94,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":720,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":369,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":438,"org.apache.commons.collections4.CollectionUtilsTest.collect":745,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":441,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFullIterator":127,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":547,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":443,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":442,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":42,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsSelfHashCode":516,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":671,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":343,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":314,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":172,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":323,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":668,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":676,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":669,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":453,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":100,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalEmptyCollectionExists":598,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":63,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":564,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":666,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":270,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":400,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":281,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":366,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":2,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":6,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":633,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":661,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":338,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":378,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":207,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":102,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":756,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":576,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":45,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":85,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":220,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":321,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":315,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":690,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":52,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":465,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":475,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":324,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":523,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":650,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":670,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":181,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":424,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":292,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":213,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":293,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":370,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":198,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":386,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":612,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":53,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":578,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":192,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":601,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":583,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":416,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":644,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":685,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":151,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":390,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":49,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":175,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":634,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":458,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":68,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":209,"org.apache.commons.collections4.map.ReferenceMapTest.testEmptyMapCompatibility":497,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":505,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":490,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":30,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":37,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":31,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":32,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":683,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":282,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":481,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":551,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":742,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":280,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":509,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":279,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":13,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":169,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":276,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":339,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":410,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":349,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":603,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":659,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":414,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":273,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":219,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":99,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":534,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":187,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":182,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":291,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":116,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":615,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":88,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":565,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":158,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":392,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":26,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":574,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":426,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":628,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":406,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":649,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":149,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":121,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":113,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":48,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":707,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":263,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":467,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":575,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":61,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":285,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":154,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":611,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":635,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":726,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":385,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":233,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":3,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":147,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":297,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":330,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":347,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testRemoveThenSet":87,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":326,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":642,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":696,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":403,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":401,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":504,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":367,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":579,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":202,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":28,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":364,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":684,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":569,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":91,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":517,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":627,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":239,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":346,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":283,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":345,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":618,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":450,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":66,"org.apache.commons.collections4.map.LRUMapTest.testReset":560,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":632,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":540,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":608,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":767,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":46,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":459,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":200,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":95,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":538,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":70,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":156,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":639,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":304,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":277,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":530,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":322,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":570,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":39,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":90,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":313,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":577,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":278,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":348,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":41,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":59,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":178,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":210,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":589,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":246,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":163,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":252,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":160,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":741,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":529,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":533,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":677,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":325,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":449,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":89,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":105,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":355,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":417,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":18,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":537,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":554,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":195,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":431,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":162,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":134,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":141,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":503,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":706,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":732,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":412,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":191,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":319,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":764,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":243,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":320,"org.apache.commons.collections4.map.HashedMapTest.testClone":522,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":62,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":545,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":637,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":686,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":391,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectEqualsSelf":514,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":19,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":240,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":388,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":12,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":446,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":312,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":27,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":483,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":729,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":223,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":109,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":567,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":681,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":71,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":713,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":711,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":112,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":511,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":365,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":303,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":264,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":298,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":274,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":721,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":126,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":382,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":104,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":689,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":311,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":341,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":389,"org.apache.commons.collections4.map.LinkedMapTest.testClone":525,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":123,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalFullCollectionExists":599,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":157,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":258,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":301,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":186,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":759,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":1,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":542,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":543,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":24,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":544,"org.apache.commons.collections4.MapUtilsTest.testEmptyIfNull":602,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":261,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":260,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":259,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":344,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":47,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":694,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":553,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":405,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":142,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":571,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":563,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":716,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":271,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":451,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":409,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":334,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":396,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":700,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":698,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":275,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":399,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":398,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":498,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":397,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":687,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":539,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":335,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":592,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":170,"org.apache.commons.collections4.CollectionUtilsTest.find":362,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":420,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":454,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":407,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":572,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":623,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":357,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":464,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":463,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":419,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":462,"org.apache.commons.collections4.MapUtilsTest.testPopulateMap":768,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":744,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":757,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":174,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":536,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":499,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":296,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":241,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":305,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":672,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":222,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":92,"org.apache.commons.collections4.map.LRUMapTest.testLRU":562,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":60,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":444,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":607,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":196,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":287,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":177,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":360,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":159,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":584,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":176,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":165,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":327,"org.apache.commons.collections4.map.LinkedMapTest.testInitialCapacityZero":526,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":734,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":645,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":433,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":0,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":124,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":582,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":74,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":568,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":487,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":394,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":384,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":84,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":238,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":10,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":29,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":79,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":164,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":272,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":358,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":673,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":502,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":106,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":131,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":588,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":308,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":373,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":234,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":36,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":295,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":753,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":294,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":56,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":447,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":513,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":96,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":425,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":755,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":376,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":267,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":488,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":548,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":132,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":374,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":727,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":648,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":678,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":496,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":204,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":723,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":715,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":50,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":212,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":253,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":93,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":146,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":631,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":184,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":439,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":440,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":217,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":532,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":166,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":667,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":709,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":541,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":290,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":40,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":83,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":621,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":654,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":655,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":653,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":476,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":500,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":591,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":194,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":80,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":248,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":350,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":695,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":75,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":765,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":510,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":486,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":479,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":518,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":203,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":251,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":58,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":492,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":363,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":758,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":750,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":189,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":144,"org.apache.commons.collections4.map.CompositeMapTest.testGet":173,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":435,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":485,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":641,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":466,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":739,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":33,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testCanonicalFullCollectionExists":557,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":411,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":138,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":288,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":35,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":34,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":257,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":515,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":247,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":250,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":300,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":432,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":573,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":760,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":751,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":640,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":119,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":692,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":457,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":225,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":103,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":722,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":763,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":625,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":736,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsSelfHashCode":552,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":179,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":617,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":302,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":180,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":652,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":143,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":11,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":473,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":699,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":340,"org.apache.commons.collections4.map.ReferenceMapTest.testCanonicalFullCollectionExists":521,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":605,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":647,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":480,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testSet":86,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":761,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":375,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":675,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":749,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":507,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":506,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":610,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":646,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":508,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":139,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":188,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":452,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":266,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":265,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":133,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":197,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":25,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":710,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":8,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":636,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":658,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":657,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":656,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":352,"org.apache.commons.collections4.map.LRUMapTest.testClone":561,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":309,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":226,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":107,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":342,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":211,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":434,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":269,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":616,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":629,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":421,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":423,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":310,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":356,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":705,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":98,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":688,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":372,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testInitialCapacityZero":559,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":718,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":9,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":445,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":57,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":624,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":468,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":724,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":72,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testCanonicalEmptyCollectionExists":556,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":738,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":77,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":351,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":185,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":118,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":51,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":714,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":129,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":703,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":682,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":97,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":594,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":664,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":78,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":702,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":377,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":76,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":495,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":733,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":630,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":354,"org.apache.commons.collections4.map.HashedMapTest.testInitialCapacityZero":524,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":65,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":527,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":214,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":232,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":413,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":168,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":371,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":215,"org.apache.commons.collections4.map.ReferenceMapTest.testCanonicalEmptyCollectionExists":520,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":613,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":597,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":22,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":316,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":167,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":519,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":289,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":638,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":128,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":704,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":752,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":731,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":208,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":437,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":307,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":361,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":306,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":430,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":268,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":206,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":680,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":318,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":512,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":393,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":38,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":21,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":549,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":337,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":249,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":593,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":136,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":155,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":299,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":546,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEmptyMapCompatibility":535,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":231,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":332,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":333,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":227,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":44,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":740,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":153,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":622,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":130,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":482,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":216,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":746,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":120,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":286,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":580,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":353,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":4,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":620,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":20,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":262,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":199,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":171,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":590,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":101,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":662,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":224,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":428,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":429,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":54,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":122,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":381,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":743,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":489,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":566,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":125,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":256,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":766,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":626,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":408,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":150,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":477,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":254,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":380,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":614,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":418,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":558,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":456,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":359,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectEqualsSelf":550,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":237,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":708,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":114,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":674,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":712,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":491,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":609,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":152,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":14,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":478,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":190,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":474,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":619,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":415,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":383,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":600,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":23,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":402,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":455,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":395,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":108,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":284,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":663,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":472,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":230,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":422,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":427,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":218,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":336,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":501,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":145,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":404,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":691,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":730,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":660,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":69,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":494,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":493,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":701,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":140,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":317,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":581,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":448,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":137,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":528,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":7,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":460,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":461,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":64,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":693,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":82,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":651,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":81,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":737,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":115,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":595,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":469,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":697,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":470,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":471,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":368,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":725,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":236,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":665,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":379,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":16,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":161,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":221,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":111,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":110,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":331,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":754,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":604,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":244,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":717,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":228,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":555,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":387,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":587,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":735,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":5,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":436,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":484,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":585,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":586,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":201,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":183,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":242,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":73,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":245,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":719,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":606,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":229,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":531,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":328,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":135,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":255,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":747,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":235},"transformations":[{"failures":[],"tindex":"a8106fb0-13a1-11e5-b99d-db4efd0991cb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:320","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"variableMap":{"mapSize":"oldCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":"a8113301-13a1-11e5-b99d-8f4cef7fad23","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n    do {\n        final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n} "},"status":-2},{"failures":[0,1,2,3],"tindex":"a8115a12-13a1-11e5-b99d-27000e6b65e3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:701","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"a8115a13-13a1-11e5-b99d-0140549bac66","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:163","type":"CtIfImpl","sourcecode":"if (E instanceof java.util.Iterator) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)));\n} else {\n    E = E;\n    boolean = true;\n}"},"status":-2},{"failures":[4],"tindex":"a8115a14-13a1-11e5-b99d-111cc7b6d612","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:249","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    final K K = java.util.Map.Entry<? extends K, ? extends V>.getKey();\n    final boolean boolean = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.containsKey(K);\n    org.apache.commons.collections4.map.ListOrderedMap<K, V>.put(int, java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n    if (!boolean) {\n        int++;\n    } else {\n        int = org.apache.commons.collections4.map.ListOrderedMap<K, V>.(indexOf(java.util.Map.Entry<? extends K, ? extends V>.getKey())) + 1;\n    }\n}"},"status":-1},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"a8115a15-13a1-11e5-b99d-4f4a0e3368bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"status":-1},{"failures":[48,49],"tindex":"a8115a16-13a1-11e5-b99d-af99c1e79785","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:208","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n} "},"variableMap":{"entry":"reuse","header":"reuse"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:251","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    boolean = true;\n    break;\n} "},"status":-1},{"failures":[],"tindex":"a8118127-13a1-11e5-b99d-330a18d69edf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"status":-2},{"failures":[50,51,52,53],"tindex":"a8118128-13a1-11e5-b99d-1f43497be0b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:675","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    return false;\n} "},"variableMap":{"entryKey":"value","entryValue":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:251","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"a8118129-13a1-11e5-b99d-a7e4ec4a6df1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"key1","i":"hashCode","key":"key3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:558","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"a811812a-13a1-11e5-b99d-f3098840fa3f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1725","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(java.lang.Object)"},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:323","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n        if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        } else {\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        }\n        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n        return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-2},{"failures":[54,55,56,57,58,59,60,61,62,63,64,65,66,67],"tindex":"a811a83b-13a1-11e5-b99d-012abd12b3d0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) == 0) {\n    return false;\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:246","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (org.apache.commons.collections4.set.CompositeSet<E>.(contains(java.lang.Object)) == false) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"a811a83c-13a1-11e5-b99d-4dbfd4eab738","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:116","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayListIterator<E>.(hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"a811a83d-13a1-11e5-b99d-8f9c85734ee8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"endIndex2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:88","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-2},{"failures":[68,69],"tindex":"a811a83e-13a1-11e5-b99d-395ae74ffb46","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1641","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"nextNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:952","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[70],"tindex":"a8121d6f-13a1-11e5-b99d-fbe8f73931dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:544","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"equator may not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:792","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"status":-1},{"failures":[],"tindex":"a8121d70-13a1-11e5-b99d-bf0b8e259c44","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:425","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n        while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n            int += org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.hashCode();\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"a8121d71-13a1-11e5-b99d-59131e1e813b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"this":"key","i":"length","object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"status":-2},{"failures":[71,72],"tindex":"a812e0c2-13a1-11e5-b99d-554988ba0cdd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:341","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<E>) != null) {\n    throw new java.lang.IllegalStateException(\"Can\\'t do that after next or hasNext has been called.\");\n} "},"variableMap":{"values":"toAdd"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:329","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.util.List<E>.addAll(int, java.util.List<E>);\n} "},"status":-1},{"failures":[],"tindex":"a812e0c3-13a1-11e5-b99d-5326ed003df6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    boolean boolean = false;\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n        boolean = boolean || boolean;\n    }\n    return boolean;\n} else {\n    return org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated().removeAll(null);\n}"},"variableMap":{"coll":"coll","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    boolean boolean = false;\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n            boolean = true;\n        } \n    }\n    return boolean;\n} else {\n    return org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated().retainAll(null);\n}"},"status":-2},{"failures":[73,74,75,76,77,78],"tindex":"a812e0c4-13a1-11e5-b99d-9d89ac1082b3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"lineageIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1008","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n    java.io.PrintStream.print(\"(this Map)\");\n} else {\n    java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n}"},"status":-1},{"failures":[],"tindex":"a812e0c5-13a1-11e5-b99d-5784fa158ad6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"status":-2},{"failures":[79,80,81,82],"tindex":"a81307d6-13a1-11e5-b99d-c5af29b9cb85","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:238","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, java.lang.Object> java.util.Map.Entry<K, java.lang.Object> : java.util.Set<java.util.Map.Entry<K, java.lang.Object>>) {\n    if (((java.util.Collection<V>)(java.util.Map.Entry<K, java.lang.Object>.getValue())).contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"a81307d7-13a1-11e5-b99d-7518d94f6573","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:306","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"variableMap":{"next":"entry","entry":"entry","previous":"entry","loop":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:642","type":"CtDoImpl","sourcecode":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null )"},"status":0},{"failures":[83,84,85],"tindex":"a81307d8-13a1-11e5-b99d-cf13862cc8a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1470","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> instanceof org.apache.commons.collections4.BoundedCollection) {\n    return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).isFull();\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:159","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (!org.apache.commons.collections4.list.AbstractLinkedList<E>.(contains(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"a81307d9-13a1-11e5-b99d-5f6f4755fed7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:568","type":"CtIfImpl","sourcecode":"if (java.util.Map<?, ?> == null) {\n    java.util.Map<?, ?> = java.util.Map<?, ?>;\n} "},"variableMap":{"answer":"mapToCopy","defaultValue":"mapToCopy"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:186","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.PredicatedMap<K, V>.validate(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[86,87],"tindex":"a81355fa-13a1-11e5-b99d-371da6015775","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:158","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"status":-1},{"failures":[88,89,90,91,92,93,94,95,96,97,98,99],"tindex":"a81355fb-13a1-11e5-b99d-31f1393b8ea5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"i","removeIndex":"i","currentIndex":"leastIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:360","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    int = int;\n    E = java.util.ArrayList<E>.get(int);\n} else {\n    final E E = java.util.ArrayList<E>.get(int);\n    if ((java.util.Comparator<? super E>) == null) {\n        throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n    } \n    if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n        E = E;\n        int = int;\n    } \n}"},"status":-1},{"failures":[],"tindex":"a823f7cc-13a1-11e5-b99d-353eb02eb6b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:897","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"currentNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:520","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[],"tindex":"a8257e6d-13a1-11e5-b99d-7f41ec820ae4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:142","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n}"},"variableMap":{"header":"next","after":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:242","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n            return true;\n        } \n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[100,101,102,103,104,105,106,107,108,109,110,111],"tindex":"a825a57e-13a1-11e5-b99d-fbc156b311a4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:135","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:233","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"a825a57f-13a1-11e5-b99d-575280163548","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:297","type":"CtIfImpl","sourcecode":"if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n    return false;\n} "},"variableMap":{"composite":"key","i":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:225","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"a825a580-13a1-11e5-b99d-353c2e16dba9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:344","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    return V;\n} "},"variableMap":{"entry":"entry","previous":"entry","hashCode":"hashCode","this":"this","index":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:183","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"a825a581-13a1-11e5-b99d-7fcc364c13a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1167","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[112,113],"tindex":"a825cc92-13a1-11e5-b99d-05a3dd81dd86","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"variableMap":{"obj":"otherValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1154","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n            return false;\n        } \n        java.lang.Object = java.util.Map<?, ?>.get(K);\n        if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n            return false;\n        } \n    case 2 :\n        if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n            return false;\n        } \n        java.lang.Object = java.util.Map<?, ?>.get(K);\n        if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n            return false;\n        } \n    case 1 :\n        if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n            return false;\n        } \n        java.lang.Object = java.util.Map<?, ?>.get(K);\n        if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n            return false;\n        } \n}"},"status":-1},{"failures":[68,69,114,115,116,117,118,119,120,121],"tindex":"a825cc93-13a1-11e5-b99d-dff8a4b4aec8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:828","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"from","rightChild":"to","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[122,123,124,125,126,127,128,129],"tindex":"a825cc94-13a1-11e5-b99d-d3efbb27d32e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"callCounter"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:83","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if ((java.util.Iterator<? extends E>) == null) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n        boolean = true;\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-1},{"failures":[130,131],"tindex":"a825cc95-13a1-11e5-b99d-f3cec20ea39d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:671","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172],"tindex":"a8272c26-13a1-11e5-b99d-5959ee319b4f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:436","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        java.lang.Object[][int++] = E;\n    }\n}"},"status":-1},{"failures":[173,60],"tindex":"a82a8787-13a1-11e5-b99d-df83fe66088a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"status":-1},{"failures":[174,175,176,177],"tindex":"a82a8788-13a1-11e5-b99d-b5410fc0b6df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"comparatorIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:280","type":"CtIfImpl","sourcecode":"if ((java.util.BitSet.get(int)) == true) {\n    if (int > 0) {\n        int = -1;\n    } else {\n        int = 1;\n    }\n} "},"status":-1},{"failures":[178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,112,113,226,227,6,7,12,13,15,16,17,20,22,25,26,35,228,229,48,49,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257],"tindex":"a82a8789-13a1-11e5-b99d-7bdd25f78c38","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2016","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:225","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"a82aae9a-13a1-11e5-b99d-353250902b98","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:190","type":"CtIfImpl","sourcecode":"if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n    int[][int] = int[][(int + 1)];\n} else {\n    int[][int] = (int[][(int - 1)]) + 1;\n}"},"status":-2},{"failures":[],"tindex":"a82aae9b-13a1-11e5-b99d-e57ffe22d2f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:614","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int)"},"variableMap":{"newCapacity":"length","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    final int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) * 2;\n    if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n    } \n} "},"status":-2},{"failures":[258,259,260,261,262,263,264,187,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,197,292,293,294,295,296,297,298,299,300,301,302,303,304,305,207,306,307,308,309,310,311,312,313,314,315,316,317,318,213,217,319,320,321,322,323,324,325,326,327,328,329,330,331,226,332,333,334,335,336,337,338,339,340,341,8,9,10,26,33,34,36,39,40,43,44,45,46,47,342,343,344,238,345,346,347,348,349,350,351,352,353,354,355,242,356,357,358,359,251,360,361],"tindex":"a82aae9c-13a1-11e5-b99d-1bbdaf853f70","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"a82aae9d-13a1-11e5-b99d-0d96adf51e18","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:68","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : java.util.AbstractMap<K, V>.entrySet()) {\n    java.lang.StringBuilder.append(\"  \").append(java.util.Map.Entry<K, V>).append(\"\\n\");\n}"},"status":0},{"failures":[],"tindex":"a82aae9e-13a1-11e5-b99d-0b34f0179f13","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:853","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","leftChild":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[70],"tindex":"a82b98ff-13a1-11e5-b99d-f7d39a953bac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:803","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey() : null"},"variableMap":{"nextEntry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:789","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey();\n} else {\n    throw new java.util.NoSuchElementException();\n}"},"status":-1},{"failures":[362],"tindex":"a82b9900-13a1-11e5-b99d-b51c3c77a219","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:643","type":"CtForEachImpl","sourcecode":"for (final T T : java.lang.Iterable<T>) {\n    if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n        return T;\n    } \n}"},"variableMap":{"predicate":"predicate","collection":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:642","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<T> != null) && (org.apache.commons.collections4.Predicate<? super T> != null)) {\n    for (final T T : java.lang.Iterable<T>) {\n        if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n            return T;\n        } \n    }\n} "},"status":-1},{"failures":[363,364,365,366,367,368,369,370,371,372,373,374,68,375,69,376,116,377,378,117,379,2,380,3,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411],"tindex":"a82b9901-13a1-11e5-b99d-19d8b5134c8e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:373","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.TreeBidiMap.KeyView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[412,413,414,415],"tindex":"a82b9902-13a1-11e5-b99d-87bea4ba4c02","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:336","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    if (!(org.apache.commons.collections4.bag.HashBag<O>.remove(O, 1))) {\n        java.util.ArrayList<O>.add(O);\n    } \n}"},"status":-1},{"failures":[416,417,418,419,420,421],"tindex":"a82b9903-13a1-11e5-b99d-55d9bfa014fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:377","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"variableMap":{"size":"count","maxSize":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.PredicatedBag:94","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.PredicatedBag<E>.decorated().add(E, int)"},"status":-1},{"failures":[],"tindex":"a82bc014-13a1-11e5-b99d-ef9e7c59bd92","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n} else {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"a82bc015-13a1-11e5-b99d-9d5637dc34f4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:59","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.set.UnmodifiableSortedSet<E>(java.util.SortedSet<E>)"},"status":-2},{"failures":[422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467],"tindex":"a82bc016-13a1-11e5-b99d-7134b9457d58","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:762","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[130,131,178,468],"tindex":"a82bc017-13a1-11e5-b99d-7313d8900f4f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:806","type":"CtIfImpl","sourcecode":"if (org.w3c.dom.Node == null) {\n    throw new java.lang.NullPointerException(\"Node must not be null\");\n} "},"variableMap":{"node":"key3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:509","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"a82bc018-13a1-11e5-b99d-d52b8369aff2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:394","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.ValueView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"a82bc019-13a1-11e5-b99d-8f89af0d1bc4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"leastIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:359","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    if (int == (-1)) {\n        int = int;\n        E = java.util.ArrayList<E>.get(int);\n    } else {\n        final E E = java.util.ArrayList<E>.get(int);\n        if ((java.util.Comparator<? super E>) == null) {\n            throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n        } \n        if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n            E = E;\n            int = int;\n        } \n    }\n} "},"status":-2},{"failures":[469,470,471,472,473,474,475,476,477,478,479],"tindex":"a82bc01a-13a1-11e5-b99d-d30b71a53453","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} "},"variableMap":{"lastUsedIterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:179","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> != (java.util.Iterator<? extends E>)) {\n    if ((java.util.Iterator<? extends E>) != null) {\n        org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-1},{"failures":[480,481,482,483,484,186,485,486,275,276,277,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,278,503,504,505,506,507,508,279,280,509,281,510,511,282,283,512,513,284,285,286,287,288,514,515,516,517,518,519,520,521,522,523,524,196,525,526,206,527,528,529,530,316,317,318,531,209,210,532,211,212,213,533,534,214,535,536,215,537,538,216,217,539,540,541,542,543,544,319,320,545,321,546,547,322,323,548,549,324,325,326,327,328,550,551,552,553,554,555,556,557,218,113,558,559,6,25,560,561,562,563,228,229,48,49,564,565,566,567,568,569,570,571,572,573,342,343,344,574,230,231,575,232,233,234,576,577,235,578,579,236,580,581,237,238,582,583,584,585,586,587,345,346,239,347,588,589,348,349,590,591,350,351,352,353,354,592,593,594,595,596,597,598,599,600,601],"tindex":"a82bc01b-13a1-11e5-b99d-13d155097f37","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"newCapacity","listSize":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"status":-1},{"failures":[523,564],"tindex":"a82be72c-13a1-11e5-b99d-c54d417e2973","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"status":-1},{"failures":[602],"tindex":"a82be72d-13a1-11e5-b99d-8b36b643c86f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:73","type":"CtReturnImpl","sourcecode":"return java.util.Map<K, V>"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1192","type":"CtReturnImpl","sourcecode":"return java.util.Map<K, V> == null ? java.util.Collections.<K,V>emptyMap() : java.util.Map<K, V>"},"status":-1},{"failures":[],"tindex":"a82be72e-13a1-11e5-b99d-31e0273c71e3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.FactoryUtils:56","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionFactory.<T>exceptionFactory()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:67","type":"CtTryImpl","sourcecode":"try {\n    T.getClass().getConstructor(new java.lang.Class<?>[]{ T.getClass() });\n    return new org.apache.commons.collections4.functors.InstantiateFactory<T>(((java.lang.Class<T>)(T.getClass())) , new java.lang.Class<?>[]{ T.getClass() } , new java.lang.Object[]{ T });\n} catch (final java.lang.NoSuchMethodException ex2) {\n    if (T instanceof java.io.Serializable) {\n        return ((org.apache.commons.collections4.Factory<T>)(new org.apache.commons.collections4.functors.PrototypeFactory.PrototypeSerializationFactory<java.io.Serializable>(((java.io.Serializable)(T)))));\n    } \n}"},"status":-2},{"failures":[603,219,604],"tindex":"a82be72f-13a1-11e5-b99d-a71706270626","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1105","type":"CtForImpl","sourcecode":"for (int int = int ; int > 0 ; int--) {\n    org.apache.commons.collections4.map.Flat3Map<K, V>.put(((K)(java.io.ObjectInputStream.readObject())), ((V)(java.io.ObjectInputStream.readObject())));\n}"},"status":-1},{"failures":[71,72],"tindex":"a82be730-13a1-11e5-b99d-f766f4a6e66d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:320","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    if (org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.contains(E)) {\n        continue;\n    } \n    org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().add(E);\n    java.util.List<E>.add(E);\n    boolean = true;\n}"},"status":-1},{"failures":[605,606],"tindex":"a82be731-13a1-11e5-b99d-6d058b2c0a9e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.TransformedSet:78","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Transformer<? super E, ? extends E> != null) && (java.util.Set<E> != null)) && ((java.util.Set<E>.size()) > 0)) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E[] E[] = ((E[])(java.util.Set<E>.toArray()));\n    java.util.Set<E>.clear();\n    for (final E E : E[]) {\n        org.apache.commons.collections4.set.TransformedSet<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n} "},"status":-1},{"failures":[81,82],"tindex":"a82be732-13a1-11e5-b99d-b7ffd1ec44b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:95","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and transformer map must not be null\");\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends K, ?> instanceof org.apache.commons.collections4.MultiMap) {\n    for (final java.util.Map.Entry<? extends K, java.lang.Object> java.util.Map.Entry<? extends K, java.lang.Object> : ((org.apache.commons.collections4.MultiMap<? extends K, V>)(java.util.Map<? extends K, ?>)).entrySet()) {\n        org.apache.commons.collections4.map.MultiValueMap<K, V>.putAll(java.util.Map.Entry<? extends K, java.lang.Object>.getKey(), ((java.util.Collection<V>)(java.util.Map.Entry<? extends K, java.lang.Object>.getValue())));\n    }\n} else {\n    for (final java.util.Map.Entry<? extends K, ?> java.util.Map.Entry<? extends K, ?> : java.util.Map<? extends K, ?>.entrySet()) {\n        org.apache.commons.collections4.map.MultiValueMap<K, V>.put(java.util.Map.Entry<? extends K, ?>.getKey(), java.util.Map.Entry<? extends K, ?>.getValue());\n    }\n}"},"status":-1},{"failures":[],"tindex":"a82be733-13a1-11e5-b99d-6fa558fb73a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:973","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount()"},"variableMap":{"this":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtIfImpl","sourcecode":"if (java.util.List<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"status":-2},{"failures":[607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635],"tindex":"a82be734-13a1-11e5-b99d-872fcdb5dc40","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:83","type":"CtInvocationImpl","sourcecode":"java.util.SortedSet<E>.clear()"},"variableMap":{"set":"uniqueSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:488","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>) == null) {\n    java.util.Set<E> = org.apache.commons.collections4.set.UnmodifiableSet.<E>unmodifiableSet(java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet());\n} "},"status":-1},{"failures":[],"tindex":"a82caa85-13a1-11e5-b99d-07dca1a29f1f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1964","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()].org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == (this))"},"variableMap":{"leftNode":"key","parentNode":"key","dataElement":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:229","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":-2},{"failures":[636,0,637,1,638,639,640,641,642,363,364,643,644,645,365,366,646,367,368,369,370,371,372,373,647,374,648,68,649,650,375,69,651,376,652,653,654,655,656,657,658,114,659,660,115,116,377,378,117,118,119,120,121,661,662,379,2,380,3,663,664,665,666,667,381,382,668,383,384,385,386,387,388,389,390,391,669,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411],"tindex":"a82caa86-13a1-11e5-b99d-1f2ebd68b0cb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1003","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.shrink()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:506","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-1},{"failures":[670,671,672,673,674,675,676,677],"tindex":"a82cd197-13a1-11e5-b99d-c39afbe2472a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"variableMap":{"cursor":"cursor","node":"node","it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:355","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-1},{"failures":[678,81],"tindex":"a82cd198-13a1-11e5-b99d-671bad4e080b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:239","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"Comparator ordering cannot be changed after the first comparison is performed\");\n} "},"variableMap":{"isLocked":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:384","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(java.util.Collection<V>.size());\n    java.util.Collection<V>.addAll(java.util.Collection<V>);\n    if ((java.util.Collection<V>.size()) > 0) {\n        org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n        boolean = true;\n    } \n} else {\n    boolean = java.util.Collection<V>.addAll(java.util.Collection<V>);\n}"},"status":-1},{"failures":[],"tindex":"a82cd199-13a1-11e5-b99d-ed2af684e3c3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"bitIndex","lengthInBits":"bitIndex","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"bitIndex","otherOffsetInBits":"bitIndex","otherLengthInBits":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:211","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"a82cd19a-13a1-11e5-b99d-7df62466c5ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"end2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:263","type":"CtWhileImpl","sourcecode":"while ((int < int) || (int < int)) {\n    if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n        ++int;\n    } else {\n        if ((int - int) > (int - int)) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        } else {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"a82cd19b-13a1-11e5-b99d-3d07e49f2cdc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:135","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1322","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if (java.lang.Object == null) {\n        if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n            return false;\n        } \n    } else {\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"a82cd19c-13a1-11e5-b99d-f546546dfc36","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:660","type":"CtInvocationImpl","sourcecode":"java.lang.Object.hashCode()"},"status":0},{"failures":[79,80,81,82],"tindex":"a82de30d-13a1-11e5-b99d-d159082ab9ce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:185","type":"CtReturnImpl","sourcecode":"return java.lang.Integer == null"},"variableMap":{"position":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:238","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, java.lang.Object> java.util.Map.Entry<K, java.lang.Object> : java.util.Set<java.util.Map.Entry<K, java.lang.Object>>) {\n    if (((java.util.Collection<V>)(java.util.Map.Entry<K, java.lang.Object>.getValue())).contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[679,680,447,70,681,682,448,449,450,683,451,452,684,453,454,455,685,686,456,687,457,688,689,458,459,690,691,692,460,461,693,462,463,464,694,695,696,465,697,698,699,700,701,466,467,702],"tindex":"a82de30e-13a1-11e5-b99d-bd7fd75b88eb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:78","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final int int = int + int;\n    final int int = int + int;\n    if (int >= int) {\n        char = 0;\n    } else {\n        char = java.lang.String.charAt(int);\n    }\n    if ((java.lang.String == null) || (int >= int)) {\n        char = 0;\n    } else {\n        char = java.lang.String.charAt(int);\n    }\n    if (char != char) {\n        final int int = char ^ char;\n        return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n    } \n    if (char != 0) {\n        boolean = false;\n    } \n}"},"status":-1},{"failures":[703,704,705,706,707,708,709,710,711,712,83,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,85,733,734,735,736,737,738,739,740,741,742,743],"tindex":"a82de30f-13a1-11e5-b99d-8f94de636f6f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:182","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> , int++) {\n    T[][int] = ((T)(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue()));\n}"},"status":-1},{"failures":[182,185,492,499,282,192,195,295,528,212,215,322,223,112,335,16,22,39],"tindex":"a82de310-13a1-11e5-b99d-71cfb82d5c76","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:254","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"a837ce21-13a1-11e5-b99d-e5dc2eb3b4f1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"cmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:502","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":0},{"failures":[744,745],"tindex":"a837ce22-13a1-11e5-b99d-b93433f8225c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.TransformIterator:90","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends I>.remove()"},"variableMap":{"iterator":"inputIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1066","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends I>.hasNext()) {\n    final I I = java.util.Iterator<? extends I>.next();\n    final O O = org.apache.commons.collections4.Transformer<? super I, ? extends O>.transform(I);\n    R.add(O);\n}"},"status":-1},{"failures":[679],"tindex":"a837ce23-13a1-11e5-b99d-b13d029b1801","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:94","type":"CtIfImpl","sourcecode":"if (char != char) {\n    final int int = char ^ char;\n    return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n} "},"status":-2},{"failures":[],"tindex":"a837ce24-13a1-11e5-b99d-65dc958a37ae","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"wrappedIteratorIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:112","type":"CtIfImpl","sourcecode":"if (((int) == (int)) || ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator)) {\n    return java.util.Iterator<? extends E>.hasNext();\n} "},"status":0},{"failures":[],"tindex":"a837ce25-13a1-11e5-b99d-fbd1527864cf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:517","type":"CtReturnImpl","sourcecode":"return -1"},"status":-2},{"failures":[],"tindex":"a837ce26-13a1-11e5-b99d-a9a9e5718350","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"changed","nextCalled":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:111","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.CollectionSortedBag<E>.add(java.util.Iterator<? extends E>.next(), 1);\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[746,747,748,749,750],"tindex":"a837f537-13a1-11e5-b99d-5d9dfea208b9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:806","type":"CtIfImpl","sourcecode":"if (org.w3c.dom.Node == null) {\n    throw new java.lang.NullPointerException(\"Node must not be null\");\n} "},"variableMap":{"node":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:268","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsKey(java.lang.Object)) {\n    V = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().remove(java.lang.Object);\n    java.util.List<K>.remove(java.lang.Object);\n} "},"status":-1},{"failures":[],"tindex":"a837f538-13a1-11e5-b99d-f566cd7d7e0a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1404","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1402","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) {\n    case KEY :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    case VALUE :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    default :\n        throw new java.lang.IllegalArgumentException();\n}"},"status":-2},{"failures":[],"tindex":"a837f539-13a1-11e5-b99d-5fabd73f4cc9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:813","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"current":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:556","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-2},{"failures":[751,752,753,754,755,756,757,758,759,760,761],"tindex":"a837f53a-13a1-11e5-b99d-4b9ff5a67cb1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:133","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    if (java.util.Collection<E>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"a837f53b-13a1-11e5-b99d-25994edd4107","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:142","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n}"},"variableMap":{"header":"next","after":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:242","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n            return true;\n        } \n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"a837f53c-13a1-11e5-b99d-c1a7166bb04b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.ReplacementsFinder:94","type":"CtInvocationImpl","sourcecode":"java.util.List<T>.clear()"},"variableMap":{"pendingDeletions":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:665","type":"CtForEachImpl","sourcecode":"for (final T T : java.lang.Iterable<T>) {\n    C.execute(T);\n}"},"status":-2},{"failures":[],"tindex":"a837f53d-13a1-11e5-b99d-8ffe0db97a4a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:94","type":"CtIfImpl","sourcecode":"if (char != char) {\n    final int int = char ^ char;\n    return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n} "},"status":-2},{"failures":[],"tindex":"a837f53e-13a1-11e5-b99d-912b8ecf6139","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:98","type":"CtIfImpl","sourcecode":"if (V == (this)) {\n    throw new java.lang.IllegalArgumentException(\"DefaultKeyValue may not contain itself as a value.\");\n} "},"status":-2},{"failures":[],"tindex":"a837f53f-13a1-11e5-b99d-05728606383e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"convertedKey","length":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:279","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[79,762,763,128,764,765,81,82,766,767],"tindex":"a837f540-13a1-11e5-b99d-39a10ebafe85","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:461","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().values()) {\n    int += org.apache.commons.collections4.CollectionUtils.size(java.lang.Object);\n}"},"status":-1},{"failures":[768],"tindex":"a8381c51-13a1-11e5-b99d-03ab5ac82d62","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:373","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.clear()"},"variableMap":{"parent":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1702","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final E E = java.util.Iterator<? extends E>.next();\n    java.util.Map<K, V>.put(org.apache.commons.collections4.Transformer<E, K>.transform(E), org.apache.commons.collections4.Transformer<E, V>.transform(E));\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":98,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}