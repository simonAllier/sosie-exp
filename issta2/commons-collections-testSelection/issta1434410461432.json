{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":1,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":365,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":202,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":677,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":833,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":377,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":431,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":522,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEmptyMapCompatibility":389,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":587,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":79,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":1036,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":253,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":951,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":765,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":675,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":591,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":965,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":967,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":822,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":723,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":259,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testRemove":904,"org.apache.commons.collections4.CollectionUtilsTest.get":745,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":948,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":95,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":850,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":173,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":1003,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":803,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":602,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":369,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectEqualsSelf":905,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":238,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":753,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":134,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":221,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsContract":871,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":713,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":615,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":136,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEqualsNull":894,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":524,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":559,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":982,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":352,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":764,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":104,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":689,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":843,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":480,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":626,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":1014,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":13,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEqualsNull":868,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":299,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":1026,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":223,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":1044,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":293,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":106,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":802,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":245,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":608,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":634,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":964,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":452,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":594,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":536,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":579,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":595,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":68,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":292,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":339,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":573,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":235,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":324,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":30,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":430,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":859,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalEmptyCollectionExists":895,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":916,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":141,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":331,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsSelfHashCode":885,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":255,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastKeySet":792,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":1006,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":111,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":809,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":496,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":837,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":85,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":242,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":1012,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":200,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":370,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":979,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":787,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsSelfHashCode":898,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":532,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":652,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":726,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":191,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":646,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":42,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":836,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":766,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":999,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":207,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":508,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":762,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":686,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":585,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":314,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":226,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":217,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":252,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":243,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":130,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":241,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":469,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":853,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":227,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":817,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":170,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":619,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":856,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":832,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEmptyMapCompatibility":393,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":842,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":328,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":336,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":460,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":699,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":453,"org.apache.commons.collections4.comparators.ComparatorChainTest.testBadListComparatorChain":399,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":65,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":706,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":718,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":148,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":376,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":738,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":356,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSimpleSerialization":896,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEqualsNull":881,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":344,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":478,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":584,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":178,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":264,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":258,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":461,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":462,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":80,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":463,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":317,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":929,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":187,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":153,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":119,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":381,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":511,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":702,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":489,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":794,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":495,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":654,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":928,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":129,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":448,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":927,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":763,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":1033,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":920,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":11,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":232,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":734,"org.apache.commons.collections4.bag.TreeBagTest.testCollections265":855,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":156,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":320,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":455,"org.apache.commons.collections4.CollectionUtilsTest.get1":746,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":976,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":332,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":248,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":683,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":199,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":636,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":546,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":975,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":76,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":597,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":72,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":834,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":955,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":75,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":363,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":107,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":1025,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":184,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":814,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":101,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":577,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":971,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":518,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":991,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":382,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":364,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":1002,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":361,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":146,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":618,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":617,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":55,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":225,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":998,"org.apache.commons.collections4.CollectionUtilsTest.getPositiveOutOfBounds":747,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":760,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":216,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":10,"org.apache.commons.collections4.CollectionUtilsTest.exists":743,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSimpleSerialization":883,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":272,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":350,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":1013,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":901,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":516,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEmptyIterator":902,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":1042,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":169,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":993,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEmptyIterator":863,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastValues":780,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":135,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":840,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":513,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":542,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":630,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastEntrySet":796,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEmptyMapCompatibility":385,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":849,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":145,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":479,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":548,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":507,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":50,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":2,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":736,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":759,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":707,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":273,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":283,"org.apache.commons.collections4.list.TreeListTest.testCollectionClear":730,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testEmptyIterator":1047,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":35,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":989,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":804,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":338,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsSelfHashCode":742,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":177,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":87,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":533,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":962,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":412,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":939,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":162,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":201,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":973,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":308,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":419,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":360,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":685,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":961,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":537,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":728,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":164,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":631,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":711,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":297,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":997,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":404,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":562,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":782,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":347,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":302,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":473,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":827,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":771,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":435,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":186,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":195,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":34,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":270,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":118,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":653,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":681,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":40,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":188,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":429,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":406,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":52,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":346,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":1007,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":209,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":576,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":952,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":295,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":400,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":474,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":575,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":468,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":625,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":645,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":678,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":483,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":566,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEmptyIterator":889,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testSimpleSerialization":396,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":401,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":933,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":994,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":644,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":668,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":658,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":714,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":488,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":733,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":105,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":526,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":525,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":724,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":305,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":368,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":117,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":512,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":67,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":449,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":598,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":70,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testFullMapCompatibility":394,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":604,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":663,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":777,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":769,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":808,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":561,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":1011,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":739,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":930,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalFullCollectionExists":880,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":725,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":624,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":171,"org.apache.commons.collections4.trie.PatriciaTrieTest.testSimpleSerialization":392,"org.apache.commons.collections4.list.TreeListTest.testBug35258":700,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":755,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":616,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":590,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":732,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":740,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":858,"org.apache.commons.collections4.trie.PatriciaTrieTest.testFullMapCompatibility":390,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":341,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":442,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":599,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":459,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":959,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":244,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":6,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":947,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":69,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":445,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":444,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":443,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":610,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":1023,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":183,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":132,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalFullCollectionExists":893,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":950,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":754,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":121,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":671,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":122,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":603,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":937,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":1000,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":816,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":71,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":826,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":28,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd":921,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testRemove":878,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsContract":897,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":456,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":51,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking":722,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":810,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":848,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":1030,"org.apache.commons.collections4.trie.PatriciaTrieTest.testSerializeDeserializeThenCompare":391,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":1028,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":813,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":812,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":127,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":811,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testReset":900,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":386,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":318,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":358,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":491,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectEqualsSelf":879,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":841,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":228,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":246,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":640,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":1004,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":815,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":924,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":158,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":629,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":776,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":411,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":155,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":1022,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":1021,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":212,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":1020,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastEntrySet":791,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastEntrySet":783,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":775,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":268,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":505,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":89,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":596,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":402,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":687,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":514,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":744,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":628,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":482,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":852,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":829,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":946,"org.apache.commons.collections4.map.LRUMapTest.testLRU":492,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":14,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":704,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":211,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":665,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":940,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":59,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":112,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":128,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":286,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":436,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":874,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectEqualsSelf":892,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":421,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":254,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":316,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":359,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":932,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":751,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":289,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":182,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":205,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsContract":741,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsContract":910,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastKeySet":779,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":218,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":143,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":190,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":144,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":691,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":593,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":367,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":757,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":294,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalFullCollectionExists":867,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsSelf":84,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":17,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":239,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":572,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":315,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":963,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":288,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":552,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":247,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":204,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":748,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":749,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":506,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":440,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":563,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":530,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":592,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":547,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastEntrySet":778,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":438,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":980,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":18,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":992,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":925,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":864,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":181,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":397,"org.apache.commons.collections4.comparators.ComparatorChainTest.testBadNoopComparatorChain":398,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":497,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":729,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":284,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":179,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":798,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":582,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":684,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":768,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":520,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":569,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":504,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":521,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":666,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":670,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":420,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":535,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":61,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":15,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":214,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":407,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":133,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":208,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":457,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":77,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":349,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":790,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSerializeDeserializeThenCompare":873,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":541,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":139,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":600,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":770,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":710,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":222,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":353,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":256,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":278,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":91,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":656,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":703,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":774,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":334,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":312,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":149,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":956,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":90,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":607,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":667,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalEmptyCollectionExists":882,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":98,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":1045,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":168,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":434,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":414,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":620,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":486,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":913,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":1024,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":215,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":823,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":321,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":138,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":767,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":1049,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":851,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":986,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":519,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSerializeDeserializeThenCompare":886,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":418,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":500,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":37,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":231,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":795,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":109,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":966,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":985,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":355,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":137,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":313,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":427,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":57,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":123,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":150,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":694,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":1032,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":281,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":605,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":553,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":818,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":113,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":319,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastValues":793,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":606,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":758,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":426,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":772,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":413,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":416,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":820,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":0,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":261,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":176,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":943,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":131,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":379,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":1016,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":167,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":919,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":1009,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":487,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":560,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":664,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":110,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":165,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":33,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":972,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":333,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":692,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":450,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":282,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":737,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":342,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":53,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":509,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":451,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":642,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":147,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":213,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":1029,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":1041,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":854,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsSelfHashCode":872,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":29,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":877,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":583,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":638,"org.apache.commons.collections4.list.TreeListTest.testRemove":697,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":821,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":251,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":325,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":298,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":731,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":343,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":936,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastKeySet":784,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking":715,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":125,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":300,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":322,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":466,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":1001,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":60,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":465,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":944,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":464,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":285,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":716,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking":709,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":437,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":477,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":83,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":100,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":657,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":66,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":735,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":9,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":641,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":987,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":373,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":372,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":915,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":219,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":157,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":531,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":490,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":309,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":20,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":564,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":275,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":534,"org.apache.commons.collections4.ListUtilsTest.testSubtract":46,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":601,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":651,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSimpleSerialization":870,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":152,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":180,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":953,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":142,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":648,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":229,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":627,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":12,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":623,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":409,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":662,"org.apache.commons.collections4.list.TreeListTest.testListEquals":712,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":1010,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":265,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":581,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":82,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":673,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":280,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":327,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":236,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":108,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":351,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":73,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":64,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":326,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":163,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":192,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":721,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":441,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":676,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":786,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":949,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":693,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":8,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":621,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":433,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":458,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":378,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNull":556,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":7,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":383,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":647,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsSelfHashCode":911,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":669,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":43,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":660,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":340,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":995,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":38,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":362,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":224,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":903,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":63,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":1034,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":503,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":862,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":931,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":690,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":942,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEmptyIterator":876,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":696,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":206,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":174,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":622,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":538,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":545,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":701,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":41,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":888,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":938,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":240,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":220,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":580,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":586,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":432,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":539,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":124,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":476,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":789,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":984,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":103,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null_next":554,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":237,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEqualsNull":907,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":310,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsSelf":120,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":22,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":661,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":680,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":529,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":423,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":528,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":527,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testRemove":891,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":981,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":983,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":467,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":523,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":1035,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":19,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":387,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSimpleSerialization":909,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":614,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":307,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":643,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":708,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":415,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":62,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":160,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":290,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":39,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":544,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":917,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":773,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":611,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":612,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":847,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":632,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":609,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":472,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":695,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":115,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":116,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":439,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":988,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":750,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":140,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":540,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalEmptyCollectionExists":908,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":380,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsSelfHashCode":990,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":890,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":857,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":54,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":88,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":92,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":475,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":354,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":233,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":193,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":447,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":94,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testReset":861,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":515,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testRemove":801,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":945,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":250,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":337,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":558,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":484,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":166,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":189,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":154,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":234,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":705,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":781,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":807,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":688,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":825,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":717,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":197,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":498,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":923,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":263,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":974,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":800,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":262,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":291,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSimpleSerialization":388,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":74,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalEmptyCollectionExists":869,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":303,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":425,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":335,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":96,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":93,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":196,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":1046,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":422,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":806,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":403,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":345,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":633,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":485,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":126,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":348,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":1008,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":417,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":311,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":551,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":720,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":266,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":941,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":510,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":655,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":374,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":637,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":301,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":659,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":16,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":499,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":960,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":86,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":296,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":114,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":761,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":698,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":1048,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":428,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":26,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":1043,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":269,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":274,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":194,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":81,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":45,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":968,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":934,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":977,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":99,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":31,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":276,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":24,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":25,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":571,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":635,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":926,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":1005,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":203,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":5,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":175,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":887,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":565,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testSerializeDeserializeThenCompare":395,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":3,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":58,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":1040,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":161,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":543,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":831,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":613,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":830,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsSelfHashCode":954,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastKeySet":797,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testRemove":865,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":4,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":78,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":306,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":918,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":151,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":249,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":1015,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":679,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":32,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":819,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":371,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":502,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":329,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":501,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":366,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":357,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":1031,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":97,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":323,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":970,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":210,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":555,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":957,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsContract":884,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":828,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":845,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":996,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":846,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalSet":922,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":304,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":756,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":844,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":752,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":277,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":1017,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":824,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd":914,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":1018,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":1019,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalFullCollectionExists":906,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":185,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":639,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":287,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":570,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":839,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":159,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":470,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":650,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":375,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":1027,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":1037,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":1038,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":1039,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":578,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":682,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":198,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":550,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":860,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":969,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":805,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":267,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":471,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":172,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":481,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSerializeDeserializeThenCompare":912,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":568,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking":719,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":567,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":835,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":838,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectEqualsSelf":866,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":589,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSerializeDeserializeThenCompare":899,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":408,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":672,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":493,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":574,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":588,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":978,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":649,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":958,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":56,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":330,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":799,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":788,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":935,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":446,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":875,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":260,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":257,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":517,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":405,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":454,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null1":557,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":727,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":102,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":410,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":674,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":494,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":230,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":785,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":384,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":271,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":279,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":424,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":549},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"tindex":"2faca4df-13b5-11e5-ab2e-2f2029f18214","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"2faccbf0-13b5-11e5-ab2e-a9af0f579236","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:251","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.set.CompositeSet<java.util.Map.Entry<K, V>>.addComposited(java.util.Map<K, V>[][int].entrySet());\n}"},"status":-2},{"failures":[39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362],"tindex":"2faccbf1-13b5-11e5-ab2e-9f705f3a51d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"2faccbf2-13b5-11e5-ab2e-f9ce65cf12cc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1473","type":"CtTryImpl","sourcecode":"try {\n    final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(java.util.Collection<?>);\n    return org.apache.commons.collections4.BoundedCollection<?>.isFull();\n} catch (final java.lang.IllegalArgumentException ex) {\n    return false;\n}"},"variableMap":{"coll":"iterable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? extends C> instanceof java.util.Collection<?>) {\n    return java.util.Collection<C>.addAll(((java.util.Collection<? extends C>)(java.lang.Iterable<? extends C>)));\n} "},"status":-2},{"failures":[363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381],"tindex":"2facf303-13b5-11e5-ab2e-f17e2e93f5fe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:511","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>)"},"variableMap":{"this":"this","newNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:949","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement : org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.values()) {\n    if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                } else {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-1},{"failures":[382,383,384],"tindex":"2fad1a14-13b5-11e5-ab2e-0b6c24901298","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:106","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"uniqueIndex","beforeFirst":"uniqueIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:243","type":"CtIfImpl","sourcecode":"if ((boolean) && (org.apache.commons.collections4.MultiMap<K, C>.containsKey(K))) {\n    throw new java.lang.IllegalArgumentException(\"Duplicate key in uniquely indexed collection.\");\n} "},"status":-1},{"failures":[],"tindex":"2fad1a15-13b5-11e5-ab2e-8907b204e423","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:94","type":"CtIfImpl","sourcecode":"if (char != char) {\n    final int int = char ^ char;\n    return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n} "},"variableMap":{"f":"f","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"endIndex1","i":"length","k":"f"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:78","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final int int = int + int;\n    final int int = int + int;\n    if (int >= int) {\n        char = 0;\n    } else {\n        char = java.lang.String.charAt(int);\n    }\n    if ((java.lang.String == null) || (int >= int)) {\n        char = 0;\n    } else {\n        char = java.lang.String.charAt(int);\n    }\n    if (char != char) {\n        final int int = char ^ char;\n        return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n    } \n    if (char != 0) {\n        boolean = false;\n    } \n}"},"status":0},{"failures":[385,386,387,388,389,390,391,392,393,394,395,396],"tindex":"2fad1a16-13b5-11e5-ab2e-c97f3e870a8b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractSerializableListDecorator:68","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"variableMap":{"in":"stream"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2405","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    K K = ((K)(java.io.ObjectInputStream.readObject()));\n    V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.put(K, V);\n}"},"status":-1},{"failures":[397],"tindex":"2fad1a17-13b5-11e5-ab2e-bdaa5f8252e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"flag":"nextObjectSet","removed":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:144","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":-1},{"failures":[3,4,6,7,8,10,11,13,16,17],"tindex":"2fad4128-13b5-11e5-ab2e-d344de28baed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:429","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    int += org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.hashCode();\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"2fad4129-13b5-11e5-ab2e-efd9ad347387","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1179","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.swapColors(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"x":"yFormerParent","y":"x","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1112","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        if (boolean) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"2fad412a-13b5-11e5-ab2e-374395bf1410","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:333","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"variableMap":{"node":"node","it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:314","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":0},{"failures":[],"tindex":"2fad683b-13b5-11e5-ab2e-7f1901685e8f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:664","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<T> != null) && (C != null)) {\n    for (final T T : java.lang.Iterable<T>) {\n        C.execute(T);\n    }\n} "},"status":-2},{"failures":[],"tindex":"2fad683c-13b5-11e5-ab2e-29d28e636971","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1142","type":"CtIfImpl","sourcecode":"if ((int >= 0) && (int < int)) {\n    return null;\n} "},"variableMap":{"lengthInBits":"lengthInBits","bitIndex":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:888","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        } else {\n            return null;\n        }\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n    }\n} "},"status":0},{"failures":[],"tindex":"2fad683d-13b5-11e5-ab2e-994dd2d63d18","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:115","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.NodeCachingLinkedList<E>.shrinkCacheToMaximumSize()"},"variableMap":{"this":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:101","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.List<? extends E>) {\n    if (java.util.HashSet<E>.contains(E)) {\n        java.util.List<E>.add(E);\n        java.util.HashSet<E>.remove(E);\n    } \n}"},"status":-2},{"failures":[],"tindex":"2fad683e-13b5-11e5-ab2e-e350581fb076","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1396","type":"CtTryImpl","sourcecode":"try {\n    return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n}"},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:133","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    if (java.util.Collection<E>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"2fad8f4f-13b5-11e5-ab2e-1da93a9722d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:916","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n    } else if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry());\n    } else {\n        return null;\n    }\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} "},"variableMap":{"found":"left","root":"left","this":"this","bitIndex":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:459","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[398,399],"tindex":"2fad8f50-13b5-11e5-ab2e-053ee2fa65f0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:251","type":"CtIfImpl","sourcecode":"if ((java.util.List<java.util.Comparator<E>>.size()) == 0) {\n    throw new java.lang.UnsupportedOperationException(\"ComparatorChains must contain at least one Comparator\");\n} "},"status":-1},{"failures":[400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542],"tindex":"2fad8f51-13b5-11e5-ab2e-89880d2b7218","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:642","type":"CtDoImpl","sourcecode":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null )"},"status":-1},{"failures":[427,428,429,430,431,433,434,435,436,437,450,451,452,453,454,456,457,458,459,460,468,469,470,471,472,474,475,476,477,478,480,481,482,483,484,486,487,488,489,490,543,544,545,546,547,548,549,550,551,552,497,498,499,500,501,503,504,505,506,507,515,516,517,518,519,553,521,522,523,524],"tindex":"2fadb662-13b5-11e5-ab2e-076bd8737668","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1352","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.util.Map.Entry<K, V>>.hasNext()) {\n    int += java.util.Iterator<java.util.Map.Entry<K, V>>.next().hashCode();\n}"},"status":-1},{"failures":[],"tindex":"2fadb663-13b5-11e5-ab2e-53371f2b6266","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:414","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:134","type":"CtIfImpl","sourcecode":"if (java.util.Collection<E>.contains(java.lang.Object)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"2fadb664-13b5-11e5-ab2e-9f895c330078","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:827","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"node":"rval","rightChild":"rval","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:684","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":0},{"failures":[554,555,556,557],"tindex":"2fadb665-13b5-11e5-ab2e-c5f3b169ab0f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:173","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:140","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    if ((E) == null) {\n    } else {\n        if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n            org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n        } else {\n            org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n        }\n        E = null;\n    }\n} else {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n}"},"status":-1},{"failures":[558,559,560,561,562,563,564,565,566,567,568],"tindex":"2faddd76-13b5-11e5-ab2e-d79c81fe3b69","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.PredicatedMap:174","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.Predicate<? super V>) != null"},"variableMap":{"valuePredicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:233","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[569,570],"tindex":"2faddd77-13b5-11e5-ab2e-2b0984553713","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:384","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(java.util.Collection<V>.size());\n    java.util.Collection<V>.addAll(java.util.Collection<V>);\n    if ((java.util.Collection<V>.size()) > 0) {\n        org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n        boolean = true;\n    } \n} else {\n    boolean = java.util.Collection<V>.addAll(java.util.Collection<V>);\n}"},"status":-1},{"failures":[],"tindex":"2faddd78-13b5-11e5-ab2e-a1ebe100c7aa","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:296","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n        return false;\n    } \n}"},"variableMap":{"composite":"key","length":"hash3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:217","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = java.lang.Object.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n        case 2 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n        case 1 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n    }\n} "},"status":-2},{"failures":[571,572,573,574,575,576,577,578,579,580,581,582,370,583,371],"tindex":"2faddd79-13b5-11e5-ab2e-1f14b512c12e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1335","type":"CtTryImpl","sourcecode":"try {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n} catch (final java.lang.ClassCastException ex) {\n    return false;\n} catch (final java.lang.NullPointerException ex) {\n    return false;\n}"},"status":-1},{"failures":[584,585,586,587,588,589],"tindex":"2faddd7a-13b5-11e5-ab2e-512264c1ae09","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:232","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int)"},"variableMap":{"vUp":"vUp","start1":"offset","end2":"end1","this":"this","i":"offset","end1":"end1","k":"start1","start2":"start2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:212","type":"CtForImpl","sourcecode":"for (int int = int - int ; int <= (int + int) ; int += 2) {\n    final int int = (int + int) - int;\n    if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n        int[][int] = (int[][(int + 1)]) - 1;\n    } else {\n        int[][int] = int[][(int - 1)];\n    }\n    int int = (int[][int]) - 1;\n    int int = ((int - int) + int) - int;\n    while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = int--;\n        int--;\n    }\n    if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n        if ((int[][int]) <= (int[][(int + int)])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"2fae048b-13b5-11e5-ab2e-33e3ff9dacfa","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n} "},"status":0},{"failures":[],"tindex":"2fae048c-13b5-11e5-ab2e-cd05de5f02af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:732","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return null;\n} "},"variableMap":{"parent":"node","current":"right","right":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1164","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"2fae048d-13b5-11e5-ab2e-d5ea9891a136","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:295","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.queue.CircularFifoQueue<E>.isEmpty()) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"2fae048e-13b5-11e5-ab2e-67fff80c2b4a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"hash","removeIndex":"hash","currentIndex":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:326","type":"CtIfImpl","sourcecode":"if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n} else {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"2fae048f-13b5-11e5-ab2e-4f21d549273a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:175","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"size":"endIndex1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:82","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":0},{"failures":[],"tindex":"2fae0490-13b5-11e5-ab2e-2dcf5833c9f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:556","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-2},{"failures":[571,572,573,574,575,590,576,577,578,591,579,580,581,592,582,370,583,371,593],"tindex":"2fae0491-13b5-11e5-ab2e-39b09f2034c0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-1},{"failures":[584,585,586,587,589,588],"tindex":"2fae0492-13b5-11e5-ab2e-114034a30b45","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtIfImpl","sourcecode":"if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n    if ((int[][(int - int)]) <= (int[][int])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[],"tindex":"2fae0493-13b5-11e5-ab2e-cd8e2a322f9e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:332","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<O>.evaluate(O)) {\n    org.apache.commons.collections4.bag.HashBag<O>.add(O);\n} "},"status":-2},{"failures":[402,405,406,416,418,419,429,594,595,596,597,598,599,600,452,464,465,601,602,603,604,470,605,606,607,608,609,610,611,612,613,614,615,616,493,496,545,617,618,619,620,621,622,509,517,527,528,623,624,625,626],"tindex":"2fae2ba4-13b5-11e5-ab2e-e3212f4388f8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:198","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(java.lang.Object);\n} "},"variableMap":{"delegateMap":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:224","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"2fae2ba5-13b5-11e5-ab2e-79938c803030","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:490","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(null, null)"},"variableMap":{"h":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    return null;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } \n} "},"status":0},{"failures":[],"tindex":"2fae2ba6-13b5-11e5-ab2e-d7e72b6e907f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:526","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"x","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1167","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650],"tindex":"2fae2ba7-13b5-11e5-ab2e-ff9bb11a1619","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:305","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"node":"node","header":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-1},{"failures":[651,652],"tindex":"2fae2ba8-13b5-11e5-ab2e-efc7e683f571","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:146","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<? super E>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<? super E>[][int].evaluate(E)) == true) {\n        org.apache.commons.collections4.Closure<? super E>[][int].execute(E);\n        return ;\n    } \n}"},"status":-1},{"failures":[653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,649,692,650,693,694,695],"tindex":"2fae2ba9-13b5-11e5-ab2e-67f7cda7b056","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:182","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> , int++) {\n    T[][int] = ((T)(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue()));\n}"},"status":-1},{"failures":[],"tindex":"2fae2baa-13b5-11e5-ab2e-b3c6f91bd35c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-2},{"failures":[696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742],"tindex":"2fae52bb-13b5-11e5-ab2e-af65d2fbf408","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:175","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"size":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:287","type":"CtIfImpl","sourcecode":"if ((int < int) || (int > int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Invalid index:\" + int) + \", size=\") + org.apache.commons.collections4.list.TreeList<E>.(size())));\n} "},"status":-1},{"failures":[743],"tindex":"2fae52bc-13b5-11e5-ab2e-f96e6f78134d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.PredicatedMap:174","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.Predicate<? super V>) != null"},"variableMap":{"valuePredicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:849","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super C>.evaluate(C)) {\n    return true;\n} "},"status":-1},{"failures":[744,745,746,747],"tindex":"2fae52bd-13b5-11e5-ab2e-7d4b9c6a0423","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1288","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.reflect.Array.get(java.lang.Object, int);\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n}"},"variableMap":{"i":"i","object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[400,401,402,403,404,405,406,407,408,409,410,411,413,414,748,415,749,416,750,417,418,419,751,420,421,422,423,425,426,435,458,752,753,476,488,492,754,550,505,755,522,756,539],"tindex":"2fae52be-13b5-11e5-ab2e-5f0f2201396d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n    return null;\n} "},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:280","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n    return V;\n} "},"status":-1},{"failures":[],"tindex":"2fae52bf-13b5-11e5-ab2e-9d3535420c05","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1291","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"status":-2},{"failures":[],"tindex":"2fae52c0-13b5-11e5-ab2e-ffecb8b4236f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:853","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map.Entry) {\n    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(java.lang.Object));\n    final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.getEntry(java.util.Map.Entry<?, ?>.getKey());\n    return (java.util.Map.Entry<K, V> != null) && (java.util.Map.Entry<K, V>.equals(java.util.Map.Entry<?, ?>));\n} "},"variableMap":{"entry":"value","parent":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:148","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n        return true;\n    } \n}"},"status":0},{"failures":[],"tindex":"2fae79d1-13b5-11e5-ab2e-3f11da35d1b3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1381","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(',').append(' ');\n} "},"status":-2},{"failures":[],"tindex":"2fae79d2-13b5-11e5-ab2e-d34fdeb145f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:398","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<java.util.Map.Entry<K, V>>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:467","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator();\n} "},"status":-2},{"failures":[39,40,41,43,44,45,47,46,55,56,57,58,59,60,61,62,63,64,65,66,48,50,51,52,53,54,67,68,70,71,72,73,74,75,76,77,78,79,80,90,91,92,93,94,95,96,97,98,99,100,101,83,85,86,87,88,89,102,103,105,106,107,108,109,110,111,112,113,114,115,118,126,127,128,129,130,131,132,133,134,135,136,137,119,121,122,123,124,125,138,139,141,142,143,145,146,147,148,149,151,154,155,156,157,159,160,161,162,164,165,166,167,169,170,172,171,180,181,182,183,184,185,186,187,188,189,190,191,173,175,176,177,178,179,192,193,195,196,197,198,199,200,201,202,203,204,205,208,216,217,218,219,220,221,222,223,224,225,226,227,209,211,212,213,214,215,228,229,231,232,233,235,236,237,238,239,241,244,245,246,247,249,250,251,252,254,255,256,257,259,260,263,265,266,267,269,271,273,277,278,279,280,281,282,283,284,285,287,290,289,298,299,300,301,302,303,304,305,306,307,308,309,291,293,294,295,296,297,310,311,313,314,315,317,318,319,320,321,323,326,327,335,336,337,338,339,340,341,342,343,344,345,346,328,330,331,332,333,334,347,348,350,351,352,353,354,355,356,357,358,359,360],"tindex":"2fae79d3-13b5-11e5-ab2e-d1ec5772647a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(E);\n    int += int;\n    if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n        return true;\n    } \n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int += int;\n    return false;\n} "},"status":-1},{"failures":[427,428,757,429,430,431,432,434,435,436,437,758,450,451,759,452,453,454,455,457,458,459,460,760,468,469,761,470,471,472,473,475,476,477,478,762,480,481,482,483,484,487,488,489,490,543,544,763,545,546,547,764,549,550,551,552,765,497,498,766,499,500,501,502,504,505,506,507,767,515,516,768,517,518,519,520,521,522,523,524,769,532,533,770,534,535,536,537,538,539,540,541,771],"tindex":"2fae79d4-13b5-11e5-ab2e-5945f6467aec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1321","type":"CtTryImpl","sourcecode":"try {\n    while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if (java.lang.Object == null) {\n            if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n                return false;\n            } \n        } else {\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    }\n} catch (final java.lang.ClassCastException ignored) {\n    return false;\n} catch (final java.lang.NullPointerException ignored) {\n    return false;\n}"},"status":-1},{"failures":[],"tindex":"2faea0e5-13b5-11e5-ab2e-159dd44529e4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n} else {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n}"},"status":0},{"failures":[745,772,773],"tindex":"2faea0e6-13b5-11e5-ab2e-1994c05fcf1a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    return java.util.Iterator<T>.next();\n} "},"status":-1},{"failures":[],"tindex":"2faea0e7-13b5-11e5-ab2e-7bc8774ab5d6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:428","type":"CtIfImpl","sourcecode":"if (java.lang.Number == null) {\n    java.lang.Number = java.lang.Number;\n} "},"variableMap":{"answer":"key","defaultValue":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:188","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(java.lang.Object)) {\n    V = java.util.Map<K, V>.remove(java.lang.Object);\n    java.util.Map<V, K>.remove(V);\n} "},"status":-2},{"failures":[774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799],"tindex":"2faea0e8-13b5-11e5-ab2e-5731da7c6bc3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:188","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(java.lang.Object)) {\n    V = java.util.Map<K, V>.remove(java.lang.Object);\n    java.util.Map<V, K>.remove(V);\n} "},"status":-1},{"failures":[800,43],"tindex":"2faea0e9-13b5-11e5-ab2e-0583017e8c6c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"count","index":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:614","type":"CtIfImpl","sourcecode":"if (O == null) {\n    for (final java.lang.Object java.lang.Object : java.lang.Iterable<? super O>) {\n        if (java.lang.Object == null) {\n            int++;\n        } \n    }\n} else {\n    for (final java.lang.Object java.lang.Object : java.lang.Iterable<? super O>) {\n        if (O.equals(java.lang.Object)) {\n            int++;\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"2faea0ea-13b5-11e5-ab2e-edc672fd3092","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:584","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:217","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = java.lang.Object.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n        case 2 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n        case 1 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n    }\n} "},"status":-2},{"failures":[801],"tindex":"2faea0eb-13b5-11e5-ab2e-e9243664fc79","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:129","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:107","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException()"},"status":-1},{"failures":[],"tindex":"2faea0ec-13b5-11e5-ab2e-7308336df28a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1056","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return null;\n}"},"variableMap":{"root":"path"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:198","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[802,803],"tindex":"2faea0ed-13b5-11e5-ab2e-3f7a6565a034","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"status":-1},{"failures":[440,804,441],"tindex":"2faec7fe-13b5-11e5-ab2e-c7a8fb1a951f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2016","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"obj":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:290","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"2faec7ff-13b5-11e5-ab2e-b1cc5b1b0526","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:60","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate<? super I>[])"},"variableMap":{"predicates":"key3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"2faec800-13b5-11e5-ab2e-9dd1dbc7d98d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:94","type":"CtIfImpl","sourcecode":"if (char != char) {\n    final int int = char ^ char;\n    return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n} "},"status":-2},{"failures":[805,806,807,808,571,572,573,574,575,590,809,576,810,811,812,813,814,815,816,817,818],"tindex":"2faec801-13b5-11e5-ab2e-81fcfd7471e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:965","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"rval","replacement":"rval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-2},{"failures":[],"tindex":"2faec802-13b5-11e5-ab2e-f94d22d3968f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"variableMap":{"other":"object","keys":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:115","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"2faec803-13b5-11e5-ab2e-fb91559d8093","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:344","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : org.apache.commons.collections4.set.CompositeSet<E>.getSets()) {\n    final java.util.Collection<E> java.util.Collection<E> = org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>);\n    if ((java.util.Collection<E>.size()) > 0) {\n        if ((this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n            throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n        } \n        org.apache.commons.collections4.set.CompositeSet<E>.getMutator().resolveCollision(this, java.util.Set<E>, java.util.Set<E>, java.util.Collection<E>);\n        if ((org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>).size()) > 0) {\n            throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n        } \n    } \n}"},"status":-2},{"failures":[],"tindex":"2faec804-13b5-11e5-ab2e-1942cdcead63","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ArrayStack:107","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.util.EmptyStackException();\n} else {\n    return java.util.ArrayList<E>.get(int);\n}"},"variableMap":{"this":"list","m":"wrappedIteratorIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:142","type":"CtIfImpl","sourcecode":"if ((int) < (int)) {\n    ++(int);\n    return java.util.List<E>.get(((int) - 1));\n} "},"status":-2},{"failures":[],"tindex":"2faec805-13b5-11e5-ab2e-adb424379bc1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"leastIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:368","type":"CtIfImpl","sourcecode":"if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n    E = E;\n    int = int;\n} "},"status":-2},{"failures":[],"tindex":"2faec806-13b5-11e5-ab2e-7b02bab5e58d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"index","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:553","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n} else {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n}"},"status":-2},{"failures":[819,820,821,822,823,397,824,825,826,827,828,829],"tindex":"2faeef17-13b5-11e5-ab2e-39f33d93e943","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:216","type":"CtIfImpl","sourcecode":"if (boolean == false) {\n    return false;\n} "},"variableMap":{"removed":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:174","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final E E = java.util.Iterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-1},{"failures":[830,831,832,833,834,835,836,480,481,837,482,483,484,485,486,487,838,488,839,840,489,490,841,842,843,844,845,846,611,612,847,848,849,850,491,613,851,852,614,615,853,854,616],"tindex":"2faeef18-13b5-11e5-ab2e-8ffd960e2076","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1163","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>.int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"parent":"delegateMap","modCount":"size","expectedModCount":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:398","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 2 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 1 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":-1},{"failures":[],"tindex":"2faeef19-13b5-11e5-ab2e-3381436b8b16","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:358","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purge()"},"variableMap":{"this":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:169","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(K)) {\n    java.util.Map<V, K>.remove(java.util.Map<K, V>.get(K));\n} "},"status":-2},{"failures":[439,440,804,441],"tindex":"2faeef1a-13b5-11e5-ab2e-6775edd9c4ec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[855],"tindex":"2faeef1b-13b5-11e5-ab2e-7beead9ec839","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TreeBag:87","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((\"Objects of type \" + (E.getClass())) + \" cannot be added to \") + \"a naturally ordered TreeBag as it does not implement Comparable\"))"},"status":-1},{"failures":[652],"tindex":"2faeef1c-13b5-11e5-ab2e-851f46d12aa6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtIfImpl","sourcecode":"if (int == 1) {\n    return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E>));\n} "},"variableMap":{"count":"size","closure":"defaultClosure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:96","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E> == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : org.apache.commons.collections4.Closure<? super E>));\n} "},"status":-1},{"failures":[],"tindex":"2faeef1d-13b5-11e5-ab2e-2132699583ed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:305","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[655,856,679],"tindex":"2faeef1e-13b5-11e5-ab2e-d511e9b89594","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger != null) {\n    return org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n} "},"variableMap":{"count":"value","value":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:146","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    return int;\n} "},"status":-1},{"failures":[],"tindex":"2faf162f-13b5-11e5-ab2e-d1af06b57a7f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"index1","index":"index1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:82","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-2},{"failures":[857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913],"tindex":"2faf1630-13b5-11e5-ab2e-21f9e26ea0fa","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2319","type":"CtIfImpl","sourcecode":"if ((int) != 1) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"hit":"bound"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtIfImpl","sourcecode":"if (int > int) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s beyond the end of the array. \"));\n} "},"status":-1},{"failures":[],"tindex":"2faf1631-13b5-11e5-ab2e-355802b6159b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"size","listSize":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:459","type":"CtIfImpl","sourcecode":"if ((T[].int) < int) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T[] T[] = ((T[])(java.lang.reflect.Array.newInstance(T[].getClass().getComponentType(), int)));\n    T[] = T[];\n} "},"status":-2},{"failures":[],"tindex":"2faf1632-13b5-11e5-ab2e-2b8a5d0fbf2e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"2faf1633-13b5-11e5-ab2e-f9de0f723ede","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:841","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"deletedNode","rightChild":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:959","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            }\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":0},{"failures":[914,915,916,917,918,919,920,327,921,922,923],"tindex":"2faf1634-13b5-11e5-ab2e-2be18026c897","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T> == null) || (org.apache.commons.collections4.Predicate<? super T> == null)) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:100","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) == false) {\n    throw new java.lang.IllegalArgumentException(((((\"Cannot add Object \\'\" + E) + \"\\' - Predicate \\'\") + (org.apache.commons.collections4.Predicate<? super E>)) + \"\\' rejected it\"));\n} "},"status":-1},{"failures":[],"tindex":"2faf1635-13b5-11e5-ab2e-13aedc04a1a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:383","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.BitSet.size()) ; int++) {\n    if (java.util.BitSet.get(int)) {\n        return true;\n    } \n}"},"variableMap":{"set":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.List) == false) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"2faf1636-13b5-11e5-ab2e-a1be98b87541","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ArrayStack:122","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.util.EmptyStackException();\n} else {\n    return java.util.ArrayList<E>.remove((int - 1));\n}"},"variableMap":{"this":"list","n":"wrappedIteratorIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:142","type":"CtIfImpl","sourcecode":"if ((int) < (int)) {\n    ++(int);\n    return java.util.List<E>.get(((int) - 1));\n} "},"status":-2},{"failures":[924,925,926,927,928,929],"tindex":"2faf1637-13b5-11e5-ab2e-2949f05b58d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"2faf3d48-13b5-11e5-ab2e-ef3baff047fe","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:380","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    org.apache.commons.collections4.queue.CircularFifoQueue.this.remove();\n    int = -1;\n    return ;\n} "},"variableMap":{"lastReturnedIndex":"newCapacity","start":"oldCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    return ;\n} "},"status":-2},{"failures":[],"tindex":"2faf3d49-13b5-11e5-ab2e-cb91d011fe77","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:542","type":"CtIfImpl","sourcecode":"if ((!boolean) && (int == (int))) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") is the size of the list.\"));\n} "},"status":-2},{"failures":[930,931,932,933,934,935,936,937,938,658,659,939,940,941,942,660,661,662,653,943,654,655,944,656,945,657,946,947,948,949,663,664,665,666,667,668,669,670,671,672,673,950,674,675,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,627,967,628,968,631,632,633,637,638,639,640,643,969,970,644,971,972,973,974,975,646,647,648,976,977,978,979,682,683,684,677,980,678,679,981,680,982,681,983,984,645,985,685,686,687,688,689,690,691,649,692,650,693,986,694,695,987,988,989,990,991],"tindex":"2faf3d4a-13b5-11e5-ab2e-2d1ee487ba28","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"size","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:562","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[],"tindex":"2faf3d4b-13b5-11e5-ab2e-1fa6e352141a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1310","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[438,430,435,453,458,479,471,476,491,483,488,508,500,505,756,542,535,539],"tindex":"2faf3d4c-13b5-11e5-ab2e-21744fd268d8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:252","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n            return true;\n        } \n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n}"},"status":-1},{"failures":[],"tindex":"2faf3d4d-13b5-11e5-ab2e-f1c06ed4d7f3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:134","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n    if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n        return int;\n    } \n    int++;\n}"},"variableMap":{"next":"header","this":"this","header":"header","i":"i","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:145","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n    if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n        return int;\n    } \n    int--;\n}"},"status":0},{"failures":[],"tindex":"2faf3d4e-13b5-11e5-ab2e-3f21af0921a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:95","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n    return false;\n} "},"status":-2},{"failures":[992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,386,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036],"tindex":"2faf3d4f-13b5-11e5-ab2e-01a89f48c538","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:158","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int))) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n        final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n        return null;\n    } else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        }\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n        } \n    } \n} "},"status":-1},{"failures":[1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049],"tindex":"2faf3d50-13b5-11e5-ab2e-e7ed4b386c7c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:92","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\");\n} "},"variableMap":{"canRemove":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:187","type":"CtWhileImpl","sourcecode":"while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n    E E = java.util.Iterator<? extends E>.next();\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n        E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n    } \n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":98,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}