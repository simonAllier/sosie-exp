{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":121,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":280,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":296,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":424,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":431,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":84,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":311,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":501,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":506,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":28,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":256,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":271,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":549,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":194,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":410,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":462,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":414,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":304,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":413,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":433,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":376,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":181,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":592,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":325,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":67,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":590,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":548,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":223,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":69,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":554,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":187,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":320,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":518,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":445,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":83,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":250,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":550,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":254,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationException":111,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":521,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":114,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":385,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":417,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":577,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":255,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":515,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":300,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":58,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":568,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":62,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":529,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSimpleSerialization":372,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":172,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":229,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":566,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":124,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":511,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":589,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":349,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":206,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":148,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":507,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":292,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":318,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":109,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":235,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":282,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":227,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testEmptyCollection":110,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":465,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":180,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":53,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":352,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":516,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":182,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":563,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":258,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":261,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":419,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":157,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":195,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":264,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":93,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":127,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":601,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":401,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":446,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":59,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":221,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":481,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":557,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":338,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":558,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":556,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":483,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":203,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":1,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":273,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":156,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":331,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":224,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":204,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":436,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":552,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":356,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":131,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":604,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsContract":407,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":288,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":17,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":230,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":335,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":6,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":341,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":270,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":241,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":308,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":253,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":168,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":358,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":200,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":442,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":546,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":388,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":14,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":9,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":479,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":238,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":468,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":266,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":545,"org.apache.commons.collections4.TransformerUtilsTest.testCloneTransformer":583,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":100,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":403,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":365,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":392,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":538,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":334,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":80,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":328,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":225,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEmptyListSort":367,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":178,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":500,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":565,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":155,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":76,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":164,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":259,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":499,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":597,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":544,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":30,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":603,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":391,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":132,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":90,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":302,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":420,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":56,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":210,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":326,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":478,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":97,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":285,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":179,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":0,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":201,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":560,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":570,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":416,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":567,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":471,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":286,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInCollectionToGetInstance":502,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":555,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":239,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":575,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":576,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":595,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":608,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":20,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":348,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":434,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":295,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":289,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":23,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":265,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":27,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":584,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":564,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":333,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":547,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":574,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":41,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":491,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testFullIterator":115,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":330,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":383,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":219,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":301,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":492,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsSelfHashCode":374,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":461,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":276,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":218,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":54,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":149,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":472,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":535,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":551,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":540,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":559,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":126,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":125,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":32,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":439,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":133,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":339,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":312,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsSelfHashCode":160,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":134,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":51,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testMultiplePeek":108,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":490,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":283,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":191,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":404,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":425,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":362,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":228,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":458,"org.apache.commons.collections4.comparators.ComparatorChainTest.testNoopComparatorChain":444,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":297,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":166,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":291,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":78,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":360,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":260,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":151,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":82,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicSerialization":582,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":49,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":519,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":594,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":599,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":73,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":193,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":329,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":509,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":19,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":281,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":116,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":340,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":65,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":236,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":207,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":309,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":353,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":354,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":357,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":470,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":443,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":119,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":605,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":532,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":495,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":99,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":486,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":530,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":70,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":252,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":293,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":29,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":314,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":220,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":120,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":315,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":77,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":384,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":61,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":456,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":587,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":47,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":139,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":432,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":476,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":381,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":475,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":350,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":593,"org.apache.commons.collections4.map.LRUMapTest.testReset":183,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectEqualsSelf":370,"org.apache.commons.collections4.map.TransformedSortedMapTest.testLastKey":313,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":469,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":513,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":405,"org.apache.commons.collections4.CollectionUtilsTest.exists":106,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":562,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":343,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":393,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":249,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":591,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":34,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":596,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":351,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":46,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":94,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":466,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":298,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":543,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":246,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSinglePeek":107,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":346,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":192,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":232,"org.apache.commons.collections4.map.LinkedMapTest.testReset":244,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":411,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":572,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":43,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":437,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":573,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":586,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":571,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":18,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":303,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":310,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":272,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":233,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":287,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":222,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":359,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":74,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":217,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":171,"org.apache.commons.collections4.set.MapBackedSetTest.testEqualsNull":158,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":226,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":422,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":579,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":154,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":438,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":542,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":48,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":138,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":169,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":87,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":144,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":175,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":89,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":231,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":257,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":377,"org.apache.commons.collections4.bag.PredicatedBagTest.testEmptyBagCompatibility":493,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":408,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":522,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":380,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":145,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":423,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":585,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":243,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":279,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":488,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":215,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":162,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":463,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":274,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":190,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":50,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":214,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":88,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":101,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":345,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":269,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":497,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":332,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":147,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":430,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":102,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":165,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":494,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":363,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":455,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":13,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":234,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":389,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":31,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":10,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":68,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":140,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":8,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":209,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSerializeDeserializeThenCompare":375,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":216,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":75,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":85,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":103,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":473,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":427,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":159,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":141,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":378,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":440,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":248,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":202,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":113,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":418,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":508,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":130,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":498,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":496,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":60,"org.apache.commons.collections4.SetUtilsTest.testHashCode":117,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":355,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":44,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorIsSerializable":369,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":3,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":104,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":347,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":92,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":72,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":480,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":123,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSimpleSerialization":409,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":284,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":137,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":177,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":342,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsSelfHashCode":406,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":537,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":316,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":517,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":421,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":174,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":2,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":600,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":454,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":143,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":453,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":33,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":450,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":449,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":452,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":321,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":451,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":263,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":448,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":262,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":447,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":323,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":390,"org.apache.commons.collections4.set.CompositeSetTest.testContains":344,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":167,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":198,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":245,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":25,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":520,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":38,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":135,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":327,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEqualsNull":371,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":578,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":211,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":267,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":294,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":459,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":474,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEmptyBagCompatibility":477,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":539,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":39,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":36,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":188,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":79,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":400,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":435,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":484,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":534,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":277,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":464,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":4,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":307,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":186,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":63,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":531,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx6":505,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":387,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":524,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":42,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":382,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":11,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":426,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":512,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":402,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":412,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":525,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":189,"org.apache.commons.collections4.bag.TreeBagTest.testEmptyBagCompatibility":467,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":607,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":240,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":569,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":487,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":528,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEmptyBagCompatibility":489,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":527,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicSerializationError":581,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":526,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":533,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":598,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":602,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":86,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":457,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":561,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":24,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":105,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":118,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":609,"org.apache.commons.collections4.CollectionUtilsTest.find":415,"org.apache.commons.collections4.bag.HashBagTest.testEmptyBagCompatibility":485,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":386,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":536,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":299,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":322,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":153,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":379,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":399,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":398,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":397,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":205,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":482,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":394,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":395,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":319,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":396,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":337,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":553,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicCopyConstructor":580,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":336,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":364,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":212,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":98,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":26,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":278,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":142,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":91,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":606,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":247,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":112,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":81,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":129,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":242,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":588,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":55,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsContract":373,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":197,"org.apache.commons.collections4.map.LRUMapTest.testLRU":185,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":514,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":57,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":510,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":45,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":213,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":128,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":275,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":429,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":368,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":173,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":237,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":428,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":35,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":460,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":170,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":306,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":366,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":150,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":503,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":64,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":441,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":7,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":305,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":96,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":95,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":122,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":268,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":37,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":136,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":541,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":184,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":361,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":504,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":523,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":5,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":251,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":146,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":290,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":66,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":152,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":199,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":208,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":317,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":176,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":324,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":196,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":161,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":163},"transformations":[{"failures":[],"tindex":"fef30ee4-13ad-11e5-b4fa-d508bdfeac3c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:854","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"leftChild":"parent","node":"parent","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:615","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[0,1],"tindex":"fef754a5-13ad-11e5-b4fa-1ff8b0f2d500","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1008","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:95","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n    return false;\n} "},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"tindex":"fef754a6-13ad-11e5-b4fa-c1686faf52fd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:907","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"node","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-1},{"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102],"tindex":"fef77bb7-13ad-11e5-b4fa-236d0a89d81b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:621","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.init()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:221","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, E);\n}"},"status":-1},{"failures":[],"tindex":"fef7a2c8-13ad-11e5-b4fa-a56adea6e171","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:194","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.previousIndex();\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:161","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.nextIndex();\n} "},"status":-2},{"failures":[103,104,105],"tindex":"fef7a2c9-13ad-11e5-b4fa-7f8e29a556c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2016","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:245","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsValue(java.lang.Object);\n} "},"status":-1},{"failures":[106],"tindex":"fef7a2ca-13ad-11e5-b4fa-9f0b5f6ae624","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:876","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<C> != null) {\n    for (final C C : java.lang.Iterable<C>) {\n        if (!(org.apache.commons.collections4.Predicate<? super C>.evaluate(C))) {\n            return false;\n        } \n    }\n} "},"variableMap":{"input":"input","predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:847","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<C> != null) && (org.apache.commons.collections4.Predicate<? super C> != null)) {\n    for (final C C : java.lang.Iterable<C>) {\n        if (org.apache.commons.collections4.Predicate<? super C>.evaluate(C)) {\n            return true;\n        } \n    }\n} "},"status":-1},{"failures":[107,108],"tindex":"fef817fb-13ad-11e5-b4fa-e73a0283b3bc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:137","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return ;\n} "},"variableMap":{"hasNext":"exhausted"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:82","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    return ;\n} "},"status":-1},{"failures":[],"tindex":"fef817fc-13ad-11e5-b4fa-293b2408d86e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:122","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[109,110,111,112,113,114,115,116],"tindex":"fef817fd-13ad-11e5-b4fa-47f3fb08556f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"indexOfLargestMobileInteger","listSize":"indexOfLargestMobileInteger"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:115","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int[].int) ; int++) {\n    if ((((boolean[][int]) && (int < ((int[].int) - 1))) && ((int[][int]) > (int[][(int + 1)]))) || (((!(boolean[][int])) && (int > 0)) && ((int[][int]) > (int[][(int - 1)])))) {\n        if ((int[][int]) > int) {\n            int = int[][int];\n            int = int;\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"fef83f0e-13ad-11e5-b4fa-690881d362bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:263","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.modify()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1287","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"fef9296f-13ad-11e5-b4fa-75777be4a8d4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:68","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : java.util.AbstractMap<K, V>.entrySet()) {\n    java.lang.StringBuilder.append(\"  \").append(java.util.Map.Entry<K, V>).append(\"\\n\");\n}"},"status":0},{"failures":[117],"tindex":"fef95080-13ad-11e5-b4fa-6f8369490b33","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"hashCode","proposedCapacity":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:146","type":"CtForEachImpl","sourcecode":"for (final T T : java.util.Collection<T>) {\n    if (T != null) {\n        int += T.hashCode();\n    } \n}"},"status":-1},{"failures":[118,119,120,121,122,123,124,22,24,125,126,25,26,27,28,29,30,31,32],"tindex":"fef95081-13ad-11e5-b4fa-fdc733fa05df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:965","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"replacement","replacement":"replacement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:959","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            }\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":-1},{"failures":[127,128,129,103,130,131,132,104,133,134],"tindex":"fefa13d2-13ad-11e5-b4fa-31e5097001ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.size();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"fefa13d3-13ad-11e5-b4fa-6d4aae2df79a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:319","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntrySet<K, V>(this);\n} "},"status":-2},{"failures":[135,136,137,138,139],"tindex":"fefa13d4-13ad-11e5-b4fa-0b297caa72c2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:94","type":"CtWhileImpl","sourcecode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(boolean))) {\n    final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if (java.util.Iterator<? extends E> != null) {\n        java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n    } else {\n        boolean = true;\n    }\n}"},"status":-1},{"failures":[],"tindex":"fefa13d5-13ad-11e5-b4fa-a184c8ce3e0d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1167","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,127,128,238,129,103,130,132,104,133,134,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300],"tindex":"fefa13d6-13ad-11e5-b4fa-0ff400c3dd86","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"status":-1},{"failures":[301,302,303,304,305,306],"tindex":"fefa3ae7-13ad-11e5-b4fa-656f77c9ecdb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:231","type":"CtIfImpl","sourcecode":"if ((int[][int]) <= (int[][(int + int)])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n} "},"variableMap":{"vUp":"vUp","start1":"offset","vDown":"vUp","delta":"d","end2":"start2","this":"this","i":"end2","end1":"end1","k":"delta","start2":"end1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:212","type":"CtForImpl","sourcecode":"for (int int = int - int ; int <= (int + int) ; int += 2) {\n    final int int = (int + int) - int;\n    if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n        int[][int] = (int[][(int + 1)]) - 1;\n    } else {\n        int[][int] = int[][(int - 1)];\n    }\n    int int = (int[][int]) - 1;\n    int int = ((int - int) + int) - int;\n    while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = int--;\n        int--;\n    }\n    if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n        if ((int[][int]) <= (int[][(int + int)])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"fefa3ae8-13ad-11e5-b4fa-b97c78f877ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TransformedBag:78","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Transformer<? super E, ? extends E> != null) && (org.apache.commons.collections4.Bag<E> != null)) && ((org.apache.commons.collections4.Bag<E>.size()) > 0)) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E[] E[] = ((E[])(org.apache.commons.collections4.Bag<E>.toArray()));\n    org.apache.commons.collections4.Bag<E>.clear();\n    for (final E E : E[]) {\n        org.apache.commons.collections4.bag.TransformedBag<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n} "},"status":-2},{"failures":[33,34,35,36,37,38,44,45,46,47,48,49,50,51,52,53,54,55,39,56,58,59,60,61,62,63,64,65,307,66,67,69,70,71,72,73,79,80,81,82,83,84,85,86,87,88,89,74,90,92,93,94,95,96,97,98,99,308,100,101],"tindex":"fefa3ae9-13ad-11e5-b4fa-b5f63fa36bf7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:813","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"current":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:221","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, E);\n}"},"status":-1},{"failures":[],"tindex":"fefa3aea-13ad-11e5-b4fa-1905115fdd91","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:708","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"variableMap":{"current":"right","tree":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"status":-2},{"failures":[193,197,309,310,252,256,311,312],"tindex":"fefa61fb-13ad-11e5-b4fa-61d0e20c3d1b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1386","type":"CtReturnImpl","sourcecode":"return ((java.util.Collection<?>)(java.lang.Object)).isEmpty()"},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:148","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n        return true;\n    } \n}"},"status":-1},{"failures":[313],"tindex":"fefa61fc-13ad-11e5-b4fa-b9bf84939a31","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:133","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().firstKey()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:137","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().lastKey()"},"status":-1},{"failures":[314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343],"tindex":"fefa61fd-13ad-11e5-b4fa-73b7e2c1c8bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:262","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(1);\n    java.util.Collection<V>.add(((V)(java.lang.Object)));\n    if ((java.util.Collection<V>.size()) > 0) {\n        org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n        boolean = true;\n    } \n} else {\n    boolean = java.util.Collection<V>.add(((V)(java.lang.Object)));\n}"},"status":-1},{"failures":[344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363],"tindex":"fefa61fe-13ad-11e5-b4fa-4da0f4379674","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:128","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    if (java.util.Set<E>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"fefa61ff-13ad-11e5-b4fa-c5557a534162","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"length","newCapacity":"length","proposedCapacity":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1163","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(java.lang.Object[][int]));\n    if ((java.lang.Object[] == null) || ((java.lang.Object[].int) < 2)) {\n        throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + int));\n    } \n    java.util.Map<K, V>.put(((K)(java.lang.Object[][0])), ((V)(java.lang.Object[][1])));\n}"},"status":-2},{"failures":[],"tindex":"fefa8910-13ad-11e5-b4fa-496a2ca1f4d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:122","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[364,365,366,367,368,369,370,371,372,373,374,375],"tindex":"fefa8911-13ad-11e5-b4fa-a5c39b4afe04","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:239","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"Comparator ordering cannot be changed after the first comparison is performed\");\n} "},"variableMap":{"isLocked":"reverse"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:153","type":"CtIfImpl","sourcecode":"if (boolean == true) {\n    java.util.BitSet.set(((java.util.List<java.util.Comparator<E>>.size()) - 1));\n} "},"status":-1},{"failures":[],"tindex":"fefa8912-13ad-11e5-b4fa-4fd5121432f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:453","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.SingletonMap<K, V>.getValue()"},"variableMap":{"parent":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:87","type":"CtReturnImpl","sourcecode":"return java.util.Map<K, V>.put(K, V)"},"status":-2},{"failures":[376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409],"tindex":"ff01dc13-13ad-11e5-b4fa-77da483fda37","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:920","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry())"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, null);\n}"},"status":-1},{"failures":[376,377,378,380,381,379,382,383,385,386,387,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405],"tindex":"ff01dc14-13ad-11e5-b4fa-135e439a49fd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:696","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[213,410,411,412,105,270,413,414,282],"tindex":"ff01dc15-13ad-11e5-b4fa-d1f1dccd41c4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1016","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:244","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"ff01dc16-13ad-11e5-b4fa-5f4692ef3dfa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:722","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"from":"y","to":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:915","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[],"tindex":"ff020327-13ad-11e5-b4fa-8dffe69c707b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"ff020328-13ad-11e5-b4fa-bb53e1582da8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"bitIndex","removeIndex":"bitIndex","currentIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"ff020329-13ad-11e5-b4fa-09780db27a48","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:383","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.BitSet.size()) ; int++) {\n    if (java.util.BitSet.get(int)) {\n        return true;\n    } \n}"},"variableMap":{"set":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n        if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n            return true;\n        } \n    }\n} else {\n    for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n            return true;\n        } \n    }\n}"},"status":-2},{"failures":[415],"tindex":"ff02032a-13ad-11e5-b4fa-a72b0b1a3bdc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:643","type":"CtForEachImpl","sourcecode":"for (final T T : java.lang.Iterable<T>) {\n    if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n        return T;\n    } \n}"},"variableMap":{"predicate":"predicate","collection":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:642","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<T> != null) && (org.apache.commons.collections4.Predicate<? super T> != null)) {\n    for (final T T : java.lang.Iterable<T>) {\n        if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n            return T;\n        } \n    }\n} "},"status":-1},{"failures":[416],"tindex":"ff02032b-13ad-11e5-b4fa-01f296fd71c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.size();\n} "},"variableMap":{"delegateMap":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:167","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> , int++) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.java.lang.Object)) {\n        return int;\n    } \n}"},"status":-1},{"failures":[],"tindex":"ff02032c-13ad-11e5-b4fa-6fbe308e6da8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:337","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.bag.HashBag<O>.remove(O, 1))) {\n    java.util.ArrayList<O>.add(O);\n} "},"status":-2},{"failures":[417,418,419,420,421,422,423,424,425,426,427,428,429],"tindex":"ff02032d-13ad-11e5-b4fa-d5d94a2fb291","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"variableMap":{"it2":"iterator","it1":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"ff02032e-13ad-11e5-b4fa-3f558fb4d8b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:368","type":"CtUnaryOperatorImpl","sourcecode":"~(int << 9)"},"status":0},{"failures":[],"tindex":"ff022a3f-13ad-11e5-b4fa-f992920072dd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1352","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.util.Map.Entry<K, V>>.hasNext()) {\n    int += java.util.Iterator<java.util.Map.Entry<K, V>>.next().hashCode();\n}"},"status":-2},{"failures":[],"tindex":"ff022a40-13ad-11e5-b4fa-f3498fc30a1b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"index1","proposedCapacity":"endIndex1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:82","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-2},{"failures":[430,431],"tindex":"ff022a41-13ad-11e5-b4fa-ef80de19c31d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtIfImpl","sourcecode":"if (java.util.concurrent.TimeUnit == null) {\n    throw new java.lang.IllegalArgumentException(\"Time unit must not be null\");\n} "},"variableMap":{"timeUnit":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"ff07f6a2-13ad-11e5-b4fa-a792960c10ca","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:99","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"ff07f6a3-13ad-11e5-b4fa-936f471036de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:124","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.hasPrevious();\n} "},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:372","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n        continue;\n    } \n    boolean boolean = false;\n    while (java.util.Iterator<?>.hasNext()) {\n        final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n        java.util.Set<java.lang.Object>.add(java.lang.Object);\n        if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n            boolean = true;\n            break;\n        } \n    }\n    if (boolean) {\n        continue;\n    } else {\n        return false;\n    }\n}"},"status":-2},{"failures":[],"tindex":"ff07f6a4-13ad-11e5-b4fa-f1ff5fa36cbd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"maxElements"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    int = boolean ? int : 0;\n} else {\n    int = (int) - (int);\n}"},"status":-2},{"failures":[],"tindex":"ff07f6a5-13ad-11e5-b4fa-dd8c6247d929","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"hash","currentIndex":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:306","type":"CtIfImpl","sourcecode":"if (null != (java.util.List<java.util.Comparator<E>>)) {\n    int ^= java.util.List<java.util.Comparator<E>>.hashCode();\n} "},"status":0},{"failures":[],"tindex":"ff07f6a6-13ad-11e5-b4fa-81727fc16c86","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1008","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:432","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"ff081db7-13ad-11e5-b4fa-8f406ac0ab7d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:573","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"p":"h","parent":"h","left":"h","h":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:482","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-2},{"failures":[],"tindex":"ff081db8-13ad-11e5-b4fa-d3fe94dcb7eb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1056","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return null;\n}"},"variableMap":{"root":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:708","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"ff081db9-13ad-11e5-b4fa-5d8563f6a706","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1504","type":"CtTryImpl","sourcecode":"try {\n    final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(java.util.Collection<?>);\n    return org.apache.commons.collections4.BoundedCollection<?>.maxSize();\n} catch (final java.lang.IllegalArgumentException ex) {\n    return -1;\n}"},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1501","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> instanceof org.apache.commons.collections4.BoundedCollection) {\n    return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).maxSize();\n} "},"status":-2},{"failures":[],"tindex":"ff081dba-13ad-11e5-b4fa-af42b7f4b707","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:917","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry());\n} else {\n    return null;\n}"},"variableMap":{"root":"right","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:198","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[376,377,432,433,378,380,381,379,382,383,385,386,387,388,389,390,391,392,393,394,395,397,398,399,401],"tindex":"ff081dbb-13ad-11e5-b4fa-6d705580d988","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"index1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:82","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-1},{"failures":[],"tindex":"ff081dbc-13ad-11e5-b4fa-2b12d57c0157","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:440","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    final java.lang.Integer java.lang.Integer = java.util.Map<O, java.lang.Integer>.get(O);\n    if (java.lang.Integer == null) {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n    } else {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n    }\n}"},"status":-2},{"failures":[434,360],"tindex":"ff081dbd-13ad-11e5-b4fa-8b8be08466e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:385","type":"CtInvocationImpl","sourcecode":"this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.putAll(this, this.java.util.Map<K, V>[], java.util.Map<? extends K, ? extends V>)"},"status":-1},{"failures":[435,436,437,438,439,440,441,442,443],"tindex":"ff081dbe-13ad-11e5-b4fa-21af6406c3f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:133","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<K, V> = this;\n} "},"status":-1},{"failures":[364,444,365,366,367,368,369,370,371,372,373,374,375],"tindex":"ff0844cf-13ad-11e5-b4fa-6fde9d7702db","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:92","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\");\n} "},"variableMap":{"canRemove":"reverse"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:153","type":"CtIfImpl","sourcecode":"if (boolean == true) {\n    java.util.BitSet.set(((java.util.List<java.util.Comparator<E>>.size()) - 1));\n} "},"status":-1},{"failures":[],"tindex":"ff0844d0-13ad-11e5-b4fa-bd987e5f92a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"ff0844d1-13ad-11e5-b4fa-d5db271735ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:319","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntrySet<K, V>(this);\n} "},"status":-2},{"failures":[445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464],"tindex":"ff0844d2-13ad-11e5-b4fa-b3f9a9d821b5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"start","index":"start"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:307","type":"CtIfImpl","sourcecode":"if (null != E) {\n    E[][(int)++] = null;\n    if ((int) >= (int)) {\n        int = 0;\n    } \n    boolean = false;\n} "},"status":-1},{"failures":[],"tindex":"ff0844d3-13ad-11e5-b4fa-cf451124fe85","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"from":"child","to":"child","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:615","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"ff0844d4-13ad-11e5-b4fa-3b9ad2c366ec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:295","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<E>) == null) {\n    java.util.ArrayList<E> = new java.util.ArrayList<E>(java.util.ArrayList<java.util.Iterator<? extends E>>.size());\n    java.util.BitSet = new java.util.BitSet(java.util.ArrayList<java.util.Iterator<? extends E>>.size());\n    for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n        java.util.ArrayList<E>.add(null);\n        java.util.BitSet.clear(int);\n    }\n} "},"status":-2},{"failures":[],"tindex":"ff0844d5-13ad-11e5-b4fa-bb00dcd75d09","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:686","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<T>.hasNext()) {\n    C.execute(java.util.Iterator<T>.next());\n}"},"status":-2},{"failures":[],"tindex":"ff0844d6-13ad-11e5-b4fa-03eaf9c1019e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:483","type":"CtAssignmentImpl","sourcecode":"int = int"},"variableMap":{"pos":"nodeCount","nextIndex":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1270","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"status":0},{"failures":[465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500],"tindex":"ff0844d7-13ad-11e5-b4fa-63e79731b308","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2016","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"ff0844d8-13ad-11e5-b4fa-b795f861fa18","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtIfImpl","sourcecode":"if ((java.util.Comparator<? super E>) == null) {\n    throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n} "},"variableMap":{"comparator":"comparator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:359","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    if (int == (-1)) {\n        int = int;\n        E = java.util.ArrayList<E>.get(int);\n    } else {\n        final E E = java.util.ArrayList<E>.get(int);\n        if ((java.util.Comparator<? super E>) == null) {\n            throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n        } \n        if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n            E = E;\n            int = int;\n        } \n    }\n} "},"status":0},{"failures":[],"tindex":"ff086be9-13ad-11e5-b4fa-13b5226117bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:112","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":0},{"failures":[],"tindex":"ff086bea-13ad-11e5-b4fa-0588015e0a67","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"variableMap":{"other":"value","keys":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n    return true;\n} "},"status":-2},{"failures":[333,501],"tindex":"ff086beb-13ad-11e5-b4fa-61685261237b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:858","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"variableMap":{"removed":"removed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:216","type":"CtIfImpl","sourcecode":"if (boolean == false) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"ff086bec-13ad-11e5-b4fa-f9df9bf036e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1232","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.mapIterator() ; org.apache.commons.collections4.MapIterator<K, V>.hasNext() ; ) {\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<K, V>.next());\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<K, V>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"ff086bed-13ad-11e5-b4fa-01042c101e9b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"length","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:431","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    int += this.java.util.Map<K, V>[][int].size();\n}"},"status":-2},{"failures":[],"tindex":"ff086bee-13ad-11e5-b4fa-c314365d65c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:152","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"ff086bef-13ad-11e5-b4fa-936785ac6755","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:49","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.OrderedMapIterator<K, ? extends V> == null) {\n    throw new java.lang.IllegalArgumentException(\"OrderedMapIterator must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"ff086bf0-13ad-11e5-b4fa-e5b398ab7bb3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1301","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"variableMap":{"node":"node","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE","this":"this","newNode":"newNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1287","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[502,503,504,505,506],"tindex":"ff086bf1-13ad-11e5-b4fa-21ead3e0df13","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:106","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"status":-1},{"failures":[],"tindex":"ff086bf2-13ad-11e5-b4fa-5dc5cef8f198","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[376,377,378,382,383,385,386,387,389,390,391,392,393,401,403,404],"tindex":"ff086bf3-13ad-11e5-b4fa-4570abcda036","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:660","type":"CtWhileImpl","sourcecode":"while (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        break;\n    } \n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[507,508,509,510,511,2,512,513,514,515,516,3,517,518,4,5,519,6,7,8,520,9,10,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,11,12,538,539,540,541,13,542,543,544,545,119,14,120,121,546,122,123,124,547,15,16,548,17,18,19,549,20,21,550,22,551,552,23,24,553,554,555,556,557,558,125,126,559,25,560,561,26,27,562,563,28,29,30,31,32],"tindex":"ff089304-13ad-11e5-b4fa-57de62d57b75","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:915","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-1},{"failures":[564,565,566,567],"tindex":"ff089305-13ad-11e5-b4fa-bb72c1809848","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"size","maxElements":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:245","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"ff089306-13ad-11e5-b4fa-fba62b5df778","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:810","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[568,569,570,571,572,573,574,575,576,577,104],"tindex":"ff089307-13ad-11e5-b4fa-b7f42fe6df05","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1392","type":"CtReturnImpl","sourcecode":"return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false"},"variableMap":{"object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:225","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"ff089308-13ad-11e5-b4fa-0ba5dce28f12","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:432","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<K>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"status":-2},{"failures":[],"tindex":"ff089309-13ad-11e5-b4fa-ef1f26ca73f3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:114","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.intValue()"},"variableMap":{"count":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:168","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.java.lang.Object)) {\n    return int;\n} "},"status":-2},{"failures":[],"tindex":"ff08930a-13ad-11e5-b4fa-dd72f2cb2b81","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:432","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<K>emptyOrderedIterator();\n} "},"status":0},{"failures":[],"tindex":"ff08930b-13ad-11e5-b4fa-ef2d5340f737","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.UnmodifiableList:60","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.UnmodifiableList<E>(java.util.List<? extends E>)"},"status":-2},{"failures":[578,579,91],"tindex":"ff08930c-13ad-11e5-b4fa-b5c40ef695c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:258","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    java.util.Iterator<E>.next();\n    java.util.Iterator<E>.remove();\n}"},"status":-1},{"failures":[580,581,582,583],"tindex":"ff08ba1d-13ad-11e5-b4fa-17de635bc4f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:74","type":"CtIfImpl","sourcecode":"if (T instanceof java.io.Serializable) {\n    return ((org.apache.commons.collections4.Factory<T>)(new org.apache.commons.collections4.functors.PrototypeFactory.PrototypeSerializationFactory<java.io.Serializable>(((java.io.Serializable)(T)))));\n} "},"status":-1},{"failures":[],"tindex":"ff08ba1e-13ad-11e5-b4fa-9f1f0c9bd30c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"variableMap":{"delegateMap":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:99","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>.isSetValueChecking()) {\n    return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this);\n} "},"status":-2},{"failures":[509,510,511,2,4,5,6,7,8,520,9,10,539,540,541,13,118,122,123,124,15,16,17,18,19,549,20,21,22,23,24,26],"tindex":"ff08ba1f-13ad-11e5-b4fa-4db4c3923d83","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:991","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"dataElement":"dataElement","deletedNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"ff08ba20-13ad-11e5-b4fa-0f70ad1b3533","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:321","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.set.CompositeSet<K>.addComposited(this.java.util.Map<K, V>[][int].keySet());\n}"},"status":-2},{"failures":[],"tindex":"ff08ba21-13ad-11e5-b4fa-f517da643348","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:333","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.getClass().equals(java.util.HashSet.java.util.HashSet)) {\n    java.util.Set<E> = new java.util.HashSet<E>(java.util.List<E>.size());\n} else {\n    try {\n        java.util.Set<E> = java.util.Set<E>.getClass().newInstance();\n    } catch (final java.lang.InstantiationException ie) {\n        java.util.Set<E> = new java.util.HashSet<E>();\n    } catch (final java.lang.IllegalAccessException iae) {\n        java.util.Set<E> = new java.util.HashSet<E>();\n    }\n}"},"status":-2},{"failures":[564,565,566,567],"tindex":"ff08ba22-13ad-11e5-b4fa-1bb90c92c15d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:245","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"ff08e133-13ad-11e5-b4fa-01d0bd11a78a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[584,585,586,587,588,589,590,591,592,593,594,595],"tindex":"ff08e134-13ad-11e5-b4fa-4bba77a3032f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2319","type":"CtIfImpl","sourcecode":"if ((int) != 1) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"hit":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:356","type":"CtIfImpl","sourcecode":"if ((java.util.BitSet.get(int)) == false) {\n    org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n} "},"status":-1},{"failures":[376,377,432,433,596,378,380,381,379,597,382,383,384,385,386,387,388,389,390,598,391,599,600,392,393,601,602,603,394,395,396,397,398,399,400,604,605,401,606,607,608,402,609,403,404,405],"tindex":"ff08e135-13ad-11e5-b4fa-b5a661978c29","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:242","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getValue() : null"},"variableMap":{"entry":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    return null;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } \n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":98,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}