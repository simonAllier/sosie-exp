{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":13,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":482,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":535,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":621,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":454,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":389,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":147,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":25,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":50,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":290,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":313,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":512,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":320,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":378,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":255,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":225,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":131,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":530,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":190,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":672,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":684,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":685,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":0,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":294,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":498,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":141,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":138,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":201,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":667,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":21,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":166,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":268,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":570,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":687,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":325,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":383,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":590,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":598,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":35,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":160,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":464,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":471,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":68,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":571,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":572,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":222,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":27,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":417,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":620,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":28,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":439,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":517,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":440,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":78,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":276,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":478,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":200,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":241,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":64,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":312,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":659,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":86,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":663,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":121,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":257,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":428,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":17,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":493,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":58,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":137,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":217,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":106,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":55,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":343,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":296,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":228,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":558,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":548,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":422,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":65,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":221,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":652,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":49,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":315,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":459,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":561,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":505,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":386,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":408,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":631,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":393,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":568,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":588,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":465,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":285,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":346,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":260,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":38,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":381,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":660,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":37,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":574,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":697,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":480,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":515,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":111,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":681,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":384,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":31,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":189,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":399,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":595,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":157,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":527,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":22,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":528,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":550,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":326,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":529,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":72,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":148,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":494,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":466,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":253,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":419,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":311,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":182,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":118,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":192,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":264,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":250,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":11,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":169,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":76,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":240,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":594,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":297,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":395,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":193,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":508,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":196,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":9,"org.apache.commons.collections4.TransformerUtilsTest.testCloneTransformer":153,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":375,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":211,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":281,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":97,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":149,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":441,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":29,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":213,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":503,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":546,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":377,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":376,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":125,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":427,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":110,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":486,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":673,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":392,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":473,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":674,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":114,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":372,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":379,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":539,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":373,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":374,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":446,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":695,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":173,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":252,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":8,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":52,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":280,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":400,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":629,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":129,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":306,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":658,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":491,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":492,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":490,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":347,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":357,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":423,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":468,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":96,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":614,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":635,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":350,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":44,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":429,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":430,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":36,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":407,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":144,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":355,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":424,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":552,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":26,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":215,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":245,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":174,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":604,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":300,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":506,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":696,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":47,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":132,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":488,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":487,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":18,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":145,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":304,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":489,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":327,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":275,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":128,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":368,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":444,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":443,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":348,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":520,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":367,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":283,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":653,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":92,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":580,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":30,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":295,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":337,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":352,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":218,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":341,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":299,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":2,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":42,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":434,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":41,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":54,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":432,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":404,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":457,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":516,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":239,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":405,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":447,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":650,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":433,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":150,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":549,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":500,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":583,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":531,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":340,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":195,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":305,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":597,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":458,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":108,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicSerialization":156,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":619,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":648,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":71,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":180,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":143,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":319,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":617,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":60,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":24,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":536,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":390,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":666,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":353,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":178,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":179,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":191,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":576,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":10,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":89,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":229,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":87,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":485,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":637,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":613,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":686,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":175,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":246,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":310,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":514,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":671,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":51,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":370,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":12,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":158,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":135,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":662,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":177,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":646,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":496,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testAddThenRemove":1,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":142,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":219,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":62,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":48,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":560,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":387,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":303,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":282,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":477,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":308,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":139,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":267,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":556,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":640,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":220,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":632,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":456,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":7,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":328,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":403,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":436,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":170,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":469,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":541,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":259,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":331,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":416,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":207,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":318,"org.apache.commons.collections4.map.LinkedMapTest.testReset":426,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":553,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":244,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":262,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":134,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":463,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":23,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":483,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":130,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":513,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":258,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":382,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":186,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":102,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":194,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":216,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":243,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":627,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":584,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":542,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":547,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":116,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":593,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":582,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":504,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":6,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":615,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":234,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":647,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":119,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":351,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":624,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":453,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":628,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":123,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":445,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":452,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":579,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":451,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":589,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":551,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":626,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":314,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":575,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":288,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":544,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":497,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":600,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":79,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":380,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":455,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":364,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":573,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":103,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":133,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":421,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":534,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":608,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":361,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":691,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":112,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":555,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":202,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":336,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":254,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":538,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":569,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":317,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":164,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":412,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":146,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":413,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":414,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":187,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":484,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":601,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":385,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":649,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":360,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":204,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":625,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":638,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":335,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":511,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":675,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEmptyIterator":140,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":565,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":105,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":115,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":566,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":199,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":567,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":4,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":291,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":557,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":53,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":292,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":77,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":284,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":501,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":98,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":362,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":74,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":263,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":269,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":356,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":462,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":363,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":369,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":622,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":247,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":208,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":210,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":99,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testReset":266,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":521,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":642,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":162,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":307,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":56,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":230,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":397,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":612,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":330,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":661,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":188,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":656,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":66,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":212,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":226,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":248,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":630,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":689,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":449,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":448,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":472,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":450,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":507,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":616,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":495,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":16,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":338,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":435,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":537,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":438,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":124,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":233,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":657,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":176,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":227,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":94,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":67,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":585,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":59,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":101,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":602,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":639,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":301,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":398,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":461,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":460,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":279,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":117,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":323,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":532,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":425,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":431,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":651,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":43,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":603,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":75,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":645,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":231,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":474,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":592,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":209,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":152,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":358,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":587,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":540,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":509,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":607,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":171,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":5,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":562,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":563,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":655,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":366,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":564,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":609,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":643,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":388,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":91,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":151,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":522,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":69,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":365,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":88,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":664,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":278,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":676,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":81,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":518,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":682,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":670,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":683,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":274,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":95,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":329,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":61,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":499,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":690,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":183,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":185,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":184,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":669,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":82,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":415,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":316,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":418,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":224,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":442,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":481,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":163,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":165,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":332,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":467,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":302,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":298,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":85,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":84,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicSerializationError":155,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":479,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":83,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":90,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":344,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":261,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":559,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":623,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":45,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":694,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":33,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":249,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":476,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":289,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":475,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":406,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":334,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":349,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":668,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":339,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":543,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":606,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":277,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":93,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":611,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":273,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":596,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":692,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":109,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":410,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":411,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":256,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":409,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":523,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":286,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":168,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":688,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":159,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":203,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":34,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicCopyConstructor":154,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":605,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":167,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":402,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":554,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":359,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":636,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":251,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":46,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":533,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":100,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":270,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":271,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":437,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":272,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":524,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":599,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":525,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":618,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":396,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":420,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":136,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":654,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":693,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":322,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":63,"org.apache.commons.collections4.map.LRUMapTest.testLRU":236,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":287,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":265,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":610,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":57,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":242,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":197,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":394,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":519,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":333,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":502,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":122,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":161,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":391,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":641,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":120,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":401,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":677,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":127,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":214,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":678,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":107,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":342,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":665,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":181,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":237,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":205,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":293,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":73,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":206,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":126,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":577,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":634,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":591,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":633,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":15,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":510,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":172,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":644,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":235,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":679,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":3,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":232,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":198,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":680,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":470,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":80,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":526,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":70,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":309,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":104,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":581,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":238,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":324,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":545,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":223,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":354,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":371,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":578,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":345,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":586,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":321,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":113},"transformations":[{"failures":[],"tindex":"918d85bc-13ce-11e5-82d8-63f66001d660","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n} else {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[0],"tindex":"918dfaed-13ce-11e5-82d8-394e885c48c8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:216","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"918e21fe-13ce-11e5-82d8-8f6240ce2041","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:614","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int)"},"variableMap":{"newCapacity":"hashCode","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:642","type":"CtDoImpl","sourcecode":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null )"},"status":-2},{"failures":[],"tindex":"918e21ff-13ce-11e5-82d8-d357db862f92","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:186","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.clear(int)"},"variableMap":{"orderingBits":"key3","index":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:365","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"918e2200-13ce-11e5-82d8-c72666b5c1b3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:100","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"91901dd1-13ce-11e5-82d8-87199d5c3d04","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:179","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> != (java.util.Iterator<? extends E>)) {\n    if ((java.util.Iterator<? extends E>) != null) {\n        org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-2},{"failures":[],"tindex":"91901dd2-13ce-11e5-82d8-d39db0618233","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hash1","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                return V;\n            } \n        case 2 :\n            if ((K) == null) {\n                return V;\n            } \n        case 1 :\n            if ((K) == null) {\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n        }\n    } \n}"},"status":-2},{"failures":[],"tindex":"91901dd3-13ce-11e5-82d8-39667223a8d8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:130","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().equals(java.lang.Object)"},"status":-2},{"failures":[1],"tindex":"91901dd4-13ce-11e5-82d8-47b2ae4a66ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:547","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    throw new java.util.ConcurrentModificationException(\"Cursor closed\");\n} "},"variableMap":{"valid":"validForUpdate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} "},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"tindex":"91901dd5-13ce-11e5-82d8-67ad980b8236","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:828","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"currentNode","rightChild":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:906","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125],"tindex":"919044e6-13ce-11e5-82d8-89d39aeacd9d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n} "},"variableMap":{"transformers":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:124","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.Map<E, ? super V>.put(E, V);\n}"},"status":-1},{"failures":[126,127,128,129,130,131],"tindex":"919044e7-13ce-11e5-82d8-05434faf65d0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtIfImpl","sourcecode":"if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n    if ((int[][(int - int)]) <= (int[][int])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[],"tindex":"919044e8-13ce-11e5-82d8-8ffdd51fbd95","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return true;\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    return ((java.util.Collection<?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"length":"hashCode","object":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:159","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-2},{"failures":[132,133,134,135,136,137,138,139,140,141,142,143,144],"tindex":"91906bf9-13ce-11e5-82d8-d98910e6b41e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:295","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<E>) == null) {\n    java.util.ArrayList<E> = new java.util.ArrayList<E>(java.util.ArrayList<java.util.Iterator<? extends E>>.size());\n    java.util.BitSet = new java.util.BitSet(java.util.ArrayList<java.util.Iterator<? extends E>>.size());\n    for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n        java.util.ArrayList<E>.add(null);\n        java.util.BitSet.clear(int);\n    }\n} "},"status":-1},{"failures":[29,33],"tindex":"91906bfa-13ce-11e5-82d8-a7d0c7735c04","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:854","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"leftChild":"deletedNode","node":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:952","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"91906bfb-13ce-11e5-82d8-4ba718332b06","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1964","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()].org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == (this))"},"variableMap":{"leftNode":"value","parentNode":"value","dataElement":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:239","type":"CtIfImpl","sourcecode":"if (((java.util.Collection<V>)(java.util.Map.Entry<K, java.lang.Object>.getValue())).contains(java.lang.Object)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"91906bfc-13ce-11e5-82d8-c31cc46d0571","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hash1","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                return V;\n            } \n        case 2 :\n            if ((K) == null) {\n                return V;\n            } \n        case 1 :\n            if ((K) == null) {\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n        }\n    } \n}"},"status":-2},{"failures":[],"tindex":"91906bfd-13ce-11e5-82d8-0782050e34ce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:86","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 1000 ; int++) {\n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n        break;\n    } \n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(java.util.Collection<? extends E>)).decorated();\n    } else if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n    } \n}"},"status":0},{"failures":[145],"tindex":"9190930e-13ce-11e5-82d8-51d7210fa12a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:188","type":"CtIfImpl","sourcecode":"if ((T[].int) >= int) {\n    java.lang.Object[] = T[];\n} else {\n    java.lang.Object[] = ((java.lang.Object[])(java.lang.reflect.Array.newInstance(T[].getClass().getComponentType(), int)));\n}"},"status":-1},{"failures":[],"tindex":"9190930f-13ce-11e5-82d8-39f65fb0d90a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:649","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"parent":"x","dataElement":"dataElement","child":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1167","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"91909310-13ce-11e5-82d8-a30cbb57f89e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:221","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"91909311-13ce-11e5-82d8-f1cf9a7874ce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.NonePredicate:71","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n} "},"variableMap":{"length":"length","preds":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:84","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[].int) == 1) {\n    return org.apache.commons.collections4.Predicate<T>[][0];\n} "},"status":-2},{"failures":[126,127,128,129,130,131],"tindex":"91909312-13ce-11e5-82d8-b5e165112100","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:174","type":"CtIfImpl","sourcecode":"if ((int == 0) || (int == 0)) {\n    return null;\n} "},"variableMap":{"m":"start2","n":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:212","type":"CtForImpl","sourcecode":"for (int int = int - int ; int <= (int + int) ; int += 2) {\n    final int int = (int + int) - int;\n    if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n        int[][int] = (int[][(int + 1)]) - 1;\n    } else {\n        int[][int] = int[][(int - 1)];\n    }\n    int int = (int[][int]) - 1;\n    int int = ((int - int) + int) - int;\n    while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = int--;\n        int--;\n    }\n    if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n        if ((int[][int]) <= (int[][(int + int)])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"9190ba23-13ce-11e5-82d8-976c01805bb0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:297","type":"CtIfImpl","sourcecode":"if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"9190ba24-13ce-11e5-82d8-4dcbe7f9f7ea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:824","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:646","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"9190ba25-13ce-11e5-82d8-7ba9bb66e799","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:387","type":"CtIfImpl","sourcecode":"if (boolean) {\n    continue;\n} else {\n    return false;\n}"},"variableMap":{"foundCurrentElement":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:231","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasNext()) {\n    final E E = java.util.ListIterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-2},{"failures":[5,46,50,52,53,54,60],"tindex":"9190ba26-13ce-11e5-82d8-89300bcc7779","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1057","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"rval","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"9190e137-13ce-11e5-82d8-6520bf6ff55a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:230","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.queue.CircularFifoQueue<E>.isAtFullCapacity()) {\n    org.apache.commons.collections4.queue.CircularFifoQueue<E>.remove();\n} "},"status":-2},{"failures":[],"tindex":"9190e138-13ce-11e5-82d8-adca397d2c53","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:710","type":"CtInvocationImpl","sourcecode":"java.lang.Runnable.run()"},"variableMap":{"r":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[146,147,148,149,150],"tindex":"9190e139-13ce-11e5-82d8-4be9d471fc4d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"status":-1},{"failures":[151,152],"tindex":"9190e13a-13ce-11e5-82d8-d9192915280f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"lengthInBits","index":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1101","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || (int < (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n    break;\n} "},"status":-1},{"failures":[],"tindex":"9190e13b-13ce-11e5-82d8-251abc28b2c3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:132","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E);\n}"},"status":-2},{"failures":[153,154,155,156],"tindex":"9190e13c-13ce-11e5-82d8-214b9c092382","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:74","type":"CtIfImpl","sourcecode":"if (T instanceof java.io.Serializable) {\n    return ((org.apache.commons.collections4.Factory<T>)(new org.apache.commons.collections4.functors.PrototypeFactory.PrototypeSerializationFactory<java.io.Serializable>(((java.io.Serializable)(T)))));\n} "},"status":-1},{"failures":[],"tindex":"9190e13d-13ce-11e5-82d8-dbd6c0eda8d1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:181","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) != null) {\n    org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n} "},"status":-2},{"failures":[],"tindex":"9191084e-13ce-11e5-82d8-316013122559","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:113","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    return java.lang.Integer.intValue();\n} "},"variableMap":{"count":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:167","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> , int++) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.java.lang.Object)) {\n        return int;\n    } \n}"},"status":-2},{"failures":[157,158,159,160,161,162,163,164,165,166,167,168,169,145,170,171,172,173,174,175,176,177,147,148,149,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,150,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224],"tindex":"9191084f-13ce-11e5-82d8-ef63d385c35d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:239","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"Comparator ordering cannot be changed after the first comparison is performed\");\n} "},"variableMap":{"isLocked":"isLocked"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"91910850-13ce-11e5-82d8-6be38dccced2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"91910851-13ce-11e5-82d8-b7867c6552d8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1163","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>.int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"parent":"delegateMap","modCount":"count","expectedModCount":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtIfImpl","sourcecode":"if (int > 3) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V> = org.apache.commons.collections4.map.Flat3Map<K, V>.createDelegateMap();\n} "},"status":0},{"failures":[],"tindex":"91910852-13ce-11e5-82d8-29a50e79bff1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:701","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"rval":"parent","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:615","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"91912f63-13ce-11e5-82d8-b5eefa96dd89","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:919","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry());\n} else {\n    return null;\n}"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:726","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"91912f64-13ce-11e5-82d8-93846dd8593e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:161","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.nextIndex();\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:194","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.previousIndex();\n} "},"status":-2},{"failures":[225],"tindex":"91912f65-13ce-11e5-82d8-dd2993820e08","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"total","newCapacity":"total","proposedCapacity":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1348","type":"CtWhileImpl","sourcecode":"while (java.util.Enumeration<?>.hasMoreElements()) {\n    int++;\n    java.util.Enumeration<?>.nextElement();\n}"},"status":-1},{"failures":[],"tindex":"91912f66-13ce-11e5-82d8-6d4215d76e0a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T> == null) || (org.apache.commons.collections4.Predicate<? super T> == null)) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-2},{"failures":[226,227],"tindex":"91915677-13ce-11e5-82d8-2b5316379bff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:106","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"chainExhausted","beforeFirst":"chainExhausted"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:85","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    boolean = true;\n} "},"status":-1},{"failures":[228],"tindex":"91915678-13ce-11e5-82d8-8fa42b64453d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:74","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().lastKey()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:70","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().firstKey()"},"status":-1},{"failures":[],"tindex":"91915679-13ce-11e5-82d8-2d349be72fa1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:176","type":"CtIfImpl","sourcecode":"if ((T[].int) < (int)) {\n    final java.lang.Class<?> java.lang.Class<?> = T[].getClass().getComponentType();\n    T[] = ((T[])(java.lang.reflect.Array.newInstance(java.lang.Class<?>, int)));\n} "},"status":-2},{"failures":[229,230],"tindex":"9191567a-13ce-11e5-82d8-31c335c6c395","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.set.ListOrderedSet:240","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.ListOrderedSet<E>.clear()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:321","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.contains(E)) {\n    continue;\n} "},"status":-1},{"failures":[27,77],"tindex":"9191567b-13ce-11e5-82d8-294e4a6ae873","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl","sourcecode":"boolean = boolean || boolean"},"variableMap":{"added":"hasNext","changed":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1391","type":"CtAssignmentImpl","sourcecode":"boolean = org.apache.commons.collections4.MapIterator<?, ?>.hasNext()"},"status":-1},{"failures":[231,232,233,234,177],"tindex":"9191567c-13ce-11e5-82d8-0503ec662652","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"callCounter","index":"callCounter"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:94","type":"CtWhileImpl","sourcecode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(boolean))) {\n    final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if (java.util.Iterator<? extends E> != null) {\n        java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n    } else {\n        boolean = true;\n    }\n}"},"status":-1},{"failures":[235,236,237,238,239,240,241],"tindex":"91917d8d-13ce-11e5-82d8-3f527fe9ed30","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:268","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"reuse=null, header.after=\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n    org.apache.commons.collections4.map.LRUMap<K, V>.reuseMapping(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n} else {\n    super.addMapping(int, int, K, V);\n}"},"status":-1},{"failures":[],"tindex":"91917d8e-13ce-11e5-82d8-a1fd81f5a251","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:373","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.TreeBidiMap.KeyView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"91917d8f-13ce-11e5-82d8-8be13a6fa707","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"value","index":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:502","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.entrySet()) {\n    java.io.ObjectOutputStream.writeObject(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey());\n    java.io.ObjectOutputStream.writeInt(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue().int);\n}"},"status":-2},{"failures":[128,130,131],"tindex":"91917d90-13ce-11e5-82d8-ab1ecdc4b676","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:551","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Equator<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Equator must not be null\");\n} "},"variableMap":{"equator":"equator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:263","type":"CtWhileImpl","sourcecode":"while ((int < int) || (int < int)) {\n    if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n        ++int;\n    } else {\n        if ((int - int) > (int - int)) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        } else {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        }\n    }\n}"},"status":-1},{"failures":[29,33,46,50,52,53,54],"tindex":"91917d91-13ce-11e5-82d8-77093e6b2534","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:828","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"xFormerParent","rightChild":"yFormerLeftChild","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1137","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        if (boolean) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"9191a4a2-13ce-11e5-82d8-e7c27d2eaad0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:923","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<? extends O> != null) && (org.apache.commons.collections4.Predicate<? super O> != null)) {\n    for (final O O : java.lang.Iterable<? extends O>) {\n        if (org.apache.commons.collections4.Predicate<? super O>.evaluate(O)) {\n            R.add(O);\n        } \n    }\n} "},"status":-2},{"failures":[242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259],"tindex":"9191a4a3-13ce-11e5-82d8-2339c419ac9b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:254","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[260,261],"tindex":"9191a4a4-13ce-11e5-82d8-6d1aae3e1f92","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:751","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cannot use setValue() when the object being set is already in the map\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:303","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"queue is empty\")"},"status":-1},{"failures":[262,263,264,265,266,267,268,269],"tindex":"9191a4a5-13ce-11e5-82d8-e3839a56b024","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:116","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayListIterator<E>.(hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:132","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[],"tindex":"9191cbb6-13ce-11e5-82d8-c3086678761d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"maxElements"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"status":-2},{"failures":[],"tindex":"9191cbb7-13ce-11e5-82d8-c192920a534a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1036","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.init()"},"variableMap":{"this":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:169","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(K)) {\n    java.util.Map<V, K>.remove(java.util.Map<K, V>.get(K));\n} "},"status":-2},{"failures":[],"tindex":"9191cbb8-13ce-11e5-82d8-077bcc25e2db","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:276","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.Values<V>(this);\n} "},"status":-2},{"failures":[270,271,272,273],"tindex":"9191cbb9-13ce-11e5-82d8-412c4db9e4b1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n} else {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}"},"status":-1},{"failures":[],"tindex":"9191cbba-13ce-11e5-82d8-ad619db8068a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"hash2","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                return V;\n            } \n        case 2 :\n            if ((K) == null) {\n                return V;\n            } \n        case 1 :\n            if ((K) == null) {\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n        }\n    } \n}"},"status":-2},{"failures":[15,16,17,29,33,40,41,43,46,47,50,51,52,53,54],"tindex":"9191cbbb-13ce-11e5-82d8-67bf3177c3c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:855","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"deletedNode","node":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"9191f2cc-13ce-11e5-82d8-f1dec588777e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"variableMap":{"other":"obj","keys":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:228","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : org.apache.commons.collections4.set.CompositeSet<E>.getSets()) {\n    if (java.util.Set<E>.contains(java.lang.Object)) {\n        return java.util.Set<E>.remove(java.lang.Object);\n    } \n}"},"status":-2},{"failures":[],"tindex":"9191f2cd-13ce-11e5-82d8-d9c876702f1c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1054","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"siblingNode":"replacement","currentNode":"replacement","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:959","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            }\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"919219de-13ce-11e5-82d8-213f04dee965","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:520","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[],"tindex":"919219df-13ce-11e5-82d8-1594a9bbeafc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1009","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.print(\"(this Map)\")"},"variableMap":{"out":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:188","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(java.lang.Object)) {\n    V = java.util.Map<K, V>.remove(java.lang.Object);\n    java.util.Map<V, K>.remove(V);\n} "},"status":-2},{"failures":[274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331],"tindex":"919219e0-13ce-11e5-82d8-0310540b791f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:140","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[],"tindex":"919219e1-13ce-11e5-82d8-4d5ce262e904","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:810","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[],"tindex":"919240f2-13ce-11e5-82d8-01ccf13de593","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:83","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"status":0},{"failures":[],"tindex":"919240f3-13ce-11e5-82d8-bd54a52853fb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"i","lengthInBits":"i","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"i","otherOffsetInBits":"i","otherLengthInBits":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1165","type":"CtIfImpl","sourcecode":"if ((java.lang.Object[] == null) || ((java.lang.Object[].int) < 2)) {\n    throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + int));\n} "},"status":-2},{"failures":[],"tindex":"919240f4-13ce-11e5-82d8-a53f0360b819","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:76","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated()"},"status":0},{"failures":[],"tindex":"919240f5-13ce-11e5-82d8-f956f237964b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:137","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().isEmpty()"},"variableMap":{"this":"item"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:134","type":"CtIfImpl","sourcecode":"if (java.util.Collection<E>.contains(java.lang.Object)) {\n    return true;\n} "},"status":-2},{"failures":[332,333],"tindex":"919240f6-13ce-11e5-82d8-c55859a589ca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:354","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"No mutator specified\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:161","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cannot set value - Predicate rejected it\")"},"status":-1},{"failures":[334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351],"tindex":"919240f7-13ce-11e5-82d8-ff3cc99a2966","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"i","removeIndex":"i","currentIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:467","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        @java.lang.SuppressWarnings(value = \"unchecked\")\n        final T T = ((T)(E));\n        T[][int++] = T;\n    }\n}"},"status":-1},{"failures":[310,313,319,322],"tindex":"91926808-13ce-11e5-82d8-eff53688b3bd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:587","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n    return true;\n} "},"status":-1},{"failures":[133,135,137,143,144],"tindex":"91926809-13ce-11e5-82d8-256d7d794e81","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1810","type":"CtReturnImpl","sourcecode":"return int > 0"},"variableMap":{"ret":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:384","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    return true;\n} "},"status":-1},{"failures":[3,58],"tindex":"9192680a-13ce-11e5-82d8-059b911b71ca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"nodeCount","newCapacity":"nodeCount","proposedCapacity":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:325","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-1},{"failures":[29,33,47,51],"tindex":"9192680b-13ce-11e5-82d8-796bc7924ec1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1184","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"status":-1},{"failures":[151],"tindex":"9192680c-13ce-11e5-82d8-cd35b72adcb0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:924","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} "},"variableMap":{"found":"root","this":"this","bitIndex":"endIndexInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(lengthInBits(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey())) < int)) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"9192680d-13ce-11e5-82d8-ad242d9c9abd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:211","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"91928f1e-13ce-11e5-82d8-2df8c3bbd4c0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[352,353,354,355,356,357,358,359,242,360,361,362,363,364,243,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,244,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,247,397,398,399,400,401,248,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,249,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,307,308,439,309,310,311,440,441,312,442,313,443,444,314,315,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,250,475,476,477,478,479,251,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,252,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,253,512,513,514,515,516,254,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,255,533,534,535,536,537,538,539,540,238,239,541,542,543,544,545,546,547,548,549,257,550,551,552,553,554,258,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,259,571,572,573,574,575,576,577,578,98,99,100,101,102,579,103,104,105,106,580,107,108,581,109,582,110,111,112,113,114,115,116,583,117,118,119,120,584,121,122,585,123,586,124,125],"tindex":"91928f1f-13ce-11e5-82d8-7bbbb8501642","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:324","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateNewCapacity(int))"},"variableMap":{"this":"this","newSize":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n} else {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n    (int)++;\n    for (int int = int - 1 ; int >= 0 ; int--) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n            do {\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n        } \n    }\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n}"},"status":-1},{"failures":[],"tindex":"9192b630-13ce-11e5-82d8-250a5e584dbc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.NonePredicate:71","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n} "},"variableMap":{"length":"length","preds":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:78","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n} "},"status":-2},{"failures":[],"tindex":"9192b631-13ce-11e5-82d8-2fa31b436700","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1754","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getValue() can only be called after next() and before remove()\");\n} "},"variableMap":{"lastReturnedNode":"leftChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[587],"tindex":"9192b632-13ce-11e5-82d8-47fe6d4095ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<?, ?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer array must not be null\");\n} "},"variableMap":{"transformers":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:719","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 1) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) {\n    org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n    boolean = true;\n} "},"status":-1},{"failures":[588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667],"tindex":"9192b633-13ce-11e5-82d8-0bf3715b8032","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:562","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[],"tindex":"9192dd44-13ce-11e5-82d8-69be48814d37","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:159","type":"CtIfImpl","sourcecode":"if ((int) < (int)) {\n    int = ((int) - (int)) + (int);\n} else if ((int) == (int)) {\n    int = boolean ? int : 0;\n} else {\n    int = (int) - (int);\n}"},"variableMap":{"size":"index","start":"size","maxElements":"size","end":"index","full":"endMarkerAllowed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:542","type":"CtIfImpl","sourcecode":"if ((!boolean) && (int == (int))) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") is the size of the list.\"));\n} "},"status":-2},{"failures":[],"tindex":"9192dd45-13ce-11e5-82d8-e13598792fa8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:874","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Collection must not be null\");\n} "},"variableMap":{"removeCollection":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:86","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 1000 ; int++) {\n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n        break;\n    } \n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(java.util.Collection<? extends E>)).decorated();\n    } else if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n    } \n}"},"status":0},{"failures":[668,291,669,670,671,672,300,673,674],"tindex":"9192dd46-13ce-11e5-82d8-73831506ae7f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:641","type":"CtInvocationImpl","sourcecode":"this.org.apache.commons.collections4.map.ListOrderedMap<K, V>.clear()"},"variableMap":{"parent":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:268","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsKey(java.lang.Object)) {\n    V = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().remove(java.lang.Object);\n    java.util.List<K>.remove(java.lang.Object);\n} "},"status":-1},{"failures":[],"tindex":"9192dd47-13ce-11e5-82d8-35a9826647c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse = new org.apache.commons.collections4.bidimap.TreeBidiMap.Inverse();\n} "},"status":-2},{"failures":[],"tindex":"9192dd48-13ce-11e5-82d8-774b055c1812","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet<K>(this);\n} "},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"status":0},{"failures":[675,676,677,678,679,680,681,682,683,684,685,686],"tindex":"91957559-13ce-11e5-82d8-f9835eacd288","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:83","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"status":-1},{"failures":[],"tindex":"9195755a-13ce-11e5-82d8-27bff6cfb806","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.ListOrderedSet:183","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().clear()"},"variableMap":{"this":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:192","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    if (java.util.Set<E>.add(E)) {\n        java.util.List<E>.add(E);\n    } \n}"},"status":-2},{"failures":[687,688,689,690,691,692,693,157,160,694,695,696],"tindex":"9195755b-13ce-11e5-82d8-9b4bfd0a8e55","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:174","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final E E = java.util.Iterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"9195755c-13ce-11e5-82d8-b7d484619851","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"node":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"9195755d-13ce-11e5-82d8-b1eedccf59f7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:627","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap.this.containsKey(java.lang.Object)"},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:129","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.contains(java.lang.Object)) {\n    return true;\n} "},"status":-2},{"failures":[697,241],"tindex":"91959c6e-13ce-11e5-82d8-4716b889b32c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"proposedCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}