{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":423,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":737,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":515,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":256,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":550,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":195,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":178,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":639,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":832,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":60,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapHashCode":129,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":356,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":506,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":148,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":157,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":217,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":401,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":507,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsSelfHashCode":347,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":15,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":295,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":402,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":454,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":783,"org.apache.commons.collections4.CollectionUtilsTest.get":213,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":285,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":691,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":456,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":713,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":72,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalEmptyCollectionExists":362,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":8,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":450,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":572,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":464,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":332,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":427,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":449,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":117,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":237,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":447,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":654,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":757,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":291,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":549,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":759,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":445,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":848,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":806,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":24,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":276,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":526,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":260,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":399,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":84,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":96,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":585,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":656,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":580,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":368,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":405,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":699,"org.apache.commons.collections4.CollectionUtilsTest.intersection":216,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":772,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":431,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":562,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsContract":136,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":125,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":158,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":380,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":167,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":551,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":642,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":796,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":664,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":355,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":367,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":34,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":761,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":424,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":789,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":75,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":780,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":704,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":253,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":7,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":262,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":682,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":82,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":735,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":191,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":523,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":543,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":376,"org.apache.commons.collections4.map.ReferenceMapTest.testEmptyMapCompatibility":318,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":729,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":325,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":259,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":312,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":68,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":186,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":303,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":411,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":524,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":176,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":597,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":659,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":650,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":778,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":330,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":331,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":329,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":292,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":307,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":668,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":753,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":660,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":474,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":46,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":442,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":830,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":575,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":831,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":255,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":275,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":382,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":787,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":793,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":222,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":628,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":121,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":194,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":9,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":810,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":17,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":175,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":801,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":127,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":717,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":470,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":430,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":640,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":599,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":547,"org.apache.commons.collections4.trie.PatriciaTrieTest.testObjectHashCodeEqualsContract":152,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":725,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":744,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":199,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":240,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":6,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":485,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":752,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":20,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":103,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":569,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":662,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":339,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":114,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":819,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":567,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":790,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":513,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":455,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":734,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":511,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":249,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":636,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":632,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":257,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":42,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":635,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":407,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":246,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":700,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":95,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":722,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":467,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":324,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":465,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":697,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":27,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":155,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":508,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":422,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":71,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":354,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":346,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":41,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":765,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":40,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":39,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":335,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":115,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":658,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":67,"org.apache.commons.collections4.map.LRUMapTest.testReset":2,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":116,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":391,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":804,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":83,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":200,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":387,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":62,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":829,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":548,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":758,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":244,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":272,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":106,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":308,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":369,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":190,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":182,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":284,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":10,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":764,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":25,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":322,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":614,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":45,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":227,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":560,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":566,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":612,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":545,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":677,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":57,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":795,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":716,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":834,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":377,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":684,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":44,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":824,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":736,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":594,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":814,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":371,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":228,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":381,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":406,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":825,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapHashCode":146,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":226,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":66,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":584,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":815,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":298,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":588,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":386,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":410,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":140,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":724,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":730,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testObjectEqualsSelf":132,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":323,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":743,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":484,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":519,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":207,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":726,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":396,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":616,"org.apache.commons.collections4.map.HashedMapTest.testClone":234,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":397,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":803,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":398,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":570,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":76,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":241,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":644,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":171,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectEqualsSelf":345,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":582,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":169,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":365,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":516,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":264,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":539,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":352,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":540,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testSimpleSerialization":134,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":209,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":63,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":498,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":491,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":270,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":542,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":698,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":218,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":334,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":426,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":591,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":641,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":630,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsSelfHashCode":137,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":453,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":81,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":476,"org.apache.commons.collections4.trie.PatriciaTrieTest.testSimpleSerialization":154,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":711,"org.apache.commons.collections4.list.TreeListTest.testBug35258":223,"org.apache.commons.collections4.trie.PatriciaTrieTest.testObjectHashCodeEqualsSelfHashCode":153,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":294,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":170,"org.apache.commons.collections4.map.LinkedMapTest.testClone":232,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalFullCollectionExists":363,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":798,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":229,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":771,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":242,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":393,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":394,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":490,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":395,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":16,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":172,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":93,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":721,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":413,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":469,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":755,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":11,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":504,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":3,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":745,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":501,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":746,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":69,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":473,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":631,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":615,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":100,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":283,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":460,"org.apache.commons.collections4.trie.PatriciaTrieTest.testSerializeDeserializeThenCompare":151,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":98,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":306,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":463,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":319,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":462,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":461,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":750,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":78,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":390,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":600,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":812,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":286,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":358,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":274,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":669,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":773,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":73,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":471,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":12,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":179,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":818,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":92,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":91,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":90,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":646,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":214,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapClear":141,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":385,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":185,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":686,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":145,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":263,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":289,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":489,"org.apache.commons.collections4.map.LRUMapTest.testLRU":1,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":645,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":493,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":622,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":705,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":850,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":751,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":150,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":235,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":341,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":478,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":779,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":813,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":35,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":577,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":720,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":740,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":651,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":763,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":728,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":408,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":528,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":164,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":425,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":143,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":581,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":33,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":419,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":353,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":210,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":309,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":667,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":458,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":166,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":598,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":32,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":774,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":739,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":230,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":58,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":43,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":54,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":161,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":844,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":849,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":61,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":337,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":180,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":847,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":851,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":126,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":719,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":149,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":434,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":109,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":201,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":310,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":403,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":678,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":718,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":162,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":514,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":429,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":317,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":496,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":500,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":188,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":624,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":546,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":648,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":756,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":643,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":637,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":389,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":770,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":378,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":655,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":807,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":781,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":672,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":687,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":451,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":487,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":225,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":392,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":792,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":767,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":118,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":437,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":497,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":438,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":436,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":694,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":320,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":48,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":49,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":94,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":267,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":299,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":649,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":296,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":602,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":208,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":769,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":333,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":304,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":343,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":288,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":533,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":556,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":564,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":184,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":661,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":421,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":702,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":842,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":809,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":565,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":760,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":596,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":147,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":305,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":620,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":747,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":420,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":102,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":534,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":836,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testCanonicalFullCollectionExists":417,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":675,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":541,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":475,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":552,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":706,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":342,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":601,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":344,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":142,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":202,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":13,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":715,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":835,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":245,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":754,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":197,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":86,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":79,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":828,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":268,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":495,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":703,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":826,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":509,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":530,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":791,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsSelfHashCode":414,"org.apache.commons.collections4.CollectionUtilsTest.union":215,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":676,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":799,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":617,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":204,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":435,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":647,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":766,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":99,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":293,"org.apache.commons.collections4.map.ReferenceMapTest.testCanonicalFullCollectionExists":350,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":247,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":302,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":544,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":432,"org.apache.commons.collections4.list.TreeListTest.testRemove":219,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":777,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":327,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":326,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":113,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":428,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":800,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":328,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":749,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":586,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":70,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":623,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":837,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":679,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":238,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":488,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":681,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":696,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":629,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":613,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":418,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":441,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":440,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":439,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":652,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":51,"org.apache.commons.collections4.map.LRUMapTest.testClone":231,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":820,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":55,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":273,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":595,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":14,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":379,"org.apache.commons.collections4.ListUtilsTest.testSubtract":571,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":144,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":119,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":762,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":124,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":670,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":483,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":555,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":80,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":607,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":160,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":503,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":674,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":786,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":553,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":554,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":665,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":701,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":805,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":563,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":633,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":627,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":785,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":741,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":59,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":183,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":833,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testCanonicalEmptyCollectionExists":416,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":532,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":196,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":107,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":499,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":481,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":574,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":797,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":64,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":657,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":360,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":251,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":626,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":104,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":444,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":316,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":477,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":494,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":527,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":220,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":843,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":53,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":538,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":370,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":21,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":224,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":383,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":211,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":159,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":653,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":177,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":189,"org.apache.commons.collections4.map.ReferenceMapTest.testCanonicalEmptyCollectionExists":349,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":748,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":361,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":521,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":372,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":710,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":128,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":666,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":604,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":348,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":243,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":482,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":518,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":846,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":139,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":520,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":105,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":233,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":135,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":374,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":336,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":457,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":404,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":290,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":593,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":357,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":578,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":625,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":822,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":852,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":206,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":400,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEmptyMapCompatibility":384,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":573,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":845,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":280,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":281,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":282,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":203,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":535,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":708,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":56,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":364,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":388,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":198,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":340,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":29,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":618,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":52,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":685,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":688,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":808,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":663,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":742,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":690,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":839,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":47,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":776,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":446,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":794,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":265,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":727,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":827,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":817,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":561,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":452,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":297,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":525,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":311,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":732,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":510,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":606,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":212,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSimpleSerialization":138,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":351,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":579,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":634,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":589,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":122,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":472,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":108,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":692,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":689,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":731,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":248,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":802,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":266,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":120,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":112,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":236,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":816,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":110,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":77,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectEqualsSelf":412,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":31,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":605,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":608,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":486,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":192,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":587,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":492,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":313,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":683,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":583,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":841,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":707,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":221,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":610,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":576,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":479,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":522,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":695,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":165,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":366,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex1":181,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":466,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":74,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testObjectHashCodeEqualsSelfHashCode":133,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":459,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":738,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":714,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testSerializeDeserializeThenCompare":131,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":250,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":338,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":621,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":557,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":559,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":558,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":823,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":18,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":123,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":130,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":239,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":287,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":254,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":321,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":638,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":592,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":468,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":768,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":775,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":85,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":517,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":301,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":443,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":163,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":315,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":314,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":811,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":101,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":693,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":373,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":603,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":30,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":840,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":300,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":65,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":278,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":279,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":590,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":187,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":277,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":671,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":87,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":88,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":89,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":433,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":723,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":271,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":680,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":821,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":531,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":193,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":359,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":156,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":512,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":733,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":28,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":252,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":448,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":609,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":712,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":261,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":838,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":258,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":269,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":174,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":502,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":4,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":415,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":536,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":168,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":537,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":173,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":529,"org.apache.commons.collections4.ListUtilsTest.testRetainAll":111,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":205,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":619,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":788,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":480,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":0,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":36,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":37,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":784,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":568,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":782,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":505,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":709,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":5,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":375,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":409,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":611,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":673,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":26},"transformations":[{"failures":[],"tindex":"ca330c0c-13a6-11e5-8c5d-af5315bed498","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:122","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:590","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(java.lang.Object);\n    java.lang.StringBuilder.append(int);\n    java.lang.StringBuilder.append(':');\n    java.lang.StringBuilder.append(java.lang.Object);\n    if (java.util.Iterator<E>.hasNext()) {\n        java.lang.StringBuilder.append(',');\n    } \n}"},"status":0},{"failures":[],"tindex":"ca33331d-13a6-11e5-8c5d-b5eb01d38aeb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n    E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n} "},"status":-2},{"failures":[],"tindex":"ca33331e-13a6-11e5-8c5d-15cb8b3917b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:480","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : org.apache.commons.collections4.map.CompositeMap<K, V>.entrySet()) {\n    int += java.util.Map.Entry<K, V>.hashCode();\n}"},"status":-2},{"failures":[],"tindex":"ca335a2f-13a6-11e5-8c5d-0bbc07d38b8b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n    return null;\n} "},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:245","type":"CtIfImpl","sourcecode":"if (java.util.Map.Entry<K, V> == null) {\n    return null;\n} "},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"tindex":"ca335a30-13a6-11e5-8c5d-bfaa92fea56b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:246","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.LRUMap<K, V>.isFull()) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    boolean boolean = false;\n    if (boolean) {\n        while ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != null)) {\n            if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                boolean = true;\n                break;\n            } \n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n        if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n            throw new java.lang.IllegalStateException((((((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n        } \n    } else {\n        boolean = org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>);\n    }\n    if (boolean) {\n        if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n            throw new java.lang.IllegalStateException((((((((((((((\"reuse=null, header.after=\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n        } \n        org.apache.commons.collections4.map.LRUMap<K, V>.reuseMapping(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n    } else {\n        super.addMapping(int, int, K, V);\n    }\n} else {\n    super.addMapping(int, int, K, V);\n}"},"status":-1},{"failures":[42,45,54,55],"tindex":"ca33f671-13a6-11e5-8c5d-f34d4c8a77ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:398","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n    return true;\n} "},"status":-1},{"failures":[56,57,58,59],"tindex":"ca341d82-13a6-11e5-8c5d-536adcdc2096","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2319","type":"CtIfImpl","sourcecode":"if ((int) != 1) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"hit":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"ca344493-13a6-11e5-8c5d-b5331a8e1f05","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1387","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append((java.lang.Object == (this) ? \"(this Map)\" : java.lang.Object)).append('=').append((java.lang.Object == (this) ? \"(this Map)\" : java.lang.Object))"},"status":0},{"failures":[60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105],"tindex":"ca344494-13a6-11e5-8c5d-312275664e18","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:78","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final int int = int + int;\n    final int int = int + int;\n    if (int >= int) {\n        char = 0;\n    } else {\n        char = java.lang.String.charAt(int);\n    }\n    if ((java.lang.String == null) || (int >= int)) {\n        char = 0;\n    } else {\n        char = java.lang.String.charAt(int);\n    }\n    if (char != char) {\n        final int int = char ^ char;\n        return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n    } \n    if (char != 0) {\n        boolean = false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"ca344495-13a6-11e5-8c5d-c7727f4919c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:553","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n} else {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"ca344496-13a6-11e5-8c5d-33f3656e5ec8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:439","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"ca344497-13a6-11e5-8c5d-d39366cfa41b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1265","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    return java.util.Iterator<?>.next();\n} "},"variableMap":{"i":"i","it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1263","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    int--;\n    if (int == (-1)) {\n        return java.util.Iterator<?>.next();\n    } \n    java.util.Iterator<?>.next();\n}"},"status":0},{"failures":[64],"tindex":"ca344498-13a6-11e5-8c5d-9bc1774e5b53","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:803","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey() : null"},"variableMap":{"nextEntry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:814","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey() : null;\n} else {\n    return null;\n}"},"status":-1},{"failures":[106],"tindex":"ca344499-13a6-11e5-8c5d-9976f8905eec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:276","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n    throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeCollection without a CollectionMutator strategy\");\n} "},"status":-1},{"failures":[],"tindex":"ca346baa-13a6-11e5-8c5d-7b5cf5b9159a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse = new org.apache.commons.collections4.bidimap.TreeBidiMap.Inverse();\n} "},"status":-2},{"failures":[],"tindex":"ca346bab-13a6-11e5-8c5d-218bfe1aa395","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1334","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    try {\n        for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    } catch (final java.lang.ClassCastException ex) {\n        return false;\n    } catch (final java.lang.NullPointerException ex) {\n        return false;\n    }\n} "},"status":0},{"failures":[107,108,109,110],"tindex":"ca34e0dc-13a6-11e5-8c5d-799118ccd9b7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"added"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C);\n} "},"status":-1},{"failures":[],"tindex":"ca34e0dd-13a6-11e5-8c5d-874a46c7667c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:306","type":"CtIfImpl","sourcecode":"if (null != (java.util.List<java.util.Comparator<E>>)) {\n    int ^= java.util.List<java.util.Comparator<E>>.hashCode();\n} "},"status":0},{"failures":[],"tindex":"ca34e0de-13a6-11e5-8c5d-41b182836630","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"hash2","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                return V;\n            } \n        case 2 :\n            if ((K) == null) {\n                return V;\n            } \n        case 1 :\n            if ((K) == null) {\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n        }\n    } \n}"},"status":-2},{"failures":[111,112],"tindex":"ca34e0df-13a6-11e5-8c5d-d13b47296a33","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:321","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    if (java.util.Collection<?>.contains(E)) {\n        java.util.List<E>.add(E);\n    } \n}"},"status":-1},{"failures":[113,114,115,116,117,118,119,120,121,122],"tindex":"ca34e0e0-13a6-11e5-8c5d-bb963fe17732","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"result","nextCalled":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:390","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Bag<E>.isEmpty())) {\n    boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.removeAll(org.apache.commons.collections4.Bag<E>);\n} "},"status":-1},{"failures":[123,124,125,126,127,128,129,130,131,132,133,134,69,70,71,72,73,74,75,76,77,83,93,96,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154],"tindex":"ca3507f1-13a6-11e5-8c5d-d3283624d7de","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:748","type":"CtIfImpl","sourcecode":"if (java.util.AbstractMap<K, V>.isEmpty()) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"ca3507f2-13a6-11e5-8c5d-73353d6adb96","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:219","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V>.isEmpty()) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.remove(java.lang.Object);\n} "},"variableMap":{"this":"this","valuesForKey":"coll","key":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:262","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(1);\n    java.util.Collection<V>.add(((V)(java.lang.Object)));\n    if ((java.util.Collection<V>.size()) > 0) {\n        org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n        boolean = true;\n    } \n} else {\n    boolean = java.util.Collection<V>.add(((V)(java.lang.Object)));\n}"},"status":0},{"failures":[155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171],"tindex":"ca3507f3-13a6-11e5-8c5d-87e4133ec26d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1334","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    try {\n        for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    } catch (final java.lang.ClassCastException ex) {\n        return false;\n    } catch (final java.lang.NullPointerException ex) {\n        return false;\n    }\n} "},"status":-1},{"failures":[172],"tindex":"ca3507f4-13a6-11e5-8c5d-a30445429eb4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:743","type":"CtIfImpl","sourcecode":"if ((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 2) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))) {\n    org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"ca3507f5-13a6-11e5-8c5d-3b74386fa9a3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"oldCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:638","type":"CtForImpl","sourcecode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n        do {\n            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n    } \n}"},"status":0},{"failures":[],"tindex":"ca3507f6-13a6-11e5-8c5d-db64e1bda44b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1964","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()].org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == (this))"},"variableMap":{"leftNode":"obj","parentNode":"obj","dataElement":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:129","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.contains(java.lang.Object)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"ca352f07-13a6-11e5-8c5d-fb753c3ca768","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:567","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    final V V = V;\n    int = 0;\n    K = null;\n    V = null;\n    int = 0;\n    return V;\n} "},"status":0},{"failures":[173,174,175,176,177,178],"tindex":"ca352f08-13a6-11e5-8c5d-95b7a0b9f35e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:174","type":"CtIfImpl","sourcecode":"if ((int == 0) || (int == 0)) {\n    return null;\n} "},"variableMap":{"m":"end2","n":"k"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtIfImpl","sourcecode":"if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n    if ((int[][(int - int)]) <= (int[][int])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[],"tindex":"ca352f09-13a6-11e5-8c5d-4547a7ed4855","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:398","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<java.util.Map.Entry<K, V>>emptyOrderedIterator();\n} "},"status":0},{"failures":[],"tindex":"ca352f0a-13a6-11e5-8c5d-8b7e9fe29cb3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:92","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\");\n} "},"variableMap":{"canRemove":"first"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:365","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : org.apache.commons.collections4.map.ListOrderedMap<K, V>.entrySet()) {\n    final K K = java.util.Map.Entry<K, V>.getKey();\n    final V V = java.util.Map.Entry<K, V>.getValue();\n    if (boolean) {\n        boolean = false;\n    } else {\n        java.lang.StringBuilder.append(\", \");\n    }\n    java.lang.StringBuilder.append((K == (this) ? \"(this Map)\" : K));\n    java.lang.StringBuilder.append('=');\n    java.lang.StringBuilder.append((V == (this) ? \"(this Map)\" : V));\n}"},"status":0},{"failures":[179,180,181],"tindex":"ca352f0b-13a6-11e5-8c5d-799f6e927b39","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:76","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"underlying nodeList has no more elements\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:73","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\")"},"status":-1},{"failures":[],"tindex":"ca352f0c-13a6-11e5-8c5d-c9db64f6f2a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"cmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:502","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"ca352f0d-13a6-11e5-8c5d-bffe5b78e4a4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:280","type":"CtIfImpl","sourcecode":"if ((java.util.BitSet.get(int)) == true) {\n    if (int > 0) {\n        int = -1;\n    } else {\n        int = 1;\n    }\n} "},"variableMap":{"comparatorIndex":"h","orderingBits":"key1","retval":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"ca352f0e-13a6-11e5-8c5d-0f1d5ffd723e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:827","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"node":"siblingNode","rightChild":"siblingNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1036","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"ca35561f-13a6-11e5-8c5d-ef01fd9b8d69","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:431","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"current":"left","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:428","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        if ((!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K))) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        } else {\n            return null;\n        }\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"ca355620-13a6-11e5-8c5d-a364f0940482","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:762","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"node":"h","right":"predecessor","child":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[182,183],"tindex":"ca355621-13a6-11e5-8c5d-29fc011d7a87","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.WhileClosure:88","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    org.apache.commons.collections4.Closure<? super E>.execute(E);\n}"},"status":-1},{"failures":[],"tindex":"ca355622-13a6-11e5-8c5d-cf0199931862","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"total","index":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:569","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.entrySet()) {\n    final E E = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey();\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue();\n    int += (E == null ? 0 : E.hashCode()) ^ (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int);\n}"},"status":-2},{"failures":[],"tindex":"ca355623-13a6-11e5-8c5d-a3612be365db","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:406","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-2},{"failures":[184,185,186,187,188,189,190],"tindex":"ca355624-13a6-11e5-8c5d-6370b1f72634","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.List) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"status":-1},{"failures":[191,163,192,193,194,195,196,197,198,199],"tindex":"ca355625-13a6-11e5-8c5d-c77337348bf0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:965","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"from","replacement":"from"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[200,201],"tindex":"ca355626-13a6-11e5-8c5d-fd369d23cdfe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1470","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> instanceof org.apache.commons.collections4.BoundedCollection) {\n    return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).isFull();\n} "},"variableMap":{"coll":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:465","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) > (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"ca357d37-13a6-11e5-8c5d-b55fb0602e7a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:398","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<java.util.Map.Entry<K, V>>emptyOrderedIterator();\n} "},"status":0},{"failures":[],"tindex":"ca357d38-13a6-11e5-8c5d-75f6c1fb9cae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:964","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[202,203,204,205,206,200,207,208,209,210,211,212,213,214,215,216,201,217,218],"tindex":"ca357d39-13a6-11e5-8c5d-073a69b0f1df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n} "},"variableMap":{"transformers":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:440","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    final java.lang.Integer java.lang.Integer = java.util.Map<O, java.lang.Integer>.get(O);\n    if (java.lang.Integer == null) {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n    } else {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n    }\n}"},"status":-1},{"failures":[219,220,221,222,223,224,225,226,227,228],"tindex":"ca357d3a-13a6-11e5-8c5d-d5abb5f49120","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:890","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E>.setRight(org.apache.commons.collections4.list.TreeList.AVLNode<E>, null)"},"variableMap":{"otherTreeMin":"root","otherTree":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:203","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(int , E , null , null);\n} else {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(int, E);\n}"},"status":-1},{"failures":[60,61,63,64,65,66,67,69,70,72,73,74,75,76,77,79,82,83,87,88,90,91,92,96,105],"tindex":"ca357d3b-13a6-11e5-8c5d-1d94e3e8f111","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"index2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:88","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-1},{"failures":[],"tindex":"ca357d3c-13a6-11e5-8c5d-f1671e4b6951","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:53","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super T, ? extends T> == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n} "},"status":-2},{"failures":[229,230,231,31,232,233,234,235,236,237,238,239,240],"tindex":"ca357d3d-13a6-11e5-8c5d-b592bded53f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:519","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.checkCapacity()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:325","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-1},{"failures":[241,242,243,244,245,246,155,156,158,159,160,161,247,162,191,163,193,194,195,196,199,248,249,250,251,252,165,166,167,168,169,170,253,171],"tindex":"ca357d3e-13a6-11e5-8c5d-55ee523417d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:965","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"node","replacement":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:854","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"ca35a44f-13a6-11e5-8c5d-ff9dd6422bc8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:990","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> : java.util.Map<?, ?>.entrySet()) {\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getKey();\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getValue();\n    if ((java.lang.Object instanceof java.util.Map) && (!(org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.contains(java.lang.Object)))) {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, (java.lang.Object == null ? \"null\" : java.lang.Object), ((java.util.Map<?, ?>)(java.lang.Object)), org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>, boolean);\n    } else {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream, org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size());\n        java.io.PrintStream.print(java.lang.Object);\n        java.io.PrintStream.print(\" = \");\n        final int int = org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.indexOf(java.lang.Object);\n        if (int == (-1)) {\n            java.io.PrintStream.print(java.lang.Object);\n        } else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n            java.io.PrintStream.print(\"(this Map)\");\n        } else {\n            java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n        }\n        if (boolean && (java.lang.Object != null)) {\n            java.io.PrintStream.print(' ');\n            java.io.PrintStream.println(java.lang.Object.getClass().getName());\n        } else {\n            java.io.PrintStream.println();\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"ca35a450-13a6-11e5-8c5d-7d7839224116","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:239","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"variableMap":{"this":"result","map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:189","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends J, ? extends U> java.util.Map.Entry<? extends J, ? extends U> : java.util.Map<? extends J, ? extends U>.entrySet()) {\n    java.util.Map<K, V>.put(org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>.transformKey(java.util.Map.Entry<? extends J, ? extends U>.getKey()), org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>.transformValue(java.util.Map.Entry<? extends J, ? extends U>.getValue()));\n}"},"status":-2},{"failures":[254,239,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,240,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],"tindex":"ca35a451-13a6-11e5-8c5d-054051ed0c2b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.size();\n} "},"status":-1},{"failures":[],"tindex":"ca35a452-13a6-11e5-8c5d-3f13564664d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1396","type":"CtTryImpl","sourcecode":"try {\n    return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n}"},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"ca35a453-13a6-11e5-8c5d-97de88337ad0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:129","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V> = this;\n} "},"status":-2},{"failures":[],"tindex":"ca35a454-13a6-11e5-8c5d-ab089463842b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1164","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"variableMap":{"node":"child","right":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:766","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"ca35a455-13a6-11e5-8c5d-2b442622c429","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:276","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.Values<V>(this);\n} "},"status":-2},{"failures":[],"tindex":"ca35a456-13a6-11e5-8c5d-4165a1baaafc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:494","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"variableMap":{"next":"previous","insertBeforeNode":"next","nodeToInsert":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:510","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":-2},{"failures":[64],"tindex":"ca35a457-13a6-11e5-8c5d-bf5074d7f503","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:810","type":"CtIfImpl","sourcecode":"if (K == null) {\n    throw new java.lang.NullPointerException();\n} "},"status":-1},{"failures":[295,296,297,298,299,300,301],"tindex":"ca35cb68-13a6-11e5-8c5d-2566b7751ea7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.PredicatedMap:174","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.Predicate<? super V>) != null"},"variableMap":{"valuePredicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:176","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"ca35cb69-13a6-11e5-8c5d-ad265d37b70d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(java.util.Collection<? extends E>)).decorated();\n} else if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n} "},"variableMap":{"coll":"transformers"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n} "},"status":-2},{"failures":[302,303,0,229,304,305,306,307,308,309,310,311,312,313,184,314,315,316,317,318,319,185,320,321,230,322,323,324,325,326,327,328,329,330,331,332,333,334,186,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,1,2,3,4,5,6,7,8,9,351,352,353,354,231,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,355,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,356,357,358,359,360,361,362,363,232,233,364,365,366,367,234,368,235,237,236,238,369,370,187,371,372,373,374,375,376,377,378,379,188,380,381,382,383,384,385,189,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,190,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,239,240],"tindex":"ca35cb6a-13a6-11e5-8c5d-d35159e81e13","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"proposedCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"status":-1},{"failures":[],"tindex":"ca35cb6b-13a6-11e5-8c5d-97e8669db7cf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:123","type":"CtWhileImpl","sourcecode":"while ((int) > (int)) {\n    org.apache.commons.collections4.list.NodeCachingLinkedList<E>.getNodeFromCache();\n}"},"status":0},{"failures":[],"tindex":"ca35cb6c-13a6-11e5-8c5d-63fad4cfa44d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:314","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-2},{"failures":[418,419,241,242,243,244,245,420,246,421,422,423,424,425,426,427,428,155,156,157,158,159,160,161,247,162,429,191,430,431,432,163,433,434,435,436,437,438,439,440,441,192,442,443,193,194,444,445,195,196,197,198,199,446,447,448,449,248,249,250,251,252,450,451,452,453,454,165,166,455,167,168,169,170,253,171,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475],"tindex":"ca35cb6d-13a6-11e5-8c5d-5b0981a01839","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:513","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"y","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:915","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-1},{"failures":[],"tindex":"ca35f27e-13a6-11e5-8c5d-115a583c0f3e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535],"tindex":"ca35f27f-13a6-11e5-8c5d-d9968cf0c02a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:221","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, E);\n}"},"status":-1},{"failures":[],"tindex":"ca35f280-13a6-11e5-8c5d-fd31514fee3f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    return ((java.lang.Object[])(java.lang.Object))[int];\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570],"tindex":"ca35f281-13a6-11e5-8c5d-0fefadb6b923","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:151","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Set<E>.iterator());\n}"},"status":-1},{"failures":[],"tindex":"ca35f282-13a6-11e5-8c5d-f3f656f17c72","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:254","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.previousIndex()) >= 0) {\n    java.util.ListIterator<?>.previous();\n}"},"variableMap":{"li":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:223","type":"CtWhileImpl","sourcecode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-2},{"failures":[162,171],"tindex":"ca35f283-13a6-11e5-8c5d-6f6c76610b45","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:547","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    throw new java.util.ConcurrentModificationException(\"Cursor closed\");\n} "},"variableMap":{"valid":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1384","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    java.lang.StringBuilder.append((java.lang.Object == (this) ? \"(this Map)\" : java.lang.Object)).append('=').append((java.lang.Object == (this) ? \"(this Map)\" : java.lang.Object));\n    boolean = org.apache.commons.collections4.MapIterator<?, ?>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(\", \");\n    } \n}"},"status":-1},{"failures":[571,572,573,207,211,574,575,576,577,578,579,580,581,582,583,584,113,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,114,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,115,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,116,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,117,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,118,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,119,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,120,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,121,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,122,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830],"tindex":"ca361994-13a6-11e5-8c5d-9d687077f601","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(E);\n    int += int;\n    if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n        return true;\n    } \n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int += int;\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"ca361995-13a6-11e5-8c5d-63554be2b65f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1330","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(size())) {\n    return false;\n} "},"variableMap":{"other":"other","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1334","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    try {\n        for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    } catch (final java.lang.ClassCastException ex) {\n        return false;\n    } catch (final java.lang.NullPointerException ex) {\n        return false;\n    }\n} "},"status":0},{"failures":[254,239,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,240,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],"tindex":"ca361996-13a6-11e5-8c5d-091436aa2337","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.size();\n} "},"status":-1},{"failures":[831],"tindex":"ca361997-13a6-11e5-8c5d-d5eb6af1ab84","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:168","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.java.lang.Object)) {\n    return int;\n} "},"status":-1},{"failures":[419,242,193,195,197,198,199,449,249],"tindex":"ca361998-13a6-11e5-8c5d-2986fbaf3889","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1179","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.swapColors(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"x":"rval","y":"rval","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[],"tindex":"ca361999-13a6-11e5-8c5d-6345343b6e5c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:319","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntrySet<K, V>(this);\n} "},"status":-2},{"failures":[],"tindex":"ca3640aa-13a6-11e5-8c5d-b7fd954f20a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1164","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"variableMap":{"node":"node","right":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:759","type":"CtWhileImpl","sourcecode":"while (true) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"ca3640ab-13a6-11e5-8c5d-1ff84d19b06e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2062","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(java.lang.Object)"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"ca3640ac-13a6-11e5-8c5d-ad0613681ef5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"length","currentIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:126","type":"CtForImpl","sourcecode":"for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n    char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n}"},"status":-2},{"failures":[],"tindex":"ca3640ad-13a6-11e5-8c5d-1f5f2d0b7ffc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:146","type":"CtIfImpl","sourcecode":"if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"ca3640ae-13a6-11e5-8c5d-d11531ed52b6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:301","type":"CtTryImpl","sourcecode":"try {\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n    while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n    (int)++;\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.removeEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.reuseEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.addEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int);\n} catch (final java.lang.NullPointerException ex) {\n    throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n}"},"status":-2},{"failures":[480,832,833,834,835,836,837,838,839,840,511,841,842,843,844,845,846,847,848],"tindex":"ca3640af-13a6-11e5-8c5d-839cb00e2ddb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"index","modifications":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"status":-1},{"failures":[],"tindex":"ca3640b0-13a6-11e5-8c5d-5f2b792f853f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1725","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(java.lang.Object)"},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"status":-2},{"failures":[58,57,59],"tindex":"ca3640b1-13a6-11e5-8c5d-4de9ff8c6b89","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:194","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} else if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"o":"key3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:289","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-1},{"failures":[],"tindex":"ca3667c2-13a6-11e5-8c5d-f7d12230b53f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    final int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) * 2;\n    if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n    } \n} "},"variableMap":{"size":"newCapacity","data":"newEntries","org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"newCapacity","length":"newCapacity","this":"this","threshold":"oldCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:638","type":"CtForImpl","sourcecode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n        do {\n            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n    } \n}"},"status":-2},{"failures":[],"tindex":"ca3667c3-13a6-11e5-8c5d-53464409ca9d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:436","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        java.lang.Object[][int++] = E;\n    }\n}"},"status":-2},{"failures":[],"tindex":"ca3667c4-13a6-11e5-8c5d-355fb8987a95","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"newCapacity","newCapacity":"oldCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:638","type":"CtForImpl","sourcecode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n        do {\n            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n    } \n}"},"status":-2},{"failures":[60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105],"tindex":"ca3667c5-13a6-11e5-8c5d-79daa8f8d3e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    return null;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } \n} "},"status":-1},{"failures":[],"tindex":"ca3667c6-13a6-11e5-8c5d-35d43977736e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:621","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.init()"},"variableMap":{"this":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtIfImpl","sourcecode":"if (java.util.List<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"status":-2},{"failures":[],"tindex":"ca3667c7-13a6-11e5-8c5d-fdac1be3e423","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger != null) {\n    return org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n} "},"status":-2},{"failures":[173,174,175,176,177,178],"tindex":"ca3667c8-13a6-11e5-8c5d-49f52582769d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:215","type":"CtIfImpl","sourcecode":"if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n    int[][int] = (int[][(int + 1)]) - 1;\n} else {\n    int[][int] = int[][(int - 1)];\n}"},"variableMap":{"vUp":"vDown","d":"i","delta":"i","i":"i","k":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:190","type":"CtIfImpl","sourcecode":"if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n    int[][int] = int[][(int + 1)];\n} else {\n    int[][int] = (int[][(int - 1)]) + 1;\n}"},"status":-1},{"failures":[],"tindex":"ca3667c9-13a6-11e5-8c5d-a13d1a642351","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:615","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"parent":"deletedNode","dataElement":"dataElement","child":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[831],"tindex":"ca368eda-13a6-11e5-8c5d-f7158bc1ec38","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:643","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    return 0;\n} "},"variableMap":{"integerObject":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:168","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.java.lang.Object)) {\n    return int;\n} "},"status":-1},{"failures":[556,561,562,849,563,564,566,567,850,568,569,570,851,852],"tindex":"ca368edb-13a6-11e5-8c5d-697d0ddc2c00","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:175","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"size":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:480","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : org.apache.commons.collections4.map.CompositeMap<K, V>.entrySet()) {\n    int += java.util.Map.Entry<K, V>.hashCode();\n}"},"status":-1},{"failures":[],"tindex":"ca368edc-13a6-11e5-8c5d-ddf1885b8857","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:442","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n} else {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n}"},"status":-2},{"failures":[],"tindex":"ca368edd-13a6-11e5-8c5d-6b087f8de9ff","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1622","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey()"},"variableMap":{"current":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:789","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey();\n} else {\n    throw new java.util.NoSuchElementException();\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":98,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}