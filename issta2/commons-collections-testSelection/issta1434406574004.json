{"failureDictionary":{"org.apache.commons.collections4.bag.TransformedBagTest.testSimpleSerialization":373,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":409,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":436,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":264,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":348,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":263,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":317,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":258,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":65,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":315,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":91,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":314,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":72,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":192,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":223,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":210,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":68,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":13,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":56,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":344,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":397,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":277,"org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testEmptyIterator":471,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":39,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":151,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":398,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":399,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":44,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":295,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":444,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":106,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":179,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":236,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":149,"org.apache.commons.collections4.CollectionUtilsTest.get":291,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":350,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":421,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":146,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":205,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":24,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectHashCodeEqualsContract":353,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":437,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":451,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":308,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testEmptyQueueCompatibility":255,"org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testIterator":470,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":12,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":189,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":116,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":81,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":127,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":429,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":202,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSimpleSerialization":361,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSimpleSerialization":391,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":407,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":113,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testFullIterator":468,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":162,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSimpleSerialization":385,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":69,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":171,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":481,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":138,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":233,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":114,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":201,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":237,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":161,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":382,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":134,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":328,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":394,"org.apache.commons.collections4.CollectionUtilsTest.intersection":294,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":326,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":57,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":485,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":110,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":38,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":425,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":286,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":345,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":334,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":319,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":170,"org.apache.commons.collections4.bag.CollectionBagTest.testSimpleSerialization":357,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":27,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":165,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":338,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":386,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":63,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":363,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":53,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":130,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":158,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":34,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":76,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":92,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":141,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":469,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":402,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":371,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":430,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":49,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":279,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":370,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":148,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":476,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":372,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":75,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":321,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":99,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":483,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":29,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":431,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":406,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSimpleSerialization":395,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":112,"org.apache.commons.collections4.ListUtilsTest.testIndexOf":296,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":360,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":118,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":359,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":86,"org.apache.commons.collections4.CollectionUtilsTest.union":293,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":422,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":175,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":87,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testObjectEqualsSelf":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectHashCodeEqualsSelfHashCode":352,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":454,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":1,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":281,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":423,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":128,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":19,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":215,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":488,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":168,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":349,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":173,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":434,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":311,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":351,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":445,"org.apache.commons.collections4.bag.TreeBagTest.testSimpleSerialization":365,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":96,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":129,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":7,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":176,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":368,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":137,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":123,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":143,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":23,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":443,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":77,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":89,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":235,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":442,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":40,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":441,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":84,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":262,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":180,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":157,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":2,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":356,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":438,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":439,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":193,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":440,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":183,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":153,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":364,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":120,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testIterator":466,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":101,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":269,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":367,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":418,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":35,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSimpleSerialization":369,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":251,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":51,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals":465,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":448,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":150,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":142,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":194,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":427,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":37,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":197,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":18,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":479,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":61,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":347,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":191,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":390,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testInitialCapacityZero":323,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":206,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":330,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToString":261,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionClear":266,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":59,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testConstructors":459,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":329,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":5,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":341,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":410,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":486,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":392,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":73,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":375,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":342,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":312,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":98,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNull":218,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":477,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":10,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":248,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":103,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":21,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":380,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":187,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":225,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":17,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":4,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsSelfHashCode":340,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":490,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":111,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":298,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":31,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":284,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":297,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":216,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":14,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":196,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":475,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":276,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":449,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":64,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":43,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":273,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":310,"org.apache.commons.collections4.map.HashedMapTest.testInitialCapacityZero":322,"org.apache.commons.collections4.map.MultiKeyMapTest.testSampleMappings":420,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":474,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":318,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":289,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":9,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":117,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":346,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":184,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":90,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":309,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":424,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":82,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":70,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":316,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testEmptyIterator":221,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":303,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":74,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testConstructorsByArray":461,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null_next":214,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":41,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":115,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":272,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":154,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":178,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":207,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":47,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":447,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":211,"org.apache.commons.collections4.bag.PredicatedBagTest.testEmptyBagCompatibility":378,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":136,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":224,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":8,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetKeysArrayConstructorCloned":460,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":268,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":132,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":190,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":195,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSimpleSerialization":274,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":283,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":313,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":48,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":152,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":66,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":181,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":299,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":102,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":119,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":280,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":285,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":167,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetKeysSimpleConstructor":457,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEmptyIterator":15,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":408,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":379,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":247,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":227,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":107,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":100,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":435,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":339,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":336,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":186,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":60,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":85,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":354,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":275,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":417,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":287,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":20,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":79,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":105,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":204,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":393,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueCompatibility":250,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":301,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":304,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":278,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":387,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":290,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":140,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":376,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":133,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":419,"org.apache.commons.collections4.set.CompositeSetTest.testEqualsNull":403,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":455,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":172,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":256,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":163,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":327,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":220,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":432,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":480,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":246,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":245,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":242,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":124,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":241,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":244,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":243,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":238,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":257,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":240,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":239,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":28,"org.apache.commons.collections4.CollectionUtilsTest.isFull":234,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":94,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":337,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":265,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":159,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":83,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":62,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":46,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":166,"org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testFullIterator":472,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":174,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":411,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":222,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":433,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":200,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":252,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":355,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEmptyBagCompatibility":358,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":388,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":80,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":446,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":3,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":414,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":401,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":413,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":412,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":396,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":126,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetKeysArrayConstructorNonCloned":464,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":45,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":270,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":332,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testSize":458,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":121,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetIndexed":456,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":122,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":26,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":58,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":452,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":22,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":147,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":331,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":473,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEqualsAfterSerialization":462,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":428,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":185,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":300,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":305,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":489,"org.apache.commons.collections4.bag.TreeBagTest.testEmptyBagCompatibility":362,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":36,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":42,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":325,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":487,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEmptyBagCompatibility":366,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":125,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":131,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":478,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":482,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":249,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":198,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":93,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":306,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":33,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":104,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":164,"org.apache.commons.collections4.bag.PredicatedBagTest.testSimpleSerialization":381,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":144,"org.apache.commons.collections4.bag.HashBagTest.testEmptyBagCompatibility":374,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":25,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":450,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":217,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":226,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":139,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":232,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":231,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":307,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":109,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":230,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":292,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":383,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":228,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":229,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":484,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":271,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testEmptyIterator":467,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":208,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":320,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":95,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectEqualsSelf":6,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":160,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":32,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":212,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":213,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":52,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":199,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":203,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":343,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":415,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":11,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":108,"org.apache.commons.collections4.bag.HashBagTest.testSimpleSerialization":377,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testHashCode":463,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":145,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":400,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":78,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionSize":260,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":177,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":253,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":405,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":156,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":209,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":335,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":404,"org.apache.commons.collections4.map.LinkedMapTest.testInitialCapacityZero":324,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":282,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":50,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":169,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":188,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":135,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":71,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":54,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSimpleSerialization":389,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":416,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":259,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":302,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":288,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":333,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":426,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null1":219,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testEmptyQueueSerialization":254,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":384,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testDecorateFactory":88,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":182,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":267,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":155,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":453},"transformations":[{"failures":[],"tindex":"22976d39-13ac-11e5-b6d4-05b31574758e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:219","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"canRemove":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:390","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Bag<E>.isEmpty())) {\n    boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.removeAll(org.apache.commons.collections4.Bag<E>);\n} "},"status":0},{"failures":[],"tindex":"2297944a-13ac-11e5-b6d4-edb54b0e00ba","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1932","type":"CtReturnImpl","sourcecode":"return !(boolean[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()])"},"variableMap":{"blackColor":"obj","dataElement":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:466","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) > (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n    return false;\n} "},"status":-2},{"failures":[0,1,2,3,4,5,6],"tindex":"2297944b-13ac-11e5-b6d4-a3fa744e9983","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:195","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"2297944c-13ac-11e5-b6d4-8dc26f3f6f7c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:264","type":"CtIfImpl","sourcecode":"if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n    ++int;\n} else {\n    if ((int - int) > (int - int)) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    } else {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    }\n}"},"variableMap":{"start1":"end2","end2":"start1","equator":"equator","i":"end2","end1":"end1","j":"start1","start2":"start1","sequence1":"sequence1","script":"script","sequence2":"sequence2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:257","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.sequence.SequencesComparator.Snake == null) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) {\n    int int = int;\n    int int = int;\n    while ((int < int) || (int < int)) {\n        if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n            ++int;\n        } else {\n            if ((int - int) > (int - int)) {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            } else {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            }\n        }\n    }\n} else {\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(int, org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), org.apache.commons.collections4.sequence.EditScript<T>);\n    for (int int = org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart() ; int < (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) ; ++int) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    }\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), int, org.apache.commons.collections4.sequence.EditScript<T>);\n}"},"status":-2},{"failures":[],"tindex":"2298579d-13ac-11e5-b6d4-6fe07f6dfbd2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1373","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final K K = org.apache.commons.collections4.MapIterator<K, V>.next();\n    final V V = org.apache.commons.collections4.MapIterator<K, V>.getValue();\n    java.lang.StringBuilder.append((K == (this) ? \"(this Map)\" : K)).append('=').append((V == (this) ? \"(this Map)\" : V));\n    boolean = org.apache.commons.collections4.MapIterator<K, V>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(',').append(' ');\n    } \n}"},"status":0},{"failures":[],"tindex":"2298579e-13ac-11e5-b6d4-558a9a8fc814","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:242","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.ListOrderedSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n    if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n    } \n}"},"status":-2},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19],"tindex":"2298579f-13ac-11e5-b6d4-33a2f8df1728","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:298","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n    java.util.ArrayList<E>.add(null);\n    java.util.BitSet.clear(int);\n}"},"variableMap":{"iterators":"iterators","valueSet":"valueSet","values":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:295","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<E>) == null) {\n    java.util.ArrayList<E> = new java.util.ArrayList<E>(java.util.ArrayList<java.util.Iterator<? extends E>>.size());\n    java.util.BitSet = new java.util.BitSet(java.util.ArrayList<java.util.Iterator<? extends E>>.size());\n    for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n        java.util.ArrayList<E>.add(null);\n        java.util.BitSet.clear(int);\n    }\n} "},"status":-1},{"failures":[],"tindex":"22987eb0-13ac-11e5-b6d4-dd826b8bf674","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:218","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Transformer<? super V, ? extends V>.transform(V)"},"status":-2},{"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],"tindex":"22987eb1-13ac-11e5-b6d4-ef6ffd5a70d6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:115","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"2298a5c2-13ac-11e5-b6d4-a7dc8860dcd9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:145","type":"CtWhileImpl","sourcecode":"while ((((int - int) < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get((int - int))))) {\n    ++int;\n}"},"status":0},{"failures":[61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"tindex":"2298a5c3-13ac-11e5-b6d4-7babd810a2cd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:118","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: The constructor must exist and be public \")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:547","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"))"},"status":-1},{"failures":[81,82,83,84,85,86,87],"tindex":"2298a5c4-13ac-11e5-b6d4-555c6cfe53a8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:151","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n    if (org.apache.commons.collections4.bag.AbstractMapBag<E>.(getCount(java.lang.Object)) < (org.apache.commons.collections4.Bag<?>.getCount(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"2298ccd5-13ac-11e5-b6d4-4101331e7778","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        return null;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"current","parent":"tree","left":"current","root":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"22991af6-13ac-11e5-b6d4-5b53b9eec3e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:71","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.MapIterator<? extends K, ? extends V>.hasNext()"},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1322","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if (java.lang.Object == null) {\n        if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n            return false;\n        } \n    } else {\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n}"},"status":-2},{"failures":[88],"tindex":"22991af7-13ac-11e5-b6d4-a9228b961366","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:49","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.ListIterator<E> java.util.ListIterator<E> = ((java.util.ListIterator<E>)(java.util.ListIterator<? extends E>));\n    return java.util.ListIterator<E>;\n} "},"status":-1},{"failures":[89,90,91],"tindex":"22991af8-13ac-11e5-b6d4-5912db4ca945","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:263","type":"CtWhileImpl","sourcecode":"while ((int < int) || (int < int)) {\n    if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n        ++int;\n    } else {\n        if ((int - int) > (int - int)) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        } else {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"22991af9-13ac-11e5-b6d4-25424b3458c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:274","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext() ; ) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    if ((java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get()) == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } \n}"},"status":-2},{"failures":[92,93,94,95,96,97,98,99,100,101],"tindex":"2299420a-13ac-11e5-b6d4-63146bcf064b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1068","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"siblingNode":"siblingNode","currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1030","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":-1},{"failures":[],"tindex":"2299420b-13ac-11e5-b6d4-c719fdb3222b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:83","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"status":-2},{"failures":[102],"tindex":"2299420c-13ac-11e5-b6d4-27fbccd370a6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"status":-1},{"failures":[103,104,105,106,107,108,109,81,110,111,112,113,114,115,116,117,118,119,120,121,122,82,123,124,125,126,127,128,129,130,131,132,133,134,135,83,136,137,138,139,140,141,142,143,144,145,146,147,148,84,149,150,151,152,153,154,155,156,157,158,159,85,160,161,162,163,164,165,166,167,168,169,170,86,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,87,186,187,188,189,190,191,192,193,194,195,196],"tindex":"2299420d-13ac-11e5-b6d4-0da3cd83e291","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger != null) {\n    return org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n} "},"status":-1},{"failures":[],"tindex":"2299691e-13ac-11e5-b6d4-0b91bb87c023","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:636","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == java.lang.Object) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    org.apache.commons.collections4.map.StaticBucketMap.this.remove(java.lang.Object);\n    return true;\n} "},"variableMap":{"obj":"object","k":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"2299691f-13ac-11e5-b6d4-c555c232fd33","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.SwitchClosure:96","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E> == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : org.apache.commons.collections4.Closure<? super E>));\n} "},"variableMap":{"defaultClosure":"defaultClosure","size":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:64","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super E>[].int) == 0) {\n    return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E> == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : org.apache.commons.collections4.Closure<? super E>));\n} "},"status":-2},{"failures":[197,198],"tindex":"22996920-13ac-11e5-b6d4-118497c2d6f0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:547","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    throw new java.util.ConcurrentModificationException(\"Cursor closed\");\n} "},"variableMap":{"valid":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:204","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    boolean |= org.apache.commons.collections4.set.ListOrderedSet<E>.add(E);\n}"},"status":-1},{"failures":[],"tindex":"22996921-13ac-11e5-b6d4-8706a71a459f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtIfImpl","sourcecode":"if (java.util.Set<E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Set must not be null\");\n} "},"variableMap":{"set":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:354","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    if (!(java.util.Collection<?>.contains(E))) {\n        java.util.List<E>.add(E);\n    } \n}"},"status":0},{"failures":[199,200,201],"tindex":"22996922-13ac-11e5-b6d4-c3767ac753d3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:219","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"canRemove":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:163","type":"CtIfImpl","sourcecode":"if (E instanceof java.util.Iterator) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)));\n} else {\n    E = E;\n    boolean = true;\n}"},"status":-1},{"failures":[202,203,204,205,206],"tindex":"22999033-13ac-11e5-b6d4-6b24ebef7bbe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:116","type":"CtIfImpl","sourcecode":"if ((((boolean[][int]) && (int < ((int[].int) - 1))) && ((int[][int]) > (int[][(int + 1)]))) || (((!(boolean[][int])) && (int > 0)) && ((int[][int]) > (int[][(int - 1)])))) {\n    if ((int[][int]) > int) {\n        int = int[][int];\n        int = int;\n    } \n} "},"status":-1},{"failures":[],"tindex":"22999034-13ac-11e5-b6d4-87dee2aecdf8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:513","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E>.recalcHeight()"},"variableMap":{"this":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:186","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) != null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(java.lang.Object[], org.apache.commons.collections4.list.TreeList.AVLNode<E>.int);\n} "},"status":-2},{"failures":[],"tindex":"22999035-13ac-11e5-b6d4-e1512e71fcba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:356","type":"CtIfImpl","sourcecode":"if ((java.util.BitSet.get(int)) == false) {\n    org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n} "},"status":-2},{"failures":[],"tindex":"22999036-13ac-11e5-b6d4-91c26c2d808a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T> == null) || (org.apache.commons.collections4.Predicate<? super T> == null)) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:750","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<T> java.util.Iterator<T> = java.lang.Iterable<T>.iterator() ; java.util.Iterator<T>.hasNext() ; ) {\n    if (!(org.apache.commons.collections4.Predicate<? super T>.evaluate(java.util.Iterator<T>.next()))) {\n        java.util.Iterator<T>.remove();\n        boolean = true;\n    } \n}"},"status":0},{"failures":[207,208,209],"tindex":"22999037-13ac-11e5-b6d4-0fb428453986","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:258","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    if (java.util.Collection<?>.contains(java.util.Iterator<E>.next())) {\n        java.util.Iterator<E>.remove();\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[92,93,95,97,99,100,101],"tindex":"22999038-13ac-11e5-b6d4-8bb000ab71e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:995","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1126","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[210,211],"tindex":"22999039-13ac-11e5-b6d4-252c2aef7526","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1218","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"root":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:696","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"2299903a-13ac-11e5-b6d4-f35540ff4314","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:163","type":"CtIfImpl","sourcecode":"if (E instanceof java.util.Iterator) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)));\n} else {\n    E = E;\n    boolean = true;\n}"},"status":-2},{"failures":[],"tindex":"2299903b-13ac-11e5-b6d4-a95ca0440c08","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:57","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The predicate to call must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:97","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"setValue() is not supported\")"},"status":-2},{"failures":[212,213,199,214,215,216,217,201,218,219,220,221,222],"tindex":"2299903c-13ac-11e5-b6d4-bfa2c29deb34","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} "},"status":-1},{"failures":[],"tindex":"2299903d-13ac-11e5-b6d4-bfe6e246cb8f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends K, ? extends V> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>));\n    return java.util.Map<K, V>;\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends K, ? extends V>.isEmpty()) {\n    return ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>));\n} "},"status":0},{"failures":[],"tindex":"2299903e-13ac-11e5-b6d4-d522e9a096e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1330","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(size())) {\n    return false;\n} "},"variableMap":{"other":"other","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1334","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    try {\n        for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    } catch (final java.lang.ClassCastException ex) {\n        return false;\n    } catch (final java.lang.NullPointerException ex) {\n        return false;\n    }\n} "},"status":0},{"failures":[],"tindex":"2299b74f-13ac-11e5-b6d4-4ff96ae04f5e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1218","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"root":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[104,118,131,144,156,167,178,180,182,193,194],"tindex":"2299b750-13ac-11e5-b6d4-8db7cf12036c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:476","type":"CtWhileImpl","sourcecode":"while (int < (T[].int)) {\n    T[][int++] = null;\n}"},"status":-1},{"failures":[103,104,105,106,107,108,109,81,110,111,112,113,114,115,116,117,118,119,120,121,122,82,123,124,125,126,127,128,129,130,131,132,133,134,135,83,136,137,138,139,140,141,142,143,144,145,146,147,148,84,149,150,151,152,153,154,155,156,157,158,159,85,160,161,162,163,164,165,166,167,168,169,170,86,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,87,186,187,188,189,190,191,192,193,194,195,196],"tindex":"2299b751-13ac-11e5-b6d4-23a9971290bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger != null) {\n    return org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n} "},"status":-1},{"failures":[],"tindex":"2299b752-13ac-11e5-b6d4-25b3c5c0f781","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:67","type":"CtIfImpl","sourcecode":"if ((((java.lang.Class<?>[] == null) && (java.lang.Object[] != null)) || ((java.lang.Class<?>[] != null) && (java.lang.Object[] == null))) || (((java.lang.Class<?>[] != null) && (java.lang.Object[] != null)) && ((java.lang.Class<?>[].int) != (java.lang.Object[].int)))) {\n    throw new java.lang.IllegalArgumentException(\"Parameter types must match the arguments\");\n} "},"status":-2},{"failures":[],"tindex":"2299b753-13ac-11e5-b6d4-7d321922cff1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n    break;\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:305","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n    boolean |= java.util.Collection<E>.retainAll(java.util.Collection<?>);\n}"},"status":-2},{"failures":[],"tindex":"2299b754-13ac-11e5-b6d4-db7c86964dd3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:239","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"2299b755-13ac-11e5-b6d4-d92df4af2e9c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1570","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"e":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:509","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[223,20,21,224,225,226,22,23,24,25,26,27,227,28,29,30,31,228,229,230,231,232,233,210,211],"tindex":"2299b756-13ac-11e5-b6d4-f976ede3d43d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:82","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-1},{"failures":[234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274],"tindex":"2299b757-13ac-11e5-b6d4-c3dfa7bcf9d1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:717","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\");\n} "},"variableMap":{"canRemove":"full"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:159","type":"CtIfImpl","sourcecode":"if ((int) < (int)) {\n    int = ((int) - (int)) + (int);\n} else if ((int) == (int)) {\n    int = boolean ? int : 0;\n} else {\n    int = (int) - (int);\n}"},"status":-1},{"failures":[],"tindex":"2299de68-13ac-11e5-b6d4-8993c561f31a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"status":-2},{"failures":[275,276],"tindex":"2299de69-13ac-11e5-b6d4-ab0ea1c05d17","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:75","type":"CtIfImpl","sourcecode":"if ((((java.lang.Class<?>[] == null) && (java.lang.Object[] != null)) || ((java.lang.Class<?>[] != null) && (java.lang.Object[] == null))) || (((java.lang.Class<?>[] != null) && (java.lang.Object[] != null)) && ((java.lang.Class<?>[].int) != (java.lang.Object[].int)))) {\n    throw new java.lang.IllegalArgumentException(\"The parameter types must match the arguments\");\n} "},"variableMap":{"args":"result","paramTypes":"result","length":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:165","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.CompositeSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; int++) {\n    java.lang.Object[][int] = java.util.Iterator<E>.next();\n}"},"status":-1},{"failures":[277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295],"tindex":"2299de6a-13ac-11e5-b6d4-7b969e184949","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"The collection must not be null\");\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:440","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    final java.lang.Integer java.lang.Integer = java.util.Map<O, java.lang.Integer>.get(O);\n    if (java.lang.Integer == null) {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n    } else {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n    }\n}"},"status":-1},{"failures":[],"tindex":"2299de6b-13ac-11e5-b6d4-7da06bc0c9c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"child","current":"child","tree":"node","right":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:766","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"2299de6c-13ac-11e5-b6d4-955c16c37d8d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.TransformedSet:82","type":"CtForEachImpl","sourcecode":"for (final E E : E[]) {\n    org.apache.commons.collections4.set.TransformedSet<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}"},"status":-2},{"failures":[296],"tindex":"2299de6d-13ac-11e5-b6d4-3bdc4ced625d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:510","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.List<E>.size()) ; int++) {\n    final E E = java.util.List<E>.get(int);\n    if (org.apache.commons.collections4.Predicate<E>.evaluate(E)) {\n        return int;\n    } \n}"},"status":-1},{"failures":[297,298,299,278,300,301,302],"tindex":"2299de6e-13ac-11e5-b6d4-e1cb9c27a917","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:199","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"2299de6f-13ac-11e5-b6d4-6b386e91d75e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:237","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.start()"},"variableMap":{"this":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:145","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"2299de70-13ac-11e5-b6d4-25e1afa00227","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:71","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"}\\n\")"},"variableMap":{"buffer":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:377","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('}')"},"status":0},{"failures":[303],"tindex":"2299de71-13ac-11e5-b6d4-5f715786f756","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:180","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, K, K))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, V);\n    return V;\n} "},"status":-1},{"failures":[],"tindex":"2299de72-13ac-11e5-b6d4-d32175f696ce","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"status":-2},{"failures":[],"tindex":"2299de73-13ac-11e5-b6d4-7da1d87d0314","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1164","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"variableMap":{"node":"left","right":"previous"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:660","type":"CtWhileImpl","sourcecode":"while (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        break;\n    } \n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":0},{"failures":[],"tindex":"229a0584-13ac-11e5-b6d4-219ff9957da6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:90","type":"CtForEachImpl","sourcecode":"for (final E E : E[]) {\n    org.apache.commons.collections4.collection.TransformedCollection<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}"},"status":-2},{"failures":[],"tindex":"229a0585-13ac-11e5-b6d4-a5b474e71152","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:500","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n} else if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isExternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an external Entry!\"));\n} "},"variableMap":{"root":"predecessor","h":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"229a0586-13ac-11e5-b6d4-e7da5091eabe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:391","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet();\n} "},"status":-2},{"failures":[304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321],"tindex":"229a0587-13ac-11e5-b6d4-bf41b2380135","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n    return true;\n} "},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n    return true;\n} "},"status":-1},{"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60],"tindex":"229a0588-13ac-11e5-b6d4-e70c5c3b7b5c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:115","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    return false;\n} "},"status":-1},{"failures":[322,323,324],"tindex":"229a0589-13ac-11e5-b6d4-2945b6f7e1c9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"proposedCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"status":-1},{"failures":[325],"tindex":"229a058a-13ac-11e5-b6d4-87397fdd17e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ClosureUtils:70","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionClosure.<E>exceptionClosure()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformerClosure:50","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure()"},"status":-1},{"failures":[297,298,299,278,300,301,302],"tindex":"229a058b-13ac-11e5-b6d4-37b9631887ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:199","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[326,327,328,329,330,331],"tindex":"229a058c-13ac-11e5-b6d4-711c19d6a5dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:70","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<? extends E>.hasNext()"},"variableMap":{"iterator":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:95","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"229a058d-13ac-11e5-b6d4-df3533805b41","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:378","type":"CtForEachImpl","sourcecode":"for (java.util.Set<E> java.util.Set<E> : java.util.Set<E>[]) {\n    org.apache.commons.collections4.set.CompositeSet<E>.addComposited(java.util.Set<E>);\n}"},"status":-2},{"failures":[332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,92,351,93,352,353],"tindex":"229a2c9e-13ac-11e5-b6d4-434480f81b7d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"total","lengthInBits":"total","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"total","otherOffsetInBits":"total","otherLengthInBits":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1360","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n    }\n} "},"status":-1},{"failures":[],"tindex":"229a2c9f-13ac-11e5-b6d4-254b4b06fd6b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1674","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"lastReturnedNode":"newNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1284","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue(), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    }\n}"},"status":0},{"failures":[],"tindex":"229a2ca0-13ac-11e5-b6d4-cd16f3d4f9df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:75","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.MapTransformer:53","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.MapTransformer<I, O>(java.util.Map<? super I, ? extends O>)"},"status":-2},{"failures":[],"tindex":"229a2ca1-13ac-11e5-b6d4-2f16cda56d32","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1617","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<O>.trimToSize()"},"variableMap":{"mergedList":"mergedList"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1611","type":"CtIfImpl","sourcecode":"if ((O == null) || (!(O.equals(O)))) {\n    java.util.ArrayList<O>.add(O);\n} "},"status":0},{"failures":[354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,1,2,390,391,392,393,394,395],"tindex":"229a2ca2-13ac-11e5-b6d4-014bd33543d6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractSerializableListDecorator:68","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"variableMap":{"in":"in"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:520","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E E = ((E)(java.io.ObjectInputStream.readObject()));\n    final int int = java.io.ObjectInputStream.readInt();\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    int += int;\n}"},"status":-1},{"failures":[31,396,233,34,35,45,56,397,398,399,400,59,60],"tindex":"229a2ca3-13ac-11e5-b6d4-2d57f1917af6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:509","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"229a2ca4-13ac-11e5-b6d4-8350770031c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:216","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"path":"parent","entry":"entry","current":"parent","predecessor":"current","bitIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:211","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"229a7ac5-13ac-11e5-b6d4-a579d3df29c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:400","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)).purge(java.lang.ref.Reference<?>)) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    (this.int)--;\n    return ;\n} "},"variableMap":{"next":"next","entry":"next","ref":"ref","previous":"next","data":"data","size":"size","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:399","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)).purge(java.lang.ref.Reference<?>)) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n        (this.int)--;\n        return ;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"229aa1d6-13ac-11e5-b6d4-77d56f44f663","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"status":-2},{"failures":[401,402,403],"tindex":"229aa1d7-13ac-11e5-b6d4-8de8f43dbea3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Set) {\n    final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(java.lang.Object));\n    return ((java.util.Set<?>.size()) == org.apache.commons.collections4.set.CompositeSet<E>.(size())) && (java.util.Set<?>.containsAll(this));\n} "},"status":-1},{"failures":[],"tindex":"229aa1d8-13ac-11e5-b6d4-c5285926679c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"hashIndex","index":"hashIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:583","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} else {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"229aeff9-13ac-11e5-b6d4-abdd816f48be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"bound","index":"bound"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s before the start of the array. \"));\n} "},"status":-2},{"failures":[],"tindex":"229aeffa-13ac-11e5-b6d4-23ce653f3e1f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:140","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[404,405,89,406,90,91],"tindex":"229aeffb-13ac-11e5-b6d4-056ea8e5a6e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:206","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int)"},"variableMap":{"vUp":"vUp","start1":"delta","delta":"i","end2":"k","this":"this","i":"start2","end1":"end2","k":"delta","start2":"start2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:231","type":"CtIfImpl","sourcecode":"if ((int[][int]) <= (int[][(int + int)])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n} "},"status":-1},{"failures":[],"tindex":"229aeffc-13ac-11e5-b6d4-4f53c57fede7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:502","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"229b170d-13ac-11e5-b6d4-4902353b40cc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:407","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>) == null) {\n    java.util.Collection<V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values();\n} "},"variableMap":{"values":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:265","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>.size()) > 0) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"229b170e-13ac-11e5-b6d4-c73fdd4622a4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"total","lengthInBits":"value","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"total","otherOffsetInBits":"total","otherLengthInBits":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:569","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.entrySet()) {\n    final E E = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey();\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue();\n    int += (E == null ? 0 : E.hashCode()) ^ (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int);\n}"},"status":-2},{"failures":[],"tindex":"229b170f-13ac-11e5-b6d4-d951ac0c731e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:546","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Bag<?>.size()) != org.apache.commons.collections4.bag.AbstractMapBag<E>.(size())) {\n    return false;\n} "},"variableMap":{"other":"other","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:549","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet()) {\n    if ((org.apache.commons.collections4.Bag<?>.getCount(E)) != org.apache.commons.collections4.bag.AbstractMapBag<E>.(getCount(E))) {\n        return false;\n    } \n}"},"status":0},{"failures":[407,408,409,303,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,311,426,427,428,429,430,312,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465],"tindex":"229b1710-13ac-11e5-b6d4-717a0999bec4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1165","type":"CtIfImpl","sourcecode":"if ((java.lang.Object[] == null) || ((java.lang.Object[].int) < 2)) {\n    throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + int));\n} "},"variableMap":{"sub":"keys","length":"total","i":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:263","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    if (java.lang.Object != null) {\n        int ^= java.lang.Object.hashCode();\n    } \n}"},"status":-1},{"failures":[],"tindex":"229b1711-13ac-11e5-b6d4-5d1c521b1980","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:312","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:184","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Transformer<?, ?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Transformer<?, ?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + int) + \" was null\"));\n    } \n}"},"status":-2},{"failures":[],"tindex":"229b1712-13ac-11e5-b6d4-9f18046b083b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"newCapacity","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:642","type":"CtDoImpl","sourcecode":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null )"},"status":-2},{"failures":[],"tindex":"229b1713-13ac-11e5-b6d4-63e220b522e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"from":"leftChild","to":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"229b1714-13ac-11e5-b6d4-814873bda286","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:224","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E>.isEmpty()) {\n    return false;\n} "},"variableMap":{"c":"iterable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? extends C> instanceof java.util.Collection<?>) {\n    return java.util.Collection<C>.addAll(((java.util.Collection<? extends C>)(java.lang.Iterable<? extends C>)));\n} "},"status":-2},{"failures":[],"tindex":"229b1715-13ac-11e5-b6d4-41eaab050663","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:250","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.lockChain()"},"variableMap":{"this":"chain"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:151","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Set<E>.iterator());\n}"},"status":-2},{"failures":[466,467,468,469,470,471,472,473],"tindex":"229b1716-13ac-11e5-b6d4-9f89d26e0abd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:397","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    return true;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:112","type":"CtIfImpl","sourcecode":"if (((int) == (int)) || ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator)) {\n    return java.util.Iterator<? extends E>.hasNext();\n} "},"status":-1},{"failures":[474],"tindex":"229b3e27-13ac-11e5-b6d4-05a026e51f96","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) < (java.util.Collection<?>.size())) {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n} else {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n}"},"variableMap":{"coll2":"coll","coll1":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:246","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (org.apache.commons.collections4.set.CompositeSet<E>.(contains(java.lang.Object)) == false) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"229b3e28-13ac-11e5-b6d4-0b544087f1e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object));\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Map<?, ?>.entrySet().iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return ((java.lang.Object[])(java.lang.Object))[int];\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"this":"key","i":"length","object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"status":-2},{"failures":[223,475,20,21,226,224,225,476,22,23,477,24,25,26,27,227,28,478,29,479,480,30,31,481,482,483,228,229,484,230,231,232,396,485,486,233,32,487,488,489,33,34,35,490,210,211],"tindex":"229b3e29-13ac-11e5-b6d4-b51c75e855ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:490","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(null, null)"},"variableMap":{"h":"found"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    return null;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } \n} "},"status":-1},{"failures":[],"tindex":"229b3e2a-13ac-11e5-b6d4-6d15e3bd06cb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:146","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:146","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<E>.hasNext()) {\n    E = java.util.ListIterator<E>.next();\n}"},"status":-2},{"failures":[],"tindex":"229b3e2b-13ac-11e5-b6d4-335ff88bf6ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:720","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"to":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}