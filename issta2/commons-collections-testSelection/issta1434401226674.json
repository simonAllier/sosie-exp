{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":255,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":280,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":64,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":246,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":262,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":205,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":182,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":89,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":107,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":108,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":4,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":198,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":106,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":256,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":225,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":3,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":272,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":130,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":172,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":260,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":223,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":29,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":214,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":202,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":92,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":55,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":201,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":229,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":9,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":307,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFullIterator":188,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":266,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":120,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":118,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":35,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":183,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":247,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":276,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":277,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":70,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":220,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":63,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":271,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":171,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":138,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":264,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":87,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":259,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":228,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":88,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":132,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":47,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":51,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":278,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":20,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":197,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":269,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSerializeDeserializeThenCompare":305,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":124,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":200,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":215,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSimpleSerialization":19,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":83,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":274,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":267,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":37,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":40,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":219,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":68,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":80,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":193,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":94,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":234,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":7,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":81,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":33,"org.apache.commons.collections4.ListUtilsTest.testEquals":90,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":142,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":273,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":73,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":173,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":150,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":56,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":22,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":162,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":299,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":48,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":310,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":300,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":279,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":65,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":82,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":176,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":206,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":232,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":26,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":160,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":178,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":208,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":119,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":128,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":240,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":11,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":95,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":177,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":270,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":244,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":23,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintCasting":231,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":303,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":49,"org.apache.commons.collections4.CollectionUtilsTest.filterNullParameters":13,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":24,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":233,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":25,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":28,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":42,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":112,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":210,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":72,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":122,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":251,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":248,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":141,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":187,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":45,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":226,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":98,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":181,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":168,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":148,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":209,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":301,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":69,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":147,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":290,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":211,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":265,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":143,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":249,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":192,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":116,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":191,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":39,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":134,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":43,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":152,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":145,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":85,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":185,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":71,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":286,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":2,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":250,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":46,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":93,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":245,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":302,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":77,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":288,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":298,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":283,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":105,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":222,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":159,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":110,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":111,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":165,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":195,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":296,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":213,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":306,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":52,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":117,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":140,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":207,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectEqualsSelf":304,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":196,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":135,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":109,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":281,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":190,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":123,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":261,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":295,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":235,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":136,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":1,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":166,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":164,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":41,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":104,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":216,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":282,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":60,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":144,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":151,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":14,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":66,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":100,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":113,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":115,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":253,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":291,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":252,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":167,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":179,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":263,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":38,"org.apache.commons.collections4.MapUtilsTest.testPutAll_Map_array":180,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":139,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":169,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":32,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":268,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":103,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":285,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":297,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":125,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":131,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":158,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":157,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":156,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":153,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":121,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":154,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":30,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":58,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":155,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":230,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":18,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":97,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":62,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":36,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":189,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":96,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":194,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":146,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":78,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":254,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":54,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":163,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":292,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":293,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":59,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":294,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":61,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":175,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":126,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":309,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":27,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":10,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":161,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":227,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":174,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":308,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":79,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":224,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":257,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":242,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":284,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":101,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":6,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":212,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":21,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":53,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":137,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":114,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":15,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":50,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":199,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":204,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":0,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":34,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":184,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":76,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":102,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":129,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":258,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":75,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":133,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":203,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":217,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":289,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":170,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":243,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":186,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":237,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":31,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":287,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":275,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":99,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":236,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":149,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":238,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":241,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":239,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testEmptyQueueSerialization":16,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":127,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":221,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":218,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":74,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":91,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":86},"transformations":[{"failures":[],"tindex":"af5948f4-139f-11e5-9fbd-4bdff7822738","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"node":"root","right":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        return null;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[0],"tindex":"af597005-139f-11e5-9fbd-43ca9c2259e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:160","type":"CtAssignmentImpl","sourcecode":"int = ((int) - (int)) + (int)"},"variableMap":{"size":"count","maxElements":"count","start":"count","end":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:623","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[1,2,3,4,5,6],"tindex":"af5bb9f6-139f-11e5-9fbd-1fc4aa0b3d51","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:174","type":"CtIfImpl","sourcecode":"if ((int == 0) || (int == 0)) {\n    return null;\n} "},"variableMap":{"m":"start2","n":"start1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:212","type":"CtForImpl","sourcecode":"for (int int = int - int ; int <= (int + int) ; int += 2) {\n    final int int = (int + int) - int;\n    if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n        int[][int] = (int[][(int + 1)]) - 1;\n    } else {\n        int[][int] = int[][(int - 1)];\n    }\n    int int = (int[][int]) - 1;\n    int int = ((int - int) + int) - int;\n    while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = int--;\n        int--;\n    }\n    if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n        if ((int[][int]) <= (int[][(int + int)])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"af5bb9f7-139f-11e5-9fbd-7dfc6e5fde83","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtIfImpl","sourcecode":"if ((java.util.List<? extends E>.size()) > (java.util.List<? extends E>.size())) {\n    java.util.List<? extends E> = java.util.List<? extends E>;\n    java.util.List<? extends E> = java.util.List<? extends E>;\n} "},"status":0},{"failures":[7,8,9,10],"tindex":"af5bb9f8-139f-11e5-9fbd-a97a7dab6355","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[11,12],"tindex":"af5bb9f9-139f-11e5-9fbd-4f13abd658f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:266","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.SetUniqueList<E>.clear()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:321","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.contains(E)) {\n    continue;\n} "},"status":-1},{"failures":[],"tindex":"af5be10a-139f-11e5-9fbd-b304db56318d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtIfImpl","sourcecode":"if (java.util.Map<? super I, ? extends O> == null) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:380","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.MapTransformer.mapTransformer(java.util.Map<? super I, ? extends O>)"},"status":-2},{"failures":[13,14],"tindex":"af5be10b-139f-11e5-9fbd-05179bd2e387","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:219","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"canRemove":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:749","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<T> != null) && (org.apache.commons.collections4.Predicate<? super T> != null)) {\n    for (final java.util.Iterator<T> java.util.Iterator<T> = java.lang.Iterable<T>.iterator() ; java.util.Iterator<T>.hasNext() ; ) {\n        if (!(org.apache.commons.collections4.Predicate<? super T>.evaluate(java.util.Iterator<T>.next()))) {\n            java.util.Iterator<T>.remove();\n            boolean = true;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"af5be10c-139f-11e5-9fbd-4ff8134e5ba2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:706","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.ListOrderedMap<K, V>.decorated()"},"variableMap":{"parent":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:105","type":"CtAssignmentImpl","sourcecode":"java.util.Map<K, V> = ((java.util.Map<K, V>)(java.io.ObjectInputStream.readObject()))"},"status":-2},{"failures":[],"tindex":"af5be10d-139f-11e5-9fbd-09ab521d29b4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"bitIndex","lengthInBits":"bitIndex","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:211","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[15,16,17,18,19],"tindex":"af5be10e-139f-11e5-9fbd-757c9fba28f2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1005","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(null)"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:118","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-1},{"failures":[],"tindex":"af5c081f-139f-11e5-9fbd-074377fdb4d2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:414","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n    return false;\n} "},"variableMap":{"obj":"otherValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1168","type":"CtIfImpl","sourcecode":"if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"af5c0820-139f-11e5-9fbd-3b38b39b9f6c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:82","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    return ;\n} "},"variableMap":{"exhausted":"hasNext","slotFilled":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:137","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":"af5c0821-139f-11e5-9fbd-e1f35456a197","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:345","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValues<V>(this);\n} "},"variableMap":{"values":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"status":0},{"failures":[],"tindex":"af5c0822-139f-11e5-9fbd-a7875ff48ae3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:363","type":"CtForImpl","sourcecode":"for (int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n}"},"status":0},{"failures":[],"tindex":"af5c0823-139f-11e5-9fbd-c998b6e033f8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:352","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:110","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"af5c0824-139f-11e5-9fbd-e91a1f2ca33c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:95","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n    return false;\n} "},"status":0},{"failures":[20,21,22,23],"tindex":"af5c2f35-139f-11e5-9fbd-79a6b1f80366","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:247","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n        while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n            if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n                return true;\n            } \n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"af5c2f36-139f-11e5-9fbd-87bf3dca8522","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:325","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-2},{"failures":[24,25,26,27,28,29,30,31,32,33],"tindex":"af5c2f37-139f-11e5-9fbd-1945e4ef8292","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"code","index":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:480","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : org.apache.commons.collections4.map.CompositeMap<K, V>.entrySet()) {\n    int += java.util.Map.Entry<K, V>.hashCode();\n}"},"status":-1},{"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81],"tindex":"af5c2f38-139f-11e5-9fbd-4389a4844960","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"it2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[82,83,84,85,86,87,88,89],"tindex":"af5c5649-139f-11e5-9fbd-b7a67b772940","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.toString();\n} "},"variableMap":{"delegateMap":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1365","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return \"{}\";\n} "},"status":-1},{"failures":[],"tindex":"af5c564a-139f-11e5-9fbd-5d38464757cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.CloneTransformer:66","type":"CtIfImpl","sourcecode":"if (T == null) {\n    return null;\n} "},"status":0},{"failures":[90],"tindex":"af5c564b-139f-11e5-9fbd-5b2843553a5d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:411","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Collection<?>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"variableMap":{"coll2":"list2","coll1":"list2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == java.util.Collection<?>) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"af5c564c-139f-11e5-9fbd-47a4f24c64a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"bitIndex","newCapacity":"bitIndex","proposedCapacity":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1169","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[91,92,93,94,95,96,97,98,99],"tindex":"af5c564d-139f-11e5-9fbd-9b6da180422c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"total","index":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:461","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().values()) {\n    int += org.apache.commons.collections4.CollectionUtils.size(java.lang.Object);\n}"},"status":-1},{"failures":[],"tindex":"af5c564e-139f-11e5-9fbd-4bda09b62b89","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:526","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY","newNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:520","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[],"tindex":"af5c7d5f-139f-11e5-9fbd-115f2e68874a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:180","type":"CtLocalVariableImpl","sourcecode":"final int int = ((int % 2) == 0 ? int : int + 1) / 2"},"variableMap":{"sum":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:222","type":"CtLocalVariableImpl","sourcecode":"int int = (int[][int]) - 1"},"status":-2},{"failures":[],"tindex":"af5c7d60-139f-11e5-9fbd-3b49f7fd5139","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"cnt","currentIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:177","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        int += org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int;\n    }\n}"},"status":-2},{"failures":[100,101],"tindex":"af5c7d61-139f-11e5-9fbd-f5b474ca2d33","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:230","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.queue.CircularFifoQueue<E>.isAtFullCapacity()) {\n    org.apache.commons.collections4.queue.CircularFifoQueue<E>.remove();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:288","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.queue.CircularFifoQueue<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"queue is empty\");\n} "},"status":-1},{"failures":[],"tindex":"af5c7d62-139f-11e5-9fbd-bb8aecb7f7fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:380","type":"CtWhileImpl","sourcecode":"while (java.lang.ref.Reference<?> != null) {\n    org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purge(java.lang.ref.Reference<?>);\n    java.lang.ref.Reference<?> = java.lang.ref.ReferenceQueue<java.lang.Object>.poll();\n}"},"status":-2},{"failures":[],"tindex":"af5c7d63-139f-11e5-9fbd-832b13185918","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.PredicatedSortedMap:97","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().firstKey()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedSortedMap:101","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().lastKey()"},"status":-2},{"failures":[],"tindex":"af5c7d64-139f-11e5-9fbd-af8d752ec350","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    return false;\n} "},"variableMap":{"mut":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:224","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":0},{"failures":[],"tindex":"af5c7d65-139f-11e5-9fbd-0fcb2077fc24","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:104","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> : java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>>) {\n    org.apache.commons.collections4.Predicate<T>[][int] = org.apache.commons.collections4.Predicate<T>;\n    if ((org.apache.commons.collections4.Predicate<T>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + int) + \" was null\"));\n    } \n    int++;\n}"},"status":0},{"failures":[],"tindex":"af5ca476-139f-11e5-9fbd-19914b32ab56","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:519","type":"CtUnaryOperatorImpl","sourcecode":"+1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:289","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-2},{"failures":[],"tindex":"af5ca477-139f-11e5-9fbd-bd031e02994a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2062","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(java.lang.Object)"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:149","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return V;\n        } \n    case 2 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return V;\n        } \n    case 1 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return V;\n        } \n}"},"status":-2},{"failures":[102,103],"tindex":"af5ca478-139f-11e5-9fbd-ed68bf3a3220","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:97","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"variableMap":{"exhausted":"match"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OnePredicate:96","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.Predicate<? super T> org.apache.commons.collections4.Predicate<? super T> : org.apache.commons.collections4.Predicate<? super T>[]) {\n    if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n        if (boolean) {\n            return false;\n        } \n        boolean = true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"af5ca479-139f-11e5-9fbd-9b1433ae2d7a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"numberOfNodesToCache"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:219","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    org.apache.commons.collections4.list.NodeCachingLinkedList<E>.addNodeToCache(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-2},{"failures":[104,105,106,107,108,109,110,111,112,113],"tindex":"af5ca47a-139f-11e5-9fbd-bb00bd89d598","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:863","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry) == false) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:198","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(java.lang.Object);\n} "},"status":-1},{"failures":[],"tindex":"af5ca47b-139f-11e5-9fbd-c3c93f78e196","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:580","type":"CtForEachImpl","sourcecode":"for (java.lang.Character java.lang.Character : java.util.List<java.lang.Character>) {\n    java.lang.StringBuilder.append(java.lang.Character);\n}"},"status":-2},{"failures":[],"tindex":"af5ca47c-139f-11e5-9fbd-191299a8a85c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:138","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key3","next":"entry","entry":"entry","key2":"key1","hashCode":"hashCode","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:269","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2},{"failures":[114,33],"tindex":"af5ca47d-139f-11e5-9fbd-654746913def","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:141","type":"CtReturnImpl","sourcecode":"return java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)"},"variableMap":{"a":"value","b":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:225","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsValue(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[115,116,117,118,119,120,121,122,123,124,125,126],"tindex":"af5ccb8e-139f-11e5-9fbd-ab37bc0b0046","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:97","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"variableMap":{"exhausted":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:176","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"af5ccb8f-139f-11e5-9fbd-49f5b5cd8ea3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:298","type":"CtInvocationImpl","sourcecode":"java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear()"},"status":-2},{"failures":[],"tindex":"af5ccb90-139f-11e5-9fbd-bb416c873dc2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.MapTransformer:51","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:80","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.ChainedTransformer<T>(false , org.apache.commons.collections4.Transformer<T, T>[])"},"status":-2},{"failures":[],"tindex":"af5ccb91-139f-11e5-9fbd-cde5f24fb491","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:137","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    E[][int] = ((E)(java.io.ObjectInputStream.readObject()));\n}"},"variableMap":{"size":"total","in":"object","elements":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int++;\n        java.util.Iterator<?>.next();\n    }\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int++;\n        java.util.Enumeration<?>.nextElement();\n    }\n} else {\n    try {\n        int = java.lang.reflect.Array.getLength(java.lang.Object);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172],"tindex":"af5ccb92-139f-11e5-9fbd-e98ece10eba9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:202","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"af5ea053-139f-11e5-9fbd-3dbace68839f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:242","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.ListOrderedSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n    if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n    } \n}"},"status":-2},{"failures":[173,174,175,176,177,178,85,112,113,179],"tindex":"af5ec764-139f-11e5-9fbd-6d3d6f2da621","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.size();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"status":-1},{"failures":[180],"tindex":"af5ec765-139f-11e5-9fbd-cdacaf9956fb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1157","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(java.lang.Object));\n    java.util.Map<K, V>.put(org.apache.commons.collections4.KeyValue<K, V>.getKey(), org.apache.commons.collections4.KeyValue<K, V>.getValue());\n}"},"status":-1},{"failures":[],"tindex":"af5ec766-139f-11e5-9fbd-6f70d3cb7d0d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1036","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.init()"},"variableMap":{"this":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:172","type":"CtIfImpl","sourcecode":"if (java.util.Map<V, K>.containsKey(V)) {\n    java.util.Map<K, V>.remove(java.util.Map<V, K>.get(V));\n} "},"status":-2},{"failures":[181,182],"tindex":"af5ec767-139f-11e5-9fbd-99673ab97928","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1036","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.init()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:380","type":"CtWhileImpl","sourcecode":"while (java.lang.ref.Reference<?> != null) {\n    org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purge(java.lang.ref.Reference<?>);\n    java.lang.ref.Reference<?> = java.lang.ref.ReferenceQueue<java.lang.Object>.poll();\n}"},"status":-1},{"failures":[],"tindex":"af5ec768-139f-11e5-9fbd-f701723d2cf6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:127","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>(this , int)"},"variableMap":{"fromIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.PredicatedList:129","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.PredicatedList.PredicatedListIterator(org.apache.commons.collections4.list.PredicatedList<E>.decorated().listIterator(int))"},"status":-2},{"failures":[183,184,185,186,187,188],"tindex":"af5ec769-139f-11e5-9fbd-af87effeb490","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"chainExhausted"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:96","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> != null) {\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} else {\n    boolean = true;\n}"},"status":-1},{"failures":[],"tindex":"af5ec76a-139f-11e5-9fbd-935f802c8da8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"variableMap":{"lastItemIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:211","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"af5ec76b-139f-11e5-9fbd-6172ff3d2a8a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AnyPredicate:81","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 1) {\n    return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.Predicate<? super T>[][0]));\n} "},"variableMap":{"length":"length","preds":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:54","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n} "},"status":-2},{"failures":[],"tindex":"af5eee7c-139f-11e5-9fbd-775b13e3e500","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:414","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:195","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"af5eee7d-139f-11e5-9fbd-a532a7385b49","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:827","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"node":"rightChild","rightChild":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[189,190,191,25,26,27,28,29,30,31,32,33],"tindex":"af5eee7e-139f-11e5-9fbd-37430b81afcb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:170","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.collection.CompositeCollection<E>.iterator() ; java.util.Iterator<E>.hasNext() ; int++) {\n    java.lang.Object[][int] = java.util.Iterator<E>.next();\n}"},"status":-1},{"failures":[],"tindex":"af5eee7f-139f-11e5-9fbd-0bdc3532f797","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:146","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:282","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.contains(java.util.Iterator<E>.next())) == false) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[192,193],"tindex":"af5eee80-139f-11e5-9fbd-25eaff1907e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:280","type":"CtInvocationImpl","sourcecode":"java.util.Set<E>.clear()"},"variableMap":{"set":"set1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:368","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.CompositeSet<E>.addComposited(java.util.Set<E>)"},"status":-1},{"failures":[1,2,3,4,5,6],"tindex":"af5eee81-139f-11e5-9fbd-212f50e249af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:186","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int += 2) {\n    final int int = int + int;\n    if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n        int[][int] = int[][(int + 1)];\n    } else {\n        int[][int] = (int[][(int - 1)]) + 1;\n    }\n    int int = int[][int];\n    int int = ((int - int) + int) - int;\n    while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = ++int;\n        ++int;\n    }\n    if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n        if ((int[][(int - int)]) <= (int[][int])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"af5eee82-139f-11e5-9fbd-dbca17821797","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends K, ? extends V> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>));\n    return java.util.Map<K, V>;\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends K, ? extends V>.isEmpty()) {\n    return ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>));\n} "},"status":0},{"failures":[],"tindex":"af5eee83-139f-11e5-9fbd-b57017b0ab9d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1159","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) != null"},"variableMap":{"next":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:252","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n            return true;\n        } \n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"af5eee84-139f-11e5-9fbd-edcf4ed6077b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:319","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntrySet<K, V>(this);\n} "},"status":-2},{"failures":[],"tindex":"af5f1595-139f-11e5-9fbd-4dd0d93d6a89","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:136","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.PeekingIterator<E>.(hasNext())) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[194,195,196,197,198,199,200,201,202,203],"tindex":"af5f1596-139f-11e5-9fbd-efc347de24b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:175","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"size":"leastIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:368","type":"CtIfImpl","sourcecode":"if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n    E = E;\n    int = int;\n} "},"status":-1},{"failures":[],"tindex":"af5f1597-139f-11e5-9fbd-c5661f5745ba","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1046","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"deletedNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:980","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":0},{"failures":[193,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,25,26,225,27,28,226,29,30,227,31,32,33,228,229,230],"tindex":"af5f1598-139f-11e5-9fbd-7daa51a3fb3a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:97","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    int += java.util.Set<E>.size();\n}"},"status":-1},{"failures":[],"tindex":"af5f1599-139f-11e5-9fbd-8dcd50cf7084","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"rval":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:499","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[231,232,233,234,235,236,237,238,239,240,241,242,243],"tindex":"af5f159a-139f-11e5-9fbd-bddab0a7bce2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"lineageIndex","index":"lineageIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1006","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    java.io.PrintStream.print(java.lang.Object);\n} else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n    java.io.PrintStream.print(\"(this Map)\");\n} else {\n    java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n}"},"status":-1},{"failures":[244,245,246,247,248,249,250,251,252,253,87,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,89,272,273,274,275,276,277,278,279],"tindex":"af5f3cab-139f-11e5-9fbd-3fbd01af7687","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet<K>(this);\n} "},"status":-1},{"failures":[],"tindex":"af5f3cac-139f-11e5-9fbd-cf8802f93608","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1056","type":"CtReturnImpl","sourcecode":"return (this.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) == org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength"},"variableMap":{"keyType":"key","type":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:229","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"af604e1d-139f-11e5-9fbd-efe8f8b6d116","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:965","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"y","replacement":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1184","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"af604e1e-139f-11e5-9fbd-133007c2ca47","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1016","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1322","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if (java.lang.Object == null) {\n        if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n            return false;\n        } \n    } else {\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"af60752f-139f-11e5-9fbd-71e30d8dac08","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1089","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.map.Flat3Map<K, V>.mapIterator() ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<?, ?>.next());\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<?, ?>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"af607530-139f-11e5-9fbd-076ee593a077","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"variableMap":{"parent":"left","current":"current","right":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:667","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[280,281,282,283,21,284,285,22,286,287,288],"tindex":"af607531-139f-11e5-9fbd-792ebbb26976","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:352","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:226","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            return true;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-1},{"failures":[],"tindex":"af607532-139f-11e5-9fbd-cffc913e7b75","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:805","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[145,289],"tindex":"af607533-139f-11e5-9fbd-8361b69066c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:149","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n}"},"status":-1},{"failures":[],"tindex":"af607534-139f-11e5-9fbd-13bcdda532f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"af607535-139f-11e5-9fbd-751271892c74","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(E);\n    int += int;\n    if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n        return true;\n    } \n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int += int;\n    return false;\n} "},"status":0},{"failures":[290,291],"tindex":"af607536-139f-11e5-9fbd-ebd57e5966d5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:995","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"yFormerRightChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1137","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        if (boolean) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"af607537-139f-11e5-9fbd-15019211f018","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"endIndex2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:88","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":0},{"failures":[],"tindex":"af607538-139f-11e5-9fbd-55196bd735fd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:123","type":"CtWhileImpl","sourcecode":"while ((int) > (int)) {\n    org.apache.commons.collections4.list.NodeCachingLinkedList<E>.getNodeFromCache();\n}"},"status":0},{"failures":[],"tindex":"af609c49-139f-11e5-9fbd-c5d29f0338cc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1204","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"left":"predecessor","start":"node","this":"this","predecessor":"predecessor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1242","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-2},{"failures":[115,116,117,118,119,120,121,122,123,124,125,126],"tindex":"af609c4a-139f-11e5-9fbd-01a923cca011","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super C> == null) {\n    return false;\n} "},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:174","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final E E = java.util.Iterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"af609c4b-139f-11e5-9fbd-8d62e30d9fa6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:245","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsValue(java.lang.Object);\n} "},"variableMap":{"delegateMap":"delegateMap","value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:198","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(java.lang.Object);\n} "},"status":0},{"failures":[],"tindex":"af609c4c-139f-11e5-9fbd-4ff5f001f2c1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"indexOfLargestMobileInteger","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:115","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int[].int) ; int++) {\n    if ((((boolean[][int]) && (int < ((int[].int) - 1))) && ((int[][int]) > (int[][(int + 1)]))) || (((!(boolean[][int])) && (int > 0)) && ((int[][int]) > (int[][(int - 1)])))) {\n        if ((int[][int]) > int) {\n            int = int[][int];\n            int = int;\n        } \n    } \n}"},"status":-2},{"failures":[],"tindex":"af609c4d-139f-11e5-9fbd-071fc9be0723","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:663","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    break;\n} "},"variableMap":{"current":"right","previous":"entry","left":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:202","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"af609c4e-139f-11e5-9fbd-b994e8e58ff1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:784","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    return int;\n} "},"variableMap":{"integerObject":"value","defaultValue":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:145","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n    if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n        return int;\n    } \n    int--;\n}"},"status":0},{"failures":[206],"tindex":"af609c4f-139f-11e5-9fbd-5136510964bc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:175","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"size":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:191","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    java.lang.Object[][int++] = E;\n}"},"status":-1},{"failures":[292,293,294,295,296,297,298,299,300,301,302,303],"tindex":"af609c50-139f-11e5-9fbd-77197415207f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:106","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"hasNext","beforeFirst":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:163","type":"CtIfImpl","sourcecode":"if (E instanceof java.util.Iterator) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)));\n} else {\n    E = E;\n    boolean = true;\n}"},"status":-1},{"failures":[91,92,93,94,95,96,97,98,99],"tindex":"af609c51-139f-11e5-9fbd-1fe0b201c0d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:461","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().values()) {\n    int += org.apache.commons.collections4.CollectionUtils.size(java.lang.Object);\n}"},"status":-1},{"failures":[],"tindex":"af609c52-139f-11e5-9fbd-4bb7c253d848","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[304,305],"tindex":"af609c53-139f-11e5-9fbd-e3d2e1abb2fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:590","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:115","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"status":-1},{"failures":[306,307,308,309,310],"tindex":"af60c364-139f-11e5-9fbd-e5dab35b0466","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:509","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":97,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}