{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":668,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":507,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":299,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":835,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":216,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":7,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":98,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":174,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":737,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":166,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":119,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":376,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":288,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":683,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFullIterator":813,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":289,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":248,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":138,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":634,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":717,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":210,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":66,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":424,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":644,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":481,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":355,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":242,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":631,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":384,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":652,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":679,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":624,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":338,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":535,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":621,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":454,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":521,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":855,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":209,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":456,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":705,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":100,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":614,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":78,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":308,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":845,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":54,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":823,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":256,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":370,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":571,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":522,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":803,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":565,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":433,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":538,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":691,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":230,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":779,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":23,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":111,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":684,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":334,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":217,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":403,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":603,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":638,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":532,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":715,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":257,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":6,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":460,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":595,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":669,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":545,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":819,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":438,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":642,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":346,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":838,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":237,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":414,"org.apache.commons.collections4.TransformerUtilsTest.testCloneTransformer":757,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":160,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":711,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":361,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":505,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":169,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":295,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":201,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":106,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":833,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":497,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":792,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":837,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":50,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":817,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":756,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":306,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":164,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":584,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":525,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":517,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":543,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":38,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":136,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":451,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":856,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":526,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":662,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":479,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":702,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":381,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":341,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":844,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":593,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":600,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":30,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":24,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":400,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":33,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":1,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":173,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":466,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":117,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":618,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":186,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":47,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":163,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":607,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":485,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":739,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":658,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":690,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":120,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":586,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":206,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":493,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":441,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":178,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":61,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":345,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":270,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":450,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":74,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":373,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":240,"org.apache.commons.collections4.comparators.ComparatorChainTest.testNoopComparatorChain":159,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":530,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":26,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":128,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":589,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":236,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":596,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":712,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":296,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":504,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":637,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":781,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":293,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":626,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":410,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":406,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":151,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":836,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":84,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":409,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":674,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":434,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":827,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":491,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":655,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":429,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":653,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":681,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":290,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":94,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":246,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":676,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":818,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":68,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":716,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":347,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":464,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":391,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":524,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":352,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":207,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":516,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":612,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":713,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":362,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":91,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":801,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":129,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":815,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":208,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":455,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":671,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":843,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":187,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":776,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":65,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":463,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":52,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":386,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":87,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":22,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":227,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":235,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":554,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":204,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":561,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testEmptyIterator":806,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":335,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":602,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":484,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":107,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":416,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":769,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":179,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":747,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":474,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":506,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":790,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":579,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":329,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":149,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":766,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":768,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":112,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":475,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":777,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":351,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":569,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":103,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll":156,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":610,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":43,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":574,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":10,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":131,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":500,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":139,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":124,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":269,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":303,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":378,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":5,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":494,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":321,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":388,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":609,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":241,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":728,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":358,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":666,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":510,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":31,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":643,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":567,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":318,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":640,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":37,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":791,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":300,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":57,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":196,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":198,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":816,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":154,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":761,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":789,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":280,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueCompatibility":731,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":276,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":60,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":200,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":432,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":576,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":678,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":19,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":402,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":404,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":735,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":627,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":822,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":727,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":726,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":258,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":723,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":722,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":725,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":724,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":719,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":721,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":720,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":480,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":88,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":858,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":641,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":755,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":810,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":147,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":29,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":188,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":537,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":733,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":667,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":34,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":275,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":71,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":369,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":490,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":657,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":125,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":286,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":70,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":442,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":283,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":443,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":353,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":661,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":405,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":387,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":64,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":371,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":648,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":829,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":212,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":251,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":651,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":650,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":448,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":649,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":820,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":587,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":620,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":67,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":63,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":137,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":527,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":785,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":356,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":659,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":709,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":775,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":469,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":368,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":367,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":366,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":512,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":184,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":157,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":418,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":319,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":795,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":89,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":774,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":153,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":56,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":853,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":274,"org.apache.commons.collections4.map.LRUMapTest.testLRU":69,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":511,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":264,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":395,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":439,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":238,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":449,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":714,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":11,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":162,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":249,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":148,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":260,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":544,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":202,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":161,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":563,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":133,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":489,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":518,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":462,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":496,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":310,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":677,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":4,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":566,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":189,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":665,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":811,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":738,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":536,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":646,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":636,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":585,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":82,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":36,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":211,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":539,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testDecorateFactory":763,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":743,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":132,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":85,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":102,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":741,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":687,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":77,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":49,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":740,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":17,"org.apache.commons.collections4.comparators.ComparatorChainTest.testListComparatorChain":158,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":770,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":14,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":765,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":231,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":349,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":750,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":243,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":182,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":488,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":694,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":32,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":141,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":486,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":298,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":689,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":92,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":150,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":96,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":155,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":97,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":278,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":282,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":110,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":254,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":330,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":118,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":205,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":514,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":453,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":27,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":509,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":411,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":152,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":116,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":459,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":18,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":108,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":134,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":615,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":546,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":556,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":420,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":272,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":632,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":598,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":467,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":718,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":279,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":419,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":697,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":698,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":696,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":426,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":804,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":9,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":325,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":826,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":840,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":515,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":253,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":590,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":458,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":808,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":315,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":852,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":95,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":223,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":328,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":233,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":529,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":675,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":185,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":436,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":771,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":617,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":234,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":457,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":2,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":583,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":126,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":393,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":444,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":673,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":316,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":372,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":559,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":199,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":218,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":663,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":440,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":588,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":339,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":333,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":754,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":324,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":327,"org.apache.commons.collections4.map.HashedMapTest.testEqualsNull":749,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":190,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":483,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":452,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":672,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":176,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":825,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":360,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":478,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEqualsNull":751,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":59,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":277,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":437,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":476,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":291,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":312,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":597,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":20,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":560,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":605,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":389,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":21,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":695,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":787,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":465,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":513,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":800,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":830,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":857,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":688,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":203,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":191,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":692,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":783,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":542,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":570,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":680,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":606,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":446,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":145,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":572,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":336,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":354,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":396,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":142,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":12,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":46,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":273,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":413,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":428,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":401,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":385,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":786,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":664,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":701,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":700,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":699,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":519,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":745,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":470,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":105,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":62,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":580,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":109,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":732,"org.apache.commons.collections4.ListUtilsTest.testSubtract":383,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicBad":758,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":487,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":708,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":461,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":794,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":528,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":773,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":268,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":221,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":821,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":550,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":686,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":285,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":558,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":592,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":219,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":220,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":533,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":435,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":613,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":232,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":407,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":399,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":591,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":498,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":762,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":314,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":28,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":213,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":175,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":255,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":793,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":281,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":729,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":215,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":267,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":380,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":604,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":814,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":523,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":398,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":629,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":374,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":704,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":259,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":265,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":309,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":104,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":710,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":748,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":195,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":75,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":113,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":379,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":135,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":520,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":685,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":165,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":8,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":114,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":445,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":45,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":305,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":431,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":534,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":581,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":670,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":266,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":809,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":302,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":348,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":101,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":304,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":35,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":99,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":375,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":645,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":51,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":854,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":578,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":788,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":326,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":744,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":752,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":143,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":244,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":397,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":472,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":377,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":73,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":252,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":849,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":850,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":342,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":228,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":772,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":42,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":192,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":317,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":123,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":707,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":115,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":177,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":390,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":417,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":421,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":44,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":616,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":531,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":499,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":423,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":13,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":250,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":90,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":541,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":601,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":622,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":58,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":477,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":495,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":468,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":229,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":633,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":307,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":502,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":0,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":292,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":549,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":564,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":408,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":332,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":575,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":812,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":214,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":599,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":660,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":121,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":422,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":501,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":805,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":331,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":625,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":608,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":778,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":839,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":447,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":611,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":736,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":359,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":16,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":81,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":582,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":551,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":271,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":171,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":782,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":573,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":263,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":742,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":767,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":415,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":568,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":197,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":122,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":39,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":807,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":3,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":802,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":553,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":706,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":382,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":261,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":294,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":427,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":746,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":759,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":635,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":780,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":654,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":357,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":647,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":508,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":482,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":832,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":394,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":628,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":799,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":224,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":226,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":225,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":473,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":72,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":340,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":851,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":834,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":181,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":412,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":577,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":127,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":656,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":540,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":824,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":301,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":730,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":703,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":170,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":753,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":760,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":619,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":831,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":425,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":146,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":350,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":847,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":848,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":144,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":846,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":337,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":555,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":363,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":364,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":245,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":247,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":365,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":693,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":492,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":784,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":183,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":562,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":842,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":471,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":313,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":172,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":796,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":828,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":797,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":798,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":297,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":682,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":503,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":80,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":630,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":623,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":552,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":41,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":130,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":55,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":53,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":734,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":841,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":168,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":322,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":284,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":222,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":343,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":193,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":639,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":194,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":167,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":311,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":764,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":392,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":594,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":262,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":548,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":239,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":547,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":93,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":25,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":320,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":287,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":323,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":430,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":344,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":140,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":557,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":180,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":79},"transformations":[{"failures":[],"tindex":"0121bd3a-13b3-11e5-bc6c-0726ca618bf7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:224","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E>.isEmpty()) {\n    return false;\n} "},"variableMap":{"c":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    boolean boolean = false;\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n        boolean = boolean || boolean;\n    }\n    return boolean;\n} else {\n    return org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated().removeAll(null);\n}"},"status":-2},{"failures":[],"tindex":"0121e44b-13b3-11e5-bc6c-b3c2327105fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1766","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.ViewIterator.navigateNext().getValue()"},"variableMap":{"this":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:149","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return V;\n        } \n    case 2 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return V;\n        } \n    case 1 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return V;\n        } \n}"},"status":-2},{"failures":[],"tindex":"0121e44c-13b3-11e5-bc6c-bbb54ec2bbec","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n} "},"status":-2},{"failures":[0],"tindex":"0121e44d-13b3-11e5-bc6c-a9832e01da11","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.PredicatedList:118","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E);\n}"},"status":-1},{"failures":[],"tindex":"0121e44e-13b3-11e5-bc6c-0d2c31ae1463","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:363","type":"CtForImpl","sourcecode":"for (int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n}"},"status":0},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116],"tindex":"0121e44f-13b3-11e5-bc6c-67dc34946414","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"status":-1},{"failures":[],"tindex":"01220b60-13b3-11e5-bc6c-3d9ef647350f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:267","type":"CtLocalVariableImpl","sourcecode":"V V = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:345","type":"CtLocalVariableImpl","sourcecode":"final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()"},"status":-2},{"failures":[],"tindex":"01220b61-13b3-11e5-bc6c-67372157e6e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:295","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<E>) == null) {\n    java.util.ArrayList<E> = new java.util.ArrayList<E>(java.util.ArrayList<java.util.Iterator<? extends E>>.size());\n    java.util.BitSet = new java.util.BitSet(java.util.ArrayList<java.util.Iterator<? extends E>>.size());\n    for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n        java.util.ArrayList<E>.add(null);\n        java.util.BitSet.clear(int);\n    }\n} "},"status":-2},{"failures":[117],"tindex":"01220b62-13b3-11e5-bc6c-d7747b438f35","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"status":-1},{"failures":[],"tindex":"01220b63-13b3-11e5-bc6c-b93351927f27","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n    return true;\n} "},"variableMap":{"entry":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:244","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"01220b64-13b3-11e5-bc6c-9130277e6813","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149],"tindex":"01223275-13b3-11e5-bc6c-413b8a33fdfa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"i","listSize":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:438","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    java.lang.Object[][int++] = E;\n}"},"status":-1},{"failures":[],"tindex":"01223276-13b3-11e5-bc6c-ffb704184a34","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:502","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.entrySet()) {\n    java.io.ObjectOutputStream.writeObject(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey());\n    java.io.ObjectOutputStream.writeInt(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue().int);\n}"},"status":-2},{"failures":[150],"tindex":"01223277-13b3-11e5-bc6c-ebabde654021","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1420","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    K K = ((K)(java.io.ObjectInputStream.readObject()));\n    V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.put(K, V);\n}"},"status":-1},{"failures":[151,152,153,154,155],"tindex":"01223278-13b3-11e5-bc6c-eb0c61e76993","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:88","type":"CtAssignmentImpl","sourcecode":"int[][(int - 1)] = int"},"status":-1},{"failures":[],"tindex":"01223279-13b3-11e5-bc6c-5f0e1c0206dc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s before the start of the array. \"));\n} "},"status":-2},{"failures":[],"tindex":"0122327a-13b3-11e5-bc6c-f77f1ce4ac7f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractSerializableListDecorator:68","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"variableMap":{"in":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:219","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V>.isEmpty()) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.remove(java.lang.Object);\n} "},"status":-2},{"failures":[156],"tindex":"0122598b-13b3-11e5-bc6c-7bd1178e88c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:129","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"exhausted":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:297","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    boolean |= java.util.Collection<E>.removeAll(java.util.Collection<?>);\n}"},"status":-1},{"failures":[],"tindex":"0122598c-13b3-11e5-bc6c-b19e9ab01a1d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.UnmodifiableList:58","type":"CtReturnImpl","sourcecode":"return java.util.List<E>"},"variableMap":{"tmpList":"sub"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.UnmodifiableList:145","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.UnmodifiableList<E>(java.util.List<E>)"},"status":-2},{"failures":[],"tindex":"0122598d-13b3-11e5-bc6c-37f088cef534","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:376","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:123","type":"CtLocalVariableImpl","sourcecode":"final int int = java.util.Map<E, ? super V>.size()"},"status":-2},{"failures":[],"tindex":"0124ca8e-13b3-11e5-bc6c-7d998546033b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:425","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n        while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n            int += org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.hashCode();\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        }\n    }\n}"},"status":-2},{"failures":[157,158,159,160,161,162],"tindex":"0124ca8f-13b3-11e5-bc6c-4988f914e1af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:278","type":"CtIfImpl","sourcecode":"if (int != 0) {\n    if ((java.util.BitSet.get(int)) == true) {\n        if (int > 0) {\n            int = -1;\n        } else {\n            int = 1;\n        }\n    } \n    return int;\n} "},"status":-1},{"failures":[],"tindex":"0124f0a0-13b3-11e5-bc6c-cb5c164755f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:301","type":"CtTryImpl","sourcecode":"try {\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n    while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n    (int)++;\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.removeEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.reuseEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.addEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int);\n} catch (final java.lang.NullPointerException ex) {\n    throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n}"},"status":-2},{"failures":[163,164,165,166,167,168],"tindex":"0124f0a1-13b3-11e5-bc6c-61219517257a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:231","type":"CtIfImpl","sourcecode":"if ((int[][int]) <= (int[][(int + int)])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n} "},"status":-1},{"failures":[169,170,171,172,173,174,175,176,177,178],"tindex":"0124f0a2-13b3-11e5-bc6c-5990d79e89ca","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:967","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"x","replacement":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1184","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"status":-1},{"failures":[179,180],"tindex":"0124f0a3-13b3-11e5-bc6c-a341be2ca984","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:519","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.checkCapacity()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1232","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.mapIterator() ; org.apache.commons.collections4.MapIterator<K, V>.hasNext() ; ) {\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<K, V>.next());\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<K, V>.getValue());\n}"},"status":-1},{"failures":[181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253],"tindex":"0124f0a4-13b3-11e5-bc6c-6f04b492eb10","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:547","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    throw new java.util.ConcurrentModificationException(\"Cursor closed\");\n} "},"variableMap":{"valid":"isLocked"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"0124f0a5-13b3-11e5-bc6c-bd45529254ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:239","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.Object>.size()) == 0) {\n    org.apache.commons.collections4.set.ListOrderedSet<E>.clear();\n} else {\n    for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.ListOrderedSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n        if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n        } \n    }\n}"},"status":-2},{"failures":[254,255,256,257],"tindex":"0124f0a6-13b3-11e5-bc6c-29f66cfe93ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:111","type":"CtReturnImpl","sourcecode":"return (this.int) < (this.int)"},"variableMap":{"endIndex":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:248","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n            return true;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-1},{"failures":[258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317],"tindex":"012517b7-13b3-11e5-bc6c-cf5258a5cbb2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:221","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, E);\n}"},"status":-1},{"failures":[],"tindex":"012517b8-13b3-11e5-bc6c-8f7aa0d07c5a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:488","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>) == null) {\n    java.util.Set<E> = org.apache.commons.collections4.set.UnmodifiableSet.<E>unmodifiableSet(java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet());\n} "},"status":-2},{"failures":[318,319,320,321,322,323,179,324,325,326,327,328,329,330,331,180,332,333,2,3,5,6,7,9,10,11,12,334,335,20,21,23,24,25,27,28,29,30,336,337,338,37,38,40,41,42,44,45,46,47,339,340,341,54,55,56,57,58,59,60,61,62,342,343,344,345,346,72,73,75,76,77,79,80,81,82,347,90,91,93,94,95,97,98,99,100,348,106,107,109,110,111,113,114,115,116],"tindex":"012517b9-13b3-11e5-bc6c-4b2b70d199ba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:225","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"012517ba-13b3-11e5-bc6c-4555881db982","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:130","type":"CtIfImpl","sourcecode":"if (K == null) {\n    return false;\n} "},"status":-2},{"failures":[349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376],"tindex":"012517bb-13b3-11e5-bc6c-398b6adc8cc2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:762","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,118,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,119,120,413,414,415,416,417,418,419,420,421,422,423,424,121,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,122,123,124,441,442,443,444,445,446,447,448,449,450,451,452,125,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,127,468,469,128,470,471,472,473,474,475,476,477,478,129,479,480,130,481,482,483,484,485,486,487,488,489,490,491,492,131,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,132,133,509,510,511,512,513,514,515,516,517,518,519,520,521,134,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,136,537,538,137,539,540,541,542,543,544,545,546,547,138,548,549,550,551,552,553,140,554,555,556,557,558,559,560,561,141,142,562,563,143,564,565,566,567,568,569,570,571,572,573,574,575,144,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,146,591,592,593,594,595,596,597,598,599,600,601,602,603,604,147,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,148,149],"tindex":"012517bc-13b3-11e5-bc6c-af5493d3742c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(E);\n    int += int;\n    if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n        return true;\n    } \n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int += int;\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"01253ecd-13b3-11e5-bc6c-e59e7963f351","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:862","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> : java.util.Map<? extends org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, ? extends V>.keySet()) {\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.checkKey(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>);\n}"},"status":-2},{"failures":[],"tindex":"01253ece-13b3-11e5-bc6c-ed2b3a71a374","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:146","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:590","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(java.lang.Object);\n    java.lang.StringBuilder.append(int);\n    java.lang.StringBuilder.append(':');\n    java.lang.StringBuilder.append(java.lang.Object);\n    if (java.util.Iterator<E>.hasNext()) {\n        java.lang.StringBuilder.append(',');\n    } \n}"},"status":-2},{"failures":[621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,150,169,690,691,692,170,693,694,695,696,697,698,699,700,701,171,702,703,172,173,704,705,174,175,176,177,178],"tindex":"01253ecf-13b3-11e5-bc6c-5d48e91b831d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1301","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"status":-1},{"failures":[391,389,706,419,417,707,447,445,466,708,709,487,485,710,516,514,535,711,712,713,714,570,568,589,715,591,599,597,716],"tindex":"01253ed0-13b3-11e5-bc6c-4d2d6e5674bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:288","type":"CtInvocationImpl","sourcecode":"java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.clear()"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:488","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>) == null) {\n    java.util.Set<E> = org.apache.commons.collections4.set.UnmodifiableSet.<E>unmodifiableSet(java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet());\n} "},"status":-1},{"failures":[391,419,447,466,487,516,535,570,589,599],"tindex":"01253ed1-13b3-11e5-bc6c-85343d5cb9f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"otherCount","index":"otherCount","beyond":"myCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:384","type":"CtIfImpl","sourcecode":"if ((1 <= int) && (int <= int)) {\n    org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n} else {\n    org.apache.commons.collections4.Bag<E>.add(E, int);\n}"},"status":-1},{"failures":[],"tindex":"01253ed2-13b3-11e5-bc6c-e938f6777435","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:159","type":"CtIfImpl","sourcecode":"if ((int) < (int)) {\n    int = ((int) - (int)) + (int);\n} else if ((int) == (int)) {\n    int = boolean ? int : 0;\n} else {\n    int = (int) - (int);\n}"},"status":-2},{"failures":[],"tindex":"012565e3-13b3-11e5-bc6c-7f756743f05f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:124","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.hasPrevious();\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:112","type":"CtIfImpl","sourcecode":"if (((int) == (int)) || ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator)) {\n    return java.util.Iterator<? extends E>.hasNext();\n} "},"status":-2},{"failures":[],"tindex":"012565e4-13b3-11e5-bc6c-014a966af5b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"bitIndex","index":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:439","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"012565e5-13b3-11e5-bc6c-d1e3971a378e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:458","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} "},"variableMap":{"entry":"next","hashCode":"hashCode","this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:457","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"012565e6-13b3-11e5-bc6c-5f30831a7392","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:676","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} "},"variableMap":{"current":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1164","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"status":-2},{"failures":[717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748],"tindex":"012565e7-13b3-11e5-bc6c-a567f50ade55","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"maxElements","removeIndex":"end","currentIndex":"maxElements"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:236","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"status":-1},{"failures":[],"tindex":"012565e8-13b3-11e5-bc6c-5b1285467c9d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends K, ? extends V> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>));\n    return java.util.Map<K, V>;\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:199","type":"CtReturnImpl","sourcecode":"return ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>))"},"status":0},{"failures":[7,749,25,750,42,751,58,77,752,753,754,95,755,111,756],"tindex":"012565e9-13b3-11e5-bc6c-4f65f7cb4c1b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:333","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"01258cfa-13b3-11e5-bc6c-a76a0ac09fa8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:51","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Transformer<? super T, ? extends T>[])"},"variableMap":{"transformers":"key3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:365","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"01258cfb-13b3-11e5-bc6c-7d55b591cb64","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1046","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"rval","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":0},{"failures":[757,758],"tindex":"01258cfc-13b3-11e5-bc6c-1d1f2b333f8c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:60","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ConstantFactory.<T>constantFactory(null)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:67","type":"CtTryImpl","sourcecode":"try {\n    T.getClass().getConstructor(new java.lang.Class<?>[]{ T.getClass() });\n    return new org.apache.commons.collections4.functors.InstantiateFactory<T>(((java.lang.Class<T>)(T.getClass())) , new java.lang.Class<?>[]{ T.getClass() } , new java.lang.Object[]{ T });\n} catch (final java.lang.NoSuchMethodException ex2) {\n    if (T instanceof java.io.Serializable) {\n        return ((org.apache.commons.collections4.Factory<T>)(new org.apache.commons.collections4.functors.PrototypeFactory.PrototypeSerializationFactory<java.io.Serializable>(((java.io.Serializable)(T)))));\n    } \n}"},"status":-1},{"failures":[],"tindex":"01258cfd-13b3-11e5-bc6c-f152cb058154","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"length","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n        final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(java.lang.Object[][int]));\n        if ((java.lang.Object[] == null) || ((java.lang.Object[].int) < 2)) {\n            throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + int));\n        } \n        java.util.Map<K, V>.put(((K)(java.lang.Object[][0])), ((V)(java.lang.Object[][1])));\n    }\n} else {\n    for (int int = 0 ; int < ((java.lang.Object[].int) - 1) ; ) {\n        java.util.Map<K, V>.put(((K)(java.lang.Object[][int++])), ((V)(java.lang.Object[][int++])));\n    }\n}"},"status":-2},{"failures":[],"tindex":"01258cfe-13b3-11e5-bc6c-3b6b0bf6b383","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:399","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet();\n} "},"status":-2},{"failures":[],"tindex":"01258cff-13b3-11e5-bc6c-5b975aea98d1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"01258d00-13b3-11e5-bc6c-178757bc17ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1230","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeInt(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)"},"variableMap":{"data":"object","length":"value","out":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:325","type":"CtIfImpl","sourcecode":"if (int < (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int)) {\n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int -= int;\n    int -= int;\n} else {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(java.lang.Object);\n    int -= org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n}"},"status":-2},{"failures":[169,170,171,173,175],"tindex":"01258d01-13b3-11e5-bc6c-350cdd3d1d3f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:855","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"to","node":"to","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"01258d02-13b3-11e5-bc6c-1fdd1c766b96","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2009","type":"CtReturnImpl","sourcecode":"return !(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeEntrySet.iterator().hasNext())"},"variableMap":{"this":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n        return false;\n    } \n} else {\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":"0125b413-13b3-11e5-bc6c-bbc77e0e2234","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n    throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n} "},"status":-2},{"failures":[759],"tindex":"0125b414-13b3-11e5-bc6c-0743b2ab2f58","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:708","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"0125b415-13b3-11e5-bc6c-77b183a380aa","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:268","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.SetUniqueList<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n    if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n    } \n}"},"status":-2},{"failures":[],"tindex":"0125b416-13b3-11e5-bc6c-711fa63144e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.TransformerUtils:366","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.InstantiateTransformer.<T>instantiateTransformer(java.lang.Class<?>[], java.lang.Object[])"},"variableMap":{"args":"args","paramTypes":"paramTypes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:419","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.InvokerTransformer.<I,O>invokerTransformer(java.lang.String, java.lang.Class<?>[], java.lang.Object[])"},"status":-2},{"failures":[],"tindex":"0125b417-13b3-11e5-bc6c-13c4ba0a6837","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"index","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:344","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"0125b418-13b3-11e5-bc6c-25026f372d27","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:701","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"rval":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1018","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()])) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    }\n}"},"status":0},{"failures":[],"tindex":"0125db29-13b3-11e5-bc6c-050e0b952229","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2324","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1154","type":"CtInvocationImpl","sourcecode":"java.util.Map<K, V>.put(java.util.Map.Entry<K, V>.getKey(), java.util.Map.Entry<K, V>.getValue())"},"status":-2},{"failures":[621,622,623,624,625,626,628,629,630,631,632,633,627,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,670,671,672,673,674,675,676,668,669,677,678,679,680,681,682,683,684,685,686,687,688,689,150,169,690,691,692,170,693,694,695,696,697,698,699,700,701,171,702,703,172,173,704,705,174,175,176,177,178],"tindex":"0125db2a-13b3-11e5-bc6c-83a519ab6eb7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:828","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","rightChild":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[625,626,628,629,630,633,635,636,638,639,640,641,643,649,650,666,667,760,670,671,672,674,675,677,678,679,681,682,684,685,686,687,689,169,692,170,696,697,699,700,701],"tindex":"0125db2b-13b3-11e5-bc6c-bdd792b61c29","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:569","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(((T)(java.lang.Object)), ((T)(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))));\n    if (int == 0) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        break;\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n}"},"status":-1},{"failures":[761,762],"tindex":"0125db2c-13b3-11e5-bc6c-7f0d9d23459e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:320","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    if (org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.contains(E)) {\n        continue;\n    } \n    org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().add(E);\n    java.util.List<E>.add(E);\n    boolean = true;\n}"},"status":-1},{"failures":[],"tindex":"0125db2d-13b3-11e5-bc6c-8101a4f0b698","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:67","type":"CtIfImpl","sourcecode":"if ((((java.lang.Class<?>[] == null) && (java.lang.Object[] != null)) || ((java.lang.Class<?>[] != null) && (java.lang.Object[] == null))) || (((java.lang.Class<?>[] != null) && (java.lang.Object[] != null)) && ((java.lang.Class<?>[].int) != (java.lang.Object[].int)))) {\n    throw new java.lang.IllegalArgumentException(\"Parameter types must match the arguments\");\n} "},"status":-2},{"failures":[763],"tindex":"0125db2e-13b3-11e5-bc6c-a9e34efb06fd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"0125db2f-13b3-11e5-bc6c-455c3ef423e4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:469","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T T = ((T)(E));\n    T[][int++] = T;\n}"},"status":0},{"failures":[],"tindex":"0127d700-13b3-11e5-bc6c-891c30016e09","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:668","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"0127d701-13b3-11e5-bc6c-e1fd78940e6d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:502","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[465,472,534,554,588],"tindex":"0127d702-13b3-11e5-bc6c-7be275487a68","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1016","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    boolean boolean = false;\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n        boolean = boolean || boolean;\n    }\n    return boolean;\n} else {\n    return org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated().removeAll(null);\n}"},"status":-1},{"failures":[],"tindex":"0127d703-13b3-11e5-bc6c-d5a565e938a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:297","type":"CtIfImpl","sourcecode":"if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n    return false;\n} "},"variableMap":{"composite":"composite","i":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:296","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":"0127d704-13b3-11e5-bc6c-f3aaa7fceef7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:297","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    boolean |= java.util.Collection<E>.removeAll(java.util.Collection<?>);\n}"},"status":-2},{"failures":[],"tindex":"0127d705-13b3-11e5-bc6c-856dac8898c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:75","type":"CtIfImpl","sourcecode":"if (java.util.List<E>.isEmpty()) {\n    return new org.apache.commons.collections4.list.SetUniqueList<E>(java.util.List<E> , new java.util.HashSet<E>());\n} "},"status":0},{"failures":[],"tindex":"0127d706-13b3-11e5-bc6c-b551dad0ed88","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:345","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.Flat3Map<K, V>.convertToMap()"},"variableMap":{"this":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:172","type":"CtIfImpl","sourcecode":"if (java.util.Map<V, K>.containsKey(V)) {\n    java.util.Map<K, V>.remove(java.util.Map<V, K>.get(V));\n} "},"status":-2},{"failures":[],"tindex":"0127fe17-13b3-11e5-bc6c-e7dc9509f6c0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:104","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.putAll(java.util.Map<K, V>)"},"variableMap":{"this":"normalMap","map":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:227","type":"CtIfImpl","sourcecode":"if (java.util.Map<V, K>.containsKey(java.lang.Object)) {\n    K = java.util.Map<V, K>.remove(java.lang.Object);\n    java.util.Map<K, V>.remove(K);\n} "},"status":-2},{"failures":[764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,290,291,790,292,293,303,791,792,793,794,795,311,312,313,314],"tindex":"0127fe18-13b3-11e5-bc6c-6947ce205e01","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:305","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"node":"node","header":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:333","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-1},{"failures":[],"tindex":"0127fe19-13b3-11e5-bc6c-b3f1ccb87a30","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:416","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.EntryView();\n} "},"status":-2},{"failures":[796,797,798,799,800,801,802,803,804,805,806,807,808],"tindex":"0127fe1a-13b3-11e5-bc6c-392e27869929","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} "},"variableMap":{"hasNext":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:187","type":"CtWhileImpl","sourcecode":"while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n    E E = java.util.Iterator<? extends E>.next();\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n        E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n    } \n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n}"},"status":-1},{"failures":[],"tindex":"0127fe1b-13b3-11e5-bc6c-39bf62e1dbe6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1471","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).isFull()"},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    boolean boolean = false;\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n            boolean = true;\n        } \n    }\n    return boolean;\n} else {\n    return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().retainAll(null);\n}"},"status":-2},{"failures":[],"tindex":"0127fe1c-13b3-11e5-bc6c-b9dd7facdc94","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:568","type":"CtIfImpl","sourcecode":"if (java.util.Map<?, ?> == null) {\n    java.util.Map<?, ?> = java.util.Map<?, ?>;\n} "},"variableMap":{"answer":"map","defaultValue":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:181","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[809,215,810,811,812,813],"tindex":"0127fe1d-13b3-11e5-bc6c-7992ea9ac66e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:59","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"nextIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:96","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> != null) {\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} else {\n    boolean = true;\n}"},"status":-1},{"failures":[],"tindex":"0128252e-13b3-11e5-bc6c-511fb9cc2b18","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"0128252f-13b3-11e5-bc6c-7f7345659b96","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:476","type":"CtWhileImpl","sourcecode":"while (int < (T[].int)) {\n    T[][int++] = null;\n}"},"status":-2},{"failures":[],"tindex":"01282530-13b3-11e5-bc6c-014c944b7cbc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:906","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"01282531-13b3-11e5-bc6c-33cc47ba7826","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:274","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext() ; ) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    if ((java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get()) == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } \n}"},"status":-2},{"failures":[],"tindex":"01282532-13b3-11e5-bc6c-c773f62d4607","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.isEmpty()) {\n    return true;\n} else {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n            continue;\n        } \n        boolean boolean = false;\n        while (java.util.Iterator<?>.hasNext()) {\n            final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n            java.util.Set<java.lang.Object>.add(java.lang.Object);\n            if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n                boolean = true;\n                break;\n            } \n        }\n        if (boolean) {\n            continue;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}"},"variableMap":{"coll2":"coll","coll1":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1470","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> instanceof org.apache.commons.collections4.BoundedCollection) {\n    return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).isFull();\n} "},"status":-2},{"failures":[],"tindex":"01282533-13b3-11e5-bc6c-736000f105d6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:87","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.TransformedSortedBag<E>"},"variableMap":{"decorated":"bag"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:57","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bag.TransformedSortedBag<E>(org.apache.commons.collections4.SortedBag<E> , org.apache.commons.collections4.Transformer<? super E, ? extends E>)"},"status":-2},{"failures":[],"tindex":"01282534-13b3-11e5-bc6c-0334bf734a5f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1218","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"root":"predecessor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, null);\n}"},"status":-2},{"failures":[814,349,815,816,350,351,352,817,353,354,818,355,356,357,819,358,359,820,360,821,822,361,362,823,824,825,363,364,365,366,367,368,369,826,827,370,828,829,830,371,831,372,373,374,375,376],"tindex":"01282535-13b3-11e5-bc6c-0781362ec73d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:732","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return null;\n} "},"variableMap":{"parent":"path","current":"path","right":"path"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:460","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"01282536-13b3-11e5-bc6c-e5f458928cb0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:242","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getValue() : null"},"variableMap":{"entry":"path"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:428","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        if ((!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K))) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        } else {\n            return null;\n        }\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[832,833],"tindex":"01284c47-13b3-11e5-bc6c-8fd110ecc97b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends I> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:125","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof org.apache.commons.collections4.ResettableIterator) {\n    ((org.apache.commons.collections4.ResettableIterator<? extends E>)(java.util.Iterator<? extends E>)).reset();\n} "},"status":-1},{"failures":[834,340,341,835,836,53,837,54,55,838,56,57,58,839,840,59,841,60,842,843,61,62,63,844,845,846,847,848,849,850,342,64,65,66,67,851,852,853,854,855,856,857,858],"tindex":"01284c48-13b3-11e5-bc6c-dd5bdaab688d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:400","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V)"},"status":-1},{"failures":[76,80,87,94,98,105],"tindex":"01284c49-13b3-11e5-bc6c-f5f6df79f41e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:590","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:148","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n        return true;\n    } \n}"},"status":-1},{"failures":[625,626,635,636,638,639,640,642,643,666,667,681,682,684,685,686,688,689,169,170,176],"tindex":"01284c4a-13b3-11e5-bc6c-7531f34600f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:827","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"node":"node","rightChild":"leftChild","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:854","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"01284c4b-13b3-11e5-bc6c-73860fc049c3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:178","type":"CtInvocationImpl","sourcecode":"this.java.util.Map<K, V>[][int].clear()"},"variableMap":{"composite":"result","i":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:183","type":"CtIfImpl","sourcecode":"if ((T[].int) >= int) {\n    java.lang.Object[] = T[];\n} else {\n    java.lang.Object[] = ((java.lang.Object[])(java.lang.reflect.Array.newInstance(T[].getClass().getComponentType(), int)));\n}"},"status":-2},{"failures":[118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149],"tindex":"01284c4c-13b3-11e5-bc6c-23add6869751","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:436","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        java.lang.Object[][int++] = E;\n    }\n}"},"status":-1},{"failures":[342],"tindex":"01284c4d-13b3-11e5-bc6c-635c299adbf6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}