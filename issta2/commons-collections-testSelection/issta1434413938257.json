{"failureDictionary":{"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":495,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":48,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":661,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":676,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":103,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":207,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":7,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":429,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":343,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testKeySetRemoveChangesMap":735,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapHashCode":721,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":98,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":790,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":183,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRetainAll":733,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":36,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":741,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":123,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":667,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":348,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":634,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":137,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":698,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":83,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":444,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":467,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":746,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":691,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":599,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":226,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":542,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":525,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":579,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":33,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":581,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":243,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":155,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":325,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":453,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":62,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":255,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":617,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":174,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":360,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":527,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":354,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":11,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":635,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":9,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveChangesMap":731,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":112,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":195,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":717,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":249,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":212,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":313,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":353,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":419,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":677,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":539,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":385,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":206,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":586,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":305,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":345,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":749,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":459,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":216,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":689,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":434,"org.apache.commons.collections4.functors.AllPredicateTest.trueAndFalseCombined":653,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":546,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":643,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":752,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":493,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":157,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":649,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":245,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":485,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":56,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":603,"org.apache.commons.collections4.trie.PatriciaTrieTest.testLastKey":757,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":34,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":289,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapPutNullValue":725,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":60,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":5,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":375,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":530,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":342,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":521,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":625,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":291,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":624,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":164,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":228,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":545,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":575,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":531,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":562,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":109,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":605,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":254,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":795,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":302,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":310,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":201,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":196,"org.apache.commons.collections4.comparators.ComparatorChainTest.testBadListComparatorChain":642,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":416,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":593,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":784,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":664,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":329,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":706,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":4,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":235,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":318,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":719,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":389,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":472,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testFirstKey":712,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":284,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":430,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":378,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":651,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":481,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":293,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":147,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":564,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":187,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":262,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":215,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":77,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":574,"org.apache.commons.collections4.trie.PatriciaTrieTest.testFirstKey":756,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":179,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":23,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":616,"org.apache.commons.collections4.comparators.ComparatorChainTest.testNoopComparatorChain":641,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":536,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":628,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":299,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":381,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":549,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":21,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":306,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":338,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":46,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":492,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":133,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":99,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":151,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":426,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":422,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":146,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":425,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":455,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":478,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":659,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":450,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":148,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":102,"org.apache.commons.collections4.functors.AllPredicateTest.singletonCollectionToGetInstance":654,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":665,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":745,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":787,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":334,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":224,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":591,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":626,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":406,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":529,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":169,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":31,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":142,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":520,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":615,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":324,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":397,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":170,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":238,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":791,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":561,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":32,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":580,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":191,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":707,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":630,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":126,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":663,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":590,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":786,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":401,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":101,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":685,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":20,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":398,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":507,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":650,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":192,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":312,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":471,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":246,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":436,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":118,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":271,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":555,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":494,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":44,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":369,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":277,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":333,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":59,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":107,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":116,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":138,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":636,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":557,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":129,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":168,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":358,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":785,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":321,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":363,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":209,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":759,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":480,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":489,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":395,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":563,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":52,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":601,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":205,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":482,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapPut":723,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":632,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":268,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":403,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":320,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":633,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":24,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":781,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":513,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":356,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":265,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":227,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":190,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":49,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":258,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":166,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":647,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":43,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":92,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":87,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":28,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":261,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":454,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":366,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":288,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":418,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":421,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":88,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":780,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":779,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":70,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":776,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":775,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":778,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":777,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":772,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":774,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":773,"org.apache.commons.collections4.functors.AllPredicateTest.allTrue":652,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":466,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveAll":769,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":315,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":117,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":200,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":708,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":335,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":612,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":82,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":420,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":173,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":477,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":577,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":566,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":95,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":567,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":85,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":743,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":10,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":402,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":176,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":754,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":700,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":670,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":572,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":379,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":331,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":336,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":532,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":139,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":747,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":662,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":551,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":125,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":0,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":548,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":172,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":171,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":516,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":704,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":145,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapClear":760,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":638,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testKeySetIteratorRemoveChangesMap":738,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":393,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":438,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":266,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":159,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":764,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":124,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":257,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":788,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":81,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":515,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":410,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":460,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":690,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":573,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":185,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":510,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":210,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":645,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":296,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":668,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testKeySetRemoveAll":736,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":332,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":344,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":377,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":697,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":351,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":644,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetClearChangesMap":768,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":476,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":498,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":522,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":588,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":484,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":64,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":589,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":762,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":355,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":709,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsSelf":433,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":619,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":543,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":376,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":119,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":290,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":223,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":699,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":337,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":497,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":128,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":608,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":220,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":153,"org.apache.commons.collections4.map.StaticBucketMapTest.testEqualsNull":771,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":115,"org.apache.commons.collections4.comparators.ComparatorChainTest.testListComparatorChain":640,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":114,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":687,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":792,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":692,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":702,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":475,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":718,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":184,"org.apache.commons.collections4.comparators.ComparatorChainTest.testBadNoopComparatorChain":639,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":508,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":473,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":47,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRetainAll":770,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":241,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":90,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":94,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":248,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":278,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":412,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":789,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":30,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":518,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":578,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":198,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":512,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":323,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":427,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":253,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":584,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":326,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":526,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":346,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":503,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":440,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":121,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":308,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":373,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":594,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapRemove":727,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":35,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":91,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":439,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":447,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":292,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":208,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":660,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":273,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":186,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":519,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":672,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":382,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveChangesMap":739,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":583,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":622,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":160,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":240,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":127,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":681,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":276,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":19,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":535,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":705,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":457,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":37,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":152,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":328,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":582,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":688,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":203,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":374,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":408,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":568,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":595,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":765,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":161,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":178,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":505,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":648,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":678,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":461,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":380,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":629,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":236,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":282,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":272,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":275,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":761,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":710,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":386,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":470,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":576,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":560,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":751,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":260,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":89,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":458,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":558,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":149,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":66,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":307,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":193,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":506,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":316,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":404,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":141,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":194,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInCollectionToGetInstance":655,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":517,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":592,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":755,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":165,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":29,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":711,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":135,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":341,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":285,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":359,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":84,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":317,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":570,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":361,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":383,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":202,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":744,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":411,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":295,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":509,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":211,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":234,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":41,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":80,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":432,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":449,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":417,"org.apache.commons.collections4.ArrayStackTest.testSearch":620,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":140,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":399,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":162,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":523,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetIteratorRemoveChangesMap":742,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":550,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":104,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":108,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":263,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":370,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":500,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":247,"org.apache.commons.collections4.ListUtilsTest.testSubtract":598,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":763,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":474,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":597,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":587,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":58,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":533,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":715,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":122,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":75,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":679,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":38,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":794,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":390,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":287,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":97,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":13,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":301,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":14,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":15,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":540,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":456,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":189,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":8,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":18,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":423,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":300,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":415,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":556,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":486,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":609,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":113,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":68,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":614,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":199,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":673,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":120,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":613,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":57,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":93,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":782,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":73,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":604,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":675,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":314,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":283,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":528,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":793,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":414,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":180,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":63,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":298,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":499,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":468,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":740,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":27,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":219,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":250,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":86,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":602,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":544,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveAll":732,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":524,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":6,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":251,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":569,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":54,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":233,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":452,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":720,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":541,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":371,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsSelf":565,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":74,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":51,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":244,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":767,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":154,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testLastKey":713,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":53,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":758,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":242,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":143,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":368,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":274,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":350,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":413,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":553,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":693,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":600,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":218,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":671,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":264,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":686,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":130,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":1,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":231,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":69,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":463,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":464,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapPutAll":726,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":607,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":158,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":252,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":585,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":405,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":437,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testKeySetRetainAll":737,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":441,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":232,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":327,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":537,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":487,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":443,"org.apache.commons.collections4.CollectionUtilsTest.addAllForEnumeration":783,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":669,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":237,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":340,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":311,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":259,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":483,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":559,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":547,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":728,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":729,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":538,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":730,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":61,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":490,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":150,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":388,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":387,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":352,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":424,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":281,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":364,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":674,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":309,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":445,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":12,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":442,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":279,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":131,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":319,"org.apache.commons.collections4.set.ListOrderedSetTest.testOrdering":294,"org.apache.commons.collections4.set.ListOrderedSet2Test.testOrdering":297,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":571,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":322,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":750,"org.apache.commons.collections4.set.CompositeSetTest.testContains":25,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":222,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":372,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":391,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":78,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":134,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":362,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":72,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":618,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":111,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":623,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":435,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":357,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":696,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":182,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":462,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":204,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":394,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":286,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":488,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":431,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":734,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":606,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":40,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":400,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":156,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":448,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":501,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":181,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":105,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":132,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx6":658,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":188,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":748,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":496,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":469,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":610,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":409,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":627,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":682,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":684,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":554,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":683,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":217,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":714,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":722,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":163,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":701,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":611,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":428,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":367,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":596,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":339,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":753,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":50,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":303,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":330,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":177,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":446,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":384,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":110,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":514,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":167,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":365,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":631,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":225,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapPutNullKey":724,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":502,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":666,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":694,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":136,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":479,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":703,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":511,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":552,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":229,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":67,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":175,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":45,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":491,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":144,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":392,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":230,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":465,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":256,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":3,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":269,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":656,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":96,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":213,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":680,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":646,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":695,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":65,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":106,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":304,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":407,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":766,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":349,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":22,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":347,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":657,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":239,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":197,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":267,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":270,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":451,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":621,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapClear":716,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":214,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":534,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":637,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":396,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":504,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":280,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":221},"transformations":[{"failures":[],"tindex":"4808efc7-13bd-11e5-81ee-b75363153887","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:358","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purge()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n    do {\n        final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n} "},"status":-2},{"failures":[],"tindex":"480916d8-13bd-11e5-81ee-896e0ba243bb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1770","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.ViewIterator.navigatePrevious().getValue()"},"variableMap":{"this":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"480916d9-13bd-11e5-81ee-11021ec84b53","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:495","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:505","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"48093dea-13bd-11e5-81ee-c96d25739455","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:135","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:112","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>.isEmpty()) == false) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"48093deb-13bd-11e5-81ee-5fa85e2c623d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"status":-2},{"failures":[],"tindex":"48093dec-13bd-11e5-81ee-9dbf17746c8a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:568","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)"},"status":-2},{"failures":[],"tindex":"48093ded-13bd-11e5-81ee-abeb46f08469","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:320","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"variableMap":{"mapSize":"oldCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":"48093dee-13bd-11e5-81ee-45a40e7bbaaf","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:949","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement : org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.values()) {\n    if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                } else {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-2},{"failures":[0,1],"tindex":"480964ff-13bd-11e5-81ee-91c737c1df21","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:162","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super I>[][int].evaluate(I)) == true) {\n    return org.apache.commons.collections4.Transformer<? super I, ? extends O>[][int].transform(I);\n} "},"status":-1},{"failures":[],"tindex":"48096500-13bd-11e5-81ee-1d55427b54a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(E);\n    int += int;\n    if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n        return true;\n    } \n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int += int;\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"48098c11-13bd-11e5-81ee-6f9a8363207d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:204","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    boolean |= org.apache.commons.collections4.set.ListOrderedSet<E>.add(E);\n}"},"status":-2},{"failures":[],"tindex":"48098c12-13bd-11e5-81ee-899edc74ee6a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:85","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    boolean = true;\n} "},"variableMap":{"chainExhausted":"result","currentIterator":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:128","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n    boolean = boolean || boolean;\n}"},"status":-2},{"failures":[2,3,4,5,6,7],"tindex":"48098c13-13bd-11e5-81ee-9f5b784b634a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtIfImpl","sourcecode":"if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n    if ((int[][(int - int)]) <= (int[][int])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[],"tindex":"48098c14-13bd-11e5-81ee-8d8c396faefb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:139","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Closure<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + int) + \" was null\"));\n} "},"variableMap":{"closures":"key1","i":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[8,9,10,11,12,13],"tindex":"48098c15-13bd-11e5-81ee-1d3db716f27e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:239","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<? extends E>.hasNext()"},"variableMap":{"currentIterator":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:95","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"48098c16-13bd-11e5-81ee-75b547aedd9c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"size","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:324","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n    if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    } else {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n    (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n    return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n} "},"status":-2},{"failures":[],"tindex":"4809b327-13bd-11e5-81ee-1d0c4c30cd7b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"length","newCapacity":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:476","type":"CtWhileImpl","sourcecode":"while (int < (T[].int)) {\n    T[][int++] = null;\n}"},"status":-2},{"failures":[],"tindex":"4809b328-13bd-11e5-81ee-6f768c2b8825","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"4809b329-13bd-11e5-81ee-03ddb10f44e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"y","rightChild":"xFormerParent","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1151","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"4809b32a-13bd-11e5-81ee-412e11e5e6e8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:129","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.contains(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"4809da3b-13bd-11e5-81ee-d56e232118a6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-2},{"failures":[],"tindex":"4809da3c-13bd-11e5-81ee-37a8a741da64","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"index","newCapacity":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.GrowthList:183","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.<E>nCopies(((int - int) + 1), null));\n} "},"status":-2},{"failures":[34],"tindex":"4809da3d-13bd-11e5-81ee-67d93cbfc5c5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:973","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.print(\" = \");\n} "},"status":-1},{"failures":[],"tindex":"4809da3e-13bd-11e5-81ee-752b74ef630f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:342","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:341","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int]"},"status":-2},{"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98],"tindex":"4809da3f-13bd-11e5-81ee-b73e37d5ce4f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:556","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[],"tindex":"480c4b40-13bd-11e5-81ee-aba2ac1fe110","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:355","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<E>.size()) ; int++) {\n    if ((java.util.BitSet.get(int)) == false) {\n        org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n    } \n    if (java.util.BitSet.get(int)) {\n        if (int == (-1)) {\n            int = int;\n            E = java.util.ArrayList<E>.get(int);\n        } else {\n            final E E = java.util.ArrayList<E>.get(int);\n            if ((java.util.Comparator<? super E>) == null) {\n                throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n            } \n            if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n                E = E;\n                int = int;\n            } \n        }\n    } \n}"},"status":-2},{"failures":[],"tindex":"480c7251-13bd-11e5-81ee-4b8328767cc2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:571","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    break;\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"480c7252-13bd-11e5-81ee-bb290a84ea95","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"status":-2},{"failures":[],"tindex":"480c7253-13bd-11e5-81ee-53e41d40f468","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1322","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if (java.lang.Object == null) {\n        if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n            return false;\n        } \n    } else {\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"480c7254-13bd-11e5-81ee-2536b5b62c03","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:134","type":"CtReturnImpl","sourcecode":"return java.lang.String.startsWith(java.lang.String)"},"variableMap":{"key":"otherValue","s1":"otherValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1154","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n            return false;\n        } \n        java.lang.Object = java.util.Map<?, ?>.get(K);\n        if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n            return false;\n        } \n    case 2 :\n        if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n            return false;\n        } \n        java.lang.Object = java.util.Map<?, ?>.get(K);\n        if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n            return false;\n        } \n    case 1 :\n        if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n            return false;\n        } \n        java.lang.Object = java.util.Map<?, ?>.get(K);\n        if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n            return false;\n        } \n}"},"status":-2},{"failures":[],"tindex":"480c7255-13bd-11e5-81ee-abb9e8fdf859","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:810","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[],"tindex":"480c7256-13bd-11e5-81ee-a3f193245b55","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:513","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"rval","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"rval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-2},{"failures":[99,100,101,102,103,104],"tindex":"480c7257-13bd-11e5-81ee-bd26a64f1a5f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:148","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n        return true;\n    } \n}"},"status":-1},{"failures":[105],"tindex":"480c9968-13bd-11e5-81ee-59571be50b3c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:97","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.TransformedSortedMap<K, V>.clear()"},"variableMap":{"decorated":"decorated"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtIfImpl","sourcecode":"if ((java.util.SortedMap<K, V>.size()) > 0) {\n    final java.util.Map<K, V> java.util.Map<K, V> = org.apache.commons.collections4.map.TransformedSortedMap<K, V>.transformMap(java.util.SortedMap<K, V>);\n    org.apache.commons.collections4.map.TransformedSortedMap<K, V>.clear();\n    org.apache.commons.collections4.map.TransformedSortedMap<K, V>.decorated().putAll(java.util.Map<K, V>);\n} "},"status":-1},{"failures":[2,3,4,5,6,7],"tindex":"480c9969-13bd-11e5-81ee-957e87857f8d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:190","type":"CtIfImpl","sourcecode":"if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n    int[][int] = int[][(int + 1)];\n} else {\n    int[][int] = (int[][(int - 1)]) + 1;\n}"},"status":-1},{"failures":[],"tindex":"480c996a-13bd-11e5-81ee-670738bffbaf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:571","type":"CtReturnImpl","sourcecode":"return java.util.Map<?, ?>"},"variableMap":{"answer":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:68","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.UnmodifiableMap<K, V>(java.util.Map<? extends K, ? extends V>)"},"status":-2},{"failures":[],"tindex":"480c996b-13bd-11e5-81ee-49e3dd68dbfa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"deletedNode","rightChild":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:991","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[35,106,107,36,108,109,37,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,38,129,130,131,39,132,133,134,135,136,137,138,139,140,141,142,143,40,144,41,42,43,145,146,147,148,149,44,150,151,152,45,46,47,48,153,49,50,154,51,155,52,53,54,55,56,57,58,156,157,158,59,60,159,61,62,63,64,65,66,67,68,160,161,69,162],"tindex":"480c996c-13bd-11e5-81ee-b138c0df549d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:318","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove()"},"variableMap":{"it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:352","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-1},{"failures":[],"tindex":"480c996d-13bd-11e5-81ee-2d2a1d86d5c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:467","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:432","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<K>emptyOrderedIterator();\n} "},"status":-2},{"failures":[],"tindex":"480c996e-13bd-11e5-81ee-93d1293b523f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"size","index":"size","beyond":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:431","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    int += this.java.util.Map<K, V>[][int].size();\n}"},"status":-2},{"failures":[163,164,165],"tindex":"480cc07f-13bd-11e5-81ee-1d24d48ae046","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:438","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(java.lang.Object);\n} "},"variableMap":{"delegateMap":"delegateMap","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(java.lang.Object);\n} "},"status":-1},{"failures":[],"tindex":"480cc080-13bd-11e5-81ee-e314ec9cf3ed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:127","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"480cc081-13bd-11e5-81ee-d766f79d4649","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    return false;\n} "},"variableMap":{"mut":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:230","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"480cc082-13bd-11e5-81ee-ed0638445ae0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:853","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"y","leftChild":"y","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[166],"tindex":"480cc083-13bd-11e5-81ee-ffbe91cfa5e0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:195","type":"CtIfImpl","sourcecode":"if ((java.lang.Object[].int) > int) {\n    java.lang.Object[][int] = null;\n} "},"status":-1},{"failures":[],"tindex":"480cc084-13bd-11e5-81ee-2116aafb71f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:347","type":"CtIfImpl","sourcecode":"if ((this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n    throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n} "},"status":-2},{"failures":[167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191],"tindex":"480cc085-13bd-11e5-81ee-b13c7ffe9adf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:500","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n} else if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isExternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an external Entry!\"));\n} "},"variableMap":{"root":"child","h":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:564","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,99,220,221,100,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,102,240,241,103,242,243,244,245,246,247,248,249,250,251,252,253,163,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282],"tindex":"480cc086-13bd-11e5-81ee-43d32ad8e2b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:225","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"480cc087-13bd-11e5-81ee-a98988360c2f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TreeBag:86","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bag.TreeBag<E>.(comparator()) == null) && (!(E instanceof java.lang.Comparable))) {\n    throw new java.lang.IllegalArgumentException((((\"Objects of type \" + (E.getClass())) + \" cannot be added to \") + \"a naturally ordered TreeBag as it does not implement Comparable\"));\n} "},"status":-2},{"failures":[283,284,285,286,287,288,289,290,291,292,293],"tindex":"480ce798-13bd-11e5-81ee-f7dfb1d543b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:502","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.entrySet()) {\n    java.io.ObjectOutputStream.writeObject(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey());\n    java.io.ObjectOutputStream.writeInt(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue().int);\n}"},"status":-1},{"failures":[294,295,296,297,298,299],"tindex":"480ce799-13bd-11e5-81ee-2b4b325f21c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} "},"variableMap":{"hasNext":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:213","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.util.List<E>.remove(java.lang.Object);\n} "},"status":-1},{"failures":[],"tindex":"480ce79a-13bd-11e5-81ee-43edb7def1aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:94","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[],"tindex":"480ce79b-13bd-11e5-81ee-bdae4bdf1d35","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    return java.util.Iterator<T>.next();\n} "},"variableMap":{"iterator":"iterator","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1179","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<T>.hasNext()) {\n    int--;\n    if (int == (-1)) {\n        return java.util.Iterator<T>.next();\n    } \n    java.util.Iterator<T>.next();\n}"},"status":0},{"failures":[111,118,159],"tindex":"480ce79c-13bd-11e5-81ee-676a69c8d5f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:258","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    java.util.Iterator<E>.next();\n    java.util.Iterator<E>.remove();\n}"},"status":-1},{"failures":[166],"tindex":"480ce79d-13bd-11e5-81ee-b37a092703ed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:191","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    java.lang.Object[][int++] = E;\n}"},"status":-1},{"failures":[300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,283,321,322,323,324,8,325,326,327,328,329,330,331,332,333,334,335,9,336,337,338,339,340,341,342,343,344,345,346,347,284,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,285,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,286,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,287,418,419,420,421,10,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,288,451,452,453,454,11,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,289,486,487,488,489,12,490,491,492,493,494,495,496,497,498,499,500,501,502,290,503,504,13,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,291,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,292,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,293,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606],"tindex":"480ce79e-13bd-11e5-81ee-ddc98c2eb428","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"480d0eaf-13bd-11e5-81ee-89dc054676ee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:55","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.NonePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Predicate<? super T>[]))"},"status":-2},{"failures":[607,608,192,609],"tindex":"480d0eb0-13bd-11e5-81ee-0b027d212939","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1353","type":"CtTryImpl","sourcecode":"try {\n    int = java.lang.reflect.Array.getLength(java.lang.Object);\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n}"},"variableMap":{"total":"h","object":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"480d0eb1-13bd-11e5-81ee-d38c53bea312","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:288","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.queue.CircularFifoQueue<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"queue is empty\");\n} "},"status":-2},{"failures":[],"tindex":"480d0eb2-13bd-11e5-81ee-bdf867560ec4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:352","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-2},{"failures":[],"tindex":"480d0eb3-13bd-11e5-81ee-c38c59002d23","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"lengthInBits","proposedCapacity":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[610,611,612,613,614,615,616,617,618,619],"tindex":"480d0eb4-13bd-11e5-81ee-c578676c55e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:426","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        int += org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.hashCode();\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-1},{"failures":[620],"tindex":"480d0eb5-13bd-11e5-81ee-f34782c9b226","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return 0;\n} "},"variableMap":{"key":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:155","type":"CtWhileImpl","sourcecode":"while (int >= 0) {\n    final java.lang.Object java.lang.Object = java.util.ArrayList<E>.get(int);\n    if (((java.lang.Object == null) && (java.lang.Object == null)) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n        return int;\n    } \n    int--;\n    int++;\n}"},"status":-1},{"failures":[109,115,119,49,59,60,61,62,64,67,161,77,88,89,90,91,93,96,621],"tindex":"480d0eb6-13bd-11e5-81ee-4554f5389663","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:784","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    return int;\n} "},"variableMap":{"integerObject":"value","defaultValue":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:134","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n    if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n        return int;\n    } \n    int++;\n}"},"status":-1},{"failures":[],"tindex":"480d35c7-13bd-11e5-81ee-4b803b5dda22","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:118","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: The constructor must exist and be public \")"},"status":-2},{"failures":[622,623,624,625,626,627,628,629,630,631,247,632,633,634,635,636,637],"tindex":"480d35c8-13bd-11e5-81ee-8b459d5fbeb1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:214","type":"CtIfImpl","sourcecode":"if (java.util.Map.Entry<K, V> == null) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"480d35c9-13bd-11e5-81ee-07e12152d527","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n    break;\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n    throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n} "},"status":-2},{"failures":[638,639,640,641,642,643,644,645],"tindex":"480d35ca-13bd-11e5-81ee-c15c63cf3e47","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"isLocked"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:267","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    org.apache.commons.collections4.comparators.ComparatorChain<E>.checkChainIntegrity();\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"480d35cb-13bd-11e5-81ee-f1c658358973","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:276","type":"CtIfImpl","sourcecode":"if ((java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get()) == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} "},"variableMap":{"ref":"ref","it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:292","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>) {\n    java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear();\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    break;\n} "},"status":0},{"failures":[16,17,18,19,20,21,22,23,24,646,27,166,647,648,28,649,29,650,30,651,33],"tindex":"480d35cc-13bd-11e5-81ee-bb672c9fc50c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:135","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:112","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>.isEmpty()) == false) {\n    return false;\n} "},"status":-1},{"failures":[652,652,653,653,654,655,656,657,658,659,660,661,662,663],"tindex":"480d35cd-13bd-11e5-81ee-21f11c23a312","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:106","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"status":-1},{"failures":[],"tindex":"480d35ce-13bd-11e5-81ee-b76eac893882","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"hash","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:324","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n    if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    } else {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n    (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n    return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n} "},"status":-2},{"failures":[],"tindex":"480d35cf-13bd-11e5-81ee-ad0906489c35","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"length","expectedModCount":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:321","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.set.CompositeSet<K>.addComposited(this.java.util.Map<K, V>[][int].keySet());\n}"},"status":-2},{"failures":[],"tindex":"480d5ce0-13bd-11e5-81ee-431410509a83","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:124","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.hasPrevious();\n} "},"status":0},{"failures":[],"tindex":"480d5ce1-13bd-11e5-81ee-11b2631f15f7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:636","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == java.lang.Object) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    org.apache.commons.collections4.map.StaticBucketMap.this.remove(java.lang.Object);\n    return true;\n} "},"variableMap":{"obj":"object","k":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"480d5ce2-13bd-11e5-81ee-d542d3a673d4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:145","type":"CtWhileImpl","sourcecode":"while ((((int - int) < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get((int - int))))) {\n    ++int;\n}"},"status":0},{"failures":[],"tindex":"480d5ce3-13bd-11e5-81ee-bbdad7fae26a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"480d5ce4-13bd-11e5-81ee-49dd4985bd99","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"variableMap":{"node":"deletedNode","this":"this","rval":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:980","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[],"tindex":"480d5ce5-13bd-11e5-81ee-b935b72cd818","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"status":-2},{"failures":[],"tindex":"480d5ce6-13bd-11e5-81ee-f982bf941d23","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtIfImpl","sourcecode":"if (int == 1) {\n    return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E>));\n} "},"variableMap":{"count":"length","closure":"defaultClosure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:64","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super E>[].int) == 0) {\n    return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E> == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : org.apache.commons.collections4.Closure<? super E>));\n} "},"status":-2},{"failures":[],"tindex":"480d5ce7-13bd-11e5-81ee-7f636051e82f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"hashCode","index":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n} else {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n    (int)++;\n    for (int int = int - 1 ; int >= 0 ; int--) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n            do {\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n        } \n    }\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n}"},"status":-2},{"failures":[262],"tindex":"480d83f8-13bd-11e5-81ee-edb514265295","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    return ;\n} "},"variableMap":{"oldCapacity":"size","newCapacity":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:376","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"status":-1},{"failures":[664],"tindex":"480d83f9-13bd-11e5-81ee-9b0a1cd2e064","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"status":-1},{"failures":[],"tindex":"480d83fa-13bd-11e5-81ee-13ef1e33536c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"from":"currentNode","to":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:932","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[112,123,124,128,134,135,137,138],"tindex":"480d83fb-13bd-11e5-81ee-e99c0f99b164","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:339","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"variableMap":{"cursor":"cursor","node":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:355","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-1},{"failures":[],"tindex":"480d83fc-13bd-11e5-81ee-b15b98e4fd89","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:564","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"480d83fd-13bd-11e5-81ee-17ba8c0290ce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:458","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} "},"variableMap":{"entry":"entry","hashCode":"hashCode","this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:457","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[665,666,667,668,669,670,671,672,673,674,675,676,677,678,14,15,679,680,681,682,683,684,685,686,16,17,687,18,19,688,20,21,689,690,22,23,24,691,692,693,694,26,646,695,27,166,696,647,648,28,649,697,29,650,30,651,31,32,33,698,699,700,701,702,703,704,705,706,707,708,709,710,711],"tindex":"480d83fe-13bd-11e5-81ee-d5c42f7964d0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtIfImpl","sourcecode":"if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n} else {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-1},{"failures":[712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,168,169,743,744,745,746,747,748,749,750,751,752,170,753,175,754,755,176,756,757,758,759,760,761,762,763,764,765,766,767,183,768,186,769,770,187],"tindex":"480d83ff-13bd-11e5-81ee-ff726a50bdaf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:399","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet();\n} "},"status":-1},{"failures":[],"tindex":"480dab10-13bd-11e5-81ee-b9a1c386d428","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.WhileClosure:88","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    org.apache.commons.collections4.Closure<? super E>.execute(E);\n}"},"status":-2},{"failures":[614,771],"tindex":"480dab11-13bd-11e5-81ee-5f9ff99bd06f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:172","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object.getClass().equals(java.lang.Object.getClass()))) {\n    return false;\n} "},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map<?, ?>) == false) {\n    return false;\n} "},"status":-1},{"failures":[772,773,774,775,776,777,778,779,780,781,782],"tindex":"480dab12-13bd-11e5-81ee-d551857f9a72","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"status":-1},{"failures":[],"tindex":"480dab13-13bd-11e5-81ee-8982787b7840","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.EqualPredicate:109","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Equator<T>) != null) {\n    return org.apache.commons.collections4.Equator<T>.equate(T, T);\n} else {\n    return T.equals(T);\n}"},"status":-2},{"failures":[],"tindex":"480dab14-13bd-11e5-81ee-cd0e17bd8a4f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:136","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.PeekingIterator<E>.(hasNext())) {\n    throw new java.util.NoSuchElementException();\n} "},"status":0},{"failures":[],"tindex":"480dab15-13bd-11e5-81ee-219a733a7a4f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:827","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"node":"node","rightChild":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:490","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n} else {\n    while (true) {\n        final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n        if (int == 0) {\n            throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n        } else if (int < 0) {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        } else {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        }\n    }\n}"},"status":-2},{"failures":[622,623,624,625,626,627,628,629,630,631,247,632,633,634,635,636,637],"tindex":"480dab16-13bd-11e5-81ee-f10e005466e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n    return true;\n} "},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:214","type":"CtIfImpl","sourcecode":"if (java.util.Map.Entry<K, V> == null) {\n    return false;\n} "},"status":-1},{"failures":[783],"tindex":"480dab17-13bd-11e5-81ee-91049e98819e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"changed","nextCalled":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1139","type":"CtWhileImpl","sourcecode":"while (java.util.Enumeration<? extends C>.hasMoreElements()) {\n    boolean |= java.util.Collection<C>.add(java.util.Enumeration<? extends C>.nextElement());\n}"},"status":-1},{"failures":[784,785,786,787,788,789,790,791,792,793,794,795],"tindex":"480dd228-13bd-11e5-81ee-d179af269311","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:186","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.clear(int)"},"variableMap":{"orderingBits":"valueSet","index":"leastIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:355","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<E>.size()) ; int++) {\n    if ((java.util.BitSet.get(int)) == false) {\n        org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n    } \n    if (java.util.BitSet.get(int)) {\n        if (int == (-1)) {\n            int = int;\n            E = java.util.ArrayList<E>.get(int);\n        } else {\n            final E E = java.util.ArrayList<E>.get(int);\n            if ((java.util.Comparator<? super E>) == null) {\n                throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n            } \n            if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n                E = E;\n                int = int;\n            } \n        }\n    } \n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":98,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}