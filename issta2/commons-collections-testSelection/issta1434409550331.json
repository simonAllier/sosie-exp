{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":230,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":156,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":94,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":363,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":152,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":302,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":767,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testKeySetRemoveChangesMap":566,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":479,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapHashCode":552,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":225,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":274,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":65,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":350,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":351,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":524,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFullIterator":629,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":618,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":352,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRetainAll":564,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":572,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsSelfHashCode":421,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":441,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":14,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":112,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":321,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":525,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testRemove":729,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":633,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":184,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":122,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":581,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalEmptyCollectionExists":484,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":26,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":634,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":108,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":130,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":61,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":199,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":102,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectEqualsSelf":730,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":201,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":748,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":99,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":21,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsContract":698,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":23,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":189,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEqualsNull":708,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":93,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIteratorRemove":647,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":540,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":449,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":175,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":238,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":160,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":203,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":589,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEqualsNull":695,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":769,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":335,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":495,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":528,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":75,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveChangesMap":562,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":250,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":548,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":66,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":289,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":116,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":674,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":742,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":452,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":32,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":687,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalEmptyCollectionExists":709,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":492,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":459,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":58,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":656,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsSelfHashCode":724,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":584,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":120,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":430,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":162,"org.apache.commons.collections4.TransformerUtilsTest.testCloneTransformer":294,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":749,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":588,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":73,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":542,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsSelfHashCode":712,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":286,"org.apache.commons.collections4.map.ReferenceMapTest.testEmptyMapCompatibility":393,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":401,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":159,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":388,"org.apache.commons.collections4.trie.PatriciaTrieTest.testLastKey":600,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFirstKey":22,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":31,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapPutNullValue":556,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":377,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":367,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":236,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":150,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":406,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":407,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":405,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":190,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":306,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":383,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":140,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":88,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":471,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":155,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":174,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":267,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":509,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":27,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":284,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":91,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":759,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":268,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":431,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSimpleSerialization":710,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEqualsNull":720,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":4,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":149,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":443,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":550,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":754,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testFirstKey":543,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":136,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":74,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":303,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":621,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":98,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":171,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":429,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":208,"org.apache.commons.collections4.trie.PatriciaTrieTest.testFirstKey":599,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":446,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":257,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":414,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":278,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":325,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":741,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":373,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":761,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":228,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":115,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":448,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":104,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":681,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":677,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":157,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":467,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":680,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":530,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":54,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":133,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":131,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":400,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":63,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":262,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":56,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":580,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":435,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":271,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":420,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":765,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":466,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":465,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":410,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":464,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":667,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":343,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":632,"org.apache.commons.collections4.map.LRUMapTest.testReset":426,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":747,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSimpleSerialization":722,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":515,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":743,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":344,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":369,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":727,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":333,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":275,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":513,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":326,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":575,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":51,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":170,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":5,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":384,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":501,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":41,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":18,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":183,"org.apache.commons.collections4.keyvalue.TiedMapEntryTest.testEqualsAndHashCode":193,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":436,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":37,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":270,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":450,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":398,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":470,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":248,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":255,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testEmptyIterator":338,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":637,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":287,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":469,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":195,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":259,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":324,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":235,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":502,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":508,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":529,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapHashCode":608,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":342,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":269,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":285,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":512,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":533,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":33,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":602,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":313,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":299,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":316,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":399,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":207,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":234,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapPut":554,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":520,"org.apache.commons.collections4.map.HashedMapTest.testClone":493,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":521,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":258,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":522,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":47,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":585,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":121,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectEqualsSelf":419,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":118,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":231,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":490,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":42,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":433,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":576,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":218,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":212,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":43,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":145,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":409,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":60,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":673,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":675,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":214,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":628,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":111,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":643,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalFullCollectionExists":719,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":192,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveAll":619,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":119,"org.apache.commons.collections4.map.LinkedMapTest.testClone":486,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":362,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":626,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalFullCollectionExists":485,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":685,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":322,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":379,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":6,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":48,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":517,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":518,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":519,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":442,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":768,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":535,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":135,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":317,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalFullCollectionExists":707,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":437,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray2":651,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":25,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":221,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":578,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIsEmpty":658,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":139,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":676,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testRemove":717,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsContract":711,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":665,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":126,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":182,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":598,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":596,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":263,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":382,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":129,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":128,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":394,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":127,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testReset":726,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":514,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":44,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectEqualsSelf":718,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":480,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":173,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testRemove":684,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":320,"org.apache.commons.collections4.MapUtilsTest.testPutAll_Map_array":368,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":582,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":137,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":438,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":766,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":642,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":595,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":346,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":345,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":2,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapClear":603,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":511,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testKeySetIteratorRemoveChangesMap":569,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":30,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":196,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":607,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":163,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":187,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":272,"org.apache.commons.collections4.map.LRUMapTest.testLRU":24,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":669,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":256,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":750,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":496,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":416,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":714,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRetainAll":660,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectEqualsSelf":706,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":15,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testKeySetRemoveAll":567,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":323,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":460,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray2":653,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetClearChangesMap":613,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":315,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsContract":735,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":531,"org.apache.commons.collections4.map.LinkedMapTest.testInitialCapacityZero":487,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":240,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":59,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":605,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":7,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalFullCollectionExists":694,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":46,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":458,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":434,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":385,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":124,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":114,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":738,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":457,"org.apache.commons.collections4.map.ListOrderedMapTest.testFirstKey":20,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":314,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":397,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":636,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":468,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":69,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":359,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":202,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":34,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":200,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":251,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":574,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":412,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":356,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":276,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":1,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":691,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":549,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":79,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":197,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":370,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":386,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":526,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":307,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":229,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":72,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":280,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRetainAll":620,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":392,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":216,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":220,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":39,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":273,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":301,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAddAll":659,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":746,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":617,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":682,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":615,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":616,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSerializeDeserializeThenCompare":700,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":292,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":507,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":304,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":109,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":210,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":516,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapRemove":558,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetEquals":640,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":82,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":217,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":752,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":83,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalEmptyCollectionExists":721,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":81,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":336,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":395,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":473,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":474,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":353,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":166,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":701,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":17,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveChangesMap":570,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":408,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":381,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":340,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":418,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":186,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":361,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSerializeDeserializeThenCompare":725,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":541,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":253,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":29,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIsEmpty":645,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":55,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":3,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":254,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":318,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":380,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":609,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":53,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":245,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testCanonicalFullCollectionExists":539,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":144,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":141,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":372,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":417,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":358,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRetainAll":650,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":261,"org.apache.commons.collections4.map.HashedMapTest.testEqualsNull":364,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":604,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":439,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":8,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":96,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":591,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEqualsNull":366,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":587,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":167,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":215,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":242,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":763,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsSelfHashCode":536,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":744,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":279,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":80,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":332,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":597,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":191,"org.apache.commons.collections4.map.ReferenceMapTest.testCanonicalFullCollectionExists":424,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":622,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":70,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":327,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsSelfHashCode":699,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":716,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":76,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":403,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":402,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":62,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":740,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":404,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":297,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":579,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":670,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":376,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":308,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":499,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":211,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":672,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":86,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":85,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":84,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":476,"org.apache.commons.collections4.map.LRUMapTest.testClone":425,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetIteratorRemoveChangesMap":573,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":264,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":172,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":440,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":288,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":606,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicBad":293,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSimpleSerialization":697,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":755,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":760,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":546,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionSize":654,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":206,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":146,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":266,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetClearChangesMap":614,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":68,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testInitialCapacityZero":498,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":223,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":252,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":678,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":762,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContains":657,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":638,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":226,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testCanonicalEmptyCollectionExists":538,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":244,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":475,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":10,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":28,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":95,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsSelfHashCode":736,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":219,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":12,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":204,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContainsAll":644,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":577,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":728,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":277,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":482,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":106,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":671,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":92,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContainsAll":652,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":391,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":690,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":239,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":375,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":756,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":571,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":478,"org.apache.commons.collections4.map.HashedMapTest.testInitialCapacityZero":494,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":143,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":500,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":290,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":447,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":703,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":305,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveAll":563,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":67,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":151,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":281,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":40,"org.apache.commons.collections4.map.ReferenceMapTest.testCanonicalEmptyCollectionExists":423,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":757,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":483,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":36,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":503,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":551,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEqualsNull":732,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":422,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":50,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":205,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":624,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":233,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":611,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemove":662,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testRemove":705,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testLastKey":544,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":601,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":198,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":488,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":770,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":505,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":411,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":123,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSimpleSerialization":734,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":142,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":265,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":527,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":188,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":360,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":295,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":523,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEmptyMapCompatibility":510,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":445,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":179,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":180,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":181,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray":663,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":365,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIteratorRemove":655,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":246,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":630,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":311,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":753,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapPutAll":557,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":639,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":489,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":291,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalEmptyCollectionExists":733,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":97,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":415,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":704,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":686,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":454,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":666,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":477,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testKeySetRetainAll":568,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":751,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesClearChangesMap":612,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testReset":689,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":16,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":472,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":100,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemove":648,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":164,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":559,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":560,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":561,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":249,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":110,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":625,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":237,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":387,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":432,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":679,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalEmptyCollectionExists":696,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":627,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":11,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":764,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":138,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":309,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":337,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":103,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":165,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":758,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":497,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":586,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectEqualsSelf":534,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":456,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":209,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":87,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":213,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":194,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":389,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":739,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":310,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":339,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":334,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":565,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":745,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAdd":661,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":349,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":113,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":491,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":132,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":354,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":583,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":125,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":702,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":105,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":413,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":331,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":646,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":444,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":545,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":553,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAdd":641,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":154,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":185,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":153,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":396,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":0,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testRemove":692,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":683,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":134,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":319,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":590,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":232,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":89,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":77,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":390,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":357,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":49,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":348,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":298,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":504,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIterator":664,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":455,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsContract":723,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":177,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":341,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":178,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":296,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":649,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":38,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":176,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":282,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapPutNullKey":555,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":592,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":593,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":13,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":594,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":635,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":78,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalFullCollectionExists":731,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":371,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":169,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":243,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":90,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":481,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":328,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":347,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":329,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":330,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":64,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":227,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":453,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":107,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":688,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":101,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":35,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":312,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":161,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSerializeDeserializeThenCompare":737,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":158,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":168,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectEqualsSelf":693,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":148,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSerializeDeserializeThenCompare":713,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":222,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":247,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":427,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":537,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":631,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":117,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":147,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":241,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":463,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":668,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":283,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":378,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":461,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":610,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":462,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":715,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":374,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":355,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":224,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":623,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapClear":547,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":428,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":506,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":532,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":300,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":260,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":451},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"tindex":"10a01b34-13b3-11e5-bb41-e7e657926fb7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:223","type":"CtWhileImpl","sourcecode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-1},{"failures":[18,19],"tindex":"10a04245-13b3-11e5-bb41-575084672272","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate":"iPredicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.WhileClosure:88","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    org.apache.commons.collections4.Closure<? super E>.execute(E);\n}"},"status":-1},{"failures":[20,21,22,23],"tindex":"10a04246-13b3-11e5-bb41-9b2bf9bbef24","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.TransformedMap:105","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.TransformedMap<K, V>.clear()"},"variableMap":{"decorated":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:167","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-1},{"failures":[],"tindex":"10a06957-13b3-11e5-bb41-2d4fbcfd4d10","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:722","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"from":"node","to":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[24,25,26],"tindex":"10a06958-13b3-11e5-bb41-8f3e02210d23","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"modCount","index":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:193","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    (int)++;\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n        throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n    } \n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n} else if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n} "},"status":-1},{"failures":[],"tindex":"10a06959-13b3-11e5-bb41-4d7307dd5b81","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"variableMap":{"node":"currentNode","this":"this","rval":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:932","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"10a0906a-13b3-11e5-bb41-b77924fa71d8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:532","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n} else if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an internal Entry!\"));\n} "},"variableMap":{"root":"right","h":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:582","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"10a0906b-13b3-11e5-bb41-b76b90f22ae3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) > 0) {\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.CursorableLinkedList<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        java.util.Iterator<E>.next();\n        java.util.Iterator<E>.remove();\n    }\n} "},"status":-2},{"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"tindex":"10a0906c-13b3-11e5-bb41-bd25796d8aaf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"10a0906d-13b3-11e5-bb41-9bf70eff08ce","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:855","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"node","node":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1287","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"10a28c3e-13b3-11e5-bb41-61ec6dd783fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hash3","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                return V;\n            } \n        case 2 :\n            if ((K) == null) {\n                return V;\n            } \n        case 1 :\n            if ((K) == null) {\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n        }\n    } \n}"},"status":-2},{"failures":[],"tindex":"10a28c3f-13b3-11e5-bb41-6f08a3873932","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"hash","index":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:326","type":"CtIfImpl","sourcecode":"if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n} else {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-2},{"failures":[42,43,44],"tindex":"10a28c40-13b3-11e5-bb41-13e257dbd93d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:245","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsValue(java.lang.Object);\n} "},"status":-1},{"failures":[45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141],"tindex":"10a28c41-13b3-11e5-bb41-135491e55831","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:549","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"10a2b352-13b3-11e5-bb41-4f86ca04943b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:138","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Closure<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Closure<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + int) + \" was null\"));\n    } \n}"},"status":-2},{"failures":[],"tindex":"10a2b353-13b3-11e5-bb41-8dba5dc7116a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"variableMap":{"parent":"root","current":"root","right":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:889","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        return null;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n}"},"status":0},{"failures":[142,143,144,145,146],"tindex":"10a2b354-13b3-11e5-bb41-4d045a8f1f62","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:416","type":"CtReturnImpl","sourcecode":"return (java.lang.Object == java.lang.Object) || (java.lang.Object == null ? false : java.lang.Object.equals(java.lang.Object))"},"variableMap":{"value2":"obj","value1":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:129","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.contains(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[147,148,149,150,151,152],"tindex":"10a2b355-13b3-11e5-bb41-5b5af6006cd7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtIfImpl","sourcecode":"if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n    if ((int[][int]) <= (int[][(int + int)])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n    } \n} "},"variableMap":{"vUp":"vDown","start1":"delta","d":"offset","vDown":"vDown","delta":"end2","end2":"start1","this":"this","i":"start1","end1":"start1","k":"end1","start2":"start1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:184","type":"CtForImpl","sourcecode":"for (int int = 0 ; int <= int ; ++int) {\n    for (int int = -int ; int <= int ; int += 2) {\n        final int int = int + int;\n        if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n            int[][int] = int[][(int + 1)];\n        } else {\n            int[][int] = (int[][(int - 1)]) + 1;\n        }\n        int int = int[][int];\n        int int = ((int - int) + int) - int;\n        while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            int[][int] = ++int;\n            ++int;\n        }\n        if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n            if ((int[][(int - int)]) <= (int[][int])) {\n                return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n            } \n        } \n    }\n    for (int int = int - int ; int <= (int + int) ; int += 2) {\n        final int int = (int + int) - int;\n        if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n            int[][int] = (int[][(int + 1)]) - 1;\n        } else {\n            int[][int] = int[][(int - 1)];\n        }\n        int int = (int[][int]) - 1;\n        int int = ((int - int) + int) - int;\n        while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            int[][int] = int--;\n            int--;\n        }\n        if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n            if ((int[][int]) <= (int[][(int + int)])) {\n                return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n            } \n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"10a2b356-13b3-11e5-bb41-51d6695cbebf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtIfImpl","sourcecode":"if (((java.util.Collection<?> == null) || (java.util.Collection<?> == null)) || ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size()))) {\n    return false;\n} "},"variableMap":{"list1":"iterable","list2":"iterable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? extends C> instanceof java.util.Collection<?>) {\n    return java.util.Collection<C>.addAll(((java.util.Collection<? extends C>)(java.lang.Iterable<? extends C>)));\n} "},"status":-2},{"failures":[153,154,155,156,157,158,159,160,161,162,163,42,164,165,166,167,168,43,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,44,185,186,187,188,189,190,191,192],"tindex":"10a2da67-13b3-11e5-bb41-517592789df7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:398","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 2 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 1 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":-1},{"failures":[193],"tindex":"10a2da68-13b3-11e5-bb41-95fe4a90f09c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1396","type":"CtTryImpl","sourcecode":"try {\n    return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n}"},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:100","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[194,195,196],"tindex":"10a2da69-13b3-11e5-bb41-b1b650778d73","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:248","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.CollatingIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:258","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    java.util.Iterator<E>.next();\n    java.util.Iterator<E>.remove();\n}"},"status":-1},{"failures":[],"tindex":"10a2da6a-13b3-11e5-bb41-4b5408fb0947","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:1025","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.List<E>.add(java.util.Iterator<? extends E>.next());\n}"},"status":-2},{"failures":[],"tindex":"10a2da6b-13b3-11e5-bb41-09faf45b5221","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n    break;\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:86","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 1000 ; int++) {\n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n        break;\n    } \n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(java.util.Collection<? extends E>)).decorated();\n    } else if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n    } \n}"},"status":-2},{"failures":[],"tindex":"10a2da6c-13b3-11e5-bb41-657fb7f25203","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:180","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-2},{"failures":[],"tindex":"10a2da6d-13b3-11e5-bb41-33cac6d8fe90","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:245","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(E[])"},"status":-2},{"failures":[27,28,197,198,29,30,199,31,32,33,200,34,201,35,36,202,37,38,39,40,203,41,42,43,182,44],"tindex":"10a2da6e-13b3-11e5-bb41-a9a439f48fe7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:245","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsValue(java.lang.Object);\n} "},"variableMap":{"delegateMap":"this","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:252","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n            return true;\n        } \n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n}"},"status":-1},{"failures":[],"tindex":"10a3017f-13b3-11e5-bb41-cbb640ef0906","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:854","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"leftChild":"x","node":"yFormerParent","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1125","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":0},{"failures":[204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246],"tindex":"10a30180-13b3-11e5-bb41-1f3584b20c0c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:182","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> , int++) {\n    T[][int] = ((T)(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue()));\n}"},"status":-1},{"failures":[247,248,249,250,251,252,253,254,255,256,257,258],"tindex":"10a30181-13b3-11e5-bb41-85c9575cb9de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:297","type":"CtIfImpl","sourcecode":"if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"10a30182-13b3-11e5-bb41-67da90d2d1da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:61","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super E>[].int) != (org.apache.commons.collections4.Closure<? super E>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and closure arrays must be the same size\");\n} "},"status":-2},{"failures":[],"tindex":"10a30183-13b3-11e5-bb41-e5c738a4867e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:94","type":"CtIfImpl","sourcecode":"if (char != char) {\n    final int int = char ^ char;\n    return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n} "},"status":-2},{"failures":[259,260,261,262,263,264,265],"tindex":"10a30184-13b3-11e5-bb41-652ebc7d88d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1266","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final K K = ((K)(java.io.ObjectInputStream.readObject()));\n    final V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n}"},"status":-1},{"failures":[266,267,268,269,270,271,272,273,274,275,276,277],"tindex":"10a30185-13b3-11e5-bb41-c7cb89e4a2d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:95","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.set(0)"},"variableMap":{"orderingBits":"valueSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:359","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    if (int == (-1)) {\n        int = int;\n        E = java.util.ArrayList<E>.get(int);\n    } else {\n        final E E = java.util.ArrayList<E>.get(int);\n        if ((java.util.Comparator<? super E>) == null) {\n            throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n        } \n        if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n            E = E;\n            int = int;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"10a30186-13b3-11e5-bb41-2b92805352ed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:109","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>.(hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"10a32897-13b3-11e5-bb41-23fc238f34be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1054","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"siblingNode":"currentNode","currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1022","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[45,46,47,48,53,54,55,56,57,58,50,51,52,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,108,109,110,111,105,106,107,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141],"tindex":"10a32898-13b3-11e5-bb41-a3137932afe9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1036","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"siblingNode":"currentNode","currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:906","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[73,77],"tindex":"10a32899-13b3-11e5-bb41-0553cc97d26c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:972","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1167","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[278,279,280,281,282,201,283,284,285,286,287,288,39,289,290,40,291,292,154,155,165],"tindex":"10a3289a-13b3-11e5-bb41-b5954796dc06","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:184","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n} "},"status":-1},{"failures":[],"tindex":"10a34fab-13b3-11e5-bb41-6705ac938ce9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:676","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} "},"variableMap":{"current":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        return null;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[293,294],"tindex":"10a34fac-13b3-11e5-bb41-fb1f992955ea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:75","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.collections4.FunctorException(\"Transformer must return an instanceof Boolean, it was a null object\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:79","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The prototype must be cloneable via a public clone method\")"},"status":-1},{"failures":[295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326],"tindex":"10a34fad-13b3-11e5-bb41-fd4991096eac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:438","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    java.lang.Object[][int++] = E;\n}"},"status":-1},{"failures":[327],"tindex":"10a34fae-13b3-11e5-bb41-81143a81fb80","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:189","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends J, ? extends U> java.util.Map.Entry<? extends J, ? extends U> : java.util.Map<? extends J, ? extends U>.entrySet()) {\n    java.util.Map<K, V>.put(org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>.transformKey(java.util.Map.Entry<? extends J, ? extends U>.getKey()), org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>.transformValue(java.util.Map.Entry<? extends J, ? extends U>.getValue()));\n}"},"status":-1},{"failures":[],"tindex":"10a34faf-13b3-11e5-bb41-c7b1cee53304","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1164","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"10a34fb0-13b3-11e5-bb41-bd8907078cbd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"status":-2},{"failures":[],"tindex":"10a34fb1-13b3-11e5-bb41-6d89433caa1c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"threshold"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n} else {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n    (int)++;\n    for (int int = int - 1 ; int >= 0 ; int--) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n            do {\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n        } \n    }\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n}"},"status":0},{"failures":[328,329,330,331,332,333,334,335,336,337,338,339,340],"tindex":"10a34fb2-13b3-11e5-bb41-6f5e5eb4a2e2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"hasNext","nextCalled":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:195","type":"CtIfImpl","sourcecode":"if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n} "},"status":-1},{"failures":[],"tindex":"10a376c3-13b3-11e5-bb41-db96592813d8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1330","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(size())) {\n    return false;\n} "},"variableMap":{"other":"other","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1334","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    try {\n        for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    } catch (final java.lang.ClassCastException ex) {\n        return false;\n    } catch (final java.lang.NullPointerException ex) {\n        return false;\n    }\n} "},"status":0},{"failures":[341,342,343,344,345,346,347,348,349,350,351,352,353,354],"tindex":"10a376c4-13b3-11e5-bb41-9943d2afc7d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:242","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getValue() : null"},"variableMap":{"entry":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:428","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        if ((!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K))) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        } else {\n            return null;\n        }\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-1},{"failures":[],"tindex":"10a376c5-13b3-11e5-bb41-095ba77caea8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"10a376c6-13b3-11e5-bb41-b3c89a9a6ae9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:432","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<K>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:467","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator();\n} "},"status":-2},{"failures":[],"tindex":"10a376c7-13b3-11e5-bb41-bf0e5044692a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:102","type":"CtIfImpl","sourcecode":"if (java.util.HashSet<E>.contains(E)) {\n    java.util.List<E>.add(E);\n    java.util.HashSet<E>.remove(E);\n} "},"status":-2},{"failures":[355,356,357,358,359,360,361,362,363,364,365,366,289,367,164],"tindex":"10a376c8-13b3-11e5-bb41-51f326986d39","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:333","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-1},{"failures":[349],"tindex":"10a376c9-13b3-11e5-bb41-ed33e84b8536","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return null;\n} "},"variableMap":{"lengthInBits":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1142","type":"CtIfImpl","sourcecode":"if ((int >= 0) && (int < int)) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"10a3c4ea-13b3-11e5-bb41-719095658bfd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1330","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(size())) {\n    return false;\n} "},"variableMap":{"other":"other","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1334","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    try {\n        for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    } catch (final java.lang.ClassCastException ex) {\n        return false;\n    } catch (final java.lang.NullPointerException ex) {\n        return false;\n    }\n} "},"status":0},{"failures":[],"tindex":"10a3c4eb-13b3-11e5-bb41-196475fb602d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1040","type":"CtIfImpl","sourcecode":"if (K == null) {\n    break;\n} "},"status":-2},{"failures":[],"tindex":"10a3c4ec-13b3-11e5-bb41-054ee0b97890","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1056","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[368],"tindex":"10a3c4ed-13b3-11e5-bb41-69658cc6acb4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1151","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(java.lang.Object));\n    java.util.Map<K, V>.put(java.util.Map.Entry<K, V>.getKey(), java.util.Map.Entry<K, V>.getValue());\n}"},"status":-1},{"failures":[369,370],"tindex":"10a3c4ee-13b3-11e5-bb41-ad1987cb12f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) < (java.util.Collection<?>.size())) {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n} else {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n}"},"variableMap":{"coll2":"a","coll1":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:465","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) > (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[0,1,371,2,3,4,5,6,7,8,9,372,247,249,250,252,253,255,373,374,257,258],"tindex":"10a3c4ef-13b3-11e5-bb41-0fe6addb724f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:156","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Collection<E>.iterator());\n}"},"status":-1},{"failures":[],"tindex":"10a3c4f0-13b3-11e5-bb41-21cbabbc9dfe","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:972","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:649","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"10a3ec01-13b3-11e5-bb41-e34606cda0f5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:398","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1336","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"status":0},{"failures":[],"tindex":"10a3ec02-13b3-11e5-bb41-23a1a571823a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1218","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"10a3ec03-13b3-11e5-bb41-f736eac2b4fb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"from":"x","to":"x","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1163","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[147,148,149,150,151,152],"tindex":"10a3ec04-13b3-11e5-bb41-35f9177fa4bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtIfImpl","sourcecode":"if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n    if ((int[][int]) <= (int[][(int + int)])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[],"tindex":"10a3ec05-13b3-11e5-bb41-37fddf7ac757","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:991","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"dataElement":"dataElement","deletedNode":"rval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[375,376],"tindex":"10a3ec06-13b3-11e5-bb41-914fc702ba63","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:158","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot add to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:222","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    boolean |= org.apache.commons.collections4.set.ListOrderedSet<E>.remove(java.lang.Object);\n}"},"status":-1},{"failures":[],"tindex":"10a3ec07-13b3-11e5-bb41-75cb8e3f9035","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:573","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"10a3ec08-13b3-11e5-bb41-49681a327a9b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:314","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"variableMap":{"node":"node","it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:355","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-2},{"failures":[327,377,378,379,380,381,382,383,384,385,386,387,388,389,29,357,390,391,392,393,394,30,395,396,397,398,399,400,401,402,403,404,405,406,407,199,408,409,31,410,411,412,413,414,415,416,417,418,358,419,420,421,422,423,424,425,24,426,25,427,428,429,430,26,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,359,449,450,451,452,262,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,360,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,201,499,500,501,38,502,503,504,505,506,286,287,507,288,39,289,508,509,290,510,511,40,512,513,291,292,514,515,516,517,518,519,520,521,522,203,523,524,41,525,526,527,528,529,530,531,532,533,367,534,535,536,537,538,539,154,171],"tindex":"10a41319-13b3-11e5-bb41-cf1a3ef9e0d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"proposedCapacity","index":"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY","beyond":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"status":-1},{"failures":[540,541,542],"tindex":"10a4131a-13b3-11e5-bb41-dd45310325a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.ListOrderedSet:240","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.ListOrderedSet<E>.clear()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:239","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.Object>.size()) == 0) {\n    org.apache.commons.collections4.set.ListOrderedSet<E>.clear();\n} else {\n    for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.ListOrderedSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n        if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n        } \n    }\n}"},"status":-1},{"failures":[543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,341,342,343,578,579,580,581,582,583,584,585,586,587,588,344,589,590,591,592,593,594,345,346,595,347,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,350,612,613,614,615,616,617,351,352,618,353,619,620,621],"tindex":"10a4131b-13b3-11e5-bb41-432b669f89d6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:399","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet();\n} "},"status":-1},{"failures":[622,623],"tindex":"10a4131c-13b3-11e5-bb41-595f7b0dd184","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super I, ? extends O> == null) {\n    throw new java.lang.NullPointerException(\"Transformer must not be null\");\n} "},"variableMap":{"transform":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.TransformedSet:82","type":"CtForEachImpl","sourcecode":"for (final E E : E[]) {\n    org.apache.commons.collections4.set.TransformedSet<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}"},"status":-1},{"failures":[],"tindex":"10a4131d-13b3-11e5-bb41-8f0c5ffa5aa0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:352","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-2},{"failures":[624,12,625,626,627,628,629],"tindex":"10a43a2e-13b3-11e5-bb41-4b2581a0f7aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:92","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\");\n} "},"variableMap":{"canRemove":"chainExhausted"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:85","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    boolean = true;\n} "},"status":-1},{"failures":[630,631,632,633,249,250,251,252,253,255,373,256,374,257,258,634,635],"tindex":"10a43a2f-13b3-11e5-bb41-1fe66b336105","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Set) {\n    final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(java.lang.Object));\n    return ((java.util.Set<?>.size()) == org.apache.commons.collections4.set.CompositeSet<E>.(size())) && (java.util.Set<?>.containsAll(this));\n} "},"status":-1},{"failures":[636,637,638,639],"tindex":"10a43a30-13b3-11e5-bb41-4f6281c1eab5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:509","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[640,641,642,643,644,645,646,647,648,649,650,651],"tindex":"10a43a31-13b3-11e5-bb41-45e930e8b02e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:121","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.TransformedSortedSet<E>.getSortedSet().last()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:117","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.TransformedSortedSet<E>.getSortedSet().first()"},"status":-1},{"failures":[],"tindex":"10a43a32-13b3-11e5-bb41-b5d2b06efa39","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:720","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"to":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1301","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"status":-2},{"failures":[652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,302,303],"tindex":"10a43a33-13b3-11e5-bb41-47dc1193615d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:53","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:188","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().size()"},"status":-1},{"failures":[328,329,330,331,332,333,334,335,336,337,338,339,340],"tindex":"10a43a34-13b3-11e5-bb41-99e4a209f872","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:198","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>)"},"variableMap":{"this":"this","currentIterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:195","type":"CtIfImpl","sourcecode":"if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n} "},"status":-1},{"failures":[684],"tindex":"10a43a35-13b3-11e5-bb41-05b2e9216055","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:320","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<E>.set(int, null)"},"variableMap":{"values":"list","i":"removeIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:219","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.remove(int)"},"status":-1},{"failures":[],"tindex":"10a43a36-13b3-11e5-bb41-0b03fcd4d083","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:964","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"dataElement":"dataElement","deletedNode":"leftChild","replacement":"leftChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:854","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737],"tindex":"10a46147-13b3-11e5-bb41-156129e1f4c8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"bound"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s before the start of the array. \"));\n} "},"status":-1},{"failures":[],"tindex":"10a46148-13b3-11e5-bb41-c932b5bb0c37","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:612","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:852","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"10a46149-13b3-11e5-bb41-5dee5ae48cce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:408","type":"CtIfImpl","sourcecode":"if (java.lang.Boolean == null) {\n    java.lang.Boolean = java.lang.Boolean;\n} "},"variableMap":{"answer":"key3","defaultValue":"key3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:767","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.hasNext()) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.next();\n    if (((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 3) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)))) {\n        org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"10a4614a-13b3-11e5-bb41-09cf4b156572","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:964","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"dataElement":"dataElement","deletedNode":"deletedNode","replacement":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:987","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"10a4614b-13b3-11e5-bb41-65aa71b3ea99","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"beginIndex2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:78","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final int int = int + int;\n    final int int = int + int;\n    if (int >= int) {\n        char = 0;\n    } else {\n        char = java.lang.String.charAt(int);\n    }\n    if ((java.lang.String == null) || (int >= int)) {\n        char = 0;\n    } else {\n        char = java.lang.String.charAt(int);\n    }\n    if (char != char) {\n        final int int = char ^ char;\n        return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n    } \n    if (char != 0) {\n        boolean = false;\n    } \n}"},"status":-2},{"failures":[217,738,238],"tindex":"10a4614c-13b3-11e5-bb41-bb5731b35ecc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:224","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E>.isEmpty()) {\n    return false;\n} "},"variableMap":{"c":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:159","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (!org.apache.commons.collections4.list.AbstractLinkedList<E>.(contains(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"10a4614d-13b3-11e5-bb41-09b1e16780e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:274","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext() ; ) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    if ((java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get()) == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } \n}"},"status":-2},{"failures":[739,740,741,742,743,744,667,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766],"tindex":"10a4614e-13b3-11e5-bb41-9daff0e8319f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:83","type":"CtInvocationImpl","sourcecode":"java.util.SortedSet<E>.clear()"},"variableMap":{"set":"uniqueSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:488","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>) == null) {\n    java.util.Set<E> = org.apache.commons.collections4.set.UnmodifiableSet.<E>unmodifiableSet(java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet());\n} "},"status":-1},{"failures":[349],"tindex":"10a4885f-13b3-11e5-bb41-0110a5b3cfa7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return null;\n} "},"variableMap":{"lengthInBits":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1142","type":"CtIfImpl","sourcecode":"if ((int >= 0) && (int < int)) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"10a48860-13b3-11e5-bb41-092c39dc584d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1922","type":"CtReturnImpl","sourcecode":"return boolean[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]"},"variableMap":{"blackColor":"item","dataElement":"item"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:247","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.set.CompositeSet<E>.(contains(java.lang.Object)) == false) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"10a48861-13b3-11e5-bb41-f74b44a2afd1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:917","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry());\n} else {\n    return null;\n}"},"variableMap":{"root":"found","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1022","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} "},"status":0},{"failures":[],"tindex":"10a48862-13b3-11e5-bb41-7d2b4ccd4981","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"10a48863-13b3-11e5-bb41-f1e8ab243871","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:345","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValues<V>(this);\n} "},"status":-2},{"failures":[767,576,577,578,579,581,582,583,584,585,586,587,588,344,768,769,770],"tindex":"10a48864-13b3-11e5-bb41-7536689c5fe4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:231","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[639,636,637,638],"tindex":"10a48865-13b3-11e5-bb41-a16392a949f9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:668","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":98,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}