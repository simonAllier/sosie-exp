{"failureDictionary":{"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":832,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":487,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":134,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":329,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":392,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":427,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":869,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":1016,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":848,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":36,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":590,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx1":985,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":986,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":987,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":0,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":602,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":65,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":8,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":64,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":954,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":319,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":282,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":108,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":416,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":321,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":608,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":994,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":90,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":893,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":27,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":359,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":686,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":433,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":470,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":802,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":929,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":488,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":910,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":502,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":845,"org.apache.commons.collections4.ListUtilsTest.testLazyList":1038,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":371,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":236,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":861,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEqualsNull":1043,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":641,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":1058,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":538,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":623,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":1055,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":365,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":892,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":540,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":396,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":143,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":411,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":773,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":696,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":150,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":285,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":350,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":333,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":317,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":417,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":1063,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":719,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":943,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":517,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":625,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":713,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":324,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":698,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":594,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":978,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":283,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":84,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":899,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":79,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":474,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":443,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":298,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":444,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":955,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":445,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":579,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":712,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":759,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":947,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":638,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":745,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":1061,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":426,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":546,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":751,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":604,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":932,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":703,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":205,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":335,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":676,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":645,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":936,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":830,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":129,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":862,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":885,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":293,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":964,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":820,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":370,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":229,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":123,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":332,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":840,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":214,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":270,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":277,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":271,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":272,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFirstKey":1056,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":821,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":239,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":147,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":917,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":735,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":628,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":601,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":619,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":234,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":235,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":233,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":630,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":209,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":253,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":366,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":534,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":644,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":629,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":799,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":842,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":505,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":372,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":349,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":13,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":300,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":748,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":756,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":485,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":475,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":575,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":496,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":420,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":881,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":553,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":868,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":2,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":944,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":777,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":266,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":764,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":846,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":393,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":650,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":807,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":1020,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":175,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":607,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":489,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":490,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":491,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":591,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":738,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":855,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":816,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":542,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":103,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":523,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":873,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":374,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":346,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":968,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":204,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":43,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":375,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":533,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":468,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":908,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":635,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":188,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":244,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":477,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":741,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":785,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":126,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":905,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":752,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":597,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":132,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":829,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":116,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":849,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":587,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":453,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":583,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":1054,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":330,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":102,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToString":1019,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":586,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":326,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":699,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":813,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":983,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":228,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":692,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":952,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":117,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":386,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":163,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":268,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":5,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":782,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":551,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":240,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":565,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":627,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testAddThenRemove":1,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":924,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":890,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":115,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":618,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testNextKey":876,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":309,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":658,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":771,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":286,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":937,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":383,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":9,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":305,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":798,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":891,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":539,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":500,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":345,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":379,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":210,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":288,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":320,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":111,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":358,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":991,"org.apache.commons.collections4.map.LinkedMapTest.testReset":369,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":550,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":279,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":4,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":415,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":226,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":560,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":473,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":281,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":896,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":659,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":904,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":669,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":888,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":162,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":1059,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":758,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":806,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":41,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":294,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":678,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":72,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":180,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":1030,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":32,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":791,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":831,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":119,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":728,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":191,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":781,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":146,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSimpleSerialization":854,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":75,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":91,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":299,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":325,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":793,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":81,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":717,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":926,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":407,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":3,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":171,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":451,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":768,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":258,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":722,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":304,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":432,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":815,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":825,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":656,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":227,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":522,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":144,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":838,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":425,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":817,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":314,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":173,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":562,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":315,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":766,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":316,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":909,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":1005,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":933,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":611,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":486,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":951,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":66,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":715,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":165,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":259,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":949,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":252,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":414,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":122,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":267,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":137,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":337,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":880,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":882,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":166,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":23,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":923,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":1052,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":856,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":100,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":57,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueCompatibility":1008,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":31,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":343,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":884,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":401,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":697,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":400,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":402,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":421,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":238,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":725,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":860,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":378,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":693,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":454,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":469,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":578,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":381,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":581,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":52,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":506,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":1014,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":1004,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":1003,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":19,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":1000,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":999,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":1002,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":1001,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":996,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":413,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":998,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":412,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":997,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":800,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":368,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testNextKey":874,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":950,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":466,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":761,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":457,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":76,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":484,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":593,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":1010,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":311,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":26,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":312,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":497,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":264,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":313,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":580,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":461,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":460,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":459,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":287,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":812,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":536,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":438,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEmptyMapCompatibility":851,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":62,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":525,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":14,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":526,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":503,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":971,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":29,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":434,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":927,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":582,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":478,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":561,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":357,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":391,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":208,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":1035,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":221,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":531,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEqualsNull":1046,"org.apache.commons.collections4.bag.CollectionBagTest.testEqualsNull":1041,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":308,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":739,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":779,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":360,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":348,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":595,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":631,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":92,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":930,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":989,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEqualsNull":1040,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":787,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":110,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":179,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":961,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":784,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":942,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":941,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":614,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":940,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSortOrder":1037,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":101,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":302,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":222,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":654,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":680,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":450,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":167,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":148,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":380,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":109,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":1051,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":336,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":363,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":6,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":51,"org.apache.commons.collections4.map.LRUMapTest.testLRU":201,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":54,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":613,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":33,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":569,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":704,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":906,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":532,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":672,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":435,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":246,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":1033,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionSize":1018,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":195,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":22,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":603,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":737,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":780,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":192,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":886,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":709,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":811,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":835,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":620,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":548,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":819,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":327,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":152,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":549,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":853,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":859,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":424,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":714,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsSelf":675,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":1017,"org.apache.commons.collections4.map.Flat3MapTest.testToString":1064,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":211,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":642,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":946,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":965,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":736,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testEmptyQueueSerialization":1012,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":73,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":663,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":250,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":269,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":894,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":596,"org.apache.commons.collections4.map.ListOrderedMapTest.testFirstKey":1057,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":913,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":1025,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":834,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":504,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":113,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":184,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":225,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":452,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":464,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":406,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":1022,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":958,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":276,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":1021,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":136,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":449,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":74,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":446,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":900,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":922,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":242,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":142,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":911,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":810,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":495,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":212,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":322,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":670,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":808,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":133,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":959,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":384,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":852,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":388,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":1053,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":220,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":390,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":55,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":59,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":194,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":297,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":1060,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testEmptyQueueCompatibility":1013,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":7,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":571,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":889,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":174,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":616,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":537,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":479,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":610,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":588,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":770,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":1050,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":307,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":544,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":458,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":295,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":624,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":774,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":605,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":664,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":682,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":106,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":310,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":754,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":419,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":733,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":554,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":70,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":995,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":56,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":280,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":681,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":518,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":689,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":797,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":223,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":430,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":984,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":182,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":914,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":340,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":617,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":742,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":543,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":237,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":207,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":521,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":156,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":362,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":387,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":112,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":190,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":902,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":216,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":634,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":701,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":509,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":776,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":541,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":903,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":422,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":734,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySet":1036,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":527,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":555,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":567,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":157,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":45,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":273,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":667,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":883,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":389,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":705,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":247,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":740,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":275,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":274,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":200,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":181,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":480,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":185,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":456,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":398,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":647,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":805,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":42,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":535,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":871,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":796,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":935,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":341,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":482,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":53,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":702,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":794,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":118,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":18,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":753,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":471,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":668,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":762,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":563,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":979,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":373,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":94,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":472,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":552,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":615,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":251,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":514,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":367,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":164,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":887,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":960,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":600,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":231,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":230,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":730,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":718,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":28,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":763,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":232,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":529,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":720,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":743,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":494,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":928,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":46,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":394,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":493,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":570,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":993,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":492,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":671,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":436,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":265,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":98,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":50,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":674,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":691,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEqualsNull":1044,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":576,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":248,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":93,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":558,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":159,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":376,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":865,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":864,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":621,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":1027,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":786,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":409,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":78,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":431,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":347,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":399,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":729,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":661,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":296,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":1009,"org.apache.commons.collections4.ListUtilsTest.testSubtract":844,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":499,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":963,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":68,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":557,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":809,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":547,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":447,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":125,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":632,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":107,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":410,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":177,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":39,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":114,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":651,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":957,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":577,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":61,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":249,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":666,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":747,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":639,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":700,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionClear":1024,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":772,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":901,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":584,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":574,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":746,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testNextKey":875,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":792,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":822,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":465,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":857,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":508,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":155,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":897,"org.apache.commons.collections4.bag.TransformedBagTest.testEqualsNull":1049,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":990,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":429,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":481,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEqualsNull":1042,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":870,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":105,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":1062,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":124,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":58,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":1006,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":37,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":841,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":760,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":921,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":767,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":626,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":11,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":573,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":219,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":21,"org.apache.commons.collections4.bag.HashBagTest.testEqualsNull":1045,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":35,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":151,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":408,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":135,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":836,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":803,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":1031,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":879,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":301,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":30,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":839,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":643,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":622,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":956,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":847,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":428,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":303,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":528,"org.apache.commons.collections4.functors.AllPredicateTest.emptyArrayToGetInstance":966,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":169,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":121,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":262,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":193,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":289,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":695,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":187,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":640,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":731,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":418,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsSelf":524,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":141,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":405,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":170,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":197,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":397,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":404,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":140,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":403,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":145,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":498,"org.apache.commons.collections4.functors.AllPredicateTest.nullArrayToGetInstance":969,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":395,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":920,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":291,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":241,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":278,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":261,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":323,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":364,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":95,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":727,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":183,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":1026,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEqualsNull":1048,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":572,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":710,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":789,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSimpleSerialization":1032,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":455,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":318,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":837,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":139,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":354,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":355,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":356,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":82,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":284,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":962,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":257,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":158,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":877,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":707,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":970,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":708,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":463,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":160,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":186,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":507,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":306,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":545,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsSelfHashCode":161,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":872,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":245,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":564,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":967,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":679,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":683,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":260,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":775,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":636,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":467,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":823,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":685,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":437,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":49,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":382,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":599,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":757,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":338,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":795,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":818,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":783,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":637,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":898,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":149,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":213,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":827,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":120,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":648,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":646,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":711,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":585,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":199,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":723,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":755,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":687,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":684,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":826,"org.apache.commons.collections4.bag.PredicatedBagTest.testEqualsNull":1047,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":519,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":196,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":483,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":168,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":83,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":765,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":339,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":530,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":769,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":1015,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":934,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":189,"org.apache.commons.collections4.CollectionUtilsTest.isFull":992,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":448,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":732,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":34,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":652,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":44,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":377,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":87,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":866,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":721,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":25,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":1023,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":15,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":215,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":677,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":716,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":130,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":706,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":254,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":520,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":423,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":516,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":655,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":649,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":824,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":592,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":843,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":96,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":559,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":24,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":895,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":127,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":690,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":660,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":1028,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":85,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":206,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":945,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":263,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":931,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":981,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":982,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":833,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx1":980,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":804,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":243,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":568,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":513,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySet":1034,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":790,"org.apache.commons.collections4.bag.TreeBagTest.testEqualsNull":1039,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":361,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsSelfHashCode":67,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":224,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":589,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":726,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":556,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":598,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":138,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":1007,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":218,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":863,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":749,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":217,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":858,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":778,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":688,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":290,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":744,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":99,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":501,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":104,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":515,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":612,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":352,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":925,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":353,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":724,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":351,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":439,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":662,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":938,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":939,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":912,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":916,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":1029,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":89,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":814,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":344,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":673,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":915,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":788,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":255,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":154,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":867,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":510,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":511,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":512,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":440,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":441,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":131,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":953,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":828,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":850,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":97,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":653,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":256,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":801,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":334,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":48,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":331,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":1011,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":342,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":973,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":972,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":919,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":974,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":176,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":60,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":202,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":878,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":948,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":128,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":918,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":153,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":988,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":16,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":566,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":750,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":20,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":462,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":976,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx1":975,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":609,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":907,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":977,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":606,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":442,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":385,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":172,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":476,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":63,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":178,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":694,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":203,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":633,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":292,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":328,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":657,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":665,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":198},"transformations":[{"failures":[0],"tindex":"003bb261-13a2-11e5-87f3-f54fece82742","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:958","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n}"},"variableMap":{"root":"previous","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:726","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[1],"tindex":"003bd972-13a2-11e5-87f3-cb2e9c6865cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:547","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    throw new java.util.ConcurrentModificationException(\"Cursor closed\");\n} "},"variableMap":{"valid":"validForUpdate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} "},"status":-1},{"failures":[],"tindex":"003bd973-13a2-11e5-87f3-671d1583aeb1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:278","type":"CtIfImpl","sourcecode":"if (int != 0) {\n    if ((java.util.BitSet.get(int)) == true) {\n        if (int > 0) {\n            int = -1;\n        } else {\n            int = 1;\n        }\n    } \n    return int;\n} "},"variableMap":{"comparatorIndex":"i","orderingBits":"key","retval":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:167","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> , int++) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.java.lang.Object)) {\n        return int;\n    } \n}"},"status":-2},{"failures":[],"tindex":"003bd974-13a2-11e5-87f3-234c2d96c1a9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:265","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.Object>.size()) == 0) {\n    org.apache.commons.collections4.list.SetUniqueList<E>.clear();\n} else {\n    for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.SetUniqueList<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n        if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"003e7185-13a2-11e5-87f3-b1f2c3e6a961","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:414","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:221","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13],"tindex":"003e7186-13a2-11e5-87f3-917fd971e8ca","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"leastIndex","removeIndex":"leastIndex","currentIndex":"leastIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:355","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<E>.size()) ; int++) {\n    if ((java.util.BitSet.get(int)) == false) {\n        org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n    } \n    if (java.util.BitSet.get(int)) {\n        if (int == (-1)) {\n            int = int;\n            E = java.util.ArrayList<E>.get(int);\n        } else {\n            final E E = java.util.ArrayList<E>.get(int);\n            if ((java.util.Comparator<? super E>) == null) {\n                throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n            } \n            if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n                E = E;\n                int = int;\n            } \n        }\n    } \n}"},"status":-1},{"failures":[14,15,16,17,18],"tindex":"003e7187-13a2-11e5-87f3-c71dc46b32d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:108","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) == 0"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:238","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.removeNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    return true;\n} "},"status":-1},{"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,14,60,61,62,63,64,65,66,67,68,69,70,15,71,72,73,74,16,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,18,154,155,156,157,158,159,160,161,162,163],"tindex":"003e7188-13a2-11e5-87f3-13e88015dace","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"index","index":"size","beyond":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"status":-1},{"failures":[],"tindex":"003f0dc9-13a2-11e5-87f3-776db3342ec6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:276","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.Values<V>(this);\n} "},"status":-2},{"failures":[164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507],"tindex":"003f34da-13a2-11e5-87f3-29ba147901dc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:838","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"previous":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n    do {\n        final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n} "},"status":-1},{"failures":[20,49,36,508,41,42,45,46,48,116,143,130,509,135,136,139,140,142],"tindex":"003f5beb-13a2-11e5-87f3-a74a3210d3a8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"status":-1},{"failures":[],"tindex":"003f5bec-13a2-11e5-87f3-a770c8793309","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:232","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.ListOrderedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"003f5bed-13a2-11e5-87f3-a9a46f349f38","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:134","type":"CtReturnImpl","sourcecode":"return java.lang.String.startsWith(java.lang.String)"},"variableMap":{"key":"key","s1":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:229","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-2},{"failures":[510,511,512,513,514,515,516,517,518,519,520,521],"tindex":"003f5bee-13a2-11e5-87f3-ff68b7d20af9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"hasNext","nextCalled":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} "},"status":-1},{"failures":[],"tindex":"003f5bef-13a2-11e5-87f3-45344f9ccfa4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:268","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key4","next":"previous","entry":"next","key2":"key4","hashCode":"hashCode","key3":"key4","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:635","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"003f5bf0-13a2-11e5-87f3-1916d15b1087","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1016","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1322","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if (java.lang.Object == null) {\n        if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n            return false;\n        } \n    } else {\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n}"},"status":-2},{"failures":[522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845],"tindex":"003f8301-13a2-11e5-87f3-9922e0a45530","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    return true;\n} "},"status":-1},{"failures":[846,847,848],"tindex":"003f8302-13a2-11e5-87f3-5b1d1b5c6c5c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"end2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:263","type":"CtWhileImpl","sourcecode":"while ((int < int) || (int < int)) {\n    if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n        ++int;\n    } else {\n        if ((int - int) > (int - int)) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        } else {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"003f8303-13a2-11e5-87f3-0129b71fd863","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:329","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    java.util.Collection<E>.clear();\n}"},"status":-2},{"failures":[],"tindex":"003f8304-13a2-11e5-87f3-df7a1438a9f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:306","type":"CtIfImpl","sourcecode":"if (null != (java.util.List<java.util.Comparator<E>>)) {\n    int ^= java.util.List<java.util.Comparator<E>>.hashCode();\n} "},"status":0},{"failures":[],"tindex":"003f8305-13a2-11e5-87f3-6571bf5444de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:378","type":"CtForEachImpl","sourcecode":"for (java.util.Set<E> java.util.Set<E> : java.util.Set<E>[]) {\n    org.apache.commons.collections4.set.CompositeSet<E>.addComposited(java.util.Set<E>);\n}"},"status":-2},{"failures":[849,850,386,392],"tindex":"003f8306-13a2-11e5-87f3-bbb05c2d1e8a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:149","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"003f8307-13a2-11e5-87f3-0379530c8dc0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1086","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<?> != null) {\n    return java.util.Iterator<?>;\n} "},"variableMap":{"it":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:51","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Iterator<E> java.util.Iterator<E> = ((java.util.Iterator<E>)(java.util.Iterator<? extends E>));\n    return java.util.Iterator<E>;\n} "},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13],"tindex":"003f8308-13a2-11e5-87f3-2b7101f40f0c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:315","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.ArrayList<E>.set(int, java.util.Iterator<? extends E>.next());\n    java.util.BitSet.set(int);\n    return true;\n} "},"status":-1},{"failures":[851,852,853,854],"tindex":"003faa19-13a2-11e5-87f3-5316f52238c3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractSerializableListDecorator:68","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"variableMap":{"in":"stream"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1420","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    K K = ((K)(java.io.ObjectInputStream.readObject()));\n    V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.put(K, V);\n}"},"status":-1},{"failures":[],"tindex":"003faa1a-13a2-11e5-87f3-67f42554eb3e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"node":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[855],"tindex":"003faa1b-13a2-11e5-87f3-43528487573d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:172","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object.getClass().equals(java.lang.Object.getClass()))) {\n    return false;\n} "},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:228","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : org.apache.commons.collections4.set.CompositeSet<E>.getSets()) {\n    if (java.util.Set<E>.contains(java.lang.Object)) {\n        return java.util.Set<E>.remove(java.lang.Object);\n    } \n}"},"status":-1},{"failures":[],"tindex":"003faa1c-13a2-11e5-87f3-4d4be38c2fc9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1101","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || (int < (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n    break;\n} "},"status":-2},{"failures":[],"tindex":"003faa1d-13a2-11e5-87f3-790f89382539","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtIfImpl","sourcecode":"if (java.util.Map<? super I, ? extends O> == null) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:98","type":"CtIfImpl","sourcecode":"if ((java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>>.size()) == 0) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} "},"status":0},{"failures":[],"tindex":"003faa1e-13a2-11e5-87f3-e5d8128e8476","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:917","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry());\n} else {\n    return null;\n}"},"variableMap":{"root":"start","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:659","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) || (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    while (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            break;\n        } \n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} "},"status":-2},{"failures":[],"tindex":"003faa1f-13a2-11e5-87f3-ef32b11b26bf","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super C> == null) {\n    return false;\n} "},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:233","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":0},{"failures":[856,857],"tindex":"003faa20-13a2-11e5-87f3-6188cce25a21","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"index","lengthInBits":"index","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:299","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(E))) {\n    org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().add(E);\n    java.util.List<E>.add(int, E);\n} "},"status":-1},{"failures":[],"tindex":"0042b761-13a2-11e5-87f3-3b7b9c444275","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1024","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"newNode","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1301","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"status":-2},{"failures":[343],"tindex":"0042b762-13a2-11e5-87f3-a1075b7b41e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:590","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:266","type":"CtIfImpl","sourcecode":"if (java.lang.Object.equals(V)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"0042b763-13a2-11e5-87f3-6f17a432a6f4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1242","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-2},{"failures":[858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873],"tindex":"0042b764-13a2-11e5-87f3-b1191a7e7648","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:855","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"deletedNode","node":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:980","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-1},{"failures":[],"tindex":"0042b765-13a2-11e5-87f3-e500386f544d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        return null;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"parent","parent":"current","left":"right","root":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"0042b766-13a2-11e5-87f3-f3589a08f78b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"right","current":"current","tree":"current","right":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"0042b767-13a2-11e5-87f3-15ff4f15eb01","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:161","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.nextIndex();\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:194","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.previousIndex();\n} "},"status":-2},{"failures":[],"tindex":"0042b768-13a2-11e5-87f3-89bd413afdb7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:347","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1)"},"status":-2},{"failures":[874,875,876],"tindex":"0042b769-13a2-11e5-87f3-f11f73e2587c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:148","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) {\n    return null;\n} "},"status":-1},{"failures":[877,878,879,880,881,882,883,884,885,886,887,888,889,855,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912],"tindex":"0042de7a-13a2-11e5-87f3-ed998dc1a1df","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"size","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:97","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    int += java.util.Set<E>.size();\n}"},"status":-1},{"failures":[],"tindex":"0042de7b-13a2-11e5-87f3-0b94abe4c10c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"right","current":"node","tree":"right","right":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1164","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"0042de7c-13a2-11e5-87f3-fbdea57e64c0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"length":"hashCode","object":"key4"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:583","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"0042de7d-13a2-11e5-87f3-1d639eea9f58","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1609","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<O>.hasNext()) {\n    final O O = java.util.Iterator<O>.next();\n    if ((O == null) || (!(O.equals(O)))) {\n        java.util.ArrayList<O>.add(O);\n    } \n    O = O;\n}"},"status":-2},{"failures":[],"tindex":"0042de7e-13a2-11e5-87f3-c73fae454813","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:314","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":0},{"failures":[],"tindex":"0042de7f-13a2-11e5-87f3-2d53433f80a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:284","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart() ; int < (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) ; ++int) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n}"},"status":-2},{"failures":[333,334,336,337,338,340,341,343,346,347],"tindex":"0042de80-13a2-11e5-87f3-35673658ce89","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.size();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"0042de81-13a2-11e5-87f3-c7ebc8d5c20d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"variableMap":{"node":"node","this":"this","rval":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:490","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n} else {\n    while (true) {\n        final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n        if (int == 0) {\n            throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n        } else if (int < 0) {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        } else {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"00430592-13a2-11e5-87f3-cda7db46cd65","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n} else {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}"},"status":-2},{"failures":[221,302],"tindex":"00430593-13a2-11e5-87f3-b566679dc4f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1038","type":"CtWhileImpl","sourcecode":"while (true) {\n    final K K = ((K)(java.io.ObjectInputStream.readObject()));\n    if (K == null) {\n        break;\n    } \n    final V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.put(K, V);\n}"},"status":-1},{"failures":[],"tindex":"00430594-13a2-11e5-87f3-89abcc6ce709","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtIfImpl","sourcecode":"if ((java.util.List<? extends E>.size()) > (java.util.List<? extends E>.size())) {\n    java.util.List<? extends E> = java.util.List<? extends E>;\n    java.util.List<? extends E> = java.util.List<? extends E>;\n} "},"status":0},{"failures":[913,914,915,916],"tindex":"00430595-13a2-11e5-87f3-b188d758e11f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:675","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    return false;\n} "},"variableMap":{"entryKey":"value","entryValue":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:237","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.util.Map.Entry<K, java.lang.Object>> != null) {\n    for (final java.util.Map.Entry<K, java.lang.Object> java.util.Map.Entry<K, java.lang.Object> : java.util.Set<java.util.Map.Entry<K, java.lang.Object>>) {\n        if (((java.util.Collection<V>)(java.util.Map.Entry<K, java.lang.Object>.getValue())).contains(java.lang.Object)) {\n            return true;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"00430596-13a2-11e5-87f3-15ab6114019b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:584","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1139","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-2},{"failures":[846,917,847,848,918,919],"tindex":"00430597-13a2-11e5-87f3-f9a49dd9c11a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:150","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.sequence.SequencesComparator.Snake(int , int , int)"},"variableMap":{"diag":"k","start":"start1","end":"k"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:205","type":"CtIfImpl","sourcecode":"if ((int[][(int - int)]) <= (int[][int])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n} "},"status":-1},{"failures":[],"tindex":"00430598-13a2-11e5-87f3-d12fcd8cb173","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:247","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList<E>.broadcastNodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"variableMap":{"node":"node","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:221","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, E);\n}"},"status":-2},{"failures":[],"tindex":"00430599-13a2-11e5-87f3-6da3b82e5893","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:141","type":"CtReturnImpl","sourcecode":"return java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)"},"variableMap":{"a":"key","b":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:225","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":0},{"failures":[0,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943],"tindex":"0043059a-13a2-11e5-87f3-5b6a43cee80b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:88","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-1},{"failures":[944],"tindex":"0043059b-13a2-11e5-87f3-2d9ed48db318","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"index","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13],"tindex":"00432cac-13a2-11e5-87f3-ff8e24320b34","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:359","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    if (int == (-1)) {\n        int = int;\n        E = java.util.ArrayList<E>.get(int);\n    } else {\n        final E E = java.util.ArrayList<E>.get(int);\n        if ((java.util.Comparator<? super E>) == null) {\n            throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n        } \n        if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n            E = E;\n            int = int;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"00432cad-13a2-11e5-87f3-f344e8c1e004","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:115","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"00432cae-13a2-11e5-87f3-efcb4aa176b1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"index","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:542","type":"CtIfImpl","sourcecode":"if ((!boolean) && (int == (int))) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") is the size of the list.\"));\n} "},"status":-2},{"failures":[],"tindex":"00432caf-13a2-11e5-87f3-6936cb4466d1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"currentIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"status":0},{"failures":[945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,862,960,863,853],"tindex":"00432cb0-13a2-11e5-87f3-8f1dad4d2595","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:590","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1323","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"00432cb1-13a2-11e5-87f3-4b87f84d38e7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:721","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n} "},"variableMap":{"listIterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:905","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"status":0},{"failures":[],"tindex":"00432cb2-13a2-11e5-87f3-47dcd8e6ecc9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.ChainedClosure:80","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Closure<? super E>[])"},"variableMap":{"cmds":"iClosures"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedClosure:111","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> : org.apache.commons.collections4.Closure<? super E>[]) {\n    org.apache.commons.collections4.Closure<? super E>.execute(E);\n}"},"status":0},{"failures":[],"tindex":"00432cb3-13a2-11e5-87f3-03a6bd4c8d49","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:399","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet();\n} "},"status":-2},{"failures":[],"tindex":"00432cb4-13a2-11e5-87f3-61b8ff9350b1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size())) {\n    return false;\n} "},"variableMap":{"a":"coll","b":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    boolean boolean = false;\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n            boolean = true;\n        } \n    }\n    return boolean;\n} else {\n    return org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated().retainAll(null);\n}"},"status":-2},{"failures":[],"tindex":"00432cb5-13a2-11e5-87f3-61db386f29de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1263","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.UnmodifiableMap.unmodifiableMap(java.util.Map<? extends K, ? extends V>)"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:199","type":"CtReturnImpl","sourcecode":"return ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>))"},"status":0},{"failures":[],"tindex":"00432cb6-13a2-11e5-87f3-e94d8be3c2c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:925","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super O>.evaluate(O)) {\n    R.add(O);\n} "},"status":-2},{"failures":[],"tindex":"00432cb7-13a2-11e5-87f3-e92dcb10eb82","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:398","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<java.util.Map.Entry<K, V>>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"status":-2},{"failures":[961,962,963,964,965,965,966,967,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991],"tindex":"004353c8-13a2-11e5-87f3-9d0a882c6b13","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:56","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate<? super T>[])"},"variableMap":{"predicates":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"004353c9-13a2-11e5-87f3-bd70255d4e9d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size())) {\n    return false;\n} "},"variableMap":{"a":"iterable","b":"iterable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? extends C> instanceof java.util.Collection<?>) {\n    return java.util.Collection<C>.addAll(((java.util.Collection<? extends C>)(java.lang.Iterable<? extends C>)));\n} "},"status":-2},{"failures":[],"tindex":"004353ca-13a2-11e5-87f3-09f8170ac08a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"004353cb-13a2-11e5-87f3-89be395cf616","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"node","leftChild":"rightChild","dataElement":"dataElement","rootNode":"rootNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":0},{"failures":[],"tindex":"004353cc-13a2-11e5-87f3-35fdb3552903","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:615","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"parent":"y","dataElement":"dataElement","child":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[],"tindex":"004353cd-13a2-11e5-87f3-ad8fd2b4311e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"currentNode","rightChild":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[],"tindex":"004353ce-13a2-11e5-87f3-755b0c52424d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:173","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtIfImpl","sourcecode":"if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n} else {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":0},{"failures":[15,72,148],"tindex":"00437adf-13a2-11e5-87f3-bf8984a2067f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:258","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    java.util.Iterator<E>.next();\n    java.util.Iterator<E>.remove();\n}"},"status":-1},{"failures":[992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032],"tindex":"00437ae0-13a2-11e5-87f3-1d0c26492411","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"full","nextCalled":"full"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    int = boolean ? int : 0;\n} else {\n    int = (int) - (int);\n}"},"status":-1},{"failures":[1033,1034,1035,1036,1037],"tindex":"00437ae1-13a2-11e5-87f3-bb14b61534f7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate":"valuePredicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:145","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Predicate<? super V>) != null) && ((org.apache.commons.collections4.Predicate<? super V>.evaluate(V)) == false)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot add value - Predicate rejected it\");\n} "},"status":-1},{"failures":[1038],"tindex":"00437ae2-13a2-11e5-87f3-6d6d1fcd151a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.UnmodifiableList:145","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.UnmodifiableList<E>(java.util.List<E>)"},"variableMap":{"sub":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:478","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.LazyList.lazyList(java.util.List<E>, org.apache.commons.collections4.Factory<? extends E>)"},"status":-1},{"failures":[1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049],"tindex":"00437ae3-13a2-11e5-87f3-eb6a8d6dcff9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:172","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object.getClass().equals(java.lang.Object.getClass()))) {\n    return false;\n} "},"variableMap":{"obj":"object","this":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:539","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"00437ae4-13a2-11e5-87f3-938a9e18fb91","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1179","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.swapColors(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"x":"node","y":"rightChild","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":0},{"failures":[1050,1051,1052,1053,1054],"tindex":"00437ae5-13a2-11e5-87f3-3d209795042c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:115","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int[].int) ; int++) {\n    if ((((boolean[][int]) && (int < ((int[].int) - 1))) && ((int[][int]) > (int[][(int + 1)]))) || (((!(boolean[][int])) && (int > 0)) && ((int[][int]) > (int[][(int - 1)])))) {\n        if ((int[][int]) > int) {\n            int = int[][int];\n            int = int;\n        } \n    } \n}"},"status":-1},{"failures":[1055,1056,1057,1058],"tindex":"00437ae6-13a2-11e5-87f3-e7d64b822d47","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.TransformedMap:105","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.TransformedMap<K, V>.clear()"},"variableMap":{"decorated":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:167","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-1},{"failures":[1033,1034,1035,1036,1037],"tindex":"00437ae7-13a2-11e5-87f3-a390ea3b45b3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate to call must not be null\");\n} "},"variableMap":{"predicate":"keyPredicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:142","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Predicate<? super K>) != null) && ((org.apache.commons.collections4.Predicate<? super K>.evaluate(K)) == false)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot add key - Predicate rejected it\");\n} "},"status":-1},{"failures":[],"tindex":"00437ae8-13a2-11e5-87f3-d1c7f08e25f7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:841","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"rightChild","rightChild":"rightChild","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"00437ae9-13a2-11e5-87f3-e130662e465d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:162","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>"},"status":-2},{"failures":[463,464,1059,465],"tindex":"0043a1fa-13a2-11e5-87f3-6517c1b1f691","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:806","type":"CtIfImpl","sourcecode":"if (org.w3c.dom.Node == null) {\n    throw new java.lang.NullPointerException(\"Node must not be null\");\n} "},"variableMap":{"node":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"0043a1fb-13a2-11e5-87f3-e30b2e5c0f99","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:295","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ?> java.util.Map.Entry<? extends K, ?> : java.util.Map<? extends K, ?>.entrySet()) {\n    org.apache.commons.collections4.map.MultiValueMap<K, V>.put(java.util.Map.Entry<? extends K, ?>.getKey(), java.util.Map.Entry<? extends K, ?>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"0043a1fc-13a2-11e5-87f3-dddcbd199ebe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:317","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":0},{"failures":[1060,1061,1062,1063],"tindex":"0043a1fd-13a2-11e5-87f3-1ba465c2e16c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:251","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"0043a1fe-13a2-11e5-87f3-8d217c65d7f4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:675","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    return false;\n} "},"variableMap":{"entryKey":"key","entryValue":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:230","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n    return true;\n} "},"status":0},{"failures":[1064],"tindex":"0043a1ff-13a2-11e5-87f3-c39e3d84f348","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:887","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1246","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-1},{"failures":[],"tindex":"0043a200-13a2-11e5-87f3-ab054f9f3f24","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:998","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeBoolean(boolean)"},"variableMap":{"purgeValues":"removed","out":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:208","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.removeFromIndex(((C)(java.lang.Object)));\n} "},"status":-2},{"failures":[],"tindex":"0043a201-13a2-11e5-87f3-cf5bf09cd13e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:138","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} "},"status":0},{"failures":[256,262,337,343,426,432],"tindex":"0043a202-13a2-11e5-87f3-f75ceaa49e96","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"0043a203-13a2-11e5-87f3-23b0684caed0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1056","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return null;\n}"},"variableMap":{"root":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"0043a204-13a2-11e5-87f3-13056160d49c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:906","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"currentNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:499","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    }\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}