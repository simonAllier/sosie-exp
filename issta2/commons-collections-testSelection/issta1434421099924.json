{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":6,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":835,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":358,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":112,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":161,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":215,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":669,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":421,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":557,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":649,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":763,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":596,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":9,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":272,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":412,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":239,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":274,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":506,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":142,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":775,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":167,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":341,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":527,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":654,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":616,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":359,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":603,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":373,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":695,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSimpleSerialization":570,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":196,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":316,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":471,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":702,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":799,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":674,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":148,"org.apache.commons.collections4.CollectionUtilsTest.select":69,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":801,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":219,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":234,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":736,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":782,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":133,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":415,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":116,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":270,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":240,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":628,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":542,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":640,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":443,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":538,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":277,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":602,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":784,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":757,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":413,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":55,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":345,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":177,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":10,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":178,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":251,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":179,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":22,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":725,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":840,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":898,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":714,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":860,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":160,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":806,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":497,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":619,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":765,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":514,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":440,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":286,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":118,"org.apache.commons.collections4.TransformerUtilsTest.testCloneTransformer":469,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":508,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":563,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":717,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":626,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":834,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":15,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":246,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":825,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":195,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":309,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":115,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":913,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":294,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":400,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":407,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":401,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":402,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":612,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":838,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":319,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":854,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":705,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":491,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":762,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":314,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":315,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":313,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":718,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":149,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":289,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":383,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":444,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":797,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":706,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":423,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":886,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":72,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":376,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":192,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":580,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":132,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":601,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":253,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":495,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":500,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":356,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":346,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":895,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":367,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":677,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":154,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":472,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":668,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":590,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":691,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":502,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":47,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":396,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":419,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":728,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":216,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":465,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":865,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":103,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":768,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":360,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":361,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":362,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":460,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":857,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":453,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":814,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":517,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":671,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":199,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":129,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":285,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":197,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":796,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":339,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":647,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":63,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":711,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":80,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":324,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":687,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":348,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":458,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":473,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":60,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":722,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":759,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":833,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":556,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":187,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":902,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":578,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":113,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":905,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":279,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":4,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":785,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":639,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":820,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":308,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":779,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":7,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":209,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":398,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":5,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":615,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":485,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":593,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":742,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":811,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":320,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":553,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":704,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":611,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectEqualsSelf":568,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":490,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":262,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":734,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":871,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":416,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":627,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":206,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":597,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":258,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":548,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":608,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":800,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":371,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":1,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":128,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":202,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":49,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":290,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":241,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":273,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":141,"org.apache.commons.collections4.map.LinkedMapTest.testReset":194,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":810,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":409,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":425,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":426,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":238,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":592,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":424,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":306,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":550,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":689,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":344,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":680,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":411,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":59,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":872,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":752,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":561,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":724,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":817,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":247,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":771,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":108,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":880,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":534,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":848,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":83,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":446,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSimpleSerialization":437,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":252,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":682,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":278,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":882,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":672,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":540,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":610,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":230,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":99,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":591,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":185,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":731,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":388,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":844,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":257,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":166,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":533,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":829,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":546,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":307,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":516,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":911,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":159,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":822,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":267,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":101,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":888,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":268,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":730,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":36,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":64,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":269,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":431,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":620,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":486,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":357,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":26,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":841,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":93,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":389,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":24,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":382,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSerializeDeserializeThenCompare":573,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":237,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":397,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":120,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":475,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":94,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiPut":484,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":606,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":576,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorIsSerializable":567,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":675,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":126,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":686,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":224,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":783,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":223,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":225,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":155,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":318,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":679,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":455,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":201,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":792,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":188,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":340,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":897,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":204,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":900,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":377,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":67,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":625,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":35,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":34,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":693,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":31,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":30,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":33,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":32,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":27,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":29,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":236,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":28,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":235,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":815,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":650,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":151,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":25,"org.apache.commons.collections4.ListUtilsTest.testSelect":66,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":685,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":74,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":333,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":501,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":191,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":355,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":50,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":756,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":264,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":265,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":368,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":266,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":394,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":899,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":336,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":335,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":334,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":417,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":637,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":819,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":523,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":172,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":518,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":519,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":374,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":168,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":613,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":901,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEqualsAfterSerialization":559,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":349,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":551,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":140,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":644,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":642,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":214,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":288,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":301,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":522,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":622,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":261,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":858,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":741,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":143,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":131,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":448,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":707,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":617,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":877,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":107,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":875,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":636,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":635,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":488,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":634,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":70,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":255,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":562,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":302,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":869,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":510,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":184,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":95,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":203,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":575,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":119,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":146,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":594,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsContract":571,"org.apache.commons.collections4.map.LRUMapTest.testLRU":282,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":487,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":789,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":891,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":61,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":795,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":753,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":169,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":326,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":566,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":87,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":503,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":764,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":856,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":84,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":564,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":839,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":454,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":818,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":699,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":808,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":824,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":280,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":809,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":436,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":158,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":539,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":51,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsSelf":770,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":661,"org.apache.commons.collections4.map.Flat3MapTest.testToString":581,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":291,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":716,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":21,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":663,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":855,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":755,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":380,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":399,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":758,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":585,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":535,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":375,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":76,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":305,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":186,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":331,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":229,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":13,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":406,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":183,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":470,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionSize":48,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":180,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":56,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":605,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":322,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":598,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":44,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":43,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":532,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":366,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":292,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":683,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":275,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":504,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":530,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":14,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":207,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":211,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":68,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":577,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":300,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":582,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":213,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":583,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":86,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":250,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":555,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":595,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":102,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":461,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":451,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":350,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":696,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":733,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":906,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":574,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":260,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":804,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":329,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":248,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":492,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":737,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":766,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":747,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":512,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":263,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":498,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":153,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":852,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":812,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":410,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":511,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":776,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":885,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":303,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":164,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":110,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":586,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":123,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":638,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":489,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":859,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":664,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":65,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":803,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":317,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":287,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":145,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":210,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":82,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":58,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":296,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":481,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":710,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":46,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":787,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":739,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":802,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":156,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":476,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":478,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":853,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":525,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":794,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":889,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":3,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":646,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":403,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":750,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":212,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":790,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":327,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":544,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":405,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEmptyListSort":565,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":404,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":92,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":109,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testSerializeDeserializeThenCompare":589,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":351,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":77,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":190,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":221,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":52,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":863,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":529,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":2,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":798,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":434,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":630,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":623,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":884,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":124,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":353,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":474,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":788,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":462,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":342,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":690,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":751,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":445,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":467,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":193,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":343,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":428,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":524,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":698,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":381,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":429,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":643,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":150,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":432,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":111,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":16,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":761,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":311,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":310,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":483,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":861,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":427,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":541,"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":655,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":684,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":727,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":312,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":520,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":545,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":842,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":365,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":614,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":39,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":217,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":364,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":892,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":363,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsSelfHashCode":572,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":447,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":170,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":395,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":507,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":778,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":896,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":688,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":378,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":549,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":200,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":430,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":700,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":876,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":232,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":165,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":130,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":222,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":849,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":745,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":249,"org.apache.commons.collections4.ListUtilsTest.testSubtract":694,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals":560,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":370,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicBad":468,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":531,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":813,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":807,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":181,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":708,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":233,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":105,"org.apache.commons.collections4.list.TreeListTest.testListEquals":673,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":600,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":624,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":866,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":12,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":442,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":909,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":379,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":749,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":720,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":715,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":786,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":735,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":57,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":903,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":719,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":894,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":881,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":678,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":826,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":332,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiPut":482,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":666,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":163,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":352,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":670,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":37,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":558,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":726,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":607,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":743,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":703,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":599,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":18,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":893,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":648,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":667,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":665,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":299,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":584,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":231,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":837,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":816,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":254,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":912,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":494,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":11,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":701,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":420,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":162,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":256,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":464,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":97,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":392,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":85,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":242,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":781,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":79,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":493,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":850,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":152,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsSelf":793,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":228,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":89,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":98,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":220,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":227,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":226,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":369,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":218,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":604,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":244,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":321,"org.apache.commons.collections4.collection.CompositeCollectionTest.testSize":41,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":408,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":276,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":391,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":147,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":847,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":681,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":75,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":459,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":536,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":547,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":189,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":271,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":910,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":137,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":138,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":139,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":414,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":387,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":450,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":658,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":791,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":330,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":78,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":418,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":259,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":805,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":435,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":325,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":552,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":441,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":463,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":772,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":390,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":738,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":71,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":712,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":656,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":338,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":827,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":774,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":171,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":205,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":505,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":723,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":121,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":823,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":883,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":874,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":713,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":657,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":54,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":676,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":293,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":831,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":864,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":862,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":537,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":904,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":91,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":845,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":499,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":513,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":773,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":830,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":88,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":354,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":439,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":96,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":729,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":122,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":521,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":732,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":621,"org.apache.commons.collections4.CollectionUtilsTest.isFull":38,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":81,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":182,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":851,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":867,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":198,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":843,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":295,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEqualsNull":569,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":509,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":466,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":515,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":384,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":157,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":870,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":873,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":828,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":908,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":73,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":887,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":692,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":777,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":744,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":20,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":328,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":393,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":618,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":836,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":528,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":323,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":890,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":659,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":879,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":477,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":579,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":144,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":422,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":304,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":40,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":480,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":907,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":846,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":452,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":760,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":629,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":17,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":298,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":721,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":297,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":0,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":740,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":645,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":449,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":243,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":456,"org.apache.commons.collections4.collection.CompositeCollectionTest.testMultipleCollectionsSize":42,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":372,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":697,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":135,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":609,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":136,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":543,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":134,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":651,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":173,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":652,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":746,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":631,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":632,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":633,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":588,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":821,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":45,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":127,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":587,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":754,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":878,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":385,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":433,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":641,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":174,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":175,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":8,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":832,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":19,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":438,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":868,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":386,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":526,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":117,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":479,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":114,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":125,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":104,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":283,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":23,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":496,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":554,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":653,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":337,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":769,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":62,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":767,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":176,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":208,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":100,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":347,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":660,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":106,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":662,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":780,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":284,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":709,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":245,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":281,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":457,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":748,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":90},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"f4b95c7d-13cd-11e5-a6fb-cb5302776e65","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse = new org.apache.commons.collections4.bidimap.TreeBidiMap.Inverse();\n} "},"status":-1},{"failures":[],"tindex":"f4b95c7e-13cd-11e5-a6fb-49045d002974","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:109","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>.(hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:590","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(java.lang.Object);\n    java.lang.StringBuilder.append(int);\n    java.lang.StringBuilder.append(':');\n    java.lang.StringBuilder.append(java.lang.Object);\n    if (java.util.Iterator<E>.hasNext()) {\n        java.lang.StringBuilder.append(',');\n    } \n}"},"status":-2},{"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39],"tindex":"f4b9838f-13cd-11e5-a6fb-c7b5a579883e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"end"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:240","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"f4b98390-13cd-11e5-a6fb-83daab11faac","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:315","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    boolean |= java.util.Collection<E>.retainAll(java.util.Collection<?>);\n}"},"status":-2},{"failures":[],"tindex":"f4b98391-13cd-11e5-a6fb-039af96e196e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:919","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry());\n} else {\n    return null;\n}"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:726","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"f4bc1ba2-13cd-11e5-a6fb-03b769e355e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:810","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"tindex":"f4bc1ba3-13cd-11e5-a6fb-fbc8a0753d23","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2319","type":"CtIfImpl","sourcecode":"if ((int) != 1) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"hit":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:102","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    int += java.util.Collection<E>.size();\n}"},"status":-1},{"failures":[66,67,68,69,70,71,72,73,74],"tindex":"f4bc1ba4-13cd-11e5-a6fb-e13160767225","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:863","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:519","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) != (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"f4bc1ba5-13cd-11e5-a6fb-e9568db1d4ac","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"numberOfNodesToCache"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:219","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    org.apache.commons.collections4.list.NodeCachingLinkedList<E>.addNodeToCache(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-2},{"failures":[75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418],"tindex":"f4bc1ba6-13cd-11e5-a6fb-a374386baa4e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:208","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n} "},"variableMap":{"entry":"entry","header":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n    do {\n        final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n} "},"status":-1},{"failures":[419,420,421],"tindex":"f4bc42b7-13cd-11e5-a6fb-f3938d16ea4f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:263","type":"CtWhileImpl","sourcecode":"while ((int < int) || (int < int)) {\n    if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n        ++int;\n    } else {\n        if ((int - int) > (int - int)) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        } else {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        }\n    }\n}"},"status":-1},{"failures":[422,423,424,425,426,427,428,429,126,129],"tindex":"f4bc42b8-13cd-11e5-a6fb-3bea81b2ab54","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:217","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = java.lang.Object.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n        case 2 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n        case 1 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n    }\n} "},"status":-1},{"failures":[45,47,52,54,55,57,58,59,60,62,63,64],"tindex":"f4bc42b9-13cd-11e5-a6fb-e55a57221b3c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:170","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.collection.CompositeCollection<E>.iterator() ; java.util.Iterator<E>.hasNext() ; int++) {\n    java.lang.Object[][int] = java.util.Iterator<E>.next();\n}"},"status":-1},{"failures":[],"tindex":"f4bc42ba-13cd-11e5-a6fb-af4b5de31968","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:83","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"status":-2},{"failures":[],"tindex":"f4bc42bb-13cd-11e5-a6fb-9ff5d1526153","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:333","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"variableMap":{"object":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:221","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"f4bc42bc-13cd-11e5-a6fb-11157d89d4e9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"f4bc69cd-13cd-11e5-a6fb-79eb7431639b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl","sourcecode":"boolean = boolean || boolean"},"variableMap":{"added":"allNull","changed":"allNull"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:100","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":0},{"failures":[],"tindex":"f4bc69ce-13cd-11e5-a6fb-65e3ff7060ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n} else {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[430,431,7,8,9,10,11,12,13,432,14,15,16,17,433,434,435,436,437,438,439,20,21,22,23,24,25,440,26],"tindex":"f4bc69cf-13cd-11e5-a6fb-512b76ac89fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:854","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"leftChild":"rval","node":"rval","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[441,442],"tindex":"f4bc69d0-13cd-11e5-a6fb-4ddd6476cf62","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"index","newCapacity":"index","proposedCapacity":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:255","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    int++;\n} else {\n    int = org.apache.commons.collections4.map.ListOrderedMap<K, V>.(indexOf(java.util.Map.Entry<? extends K, ? extends V>.getKey())) + 1;\n}"},"status":-1},{"failures":[],"tindex":"f4bc69d1-13cd-11e5-a6fb-7fa1683f70a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:193","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    (int)++;\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n        throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n    } \n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n} else if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n} "},"variableMap":{"entry":"entry","modCount":"newCapacity","before":"entry","header":"entry","after":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:642","type":"CtDoImpl","sourcecode":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null )"},"status":-2},{"failures":[],"tindex":"f4bc69d2-13cd-11e5-a6fb-6573be64f6b6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:98","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} "},"status":-2},{"failures":[],"tindex":"f4bc69d3-13cd-11e5-a6fb-355c95b2299a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:702","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"rval":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:507","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"f4bc90e4-13cd-11e5-a6fb-6bafde110084","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:177","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        int += org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int;\n    }\n}"},"status":-2},{"failures":[443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460],"tindex":"f4bc90e5-13cd-11e5-a6fb-9f7f97179edf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:467","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        @java.lang.SuppressWarnings(value = \"unchecked\")\n        final T T = ((T)(E));\n        T[][int++] = T;\n    }\n}"},"status":-1},{"failures":[15,16,17],"tindex":"f4bc90e6-13cd-11e5-a6fb-334071fcb231","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"rval","leftChild":"rval","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:684","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"f4bc90e7-13cd-11e5-a6fb-49ca3674e1b4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:757","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[461,462,463,464,465,466,467],"tindex":"f4bc90e8-13cd-11e5-a6fb-9f9546fb1364","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1394","type":"CtReturnImpl","sourcecode":"return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false"},"variableMap":{"object":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:153","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag<E>.(getCount(java.lang.Object)) < (org.apache.commons.collections4.Bag<?>.getCount(java.lang.Object))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"f4bc90e9-13cd-11e5-a6fb-e3221da77d87","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:582","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"p":"h","parent":"h","left":"predecessor","h":"p","right":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[468,469],"tindex":"f4bc90ea-13cd-11e5-a6fb-a7fc8ecbf946","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:60","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ConstantFactory.<T>constantFactory(null)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:67","type":"CtTryImpl","sourcecode":"try {\n    T.getClass().getConstructor(new java.lang.Class<?>[]{ T.getClass() });\n    return new org.apache.commons.collections4.functors.InstantiateFactory<T>(((java.lang.Class<T>)(T.getClass())) , new java.lang.Class<?>[]{ T.getClass() } , new java.lang.Object[]{ T });\n} catch (final java.lang.NoSuchMethodException ex2) {\n    if (T instanceof java.io.Serializable) {\n        return ((org.apache.commons.collections4.Factory<T>)(new org.apache.commons.collections4.functors.PrototypeFactory.PrototypeSerializationFactory<java.io.Serializable>(((java.io.Serializable)(T)))));\n    } \n}"},"status":-1},{"failures":[470],"tindex":"f4bcb7fb-13cd-11e5-a6fb-874bbbe76fbb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:175","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"size":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1348","type":"CtWhileImpl","sourcecode":"while (java.util.Enumeration<?>.hasMoreElements()) {\n    int++;\n    java.util.Enumeration<?>.nextElement();\n}"},"status":-1},{"failures":[],"tindex":"f4bcb7fc-13cd-11e5-a6fb-b3a2d613e6fa","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(java.lang.Object);\n} "},"variableMap":{"delegateMap":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":0},{"failures":[40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,62,63,64,65],"tindex":"f4bcb7fd-13cd-11e5-a6fb-9d1cfe6ffc11","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"size","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:102","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    int += java.util.Collection<E>.size();\n}"},"status":-1},{"failures":[285,286],"tindex":"f4bcb7fe-13cd-11e5-a6fb-71ccdf4b4ca4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"removeLRUEntry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:251","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    boolean = true;\n    break;\n} "},"status":-1},{"failures":[471,472,473,474],"tindex":"f4bcb7ff-13cd-11e5-a6fb-07a8d85c3e3e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"variableMap":{"isLocked":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:145","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[475],"tindex":"f4bcb800-13cd-11e5-a6fb-99c3e1544fa3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:191","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    java.lang.Object[][int++] = E;\n}"},"status":-1},{"failures":[],"tindex":"f4bcb801-13cd-11e5-a6fb-69ebe4cf0bec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:432","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<K>emptyOrderedIterator();\n} "},"status":-2},{"failures":[],"tindex":"f4bcb802-13cd-11e5-a6fb-cf7573a27591","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"f4bcb803-13cd-11e5-a6fb-c5695b144b61","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.AbstractSerializableSetDecorator:68","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[],"tindex":"f4bcdf14-13cd-11e5-a6fb-63593f5e917f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:582","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"p":"right","parent":"right","left":"predecessor","h":"right","right":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:601","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"f4bcdf15-13cd-11e5-a6fb-6da2fb578494","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:373","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.TreeBidiMap.KeyView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"f4bcdf16-13cd-11e5-a6fb-4d2fa074e113","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:56","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate<? super T>[])"},"variableMap":{"predicates":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"f4bcdf17-13cd-11e5-a6fb-756fab8ee8c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:526","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"child","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:615","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[476,477,478,479,480,481],"tindex":"f4bcdf18-13cd-11e5-a6fb-e11a208e5409","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.PredicatedMap:146","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cannot add value - Predicate rejected it\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:98","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"f4bcdf19-13cd-11e5-a6fb-d7457b428eba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"f4bcdf1a-13cd-11e5-a6fb-1d6b764ed367","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":0},{"failures":[],"tindex":"f4bcdf1b-13cd-11e5-a6fb-dd23fc4f7705","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:345","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.Flat3Map<K, V>.convertToMap()"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:134","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    final java.util.Collection<K> java.util.Collection<K> = org.apache.commons.collections4.CollectionUtils.intersection(this.java.util.Map<K, V>[][int].keySet(), java.util.Map<K, V>.keySet());\n    if ((java.util.Collection<K>.size()) != 0) {\n        if ((this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n            throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n        } \n        this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(this, this.java.util.Map<K, V>[][int], java.util.Map<K, V>, java.util.Collection<K>);\n    } \n}"},"status":-2},{"failures":[],"tindex":"f4bcdf1c-13cd-11e5-a6fb-afea7d3c2d9f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:168","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.java.lang.Object)) {\n    return int;\n} "},"status":-2},{"failures":[482,483,484,485],"tindex":"f4bd062d-13cd-11e5-a6fb-056e4c3b3b2e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:172","type":"CtIfImpl","sourcecode":"if (java.util.Map<V, K>.containsKey(V)) {\n    java.util.Map<K, V>.remove(java.util.Map<V, K>.get(V));\n} "},"status":-1},{"failures":[486,487,488,461,489,490,491,492,443,493,471,494,444,495,496,497,462,498,499,500,501,445,502,503,446,504,447,448,505,506,507,508,509,463,510,511,512,513,449,514,515,450,516,517,518,519,464,520,521,522,523,451,524,472,525,452,526,527,528,529,465,530,531,532,533,453,534,535,454,536,537,538,539,466,540,541,542,543,455,544,473,545,456,546,457,458,547,548,549,550,551,467,552,553,554,555,459,556,557,460,558],"tindex":"f4bd062e-13cd-11e5-a6fb-5b825fd0e9c7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger != null) {\n    return org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n} "},"status":-1},{"failures":[],"tindex":"f4bd062f-13cd-11e5-a6fb-b320e8ff1950","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"bitIndex","index":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:220","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460],"tindex":"f4bd0630-13cd-11e5-a6fb-fd9dea1337d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:459","type":"CtIfImpl","sourcecode":"if ((T[].int) < int) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T[] T[] = ((T[])(java.lang.reflect.Array.newInstance(T[].getClass().getComponentType(), int)));\n    T[] = T[];\n} "},"status":-1},{"failures":[559,560,561,342,343,345,346,347,348,350,356],"tindex":"f4bd0631-13cd-11e5-a6fb-9b8876487546","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:675","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    return false;\n} "},"variableMap":{"entryKey":"other","entryValue":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"status":-1},{"failures":[],"tindex":"f4bd0632-13cd-11e5-a6fb-85235c6bd21a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1122","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.Flat3Map<K, V>.org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    org.apache.commons.collections4.map.Flat3Map<K, V>.org.apache.commons.collections4.map.AbstractHashedMap<K, V> = org.apache.commons.collections4.map.Flat3Map<K, V>.org.apache.commons.collections4.map.AbstractHashedMap<K, V>.clone();\n} "},"variableMap":{"cloned":"map","delegateMap":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n        final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(java.lang.Object[][int]));\n        if ((java.lang.Object[] == null) || ((java.lang.Object[].int) < 2)) {\n            throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + int));\n        } \n        java.util.Map<K, V>.put(((K)(java.lang.Object[][0])), ((V)(java.lang.Object[][1])));\n    }\n} else {\n    for (int int = 0 ; int < ((java.lang.Object[].int) - 1) ; ) {\n        java.util.Map<K, V>.put(((K)(java.lang.Object[][int++])), ((V)(java.lang.Object[][int++])));\n    }\n}"},"status":-2},{"failures":[562,563,564,565,566,567,568,569,570,571,572,573],"tindex":"f4bd0633-13cd-11e5-a6fb-b96a1709448d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"remove() cannot be called\");\n} "},"variableMap":{"nextObjectSet":"reverse"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:153","type":"CtIfImpl","sourcecode":"if (boolean == true) {\n    java.util.BitSet.set(((java.util.List<java.util.Comparator<E>>.size()) - 1));\n} "},"status":-1},{"failures":[574,575,576,577,578],"tindex":"f4bd2d44-13cd-11e5-a6fb-411355becb31","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:175","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"size":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:118","type":"CtIfImpl","sourcecode":"if ((int[][int]) > int) {\n    int = int[][int];\n    int = int;\n} "},"status":-1},{"failures":[],"tindex":"f4bdf095-13cd-11e5-a6fb-93e1da294eac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1218","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"root":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:459","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[422,579,423,580,424,425,426,427,428,429,119,126,129,139],"tindex":"f4be17a6-13cd-11e5-a6fb-1ff5f9155cef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:590","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:198","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(java.lang.Object);\n} "},"status":-1},{"failures":[],"tindex":"f4be17a7-13cd-11e5-a6fb-2d30da4d405a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:476","type":"CtWhileImpl","sourcecode":"while (int < (T[].int)) {\n    T[][int++] = null;\n}"},"status":-2},{"failures":[],"tindex":"f4be17a8-13cd-11e5-a6fb-df404af2eb7e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:277","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> == null) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = new org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>();\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K = K;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V = V;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)++;\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"f4be17a9-13cd-11e5-a6fb-91ff7eb5f0fa","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"index","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"f4be17aa-13cd-11e5-a6fb-0539f8d017b2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:126","type":"CtForImpl","sourcecode":"for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n    char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n}"},"status":-2},{"failures":[581,582,583,422,579,423,580,424,425,426,427,428,429,584,112,114,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151],"tindex":"f4be17ab-13cd-11e5-a6fb-c3e668c529fe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hash2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:317","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = K.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (K.equals(K))) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 2 :\n            if (((int) == int) && (K.equals(K))) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 1 :\n            if (((int) == int) && (K.equals(K))) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n    }\n} "},"status":-1},{"failures":[585,586,587,588],"tindex":"f4be17ac-13cd-11e5-a6fb-3dc6068949fc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:238","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, java.lang.Object> java.util.Map.Entry<K, java.lang.Object> : java.util.Set<java.util.Map.Entry<K, java.lang.Object>>) {\n    if (((java.util.Collection<V>)(java.util.Map.Entry<K, java.lang.Object>.getValue())).contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[589],"tindex":"f4be3ebd-13cd-11e5-a6fb-f52458d12f5b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:116","type":"CtIfImpl","sourcecode":"if (java.lang.Object.getClass().equals(java.lang.Object.getClass())) {\n    final org.apache.commons.collections4.comparators.ReverseComparator<?> org.apache.commons.collections4.comparators.ReverseComparator<?> = ((org.apache.commons.collections4.comparators.ReverseComparator<?>)(java.lang.Object));\n    return java.util.Comparator<E>.equals(org.apache.commons.collections4.comparators.ReverseComparator<?>.java.util.Comparator<?>);\n} "},"status":-1},{"failures":[331,561,332],"tindex":"f4be3ebe-13cd-11e5-a6fb-bf3038c0e4fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:194","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} else if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"o":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:290","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[590,591,592,593,594,595,596,597,598,599,600,601],"tindex":"f4be3ebf-13cd-11e5-a6fb-331d2ec542dc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:360","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    int = int;\n    E = java.util.ArrayList<E>.get(int);\n} else {\n    final E E = java.util.ArrayList<E>.get(int);\n    if ((java.util.Comparator<? super E>) == null) {\n        throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n    } \n    if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n        E = E;\n        int = int;\n    } \n}"},"status":-1},{"failures":[],"tindex":"f4be65d0-13cd-11e5-a6fb-174d5e1033cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:590","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(java.lang.Object);\n    java.lang.StringBuilder.append(int);\n    java.lang.StringBuilder.append(':');\n    java.lang.StringBuilder.append(java.lang.Object);\n    if (java.util.Iterator<E>.hasNext()) {\n        java.lang.StringBuilder.append(',');\n    } \n}"},"status":-2},{"failures":[602,603],"tindex":"f4be65d1-13cd-11e5-a6fb-5fce6ba78e6c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"status":-1},{"failures":[604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649],"tindex":"f4be8ce2-13cd-11e5-a6fb-cd33586772ff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:202","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"f4be8ce3-13cd-11e5-a6fb-ed35d1c74e1b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:732","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return null;\n} "},"variableMap":{"parent":"previous","current":"previous","right":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:660","type":"CtWhileImpl","sourcecode":"while (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        break;\n    } \n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"f4be8ce4-13cd-11e5-a6fb-7f9e8a2bbd4e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:384","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    return true;\n} "},"variableMap":{"set":"value","i":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:247","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n        while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n            if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n                return true;\n            } \n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        }\n    }\n}"},"status":-2},{"failures":[126,166,650,215,651,256,302,561,352,652,653,392],"tindex":"f4be8ce5-13cd-11e5-a6fb-d544313fc982","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1113","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()"},"variableMap":{"this":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:477","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.setValue(V)"},"status":-1},{"failures":[654,655],"tindex":"f4beb3f6-13cd-11e5-a6fb-5394ee92e241","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(java.lang.Object);\n} "},"variableMap":{"delegateMap":"map","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LazyMap:162","type":"CtIfImpl","sourcecode":"if ((java.util.Map<K, V>.containsKey(java.lang.Object)) == false) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final K K = ((K)(java.lang.Object));\n    final V V = org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(K);\n    java.util.Map<K, V>.put(K, V);\n    return V;\n} "},"status":-1},{"failures":[120,126,143,160,166,183,651,250,256,273,296,302,319,346,352,386,392,409],"tindex":"f4beb3f7-13cd-11e5-a6fb-7f3f8b4e361c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"f4beb3f8-13cd-11e5-a6fb-0f45e0fadd74","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1770","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.ViewIterator.navigatePrevious().getValue()"},"variableMap":{"this":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:206","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n        return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"f4beb3f9-13cd-11e5-a6fb-affb2a2d1d09","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1045","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:520","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[],"tindex":"f4bedb0a-13cd-11e5-a6fb-fd59c140eaa7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:467","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"status":0},{"failures":[],"tindex":"f4bedb0b-13cd-11e5-a6fb-cbc8c80c81c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:274","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext() ; ) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    if ((java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get()) == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } \n}"},"variableMap":{"cursors":"cursors"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:289","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext() ; ) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>) {\n        java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear();\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n        break;\n    } \n}"},"status":0},{"failures":[656,657,658,659,660,661,662,663,664,665,666,667],"tindex":"f4bedb0c-13cd-11e5-a6fb-fd294417dd71","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:126","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.functors.ComparatorPredicate.Criterion == null) {\n    throw new java.lang.IllegalArgumentException(\"Criterion must not be null.\");\n} "},"variableMap":{"criterion":"childValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1006","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    java.io.PrintStream.print(java.lang.Object);\n} else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n    java.io.PrintStream.print(\"(this Map)\");\n} else {\n    java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n}"},"status":-1},{"failures":[331,561,332],"tindex":"f4bedb0d-13cd-11e5-a6fb-7b90504e420f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"variableMap":{"obj":"key3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:290","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"f4bedb0e-13cd-11e5-a6fb-63f42322d142","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1470","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> instanceof org.apache.commons.collections4.BoundedCollection) {\n    return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).isFull();\n} "},"status":0},{"failures":[],"tindex":"f4bedb0f-13cd-11e5-a6fb-e7e03e7a9264","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:428","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.setValue(E)"},"status":-2},{"failures":[],"tindex":"f4bedb10-13cd-11e5-a6fb-953e24ef0199","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:216","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[330,331,561,332],"tindex":"f4bedb11-13cd-11e5-a6fb-53a20266e981","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:365","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[15,17,433,668,669,670,434,435,671],"tindex":"f4bedb12-13cd-11e5-a6fb-6136393239a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:853","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"x","leftChild":"x","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1167","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[606],"tindex":"f4bedb13-13cd-11e5-a6fb-6f9717fcb4f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1622","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey()"},"variableMap":{"current":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:801","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey() : null;\n} else {\n    return null;\n}"},"status":-1},{"failures":[490,471,499,511,521,472,531,541,473,553],"tindex":"f4bf0224-13cd-11e5-a6fb-8d9c960408e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:390","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Bag<E>.isEmpty())) {\n    boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.removeAll(org.apache.commons.collections4.Bag<E>);\n} "},"status":-1},{"failures":[],"tindex":"f4bf0225-13cd-11e5-a6fb-957fd6d2add8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"length","proposedCapacity":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:184","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Transformer<?, ?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Transformer<?, ?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + int) + \" was null\"));\n    } \n}"},"status":-2},{"failures":[672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693],"tindex":"f4bf0226-13cd-11e5-a6fb-1768623b8772","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:186","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) != null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(java.lang.Object[], org.apache.commons.collections4.list.TreeList.AVLNode<E>.int);\n} "},"status":-1},{"failures":[694,695,696,486,697,487,488,698,461,489,490,491,699,700,701,702,492,443,703,704,705,706,707,708,709,710,711,712,713,714,715,493,471,716,494,444,717,718,719,720,495,721,496,497,722,462,498,499,500,723,724,725,726,501,445,727,728,729,730,731,732,733,734,735,736,737,738,739,502,740,741,503,446,742,743,744,745,746,747,748,749,750,751,752,504,447,753,754,755,756,757,448,758,759,760,505,761,762,763,764,765,766,767,768,506,769,507,770,508,509,771,463,510,511,512,772,773,774,775,513,449,776,777,778,779,780,781,782,783,784,785,786,787,788,514,789,790,515,450,791,792,516,517,793,518,519,794,464,520,521,522,795,796,797,798,523,451,799,800,801,802,803,804,805,806,807,808,809,810,811,524,472,812,525,452,813,814,526,815,527,816,528,529,817,465,530,531,532,818,819,820,821,533,453,822,823,824,825,826,827,828,829,830,831,832,833,834,534,835,836,535,454,837,838,536,839,537,840,538,539,841,466,540,541,542,842,843,844,845,543,455,846,847,848,849,850,851,852,853,854,855,856,857,858,544,473,859,545,456,860,861,862,863,864,865,866,867,868,869,870,546,457,871,872,873,874,875,458,876,877,878,547,879,880,881,882,474,883,884,885,548,886,549,887,550,551,888,467,552,553,554,889,890,891,892,555,459,893,894,895,896,897,898,899,900,901,902,903,904,905,556,906,907,557,460,908,909,910,911,912,913,558,72,73],"tindex":"f4bf2937-13cd-11e5-a6fb-87b9a8ba0ed8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"f4bf2938-13cd-11e5-a6fb-e121a205a184","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"proposedCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"status":-2},{"failures":[490,471,499,511,521,472,531,541,473,553],"tindex":"f4bf2939-13cd-11e5-a6fb-2199d074ce96","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:390","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Bag<E>.isEmpty())) {\n    boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.removeAll(org.apache.commons.collections4.Bag<E>);\n} "},"status":-1},{"failures":[66,69],"tindex":"f4bf293a-13cd-11e5-a6fb-e1c386ed0bc2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:925","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super O>.evaluate(O)) {\n    R.add(O);\n} "},"status":-1},{"failures":[],"tindex":"f4bf293b-13cd-11e5-a6fb-ab90c8494d20","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"bitIndex","maxElements":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:516","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"f4bf504c-13cd-11e5-a6fb-b7d694ad7b6f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:398","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<java.util.Map.Entry<K, V>>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:432","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<K>emptyOrderedIterator();\n} "},"status":-2},{"failures":[],"tindex":"f4bf504d-13cd-11e5-a6fb-cbf8863ec339","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.IfClosure:76","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Closure<? super E> == null) || (org.apache.commons.collections4.Closure<? super E> == null)) {\n    throw new java.lang.IllegalArgumentException(\"Closures must not be null\");\n} "},"variableMap":{"falseClosure":"closure","trueClosure":"closure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Closure<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n} "},"status":0},{"failures":[],"tindex":"f4bf504e-13cd-11e5-a6fb-77ffc0faf32a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:732","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return null;\n} "},"variableMap":{"parent":"parent","current":"parent","right":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"f4bf504f-13cd-11e5-a6fb-f3812bd2294b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1754","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getValue() can only be called after next() and before remove()\");\n} "},"variableMap":{"lastReturnedNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1018","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()])) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    }\n}"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}