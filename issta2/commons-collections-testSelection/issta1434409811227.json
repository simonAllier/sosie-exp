{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":737,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":213,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":197,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":460,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":430,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":601,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":768,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":228,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":702,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":731,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":91,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":124,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":877,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":678,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIsEmpty":358,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":411,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":533,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetEquals":343,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRetainAll":278,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":822,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":624,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":412,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":719,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":804,"org.apache.commons.collections4.CollectionUtilsTest.get":735,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":490,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray2":320,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":436,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":111,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":806,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":862,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":148,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":365,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":23,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":795,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":846,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":814,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":2,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIsEmpty":337,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":569,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":767,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":790,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":905,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":789,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":218,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":84,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":63,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":249,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":33,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":316,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":495,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":216,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":787,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIteratorRemove":290,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":605,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":367,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":619,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":117,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":339,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":481,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":536,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":892,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":465,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":409,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":625,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":126,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":60,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":164,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":876,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":12,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":109,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIsEmpty":276,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":415,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":32,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":68,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":534,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":773,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":746,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":446,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":390,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":447,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":679,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":448,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":259,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":327,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":429,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":85,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":80,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":765,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":105,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":865,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":696,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":22,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":467,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":190,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":869,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":304,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":685,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":385,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":890,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":1,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":349,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":562,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":464,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":547,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":522,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":529,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":523,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":524,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":70,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":543,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":154,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":917,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":166,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":700,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":40,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":198,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":96,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":567,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":568,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":566,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":496,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":505,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":541,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":717,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":802,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":83,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":667,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":783,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":829,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":314,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":849,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":580,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":904,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":480,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":392,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":227,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":752,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":747,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":176,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":422,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":785,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":0,"org.apache.commons.collections4.set.TransformedSetTest.testSetHashCode":270,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":359,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":38,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":301,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":518,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":699,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":602,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":89,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":86,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":638,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":820,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":772,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":753,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":732,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":769,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":243,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":585,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":330,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":477,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":882,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":256,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":74,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":378,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":582,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":98,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":840,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":26,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":238,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":128,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":576,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":651,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":341,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":720,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":749,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":805,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":897,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":791,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":455,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":225,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":212,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":461,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":827,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":82,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":236,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":207,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":297,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":417,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":157,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":762,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAdd":340,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":817,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":884,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":561,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":815,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":676,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":595,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":137,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":520,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":764,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":19,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":180,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":902,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":826,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":572,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":825,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":859,"org.apache.commons.collections4.CollectionUtilsTest.getPositiveOutOfBounds":736,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":125,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":401,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":537,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":37,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":342,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":870,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":592,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetHashCode":331,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":397,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":721,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":476,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":759,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":587,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":542,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":379,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":383,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":489,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":888,"org.apache.commons.collections4.map.LinkedMapTest.testReset":581,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":502,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":669,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":241,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":670,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":623,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":668,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":559,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":828,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":532,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIteratorRemove":321,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":161,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":134,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":743,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":386,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRetainAll":363,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":296,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":643,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":242,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":97,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":654,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":205,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":714,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSimpleSerialization":692,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":202,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":193,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":391,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":416,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":100,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":858,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":616,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":370,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":634,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":30,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":453,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":510,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":919,"org.apache.commons.collections4.MapUtilsTest.testInvertMap":5,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":396,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":31,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":151,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":435,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":704,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":103,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":106,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":733,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":332,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":560,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":722,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":204,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":428,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":406,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":636,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":407,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":354,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":408,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":675,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":866,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":79,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":346,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":262,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":511,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":628,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":261,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":65,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":504,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":133,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":622,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":264,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":130,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":181,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":519,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":55,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":469,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":374,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":255,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":351,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":629,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":244,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":855,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":52,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedAdd":345,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":119,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":168,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":17,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":210,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":610,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":609,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":146,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":611,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":424,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":571,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":361,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":766,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":586,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":456,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":841,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":590,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetHashCode":344,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetHashCode":309,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":850,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":73,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":798,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":369,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":286,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":156,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":621,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":620,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":498,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":174,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":695,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":115,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":712,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":835,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":459,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":627,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":756,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":403,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":404,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":405,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":516,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":838,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":837,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":823,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":836,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":538,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":819,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":120,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":723,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray2":272,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":441,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray2":294,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":847,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":214,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":437,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":275,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":860,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":92,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":801,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEqualsAfterSerialization":741,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":165,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":488,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":810,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":600,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":298,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":540,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":36,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":813,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":554,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":812,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":266,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":811,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":44,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":400,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":107,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":463,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":479,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":718,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":171,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":863,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":799,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":356,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":887,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":177,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":159,"org.apache.commons.collections4.set.TransformedSetTest.testSetEquals":269,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":642,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":878,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":285,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":263,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":875,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":188,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":874,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":141,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":873,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":357,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":394,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":555,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":179,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":229,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":452,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":237,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":630,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":588,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":138,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":468,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":493,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":62,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetHashCode":283,"org.apache.commons.collections4.map.LRUMapTest.testLRU":20,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":277,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetEquals":352,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":110,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":186,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":438,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":578,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":41,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":306,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":658,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":131,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":713,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":655,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":706,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":94,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":418,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":691,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":173,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":738,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":427,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":162,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":755,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":18,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":544,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":322,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":808,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":258,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIteratorRemove":273,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":880,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":90,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":152,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":891,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":824,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":211,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":501,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":521,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":705,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":848,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":647,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":851,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":558,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":454,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":371,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":615,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":253,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":682,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":88,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":58,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":898,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":528,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":423,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":48,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":449,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":912,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":178,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":854,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":574,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIteratorRemove":360,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedAdd":310,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":775,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":843,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":545,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":413,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":707,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":163,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":684,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":593,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":771,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":597,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":328,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":553,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":664,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":599,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":51,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":665,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":389,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":657,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":87,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":254,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":730,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":637,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":362,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":4,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":267,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":750,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":200,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":399,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":626,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":112,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIsEmpty":324,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":387,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":715,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":235,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":796,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":76,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":323,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":93,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":402,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":421,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":145,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetEquals":282,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":143,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":531,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":778,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":893,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":779,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":355,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":777,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":13,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":118,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":556,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":155,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":433,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":885,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":645,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":830,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":279,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":472,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":920,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":99,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":570,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":539,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":16,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":132,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":492,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":596,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":653,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIsEmpty":288,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":549,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":175,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":763,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":425,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":724,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":916,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":761,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":78,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":525,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":598,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":803,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":239,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContainsAll":271,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":579,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":911,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":527,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":526,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":663,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRetainAll":293,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":644,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":458,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":648,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":607,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":922,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":760,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":689,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":868,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":473,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":121,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":368,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":268,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":744,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":144,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":883,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":265,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":3,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":248,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":745,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":776,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":672,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":910,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":10,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":191,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":503,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":673,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":142,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":497,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":683,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":209,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":686,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray2":315,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":223,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":564,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":563,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":671,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":770,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":565,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":728,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":861,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":907,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":603,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":754,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray2":333,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":842,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":206,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":300,"org.apache.commons.collections4.set.PredicatedSetTest.testSetHashCode":318,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":708,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":439,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":517,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":42,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":499,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":67,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":583,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":674,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":739,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":781,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":780,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":61,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":149,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":832,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":589,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":234,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":434,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":478,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":608,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":71,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":372,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":184,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":821,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":388,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals":742,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":845,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":889,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":75,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":326,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":153,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":450,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":39,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":338,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":618,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":640,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":57,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":681,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":34,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":914,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":500,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":29,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":113,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":246,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":104,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":195,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":220,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":913,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":233,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":831,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":432,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":751,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":224,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":740,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":43,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray2":364,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContainsAll":287,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":856,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":793,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":786,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContainsAll":347,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":158,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":247,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":552,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":172,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":617,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":135,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":335,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":834,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":329,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSimpleSerialization":918,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":915,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":393,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":896,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":716,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":680,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":701,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":431,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":395,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":274,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":632,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":514,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":656,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":123,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":102,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":46,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":59,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":380,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":208,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":129,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":650,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":908,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":420,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":114,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":758,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":614,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":50,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":606,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":613,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":633,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":660,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":612,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":844,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":604,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":853,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":382,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":573,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":807,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":530,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":414,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":513,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":232,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":494,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":646,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":726,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":909,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":457,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":410,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetEquals":308,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":49,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":895,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":226,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":485,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":486,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":487,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":535,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":879,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":509,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":711,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":251,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContainsAll":312,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":649,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":398,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":77,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":690,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":101,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":577,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":833,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":881,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":512,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":72,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":839,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetHashCode":353,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":440,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":221,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":591,"org.apache.commons.collections4.list.GrowthListTest.testCollectionClear":169,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemove":291,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":366,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":788,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":470,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray2":350,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":230,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":797,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":546,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":24,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":219,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":662,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":800,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":709,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":14,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":250,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":659,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":694,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":631,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":95,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":183,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":35,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":189,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":471,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":867,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":194,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":652,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":451,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":901,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":584,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":782,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":307,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":548,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":215,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":710,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":506,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":15,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":426,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":11,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":222,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":311,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":317,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":185,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":140,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":257,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":515,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":816,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":864,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":809,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":64,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIteratorRemove":334,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":373,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":150,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":575,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":792,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":9,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":187,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":289,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":127,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":894,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAdd":284,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":903,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":491,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":666,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":28,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":557,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":47,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":136,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":319,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":182,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemove":280,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":725,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":818,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":56,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":303,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":784,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":921,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":551,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":687,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":217,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":550,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":757,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":160,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":381,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":729,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":336,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":167,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":281,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":483,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":857,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":484,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":292,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":727,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":482,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":852,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":442,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":906,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":871,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":872,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":69,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":774,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":475,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":170,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":507,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":139,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":688,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":54,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":6,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":27,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":7,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":8,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":443,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":302,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIsEmpty":313,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":444,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":677,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":196,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":147,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":325,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":900,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":794,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":693,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":508,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":122,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":703,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":466,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":81,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":199,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":299,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":108,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":376,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":375,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":462,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":474,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":698,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":639,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":21,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":53,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":245,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":260,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":45,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":697,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":886,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":203,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":66,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":240,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":231,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":25,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":201,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":252,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":445,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":305,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":594,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":635,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":748,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":641,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":116,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":377,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":192,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":384,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIsEmpty":348,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":419,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":734,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":661,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":295,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":899},"transformations":[{"failures":[],"tindex":"ad0444e7-13b3-11e5-a31b-7d4e76ca839e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"size","maxElements":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n} else {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"ad05a478-13b3-11e5-a31b-f3446a3e8316","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger != null) {\n    return org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n} "},"status":-2},{"failures":[],"tindex":"ad05a479-13b3-11e5-a31b-e7cd624155d8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:115","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.keyvalue.MultiKey<K>.this(((K[])(new java.lang.Object[]{ K , K , K , K , K })), false)"},"status":-2},{"failures":[],"tindex":"ad05a47a-13b3-11e5-a31b-310052382117","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:825","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"currentNode","rightChild":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:932","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[0,1,2,3],"tindex":"ad05cb8b-13b3-11e5-a31b-c924ecfa6d1a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:208","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n} "},"variableMap":{"entry":"entry","header":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:239","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-1},{"failures":[4],"tindex":"ad05cb8c-13b3-11e5-a31b-9ba0aa120871","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:138","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Closure<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Closure<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + int) + \" was null\"));\n    } \n}"},"status":-1},{"failures":[5],"tindex":"ad05cb8d-13b3-11e5-a31b-e7902d1b59dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:754","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.Flat3Map<K, V>.clear()"},"variableMap":{"parent":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1062","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : java.util.Map<K, V>.entrySet()) {\n    java.util.Map<V, K>.put(java.util.Map.Entry<K, V>.getValue(), java.util.Map.Entry<K, V>.getKey());\n}"},"status":-1},{"failures":[6,7,8,9,10,11,12,13,14,15,16],"tindex":"ad05cb8e-13b3-11e5-a31b-dbcca136e22d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} "},"variableMap":{"lastUsedIterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:187","type":"CtWhileImpl","sourcecode":"while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n    E E = java.util.Iterator<? extends E>.next();\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n        E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n    } \n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n}"},"status":-1},{"failures":[1,2,3],"tindex":"ad05cb8f-13b3-11e5-a31b-bd4e2199399d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"index","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:239","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"ad05f2a0-13b3-11e5-a31b-59e7b6f337ee","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:319","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntrySet<K, V>(this);\n} "},"status":-2},{"failures":[],"tindex":"ad05f2a1-13b3-11e5-a31b-9ffa6045fcac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger != null) {\n    return org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n} "},"status":-2},{"failures":[],"tindex":"ad05f2a2-13b3-11e5-a31b-f12056d36d73","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse = new org.apache.commons.collections4.bidimap.TreeBidiMap.Inverse();\n} "},"status":-2},{"failures":[17],"tindex":"ad05f2a3-13b3-11e5-a31b-5199abda441d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"size","removeIndex":"hash3","currentIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1195","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 2 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 1 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":-1},{"failures":[18,19,20,21,22,23,24,25],"tindex":"ad05f2a4-13b3-11e5-a31b-5fe1c786e024","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"hashIndex","listSize":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:301","type":"CtTryImpl","sourcecode":"try {\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n    while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n    (int)++;\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.removeEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.reuseEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.addEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int);\n} catch (final java.lang.NullPointerException ex) {\n    throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n}"},"status":-1},{"failures":[],"tindex":"ad06dd05-13b3-11e5-a31b-596b3bd7a625","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:95","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"ad070416-13b3-11e5-a31b-a716f075f3c2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:759","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractHashedMap.HashMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1402","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) {\n    case KEY :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    case VALUE :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    default :\n        throw new java.lang.IllegalArgumentException();\n}"},"status":-2},{"failures":[],"tindex":"ad070417-13b3-11e5-a31b-cbe8d8897b89","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"end2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtIfImpl","sourcecode":"if ((int - int) > (int - int)) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n} else {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n}"},"status":-2},{"failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364],"tindex":"ad075238-13b3-11e5-a31b-434ae2db09ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.FixedSizeList:179","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.size()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:154","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().hashCode()"},"status":-1},{"failures":[365,366,367,368,369,370,371,372,373,374,375,376],"tindex":"ad077949-13b3-11e5-a31b-4b2c808c6e1e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:233","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"ad07794a-13b3-11e5-a31b-5b2102b63f59","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"variableMap":{"next":"entry","entry":"entry","previous":"entry","hashCode":"hashCode","this":"this","index":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:184","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n} "},"status":-2},{"failures":[],"tindex":"ad07794b-13b3-11e5-a31b-139646442a3f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:824","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>.checkModCount()"},"variableMap":{"this":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:380","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E);\n    final int int = org.apache.commons.collections4.Bag<?>.getCount(E);\n    if ((1 <= int) && (int <= int)) {\n        org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n    } else {\n        org.apache.commons.collections4.Bag<E>.add(E, int);\n    }\n}"},"status":-2},{"failures":[20,21,377,378,22,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,17,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,1,2,580,3,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,25,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663],"tindex":"ad07794c-13b3-11e5-a31b-d9b41dddc12c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"modCount","modifications":"threshold"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n} else {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n    (int)++;\n    for (int int = int - 1 ; int >= 0 ; int--) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n            do {\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n        } \n    }\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n}"},"status":-1},{"failures":[],"tindex":"ad07a05d-13b3-11e5-a31b-edbce40bf2be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"numberOfNodesToCache"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:219","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    org.apache.commons.collections4.list.NodeCachingLinkedList<E>.addNodeToCache(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-2},{"failures":[],"tindex":"ad07a05e-13b3-11e5-a31b-dd2888cb4129","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:480","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : org.apache.commons.collections4.map.CompositeMap<K, V>.entrySet()) {\n    int += java.util.Map.Entry<K, V>.hashCode();\n}"},"variableMap":{"code":"length","this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:134","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    final java.util.Collection<K> java.util.Collection<K> = org.apache.commons.collections4.CollectionUtils.intersection(this.java.util.Map<K, V>[][int].keySet(), java.util.Map<K, V>.keySet());\n    if ((java.util.Collection<K>.size()) != 0) {\n        if ((this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n            throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n        } \n        this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(this, this.java.util.Map<K, V>[][int], java.util.Map<K, V>, java.util.Collection<K>);\n    } \n}"},"status":-2},{"failures":[],"tindex":"ad07a05f-13b3-11e5-a31b-c39dba9d59df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:194","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.previousIndex();\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:161","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.nextIndex();\n} "},"status":-2},{"failures":[],"tindex":"ad07a060-13b3-11e5-a31b-2d5c5c967317","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:179","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> != (java.util.Iterator<? extends E>)) {\n    if ((java.util.Iterator<? extends E>) != null) {\n        org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-2},{"failures":[],"tindex":"ad07a061-13b3-11e5-a31b-39077e80e919","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:115","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    return false;\n} "},"variableMap":{"lengthInBits":"size","key":"value","bitIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((V) == null) {\n                return true;\n            } \n        case 2 :\n            if ((V) == null) {\n                return true;\n            } \n        case 1 :\n            if ((V) == null) {\n                return true;\n            } \n    }\n} else {\n    switch (int) {\n        case 3 :\n            if (java.lang.Object.equals(V)) {\n                return true;\n            } \n        case 2 :\n            if (java.lang.Object.equals(V)) {\n                return true;\n            } \n        case 1 :\n            if (java.lang.Object.equals(V)) {\n                return true;\n            } \n    }\n}"},"status":0},{"failures":[],"tindex":"ad07a062-13b3-11e5-a31b-a597e30dec8b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ReferenceMap:181","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.doReadObject(java.io.ObjectInputStream)"},"status":-2},{"failures":[],"tindex":"ad0b70f3-13b3-11e5-a31b-7b74908631a8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:305","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[],"tindex":"ad0b70f4-13b3-11e5-a31b-0f4a4389fe94","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"status":-2},{"failures":[],"tindex":"ad0b70f5-13b3-11e5-a31b-0dbe20aed130","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:977","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.println(\"null\")"},"variableMap":{"out":"key5"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:671","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"ad0c8266-13b3-11e5-a31b-b3d09d835642","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:892","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:499","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"ad0d45b7-13b3-11e5-a31b-d33b92626849","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:432","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<K>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"status":-2},{"failures":[664,665,666,667,668,669,670,671,672,673,17],"tindex":"ad0d45b8-13b3-11e5-a31b-d3126d63bbc9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Collection<?>) {\n    return ((java.util.Collection<?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"length":"hash2","object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:225","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"ad0d45b9-13b3-11e5-a31b-8d5f46a082aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1583","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"prior":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        return null;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"ad0d45ba-13b3-11e5-a31b-ad3c4ecab813","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:74","type":"CtIfImpl","sourcecode":"if (java.lang.Boolean == null) {\n    throw new org.apache.commons.collections4.FunctorException(\"Transformer must return an instanceof Boolean, it was a null object\");\n} "},"status":-2},{"failures":[674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,257,258,259,260,261,695,696,262],"tindex":"ad0d45bb-13b3-11e5-a31b-e55236310b51","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:854","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"leftChild":"rval","node":"rval","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[697,698,699,700,701,702],"tindex":"ad0de1fc-13b3-11e5-a31b-bff45e19865d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtIfImpl","sourcecode":"if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n    if ((int[][(int - int)]) <= (int[][int])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n    } \n} "},"variableMap":{"vUp":"vDown","start1":"end1","d":"start2","vDown":"vDown","delta":"start2","end2":"end1","this":"this","i":"start2","end1":"delta","k":"start2","start2":"start2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:184","type":"CtForImpl","sourcecode":"for (int int = 0 ; int <= int ; ++int) {\n    for (int int = -int ; int <= int ; int += 2) {\n        final int int = int + int;\n        if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n            int[][int] = int[][(int + 1)];\n        } else {\n            int[][int] = (int[][(int - 1)]) + 1;\n        }\n        int int = int[][int];\n        int int = ((int - int) + int) - int;\n        while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            int[][int] = ++int;\n            ++int;\n        }\n        if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n            if ((int[][(int - int)]) <= (int[][int])) {\n                return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n            } \n        } \n    }\n    for (int int = int - int ; int <= (int + int) ; int += 2) {\n        final int int = (int + int) - int;\n        if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n            int[][int] = (int[][(int + 1)]) - 1;\n        } else {\n            int[][int] = int[][(int - 1)];\n        }\n        int int = (int[][int]) - 1;\n        int int = ((int - int) + int) - int;\n        while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            int[][int] = int--;\n            int--;\n        }\n        if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n            if ((int[][int]) <= (int[][(int + int)])) {\n                return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n            } \n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"ad0e090d-13b3-11e5-a31b-21832f1c9f47","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:145","type":"CtReturnImpl","sourcecode":"return (this.int) - (this.int)"},"variableMap":{"startIndex":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:136","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[697,698],"tindex":"ad0e090e-13b3-11e5-a31b-6b63b8a63f05","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"end2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:264","type":"CtIfImpl","sourcecode":"if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n    ++int;\n} else {\n    if ((int - int) > (int - int)) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    } else {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    }\n}"},"status":-2},{"failures":[],"tindex":"ad0e090f-13b3-11e5-a31b-fd803b6754a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:887","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:212","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toString()"},"status":0},{"failures":[703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734],"tindex":"ad0e0910-13b3-11e5-a31b-716f004382e8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:438","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    java.lang.Object[][int++] = E;\n}"},"status":-1},{"failures":[],"tindex":"ad0e0911-13b3-11e5-a31b-4536f41b1240","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:278","type":"CtIfImpl","sourcecode":"if (int != 0) {\n    if ((java.util.BitSet.get(int)) == true) {\n        if (int > 0) {\n            int = -1;\n        } else {\n            int = 1;\n        }\n    } \n    return int;\n} "},"variableMap":{"comparatorIndex":"i","orderingBits":"value","retval":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:135","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    return int;\n} "},"status":-2},{"failures":[],"tindex":"ad0e0912-13b3-11e5-a31b-5320bf2563c0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:398","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n        return false;\n    } \n} else {\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"status":0},{"failures":[],"tindex":"ad0e0913-13b3-11e5-a31b-25556e0e091f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-2},{"failures":[735,736],"tindex":"ad0e0914-13b3-11e5-a31b-09faf5968eb0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"i":"i","object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object));\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Map<?, ?>.entrySet().iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return ((java.lang.Object[])(java.lang.Object))[int];\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[676,677,678,679,680,681,682,684,685,686,687,691,257,258,259,260,261,695,262],"tindex":"ad0e7e45-13b3-11e5-a31b-ddf0fcd15d41","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:590","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-1},{"failures":[465,466,468,469,470,473,17,477,478],"tindex":"ad0ea556-13b3-11e5-a31b-2b5b51e425c7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2013","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1142","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(java.lang.Object);\n} "},"status":-1},{"failures":[],"tindex":"ad0ea557-13b3-11e5-a31b-7b5ca309991c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"ad0ea558-13b3-11e5-a31b-dda06846eaef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:298","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.removeAllNodes()"},"variableMap":{"this":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:86","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E>.size()) > 0) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E[] E[] = ((E[])(java.util.Collection<E>.toArray()));\n    java.util.Collection<E>.clear();\n    for (final E E : E[]) {\n        org.apache.commons.collections4.collection.TransformedCollection<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n} "},"status":-2},{"failures":[737,738,676,677,679,680,681,684,685,686,687,739,740,257,258,259,260,261,262],"tindex":"ad0ea559-13b3-11e5-a31b-6fcbc48462f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2138","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<V, K>>) == null) {\n    java.util.Set<java.util.Map.Entry<V, K>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseEntryView();\n} "},"variableMap":{"inverseEntrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:416","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.EntryView();\n} "},"status":-1},{"failures":[],"tindex":"ad0ea55a-13b3-11e5-a31b-837bd0bc8fd6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1218","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"root":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"status":-2},{"failures":[741,742,743,744,745,746,747,748,749,750,751,627,752,753,754],"tindex":"ad0ea55b-13b3-11e5-a31b-07717ae173eb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2016","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"obj":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:221","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[674,755,675,756,757,758,759,760,761,762,763,764,737,765,738,766,767,768,740,689,690,769,770,676,677,678,679,680,681,682,683,684,771,685,772,773,686,687,774,775,776,777,778,779,780,781,739,782,783,784,688,785,786,787,788,789,693,790,694,791,792,793,794,795,796,797,798,799,800,801,802,803,804,257,258,805,259,260,261,695,696,262,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820],"tindex":"ad0ea55c-13b3-11e5-a31b-dff08a410d94","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-1},{"failures":[365,366,367,368,369,370,371,372,373,374,375,376],"tindex":"ad0ecc6d-13b3-11e5-a31b-81d828c19c7f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:231","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasNext()) {\n    final E E = java.util.ListIterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-1},{"failures":[821,822,823,824,825,826,827,828,829,830,831,832,833,834,380,381,382,390,399,406,407,409,383,412,415,416,417,418,419,420,421,422,439,446,447,449,423,452,455,456,457,458,459,460,461,462,478,485,486,488,463,491,494,495,496,497,498,499,500,501,518,525,526,528,502,531,534,535,536,537,538,540,541,542,559,566,567,569,543,572,575,576,577,578,579,3,586,587,588,605,612,613,615,589,618,621,622,623,624,625,835,836,837,838,839,840,841,752,842,754,843,844,845,846,847,848,849,850,634,635,640,642,851,652,653,658,660],"tindex":"ad0ecc6e-13b3-11e5-a31b-a79c208a935c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:344","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    return V;\n} "},"status":-1},{"failures":[],"tindex":"ad0ecc6f-13b3-11e5-a31b-bd48965c895b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    java.lang.String = java.lang.String;\n} "},"variableMap":{"answer":"methodName","defaultValue":"methodName"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"ad0ecc70-13b3-11e5-a31b-29ae5772a367","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:342","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:639","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int]"},"status":-2},{"failures":[],"tindex":"ad0ecc71-13b3-11e5-a31b-3900d59b13dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1040","type":"CtIfImpl","sourcecode":"if (K == null) {\n    break;\n} "},"status":-2},{"failures":[684,262],"tindex":"ad0ecc72-13b3-11e5-a31b-69b0aeec16f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:153","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"slotFilled":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1392","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(\", \");\n} "},"status":-1},{"failures":[],"tindex":"ad0ecc73-13b3-11e5-a31b-3191b826bb27","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"size","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:319","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            } else {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            }\n            (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n            return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"ad0ef384-13b3-11e5-a31b-f71b97cb24ca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n    break;\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:305","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n    boolean |= java.util.Collection<E>.retainAll(java.util.Collection<?>);\n}"},"status":-2},{"failures":[],"tindex":"ad0ef385-13b3-11e5-a31b-bb0df004d5aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:269","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"variableMap":{"key1":"key2","entry":"next","key2":"key1","hashCode":"index","key3":"key2","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:204","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"ad0ef386-13b3-11e5-a31b-277138f68a0b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:179","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> != (java.util.Iterator<? extends E>)) {\n    if ((java.util.Iterator<? extends E>) != null) {\n        org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-2},{"failures":[852,389,395,383,429,435,423,469,17,463,508,514,502,549,555,543,747,751],"tindex":"ad0ef387-13b3-11e5-a31b-6921764bd287","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1143","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(java.lang.Object)"},"variableMap":{"obj":"value","delegateMap":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:252","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n            return true;\n        } \n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n}"},"status":-1},{"failures":[853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877],"tindex":"ad0ef388-13b3-11e5-a31b-372280f89b84","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"endIndex2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:88","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-1},{"failures":[878,879,880,880,881,881,882,883,884,885,886,887,888,889,890],"tindex":"ad0ef389-13b3-11e5-a31b-db796963afa0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"i","lengthInBits":"i","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:83","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"status":-1},{"failures":[],"tindex":"ad0ef38a-13b3-11e5-a31b-1b83bbf4e94f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"hash","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:319","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            } else {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            }\n            (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n            return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-2},{"failures":[6,7,8,9,10,11,12,13,14,15,16],"tindex":"ad0ef38b-13b3-11e5-a31b-67baf0325ccf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super I, ? extends O> == null) {\n    throw new java.lang.NullPointerException(\"Transformer must not be null\");\n} "},"variableMap":{"transform":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n    E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n} "},"status":-1},{"failures":[891,892,893],"tindex":"ad0ef38c-13b3-11e5-a31b-db573308fca2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:411","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Collection<?>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"variableMap":{"coll2":"coll","coll1":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:159","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (!org.apache.commons.collections4.list.AbstractLinkedList<E>.(contains(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"ad0f1a9d-13b3-11e5-a31b-c99b3b108762","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1);\n        boolean = boolean || boolean;\n    }\n} "},"status":-2},{"failures":[],"tindex":"ad0f1a9e-13b3-11e5-a31b-474a6062ae0a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    return java.util.Iterator<T>.next();\n} "},"variableMap":{"iterator":"iterator","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1179","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<T>.hasNext()) {\n    int--;\n    if (int == (-1)) {\n        return java.util.Iterator<T>.next();\n    } \n    java.util.Iterator<T>.next();\n}"},"status":0},{"failures":[],"tindex":"ad0f1a9f-13b3-11e5-a31b-7f44fe9ae967","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:504","type":"CtInvocationImpl","sourcecode":"java.lang.Object.hashCode()"},"status":0},{"failures":[21,377,378,22,894,895,896,897,898,899,900,901,824,902,385,386,388,389,390,393,395,398,399,425,426,428,429,430,433,435,438,439,448,903,904,465,466,468,469,470,473,17,477,478,487,905,906,504,505,507,508,509,512,514,517,518,527,591,592,594,595,596,599,601,604,605,614,743,744,745,746,747,748,750,751,627,752,907,628,630,635,636,639,641,643,644,645,646,648,653,654,657,659,661,662,663],"tindex":"ad0f41b0-13b3-11e5-a31b-2d924d54ac6e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:225","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[908,909,910,911],"tindex":"ad0f41b1-13b3-11e5-a31b-5308db4ed0fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:59","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:128","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[],"tindex":"ad0f68c2-13b3-11e5-a31b-c385be976904","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"size","expectedModCount":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:623","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.add(((E)(java.io.ObjectInputStream.readObject())));\n}"},"status":0},{"failures":[],"tindex":"ad0f68c3-13b3-11e5-a31b-450fcd7dff9a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:974","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"this":"this","dataElement":"dataElement","deletedNode":"y","replacement":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:917","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[912,913,914],"tindex":"ad0f68c4-13b3-11e5-a31b-1ddb684895a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:158","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot add to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:282","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.contains(java.util.Iterator<E>.next())) == false) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-1},{"failures":[915,916],"tindex":"ad0f68c5-13b3-11e5-a31b-c15382d9d02c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:320","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"variableMap":{"mapSize":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:400","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)).purge(java.lang.ref.Reference<?>)) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    (this.int)--;\n    return ;\n} "},"status":-1},{"failures":[],"tindex":"ad0f68c6-13b3-11e5-a31b-b54945040dc5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"len","index":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtIfImpl","sourcecode":"if (int > int) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s beyond the end of the array. \"));\n} "},"status":-2},{"failures":[],"tindex":"ad0f68c7-13b3-11e5-a31b-c9fe23873876","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:325","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"ad0f68c8-13b3-11e5-a31b-73cb9a621d3f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AnyPredicate:78","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n} "},"variableMap":{"length":"length","preds":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:84","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[].int) == 1) {\n    return org.apache.commons.collections4.Predicate<T>[][0];\n} "},"status":-2},{"failures":[853],"tindex":"ad0f68c9-13b3-11e5-a31b-8ddc1db8d6cd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:94","type":"CtIfImpl","sourcecode":"if (char != char) {\n    final int int = char ^ char;\n    return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n} "},"status":-2},{"failures":[365,366,367,368,369,370,371,372,373,374,375,376],"tindex":"ad0f68ca-13b3-11e5-a31b-71591467a36c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"remove() cannot be called\");\n} "},"variableMap":{"nextObjectSet":"previousObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:145","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} "},"status":-1},{"failures":[],"tindex":"ad0f68cb-13b3-11e5-a31b-55e830543bd6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:684","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"rval":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"ad0f68cc-13b3-11e5-a31b-958527372c52","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:667","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[697,698,699,700,701,702],"tindex":"ad0f68cd-13b3-11e5-a31b-bd270bf3b39c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"d","expectedModCount":"k"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:215","type":"CtIfImpl","sourcecode":"if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n    int[][int] = (int[][(int + 1)]) - 1;\n} else {\n    int[][int] = int[][(int - 1)];\n}"},"status":-1},{"failures":[917,918],"tindex":"ad0f8fde-13b3-11e5-a31b-1fce74b46260","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1005","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(null)"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:149","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-1},{"failures":[365,366,367,368,369,370,371,372,373,374,375,376],"tindex":"ad0f8fdf-13b3-11e5-a31b-578fac033bf0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:216","type":"CtIfImpl","sourcecode":"if (boolean == false) {\n    return false;\n} "},"variableMap":{"removed":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:231","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasNext()) {\n    final E E = java.util.ListIterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"ad0f8fe0-13b3-11e5-a31b-07e913ccfade","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"status":-2},{"failures":[919,920,921,922],"tindex":"ad0f8fe1-13b3-11e5-a31b-b750492c62ee","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:66","type":"CtReturnImpl","sourcecode":"return (!(boolean)) && (!(boolean))"},"variableMap":{"removed":"nextObjectSet","beforeFirst":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:176","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"ad0f8fe2-13b3-11e5-a31b-19063a26acbb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:185","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Transformer<?, ?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + int) + \" was null\"));\n} "},"variableMap":{"transformers":"key4","i":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"ad0f8fe3-13b3-11e5-a31b-7b8c171c5c01","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"ad0f8fe4-13b3-11e5-a31b-db81c2465245","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1065","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration) {\n    return new org.apache.commons.collections4.iterators.EnumerationIterator<java.lang.Object>(((java.util.Enumeration<?>)(java.lang.Object)));\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:405","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.(containsKey(java.lang.Object))) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"status":-2},{"failures":[],"tindex":"ad0f8fe5-13b3-11e5-a31b-ff027e585afb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:225","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsValue(java.lang.Object)) {\n    return true;\n} "},"variableMap":{"composite":"key","i":"hash1","value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:217","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = java.lang.Object.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n        case 2 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n        case 1 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n    }\n} "},"status":-2},{"failures":[],"tindex":"ad0f8fe6-13b3-11e5-a31b-df5b84fff485","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[897,900,595,601],"tindex":"ad0f8fe7-13b3-11e5-a31b-bfd3555ae331","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:142","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n}"},"status":-1},{"failures":[852,389,395,383,429,435,423,469,17,463,508,514,502,549,555,543,747,751],"tindex":"ad0f8fe8-13b3-11e5-a31b-837ee4895253","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:194","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} else if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"o":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:254","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":98,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}