{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":2,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":190,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":105,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":348,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":276,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":452,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":80,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":203,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":438,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":164,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":21,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":410,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":154,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":62,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":437,"org.apache.commons.collections4.CollectionUtilsTest.extractSingleton":344,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":244,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":241,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":325,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":76,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":166,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":249,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":252,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":466,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":59,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":81,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":279,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationException":92,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":95,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":99,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":69,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":346,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":317,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":321,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":3,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":439,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":117,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":208,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":404,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":42,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":183,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":18,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":129,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":235,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":361,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":91,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":426,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":459,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiInverse":423,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testConstructors":462,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":377,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":432,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":1,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":311,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":456,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":391,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":101,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":167,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":289,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":246,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":16,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":225,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":418,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":141,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":318,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":345,"org.apache.commons.collections4.CollectionUtilsTest.intersection":327,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":365,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":98,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":192,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":61,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":469,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":261,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":471,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":77,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":85,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":139,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":33,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":463,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":413,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":64,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":198,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":40,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":210,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":350,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":368,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":169,"org.apache.commons.collections4.map.CompositeMapTest.testPut":335,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":175,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":266,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySet":121,"org.apache.commons.collections4.map.CompositeMapTest.testGet":334,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":433,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":131,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":382,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":71,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":420,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":119,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":389,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":427,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClear":396,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":4,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":171,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":369,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":173,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":204,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":408,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":176,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":287,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":152,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":102,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":316,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":43,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":36,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":226,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":447,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":354,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":272,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":134,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":293,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":363,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiInverse":394,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":228,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":97,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":126,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":214,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":328,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":359,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":448,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":419,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":431,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":333,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":219,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":112,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":220,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":174,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":340,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":409,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":32,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":172,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":72,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":257,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":379,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":342,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":113,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiInverse":443,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":403,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":364,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":138,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":218,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testFullIterator":96,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":151,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":147,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":161,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":239,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":184,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":312,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":224,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":12,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":237,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":48,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":206,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":195,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":178,"org.apache.commons.collections4.map.LRUMapTest.testClone":185,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":376,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":441,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":309,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":23,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":106,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":67,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":381,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":14,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":118,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":159,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":146,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":148,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":44,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":227,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":49,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":464,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":251,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":15,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":143,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":278,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":306,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":39,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":111,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":275,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiClear":445,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":207,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":79,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":406,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":90,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":324,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":451,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":56,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":47,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":378,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":63,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":133,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":199,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiPut":393,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":461,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":356,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":399,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":295,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":74,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":271,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":374,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":52,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiModifyEntrySet":395,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":405,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":343,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":10,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":442,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":116,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":320,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":136,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":304,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":41,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":127,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":58,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":245,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":130,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":13,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":125,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":337,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":336,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":429,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":242,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":298,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":290,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":158,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":149,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":57,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":216,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":193,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":217,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":115,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":215,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":78,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":153,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":5,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":144,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":65,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":330,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":285,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":417,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":38,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":424,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":250,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":53,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKeyInverse":450,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":194,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":273,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":25,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":305,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":26,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":163,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":229,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":282,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":286,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":264,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":284,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":188,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":254,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":329,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":104,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":114,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":446,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":373,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":265,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":444,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":468,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":362,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":223,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":326,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":37,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":407,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":338,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":375,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":260,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":303,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":283,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":296,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":332,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":233,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEmptyIterator":243,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":142,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":347,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":435,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":51,"org.apache.commons.collections4.map.HashedMapTest.testClone":179,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":68,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":181,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":349,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":205,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":366,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":89,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":55,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":87,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":140,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":358,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":428,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":280,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":108,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":440,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiPut":422,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":300,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":196,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":400,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":415,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":94,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":270,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":386,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":319,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":60,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":307,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":392,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":412,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":352,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClear":425,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":288,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":421,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":467,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":339,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":274,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":370,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":230,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":460,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":315,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":416,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":135,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":397,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":0,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":103,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":434,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":351,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":255,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":297,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":145,"org.apache.commons.collections4.set.ListOrderedSet2Test.testOrdering":157,"org.apache.commons.collections4.set.ListOrderedSetTest.testOrdering":160,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":182,"org.apache.commons.collections4.set.CompositeSetTest.testContains":331,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":186,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":310,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":256,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":341,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":88,"org.apache.commons.collections4.map.LinkedMapTest.testClone":187,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":308,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":263,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":455,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":137,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKeyInverse":430,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":189,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":262,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":170,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":29,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":200,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":402,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":128,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":314,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":267,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":301,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":50,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":191,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":398,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":34,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":27,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":28,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":83,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":322,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":454,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":355,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":353,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":8,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":107,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":6,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":31,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySet":124,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":209,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":177,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":221,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":120,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":211,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":7,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":213,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":360,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":236,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":281,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":35,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":472,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":73,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":458,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":232,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":234,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":231,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":259,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":269,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":248,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":132,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":470,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":388,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":357,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSortOrder":122,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":168,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":46,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":70,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":457,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":258,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":212,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":294,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":385,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":202,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":411,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":380,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":30,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":253,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":93,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":75,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":277,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":453,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":240,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":384,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":313,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":387,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":268,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiClear":367,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":54,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":66,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":150,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":390,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":180,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":110,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":123,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":372,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":109,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":162,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":299,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":165,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":156,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":238,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":323,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":197,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":86,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":155,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":292,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":247,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":291,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":82,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":383,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":371,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":414,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":302,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":201,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":20,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":465,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":436,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":84,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":449,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKeyInverse":401,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":222},"transformations":[{"failures":[0,1],"tindex":"b255df6a-13a2-11e5-9558-45e5e9e74d96","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:765","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"List must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LazyMap:126","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Factory must not be null\")"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"tindex":"b25b369b-13a2-11e5-9558-99966949fe8b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:277","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> == null) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = new org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>();\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K = K;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V = V;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)++;\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"b25b369c-13a2-11e5-9558-693538ecc7bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtIfImpl","sourcecode":"if (java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and closure map must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"b25b369d-13a2-11e5-9558-cbe0b4e599d1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1978","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:654","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[42,43,44,45],"tindex":"b25b5dae-13a2-11e5-9558-f59e9c39d189","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:106","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"modified","beforeFirst":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:145","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"b25da79f-13a2-11e5-9558-21d597a26aca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:584","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n                return true;\n            } \n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n} else {\n    for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n                return true;\n            } \n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n}"},"status":-2},{"failures":[46,47,48,49,50,51,52,53,54,55,56],"tindex":"b25e6af0-13a2-11e5-9558-5bb825dc9ad5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:149","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"variableMap":{"out":"outputStream"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"status":-1},{"failures":[57,58,59,60,61,62,63,64,65,66,67,68,69,70],"tindex":"b25e9201-13a2-11e5-9558-9de31ff318d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:224","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E>.isEmpty()) {\n    return false;\n} "},"variableMap":{"c":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:246","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (org.apache.commons.collections4.set.CompositeSet<E>.(contains(java.lang.Object)) == false) {\n        return false;\n    } \n}"},"status":-1},{"failures":[71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89],"tindex":"b25e9202-13a2-11e5-9558-bbacf0a9acb1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"b25e9203-13a2-11e5-9558-3f9d290fa741","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    return false;\n} "},"variableMap":{"mut":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:109","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"b25e9204-13a2-11e5-9558-2fbe80147e31","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:126","type":"CtInvocationImpl","sourcecode":"((org.apache.commons.collections4.ResettableIterator<? extends E>)(java.util.Iterator<? extends E>)).reset()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:87","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>.hasNext()) == false) {\n    org.apache.commons.collections4.iterators.LoopingIterator<E>.reset();\n} "},"status":-2},{"failures":[],"tindex":"b25e9205-13a2-11e5-9558-61e114d42dc4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1038","type":"CtWhileImpl","sourcecode":"while (true) {\n    final K K = ((K)(java.io.ObjectInputStream.readObject()));\n    if (K == null) {\n        break;\n    } \n    final V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.put(K, V);\n}"},"status":-2},{"failures":[],"tindex":"b25eb916-13a2-11e5-9558-f16930e2314d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:95","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"b25eb917-13a2-11e5-9558-1f19f063899a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:458","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} "},"variableMap":{"entry":"next","hashCode":"hashCode","this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:457","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"b25eb918-13a2-11e5-9558-e16dd0211e66","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2157","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(java.lang.Object, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"current","obj":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:153","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag<E>.(getCount(java.lang.Object)) < (org.apache.commons.collections4.Bag<?>.getCount(java.lang.Object))) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"b25eb919-13a2-11e5-9558-fb16448c28c8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.size();\n} "},"status":0},{"failures":[90,91,92,93,94,95,96],"tindex":"b25eb91a-13a2-11e5-9558-63b0bcf2a1d1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"largestKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:118","type":"CtIfImpl","sourcecode":"if ((int[][int]) > int) {\n    int = int[][int];\n    int = int;\n} "},"status":-1},{"failures":[],"tindex":"b25eb91b-13a2-11e5-9558-eb0e14839767","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"index","index":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"status":0},{"failures":[],"tindex":"b25ee02c-13a2-11e5-9558-ef90d22697cd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:651","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"canRemove":"validForUpdate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:108","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[71],"tindex":"b25ee02d-13a2-11e5-9558-354a3833530a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:971","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:906","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[97,98],"tindex":"b25ee02e-13a2-11e5-9558-29b85ee0607a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:95","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n    return false;\n} "},"status":-1},{"failures":[99,100,101,102,103,104,105,106,107,108,109,110],"tindex":"b25ee02f-13a2-11e5-9558-4bc2b96fc7db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:265","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"b25ee030-13a2-11e5-9558-43dab494fb14","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"The collection must not be null\");\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:221","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, E);\n}"},"status":0},{"failures":[111,112,113,114,115,116,117],"tindex":"b25ee031-13a2-11e5-9558-11d15a1e3720","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:368","type":"CtIfImpl","sourcecode":"if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n    E = E;\n    int = int;\n} "},"status":-1},{"failures":[],"tindex":"b25ee032-13a2-11e5-9558-238121bcdb2b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[118,119],"tindex":"b25f0743-13a2-11e5-9558-f706dd857764","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:146","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<? super E>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<? super E>[][int].evaluate(E)) == true) {\n        org.apache.commons.collections4.Closure<? super E>[][int].execute(E);\n        return ;\n    } \n}"},"status":-1},{"failures":[120,121,122,123,124],"tindex":"b25f0744-13a2-11e5-9558-9bb765f4ff0f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate to call must not be null\");\n} "},"variableMap":{"predicate":"keyPredicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:142","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Predicate<? super K>) != null) && ((org.apache.commons.collections4.Predicate<? super K>.evaluate(K)) == false)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot add key - Predicate rejected it\");\n} "},"status":-1},{"failures":[],"tindex":"b25f0745-13a2-11e5-9558-154ef5b122de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:202","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"b25f0746-13a2-11e5-9558-c320593c674f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:676","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} "},"variableMap":{"current":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:660","type":"CtWhileImpl","sourcecode":"while (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        break;\n    } \n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":0},{"failures":[],"tindex":"b25f2e57-13a2-11e5-9558-5730cfb694e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:124","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.hasPrevious();\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:112","type":"CtIfImpl","sourcecode":"if (((int) == (int)) || ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator)) {\n    return java.util.Iterator<? extends E>.hasNext();\n} "},"status":-2},{"failures":[],"tindex":"b2603fc8-13a2-11e5-9558-35bc430799d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:137","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    E[][int] = ((E)(java.io.ObjectInputStream.readObject()));\n}"},"status":-2},{"failures":[53,54,55,56],"tindex":"b260dc09-13a2-11e5-9558-1fd2fb530017","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1005","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(null)"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:233","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.doWriteObject(java.io.ObjectOutputStream)"},"status":-1},{"failures":[125,126,127,128,129,130,42,131,132,133,134,135,136,137,138,44,139,140,141,142,143,144,145,45,146,147,148,149,150],"tindex":"b260dc0a-13a2-11e5-9558-a3e4e5f46ff8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:83","type":"CtInvocationImpl","sourcecode":"java.util.SortedSet<E>.clear()"},"variableMap":{"set":"uniqueSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:488","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>) == null) {\n    java.util.Set<E> = org.apache.commons.collections4.set.UnmodifiableSet.<E>unmodifiableSet(java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet());\n} "},"status":-1},{"failures":[151,152,153,154,155,156],"tindex":"b260dc0b-13a2-11e5-9558-3ddb488a0afc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:174","type":"CtIfImpl","sourcecode":"if ((int == 0) || (int == 0)) {\n    return null;\n} "},"variableMap":{"m":"end2","n":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtIfImpl","sourcecode":"if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n    if ((int[][int]) <= (int[][(int + int)])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[],"tindex":"b261031c-13a2-11e5-9558-fd34f23ba496","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:906","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[157,158,159,160,161,162],"tindex":"b261031d-13a2-11e5-9558-a708738c2c27","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    throw new java.lang.ClassCastException((org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement + \" must be Comparable\"));\n} "},"variableMap":{"dataElement":"object","o":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:213","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.util.List<E>.remove(java.lang.Object);\n} "},"status":-1},{"failures":[],"tindex":"b261031e-13a2-11e5-9558-d3edeb607dee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return null;\n} "},"variableMap":{"lengthInBits":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:759","type":"CtWhileImpl","sourcecode":"while (true) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"b262b0cf-13a2-11e5-9558-69dd8047834f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:467","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:432","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<K>emptyOrderedIterator();\n} "},"status":-2},{"failures":[],"tindex":"b262b0d0-13a2-11e5-9558-c5689a10629b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:172","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.checkNotStarted()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:590","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(java.lang.Object);\n    java.lang.StringBuilder.append(int);\n    java.lang.StringBuilder.append(':');\n    java.lang.StringBuilder.append(java.lang.Object);\n    if (java.util.Iterator<E>.hasNext()) {\n        java.lang.StringBuilder.append(',');\n    } \n}"},"status":-2},{"failures":[163,164,165,166,167,168,169,170,171,172,173],"tindex":"b2634d11-13a2-11e5-9558-cf6c5cfbecad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    return false;\n} "},"variableMap":{"mut":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:134","type":"CtIfImpl","sourcecode":"if (java.util.Collection<E>.contains(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"b2634d12-13a2-11e5-9558-d1d98d40f94a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:868","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"rval","node":"rval","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-2},{"failures":[74,75,77,78,79,174,81,71,72,73,83,84,85,86,87,175,89],"tindex":"b2637423-13a2-11e5-9558-c59bda3bc536","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1360","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n    }\n} "},"status":-1},{"failures":[],"tindex":"b264d3b4-13a2-11e5-9558-838cf81ff03f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"size","maxElements":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:187","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":0},{"failures":[176,177,178,179,180,181,182,183,184,185,186,187,188,189,190],"tindex":"b2663345-13a2-11e5-9558-19ee4c260c84","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:162","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>._putAll(java.util.Map<? extends K, ? extends V>)"},"variableMap":{"this":"this","map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:325","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-1},{"failures":[191,192,193,194,195,196,197,198,199],"tindex":"b26792d6-13a2-11e5-9558-35f67f060533","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:133","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<K, V> = this;\n} "},"status":-1},{"failures":[200,201,202,203,204,205,206,207,208],"tindex":"b26792d7-13a2-11e5-9558-c7e8425eeb97","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:970","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"rval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[209,210,211],"tindex":"b268a448-13a2-11e5-9558-41b4f2f465fb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:268","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.SetUniqueList<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n    if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n    } \n}"},"status":-1},{"failures":[],"tindex":"b268a449-13a2-11e5-9558-ab82cf8cc90c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:115","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.NodeCachingLinkedList<E>.shrinkCacheToMaximumSize()"},"variableMap":{"this":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:102","type":"CtIfImpl","sourcecode":"if (java.util.HashSet<E>.contains(E)) {\n    java.util.List<E>.add(E);\n    java.util.HashSet<E>.remove(E);\n} "},"status":-2},{"failures":[],"tindex":"b268a44a-13a2-11e5-9558-e3ca4436de18","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1674","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"lastReturnedNode":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1151","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":0},{"failures":[212,213],"tindex":"b269679b-13a2-11e5-9558-2f668ef6c8f1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1036","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.init()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1038","type":"CtWhileImpl","sourcecode":"while (true) {\n    final K K = ((K)(java.io.ObjectInputStream.readObject()));\n    if (K == null) {\n        break;\n    } \n    final V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.put(K, V);\n}"},"status":-1},{"failures":[],"tindex":"b269679c-13a2-11e5-9558-57e18f2c9506","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedClosure:68","type":"CtIfImpl","sourcecode":"if (java.util.Collection<org.apache.commons.collections4.Closure<E>> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure collection must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"b269679d-13a2-11e5-9558-6561ba4418d6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:111","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.CollectionSortedBag<E>.add(java.util.Iterator<? extends E>.next(), 1);\n    boolean = boolean || boolean;\n}"},"status":-2},{"failures":[],"tindex":"b269679e-13a2-11e5-9558-29d8c3f7818e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:408","type":"CtIfImpl","sourcecode":"if (java.lang.Boolean == null) {\n    java.lang.Boolean = java.lang.Boolean;\n} "},"variableMap":{"answer":"result","defaultValue":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:74","type":"CtIfImpl","sourcecode":"if (java.lang.Boolean == null) {\n    throw new org.apache.commons.collections4.FunctorException(\"Transformer must return an instanceof Boolean, it was a null object\");\n} "},"status":-2},{"failures":[],"tindex":"b269679f-13a2-11e5-9558-c9a001379d99","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:113","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    return java.lang.Integer.intValue();\n} "},"variableMap":{"count":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:135","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    return int;\n} "},"status":-2},{"failures":[],"tindex":"b26ac730-13a2-11e5-9558-4502434aeaa8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:182","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> , int++) {\n    T[][int] = ((T)(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue()));\n}"},"status":-2},{"failures":[],"tindex":"b26ac731-13a2-11e5-9558-51964d9ae7c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:467","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"status":0},{"failures":[214,215,216,217,218,219,220,221],"tindex":"b26ac732-13a2-11e5-9558-af782700b4e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hash2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:156","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-1},{"failures":[],"tindex":"b26ac733-13a2-11e5-9558-53172836d0fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:140","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.comparators.FixedOrderComparator<T>.isLocked()) {\n    throw new java.lang.UnsupportedOperationException(\"Cannot modify a FixedOrderComparator after a comparison\");\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:163","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.comparators.FixedOrderComparator<T>.checkLocked()"},"status":0},{"failures":[],"tindex":"b26aee44-13a2-11e5-9558-ef9f8d8487b1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:134","type":"CtReturnImpl","sourcecode":"return java.lang.String.startsWith(java.lang.String)"},"variableMap":{"key":"value","s1":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:254","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"b26aee45-13a2-11e5-9558-0532e281dedd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:915","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239],"tindex":"b26aee46-13a2-11e5-9558-8f01c64e36ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"i","expectedModCount":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:467","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        @java.lang.SuppressWarnings(value = \"unchecked\")\n        final T T = ((T)(E));\n        T[][int++] = T;\n    }\n}"},"status":-1},{"failures":[111,112,113,114,115,116,240,117,241,242,243,244,245],"tindex":"b26aee47-13a2-11e5-9558-dd238ff04395","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:298","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n    java.util.ArrayList<E>.add(null);\n    java.util.BitSet.clear(int);\n}"},"variableMap":{"iterators":"iterators","valueSet":"valueSet","values":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:295","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<E>) == null) {\n    java.util.ArrayList<E> = new java.util.ArrayList<E>(java.util.ArrayList<java.util.Iterator<? extends E>>.size());\n    java.util.BitSet = new java.util.BitSet(java.util.ArrayList<java.util.Iterator<? extends E>>.size());\n    for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n        java.util.ArrayList<E>.add(null);\n        java.util.BitSet.clear(int);\n    }\n} "},"status":-1},{"failures":[],"tindex":"b26aee48-13a2-11e5-9558-610250ab8858","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:49","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.OrderedMapIterator<K, ? extends V> == null) {\n    throw new java.lang.IllegalArgumentException(\"OrderedMapIterator must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"b26aee49-13a2-11e5-9558-2ff5d2c44718","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"status":-2},{"failures":[],"tindex":"b26dd47a-13a2-11e5-9558-93ccfacb308b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"b26dd47b-13a2-11e5-9558-ad9e72e5c3a2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:649","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"parent":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE","child":"newNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1284","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue(), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325],"tindex":"b26dd47c-13a2-11e5-9558-7f48146aaea3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"size","proposedCapacity":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:562","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[200,202,203,204,205,206,207],"tindex":"b26dd47d-13a2-11e5-9558-ef5459e674dd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:972","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"rval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[],"tindex":"b26dd47e-13a2-11e5-9558-e3c0a42b82b4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1092","type":"CtReturnImpl","sourcecode":"return ((V)(java.lang.Object))"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:206","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n        return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"b26dd47f-13a2-11e5-9558-9db22b42681f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"p":"left","parent":"left","h":"p","predecessor":"predecessor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:597","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"b26dd480-13a2-11e5-9558-3f007a0fa0ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:708","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"variableMap":{"current":"node","tree":"predecessor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, null);\n}"},"status":-2},{"failures":[326,327,328,329,330,331,332,333,334,335,336,337,338,339,340],"tindex":"b26dd481-13a2-11e5-9558-5993cb5d152e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:229","type":"CtForEachImpl","sourcecode":"for (final O O : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>) {\n    org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.max(O));\n}"},"variableMap":{"helper":"helper"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:253","type":"CtForEachImpl","sourcecode":"for (final O O : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>) {\n    org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.min(O));\n}"},"status":-1},{"failures":[],"tindex":"b26dfb92-13a2-11e5-9558-b104fbbf2416","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1467","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == null) {\n    throw new java.lang.NullPointerException(\"The collection must not be null\");\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:146","type":"CtIfImpl","sourcecode":"if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":0},{"failures":[],"tindex":"b26dfb93-13a2-11e5-9558-1b85f93832b5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"count","modifications":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1105","type":"CtForImpl","sourcecode":"for (int int = int ; int > 0 ; int--) {\n    org.apache.commons.collections4.map.Flat3Map<K, V>.put(((K)(java.io.ObjectInputStream.readObject())), ((V)(java.io.ObjectInputStream.readObject())));\n}"},"status":0},{"failures":[],"tindex":"b26dfb94-13a2-11e5-9558-1b0f12441cea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"entrySize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:520","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E E = ((E)(java.io.ObjectInputStream.readObject()));\n    final int int = java.io.ObjectInputStream.readInt();\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    int += int;\n}"},"status":-2},{"failures":[],"tindex":"b26dfb95-13a2-11e5-9558-f1c91dfb9484","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:95","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and transformer map must not be null\");\n} "},"status":-2},{"failures":[73,341,202,342,203,343,204,205,206,71],"tindex":"b26dfb96-13a2-11e5-9558-fd839152aea1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:855","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"node","node":"rightChild","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"b26dfb97-13a2-11e5-9558-3be82a55573e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:157","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"variableMap":{"in":"nextElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:373","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n    continue;\n} "},"status":-2},{"failures":[344],"tindex":"b26dfb98-13a2-11e5-9558-e5305b5f1450","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtIfImpl","sourcecode":"if (java.util.Set<E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Set must not be null\");\n} "},"variableMap":{"set":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1784","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E> == null) || ((java.util.Collection<E>.size()) != 1)) {\n    throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\");\n} "},"status":-1},{"failures":[345,346],"tindex":"b26dfb99-13a2-11e5-9558-174763f8932e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"status":-1},{"failures":[],"tindex":"b26dfb9a-13a2-11e5-9558-bfe23a534d8e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"variableMap":{"lastItemIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:459","type":"CtIfImpl","sourcecode":"if ((T[].int) < int) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T[] T[] = ((T[])(java.lang.reflect.Array.newInstance(T[].getClass().getComponentType(), int)));\n    T[] = T[];\n} "},"status":-2},{"failures":[347,348],"tindex":"b26dfb9b-13a2-11e5-9558-23788526f862","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"h","lengthInBits":"h","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"b26dfb9c-13a2-11e5-9558-5b1cb4eb2fa1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:152","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject()"},"variableMap":{"this":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:380","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E);\n    final int int = org.apache.commons.collections4.Bag<?>.getCount(E);\n    if ((1 <= int) && (int <= int)) {\n        org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n    } else {\n        org.apache.commons.collections4.Bag<E>.add(E, int);\n    }\n}"},"status":-2},{"failures":[349,350,74,75,77,78,79,174,81,71,72,73,341,202,342,203,343,204,205,206,351,352,83,84,85,86,87,175,89,353,354],"tindex":"b26dfb9d-13a2-11e5-9558-838549211822","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1022","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"siblingNode":"rval","currentNode":"rval","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-1},{"failures":[355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,192,191,193,194,195,196,197,198,199,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461],"tindex":"b26e22ae-13a2-11e5-9558-97af85a77975","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:235","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.BidiMap<V, K>) == null) {\n    org.apache.commons.collections4.BidiMap<V, K> = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.createBidiMap(java.util.Map<V, K>, java.util.Map<K, V>, this);\n} "},"status":-1},{"failures":[462],"tindex":"b26e22af-13a2-11e5-9558-7bfb195d0d59","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:141","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Iterator setValue() can only be called after next() and before remove()\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:197","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Time unit must not be null\")"},"status":-1},{"failures":[111,112,113,114,115,116,240,117,241,242,244,245],"tindex":"b26e22b0-13a2-11e5-9558-c7e3b1bc868a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:315","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.ArrayList<E>.set(int, java.util.Iterator<? extends E>.next());\n    java.util.BitSet.set(int);\n    return true;\n} "},"status":-1},{"failures":[111,112,113,114,115,116,240,117,241,242,244,245],"tindex":"b26e22b1-13a2-11e5-9558-ad03ccc30398","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"leastIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:359","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    if (int == (-1)) {\n        int = int;\n        E = java.util.ArrayList<E>.get(int);\n    } else {\n        final E E = java.util.ArrayList<E>.get(int);\n        if ((java.util.Comparator<? super E>) == null) {\n            throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n        } \n        if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n            E = E;\n            int = int;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"b26e22b2-13a2-11e5-9558-e1fced997d04","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:193","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    (int)++;\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n        throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n    } \n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n} else if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n} "},"status":-2},{"failures":[463,60,61,63,64,65,464,465,67,68],"tindex":"b26e22b3-13a2-11e5-9558-6f89d35967b3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:480","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : org.apache.commons.collections4.map.CompositeMap<K, V>.entrySet()) {\n    int += java.util.Map.Entry<K, V>.hashCode();\n}"},"status":-1},{"failures":[],"tindex":"b26e22b4-13a2-11e5-9558-d7d6ba4dc7c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.AbstractSerializableSetDecorator:68","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[],"tindex":"b26e22b5-13a2-11e5-9558-d74fd2dc8e60","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:578","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"end2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:263","type":"CtWhileImpl","sourcecode":"while ((int < int) || (int < int)) {\n    if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n        ++int;\n    } else {\n        if ((int - int) > (int - int)) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        } else {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        }\n    }\n}"},"status":-2},{"failures":[74,75,77,78,79,174,81,71,72,73,83,84,85,86,87,175,89],"tindex":"b26e22b6-13a2-11e5-9558-551963e7aa05","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1361","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n}"},"status":-1},{"failures":[],"tindex":"b26e22b7-13a2-11e5-9558-d924f6c1b7a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:319","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n    java.util.Collection<E>.clear();\n}"},"status":-2},{"failures":[466,467,468,469,470,471,472],"tindex":"b26e22b8-13a2-11e5-9558-915097c63f81","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.PredicatedMap:174","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.Predicate<? super V>) != null"},"variableMap":{"valuePredicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:176","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[2,6,7,9,10,11,14,16,19,20,29],"tindex":"b26e49c9-13a2-11e5-9558-7ffe3715d984","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:171","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:229","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"b26e49ca-13a2-11e5-9558-03e990a9b2e8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:73","type":"CtIfImpl","sourcecode":"if ((java.lang.Class<?>[] == null) || ((java.lang.Class<?>[].int) == 0)) {\n    return new org.apache.commons.collections4.functors.InstantiateTransformer<T>();\n} "},"variableMap":{"paramTypes":"paramTypes","length":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:80","type":"CtIfImpl","sourcecode":"if ((java.lang.Class<?>[] == null) || ((java.lang.Class<?>[].int) == 0)) {\n    return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(java.lang.String);\n} "},"status":-2},{"failures":[],"tindex":"b26e49cb-13a2-11e5-9558-4daf7ed076cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1322","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if (java.lang.Object == null) {\n        if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n            return false;\n        } \n    } else {\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"b26e49cc-13a2-11e5-9558-75a376b6d32c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:184","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.set(int)"},"variableMap":{"orderingBits":"key3","index":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:509","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}