{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":306,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":406,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":408,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":431,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":117,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":198,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":165,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":34,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":46,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":98,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":318,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":67,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":268,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":181,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":382,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":184,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":497,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":551,"org.apache.commons.collections4.CollectionUtilsTest.extractSingleton":461,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":291,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":156,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":289,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":314,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":446,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":462,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":447,"org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testEmptyIterator":575,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd":294,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":448,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":528,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":449,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":524,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":324,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":219,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":255,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":203,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":397,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":212,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":347,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":116,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":320,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":321,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":392,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":357,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":515,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":426,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":404,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":45,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":343,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":257,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":148,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":152,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":365,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":4,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":53,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":238,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":310,"org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testIterator":574,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":288,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":339,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":491,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":85,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":385,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":337,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":79,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":58,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testFullIterator":573,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":174,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":141,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":344,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":494,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":335,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":48,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":428,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":275,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":179,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":126,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":272,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":20,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":211,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":204,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":457,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":149,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":269,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":327,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":328,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":326,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":213,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":35,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":17,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":270,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":105,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":226,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":471,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":509,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":387,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":76,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":527,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":182,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":54,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":183,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":315,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":39,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":351,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":534,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":556,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":33,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":44,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":2,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":276,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":473,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":400,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":307,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":561,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":518,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":304,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":464,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":355,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":62,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":30,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":506,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":302,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":458,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":266,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":485,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":521,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":376,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":122,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":277,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":278,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":244,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":487,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":50,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":577,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":95,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":267,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":8,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":16,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":1,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":189,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":502,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":440,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":234,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":301,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":99,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":520,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":25,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":439,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":124,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":380,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":429,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":147,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":237,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":236,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":87,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":175,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":232,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":375,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":130,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":74,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":225,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":332,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":260,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":191,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":420,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":19,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":75,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":325,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":293,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":176,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":319,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":489,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":82,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":77,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":469,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":322,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":180,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":483,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":281,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":283,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":311,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":465,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":83,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":514,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":94,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":254,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":379,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":253,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":529,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":38,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":93,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":142,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":371,"org.apache.commons.collections4.ArrayStackTest.testSearch":460,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":104,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":412,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":413,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":414,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":262,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":492,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":113,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":297,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":331,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testIterator":571,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":330,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":329,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":101,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":391,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":27,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":228,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":195,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":28,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":61,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":139,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":250,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":432,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":459,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":218,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":477,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":52,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":504,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals":108,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":256,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":241,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":109,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":475,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":536,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":526,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":199,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":163,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":115,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":137,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":350,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":292,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":560,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":66,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":102,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":317,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":186,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":155,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":166,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":263,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":224,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":112,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":451,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":472,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":215,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":303,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":409,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":368,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":422,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":132,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":366,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":496,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":312,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":227,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":43,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":80,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":389,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":539,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":282,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":423,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":305,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":424,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":151,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":286,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":135,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":72,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":223,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":222,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":239,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":511,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":562,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":543,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":441,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":341,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":550,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":334,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":273,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":453,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":403,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":41,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":290,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":493,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":127,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":145,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":300,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":193,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":233,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":466,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":523,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":533,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":208,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":230,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":481,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":55,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":65,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":265,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":202,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":285,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":235,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":316,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":221,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":381,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":388,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":56,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":474,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":92,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":490,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIsEmpty":463,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":559,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":205,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":73,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":51,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":417,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":530,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":15,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":178,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":299,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsSelf":567,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":136,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":3,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":120,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":123,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSimpleSerialization":438,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":508,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":161,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":197,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":196,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":395,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":500,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":252,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":47,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":214,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":540,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":207,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":358,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":542,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":162,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":284,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":296,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":173,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":415,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":0,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":36,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":188,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":501,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":64,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":558,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":169,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":170,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":29,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":138,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":271,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":90,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":121,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":133,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":32,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":209,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":12,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":407,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":134,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":210,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":564,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":478,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":57,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":103,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":544,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":100,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":356,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":157,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":242,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":9,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":416,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":353,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":86,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":229,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":452,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":201,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":118,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":23,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":443,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":434,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":482,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":249,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":484,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":383,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":510,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":40,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":336,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":427,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":24,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":421,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":150,"org.apache.commons.collections4.SetUtilsTest.testHashCode":535,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":470,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":143,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":26,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":345,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":486,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":125,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":394,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":393,"org.apache.commons.collections4.map.ListOrderedMapTest.testNextKey":418,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":398,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":309,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":192,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":187,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":251,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":7,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":146,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":261,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":373,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":346,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":430,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":5,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":106,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":442,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":384,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":386,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":200,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":519,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":159,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":70,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":177,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":140,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":390,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":280,"org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll":479,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":354,"org.apache.commons.collections4.bag.HashBagTest.testObjectEqualsSelf":566,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":144,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":399,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":445,"org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testFullIterator":576,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":245,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":190,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":31,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":81,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":110,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":467,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":96,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":248,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":247,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":495,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":220,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":246,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":274,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":456,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":537,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":370,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":557,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":444,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":553,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":554,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":348,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":563,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndexBoundsChecking":295,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":153,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":367,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":258,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":499,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":517,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":360,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":513,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":374,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":433,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":578,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":240,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":340,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEqualsAfterSerialization":107,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":411,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":171,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":361,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":549,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":63,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":525,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":531,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":18,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":172,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":231,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":364,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":363,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":362,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":369,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":119,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":333,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":168,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":279,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":402,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":401,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":512,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":206,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":516,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":372,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":570,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":164,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":541,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":548,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":455,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":532,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":454,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":84,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":545,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":546,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":111,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":547,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testEmptyIterator":572,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":323,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":88,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":131,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":405,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":97,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":185,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":10,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":522,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":194,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":505,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":555,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":114,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":313,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":22,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":287,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":69,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":342,"org.apache.commons.collections4.map.LRUMapTest.testLRU":396,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":338,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":89,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":498,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":21,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":450,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":37,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":243,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":436,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":160,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":167,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":435,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":378,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":488,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":13,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":154,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":59,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":480,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":352,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":377,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":538,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":129,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":216,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":569,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":128,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":437,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":308,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":503,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":468,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsSelf":565,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":410,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":507,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":298,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":476,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":552,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":359,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":42,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":349,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":11,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":78,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":14,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":60,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":71,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":264,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":425,"org.apache.commons.collections4.bag.TreeBagTest.testObjectEqualsSelf":568,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":217,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":6,"org.apache.commons.collections4.map.ListOrderedMap2Test.testNextKey":419,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":68,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":259,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":158},"transformations":[{"failures":[],"tindex":"e638979a-13f2-11e5-8f1d-e1fdfedd984b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:532","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n} else if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an internal Entry!\"));\n} "},"variableMap":{"root":"parent","h":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:577","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],"tindex":"e638beab-13f2-11e5-8f1d-391ff59a2fc7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:224","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"e638e5bc-13f2-11e5-8f1d-59e870e7ef83","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:148","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} "},"status":0},{"failures":[],"tindex":"e638e5bd-13f2-11e5-8f1d-918c0dd609aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:254","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.previousIndex()) >= 0) {\n    java.util.ListIterator<?>.previous();\n}"},"variableMap":{"li":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:111","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.CollectionSortedBag<E>.add(java.util.Iterator<? extends E>.next(), 1);\n    boolean = boolean || boolean;\n}"},"status":-2},{"failures":[96,97,98,99,100,101,102],"tindex":"e638e5be-13f2-11e5-8f1d-43d325efaa3c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:993","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:649","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[103,96,104,105,106,102],"tindex":"e6390ccf-13f2-11e5-8f1d-c1bb3de0e796","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    throw new java.lang.NullPointerException((org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement + \" cannot be null\"));\n} "},"status":-1},{"failures":[],"tindex":"e6390cd0-13f2-11e5-8f1d-8b9313f27cba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:124","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.hasPrevious();\n} "},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:315","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.ArrayList<E>.set(int, java.util.Iterator<? extends E>.next());\n    java.util.BitSet.set(int);\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"e6390cd1-13f2-11e5-8f1d-0df6b866c899","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:556","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"variableMap":{"next":"previous","node":"next","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:553","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n} else {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n}"},"status":-2},{"failures":[26],"tindex":"e63933e2-13f2-11e5-8f1d-d1605d02b33f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:270","type":"CtIfImpl","sourcecode":"if (java.lang.Object.equals(V)) {\n    return true;\n} "},"status":-1},{"failures":[107,108,73,74,75,76,77,78,109,79,82],"tindex":"e63933e3-13f2-11e5-8f1d-bba04850fb69","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:194","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} else if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"o":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:221","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157],"tindex":"e63933e4-13f2-11e5-8f1d-3bee58e2cf70","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"it2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[158,159,2,160,161,162,11,163,164,165,166,167,168,28,169,170,171,172,173,174,175,176,177,178,179,180,181,38,182,183,184,185,186,187,188,189,190,191,192,193,194,195,48,196,197,198,199,200,201,202,203,204,205,206,207,208,54,58,209,210,211,212,213,214,215,216,217,218,219,220,221,71,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,82,253,254,255,256,257,258,259,260,261,262,263,264,265,94,266,267,268,269,270,271,272,273,274],"tindex":"e6395af5-13f2-11e5-8f1d-b313f3ac419b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:344","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    return V;\n} "},"status":-1},{"failures":[275,276,277],"tindex":"e6395af6-13f2-11e5-8f1d-fd3906a5da4b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:242","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.ListOrderedSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n    if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n    } \n}"},"status":-1},{"failures":[],"tindex":"e6395af7-13f2-11e5-8f1d-fd3b05cea598","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2050","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1207","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[278,279,280,97,281,98,282,99,100,101],"tindex":"e6398208-13f2-11e5-8f1d-d19e67b3c11c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1284","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue(), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    }\n}"},"variableMap":{"node":"siblingNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"dataElement","this":"this","newNode":"siblingNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1030","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":-1},{"failures":[283,284,285,286,287,288,289,290,291,292,293],"tindex":"e639a919-13f2-11e5-8f1d-3df080eb5850","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1823","type":"CtReturnImpl","sourcecode":"return int <= 0"},"variableMap":{"ret":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:384","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"e639a91a-13f2-11e5-8f1d-9fb2cd9301f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyMapIterator:35","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Iterator contains no elements\")"},"status":-2},{"failures":[],"tindex":"e639a91b-13f2-11e5-8f1d-9b67943dc485","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:897","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"currentNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:505","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"e639d02c-13f2-11e5-8f1d-c992702bf734","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"variableMap":{"node":"siblingNode","this":"this","rval":"siblingNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1030","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":-2},{"failures":[],"tindex":"e639d02d-13f2-11e5-8f1d-73f00ecc671b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:181","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) != null) {\n    org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n} "},"status":-2},{"failures":[294,295],"tindex":"e639d02e-13f2-11e5-8f1d-9b8f278c2d6c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.GrowthList:123","type":"CtIfImpl","sourcecode":"if (int > int) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.<E>nCopies((int - int), null));\n} "},"status":-1},{"failures":[296],"tindex":"e639f73f-13f2-11e5-8f1d-258aba3aa8c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:858","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"variableMap":{"removed":"previousObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:220","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n} "},"status":-1},{"failures":[],"tindex":"e639f740-13f2-11e5-8f1d-2155e4c46bc6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"status":-2},{"failures":[],"tindex":"e639f741-13f2-11e5-8f1d-81665b1e3d1f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.UnmodifiableList:114","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator())"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.UnmodifiableList:119","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator(int))"},"status":-2},{"failures":[297,298,103,96,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,278,104,105,322,279,323,324,325,326,327,328,329,330,331,280,332,333,97,281,334,335,98,282,99,100,101,336,337,338,339,106,102,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376],"tindex":"e639f742-13f2-11e5-8f1d-49b9afbf2963","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:722","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"from":"currentNode","to":"y","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-1},{"failures":[377,378,379,380,381,382],"tindex":"e63a1e53-13f2-11e5-8f1d-eda327b8f6cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"x","index":"end2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:199","type":"CtWhileImpl","sourcecode":"while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    int[][int] = ++int;\n    ++int;\n}"},"status":-1},{"failures":[0,1,159,2,3,4,160,5,161,6,7,8,9,383,10,384,162,11,12,385,13,163,14,164,15,16,17,20,21,22,23,24,386,387,25,26,27,28,168,30,31,32,33,34,388,389,35,36,37,38,181,191,390,391,192,193,194,40,41,42,43,44,392,45,46,47,48,393,394,196,197,49,198,195,50,51,52,53,54,395,55,56,57,58,208,396,59,60,61,62,397,398,399,400,401,402,403,404,405,406,235,234,407,408,409,245,246,247,248,410,249,250,251,74,75,76,77,78,109,411,79,80,81,82,412,413,414,253,254,83,252,86,87,88,89,90,415,416,91,92,93,94,265],"tindex":"e63a1e54-13f2-11e5-8f1d-f995ef5102e3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n    do {\n        final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n} "},"status":-1},{"failures":[417,418,419],"tindex":"e63a1e55-13f2-11e5-8f1d-7985337e61c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    return java.util.List<K>.get((int - 1));\n} "},"variableMap":{"insertOrder":"insertOrder","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:195","type":"CtIfImpl","sourcecode":"if ((int >= 0) && (int < (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) - 1))) {\n    return java.util.List<K>.get((int + 1));\n} "},"status":-1},{"failures":[420],"tindex":"e63a4566-13f2-11e5-8f1d-0b5a5b2095e6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:106","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.KeyAnalyzer.int"},"variableMap":{"org.apache.commons.collections4.trie.KeyAnalyzer.NULL_BIT_KEY":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:168","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.java.lang.Object)) {\n    return int;\n} "},"status":-1},{"failures":[],"tindex":"e63a4567-13f2-11e5-8f1d-c3169581b586","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:295","type":"CtIfImpl","sourcecode":"if (K == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 2 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 1 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = K.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n            case 2 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n            case 1 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n        }\n    } \n}"},"status":0},{"failures":[421,422],"tindex":"e63a4568-13f2-11e5-8f1d-a97be02a87d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:299","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(E))) {\n    org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().add(E);\n    java.util.List<E>.add(int, E);\n} "},"status":-1},{"failures":[377,378,379,380,381,382],"tindex":"e63a4569-13f2-11e5-8f1d-89d578cb59e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"start2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtIfImpl","sourcecode":"if ((int - int) > (int - int)) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n} else {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n}"},"status":-1},{"failures":[],"tindex":"e63a456a-13f2-11e5-8f1d-094448243da5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1218","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"root":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:667","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"e63a456b-13f2-11e5-8f1d-d167c8585454","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:732","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return null;\n} "},"variableMap":{"parent":"right","current":"right","right":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:759","type":"CtWhileImpl","sourcecode":"while (true) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[423,424,425],"tindex":"e63a6c7c-13f2-11e5-8f1d-b11cac7e2ede","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:129","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"exhausted":"uniqueIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:243","type":"CtIfImpl","sourcecode":"if ((boolean) && (org.apache.commons.collections4.MultiMap<K, C>.containsKey(K))) {\n    throw new java.lang.IllegalArgumentException(\"Duplicate key in uniquely indexed collection.\");\n} "},"status":-1},{"failures":[426,427,428,429,430,296,431,432,433,434,435,436],"tindex":"e63a6c7d-13f2-11e5-8f1d-e778b3b49716","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:216","type":"CtIfImpl","sourcecode":"if (boolean == false) {\n    return false;\n} "},"variableMap":{"removed":"previousObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:263","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasPrevious()) {\n    final E E = java.util.ListIterator<? extends E>.previous();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"e63a6c7e-13f2-11e5-8f1d-272683ab09bf","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:562","type":"CtInvocationImpl","sourcecode":"((org.apache.commons.collections4.list.CursorableLinkedList<E>)(org.apache.commons.collections4.list.AbstractLinkedList<E>)).unregisterCursor(this)"},"variableMap":{"parent":"temp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:192","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    if (java.util.Set<E>.add(E)) {\n        java.util.List<E>.add(E);\n    } \n}"},"status":-2},{"failures":[],"tindex":"e63a6c7f-13f2-11e5-8f1d-9365122c57dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:398","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<java.util.Map.Entry<K, V>>emptyOrderedIterator();\n} "},"status":0},{"failures":[],"tindex":"e63a6c80-13f2-11e5-8f1d-1388fb53f48d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.EnumerationUtils:63","type":"CtWhileImpl","sourcecode":"while (java.util.StringTokenizer.hasMoreTokens()) {\n    java.util.List<java.lang.String>.add(java.util.StringTokenizer.nextToken());\n}"},"status":-2},{"failures":[],"tindex":"e63a6c81-13f2-11e5-8f1d-95f3b3574a41","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n    do {\n        final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n} "},"status":-2},{"failures":[],"tindex":"e63a9392-13f2-11e5-8f1d-bd47fbe037ad","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n        if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n            return true;\n        } \n    }\n} else {\n    for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n            return true;\n        } \n    }\n}"},"variableMap":{"this":"this","header":"entry","after":"entry","value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:225","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"e63a9393-13f2-11e5-8f1d-c33bcef7c567","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"count","index":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1105","type":"CtForImpl","sourcecode":"for (int int = int ; int > 0 ; int--) {\n    org.apache.commons.collections4.map.Flat3Map<K, V>.put(((K)(java.io.ObjectInputStream.readObject())), ((V)(java.io.ObjectInputStream.readObject())));\n}"},"status":-2},{"failures":[],"tindex":"e63a9394-13f2-11e5-8f1d-85ad3a96dee9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":0},{"failures":[278,279,97,281,98,282,99,100,101],"tindex":"e63a9395-13f2-11e5-8f1d-4fc673d0d91f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:841","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"x","rightChild":"x","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1125","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[312,313,314,315,316,317,318,320,279,437,438,348,349,351,352,353,354,356],"tindex":"e63a9396-13f2-11e5-8f1d-ff75533f53a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:684","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"rval":"rval","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[245],"tindex":"e63a9397-13f2-11e5-8f1d-ff17978bf2a4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"modified","nextCalled":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:717","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.hasNext()) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.next();\n    if (((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 1) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) {\n        org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[439,440],"tindex":"e63abaa8-13f2-11e5-8f1d-e58ac4e585c2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.SortedBag<E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    return org.apache.commons.collections4.SortedBag<E>;\n} "},"status":-1},{"failures":[283,284,285,286,287,288,289,290,291,441,292,293],"tindex":"e63abaa9-13f2-11e5-8f1d-4df2ef613864","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:359","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    if (int == (-1)) {\n        int = int;\n        E = java.util.ArrayList<E>.get(int);\n    } else {\n        final E E = java.util.ArrayList<E>.get(int);\n        if ((java.util.Comparator<? super E>) == null) {\n            throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n        } \n        if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n            E = E;\n            int = int;\n        } \n    }\n} "},"status":-1},{"failures":[158,159,2,160,161,162,11,163,164,165,166,167,28,169,170,171,168,172,173,174,175,176,177,178,179,180,38,182,183,184,181,185,186,187,188,189,190,191,192,193,194,48,196,197,198,195,199,200,201,202,203,204,205,206,207,54,58,209,210,211,208,212,213,214,215,216,217,218,219,220,71,222,223,224,221,225,226,227,228,229,230,231,232,233,235,236,237,238,234,239,240,241,242,243,244,247,248,245,246,249,250,251,82,253,254,255,252,256,257,258,259,260,261,262,263,264,94,266,267,268,265,269,270,271,272,273,274],"tindex":"e63abaaa-13f2-11e5-8f1d-f5cfa3eb1501","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n    return null;\n} "},"variableMap":{"entry":"previous"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:344","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    return V;\n} "},"status":-1},{"failures":[442,443],"tindex":"e63ae1bb-13f2-11e5-8f1d-4366b9d64da0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:973","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Predicate<? super O>.evaluate(O))) {\n    R.add(O);\n} "},"status":-1},{"failures":[],"tindex":"e63ae1bc-13f2-11e5-8f1d-bb79b5bbc720","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:467","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator();\n} "},"status":0},{"failures":[444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459],"tindex":"e63ae1bd-13f2-11e5-8f1d-e9ff7fc980bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:482","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-1},{"failures":[23,26,168],"tindex":"e63ae1be-13f2-11e5-8f1d-531a7bd65193","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:245","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsValue(java.lang.Object);\n} "},"status":-1},{"failures":[],"tindex":"e63ae1bf-13f2-11e5-8f1d-15668cadf9ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:104","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.CollectionBag<E>.add(E, 1)"},"status":-2},{"failures":[],"tindex":"e63ae1c0-13f2-11e5-8f1d-55c88b9b258c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"maxElements"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"status":-2},{"failures":[],"tindex":"e63ae1c1-13f2-11e5-8f1d-1b3f8855f162","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:216","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"path":"right","entry":"left","current":"left","predecessor":"current","bitIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:439","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[460],"tindex":"e63b08d2-13f2-11e5-8f1d-5d3cab4f42bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return 0;\n} "},"variableMap":{"key":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:157","type":"CtIfImpl","sourcecode":"if (((java.lang.Object == null) && (java.lang.Object == null)) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    return int;\n} "},"status":-1},{"failures":[],"tindex":"e63b08d3-13f2-11e5-8f1d-311f23270a5d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1570","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"e":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:601","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[461],"tindex":"e63b08d4-13f2-11e5-8f1d-99ddfb3842e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:83","type":"CtInvocationImpl","sourcecode":"java.util.SortedSet<E>.clear()"},"variableMap":{"set":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1784","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E> == null) || ((java.util.Collection<E>.size()) != 1)) {\n    throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\");\n} "},"status":-1},{"failures":[103,304,312,313,315,316,317,319,320,278,322,279,97,98,99,100,101,106,345,348,349,351,352,353,355,356,374,375],"tindex":"e63b08d5-13f2-11e5-8f1d-25812d1671ea","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1754","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getValue() can only be called after next() and before remove()\");\n} "},"variableMap":{"lastReturnedNode":"rval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"e63b08d6-13f2-11e5-8f1d-9fe78205b191","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:239","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.Object>.size()) == 0) {\n    org.apache.commons.collections4.set.ListOrderedSet<E>.clear();\n} else {\n    for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.ListOrderedSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n        if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"e63b08d7-13f2-11e5-8f1d-8b542d61f59a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:253","type":"CtForEachImpl","sourcecode":"for (final O O : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>) {\n    org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.min(O));\n}"},"status":-2},{"failures":[43,46,195,66,69,221],"tindex":"e63b2fe8-13f2-11e5-8f1d-2b96be1aa058","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:199","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(java.lang.Object)"},"variableMap":{"delegateMap":"this","key":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:149","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n    return true;\n} "},"status":-1},{"failures":[462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478],"tindex":"e63b2fe9-13f2-11e5-8f1d-97f7955093dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:117","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E>.isEmpty()) == false) {\n    return false;\n} "},"status":-1},{"failures":[377,378,379,382],"tindex":"e63b2fea-13f2-11e5-8f1d-37891fd16052","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.EditScript:107","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.sequence.EditCommand<T>.accept(org.apache.commons.collections4.sequence.CommandVisitor<T>)"},"variableMap":{"visitor":"visitor","command":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.DeleteCommand:53","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.sequence.CommandVisitor<T>.visitDeleteCommand(org.apache.commons.collections4.sequence.EditCommand<T>.getObject())"},"status":-1},{"failures":[479],"tindex":"e63b2feb-13f2-11e5-8f1d-9797e66baad7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:878","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Predicate<? super C>.evaluate(C))) {\n    return false;\n} "},"status":-1},{"failures":[480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,470,471,497,472,473,474,475,498,476,477,478],"tindex":"e63b2fec-13f2-11e5-8f1d-dd6a759b7667","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"size","removeIndex":"size","currentIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:97","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    int += java.util.Set<E>.size();\n}"},"status":-1},{"failures":[377,378,379,380,381,382],"tindex":"e63b2fed-13f2-11e5-8f1d-6763c996aa45","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:150","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.sequence.SequencesComparator.Snake(int , int , int)"},"variableMap":{"diag":"d","start":"end1","end":"delta"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtIfImpl","sourcecode":"if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n    if ((int[][(int - int)]) <= (int[][int])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[444,445,499,451,452,500,501,502,503,504,505,506,507,508,446,509,510,511,512,458,459,513,514,515,516,517,518,519,520,521,453,522,523,524,525,526,527,528,529,530,531],"tindex":"e63b2fee-13f2-11e5-8f1d-b7a43d740575","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:115","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    return false;\n} "},"status":-1},{"failures":[444,445,446,449,450,451,452,453,456,457],"tindex":"e63b56ff-13f2-11e5-8f1d-85ec3d778dea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:481","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n} "},"status":-1},{"failures":[],"tindex":"e63b5700-13f2-11e5-8f1d-0384422f5d98","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1419","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.EntrySet.(contains(java.lang.Object)) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-2},{"failures":[532,533,52,209,210,212,213,214,217,534,399,236,237,239,240,241,244],"tindex":"e63b5701-13f2-11e5-8f1d-edf2250b6807","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n    return true;\n} "},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:214","type":"CtIfImpl","sourcecode":"if (java.util.Map.Entry<K, V> == null) {\n    return false;\n} "},"status":-1},{"failures":[535],"tindex":"e63b5702-13f2-11e5-8f1d-c58f46d57326","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:146","type":"CtForEachImpl","sourcecode":"for (final T T : java.util.Collection<T>) {\n    if (T != null) {\n        int += T.hashCode();\n    } \n}"},"status":-1},{"failures":[111,112,113,536,537,538,122,134,539],"tindex":"e63b5703-13f2-11e5-8f1d-211008776cb7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:157","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"variableMap":{"in":"in"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:377","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.doReadObject(java.io.ObjectInputStream)"},"status":-1},{"failures":[278,279,280,97,281,98,282,99,100,101],"tindex":"e63b5704-13f2-11e5-8f1d-35af00d744a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:547","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    throw new java.util.ConcurrentModificationException(\"Cursor closed\");\n} "},"variableMap":{"valid":"xWasLeftChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1140","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"e63b7e15-13f2-11e5-8f1d-952a9b8f132c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"endIndex1","currentIndex":"endIndex1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:82","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-2},{"failures":[],"tindex":"e63b7e16-13f2-11e5-8f1d-551277f7fb11","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    return true;\n} "},"status":0},{"failures":[532,533,395,534,402],"tindex":"e63b7e17-13f2-11e5-8f1d-518cedcf78c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:245","type":"CtIfImpl","sourcecode":"if (java.util.Map.Entry<K, V> == null) {\n    return null;\n} "},"status":-1},{"failures":[442,443],"tindex":"e63b7e18-13f2-11e5-8f1d-7335eedefad0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:973","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Predicate<? super O>.evaluate(O))) {\n    R.add(O);\n} "},"status":-1},{"failures":[],"tindex":"e63b7e19-13f2-11e5-8f1d-7f716275216e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1040","type":"CtIfImpl","sourcecode":"if (K == null) {\n    break;\n} "},"status":-2},{"failures":[23,26,33,36,89,92],"tindex":"e63b7e1a-13f2-11e5-8f1d-616a65e839e8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:244","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[540,510,541,542,543,513,514,515,516,517,544,519,520,521,453,545,546,547,454,455,548,456,457,549,458,459,550,551],"tindex":"e63b7e1b-13f2-11e5-8f1d-031b59aa1f02","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:696","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"e63ba52c-13f2-11e5-8f1d-775d09773357","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:253","type":"CtForEachImpl","sourcecode":"for (final O O : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>) {\n    org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.min(O));\n}"},"status":-2},{"failures":[552,553,554,555,556,557,558,559,560,561,562],"tindex":"e63ba52d-13f2-11e5-8f1d-ad083910a621","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:323","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n        if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        } else {\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        }\n        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n        return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[563,564],"tindex":"e63ba52e-13f2-11e5-8f1d-19ad62c04c5a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:131","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.putAll(java.util.Map<? extends K, ? extends V>)"},"variableMap":{"this":"result","map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:203","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    java.util.Map<K, V>.put(org.apache.commons.collections4.map.TransformedMap<K, V>.transformKey(java.util.Map.Entry<? extends K, ? extends V>.getKey()), org.apache.commons.collections4.map.TransformedMap<K, V>.transformValue(java.util.Map.Entry<? extends K, ? extends V>.getValue()));\n}"},"status":-1},{"failures":[278,279,97,281,98,282,99,100,101],"tindex":"e63ba52f-13f2-11e5-8f1d-4da24f7919be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1126","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[565,566,567,568],"tindex":"e63ba530-13f2-11e5-8f1d-cb31d094d52d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:858","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:540","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[569,570],"tindex":"e63ba531-13f2-11e5-8f1d-2be5d84540d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:858","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"variableMap":{"removed":"match"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OnePredicate:97","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n    if (boolean) {\n        return false;\n    } \n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"e63ba532-13f2-11e5-8f1d-fb467d4b8585","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:635","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key1","next":"next","entry":"entry","key2":"key3","key5":"key1","previous":"next","hashCode":"hashCode","key3":"key5","key4":"key4","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:558","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"e63bcc43-13f2-11e5-8f1d-97a5be91d8da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1641","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"nextNode":"from"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":0},{"failures":[],"tindex":"e63bcc44-13f2-11e5-8f1d-c15006a4bae6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:203","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    java.util.Map<K, V>.put(org.apache.commons.collections4.map.TransformedMap<K, V>.transformKey(java.util.Map.Entry<? extends K, ? extends V>.getKey()), org.apache.commons.collections4.map.TransformedMap<K, V>.transformValue(java.util.Map.Entry<? extends K, ? extends V>.getValue()));\n}"},"status":-2},{"failures":[],"tindex":"e63bcc45-13f2-11e5-8f1d-8f33540603f8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"node","leftChild":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:499","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[571,572,573,574,575,576,577,578],"tindex":"e63bcc46-13f2-11e5-8f1d-734a59b8901c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"variableMap":{"it2":"iterator","it1":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:112","type":"CtIfImpl","sourcecode":"if (((int) == (int)) || ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator)) {\n    return java.util.Iterator<? extends E>.hasNext();\n} "},"status":-1},{"failures":[],"tindex":"e63bf357-13f2-11e5-8f1d-1b963be8630a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"bitIndex","index":"bitIndex","beyond":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:220","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"e63bf358-13f2-11e5-8f1d-6f943c287f1d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1470","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> instanceof org.apache.commons.collections4.BoundedCollection) {\n    return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).isFull();\n} "},"variableMap":{"coll":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:465","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) > (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n        return false;\n    } \n}"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":95,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}