{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":255,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":167,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":300,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":196,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":264,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":130,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":65,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionSize":360,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":410,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":17,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":15,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":74,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":72,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":260,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":341,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":356,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":326,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":355,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":272,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":214,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":409,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":266,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":267,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":224,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":99,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":2,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":28,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":161,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":178,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":4,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":412,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":179,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":210,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":232,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIsEmpty":112,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":188,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":71,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":204,"org.apache.commons.collections4.keyvalue.TiedMapEntryTest.testSelfReferenceHandling":342,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":310,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":201,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":90,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":173,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":96,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":211,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":281,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":163,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":114,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutNullKey":0,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":149,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":39,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":141,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":59,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":83,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":402,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":275,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":322,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":276,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":274,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":403,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":174,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":269,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":367,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":49,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":325,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":378,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":261,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":375,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":218,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":406,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":369,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":284,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":256,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":303,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":31,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":253,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":358,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":222,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":151,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":338,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":251,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":56,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":37,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":243,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":128,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":189,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":347,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":313,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":116,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":14,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":334,"org.apache.commons.collections4.map.Flat3MapTest.testEmptyMapCompatibility":181,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":364,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":24,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":315,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":250,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":198,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":41,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":35,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":287,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":156,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":63,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":11,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":164,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":84,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":242,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":78,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":278,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation0":180,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testObjectEqualsSelf":394,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":391,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":273,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":319,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":53,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":77,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":399,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":265,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":282,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":365,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":270,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":195,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testEmptyListIteratorIsIndeedEmpty":296,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":320,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":66,"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":257,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":312,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":359,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":125,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":26,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":62,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray2":107,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":327,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":124,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":85,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":238,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":392,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":268,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":81,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":138,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":244,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":277,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":345,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":192,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":191,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":200,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":294,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":104,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":158,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testWalkForwardAndBack":297,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":159,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":57,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":168,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":373,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":288,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":336,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":140,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEqualsNull":148,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":10,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":115,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":316,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":12,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":94,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":314,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":371,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":324,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":113,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":145,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":217,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":76,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":1,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":206,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":263,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":100,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":289,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":344,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionSize":122,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":120,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":368,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":390,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":252,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":50,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":302,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":235,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":233,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":258,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":137,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":380,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":197,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":136,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":254,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":27,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":8,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":69,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":101,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":20,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":306,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":23,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":75,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":408,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":208,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":389,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":58,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":381,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":308,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":139,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":280,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":117,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":38,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":379,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":73,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetHashCode":105,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":18,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":350,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":249,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":110,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":361,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":407,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":177,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":68,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":262,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":64,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsNull":146,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":370,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testPreviousKey":414,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":301,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":328,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":119,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":309,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":160,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":386,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":248,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":147,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":79,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":340,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":332,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":16,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":225,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":22,"org.apache.commons.collections4.collection.CompositeCollectionTest.testSize":353,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":67,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":166,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":80,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":333,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":285,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":106,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":93,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":299,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":348,"org.apache.commons.collections4.ListUtilsTest.testIntersectListWithSelf":184,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":374,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":32,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":246,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":199,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":223,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":144,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":351,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":220,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":176,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":153,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":170,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":6,"org.apache.commons.collections4.map.Flat3MapTest.testSimpleSerialization":182,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":19,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":98,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":162,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":202,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":154,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionSize":108,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":366,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":157,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":212,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testPreviousKey":415,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":292,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":86,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":187,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":5,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":387,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":304,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":240,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":213,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":165,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":404,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":36,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":205,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":155,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":318,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":102,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":33,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":193,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":131,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":221,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":142,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":321,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":331,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":405,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testPreviousKey":416,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":362,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":401,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":135,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":247,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":388,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":346,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":237,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":330,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":215,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":234,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":317,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":30,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":227,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":25,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIteratorRemove":109,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":241,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":134,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":169,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":132,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":207,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd":290,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":398,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":283,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":305,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":54,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":228,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":323,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":329,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":52,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":121,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":352,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":384,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":133,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":231,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":230,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":286,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":229,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":91,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":236,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":34,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":40,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":127,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":279,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":190,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":185,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":55,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":92,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":95,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":87,"org.apache.commons.collections4.collection.CompositeCollectionTest.testMultipleCollectionsSize":354,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":29,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":111,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":239,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":400,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testIterator":295,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":13,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":21,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalSet":291,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":47,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":46,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":45,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":307,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":42,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":43,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd":293,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":343,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":413,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":103,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":382,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":271,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":357,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":194,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectEqualsSelf":393,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":51,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":395,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":396,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":337,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":397,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":126,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":259,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":152,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":70,"org.apache.commons.collections4.ListUtilsTest.testIntersectNonEmptySubset":183,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":209,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":203,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":383,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testHashCode":298,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":349,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":411,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":150,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":123,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":172,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":385,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":129,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":171,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":61,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":89,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":219,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":60,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":186,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":335,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":311,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":363,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":339,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":245,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":377,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":7,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":143,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":372,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":226,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":216,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":376,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":82,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":118,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":175},"transformations":[{"failures":[],"tindex":"cba4218c-139e-11e5-aa09-4d35dd5fd510","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"variableMap":{"lastItemIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:425","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n        while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n            int += org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.hashCode();\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        }\n    }\n}"},"status":-2},{"failures":[0,1],"tindex":"cba4489d-139e-11e5-aa09-0def12cb41c8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:130","type":"CtIfImpl","sourcecode":"if (K == null) {\n    throw new java.lang.NullPointerException(\"Key cannot be null\");\n} "},"status":-1},{"failures":[],"tindex":"cba4489e-139e-11e5-aa09-11cbbd0c98de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:383","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.BitSet.size()) ; int++) {\n    if (java.util.BitSet.get(int)) {\n        return true;\n    } \n}"},"variableMap":{"set":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:195","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"cba4489f-139e-11e5-aa09-6d6d3f4d7bdb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:360","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    int = int;\n    E = java.util.ArrayList<E>.get(int);\n} else {\n    final E E = java.util.ArrayList<E>.get(int);\n    if ((java.util.Comparator<? super E>) == null) {\n        throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n    } \n    if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n        E = E;\n        int = int;\n    } \n}"},"status":-2},{"failures":[],"tindex":"cba46fb0-139e-11e5-aa09-91bbdd21ede0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:408","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key2","next":"entry","entry":"entry","key2":"key2","hashCode":"hashCode","key3":"key4","key4":"key4","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:481","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"cba46fb1-139e-11e5-aa09-b7f7beb61d2f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:813","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"current":"previous"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:562","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-2},{"failures":[],"tindex":"cba46fb2-139e-11e5-aa09-fd8df020f8ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:83","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"status":-2},{"failures":[2,3],"tindex":"cba46fb3-139e-11e5-aa09-13422504c22c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.DefaultedMap:202","type":"CtIfImpl","sourcecode":"if ((java.util.Map<K, V>.containsKey(java.lang.Object)) == false) {\n    return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(java.lang.Object)));\n} "},"variableMap":{"map":"map","value":"factory","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LazyMap:162","type":"CtIfImpl","sourcecode":"if ((java.util.Map<K, V>.containsKey(java.lang.Object)) == false) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final K K = ((K)(java.lang.Object));\n    final V V = org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(K);\n    java.util.Map<K, V>.put(K, V);\n    return V;\n} "},"status":-1},{"failures":[],"tindex":"cba46fb4-139e-11e5-aa09-718c64275843","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:342","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"variableMap":{"maxElements":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:161","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":0},{"failures":[4,5,6,7,8],"tindex":"cba496c5-139e-11e5-aa09-37c1fab8f2ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:306","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[9,10,11,12,13],"tindex":"cba496c6-139e-11e5-aa09-a7a2074ced05","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:239","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<? extends E>.hasNext()"},"variableMap":{"currentIterator":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:95","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"cba496c7-139e-11e5-aa09-711e526ca3b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"cba496c8-139e-11e5-aa09-dfab97acf2d1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:416","type":"CtReturnImpl","sourcecode":"return (java.lang.Object == java.lang.Object) || (java.lang.Object == null ? false : java.lang.Object.equals(java.lang.Object))"},"variableMap":{"value2":"key","value1":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:221","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"cba496c9-139e-11e5-aa09-7530f650b41d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:193","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.add(E)) {\n    java.util.List<E>.add(E);\n} "},"status":-2},{"failures":[],"tindex":"cba496ca-139e-11e5-aa09-a3f55b7ca3ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:543","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)"},"variableMap":{"next":"after","parent":"this","header":"after"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:148","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n        return true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"cba4bddb-139e-11e5-aa09-bb42f220c8da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1396","type":"CtTryImpl","sourcecode":"try {\n    return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n}"},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:228","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : org.apache.commons.collections4.set.CompositeSet<E>.getSets()) {\n    if (java.util.Set<E>.contains(java.lang.Object)) {\n        return java.util.Set<E>.remove(java.lang.Object);\n    } \n}"},"status":-2},{"failures":[14],"tindex":"cba4bddc-139e-11e5-aa09-bd28d25a2f75","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:61","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super E>[].int) != (org.apache.commons.collections4.Closure<? super E>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and closure arrays must be the same size\");\n} "},"status":-1},{"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,1,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59],"tindex":"cba4bddd-139e-11e5-aa09-53446eb68be0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:202","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[60,61,62,63,64,65],"tindex":"cba4bdde-139e-11e5-aa09-27ef5e2db4e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:205","type":"CtIfImpl","sourcecode":"if ((int[][(int - int)]) <= (int[][int])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n} "},"variableMap":{"vUp":"vDown","start1":"start1","vDown":"vDown","delta":"d","end2":"delta","this":"this","i":"delta","end1":"d","k":"d","start2":"end1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:186","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int += 2) {\n    final int int = int + int;\n    if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n        int[][int] = int[][(int + 1)];\n    } else {\n        int[][int] = (int[][(int - 1)]) + 1;\n    }\n    int int = int[][int];\n    int int = ((int - int) + int) - int;\n    while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = ++int;\n        ++int;\n    }\n    if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n        if ((int[][(int - int)]) <= (int[][int])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"cba4bddf-139e-11e5-aa09-d5cb7186a8f1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:253","type":"CtForEachImpl","sourcecode":"for (final O O : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>) {\n    org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.min(O));\n}"},"status":-2},{"failures":[66,67,68,69,70,71,72,73,74,75,76,77],"tindex":"cba4e4f0-139e-11e5-aa09-f97b2464d5b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:184","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.set(int)"},"variableMap":{"orderingBits":"valueSet","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:359","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    if (int == (-1)) {\n        int = int;\n        E = java.util.ArrayList<E>.get(int);\n    } else {\n        final E E = java.util.ArrayList<E>.get(int);\n        if ((java.util.Comparator<? super E>) == null) {\n            throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n        } \n        if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n            E = E;\n            int = int;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"cba4e4f1-139e-11e5-aa09-4d1e636fb79a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:321","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.set.CompositeSet<K>.addComposited(this.java.util.Map<K, V>[][int].keySet());\n}"},"status":-2},{"failures":[78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],"tindex":"cba4e4f2-139e-11e5-aa09-d112945efb4f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:248","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.CollatingIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:467","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        @java.lang.SuppressWarnings(value = \"unchecked\")\n        final T T = ((T)(E));\n        T[][int++] = T;\n    }\n}"},"status":-1},{"failures":[96,97,98,99,100],"tindex":"cba4e4f3-139e-11e5-aa09-c1adb1c8871d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:141","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int[].int) ; int++) {\n    if ((int[][int]) > int) {\n        boolean[][int] = !(boolean[][int]);\n    } \n    java.util.List<E>.add(java.util.Map<java.lang.Integer, E>.get(java.lang.Integer.valueOf(int[][int])));\n}"},"status":-1},{"failures":[101,102,103],"tindex":"cba4e4f4-139e-11e5-aa09-c344b6dda5f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:120","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"status":-1},{"failures":[],"tindex":"cba4e4f5-139e-11e5-aa09-a7b6b56fea3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"cba50c06-139e-11e5-aa09-d346fc56321f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:558","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"cba50c07-139e-11e5-aa09-df8e12dd580e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:571","type":"CtReturnImpl","sourcecode":"return java.util.Map<?, ?>"},"variableMap":{"answer":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:68","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.UnmodifiableMap<K, V>(java.util.Map<? extends K, ? extends V>)"},"status":-2},{"failures":[],"tindex":"cba50c08-139e-11e5-aa09-61c5e2ba96af","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1022","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"siblingNode":"newNode","currentNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1291","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"status":-2},{"failures":[],"tindex":"cba50c09-139e-11e5-aa09-3f8c3c6dd34e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:964","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE","deletedNode":"node","replacement":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1301","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"status":-2},{"failures":[104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131],"tindex":"cba50c0a-139e-11e5-aa09-53019ced4774","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E>.size()) == 0) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"variableMap":{"collection":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:204","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    boolean |= org.apache.commons.collections4.set.ListOrderedSet<E>.add(E);\n}"},"status":-1},{"failures":[],"tindex":"cba50c0b-139e-11e5-aa09-7de324bcf5ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2157","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(java.lang.Object, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"object","obj":"lock"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:194","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    if (java.lang.Object == (this)) {\n        return true;\n    } \n    return (java.lang.Object == (this)) || (org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().equals(java.lang.Object));\n}"},"status":-2},{"failures":[132,133,134,135,136,137,138,139,140,141,142,143],"tindex":"cba50c0c-139e-11e5-aa09-4bca4d46810d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:429","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    int += org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.hashCode();\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[144],"tindex":"cba5331d-139e-11e5-aa09-4f16baa45866","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"remove() cannot be called\");\n} "},"variableMap":{"nextObjectSet":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:217","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    boolean |= org.apache.commons.collections4.collection.IndexedCollection<K, C>.remove(java.lang.Object);\n}"},"status":-1},{"failures":[145,146,147,148],"tindex":"cba5331e-139e-11e5-aa09-5909a2840731","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.List) == false) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"cba5331f-139e-11e5-aa09-c1ec5a1e5c27","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1179","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.swapColors(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"x":"xFormerParent","y":"y","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1151","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"cba53320-139e-11e5-aa09-fd1f0024ceb1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:216","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[149,150,151,152,153,154,155,156,157,158,159,160],"tindex":"cba53321-139e-11e5-aa09-6da623b62393","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"cba53322-139e-11e5-aa09-c79304342965","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"variableMap":{"length":"i","key":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"cba53323-139e-11e5-aa09-f59c5a71080b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:194","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    if (java.lang.Object == (this)) {\n        return true;\n    } \n    return (java.lang.Object == (this)) || (org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().equals(java.lang.Object));\n}"},"status":-2},{"failures":[],"tindex":"cba53324-139e-11e5-aa09-cd0af88157d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"variableMap":{"next":"entry","entry":"entry","previous":"entry","hashCode":"hashCode","this":"this","index":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:184","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n} "},"status":-2},{"failures":[],"tindex":"cba53325-139e-11e5-aa09-970546ee6e61","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:211","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"cba53326-139e-11e5-aa09-97d1735df9bc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hash","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:203","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"cba55a37-139e-11e5-aa09-db89367c36f1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:156","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-2},{"failures":[161,162,163,164,165,166,167,168,169,170,171,172],"tindex":"cba55a38-139e-11e5-aa09-8b4a551478b3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super C> == null) {\n    return false;\n} "},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:231","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasNext()) {\n    final E E = java.util.ListIterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-1},{"failures":[173,174,175,176,177,178,179,156],"tindex":"cba55a39-139e-11e5-aa09-b99f0931e4f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"hasNext","nextCalled":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1381","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(',').append(' ');\n} "},"status":-1},{"failures":[],"tindex":"cba55a3a-139e-11e5-aa09-455ed9727fd6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"this":"key","i":"length","object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"status":-2},{"failures":[],"tindex":"cba55a3b-139e-11e5-aa09-334ac72f281c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"left","current":"start","tree":"predecessor","right":"predecessor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1201","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-2},{"failures":[],"tindex":"cba55a3c-139e-11e5-aa09-4904a0166cfa","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"start2","maxElements":"start2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtIfImpl","sourcecode":"if ((int - int) > (int - int)) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n} else {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n}"},"status":-2},{"failures":[],"tindex":"cba55a3d-139e-11e5-aa09-5b4e2036ef4d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:183","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"cba55a3e-139e-11e5-aa09-3deb19718034","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Collection<?>) {\n    return ((java.util.Collection<?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"cba5814f-139e-11e5-aa09-e1499d58cc27","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse = new org.apache.commons.collections4.bidimap.TreeBidiMap.Inverse();\n} "},"status":-2},{"failures":[],"tindex":"cba58150-139e-11e5-aa09-1f9157702518","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:379","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V> == null) || ((java.util.Collection<V>.size()) == 0)) {\n    return false;\n} "},"variableMap":{"values":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:338","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"cba58151-139e-11e5-aa09-337c3deb1bb2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:143","type":"CtAssignmentImpl","sourcecode":"E = null"},"status":-2},{"failures":[],"tindex":"cba58152-139e-11e5-aa09-35a1dd200a3b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.CollectionBag:111","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.CollectionBag<E>.add(java.util.Iterator<? extends E>.next(), 1);\n    boolean = boolean || boolean;\n}"},"variableMap":{"this":"this","i":"i","changed":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:128","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n    boolean = boolean || boolean;\n}"},"status":-2},{"failures":[180,181,160,182],"tindex":"cba58153-139e-11e5-aa09-e50ab1b85295","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtIfImpl","sourcecode":"if (int > 3) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V> = org.apache.commons.collections4.map.Flat3Map<K, V>.createDelegateMap();\n} "},"status":-1},{"failures":[],"tindex":"cba58154-139e-11e5-aa09-c7f58937465f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:177","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Class<?> java.lang.Class<?> = T[].getClass().getComponentType()"},"status":-2},{"failures":[],"tindex":"cba58155-139e-11e5-aa09-7958dba8dbe9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:112","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.keyvalue.DefaultMapEntry<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:54","type":"CtReturnImpl","sourcecode":"return java.util.Map.Entry<K, V>"},"status":-2},{"failures":[183,184],"tindex":"cba58156-139e-11e5-aa09-791aef1a53ad","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:79","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.clear()"},"variableMap":{"list":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:102","type":"CtIfImpl","sourcecode":"if (java.util.HashSet<E>.contains(E)) {\n    java.util.List<E>.add(E);\n    java.util.HashSet<E>.remove(E);\n} "},"status":-1},{"failures":[185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200],"tindex":"cba58157-139e-11e5-aa09-e9a5781b1e94","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1552","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDelete(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>)"},"variableMap":{"node":"deletedNode","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:980","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-1},{"failures":[201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,186,187,188,257,258,259,260,261,262,263,264,265,266,267,189,268,269,270,190,271,272,273,274,275,276,191,192,277,193,278,279,194,195,280,281,196,197,198,199,200],"tindex":"cba58158-139e-11e5-aa09-8d58c71c8536","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"cba5a869-139e-11e5-aa09-6f2b2fb252e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"node":"left","right":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:759","type":"CtWhileImpl","sourcecode":"while (true) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"cba5a86a-139e-11e5-aa09-a19e435a0184","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate to call must not be null\");\n} "},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:750","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<T> java.util.Iterator<T> = java.lang.Iterable<T>.iterator() ; java.util.Iterator<T>.hasNext() ; ) {\n    if (!(org.apache.commons.collections4.Predicate<? super T>.evaluate(java.util.Iterator<T>.next()))) {\n        java.util.Iterator<T>.remove();\n        boolean = true;\n    } \n}"},"status":0},{"failures":[282,283],"tindex":"cba5a86b-139e-11e5-aa09-c13195ceae75","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:147","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<E> java.util.List<E> = java.util.List<E>"},"variableMap":{"nextPermutation":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:78","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(java.util.List<E>)"},"status":-1},{"failures":[284,285,286,287,288,289,290,291,292,293,294],"tindex":"cba5a86c-139e-11e5-aa09-c925cf6c140d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:100","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) == false) {\n    throw new java.lang.IllegalArgumentException(((((\"Cannot add Object \\'\" + E) + \"\\' - Predicate \\'\") + (org.apache.commons.collections4.Predicate<? super E>)) + \"\\' rejected it\"));\n} "},"status":-1},{"failures":[295,296,297],"tindex":"cba5a86d-139e-11e5-aa09-8fd6206e2290","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"removed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[],"tindex":"cba5a86e-139e-11e5-aa09-69387ac8876d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:767","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E>.setRight(this, null)"},"variableMap":{"newTop":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:186","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) != null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(java.lang.Object[], org.apache.commons.collections4.list.TreeList.AVLNode<E>.int);\n} "},"status":-2},{"failures":[],"tindex":"cba5a86f-139e-11e5-aa09-7b8d1623609b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"cba5a870-139e-11e5-aa09-572b1043d579","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} "},"variableMap":{"o1":"object","o2":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"cba5a871-139e-11e5-aa09-e9ceb09a55cc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"p":"h","parent":"parent","h":"h","predecessor":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:577","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"cba5cf82-139e-11e5-aa09-5b3fffaad8f7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.LazyList:127","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(null)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.GrowthList:124","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.<E>nCopies((int - int), null))"},"status":0},{"failures":[298,299,300,301,302],"tindex":"cba5cf83-139e-11e5-aa09-9f9d9169e1f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:263","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    if (java.lang.Object != null) {\n        int ^= java.lang.Object.hashCode();\n    } \n}"},"status":-1},{"failures":[],"tindex":"cba5cf84-139e-11e5-aa09-4bdc141b060d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == java.util.Collection<?>) {\n    return true;\n} "},"variableMap":{"list1":"coll","list2":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    boolean boolean = false;\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n            boolean = true;\n        } \n    }\n    return boolean;\n} else {\n    return org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated().retainAll(null);\n}"},"status":-2},{"failures":[201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,185,248,249,250,251,252,253,254,255,256,188,186,187,257,258,259,260,261,262,263,264,265,266,267,189,268,269,270,190,271,272,273,274,275,276,191,192,277,193,278,279,194,195,280,281,196,197,198,199,200],"tindex":"cba5cf85-139e-11e5-aa09-7d90053559e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:549","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"cba5cf86-139e-11e5-aa09-d9e16e90b636","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:596","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<E>.hasNext()) {\n    java.lang.StringBuilder.append(',');\n} "},"status":0},{"failures":[],"tindex":"cba5cf87-139e-11e5-aa09-0b813c61cd89","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:297","type":"CtIfImpl","sourcecode":"if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n    return false;\n} "},"variableMap":{"composite":"value","i":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:224","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsValue(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-2},{"failures":[201,202,205,206,203,204,207,208,209,210,211,212,213,222,223,214,215,216,217,218,219,220,221,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,246,247,244,245,248,249,250,251,252,253,254,255,256,186,187,188,265,266,257,258,259,260,261,262,263,264,267,189,268,269,270,190,271,272,273,274,275,276,191,192,277,193,278,279,194,195,280,281,196,197,198,199,200],"tindex":"cba5cf88-139e-11e5-aa09-b55f4d915bad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1025","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:886","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":-1},{"failures":[303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322],"tindex":"cba5f699-139e-11e5-aa09-2967081e0169","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:129","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"exhausted":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:346","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1);\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,17,19,20,25,26,28,29,30,31,33,35,37,38],"tindex":"cba5f69a-139e-11e5-aa09-2317b65afe22","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:94","type":"CtIfImpl","sourcecode":"if (char != char) {\n    final int int = char ^ char;\n    return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n} "},"status":-1},{"failures":[189,190,194,196,198,199,200],"tindex":"cba5f69b-139e-11e5-aa09-61375dd9f1cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:827","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"node":"x","rightChild":"yFormerRightChild","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1137","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        if (boolean) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[342],"tindex":"cba5f69c-139e-11e5-aa09-cf7b96baae6d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:84","type":"CtIfImpl","sourcecode":"if (V == (this)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot set value to this map entry\");\n} "},"status":-1},{"failures":[],"tindex":"cba5f69d-139e-11e5-aa09-ed2b5836df5d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:399","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet();\n} "},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:373","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.TreeBidiMap.KeyView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[343,344,345,346,347,348,349,350,351],"tindex":"cba5f69e-139e-11e5-aa09-d537ccf3a1a6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:623","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.add(((E)(java.io.ObjectInputStream.readObject())));\n}"},"status":-1},{"failures":[352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375],"tindex":"cba5f69f-139e-11e5-aa09-4d4ceaf0a3f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:102","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    int += java.util.Collection<E>.size();\n}"},"status":-1},{"failures":[376,377,378,379,380,381],"tindex":"cba61db0-139e-11e5-aa09-b7fdefe8c8f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"lineageIndex","listSize":"lineageIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1008","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n    java.io.PrintStream.print(\"(this Map)\");\n} else {\n    java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n}"},"status":-1},{"failures":[66,67,68,69,70,71,72,73,74,76,77],"tindex":"cba61db1-139e-11e5-aa09-eb8cf488634c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:596","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:397","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"cba61db2-139e-11e5-aa09-b3776f9c93bc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:587","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:130","type":"CtIfImpl","sourcecode":"if (K == null) {\n    return false;\n} "},"status":-2},{"failures":[382,383],"tindex":"cba61db3-139e-11e5-aa09-596911711559","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1182","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<T>.next()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:724","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<T>.hasNext()) {\n    final T T = java.util.Iterator<T>.next();\n    if (java.util.Iterator<T>.hasNext()) {\n        C.execute(T);\n    } else {\n        return T;\n    }\n}"},"status":-1},{"failures":[],"tindex":"cba61db4-139e-11e5-aa09-c92e410731a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1291","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"status":-2},{"failures":[384,385,386,387],"tindex":"cba61db5-139e-11e5-aa09-6dd3ad03200b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:99","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>.isSetValueChecking()) {\n    return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this);\n} "},"status":-1},{"failures":[],"tindex":"cba61db6-139e-11e5-aa09-7f5aee0445ae","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:174","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final E E = java.util.Iterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":0},{"failures":[388,389,390,391,392,393,394],"tindex":"cba61db7-139e-11e5-aa09-597f3598eb2c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:195","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"cba61db8-139e-11e5-aa09-1d18e408846b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:306","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.OrPredicate.<T>orPredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)"},"status":-2},{"failures":[395,396,397,398,399,400,401,402,403,404,405,406],"tindex":"cba61db9-139e-11e5-aa09-21ff769f6ad3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:717","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\");\n} "},"variableMap":{"canRemove":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:163","type":"CtIfImpl","sourcecode":"if (E instanceof java.util.Iterator) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)));\n} else {\n    E = E;\n    boolean = true;\n}"},"status":-1},{"failures":[303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322],"tindex":"cba61dba-139e-11e5-aa09-f9203a816f41","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Collection must not be null\");\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1);\n        boolean = boolean || boolean;\n    }\n} "},"status":-1},{"failures":[407,408,409,366,367,410,368,369,370,411,373,374,412,413],"tindex":"cba61dbb-139e-11e5-aa09-15951dfb76a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:224","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E>.isEmpty()) {\n    return false;\n} "},"variableMap":{"c":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:246","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (org.apache.commons.collections4.set.CompositeSet<E>.(contains(java.lang.Object)) == false) {\n        return false;\n    } \n}"},"status":-1},{"failures":[414,415,416],"tindex":"cba644cc-139e-11e5-aa09-05fa817ad22c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:172","type":"CtIfImpl","sourcecode":"if (java.util.SortedMap<K, V>.isEmpty()) {\n    return null;\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":97,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}