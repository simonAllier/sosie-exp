{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":103,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":224,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":475,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":72,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":203,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":673,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":122,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":132,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":231,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":252,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":736,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":205,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":139,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":586,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":702,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":182,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":204,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":603,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":373,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":573,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":751,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":657,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":589,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":742,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":30,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":656,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":230,"org.apache.commons.collections4.CollectionUtilsTest.collect":185,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":619,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":455,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":607,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":609,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":237,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":201,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":94,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":270,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":521,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":412,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":453,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":610,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":644,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":191,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":426,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":691,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":233,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":743,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":119,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":274,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":449,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":755,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":101,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":121,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":266,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":662,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":299,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":282,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":666,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":58,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":155,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":178,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":202,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":228,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":29,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":260,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":356,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":402,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":42,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":380,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":257,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":493,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":83,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":375,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":721,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":371,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":161,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":499,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":749,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":387,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":388,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":494,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":548,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":519,"org.apache.commons.collections4.CollectionUtilsTest.transform2":183,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":696,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":406,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":422,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":267,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":640,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":496,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":608,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":251,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":124,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":590,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":0,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":547,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":530,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":737,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":507,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":683,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":163,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":206,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":599,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":315,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":763,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":389,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":591,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":240,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":421,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":663,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":241,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":239,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":310,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":429,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":207,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":436,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":510,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":135,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":49,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":235,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":6,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":169,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":381,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":601,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":335,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":78,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":156,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":188,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":197,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":363,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":498,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":535,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":399,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":131,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":730,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":693,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":118,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":1,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":55,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":500,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":225,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":525,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":396,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":518,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":222,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":441,"org.apache.commons.collections4.map.CompositeMapTest.testPut":618,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":273,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":439,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":110,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":584,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":606,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":550,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":677,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":497,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":128,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":328,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":352,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":483,"org.apache.commons.collections4.map.CompositeMapTest.testGet":617,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":220,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":417,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":764,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":577,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":409,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":761,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":120,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":293,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":473,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":2,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":192,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":443,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":333,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":152,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":746,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":64,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":465,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":177,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":48,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":676,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":729,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":52,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":448,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":105,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":576,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":219,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":491,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":254,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":567,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":760,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":170,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":748,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":329,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":392,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":660,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":383,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":440,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":516,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":565,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":141,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":404,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":490,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":697,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":393,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":292,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":706,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":529,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":711,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":723,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":76,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":410,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":538,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":348,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":246,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":569,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":304,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":719,"org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testEqualsAndHashCode":210,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":179,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":672,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":14,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":77,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":238,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":379,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":505,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":682,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":23,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":698,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":526,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":232,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":34,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":624,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":532,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":86,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":79,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":360,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":193,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":594,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":249,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":506,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":24,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":176,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":515,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":551,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":229,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":314,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":539,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":645,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":485,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":316,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":595,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":92,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":754,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":91,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":150,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":180,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":355,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":540,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":578,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":90,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":452,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":413,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":138,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":149,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":614,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":416,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":431,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":641,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":288,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":361,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":234,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":87,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":88,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":89,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":374,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":331,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":13,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":345,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":461,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":213,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":244,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":481,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":243,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":242,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":256,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":113,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":385,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":172,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":559,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":125,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":602,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":109,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":173,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":325,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":638,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":111,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":489,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":74,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":733,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":765,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":154,"org.apache.commons.collections4.ListUtilsTest.testSubtract":298,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals":296,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":397,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":454,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":501,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":81,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":334,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":558,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":395,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":16,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":528,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":44,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":636,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":271,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":472,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":8,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":338,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":582,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":735,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":262,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":190,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":370,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":366,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":570,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":653,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":674,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":408,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":524,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":400,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":438,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":369,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":546,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":367,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":359,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":523,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":221,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":466,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":437,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":66,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":458,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":285,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":597,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":212,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":715,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":574,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":283,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":432,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":713,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":186,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":705,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":84,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":117,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":134,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":253,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":223,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":27,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":665,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":303,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":634,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":504,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":536,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":350,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":391,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping1":724,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":390,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping2":725,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping3":726,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":33,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":728,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":264,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":358,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":382,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":250,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":545,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":621,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":762,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":620,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":100,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":115,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":31,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":630,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":568,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":495,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":651,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":218,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":585,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":680,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":162,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":18,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":690,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":158,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":503,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":734,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":151,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":302,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":647,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":26,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":104,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":189,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":386,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":346,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":181,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":133,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":159,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":727,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":484,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":343,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":148,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":411,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":297,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":434,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":534,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":451,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":575,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":153,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":418,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":401,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":704,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":47,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":326,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":563,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":474,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":217,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":707,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":324,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":635,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":56,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":555,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":588,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":604,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":605,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":157,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":611,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":93,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":123,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":766,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":564,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":3,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":275,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":313,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":25,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":39,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":695,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":15,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":323,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":543,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":145,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":318,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":722,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":50,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":307,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":357,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":561,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":750,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":136,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":460,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":300,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":468,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":732,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":587,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":687,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":622,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":688,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":689,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":479,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":4,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":294,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":637,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":144,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":668,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":709,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":301,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":445,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":130,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":462,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":41,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":65,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":347,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":53,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":126,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":542,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":160,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":215,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":758,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":377,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":255,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":200,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":658,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":311,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":35,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":146,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":199,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":140,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":349,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":419,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":423,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":718,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":147,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":19,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":549,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":166,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":398,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":73,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":467,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":425,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":20,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":36,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":632,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":752,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":114,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":580,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":514,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":258,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":533,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":167,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":211,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":616,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":463,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":566,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":556,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":664,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":648,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":171,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":268,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":435,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":95,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":470,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":623,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":337,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":708,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":227,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":321,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":309,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":75,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":362,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":364,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":368,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":63,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":319,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":659,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":531,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":290,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":427,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":744,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":424,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":469,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":269,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":60,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":261,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":5,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":541,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":629,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":168,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":486,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":628,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":544,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":625,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":627,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":626,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":759,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":446,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":54,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":327,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":740,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":699,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":339,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":112,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":639,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":245,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":272,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":317,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":649,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":598,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":96,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":703,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":415,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":312,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":583,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":444,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":67,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":537,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":747,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":85,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":129,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":509,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":341,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":216,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":305,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":643,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":612,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":70,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":633,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":69,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":68,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":430,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":457,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":287,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":492,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":175,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":7,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":127,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":195,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":654,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":482,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":284,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":667,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":480,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":757,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":277,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":646,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":716,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":753,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":291,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":476,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":365,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":450,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":263,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":353,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEqualsAfterSerialization":295,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":82,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":344,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":562,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":209,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":278,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":731,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":671,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":692,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":670,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":701,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":372,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":322,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":281,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":280,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":279,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":487,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":720,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":286,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":508,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":513,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":332,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":553,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":247,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":99,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":174,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":194,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":98,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":552,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":681,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":394,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":428,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":511,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":336,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":12,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":756,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":289,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":615,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":581,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":46,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":571,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":557,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":685,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":593,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":686,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":320,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":717,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":684,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":376,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":184,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":405,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":236,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":11,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":459,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":414,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":679,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":560,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":142,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":712,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":102,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":248,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":420,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":37,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":714,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":17,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":187,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":165,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":694,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":28,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":642,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":471,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":739,"org.apache.commons.collections4.map.LRUMapTest.testLRU":106,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":265,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":613,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":378,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":592,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":661,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":259,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":340,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":650,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":143,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":354,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":442,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":447,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":488,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":164,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":137,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":700,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":579,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":21,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":59,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":675,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":517,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":554,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":596,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":631,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":57,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":678,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":306,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":43,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":456,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":478,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":652,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":107,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":384,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":198,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":502,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":464,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":710,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":600,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":226,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":351,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":527,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":745,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":308,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":572,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":71,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":214,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":522,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":520,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":403,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":276,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":116,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":196,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":40,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":80,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":45,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":433,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":655,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":330,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":108,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":741,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":512,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":208,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":342,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":407,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testDecorateFactory":669,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":62,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":477,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":738,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":51},"transformations":[{"failures":[0,1,2],"tindex":"ea8ff4fb-13b1-11e5-be4a-871488b147ec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:239","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.Object>.size()) == 0) {\n    org.apache.commons.collections4.set.ListOrderedSet<E>.clear();\n} else {\n    for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.ListOrderedSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n        if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n        } \n    }\n}"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"tindex":"ea901c0c-13b1-11e5-be4a-51cdbbb88f42","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:813","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"current":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-1},{"failures":[],"tindex":"ea901c0d-13b1-11e5-be4a-cd1164442131","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"length","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:184","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Transformer<?, ?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Transformer<?, ?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + int) + \" was null\"));\n    } \n}"},"status":-2},{"failures":[],"tindex":"ea901c0e-13b1-11e5-be4a-fb389606002a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:124","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[20,21],"tindex":"ea90431f-13b1-11e5-be4a-a99eca5a0e8f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:272","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.updateCurrentIterator();\n} "},"status":-1},{"failures":[],"tindex":"ea904320-13b1-11e5-be4a-119075863af9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:376","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:175","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"ea904321-13b1-11e5-be4a-bd7710e63ab6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"leastIndex","index":"leastIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:359","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    if (int == (-1)) {\n        int = int;\n        E = java.util.ArrayList<E>.get(int);\n    } else {\n        final E E = java.util.ArrayList<E>.get(int);\n        if ((java.util.Comparator<? super E>) == null) {\n            throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n        } \n        if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n            E = E;\n            int = int;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"ea904322-13b1-11e5-be4a-1b3bac0ad909","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"largestKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:118","type":"CtIfImpl","sourcecode":"if ((int[][int]) > int) {\n    int = int[][int];\n    int = int;\n} "},"status":0},{"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174],"tindex":"ea904323-13b1-11e5-be4a-4d85a03eaabc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1294","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.init()"},"variableMap":{"cloned":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:642","type":"CtDoImpl","sourcecode":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null )"},"status":-1},{"failures":[],"tindex":"ea906a34-13b1-11e5-be4a-f35d8b8f6f6a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1321","type":"CtTryImpl","sourcecode":"try {\n    while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if (java.lang.Object == null) {\n            if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n                return false;\n            } \n        } else {\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    }\n} catch (final java.lang.ClassCastException ignored) {\n    return false;\n} catch (final java.lang.NullPointerException ignored) {\n    return false;\n}"},"status":0},{"failures":[],"tindex":"ea906a35-13b1-11e5-be4a-4dc3689cf99a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:892","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1030","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":-2},{"failures":[],"tindex":"ea926606-13b1-11e5-be4a-31ae49aba847","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:345","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValues<V>(this);\n} "},"status":-2},{"failures":[175],"tindex":"ea926607-13b1-11e5-be4a-a53761d9e792","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:888","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        } else {\n            return null;\n        }\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n    }\n} "},"variableMap":{"lengthInBits":"endIndexInBits","root":"root","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(lengthInBits(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey())) < int)) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"ea926608-13b1-11e5-be4a-33e7a6f8e632","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtIfImpl","sourcecode":"if (java.util.concurrent.TimeUnit == null) {\n    throw new java.lang.IllegalArgumentException(\"Time unit must not be null\");\n} "},"status":-2},{"failures":[176,177,178,179],"tindex":"ea926609-13b1-11e5-be4a-818a2db10aa8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"status":-1},{"failures":[],"tindex":"ea92660a-13b1-11e5-be4a-e7e106af4f66","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1591","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"current":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:558","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[180,181,182],"tindex":"ea92660b-13b1-11e5-be4a-5b05e685f3d1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"variableMap":{"lastItemIndex":"start1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:263","type":"CtWhileImpl","sourcecode":"while ((int < int) || (int < int)) {\n    if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n        ++int;\n    } else {\n        if ((int - int) > (int - int)) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        } else {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        }\n    }\n}"},"status":-1},{"failures":[183,184,185],"tindex":"ea928d1c-13b1-11e5-be4a-33489b45f2c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} "},"variableMap":{"lastUsedIterator":"inputIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1066","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends I>.hasNext()) {\n    final I I = java.util.Iterator<? extends I>.next();\n    final O O = org.apache.commons.collections4.Transformer<? super I, ? extends O>.transform(I);\n    R.add(O);\n}"},"status":-1},{"failures":[186,187,188,189,190,191,192,193,194,195,196,197,198,199,200],"tindex":"ea928d1d-13b1-11e5-be4a-5bfe5e873d54","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1361","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n}"},"status":-1},{"failures":[],"tindex":"ea928d1e-13b1-11e5-be4a-ef3efbcfbf88","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2417","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeInt(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.size())"},"variableMap":{"stream":"value","this":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:227","type":"CtIfImpl","sourcecode":"if (java.util.Map<V, K>.containsKey(java.lang.Object)) {\n    K = java.util.Map<V, K>.remove(java.lang.Object);\n    java.util.Map<K, V>.remove(K);\n} "},"status":-2},{"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,54,55,56,58,59,61,62,63,64,65,72,66,67,69,70,76,77,78,79,80,81,82,83,84,86,201,93,94,95,96,97,98,99,100,101,102,104,202,105,179,112,113,114,115,116,117,118,119,121,122,124,203,125,128,129,130,131,132,133,134,135,136,138,204,139,140,141,142,143,144,145,146,147,148,150,205,151,154,155,157,159,161,206,162,207,208,163,164,165,166,167,168,169,170,171,173,209,174],"tindex":"ea928d1f-13b1-11e5-be4a-a582887b80c7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:645","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int]"},"status":-1},{"failures":[],"tindex":"ea928d20-13b1-11e5-be4a-f752fa606414","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:219","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsKey(K)) {\n    return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().put(K, V);\n} else {\n    final V V = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().put(K, V);\n    java.util.List<K>.add(K);\n    return V;\n}"},"status":-2},{"failures":[],"tindex":"ea928d21-13b1-11e5-be4a-e1c21493ca11","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n} else {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n    (int)++;\n    for (int int = int - 1 ; int >= 0 ; int--) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n            do {\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n        } \n    }\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n}"},"status":-2},{"failures":[210],"tindex":"ea92b432-13b1-11e5-be4a-0dd09901dbeb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:128","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[211,212],"tindex":"ea92b433-13b1-11e5-be4a-c1d651f019b2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"changed","beforeFirst":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:329","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.util.List<E>.addAll(int, java.util.List<E>);\n} "},"status":-1},{"failures":[213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,186,187,230,188,189,190,231,232,191,233,192,234,235,193,194,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,195,196,271,197,198,199,272,273,200,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293],"tindex":"ea92b434-13b1-11e5-be4a-0f1ecc040a9f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:842","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"currentNode","rightChild":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-1},{"failures":[],"tindex":"ea92b435-13b1-11e5-be4a-459fa606fb23","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:118","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"valueTransformer cannot be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:131","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[],"tindex":"ea92b436-13b1-11e5-be4a-f1927f827e3f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":0},{"failures":[192,194,245,249,253],"tindex":"ea92b437-13b1-11e5-be4a-f159eb2c6128","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"dataElement":"dataElement","deletedNode":"xFormerParent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1151","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"ea92db48-13b1-11e5-be4a-4da599369e31","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:358","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purge()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:325","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"ea92db49-13b1-11e5-be4a-07ec41c7f1fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:85","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    boolean = true;\n} "},"variableMap":{"chainExhausted":"changed","currentIterator":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:111","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.CollectionSortedBag<E>.add(java.util.Iterator<? extends E>.next(), 1);\n    boolean = boolean || boolean;\n}"},"status":-2},{"failures":[],"tindex":"ea92db4a-13b1-11e5-be4a-5f3b68158d62","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"start2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:264","type":"CtIfImpl","sourcecode":"if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n    ++int;\n} else {\n    if ((int - int) > (int - int)) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    } else {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    }\n}"},"status":-2},{"failures":[294],"tindex":"ea92db4b-13b1-11e5-be4a-0569c92ccce5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:111","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> : java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>>.entrySet()) {\n    org.apache.commons.collections4.Predicate<? super I>[][int] = java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>>.getKey();\n    org.apache.commons.collections4.Transformer<? super I, ? extends O>[][int] = java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>>.getValue();\n    int++;\n}"},"status":-1},{"failures":[295,296,297,76,77,78,79,80,81,83,86],"tindex":"ea92db4c-13b1-11e5-be4a-33e460c0fc5f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:172","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object.getClass().equals(java.lang.Object.getClass()))) {\n    return false;\n} "},"variableMap":{"obj":"other","this":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"status":-1},{"failures":[],"tindex":"ea92db4d-13b1-11e5-be4a-2d0309feb717","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.TransformedQueue:131","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.TransformedQueue<E>.getQueue().remove()"},"status":-2},{"failures":[],"tindex":"ea92db4e-13b1-11e5-be4a-15fe11719ced","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:380","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    org.apache.commons.collections4.queue.CircularFifoQueue.this.remove();\n    int = -1;\n    return ;\n} "},"variableMap":{"lastReturnedIndex":"length","start":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:146","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<? super E>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<? super E>[][int].evaluate(E)) == true) {\n        org.apache.commons.collections4.Closure<? super E>[][int].execute(E);\n        return ;\n    } \n}"},"status":-2},{"failures":[],"tindex":"ea92db4f-13b1-11e5-be4a-2ff24838805e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:972","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"ea930260-13b1-11e5-be4a-cf52ff087aa8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1384","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    java.lang.StringBuilder.append((java.lang.Object == (this) ? \"(this Map)\" : java.lang.Object)).append('=').append((java.lang.Object == (this) ? \"(this Map)\" : java.lang.Object));\n    boolean = org.apache.commons.collections4.MapIterator<?, ?>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(\", \");\n    } \n}"},"status":0},{"failures":[],"tindex":"ea930261-13b1-11e5-be4a-c90ff01de26d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:150","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<?> java.util.Iterator<?> = org.apache.commons.collections4.Bag<?>.uniqueSet().iterator()"},"variableMap":{"other":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:110","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = java.util.Collection<? extends E>.iterator()"},"status":-2},{"failures":[298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569],"tindex":"ea930262-13b1-11e5-be4a-495a77c5d1f1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(E);\n    int += int;\n    if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n        return true;\n    } \n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int += int;\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"ea930263-13b1-11e5-be4a-2b9d638d3aa8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:278","type":"CtIfImpl","sourcecode":"if (int != 0) {\n    if ((java.util.BitSet.get(int)) == true) {\n        if (int > 0) {\n            int = -1;\n        } else {\n            int = 1;\n        }\n    } \n    return int;\n} "},"variableMap":{"comparatorIndex":"i","orderingBits":"value","retval":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:135","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    return int;\n} "},"status":-2},{"failures":[],"tindex":"ea930264-13b1-11e5-be4a-2bda43a027a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtIfImpl","sourcecode":"if (java.util.Map<? super I, ? extends O> == null) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:98","type":"CtIfImpl","sourcecode":"if ((java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>>.size()) == 0) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} "},"status":0},{"failures":[570,571,294],"tindex":"ea930265-13b1-11e5-be4a-af6b7df35eba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"i","index":"i","beyond":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:185","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Transformer<?, ?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + int) + \" was null\"));\n} "},"status":-1},{"failures":[572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590],"tindex":"ea932976-13b1-11e5-be4a-7bdf0871ae89","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"index","modifications":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"status":-1},{"failures":[591,592,593,594,325,595,336,327,328,329,330,596,331,332,333,334,335,465,477,478,467,468,469,470,471,472,473,474,475,476,597,598],"tindex":"ea932977-13b1-11e5-be4a-0f02b62de9e7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:79","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.clear()"},"variableMap":{"list":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:138","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.List<E>.add(org.apache.commons.collections4.collection.TransformedCollection<E>.transform(E));\n}"},"status":-1},{"failures":[599,600,601,602,603,604,605,606,607,608,16,609,3,4,5,6,7,8,9,10,11,610,611,12,13,14,15,612,613,614,615,616],"tindex":"ea932978-13b1-11e5-be4a-a7bab6288327","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:393","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    java.lang.StringBuilder.append((java.lang.Object == (this) ? \"(this Collection)\" : java.lang.Object));\n    boolean = java.util.Iterator<E>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(\", \");\n    } \n}"},"status":-1},{"failures":[],"tindex":"ea932979-13b1-11e5-be4a-bb8223c991b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"status":-2},{"failures":[617,618,619,620,621,622,623,624],"tindex":"ea93297a-13b1-11e5-be4a-77f3ae02c574","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:136","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<K>.size()) != 0) {\n    if ((this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n        throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n    } \n    this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(this, this.java.util.Map<K, V>[][int], java.util.Map<K, V>, java.util.Collection<K>);\n} "},"status":-1},{"failures":[],"tindex":"ea93297b-13b1-11e5-be4a-4d4b6dca8e25","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:243","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purgeBeforeRead()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:325","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"ea93297c-13b1-11e5-be4a-0d00e548c81f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends K, ? extends V> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>));\n    return java.util.Map<K, V>;\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends K, ? extends V>.isEmpty()) {\n    return ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>));\n} "},"status":0},{"failures":[625,626,627,628],"tindex":"ea93297d-13b1-11e5-be4a-135e20434f4b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:578","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"status":-1},{"failures":[],"tindex":"ea93508e-13b1-11e5-be4a-6321791104bc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:104","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ((org.apache.commons.collections4.Transformer<I, O>)(org.apache.commons.collections4.Transformer<? super I, ? extends O> == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer() : org.apache.commons.collections4.Transformer<? super I, ? extends O>));\n} "},"variableMap":{"size":"length","defaultTransformer":"defaultTransformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:65","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super I>[].int) == 0) {\n    return ((org.apache.commons.collections4.Transformer<I, O>)(org.apache.commons.collections4.Transformer<? super I, ? extends O> == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer() : org.apache.commons.collections4.Transformer<? super I, ? extends O>));\n} "},"status":-2},{"failures":[],"tindex":"ea93508f-13b1-11e5-be4a-e3b481c2263f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"key5","i":"index","key":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:635","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"ea935090-13b1-11e5-be4a-cb170c4a10ce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:125","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof org.apache.commons.collections4.ResettableIterator) {\n    ((org.apache.commons.collections4.ResettableIterator<? extends E>)(java.util.Iterator<? extends E>)).reset();\n} "},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:181","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) != null) {\n    org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n} "},"status":-2},{"failures":[],"tindex":"ea935091-13b1-11e5-be4a-c5b42f613b2c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"rval":"siblingNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1030","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":-2},{"failures":[],"tindex":"ea935092-13b1-11e5-be4a-cf69843fde0d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1330","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(size())) {\n    return false;\n} "},"variableMap":{"other":"other","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1335","type":"CtTryImpl","sourcecode":"try {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n} catch (final java.lang.ClassCastException ex) {\n    return false;\n} catch (final java.lang.NullPointerException ex) {\n    return false;\n}"},"status":0},{"failures":[],"tindex":"ea935093-13b1-11e5-be4a-871c598f9267","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:243","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"ea935094-13b1-11e5-be4a-05e746bd6485","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:56","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate<? super T>[])"},"variableMap":{"predicates":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:719","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 1) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) {\n    org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"ea9376a5-13b1-11e5-be4a-69cf0b2c9eb2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1182","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"variableMap":{"x":"siblingNode","y":"siblingNode","dataElement":"dataElement","rootNode":"rootNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1030","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":0},{"failures":[],"tindex":"ea9376a6-13b1-11e5-be4a-6f7360aa00bc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:886","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"variableMap":{"currentNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:499","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[65,72,297,66],"tindex":"ea9376a7-13b1-11e5-be4a-9f391d173f2e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:452","type":"CtAssignmentImpl","sourcecode":"int = 2"},"variableMap":{"size":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:510","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= java.lang.Object.hashCode()"},"status":-1},{"failures":[],"tindex":"ea9376a8-13b1-11e5-be4a-77ff34867de8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:55","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Trie<K, ? extends V> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final org.apache.commons.collections4.Trie<K, V> org.apache.commons.collections4.Trie<K, V> = ((org.apache.commons.collections4.Trie<K, V>)(org.apache.commons.collections4.Trie<K, ? extends V>));\n    return org.apache.commons.collections4.Trie<K, V>;\n} "},"variableMap":{"trie":"trie"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TrieUtils:45","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie<K, ? extends V>)"},"status":-2},{"failures":[629,630,631,632,633,572,574,634,635,636,637,576,638,639,578,640,580,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667],"tindex":"ea939db9-13b1-11e5-be4a-63a1161fe1ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:136","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"status":-1},{"failures":[656,668],"tindex":"ea939dba-13b1-11e5-be4a-792c27266998","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:186","type":"CtIfImpl","sourcecode":"if ((T[].int) > (int)) {\n    T[][int] = null;\n} "},"status":-1},{"failures":[110],"tindex":"ea939dbb-13b1-11e5-be4a-c7669e4247da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"flag":"removeLRUEntry","removed":"removeLRUEntry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:252","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"ea939dbc-13b1-11e5-be4a-29968db1655e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:559","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"variableMap":{"key1":"key4","entry":"next","key2":"key1","key5":"key2","hashCode":"hashCode","key3":"key1","key4":"key2","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:408","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"ea939dbd-13b1-11e5-be4a-056e23af3e97","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:191","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayInputStream.close()"},"variableMap":{"bais":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:717","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.hasNext()) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.next();\n    if (((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 1) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) {\n        org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"ea939dbe-13b1-11e5-be4a-7d952dfa02a4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:199","type":"CtForEachImpl","sourcecode":"for (final C C : org.apache.commons.collections4.collection.AbstractCollectionDecorator<C>.decorated()) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C);\n}"},"status":-2},{"failures":[],"tindex":"ea939dbf-13b1-11e5-be4a-610b1b3da941","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:571","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    break;\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[22,23,24,25,26,27,29,30,32],"tindex":"ea939dc0-13b1-11e5-be4a-15bc0e35ceb0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:359","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    if (int == (-1)) {\n        int = int;\n        E = java.util.ArrayList<E>.get(int);\n    } else {\n        final E E = java.util.ArrayList<E>.get(int);\n        if ((java.util.Comparator<? super E>) == null) {\n            throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n        } \n        if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n            E = E;\n            int = int;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"ea939dc1-13b1-11e5-be4a-117d508a9f19","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:242","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getValue() : null"},"variableMap":{"entry":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:428","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        if ((!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K))) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        } else {\n            return null;\n        }\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[669],"tindex":"ea93c4d2-13b1-11e5-be4a-ed72325e83eb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:49","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.ListIterator<E> java.util.ListIterator<E> = ((java.util.ListIterator<E>)(java.util.ListIterator<? extends E>));\n    return java.util.ListIterator<E>;\n} "},"status":-1},{"failures":[],"tindex":"ea93c4d3-13b1-11e5-be4a-e9aeb36cf52d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:469","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T T = ((T)(E));\n    T[][int++] = T;\n}"},"status":-2},{"failures":[186,187,188,189,190,232,191,192,193,194,195,196,197,198,199,273,200],"tindex":"ea93c4d4-13b1-11e5-be4a-239c9c7ea6f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1360","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n    }\n} "},"status":-1},{"failures":[670,671,672,673,674,675,676,677,165,166,167,168,169,170,678,171,679,680,172,173,681,682,683,684,685,686,687,688,689,209,690,691,174,692,693,694,695,696,697,698,699,163,164],"tindex":"ea93c4d5-13b1-11e5-be4a-5deb746a5699","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.size();\n} "},"status":-1},{"failures":[700,701],"tindex":"ea93c4d6-13b1-11e5-be4a-b9ce5f1246cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:160","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super V>.evaluate(V)) == false) {\n    throw new java.lang.IllegalArgumentException(\"Cannot set value - Predicate rejected it\");\n} "},"status":-1},{"failures":[192,194,245,249,253],"tindex":"ea93c4d7-13b1-11e5-be4a-0fb7340a3628","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:991","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"dataElement":"dataElement","deletedNode":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1140","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"ea93c4d8-13b1-11e5-be4a-8169efd723a8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:333","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:128","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    if (java.util.Set<E>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":0},{"failures":[600,603,702,604,16,17,4,6,15,703,605,704,606,705,706,707,708,582,709,710,711,712,713,714],"tindex":"ea93c4d9-13b1-11e5-be4a-392adeae70fd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:318","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove()"},"variableMap":{"it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:333","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-1},{"failures":[],"tindex":"ea93ebea-13b1-11e5-be4a-dd96b6d4c105","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:933","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:506","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[715,716,717,718,719,720,721,722,723],"tindex":"ea93ebeb-13b1-11e5-be4a-5de18c95a953","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:129","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V> = this;\n} "},"status":-1},{"failures":[],"tindex":"ea93ebec-13b1-11e5-be4a-299bc2a993c7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:584","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"ea93ebed-13b1-11e5-be4a-65b800650597","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"hashCode","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:425","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n        while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n            int += org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.hashCode();\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"ea93ebee-13b1-11e5-be4a-879aec785861","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1641","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"nextNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":0},{"failures":[724,725,726],"tindex":"ea93ebef-13b1-11e5-be4a-2f8b9e102e3c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:721","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n} "},"variableMap":{"listIterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:87","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>.hasNext()) == false) {\n    org.apache.commons.collections4.iterators.LoopingIterator<E>.reset();\n} "},"status":-1},{"failures":[],"tindex":"ea93ebf0-13b1-11e5-be4a-f17c60258762","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"size","newCapacity":"index","proposedCapacity":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:245","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-2},{"failures":[76,77,727,78,79,80,81,83,84,85,86,728,94,95,729,96,97,98,99,101,102,103,104,730,731,732,733,734,735,736,737,738,739,740,741,742,114,115,743,116,117,118,119,121,122,123,124,744,128,129,745,130,131,132,133,135,136,137,138,746,140,141,747,142,143,144,145,147,148,149,150,748,152,153,749,154,155,156,157,158,159,160,161,750,163,164,165,166,167,170,171,172,173],"tindex":"ea941301-13b1-11e5-be4a-f13c1378bb35","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:73","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.OrderedMapIterator<? extends K, ? extends V>.hasNext()"},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1322","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if (java.lang.Object == null) {\n        if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n            return false;\n        } \n    } else {\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"ea941302-13b1-11e5-be4a-7dc9b304f3a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n    return true;\n} "},"variableMap":{"entry":"after"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:142","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"ea941303-13b1-11e5-be4a-e96719a2a356","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"status":-2},{"failures":[186,187,188,189,190,232,191,192,193,194,195,196,197,198,199,273,200],"tindex":"ea941304-13b1-11e5-be4a-55719d28e2a2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1360","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n    }\n} "},"status":-1},{"failures":[],"tindex":"ea941305-13b1-11e5-be4a-59ce0e60b6fe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1022","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"siblingNode":"currentNode","currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:932","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[298,299,301,302,304,305,310,308,313,314,332,333,334,346,344,349,350,369,370,378,376,381,382,400,401,402,417,415,420,421,440,441,450,448,453,454,473,474,482,480,485,486,504,505,506,514,520,527,525,530,531,550,551,561,567],"tindex":"ea941306-13b1-11e5-be4a-cf974d7a6d00","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:325","type":"CtIfImpl","sourcecode":"if (int < (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int)) {\n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int -= int;\n    int -= int;\n} else {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(java.lang.Object);\n    int -= org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n}"},"status":-1},{"failures":[],"tindex":"ea941307-13b1-11e5-be4a-b3fa75e2ddde","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:116","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayListIterator<E>.(hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"ea943a18-13b1-11e5-be4a-6d07689bb1f8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:123","type":"CtThrowImpl","sourcecode":"throw new java.util.EmptyStackException()"},"status":-2},{"failures":[],"tindex":"ea943a19-13b1-11e5-be4a-abaee0b3e046","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, null);\n}"},"status":-2},{"failures":[],"tindex":"ea94fd6a-13b1-11e5-be4a-27c6007e5b53","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:442","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n} else {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n}"},"status":-2},{"failures":[],"tindex":"ea95247b-13b1-11e5-be4a-670f969cda5c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:243","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"status":-2},{"failures":[751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766],"tindex":"ea95247c-13b1-11e5-be4a-a75503ff6208","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"variableMap":{"parent":"left","current":"previous","right":"previous"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:659","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) || (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    while (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            break;\n        } \n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":98,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}