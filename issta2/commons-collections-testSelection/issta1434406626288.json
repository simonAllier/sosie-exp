{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":522,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":356,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":633,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":674,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":258,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":118,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":187,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":558,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":20,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":200,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":816,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":317,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":440,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":783,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":531,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":755,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":391,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":668,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":768,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsSelfHashCode":439,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":290,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":725,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":218,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":392,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":482,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":252,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":692,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":602,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":492,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":627,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":732,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":284,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":634,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":477,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":641,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":500,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":702,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":423,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":527,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":472,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":826,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":470,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":463,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":697,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":251,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":557,"org.apache.commons.collections4.CollectionUtilsTest.testSize_PrimitiveArray":818,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":189,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":720,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":45,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":671,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":683,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":34,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":388,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":726,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":798,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":810,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":395,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":568,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":311,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":669,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":540,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":272,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":335,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":143,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":762,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":610,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":95,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":532,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":611,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":612,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":259,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":308,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":486,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":117,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":523,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Other":821,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":319,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":735,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":231,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":490,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":129,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":36,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":279,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":572,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":738,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":355,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":449,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":61,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":243,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":91,"org.apache.commons.collections4.map.ReferenceMapTest.testEmptyMapCompatibility":411,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":349,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":701,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":416,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":677,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":435,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":657,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":664,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":658,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":659,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":792,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":101,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":831,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":361,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":316,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":421,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":422,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":420,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":158,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":222,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":408,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":698,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":510,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":48,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":552,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":644,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":703,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":682,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":581,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":389,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":151,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":144,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":368,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":636,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":598,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":555,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":582,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":206,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":301,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":167,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":764,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":711,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":23,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":506,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":589,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":321,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":539,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":152,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":153,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":154,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":201,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":364,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":248,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":562,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":172,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":56,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testEmptyIterator":837,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":128,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":705,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":136,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":743,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":282,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":570,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":430,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":593,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":146,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":202,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":366,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":278,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":313,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":354,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":485,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":337,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":444,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":578,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":474,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":199,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":619,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":455,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":675,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToString":22,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":397,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":519,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":809,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":503,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":415,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":501,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":529,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":183,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":459,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":655,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":288,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":521,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":793,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":436,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":585,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":426,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":791,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":249,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":380,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":457,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":672,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":739,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":181,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":784,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":378,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":204,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":788,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":250,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":639,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":516,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":680,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":174,"org.apache.commons.collections4.map.SingletonMapTest.testValuesRemoveChangesMap":833,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":302,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":409,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":372,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":90,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":331,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":691,"org.apache.commons.collections4.map.LinkedMapTest.testReset":704,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":50,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":156,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":51,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":584,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":724,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":49,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":112,"org.apache.commons.collections4.iterators.SingletonIterator2Test.testRemove":835,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":577,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":628,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":667,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":269,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":277,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":246,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":59,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":92,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":32,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":75,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":43,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":195,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":82,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":208,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSimpleSerialization":576,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":371,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":96,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":396,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":332,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":790,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":717,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":67,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":583,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":617,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":162,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":377,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":403,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":122,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":747,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":194,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":350,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":214,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":209,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":414,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":116,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":385,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":447,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":69,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":386,"org.apache.commons.collections4.map.HashedMapTest.testClone":822,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":12,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":283,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":387,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":514,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":794,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":632,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":491,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":63,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":163,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":488,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":157,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":759,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":723,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":341,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":654,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":38,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":238,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":240,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":64,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":728,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":55,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":242,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":191,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":190,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":716,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":599,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":425,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":526,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":173,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":137,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":620,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":707,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":645,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":18,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":480,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":797,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":11,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":10,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":7,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":6,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":9,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":8,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":3,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":5,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":722,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":4,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":721,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":700,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":489,"org.apache.commons.collections4.map.LinkedMapTest.testClone":828,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":347,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":130,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":205,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":623,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":150,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":303,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":16,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":310,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":515,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":382,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":383,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":637,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":384,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":653,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":133,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":132,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":131,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":673,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":807,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":402,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":505,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":210,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":605,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":642,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":603,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":730,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":509,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":565,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEqualsAfterSerialization":563,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":147,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":496,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":690,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":813,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":811,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":254,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":710,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":293,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":410,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":499,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":343,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":498,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":497,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":795,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":365,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":379,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":168,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":681,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":216,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":325,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":733,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":507,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":467,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":74,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":344,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":806,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":805,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":804,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":299,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":464,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":342,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":571,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":110,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":616,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":65,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":175,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":751,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":330,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":37,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":695,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":782,"org.apache.commons.collections4.map.LRUMapTest.testLRU":125,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":345,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":280,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":123,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":432,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":574,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":84,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":291,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":207,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":318,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":363,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":594,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":244,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":573,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":197,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":398,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":575,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":525,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":749,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":600,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":304,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":513,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":21,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":775,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":434,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":494,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":484,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":362,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":777,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":44,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":253,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":648,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":656,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":312,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":458,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":27,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":196,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":643,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":590,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":111,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":618,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":58,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":178,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":25,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":535,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":24,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":663,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":113,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":819,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":613,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":273,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":787,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":428,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":785,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":285,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":297,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":763,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":543,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":465,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":635,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":102,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":393,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":228,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":537,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":538,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":708,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":185,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":109,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":186,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":83,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":94,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":198,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":586,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":247,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":70,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":148,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":100,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":626,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":401,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":219,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":323,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":478,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":381,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":597,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":348,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":2,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":46,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":546,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":666,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":453,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":547,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":545,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":412,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":121,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":77,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":446,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":756,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":169,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":808,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":295,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":367,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":778,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":450,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":424,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":407,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":456,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":437,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":694,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":184,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":265,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":81,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":275,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":105,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":520,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":300,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":276,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":114,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":360,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":212,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":406,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":752,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":518,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":742,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":660,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":241,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":260,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":511,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":709,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":443,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":225,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":433,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":662,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":661,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":89,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":76,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":629,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":79,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":622,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":748,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":714,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":305,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":517,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":560,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":800,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":737,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":41,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":630,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":441,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsSelfHashCode":405,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":141,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":170,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":142,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":327,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":544,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":53,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":211,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":54,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":649,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":812,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":699,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":536,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":245,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":727,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":306,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":339,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":541,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":315,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":448,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":418,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":417,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":528,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":419,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":226,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":445,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":139,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":731,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":1,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":138,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":712,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":155,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Iterator":820,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":229,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":124,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":166,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":646,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":326,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":512,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":550,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":706,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":549,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":548,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":29,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":454,"org.apache.commons.collections4.map.LRUMapTest.testClone":823,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":179,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":601,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":42,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":715,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":358,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":15,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":93,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":750,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals":564,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":638,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":614,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":761,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":329,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":719,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":72,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":263,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":580,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":796,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":534,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":647,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":567,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":261,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":262,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":758,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":566,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":274,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":60,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":346,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":780,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":120,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":149,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":255,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":559,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":460,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":13,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":257,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":729,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":786,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":475,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":781,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":814,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":556,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":779,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":108,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":718,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":767,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":33,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":237,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":369,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":97,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":221,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":533,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":832,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":119,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":98,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":587,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":165,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":595,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":375,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":324,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":765,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":592,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":220,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":438,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":596,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":524,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":177,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":754,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":86,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":176,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":588,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":713,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":192,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":746,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testSingletonIteratorRemove":836,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":140,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":188,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":815,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":374,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":427,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":493,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":665,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":394,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":651,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":696,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":328,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":28,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":78,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":203,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":223,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":286,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":621,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":390,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEmptyMapCompatibility":376,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":294,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":687,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":688,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":689,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":270,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":333,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":670,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":161,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":234,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":233,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":772,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":57,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":591,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":625,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":99,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":561,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":431,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":164,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":770,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":135,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":307,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":604,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":292,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":180,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testRemove":838,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":217,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":469,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":39,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintCasting":769,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":771,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":271,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":479,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":103,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":352,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":88,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":256,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":508,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":230,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":461,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":351,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":85,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":631,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":473,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":334,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":40,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":309,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":825,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":466,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":19,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":468,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":736,"org.apache.commons.collections4.CollectionUtilsTest.isFull":0,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":80,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":359,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":615,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":824,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":171,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":338,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":551,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":26,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":104,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":442,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":239,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":745,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":232,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":650,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":115,"org.apache.commons.collections4.map.SingletonMapTest.testValuesIteratorRemoveChangesMap":834,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":30,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":744,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":336,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":483,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":624,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":652,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":502,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":734,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":757,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":495,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":357,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":429,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":481,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":266,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":773,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":268,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":267,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":760,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":766,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":827,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":693,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":47,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":413,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":296,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":213,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":504,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":314,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":799,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":553,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":62,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":107,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":106,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapRemove":817,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":569,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":741,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":227,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":373,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":640,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":685,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":789,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":686,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":224,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":370,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":684,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":606,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":801,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":802,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":287,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":289,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":803,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":31,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":452,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":542,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":340,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":298,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":451,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":679,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":159,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":554,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":740,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":607,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":608,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":530,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":353,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":579,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":476,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":471,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":160,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":193,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":35,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":676,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":17,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":678,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":830,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":71,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":126,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":264,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":235,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":404,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":487,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":236,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":829,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":134,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":753,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":322,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":281,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":320,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":609,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":182,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":68,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":145,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":774,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":73,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":776,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":127,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":400,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":462,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":399,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":215,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":87},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"438ee93b-13ac-11e5-aa19-5bb2ccdc127b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2319","type":"CtIfImpl","sourcecode":"if ((int) != 1) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"hit":"maxElements"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"status":-1},{"failures":[34,35,36,37,38,39,40,41,42,43],"tindex":"4390bdfc-13ac-11e5-aa19-0b74ac692033","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1152","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    java.lang.Object java.lang.Object = null;\n    switch (int) {\n        case 3 :\n            if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n                return false;\n            } \n            java.lang.Object = java.util.Map<?, ?>.get(K);\n            if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n                return false;\n            } \n        case 2 :\n            if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n                return false;\n            } \n            java.lang.Object = java.util.Map<?, ?>.get(K);\n            if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n                return false;\n            } \n        case 1 :\n            if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n                return false;\n            } \n            java.lang.Object = java.util.Map<?, ?>.get(K);\n            if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n                return false;\n            } \n    }\n} "},"status":-1},{"failures":[44,45,46],"tindex":"4390bdfd-13ac-11e5-aa19-51dfba3539bc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) == 0) {\n    return false;\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:159","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (!org.apache.commons.collections4.list.AbstractLinkedList<E>.(contains(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"4390bdfe-13ac-11e5-aa19-fb29ac13dc45","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:320","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"status":0},{"failures":[47,48,49,50,51,52,53,54,55,56],"tindex":"4390bdff-13ac-11e5-aa19-6bf2e8b0527a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:217","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = java.lang.Object.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n        case 2 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n        case 1 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n    }\n} "},"status":-1},{"failures":[57,58,59,60],"tindex":"4390be00-13ac-11e5-aa19-91ee2b30cf6a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[61,62],"tindex":"4390e511-13ac-11e5-aa19-e504bde29750","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:191","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"IteratorChain cannot be changed after the first use of a method from the Iterator interface\");\n} "},"variableMap":{"isLocked":"xWasLeftChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1150","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[],"tindex":"4393cb42-13ac-11e5-aa19-d52c246e9f00","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:490","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(null, null)"},"variableMap":{"h":"found"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    return null;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } \n} "},"status":0},{"failures":[],"tindex":"4393f253-13ac-11e5-aa19-fbc155f59605","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:129","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.contains(java.lang.Object)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"4393f254-13ac-11e5-aa19-1b1feeb9e0a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1746","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getKey() can only be called after next() and before remove()\");\n} "},"variableMap":{"lastReturnedNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,57,58,60,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,34,35,37,38,39,40,169,41,55,56,42,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192],"tindex":"4393f255-13ac-11e5-aa19-673751a703ad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n    do {\n        final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n} "},"status":-1},{"failures":[],"tindex":"4395c716-13ac-11e5-aa19-99900129812b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:279","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"4395c717-13ac-11e5-aa19-1f282d2d1668","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:221","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"4395c718-13ac-11e5-aa19-e935dbdd1bc9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:373","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.TreeBidiMap.KeyView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[90,94,98,101,105,110,117,122,144,149,160,165,38,55],"tindex":"4395c719-13ac-11e5-aa19-59102bd6775e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"4395c71a-13ac-11e5-aa19-d373d48df0fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:53","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super T, ? extends T> == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n} "},"status":-2},{"failures":[193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233],"tindex":"4395c71b-13ac-11e5-aa19-afe2fbd003ed","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"i","listSize":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:436","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        java.lang.Object[][int++] = E;\n    }\n}"},"status":-1},{"failures":[],"tindex":"4395ee2c-13ac-11e5-aa19-6b0e06a1332b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:142","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:149","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n}"},"status":0},{"failures":[234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306],"tindex":"4395ee2d-13ac-11e5-aa19-4f223fa46256","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:956","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<?> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"lastUsedIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:212","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    } else {\n        java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n    }\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-1},{"failures":[234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306],"tindex":"4395ee2e-13ac-11e5-aa19-f781046257d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} "},"variableMap":{"lastUsedIterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtIfImpl","sourcecode":"if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n} else {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-1},{"failures":[],"tindex":"4395ee2f-13ac-11e5-aa19-09713c72b567","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.ListOrderedSet:240","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.ListOrderedSet<E>.clear()"},"variableMap":{"this":"uniqueSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:488","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>) == null) {\n    java.util.Set<E> = org.apache.commons.collections4.set.UnmodifiableSet.<E>unmodifiableSet(java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet());\n} "},"status":-2},{"failures":[307,308,309,310,311,216,312,313,314,217,315,316,317,318,319,320,321,218,322,323,324],"tindex":"4395ee30-13ac-11e5-aa19-819751eaf725","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.TransformIterator:90","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends I>.remove()"},"variableMap":{"iterator":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:111","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.CollectionBag<E>.add(java.util.Iterator<? extends E>.next(), 1);\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[],"tindex":"4395ee31-13ac-11e5-aa19-fd99b9d16b5c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"4395ee32-13ac-11e5-aa19-ad5a95ffbe84","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:358","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.removeAllExpired(org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.now())"},"variableMap":{"this":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:235","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.BidiMap<V, K>) == null) {\n    org.apache.commons.collections4.BidiMap<V, K> = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.createBidiMap(java.util.Map<V, K>, java.util.Map<K, V>, this);\n} "},"status":-2},{"failures":[],"tindex":"43961543-13ac-11e5-aa19-056b45edccc6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AnyPredicate:81","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 1) {\n    return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.Predicate<? super T>[][0]));\n} "},"variableMap":{"length":"length","preds":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:81","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n} "},"status":-2},{"failures":[325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341],"tindex":"43961544-13ac-11e5-aa19-590171826bcc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:320","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"variableMap":{"cursor":"cursor","node":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-1},{"failures":[],"tindex":"43961545-13ac-11e5-aa19-8380885817f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:86","type":"CtForEachImpl","sourcecode":"for (final E E : E[]) {\n    org.apache.commons.collections4.list.TransformedList<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}"},"status":-2},{"failures":[342,343],"tindex":"43961546-13ac-11e5-aa19-c7cb5379b899","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:358","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purge()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1038","type":"CtWhileImpl","sourcecode":"while (true) {\n    final K K = ((K)(java.io.ObjectInputStream.readObject()));\n    if (K == null) {\n        break;\n    } \n    final V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.put(K, V);\n}"},"status":-1},{"failures":[],"tindex":"43961547-13ac-11e5-aa19-5365c7f9d99f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:146","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:590","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(java.lang.Object);\n    java.lang.StringBuilder.append(int);\n    java.lang.StringBuilder.append(':');\n    java.lang.StringBuilder.append(java.lang.Object);\n    if (java.util.Iterator<E>.hasNext()) {\n        java.lang.StringBuilder.append(',');\n    } \n}"},"status":-2},{"failures":[344,345,346,347,348,349,307,350,351,352,353,354,355,195,356,357,196,197,358,359,360,361,362,363,364,365,225,366,367,226,227,368],"tindex":"43961548-13ac-11e5-aa19-9dec47a7d854","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:138","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.List<E>.add(org.apache.commons.collections4.collection.TransformedCollection<E>.transform(E));\n}"},"status":-1},{"failures":[],"tindex":"43961549-13ac-11e5-aa19-aba6b9f52399","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:260","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.TreeList<E>.checkInterval(int, 0, (org.apache.commons.collections4.list.TreeList<E>.(size()) - 1))"},"status":0},{"failures":[],"tindex":"4396154a-13ac-11e5-aa19-a71fa5538ce6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1122","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.Flat3Map<K, V>.org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    org.apache.commons.collections4.map.Flat3Map<K, V>.org.apache.commons.collections4.map.AbstractHashedMap<K, V> = org.apache.commons.collections4.map.Flat3Map<K, V>.org.apache.commons.collections4.map.AbstractHashedMap<K, V>.clone();\n} "},"variableMap":{"cloned":"map","delegateMap":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeMap:117","type":"CtIfImpl","sourcecode":"if ((java.util.Map<K, V>.containsKey(K)) == false) {\n    throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size\");\n} "},"status":-2},{"failures":[369,370,371,372,373,374,375,97,376,342,98,377,378,99,100,379,380,381,382,383,384,385,386,387,388,96,389,95,390,391,90,392,393,394,395,396,397,398,399,400,91,92,401,93,94,402,403,404,405,406,407,408,409,410,109,411,343,110,412,413,111,112,414,415,416,417,418,419,420,421,422,423,107,108,106,424,425,101,426,427,428,429,430,431,432,433,434,102,103,435,104,105,436,437,438,439],"tindex":"4396154b-13ac-11e5-aa19-c98911ee4abb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purge(java.lang.ref.Reference<?>)"},"variableMap":{"ref":"ref","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:380","type":"CtWhileImpl","sourcecode":"while (java.lang.ref.Reference<?> != null) {\n    org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purge(java.lang.ref.Reference<?>);\n    java.lang.ref.Reference<?> = java.lang.ref.ReferenceQueue<java.lang.Object>.poll();\n}"},"status":-1},{"failures":[],"tindex":"43963c5c-13ac-11e5-aa19-87ce9d5939d0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"variableMap":{"outputStream":"label"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.println(\" = \");\n} "},"status":-2},{"failures":[],"tindex":"43963c5d-13ac-11e5-aa19-9f0f4121cbc5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n} else {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n    (int)++;\n    for (int int = int - 1 ; int >= 0 ; int--) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n            do {\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n        } \n    }\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n}"},"status":-2},{"failures":[],"tindex":"43b3fd8e-13ac-11e5-aa19-49237be75f61","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"size","lengthInBits":"length","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:176","type":"CtIfImpl","sourcecode":"if ((T[].int) < (int)) {\n    final java.lang.Class<?> java.lang.Class<?> = T[].getClass().getComponentType();\n    T[] = ((T[])(java.lang.reflect.Array.newInstance(java.lang.Class<?>, int)));\n} "},"status":-2},{"failures":[440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,256,457,458,459,460,461,462,463,464,465,466,467,468],"tindex":"43b3fd8f-13ac-11e5-aa19-2505941169c0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:262","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(1);\n    java.util.Collection<V>.add(((V)(java.lang.Object)));\n    if ((java.util.Collection<V>.size()) > 0) {\n        org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n        boolean = true;\n    } \n} else {\n    boolean = java.util.Collection<V>.add(((V)(java.lang.Object)));\n}"},"status":-1},{"failures":[469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,61,539,540,541,62,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562],"tindex":"43b3fd90-13ac-11e5-aa19-83b7f4a49a7e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"cmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:571","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    break;\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"43b3fd91-13ac-11e5-aa19-fb6595bcac0f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet<K>(this);\n} "},"status":-2},{"failures":[59,141,142,143,144,145,146,148,151,563,564],"tindex":"43b3fd92-13ac-11e5-aa19-2f9449809405","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"status":-1},{"failures":[61,62,555,559],"tindex":"43b3fd93-13ac-11e5-aa19-edb66533d7a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:967","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"y","replacement":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1182","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"status":-1},{"failures":[351,565,566,311,567,568],"tindex":"43b3fd94-13ac-11e5-aa19-d54c8a2007e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"variableMap":{"it2":"e","it1":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:94","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"43b424a5-13ac-11e5-aa19-7bd664f12dc3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:440","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.checkModCount()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:258","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    java.util.Iterator<E>.next();\n    java.util.Iterator<E>.remove();\n}"},"status":-2},{"failures":[],"tindex":"43b424a6-13ac-11e5-aa19-1192c1339505","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:287","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n    boolean |= java.util.Collection<E>.removeAll(java.util.Collection<?>);\n}"},"status":-2},{"failures":[469,470,471,473,474,472,481,475,476,477,478,479,480,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,514,515,513,569,524,516,517,518,519,520,521,522,523,525,526,527,528,529,530,531,532,533,534,535,536,537,538,61,539,540,541,62,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562],"tindex":"43b424a7-13ac-11e5-aa19-0fb8694a6b87","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:549","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    return null;\n} "},"status":-1},{"failures":[57,58,59,60],"tindex":"43b424a8-13ac-11e5-aa19-518bc9ecd6ec","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"43b424a9-13ac-11e5-aa19-d54250c58ca3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1024","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:499","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"43b499da-13ac-11e5-aa19-c3de5f7f790a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"bitIndex","currentIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:211","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"43b499db-13ac-11e5-aa19-b924fe38c076","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:126","type":"CtForImpl","sourcecode":"for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n    char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n}"},"status":-2},{"failures":[570],"tindex":"43b499dc-13ac-11e5-aa19-cfb41b50714b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:79","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.clear()"},"variableMap":{"list":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:82","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Transformer<? super E, ? extends E> != null) && (java.util.List<E> != null)) && ((java.util.List<E>.size()) > 0)) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E[] E[] = ((E[])(java.util.List<E>.toArray()));\n    java.util.List<E>.clear();\n    for (final E E : E[]) {\n        org.apache.commons.collections4.list.TransformedList<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n} "},"status":-1},{"failures":[],"tindex":"43b4c0ed-13ac-11e5-aa19-df559bde249d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:353","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:168","type":"CtLocalVariableImpl","sourcecode":"final int int = java.util.Comparator<T>.compare(T, T)"},"status":-2},{"failures":[],"tindex":"43b4c0ee-13ac-11e5-aa19-ed220ea31acc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ArrayStack:89","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.util.EmptyStackException();\n} else {\n    return java.util.ArrayList<E>.get((int - 1));\n}"},"variableMap":{"this":"list","n":"currentIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:142","type":"CtIfImpl","sourcecode":"if ((int) < (int)) {\n    ++(int);\n    return java.util.List<E>.get(((int) - 1));\n} "},"status":-2},{"failures":[571,572,573,574],"tindex":"43b4c0ef-13ac-11e5-aa19-f3aa32a353b8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2319","type":"CtIfImpl","sourcecode":"if ((int) != 1) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"hit":"retval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"status":-1},{"failures":[],"tindex":"43b4c0f0-13ac-11e5-aa19-e17a960afc75","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:194","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1285","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue(), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue())"},"status":-2},{"failures":[471,473,479,480,507,509,510,511,503,483,484,486,487,488,489,490,491,496,497,498,499,512,514,520,523,525,526,527,558,560,561,562,554,529,530,531,532,533,534,535,536,537,61,541,62,545,546,547,548,549,550,575,576],"tindex":"43b4c0f1-13ac-11e5-aa19-c7c5f87d5f5c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:964","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"dataElement":"dataElement","deletedNode":"rval","replacement":"rval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[577,578,579,179,183,187],"tindex":"43b4c0f2-13ac-11e5-aa19-b78ef94ccce6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:675","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    return false;\n} "},"variableMap":{"entryKey":"value","entryValue":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n        if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n            return true;\n        } \n    }\n} else {\n    for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n            return true;\n        } \n    }\n}"},"status":-1},{"failures":[580,581,582,583,584,585,586],"tindex":"43b4c0f3-13ac-11e5-aa19-0399f80ae79a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:384","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    return true;\n} "},"status":-1},{"failures":[63,64,65,66,587,588,67,68,69,70,589,71,72,73,74,75,76,77,78,590,79,591,592,593,80,81,82,594,595,83,84,85,86,87,88,89,372,375,373,374,400,91,92,401,93,94,95,96,389,97,342,98,377,378,99,100,379,380,381,382,383,384,385,386,387,388,390,391,90,392,393,394,395,396,397,398,399,407,410,408,409,434,102,103,435,104,105,106,107,108,109,343,110,412,413,111,112,414,415,416,417,418,419,420,421,422,423,424,425,101,426,427,428,429,430,431,432,433,596,597,598,599,114,115,600,116,117,118,119,120,121,601,122,602,603,123,124,604,605,606,607,608,609,610,611,612,613,614,615,113,616,617,618,619,620,621,622,623,624,125,126,127,128,129,625,132,133,57,58,60,130,131,134,626,135,136,137,627,141,142,628,143,144,145,146,147,148,629,149,630,631,150,151,632,633,634,152,153,154,155,138,139,635,636,637,140,638,639,640,641,642,643,644,645,646,647,648,649,157,158,650,159,160,161,162,163,164,651,165,652,653,166,167,654,655,656,657,658,659,660,661,662,663,664,665,156,666,667,668,669,670,671,672,673,674,675,676,677,34,35,36,37,38,39,40,169,41,678,55,679,680,56,42,681,682,683,684,685,686,687,688,689,690,691,692,168,693,694,695,696,697,698,699,700,701,702,170,703,704,705,706,171,172,173,174,175,707,180,181,708,182,183,184,185,709,186,710,187,711,712,188,189,713,714,715,190,191,716,192,176,177,178,717,718,179,719,720,721,722,723,724,725,726,727],"tindex":"43b4e804-13ac-11e5-aa19-2703db8d58c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:838","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"previous":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n    do {\n        final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n} "},"status":-1},{"failures":[],"tindex":"43b4e805-13ac-11e5-aa19-2bfd31d30fa5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1664","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"previous":"child","e":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:565","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768],"tindex":"43b4e806-13ac-11e5-aa19-59cc72d4748c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:115","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"43b4e807-13ac-11e5-aa19-c7c3fe1f2b70","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"diag"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:145","type":"CtWhileImpl","sourcecode":"while ((((int - int) < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get((int - int))))) {\n    ++int;\n}"},"status":-2},{"failures":[],"tindex":"43b4e808-13ac-11e5-aa19-1d9643187acd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:237","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.start()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:248","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.CollatingIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":0},{"failures":[],"tindex":"43b50f19-13ac-11e5-aa19-3f3ff24d140d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:891","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    return null;\n}"},"variableMap":{"root":"left","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:667","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[769,770,771,772,773,774,775,776,777,778,779,780,781],"tindex":"43b50f1a-13ac-11e5-aa19-4f68e4ab8b5f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"lineageIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1006","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    java.io.PrintStream.print(java.lang.Object);\n} else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n    java.io.PrintStream.print(\"(this Map)\");\n} else {\n    java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n}"},"status":-1},{"failures":[],"tindex":"43b50f1b-13ac-11e5-aa19-03b0b38e2536","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1022","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[580,581,582,583,584,585,782,586,783,784,785,786],"tindex":"43b50f1c-13ac-11e5-aa19-e9cc5763d046","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:356","type":"CtIfImpl","sourcecode":"if ((java.util.BitSet.get(int)) == false) {\n    org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n} "},"status":-1},{"failures":[],"tindex":"43b50f1d-13ac-11e5-aa19-975fd6457204","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtIfImpl","sourcecode":"if ((java.util.List<? extends E>.size()) > (java.util.List<? extends E>.size())) {\n    java.util.List<? extends E> = java.util.List<? extends E>;\n    java.util.List<? extends E> = java.util.List<? extends E>;\n} "},"variableMap":{"list1":"coll","larger":"coll","smaller":"coll","list2":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:217","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    boolean |= org.apache.commons.collections4.collection.IndexedCollection<K, C>.remove(java.lang.Object);\n}"},"status":-2},{"failures":[],"tindex":"43b50f1e-13ac-11e5-aa19-af226481b78a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    final int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) * 2;\n    if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n    } \n} "},"status":0},{"failures":[271,272,273,274,275,277,278,280,281,282,283,284,287],"tindex":"43b50f1f-13ac-11e5-aa19-a946a802e353","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map) {\n    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object));\n    return org.apache.commons.collections4.map.CompositeMap<K, V>.entrySet().equals(java.util.Map<?, ?>.entrySet());\n} "},"status":-1},{"failures":[61,62],"tindex":"43b50f20-13ac-11e5-aa19-15960a8a3989","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:972","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[728,729,787,788,789,790,791,792,730,731,793,732,733,734,735,794,736,795,737,796,797,738,739,798,799,800,801,802,803,804,805,806,807,808,809,810,740,811,812,813,741,742,743,814,815,816],"tindex":"43b53631-13ac-11e5-aa19-1b560dd2e65e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:676","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} "},"variableMap":{"current":"path"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:460","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"43b53632-13ac-11e5-aa19-1f04e62a8a4a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1392","type":"CtReturnImpl","sourcecode":"return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false"},"variableMap":{"object":"lock"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:124","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().contains(java.lang.Object);\n}"},"status":-2},{"failures":[],"tindex":"43b53633-13ac-11e5-aa19-7997ad4fe7a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1056","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return null;\n}"},"variableMap":{"root":"tree"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:708","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"43b53634-13ac-11e5-aa19-7f4e05a8dd53","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:368","type":"CtIfImpl","sourcecode":"if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n    E = E;\n    int = int;\n} "},"status":-2},{"failures":[817],"tindex":"43b53635-13ac-11e5-aa19-a52cb8ac4ad8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:117","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"null nonNullComparator\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:140","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Map is fixed size\")"},"status":-1},{"failures":[],"tindex":"43b53636-13ac-11e5-aa19-7d8e0fc963e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"size","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:553","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n} else {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"43b53637-13ac-11e5-aa19-734a6ec8280f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[818,819,820,821],"tindex":"43b53638-13ac-11e5-aa19-c789d25ec94c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int++;\n        java.util.Iterator<?>.next();\n    }\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int++;\n        java.util.Enumeration<?>.nextElement();\n    }\n} else {\n    try {\n        int = java.lang.reflect.Array.getLength(java.lang.Object);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[580,581,582,583,584,585,782,586,783,784,785,786],"tindex":"43b53639-13ac-11e5-aa19-f77a1cce90ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"leastIndex","index":"leastIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:355","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<E>.size()) ; int++) {\n    if ((java.util.BitSet.get(int)) == false) {\n        org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n    } \n    if (java.util.BitSet.get(int)) {\n        if (int == (-1)) {\n            int = int;\n            E = java.util.ArrayList<E>.get(int);\n        } else {\n            final E E = java.util.ArrayList<E>.get(int);\n            if ((java.util.Comparator<? super E>) == null) {\n                throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n            } \n            if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n                E = E;\n                int = int;\n            } \n        }\n    } \n}"},"status":-1},{"failures":[111,822,123,823,824,150,825,826,166,827,56,828,188],"tindex":"43b55d4a-13ac-11e5-aa19-43c1fa6484b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:325","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-1},{"failures":[829,830,831,832],"tindex":"43b55d4b-13ac-11e5-aa19-4d0cf885b3e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"x","maxElements":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:224","type":"CtWhileImpl","sourcecode":"while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    int[][int] = int--;\n    int--;\n}"},"status":-1},{"failures":[],"tindex":"43b55d4c-13ac-11e5-aa19-2168498175fe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:137","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.MultiMap<K, C>.clear()"},"status":0},{"failures":[],"tindex":"43b55d4d-13ac-11e5-aa19-1fc0d470c5df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:387","type":"CtIfImpl","sourcecode":"if (boolean) {\n    continue;\n} else {\n    return false;\n}"},"variableMap":{"foundCurrentElement":"previousObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:263","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasPrevious()) {\n    final E E = java.util.ListIterator<? extends E>.previous();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"43b55d4e-13ac-11e5-aa19-33ea609fc657","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:94","type":"CtIfImpl","sourcecode":"if (char != char) {\n    final int int = char ^ char;\n    return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n} "},"status":-2},{"failures":[577,578,579,179,183,187],"tindex":"43b55d4f-13ac-11e5-aa19-5be2aa8c243d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n        if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n            return true;\n        } \n    }\n} else {\n    for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n            return true;\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"43b55d50-13ac-11e5-aa19-39fe00cf5a27","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:578","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"status":-2},{"failures":[],"tindex":"43b66ec1-13ac-11e5-aa19-3509a84ee33a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:957","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n    }\n} "},"variableMap":{"lengthInBits":"lengthInBits","root":"root","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:198","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306],"tindex":"43b6bce2-13ac-11e5-aa19-7d9d1bf6f214","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} "},"variableMap":{"lastUsedIterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtIfImpl","sourcecode":"if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n} else {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-1},{"failures":[129],"tindex":"43b6bce3-13ac-11e5-aa19-e1250a7ededd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"remove() cannot be called\");\n} "},"variableMap":{"nextObjectSet":"removeLRUEntry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:250","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != null)) {\n    if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n        boolean = true;\n        break;\n    } \n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"43b6e3f4-13ac-11e5-aa19-7182412dc014","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:211","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[47,48,49,50,51,52,53,54],"tindex":"43b6e3f5-13ac-11e5-aa19-e1056c54c693","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:149","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return V;\n        } \n    case 2 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return V;\n        } \n    case 1 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return V;\n        } \n}"},"status":-1},{"failures":[],"tindex":"43b6e3f6-13ac-11e5-aa19-f1cd5a8cc741","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:219","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsKey(K)) {\n    return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().put(K, V);\n} else {\n    final V V = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().put(K, V);\n    java.util.List<K>.add(K);\n    return V;\n}"},"status":-2},{"failures":[],"tindex":"43b6e3f7-13ac-11e5-aa19-599da61a0726","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:376","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:359","type":"CtLocalVariableImpl","sourcecode":"final int int = java.util.Map<? extends E, org.apache.commons.collections4.Closure<E>>.size()"},"status":-2},{"failures":[833,834,835,836,837,838],"tindex":"43b6e3f8-13ac-11e5-aa19-2d81f36441c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:219","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"canRemove":"removeAllowed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:105","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((boolean) || (boolean)) {\n        throw new java.lang.IllegalStateException();\n    } \n    E = null;\n    boolean = true;\n} else {\n    throw new java.lang.UnsupportedOperationException();\n}"},"status":-1},{"failures":[],"tindex":"43b6e3f9-13ac-11e5-aa19-4d9e09240776","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:211","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"43b6e3fa-13ac-11e5-aa19-a9af2b927b82","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:53","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super T, ? extends T> == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n} "},"variableMap":{"transformer":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TransformedBag:78","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Transformer<? super E, ? extends E> != null) && (org.apache.commons.collections4.Bag<E> != null)) && ((org.apache.commons.collections4.Bag<E>.size()) > 0)) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E[] E[] = ((E[])(org.apache.commons.collections4.Bag<E>.toArray()));\n    org.apache.commons.collections4.Bag<E>.clear();\n    for (final E E : E[]) {\n        org.apache.commons.collections4.bag.TransformedBag<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n} "},"status":0},{"failures":[],"tindex":"43b6e3fb-13ac-11e5-aa19-cb6cdaf6a921","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"bitIndex","modifications":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:202","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"43b6e3fc-13ac-11e5-aa19-67fa418069ec","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:347","type":"CtIfImpl","sourcecode":"if ((this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n    throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n} "},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":98,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}