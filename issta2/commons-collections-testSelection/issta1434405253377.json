{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":64,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":115,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":649,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":421,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":1,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":179,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":452,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":527,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":171,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":472,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":60,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":126,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":292,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":300,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":396,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":307,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":170,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":619,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":167,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":418,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":214,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":144,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":354,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":415,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":241,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":239,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":314,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":666,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":681,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":237,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":691,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":235,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":122,"org.apache.commons.collections4.CollectionUtilsTest.collect":50,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":578,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":2,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":625,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":131,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":57,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":460,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":537,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":636,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":190,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":580,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":581,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":147,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":128,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":491,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":201,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":402,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":512,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":513,"org.apache.commons.collections4.map.Flat3MapTest.testObjectEqualsSelf":47,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":191,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":435,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":252,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":342,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":644,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":453,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":541,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":188,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":299,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":467,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":210,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":99,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":52,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":379,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":556,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":119,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":660,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":79,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":234,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":363,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":184,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":13,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":444,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":316,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":566,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":431,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":554,"org.apache.commons.collections4.CollectionUtilsTest.transform2":48,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":497,"org.apache.commons.collections4.CollectionUtilsTest.select":672,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":189,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":208,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":302,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":344,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":532,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":569,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":388,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":688,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":218,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":482,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":628,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":35,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":576,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":264,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":538,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":71,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":276,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":287,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":26,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":148,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":134,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":211,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":623,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":135,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":133,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":583,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":647,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":399,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":369,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":626,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":203,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":274,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":476,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":439,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":335,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":412,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":123,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":413,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":557,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":3,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":414,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":85,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":661,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":631,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":395,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":700,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":494,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":298,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":376,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":588,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":640,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":116,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":255,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":198,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":89,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":540,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":317,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":682,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":37,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":391,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":196,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":282,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":616,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":262,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":110,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":514,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":31,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":671,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsContract":696,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":552,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":618,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":617,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":680,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":384,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":698,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":51,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":368,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":653,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":475,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":638,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":445,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":373,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":425,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":613,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":620,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":614,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":615,"org.apache.commons.collections4.map.HashedMapTest.testEqualsNull":678,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":519,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":248,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":663,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":195,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":61,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":266,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":259,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEqualsNull":695,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":42,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":697,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":447,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":692,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":142,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":326,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":345,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":658,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":659,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":657,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":27,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":498,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":596,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":633,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":109,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":436,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":11,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":205,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":215,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":470,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":53,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":501,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":677,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":132,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":437,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":481,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":228,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":279,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":594,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":499,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":559,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":127,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":385,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":450,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":440,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":129,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":320,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":461,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":389,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":33,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":229,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":54,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":655,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":654,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":91,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":200,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":324,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":656,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":4,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":250,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":459,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":141,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":458,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":517,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":609,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":702,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":457,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":516,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":169,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":22,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":405,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":608,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":285,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":105,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":202,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":454,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":315,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":455,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":21,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":456,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":591,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":24,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":319,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":113,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":138,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":507,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":137,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":136,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":63,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":505,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":685,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":44,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":175,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":530,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":400,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":45,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":520,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":539,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":209,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":506,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":433,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":283,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":348,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":687,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":162,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":555,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":70,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":464,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":668,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_Decorate":222,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":416,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":28,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":442,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":325,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":531,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":365,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":84,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":227,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":260,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":306,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":77,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":125,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":422,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsContract":679,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":353,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":473,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":592,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToString":704,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionClear":705,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":585,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":197,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":181,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":275,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":102,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":355,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":652,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":120,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":69,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":337,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":297,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":398,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":446,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":34,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":68,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":611,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":55,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":199,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":251,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":159,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":232,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":699,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":244,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":664,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":247,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":238,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":683,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":186,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":284,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":338,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":207,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":568,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":629,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":323,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":263,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":336,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":643,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":295,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":236,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":564,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":242,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":529,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":465,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":5,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":194,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":479,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":509,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":634,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":178,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":547,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":579,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":9,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":490,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":29,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":305,"org.apache.commons.collections4.map.LinkedMapTest.testReset":502,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":560,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":622,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":231,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":536,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":124,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":650,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":143,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":397,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":438,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":562,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":624,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":605,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":548,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":180,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":553,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":177,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":46,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":221,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":387,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":193,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":377,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSimpleSerialization":140,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":526,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":382,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":518,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":525,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":524,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":558,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":463,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":240,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":301,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":584,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":290,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":550,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":665,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":92,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":246,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":621,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":528,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":582,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":604,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":230,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":347,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":360,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":7,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":496,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":420,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":601,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":174,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":371,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":563,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":689,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":20,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":694,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":401,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":424,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":577,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":304,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":486,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":487,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":488,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":651,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":627,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":600,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":17,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":394,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":329,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":573,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":362,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":182,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":220,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":374,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":574,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":158,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":575,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":111,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":256,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":293,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":565,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":62,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":451,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":312,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":90,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":286,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":669,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":356,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":602,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":87,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":595,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":535,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":603,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":610,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":216,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":386,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":39,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":350,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":327,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":432,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":357,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":406,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":243,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":294,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":183,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":343,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":40,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":8,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueCompatibility":161,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":328,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":43,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":217,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":522,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":521,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":637,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":226,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":523,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":390,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":662,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":118,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":508,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":423,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":434,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":511,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":383,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":471,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":223,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":165,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":107,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":56,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":686,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":81,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":346,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":381,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":448,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":76,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":261,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":157,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":156,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":359,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":41,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":153,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":321,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":152,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":155,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":58,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":154,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":149,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":166,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":151,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":534,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":150,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":533,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":257,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":375,"org.apache.commons.collections4.CollectionUtilsTest.isFull":701,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":310,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":417,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":503,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":500,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":504,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":204,"org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll":674,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":88,"org.apache.commons.collections4.ListUtilsTest.testSelect":673,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":172,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":684,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":72,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":639,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":427,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":597,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":426,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":392,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":449,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":74,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":163,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":67,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":112,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":570,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":462,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":571,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":572,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":607,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":430,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":429,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":428,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":273,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":630,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":693,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":104,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":75,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":176,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":407,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":82,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":225,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":543,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":606,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":101,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":254,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":468,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":94,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":403,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":249,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":108,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":6,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":349,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":65,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":185,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":667,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":330,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":443,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":95,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":280,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":489,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":303,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":278,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":676,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":493,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":515,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":675,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":648,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":340,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":632,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":66,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":322,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_Decorate":224,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":318,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":98,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":97,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":645,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":96,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":14,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":103,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":258,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":265,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":160,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":567,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":206,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":32,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":492,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":642,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":291,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":641,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":192,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":480,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":281,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":16,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":23,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":19,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":549,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":253,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":106,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":466,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":367,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":245,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":484,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":485,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":272,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":271,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":483,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":546,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":270,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":408,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":288,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":590,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":49,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSortOrder":341,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":267,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":268,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":269,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":706,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":130,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":478,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":561,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":598,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":219,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":646,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":59,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":690,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":419,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":358,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":277,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":510,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":10,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":409,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":410,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":121,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":38,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":495,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":233,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":309,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":187,"org.apache.commons.collections4.map.LRUMapTest.testLRU":542,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":289,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":78,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":599,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":36,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":404,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":339,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":352,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":670,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionSize":703,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":351,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":380,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":474,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":164,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":378,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":477,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":146,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":364,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":25,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":212,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":544,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":313,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":86,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":145,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":586,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":139,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":117,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":393,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":589,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":114,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":168,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":332,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":73,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":635,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":93,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":411,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":83,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":296,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":361,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":441,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":331,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":333,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":366,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":334,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":545,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":213,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":311,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":551,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":593,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":612,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":587,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":15,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":173,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":308,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":469,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":370,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":372},"transformations":[{"failures":[],"tindex":"0f6e5d41-13a9-11e5-a115-cfc7606c48b2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:358","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"variableMap":{"cursor":"cursor","node":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:317","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":0},{"failures":[],"tindex":"0f6e8452-13a9-11e5-a115-eddec966ceec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:219","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"canRemove":"validForUpdate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} "},"status":0},{"failures":[],"tindex":"0f6e8453-13a9-11e5-a115-71ae99d663ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:99","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:243","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n} "},"status":-2},{"failures":[0],"tindex":"0f6e8454-13a9-11e5-a115-5f570e525561","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.isEmpty()) {\n    return true;\n} else {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n            continue;\n        } \n        boolean boolean = false;\n        while (java.util.Iterator<?>.hasNext()) {\n            final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n            java.util.Set<java.lang.Object>.add(java.lang.Object);\n            if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n                boolean = true;\n                break;\n            } \n        }\n        if (boolean) {\n            continue;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}"},"variableMap":{"coll2":"coll2","coll1":"coll2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) < (java.util.Collection<?>.size())) {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n} else {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"0f6e8455-13a9-11e5-a115-f127f504a233","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:116","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayListIterator<E>.(hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:380","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E);\n    final int int = org.apache.commons.collections4.Bag<?>.getCount(E);\n    if ((1 <= int) && (int <= int)) {\n        org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n    } else {\n        org.apache.commons.collections4.Bag<E>.add(E, int);\n    }\n}"},"status":-2},{"failures":[],"tindex":"0f6eab66-13a9-11e5-a115-b191bcf6c756","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.EditScript:106","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.sequence.EditCommand<T> org.apache.commons.collections4.sequence.EditCommand<T> : java.util.List<org.apache.commons.collections4.sequence.EditCommand<T>>) {\n    org.apache.commons.collections4.sequence.EditCommand<T>.accept(org.apache.commons.collections4.sequence.CommandVisitor<T>);\n}"},"status":-2},{"failures":[],"tindex":"0f6eab67-13a9-11e5-a115-35e2f883b47d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:970","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[1],"tindex":"0f6eab68-13a9-11e5-a115-2192bbf3b280","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:858","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"variableMap":{"removed":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:252","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n} "},"status":-1},{"failures":[],"tindex":"0f6eab69-13a9-11e5-a115-13e84f926a95","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:82","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-2},{"failures":[],"tindex":"0f6ed27a-13a9-11e5-a115-13cc83d05a23","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:189","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.DualTreeBidiMap.BidiOrderedMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:427","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10],"tindex":"0f6ed27b-13a9-11e5-a115-6bb9c93600bc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:190","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.SingletonMap<K, V>.isEqualKey(java.lang.Object)) {\n    return V;\n} "},"status":-1},{"failures":[],"tindex":"0f6ed27c-13a9-11e5-a115-4b7e45eea819","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:363","type":"CtForImpl","sourcecode":"for (int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n}"},"status":-2},{"failures":[],"tindex":"0f6ed27d-13a9-11e5-a115-737adc69d9aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:270","type":"CtIfImpl","sourcecode":"if (java.lang.Object.equals(V)) {\n    return true;\n} "},"status":-2},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"tindex":"0f6ed27e-13a9-11e5-a115-59a8ad292683","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:469","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T T = ((T)(E));\n    T[][int++] = T;\n}"},"status":-1},{"failures":[29,30],"tindex":"0f6ed27f-13a9-11e5-a115-7d19f698eca5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:320","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"variableMap":{"mapSize":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:400","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)).purge(java.lang.ref.Reference<?>)) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    (this.int)--;\n    return ;\n} "},"status":-1},{"failures":[],"tindex":"0f6ef990-13a9-11e5-a115-03bf81ebb1b6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} "},"status":-2},{"failures":[],"tindex":"0f6ef991-13a9-11e5-a115-1d5278dec759","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:636","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == java.lang.Object) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    org.apache.commons.collections4.map.StaticBucketMap.this.remove(java.lang.Object);\n    return true;\n} "},"variableMap":{"obj":"this","k":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:116","type":"CtIfImpl","sourcecode":"if (java.lang.Object.getClass().equals(java.lang.Object.getClass())) {\n    final org.apache.commons.collections4.comparators.ReverseComparator<?> org.apache.commons.collections4.comparators.ReverseComparator<?> = ((org.apache.commons.collections4.comparators.ReverseComparator<?>)(java.lang.Object));\n    return java.util.Comparator<E>.equals(org.apache.commons.collections4.comparators.ReverseComparator<?>.java.util.Comparator<?>);\n} "},"status":-2},{"failures":[],"tindex":"0f6ef992-13a9-11e5-a115-7bf2cf334fb4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:181","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) != null) {\n    org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n} "},"status":-2},{"failures":[31,32,33,34],"tindex":"0f6ef993-13a9-11e5-a115-b1b6dc65866f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1641","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"nextNode":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1163","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"0f6ef994-13a9-11e5-a115-2f21d002690a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1139","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"0f6f20a5-13a9-11e5-a115-216541221ffe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:133","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<K, V> = this;\n} "},"status":-2},{"failures":[],"tindex":"0f6f20a6-13a9-11e5-a115-6b38396fad06","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:488","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    java.lang.Integer = java.lang.Integer;\n} "},"variableMap":{"answer":"c","defaultValue":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:442","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n} else {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n}"},"status":-2},{"failures":[48,49,50],"tindex":"0f6f20a7-13a9-11e5-a115-3d8e56163c11","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1066","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends I>.hasNext()) {\n    final I I = java.util.Iterator<? extends I>.next();\n    final O O = org.apache.commons.collections4.Transformer<? super I, ? extends O>.transform(I);\n    R.add(O);\n}"},"status":-1},{"failures":[],"tindex":"0f6f20a8-13a9-11e5-a115-993719e0a66e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    return ((java.lang.Object[])(java.lang.Object))[int];\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"this":"key","i":"length","object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"status":-2},{"failures":[51,52,53,54],"tindex":"0f6f47b9-13a9-11e5-a115-89b2350485e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:245","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"0f6f47ba-13a9-11e5-a115-61821e73b90b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\");\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:1025","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.List<E>.add(java.util.Iterator<? extends E>.next());\n}"},"status":0},{"failures":[55,56,57,58],"tindex":"0f6f47bb-13a9-11e5-a115-5fd58cf9717e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:106","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"added","beforeFirst":"added"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C);\n} "},"status":-1},{"failures":[],"tindex":"0f6f47bc-13a9-11e5-a115-8fe20ec0b0e4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[],"tindex":"0f6f47bd-13a9-11e5-a115-f7cc4395414c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"variableMap":{"next":"entry","entry":"entry","previous":"entry","hashCode":"hashCode","this":"this","index":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:183","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[31,32,59,60,61,62,63],"tindex":"0f6f47be-13a9-11e5-a115-c39ecb7a43fd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:993","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[64,65,66,67,68,69,70,71,72,73,74],"tindex":"0f6f47bf-13a9-11e5-a115-852a8fd7e4ec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.List) == false) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:230","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n    return true;\n} "},"status":-1},{"failures":[75],"tindex":"0f6f6ed0-13a9-11e5-a115-0b01d9bb12ea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return null;\n} "},"variableMap":{"lengthInBits":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1142","type":"CtIfImpl","sourcecode":"if ((int >= 0) && (int < int)) {\n    return null;\n} "},"status":-1},{"failures":[76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,31,129,32,130,131,132,133,134,135,136,137,138,34,63,139,140],"tindex":"0f6f6ed1-13a9-11e5-a115-13eeb9856f81","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:416","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.EntryView();\n} "},"status":-1},{"failures":[141,142,143,144,145,146],"tindex":"0f6f6ed2-13a9-11e5-a115-2b94a5fb6aa8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:205","type":"CtIfImpl","sourcecode":"if ((int[][(int - int)]) <= (int[][int])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n} "},"variableMap":{"vUp":"vUp","start1":"i","vDown":"vUp","delta":"k","end2":"delta","this":"this","i":"start1","end1":"k","k":"delta","start2":"delta"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:231","type":"CtIfImpl","sourcecode":"if ((int[][int]) <= (int[][(int + int)])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n} "},"status":-1},{"failures":[147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178],"tindex":"0f6f6ed3-13a9-11e5-a115-c5042a959cbb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:143","type":"CtUnaryOperatorImpl","sourcecode":"++(int)"},"variableMap":{"currentIndex":"end"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:164","type":"CtAssignmentImpl","sourcecode":"int = (int) - (int)"},"status":-1},{"failures":[179,180,181,182],"tindex":"0f6f6ed4-13a9-11e5-a115-a7e25cbe8737","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[183,184,76,77,78,79,185,186,187,188,189,80,81,190,82,83,84,85,86,87,88,89,90,191,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,192,193,194,195,196,197,198,199,115,116,117,118,119,200,120,121,122,123,124,125,126,127,128,201,31,202,203,129,32,130,131,132,133,134,135,136,137,138,204,205,206,59,33,207,208,60,34,61,62,63],"tindex":"0f6f6ed5-13a9-11e5-a115-910b518b63c6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:853","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"rval","leftChild":"rval","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:571","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    break;\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"0f6f95e6-13a9-11e5-a115-c13b9ebcd6c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:127","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"0f6f95e7-13a9-11e5-a115-d5102cec9951","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:567","type":"CtInvocationImpl","sourcecode":"new java.lang.StringBuilder(128).append('{')"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1235","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(',')"},"status":0},{"failures":[],"tindex":"0f6f95e8-13a9-11e5-a115-19bb1cc16fdc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:792","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"rval","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:685","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"0f6f95e9-13a9-11e5-a115-dd95549d8156","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:129","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V> = this;\n} "},"status":-2},{"failures":[],"tindex":"0f6f95ea-13a9-11e5-a115-b7712b8af278","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1476","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.BoundedCollection<?>.isFull()"},"variableMap":{"bcoll":"coll2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:417","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Collection<?>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"0f6f95eb-13a9-11e5-a115-016448a4d88f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:769","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[209,210,211,212,213,214,215,216,217,218,219],"tindex":"0f6f95ec-13a9-11e5-a115-99a5dd7fb4c1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:135","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    return int;\n} "},"status":-1},{"failures":[220,221,222,223,224,225],"tindex":"0f6f95ed-13a9-11e5-a115-df9ff83ee477","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:167","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Transformer<? super K, ? extends K>) == null) {\n    return K;\n} "},"status":-1},{"failures":[],"tindex":"0f6f95ee-13a9-11e5-a115-93ea8b6859da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:373","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.TreeBidiMap.KeyView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"0f6fbcff-13a9-11e5-a115-2f6a502c92c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"status":-2},{"failures":[141,142,143,144,145,146],"tindex":"0f6fbd00-13a9-11e5-a115-27374f7fd956","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:186","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int += 2) {\n    final int int = int + int;\n    if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n        int[][int] = int[][(int + 1)];\n    } else {\n        int[][int] = (int[][(int - 1)]) + 1;\n    }\n    int int = int[][int];\n    int int = ((int - int) + int) - int;\n    while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = ++int;\n        ++int;\n    }\n    if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n        if ((int[][(int - int)]) <= (int[][int])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[226],"tindex":"0f6fbd01-13a9-11e5-a115-fb4b4878ecc7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1467","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == null) {\n    throw new java.lang.NullPointerException(\"The collection must not be null\");\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.PredicatedList:118","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E);\n}"},"status":-1},{"failures":[],"tindex":"0f6fbd02-13a9-11e5-a115-0dd82d618018","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"0f6fbd03-13a9-11e5-a115-a9bb6cb0c4c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2319","type":"CtIfImpl","sourcecode":"if ((int) != 1) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"hit":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:363","type":"CtForImpl","sourcecode":"for (int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n}"},"status":-2},{"failures":[227,228,229,230,231,232,233,234,235,236,237,238],"tindex":"0f6fbd04-13a9-11e5-a115-db0100807825","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:356","type":"CtIfImpl","sourcecode":"if ((java.util.BitSet.get(int)) == false) {\n    org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n} "},"status":-1},{"failures":[239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284],"tindex":"0f6fbd05-13a9-11e5-a115-cb618484824a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    return null;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } \n} "},"status":-1},{"failures":[],"tindex":"0f6fe416-13a9-11e5-a115-ab44da1060ba","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:231","type":"CtIfImpl","sourcecode":"if ((int[][int]) <= (int[][(int + int)])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n} "},"variableMap":{"vUp":"vUp","start1":"end1","vDown":"vDown","delta":"start2","end2":"delta","this":"this","i":"end1","end1":"end1","k":"offset","start2":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:184","type":"CtForImpl","sourcecode":"for (int int = 0 ; int <= int ; ++int) {\n    for (int int = -int ; int <= int ; int += 2) {\n        final int int = int + int;\n        if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n            int[][int] = int[][(int + 1)];\n        } else {\n            int[][int] = (int[][(int - 1)]) + 1;\n        }\n        int int = int[][int];\n        int int = ((int - int) + int) - int;\n        while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            int[][int] = ++int;\n            ++int;\n        }\n        if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n            if ((int[][(int - int)]) <= (int[][int])) {\n                return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n            } \n        } \n    }\n    for (int int = int - int ; int <= (int + int) ; int += 2) {\n        final int int = (int + int) - int;\n        if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n            int[][int] = (int[][(int + 1)]) - 1;\n        } else {\n            int[][int] = int[][(int - 1)];\n        }\n        int int = (int[][int]) - 1;\n        int int = ((int - int) + int) - int;\n        while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            int[][int] = int--;\n            int--;\n        }\n        if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n            if ((int[][int]) <= (int[][(int + int)])) {\n                return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n            } \n        } \n    }\n}"},"status":0},{"failures":[],"tindex":"0f6fe417-13a9-11e5-a115-df090f4661d8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"0f6fe418-13a9-11e5-a115-cd723cf9b478","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int++;\n        java.util.Enumeration<?>.nextElement();\n    }\n} else {\n    try {\n        int = java.lang.reflect.Array.getLength(java.lang.Object);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"0f6fe419-13a9-11e5-a115-e9db213295f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        return null;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"tree","parent":"tree","left":"current","root":"tree"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:716","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"0f6fe41a-13a9-11e5-a115-257e5d2f1bec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"bitIndex","proposedCapacity":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:231","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[239,240,243,244,241,245,246,247,249,250,252,253,254,255,256,257,259,262,263,267,268,270,271,272,276],"tindex":"0f6fe41b-13a9-11e5-a115-d50d0768ac3c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:88","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-1},{"failures":[285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326],"tindex":"0f6fe41c-13a9-11e5-a115-e1c6c76f6f96","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtIfImpl","sourcecode":"if (E == E) {\n    return 0;\n} "},"status":-1},{"failures":[327,328,329,330,331,332,333,334,335,336,337,338],"tindex":"0f700b2d-13a9-11e5-a115-53652eeb6050","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    throw new java.lang.NullPointerException((org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement + \" cannot be null\"));\n} "},"variableMap":{"dataElement":"childValue","o":"childValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1006","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    java.io.PrintStream.print(java.lang.Object);\n} else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n    java.io.PrintStream.print(\"(this Map)\");\n} else {\n    java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n}"},"status":-1},{"failures":[339,340,341],"tindex":"0f700b2e-13a9-11e5-a115-97f20ac33b8b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:143","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cannot add key - Predicate rejected it\")"},"status":-1},{"failures":[342,343,344,345,346,347,1,348,349,350,351,352],"tindex":"0f700b2f-13a9-11e5-a115-3f041f711cf3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:231","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasNext()) {\n    final E E = java.util.ListIterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-1},{"failures":[31,32,204,33,34],"tindex":"0f700b30-13a9-11e5-a115-b3fc18974c04","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:993","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1163","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[353,354,355],"tindex":"0f700b31-13a9-11e5-a115-6f37c85e8844","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:248","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.CollatingIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:282","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.contains(java.util.Iterator<E>.next())) == false) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"0f700b32-13a9-11e5-a115-4d92d6a77a94","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1208","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"current","parent":"left","left":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1106","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, (int + (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)), (int + int)))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"0f700b33-13a9-11e5-a115-73ab26ad254b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n} else {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"0f700b34-13a9-11e5-a115-2b5c2faafa46","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1045","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:906","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"0f700b35-13a9-11e5-a115-d930d3dd099c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} "},"variableMap":{"object":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:158","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":0},{"failures":[179,180,181,182],"tindex":"0f703246-13a9-11e5-a115-579eb548102d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:365","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"0f703247-13a9-11e5-a115-5b22ae421f49","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:126","type":"CtInvocationImpl","sourcecode":"((org.apache.commons.collections4.ResettableIterator<? extends E>)(java.util.Iterator<? extends E>)).reset()"},"variableMap":{"iterator":"nextIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:96","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> != null) {\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} else {\n    boolean = true;\n}"},"status":-2},{"failures":[356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,220,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,179,181,427,428,429,430,431,182,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,35,36,37,38,39,40,41,476,42,477,43,478,479,44,45,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,53,501,502,503,51,52,504,505,506,507,508,509,510,511,294,295,512,296,297,298,513,514,299,515,300,516,517,301,302,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,54,542,543,544,545,309,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,225,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671],"tindex":"0f703248-13a9-11e5-a115-07873cade957","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(java.lang.Object);\n} "},"variableMap":{"delegateMap":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:280","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n    return V;\n} "},"status":-1},{"failures":[],"tindex":"0f703249-13a9-11e5-a115-71297fb7ecba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"0f70324a-13a9-11e5-a115-7b00fd87e544","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(java.util.Collection<? extends E>)).decorated();\n} else if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:128","type":"CtForEachImpl","sourcecode":"for (final C C : java.util.Collection<? extends C>) {\n    boolean |= org.apache.commons.collections4.collection.IndexedCollection<K, C>.add(C);\n}"},"status":-2},{"failures":[],"tindex":"0f70324b-13a9-11e5-a115-53aafe073a1a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:365","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : org.apache.commons.collections4.map.ListOrderedMap<K, V>.entrySet()) {\n    final K K = java.util.Map.Entry<K, V>.getKey();\n    final V V = java.util.Map.Entry<K, V>.getValue();\n    if (boolean) {\n        boolean = false;\n    } else {\n        java.lang.StringBuilder.append(\", \");\n    }\n    java.lang.StringBuilder.append((K == (this) ? \"(this Map)\" : K));\n    java.lang.StringBuilder.append('=');\n    java.lang.StringBuilder.append((V == (this) ? \"(this Map)\" : V));\n}"},"status":0},{"failures":[71],"tindex":"0f70595c-13a9-11e5-a115-1d7d60644e2a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:292","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == K) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(K)))) {\n    final V V = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V = V;\n    return V;\n} "},"status":-1},{"failures":[],"tindex":"0f70595d-13a9-11e5-a115-a344847b56c7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) > 0) {\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.CursorableLinkedList<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        java.util.Iterator<E>.next();\n        java.util.Iterator<E>.remove();\n    }\n} "},"status":-2},{"failures":[672,673],"tindex":"0f70595e-13a9-11e5-a115-b1942138279b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:923","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<? extends O> != null) && (org.apache.commons.collections4.Predicate<? super O> != null)) {\n    for (final O O : java.lang.Iterable<? extends O>) {\n        if (org.apache.commons.collections4.Predicate<? super O>.evaluate(O)) {\n            R.add(O);\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"0f70595f-13a9-11e5-a115-31d03bd7131c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:432","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<K>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"status":-2},{"failures":[],"tindex":"0f705960-13a9-11e5-a115-3fe6f90db05e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:932","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"0f705961-13a9-11e5-a115-1d399300ff89","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"rval":"siblingNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1030","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":-2},{"failures":[],"tindex":"0f705962-13a9-11e5-a115-d195d64887c9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:344","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    return V;\n} "},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10],"tindex":"0f705963-13a9-11e5-a115-e9f9925c9da9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:190","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.SingletonMap<K, V>.isEqualKey(java.lang.Object)) {\n    return V;\n} "},"status":-1},{"failures":[674],"tindex":"0f708074-13a9-11e5-a115-6d1f744810fc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:877","type":"CtForEachImpl","sourcecode":"for (final C C : java.lang.Iterable<C>) {\n    if (!(org.apache.commons.collections4.Predicate<? super C>.evaluate(C))) {\n        return false;\n    } \n}"},"variableMap":{"input":"input","predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:876","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<C> != null) {\n    for (final C C : java.lang.Iterable<C>) {\n        if (!(org.apache.commons.collections4.Predicate<? super C>.evaluate(C))) {\n            return false;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"0f708075-13a9-11e5-a115-ed84f53fcd55","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:329","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.util.List<E>.addAll(int, java.util.List<E>);\n} "},"status":-2},{"failures":[],"tindex":"0f708076-13a9-11e5-a115-473553436d65","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    java.lang.String = java.lang.String;\n} "},"variableMap":{"answer":"key3","defaultValue":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:767","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.hasNext()) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.next();\n    if (((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 3) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)))) {\n        org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"0f708077-13a9-11e5-a115-a57de46c5a64","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:319","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n    java.util.Collection<E>.clear();\n}"},"status":-2},{"failures":[342,343,344,345,346,347,1,348,349,350,351,352],"tindex":"0f708078-13a9-11e5-a115-771ce9946270","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:231","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasNext()) {\n    final E E = java.util.ListIterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-1},{"failures":[141,143,144],"tindex":"0f708079-13a9-11e5-a115-cd6c2fa0f678","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:263","type":"CtWhileImpl","sourcecode":"while ((int < int) || (int < int)) {\n    if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n        ++int;\n    } else {\n        if ((int - int) > (int - int)) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        } else {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"0f70807a-13a9-11e5-a115-53f78dadcb18","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:298","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.removeAllNodes()"},"variableMap":{"this":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:321","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    if (java.util.Collection<?>.contains(E)) {\n        java.util.List<E>.add(E);\n    } \n}"},"status":-2},{"failures":[],"tindex":"0f70807b-13a9-11e5-a115-b584da838ccb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"length","lengthInBits":"length","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"length","otherOffsetInBits":"length","otherLengthInBits":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:363","type":"CtForImpl","sourcecode":"for (int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n}"},"status":-2},{"failures":[59,33,60,34,61,62,63,31,32,204],"tindex":"0f70807c-13a9-11e5-a115-19da9c60b8a2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:897","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"currentNode":"siblingNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1030","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":-1},{"failures":[],"tindex":"0f70a78d-13a9-11e5-a115-6bdd388d9cb6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    int = boolean ? int : 0;\n} else {\n    int = (int) - (int);\n}"},"status":-2},{"failures":[54],"tindex":"0f70a78e-13a9-11e5-a115-c79f99f83d91","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"status":-1},{"failures":[675,676,677,472,473,474,475,35,36,37,38,39,40,41,476,42,477,43,478,479,44,45,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500],"tindex":"0f70a78f-13a9-11e5-a115-d94db2baf6a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.size();\n} "},"status":-1},{"failures":[],"tindex":"0f70a790-13a9-11e5-a115-f5df23dc75d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet<K>(this);\n} "},"status":-2},{"failures":[391,392,393,394,395,396,397,399,401,404,405,678,679,680,436,437,438,439,440,441,442,444,446,449,450,681,682,683,35,36,38,39,40,42,43,44,45,294,295,512,296,297,298,513,299,300,301,302,684,685,686,303,304,687,305,306,307,688,308,309,310,311,689,690,691,552,553,554,555,556,557,558,560,562,565,566,692,693,694,595,596,597,598,599,600,601,603,605,608,609,695,696,697,636,637,638,639,640,641,642,644,646,649,650,698,699,700],"tindex":"0f70a791-13a9-11e5-a115-c7e476a07426","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1310","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[701,702,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,703,704,169,170,171,172,705,173,174,175,176,706,177,178],"tindex":"0f70a792-13a9-11e5-a115-a704c6b983dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2319","type":"CtIfImpl","sourcecode":"if ((int) != 1) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"hit":"end"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:236","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"status":-1},{"failures":[],"tindex":"0f70a793-13a9-11e5-a115-e5f674fd0b1d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:167","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}