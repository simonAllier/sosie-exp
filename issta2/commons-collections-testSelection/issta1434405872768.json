{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":483,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":151,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":105,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":399,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":268,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":327,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":412,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":315,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":501,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":53,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":257,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":0,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":44,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":427,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":425,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":463,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":466,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":431,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":468,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":92,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":450,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":467,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":56,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":66,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":446,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":184,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":91,"org.apache.commons.collections4.CollectionUtilsTest.get":442,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":47,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":88,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":11,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":99,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":523,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":326,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":113,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":289,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":346,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSerializeDeserializeThenCompare":401,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":484,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":424,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":393,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":237,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":275,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":224,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":498,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":337,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":211,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":255,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":464,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":465,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":294,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":192,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":215,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":178,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":396,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":329,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":101,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":214,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":131,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":161,"org.apache.commons.collections4.ListUtilsTest.testEquals":525,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":202,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":297,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":23,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":496,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":35,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":81,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":157,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":78,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":163,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":522,"org.apache.commons.collections4.CollectionUtilsTest.intersection":445,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":269,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":359,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":380,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":33,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":67,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":138,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":334,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":449,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":373,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":438,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":290,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":273,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":246,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":234,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":141,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":513,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":267,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":325,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":344,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":382,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":194,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":479,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":520,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":14,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":230,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":168,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":166,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":310,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":217,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":190,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":132,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":264,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":203,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":460,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":41,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":181,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":241,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":21,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":97,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testObjectEqualsSelf":363,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":407,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":170,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":87,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":286,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":285,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":350,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":94,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":358,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testSerializeDeserializeThenCompare":403,"org.apache.commons.collections4.trie.PatriciaTrieTest.testLastKey":473,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":343,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":457,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":433,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":64,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":482,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":115,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":7,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":90,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":144,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":414,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":25,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":18,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":302,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":51,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":133,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":102,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":167,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":516,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":227,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":240,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":277,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":226,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":206,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":332,"org.apache.commons.collections4.CollectionUtilsTest.union":444,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":182,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":242,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":262,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":296,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":333,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":434,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":200,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":38,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":430,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":392,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testSet":75,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":340,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":335,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":512,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":65,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":201,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":411,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":419,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":218,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":130,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":129,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":139,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":9,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":341,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":50,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":284,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":451,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":118,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":142,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":185,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":272,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":283,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":244,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":258,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":136,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":492,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":191,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":362,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":416,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":304,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":524,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":400,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":305,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":309,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":83,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":503,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":42,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":106,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":175,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":386,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":288,"org.apache.commons.collections4.ListUtilsTest.testSubtract":112,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":459,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":494,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":231,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":143,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":205,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":195,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":137,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":384,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":228,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":448,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":495,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":474,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":405,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":150,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":429,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":519,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":19,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":119,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":314,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":254,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":245,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":250,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":73,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":397,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":180,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":377,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":378,"org.apache.commons.collections4.TransformerUtilsTest.testSingletonPatternInSerialization":402,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":235,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":165,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":253,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":470,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testRemoveThenSet":76,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":213,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":381,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":251,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":475,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":95,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":164,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":34,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":526,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":158,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":375,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":491,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":324,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":338,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":413,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":490,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":10,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":422,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":223,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":199,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":320,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":3,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":209,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":521,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":243,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":6,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":394,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":428,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":43,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":376,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":225,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":493,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":126,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":212,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":22,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":437,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":374,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":322,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":426,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":1,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":395,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":155,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":390,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":198,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":291,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":313,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":261,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":421,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":239,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":52,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":398,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testListConstructor":72,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":485,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":292,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":188,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":127,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":383,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":183,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":282,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":518,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":331,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":160,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":287,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":236,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":357,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":84,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":98,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testConstructorPlusAdd":69,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":406,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":505,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":345,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":506,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":222,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSimpleSerialization":49,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":330,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":462,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testLastKey":472,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":504,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testArrayConstructor":68,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":455,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":45,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":328,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":502,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":5,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":80,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":104,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":420,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":60,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":342,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":270,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":436,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":456,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":146,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":312,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":124,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":517,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":306,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":280,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":389,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":260,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":172,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":93,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":266,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":367,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":173,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":354,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":208,"org.apache.commons.collections4.ListUtilsTest.testIntersectListWithSelf":418,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":387,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":15,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":193,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":293,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":415,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":351,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":276,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":471,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":156,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":281,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":216,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":300,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":108,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":232,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":365,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":96,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":439,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":2,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":321,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":100,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":301,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":453,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":454,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":233,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":366,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":379,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":303,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":391,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":58,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":162,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":148,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":432,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":116,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":441,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":114,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":159,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testSerializeDeserializeThenCompare":364,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":77,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":248,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":252,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":349,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":207,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":147,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":103,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":347,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":20,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":189,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":210,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":16,"org.apache.commons.collections4.set.CompositeSetTest.testContains":388,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":85,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":318,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":120,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":409,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":499,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":477,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":128,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":171,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":265,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":339,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":404,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":509,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":123,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":117,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":145,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":489,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":259,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":263,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":247,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":32,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":514,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":174,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":360,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEmptyMapCompatibility":46,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testUnknownObjectBehavior":71,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":507,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":508,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":478,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":13,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":8,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":152,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":89,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":249,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":488,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":107,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":486,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":59,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":511,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":368,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":481,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":39,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":311,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":447,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":452,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":37,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":295,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":487,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":256,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":82,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":204,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":24,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":86,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":220,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":515,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":63,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":408,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":219,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":40,"org.apache.commons.collections4.CollectionUtilsTest.find":111,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":140,"org.apache.commons.collections4.MapUtilsTest.testPutAll_Map_array":74,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":12,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":61,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":476,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":4,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":31,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":30,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":29,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":480,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":274,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":176,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":443,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":26,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":27,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":57,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testAddAsEqual":70,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":28,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":187,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":278,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":122,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":410,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":352,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":36,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":510,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":299,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":423,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":62,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":149,"org.apache.commons.collections4.ListUtilsTest.testIntersectNonEmptySubset":417,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":317,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":497,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":361,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":121,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":169,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":279,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":186,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":298,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":469,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":271,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":110,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":109,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":135,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":221,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":55,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":355,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":154,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":307,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":196,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":54,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":197,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":435,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":48,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":458,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":79,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":461,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":370,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":385,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":500,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":440,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":238,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":323,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":336,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":353,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":369,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":356,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":371,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":134,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":372,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":308,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":177,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":319,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":229,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":125,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":179,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":348,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":153,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":316},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"80a2a945-13aa-11e5-8132-b9cf6a46b5b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1629","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getValue()"},"variableMap":{"current":"found"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    return null;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } \n} "},"status":-1},{"failures":[46,47,48,49],"tindex":"80a2d056-13aa-11e5-8132-6356eefe3b8a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"size","lengthInBits":"size","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1420","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    K K = ((K)(java.io.ObjectInputStream.readObject()));\n    V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.put(K, V);\n}"},"status":-1},{"failures":[],"tindex":"80a2d057-13aa-11e5-8132-e7bde2db6907","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtIfImpl","sourcecode":"if ((int - int) > (int - int)) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n} else {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n}"},"status":-2},{"failures":[50,51,52,53,54,55],"tindex":"80a2f768-13aa-11e5-8132-ef99bfa4e8dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:205","type":"CtIfImpl","sourcecode":"if ((int[][(int - int)]) <= (int[][int])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n} "},"status":-1},{"failures":[56,57,58,59,60,61,62,63,64,65,66,67],"tindex":"80a2f769-13aa-11e5-8132-9134f996976c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:174","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final E E = java.util.Iterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-1},{"failures":[68,69,70,71,72],"tindex":"80a2f76a-13aa-11e5-8132-2be537b5744d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:113","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    return java.lang.Integer.intValue();\n} "},"variableMap":{"count":"position2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:231","type":"CtIfImpl","sourcecode":"if ((java.lang.Integer == null) || (java.lang.Integer == null)) {\n    switch (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) {\n        case BEFORE :\n            return java.lang.Integer == null ? java.lang.Integer == null ? 0 : -1 : 1;\n        case AFTER :\n            return java.lang.Integer == null ? java.lang.Integer == null ? 0 : 1 : -1;\n        case EXCEPTION :\n            final java.lang.Object java.lang.Object = java.lang.Integer == null ? T : T;\n            throw new java.lang.IllegalArgumentException((\"Attempting to compare unknown object \" + java.lang.Object));\n        default :\n            throw new java.lang.UnsupportedOperationException((\"Unknown unknownObjectBehavior: \" + (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)));\n    }\n} "},"status":-1},{"failures":[73],"tindex":"80a2f76b-13aa-11e5-8132-3513f182e1dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E>.size()) == 0) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"variableMap":{"collection":"transformers"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n} "},"status":-1},{"failures":[74],"tindex":"80a2f76c-13aa-11e5-8132-2d287ac146f6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:97","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.TransformedSortedMap<K, V>.clear()"},"variableMap":{"decorated":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1157","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(java.lang.Object));\n    java.util.Map<K, V>.put(org.apache.commons.collections4.KeyValue<K, V>.getKey(), org.apache.commons.collections4.KeyValue<K, V>.getValue());\n}"},"status":-1},{"failures":[],"tindex":"80a2f76d-13aa-11e5-8132-6751efacacab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:414","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n        return false;\n    } \n} else {\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":"80a31e7e-13aa-11e5-8132-ed9f5178d6a5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"The collection must not be null\");\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:204","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    boolean |= org.apache.commons.collections4.set.ListOrderedSet<E>.add(E);\n}"},"status":0},{"failures":[],"tindex":"80a31e7f-13aa-11e5-8132-75c156fcffff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:199","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return true;\n    } \n}"},"variableMap":{"composite":"key","length":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:225","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"80a31e80-13aa-11e5-8132-153e393e074d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.EditScript:106","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.sequence.EditCommand<T> org.apache.commons.collections4.sequence.EditCommand<T> : java.util.List<org.apache.commons.collections4.sequence.EditCommand<T>>) {\n    org.apache.commons.collections4.sequence.EditCommand<T>.accept(org.apache.commons.collections4.sequence.CommandVisitor<T>);\n}"},"status":-2},{"failures":[75,76],"tindex":"80a31e81-13aa-11e5-8132-8330a5618492","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:717","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\");\n} "},"variableMap":{"canRemove":"removed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:158","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"status":-1},{"failures":[],"tindex":"80a31e82-13aa-11e5-8132-eb0a16d82e32","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1589","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.FixedSizeSortedMap.fixedSizeSortedMap(java.util.SortedMap<K, V>)"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:95","type":"CtReturnImpl","sourcecode":"return ((java.util.SortedMap<K, V>)(java.util.Map<K, V>))"},"status":-2},{"failures":[],"tindex":"80a31e83-13aa-11e5-8132-9dad6c6af439","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:676","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} "},"variableMap":{"current":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:696","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"80a34594-13aa-11e5-8132-f365925c2558","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"length","modifications":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:126","type":"CtForImpl","sourcecode":"for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n    char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n}"},"status":-2},{"failures":[],"tindex":"80a34595-13aa-11e5-8132-935fbaecb30b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AnyPredicate:81","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 1) {\n    return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.Predicate<? super T>[][0]));\n} "},"variableMap":{"length":"length","preds":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:78","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n} "},"status":-2},{"failures":[77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98],"tindex":"80a34596-13aa-11e5-8132-53cb065d369a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.TransformedBag:86","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.TransformedBag<E>"},"variableMap":{"decorated":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TransformedBag:110","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.((org.apache.commons.collections4.Bag<E>)(decorated()))"},"status":-1},{"failures":[],"tindex":"80a34597-13aa-11e5-8132-af9eecae2f7a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:398","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<java.util.Map.Entry<K, V>>emptyOrderedIterator();\n} "},"status":0},{"failures":[99,100,101,102,103,104,105,106,107,108,109,110],"tindex":"80a34598-13aa-11e5-8132-f3e4750e9409","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.OnePredicate:98","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"variableMap":{"match":"previousObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:265","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"80a34599-13aa-11e5-8132-576ce1984b61","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"hashIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:583","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} else {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":0},{"failures":[],"tindex":"80a36caa-13aa-11e5-8132-4717ca0426ea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:939","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()], org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"this":"this","dataElement":"dataElement","rootNode":"rootNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1062","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":-2},{"failures":[],"tindex":"80a4570b-13aa-11e5-8132-1dad33977f97","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1419","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.EntrySet.(contains(java.lang.Object)) == false) {\n    return false;\n} "},"variableMap":{"obj":"key1","this":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:159","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"80a4570c-13aa-11e5-8132-f9b3bd58bb89","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:203","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:266","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().hashIndex(int, org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)]"},"status":-2},{"failures":[],"tindex":"80a4570d-13aa-11e5-8132-13f4d3b5dc63","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.NonePredicate:71","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n} "},"variableMap":{"length":"length","preds":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:60","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 1) {\n    return org.apache.commons.collections4.functors.FunctorUtils.org.apache.commons.collections4.functors.FunctorUtils.coerce(org.apache.commons.collections4.Predicate<? super T>[][0]);\n} "},"status":-2},{"failures":[2,3,8,9,11,12,13,14,15,16,18,21,22,32,35,44,45],"tindex":"80a4570e-13aa-11e5-8132-4373cab42009","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:231","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[111],"tindex":"80a4570f-13aa-11e5-8132-93f80161b3b7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.CloneTransformer:67","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:643","type":"CtForEachImpl","sourcecode":"for (final T T : java.lang.Iterable<T>) {\n    if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n        return T;\n    } \n}"},"status":-1},{"failures":[],"tindex":"80a45710-13aa-11e5-8132-156c0dafdcbe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.NonePredicate:71","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n} "},"variableMap":{"length":"length","preds":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:81","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 1) {\n    return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.Predicate<? super T>[][0]));\n} "},"status":-2},{"failures":[112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,83,130,85,131,132,133,134,135,136,86,87,137,138,139,140,141,142,143,94,144,96,145,146,147,148,149,150,97,98,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259],"tindex":"80a45711-13aa-11e5-8132-e5ee424eca16","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:122","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends E>.remove()"},"variableMap":{"iterator":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:275","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.add(java.util.Iterator<? extends E>.next());\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[],"tindex":"80a47e22-13aa-11e5-8132-cd114a219cd8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"i","lengthInBits":"i","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:469","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T T = ((T)(E));\n    T[][int++] = T;\n}"},"status":0},{"failures":[],"tindex":"80a4a533-13aa-11e5-8132-233d2e76bca3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:481","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n} "},"status":-2},{"failures":[],"tindex":"80a4a534-13aa-11e5-8132-01df12f5fe3b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:553","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n} else {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"80a4a535-13aa-11e5-8132-013e3a2209fb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    return ;\n} "},"variableMap":{"oldCapacity":"length","newCapacity":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:146","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<? super E>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<? super E>[][int].evaluate(E)) == true) {\n        org.apache.commons.collections4.Closure<? super E>[][int].execute(E);\n        return ;\n    } \n}"},"status":-2},{"failures":[],"tindex":"80a4a536-13aa-11e5-8132-25b9c5d43474","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1467","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == null) {\n    throw new java.lang.NullPointerException(\"The collection must not be null\");\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:138","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.List<E>.add(org.apache.commons.collections4.collection.TransformedCollection<E>.transform(E));\n}"},"status":0},{"failures":[260,261,262,263],"tindex":"80a4a537-13aa-11e5-8132-8bbfaba3255a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:874","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Collection must not be null\");\n} "},"variableMap":{"removeCollection":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:336","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    if (!(org.apache.commons.collections4.bag.HashBag<O>.remove(O, 1))) {\n        java.util.ArrayList<O>.add(O);\n    } \n}"},"status":-1},{"failures":[],"tindex":"80a4a538-13aa-11e5-8132-dd3ec55d3d53","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:888","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        } else {\n            return null;\n        }\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n    }\n} "},"status":0},{"failures":[],"tindex":"80a4a539-13aa-11e5-8132-1779bc9d7209","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"bitIndex","newCapacity":"bitIndex","proposedCapacity":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:564","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359],"tindex":"80a4a53a-13aa-11e5-8132-9335b6d49ba6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:225","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[360],"tindex":"80a4a53b-13aa-11e5-8132-67c4c2b70e1c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:676","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} "},"variableMap":{"current":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:708","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"status":-1},{"failures":[361,362],"tindex":"80a4cc4c-13aa-11e5-8132-cbede55d99f1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"nodeCount","expectedModCount":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:312","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-1},{"failures":[],"tindex":"80a4cc4d-13aa-11e5-8132-9336c228da4f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"variableMap":{"parent":"current","current":"current","right":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:460","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"80a4cc4e-13aa-11e5-8132-27e438ac0674","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:855","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"node","node":"newNode","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1284","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue(), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"80a4cc4f-13aa-11e5-8132-4bccf94290c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"80a4cc50-13aa-11e5-8132-5f610d50e2a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:212","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    } else {\n        java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n    }\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-2},{"failures":[363,364],"tindex":"80a4cc51-13aa-11e5-8132-e7d605af5c51","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} "},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:280","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"status":-1},{"failures":[105],"tindex":"80a4cc52-13aa-11e5-8132-b7d0d5913ee4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:252","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n} "},"status":-1},{"failures":[],"tindex":"80a4cc53-13aa-11e5-8132-93f478fe3efd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:297","type":"CtIfImpl","sourcecode":"if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n    return false;\n} "},"variableMap":{"composite":"composite","i":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:296","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":"80a4cc54-13aa-11e5-8132-b5b3e4aa2f5f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:251","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.updateCurrentIterator()"},"variableMap":{"this":"chain"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:151","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Set<E>.iterator());\n}"},"status":-2},{"failures":[],"tindex":"80a4f365-13aa-11e5-8132-c72012cd04a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n    break;\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:192","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    if (java.util.Set<E>.add(E)) {\n        java.util.List<E>.add(E);\n    } \n}"},"status":-2},{"failures":[],"tindex":"80a4f366-13aa-11e5-8132-e96ea76e6933","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:296","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":"80a4f367-13aa-11e5-8132-c922ad5ad5f0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(E);\n    int += int;\n    if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n        return true;\n    } \n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int += int;\n    return false;\n} "},"status":0},{"failures":[],"tindex":"80a4f368-13aa-11e5-8132-072c6d813250","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:408","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key1","next":"entry","entry":"entry","key2":"key2","hashCode":"hashCode","key3":"key2","key4":"key2","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:139","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2},{"failures":[],"tindex":"80a4f369-13aa-11e5-8132-f74370417699","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"variableMap":{"outputStream":"label"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.println(\" = \");\n} "},"status":-2},{"failures":[],"tindex":"80a4f36a-13aa-11e5-8132-112e04c6fa2b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key2","length":"hashCode","key":"key5"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:635","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"80a4f36b-13aa-11e5-8132-3554541e3d0d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:318","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove()"},"variableMap":{"it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:317","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":0},{"failures":[128,142,156,188,206,224,242],"tindex":"80a4f36c-13aa-11e5-8132-4fcfc35c3cd6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:151","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n    if (org.apache.commons.collections4.bag.AbstractMapBag<E>.(getCount(java.lang.Object)) < (org.apache.commons.collections4.Bag<?>.getCount(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[365,366,367,368,369,370,371,372,373,374,375,376],"tindex":"80a4f36d-13aa-11e5-8132-6b605d68387e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n} "},"variableMap":{"methodName":"org.apache.commons.collections4.MapUtils.INDENT_STRING"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1038","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    java.io.PrintStream.print(org.apache.commons.collections4.MapUtils.java.lang.String);\n}"},"status":-1},{"failures":[377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396],"tindex":"80a4f36e-13aa-11e5-8132-1514d7db2f7a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Set) {\n    final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(java.lang.Object));\n    return ((java.util.Set<?>.size()) == org.apache.commons.collections4.set.CompositeSet<E>.(size())) && (java.util.Set<?>.containsAll(this));\n} "},"variableMap":{"obj":"obj","this":"item"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:129","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.contains(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"80a51a7f-13aa-11e5-8132-679ed88dc17d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1301","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"variableMap":{"node":"y","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"dataElement","this":"this","newNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[],"tindex":"80a51a80-13aa-11e5-8132-e5e341a03a7a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:142","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n}"},"variableMap":{"header":"entry","after":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:214","type":"CtIfImpl","sourcecode":"if (java.util.Map.Entry<K, V> == null) {\n    return false;\n} "},"status":-2},{"failures":[314,397,398,324,399,400],"tindex":"80a51a81-13aa-11e5-8132-91f27512229d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:416","type":"CtReturnImpl","sourcecode":"return (java.lang.Object == java.lang.Object) || (java.lang.Object == null ? false : java.lang.Object.equals(java.lang.Object))"},"variableMap":{"value2":"value","value1":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:148","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n        return true;\n    } \n}"},"status":-1},{"failures":[401,402],"tindex":"80a51a82-13aa-11e5-8132-d721e3e4dcab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:279","type":"CtReturnImpl","sourcecode":"return this"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.StringValueTransformer:68","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.StringValueTransformer.org.apache.commons.collections4.Transformer<java.lang.Object, java.lang.String>"},"status":-1},{"failures":[],"tindex":"80a51a83-13aa-11e5-8132-1138e220fcd1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"current","current":"right","tree":"right","right":"previous"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:726","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[403],"tindex":"80a51a84-13aa-11e5-8132-0bd019330841","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:110","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"80a51a85-13aa-11e5-8132-3b6159d5b60f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:239","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"80a51a86-13aa-11e5-8132-e976ac1b608b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:86","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 1000 ; int++) {\n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n        break;\n    } \n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(java.util.Collection<? extends E>)).decorated();\n    } else if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n    } \n}"},"status":-2},{"failures":[404,405,406],"tindex":"80a54197-13aa-11e5-8132-730a711cd305","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"80a54198-13aa-11e5-8132-a196fa693e46","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:238","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n    throw new java.lang.UnsupportedOperationException(\"remove() is not supported on CompositeCollection without a CollectionMutator strategy\");\n} "},"status":-2},{"failures":[],"tindex":"80a54199-13aa-11e5-8132-8982cbdf8741","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:915","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"variableMap":{"currentNode":"newNode","this":"this","y":"newNode","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1301","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"status":-2},{"failures":[407,408,409,410,411,412,413,414,415,416],"tindex":"80a5419a-13aa-11e5-8132-a973a89f8fcd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:933","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"siblingNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1022","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[417,418],"tindex":"80a5419b-13aa-11e5-8132-f9db61da73e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:101","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.List<? extends E>) {\n    if (java.util.HashSet<E>.contains(E)) {\n        java.util.List<E>.add(E);\n        java.util.HashSet<E>.remove(E);\n    } \n}"},"status":-1},{"failures":[],"tindex":"80a5419c-13aa-11e5-8132-bd3d5986e1f2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:480","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : org.apache.commons.collections4.map.CompositeMap<K, V>.entrySet()) {\n    int += java.util.Map.Entry<K, V>.hashCode();\n}"},"status":0},{"failures":[],"tindex":"80a5419d-13aa-11e5-8132-2b80bbc5a417","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:312","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, K, K, K))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, V);\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"80a5419e-13aa-11e5-8132-3167483ed76d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1589","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.FixedSizeSortedMap.fixedSizeSortedMap(java.util.SortedMap<K, V>)"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedSortedMap:92","type":"CtReturnImpl","sourcecode":"return ((java.util.SortedMap<K, V>)(java.util.Map<K, V>))"},"status":-2},{"failures":[419,420,421,422,423,424,425,426,427,428,429,430],"tindex":"80a568af-13aa-11e5-8132-e35ae423dde3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:356","type":"CtIfImpl","sourcecode":"if ((java.util.BitSet.get(int)) == false) {\n    org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n} "},"status":-1},{"failures":[431,432,433,389,434,435,436,437,260,438,439,440,261,441,442,443,444,445,446],"tindex":"80a568b0-13aa-11e5-8132-5d92a0977269","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:874","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Collection must not be null\");\n} "},"variableMap":{"removeCollection":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:440","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    final java.lang.Integer java.lang.Integer = java.util.Map<O, java.lang.Integer>.get(O);\n    if (java.lang.Integer == null) {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n    } else {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n    }\n}"},"status":-1},{"failures":[0,4,5,6,8,9,11,12,13,16,18,21,22,26,27,29,30,31,35,41,42,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471],"tindex":"80a568b1-13aa-11e5-8132-fb9fdfee1e38","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1570","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"e":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:762","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[1,3,472,360,473],"tindex":"80a568b2-13aa-11e5-8132-c13fa4ba449d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"right","current":"node","tree":"right","right":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1164","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"80a568b3-13aa-11e5-8132-c9a5b38a7e1a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:476","type":"CtWhileImpl","sourcecode":"while (int < (T[].int)) {\n    T[][int++] = null;\n}"},"status":-2},{"failures":[126,128,129,137,141,474,142,143,155,156,157,173,186,188,189,201,205,475,206,207,223,224,225,237,241,476,242,243,259],"tindex":"80a568b4-13aa-11e5-8132-935831b5ddf7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:352","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>).size()) > 0) {\n    throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n} "},"variableMap":{"set":"uniqueSet","existingSet":"uniqueSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:488","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>) == null) {\n    java.util.Set<E> = org.apache.commons.collections4.set.UnmodifiableSet.<E>unmodifiableSet(java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet());\n} "},"status":-1},{"failures":[],"tindex":"80a568b5-13aa-11e5-8132-017996a29232","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1470","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> instanceof org.apache.commons.collections4.BoundedCollection) {\n    return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).isFull();\n} "},"variableMap":{"coll":"iterable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? extends C> instanceof java.util.Collection<?>) {\n    return java.util.Collection<C>.addAll(((java.util.Collection<? extends C>)(java.lang.Iterable<? extends C>)));\n} "},"status":0},{"failures":[431,432,433,389,434,435,436,437,260,438,439,440,261,441,442,443,444,445,446],"tindex":"80a568b6-13aa-11e5-8132-f93abc64d2e1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:442","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n} else {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n}"},"status":-1},{"failures":[],"tindex":"80a568b7-13aa-11e5-8132-aba8dc7f3d6a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2364","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.nextEntryInSubtree(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"subtree":"start","prior":"predecessor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1201","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-2},{"failures":[],"tindex":"80a58fc8-13aa-11e5-8132-f72367086fd0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:369","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.EntrySet()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:254","type":"CtReturnImpl","sourcecode":"return java.util.Set<K>"},"status":-2},{"failures":[],"tindex":"80a58fc9-13aa-11e5-8132-5bf59fad9ca9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object));\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Map<?, ?>.entrySet().iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return ((java.lang.Object[])(java.lang.Object))[int];\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"this":"key","i":"length","object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"status":-2},{"failures":[79,129,87,137,90,143,477,157,478,189,200,201,479,207,480,225,236,237,481,243],"tindex":"80a58fca-13aa-11e5-8132-a9503bc99429","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"result","nextCalled":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:346","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1);\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359],"tindex":"80a58fcb-13aa-11e5-8132-f79e2046cc9e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.List) == false) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:225","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"80a58fcc-13aa-11e5-8132-f1d0914d8747","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:98","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().isEmpty()"},"status":-2},{"failures":[482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521],"tindex":"80a58fcd-13aa-11e5-8132-c92161794fc2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:274","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    if (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> == null) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = new org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>();\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K = K;\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V = V;\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)++;\n        return null;\n    } \n    for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> ; org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null ; org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == K) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(K)))) {\n            final V V = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V = V;\n            return V;\n        } \n    }\n    final org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = new org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>();\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K = K;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V = V;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)++;\n}"},"status":-1},{"failures":[0,2,3,4,5,6,8,9,11,12,13,14,15,16,18,21,22,26,27,29,30,31,35,44,45],"tindex":"80a58fce-13aa-11e5-8132-33523064c668","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:82","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-1},{"failures":[407,408,410,411,412,413,414,415,416],"tindex":"80a58fcf-13aa-11e5-8132-85dabe326fc9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1126","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[522,523],"tindex":"80a58fd0-13aa-11e5-8132-f5d9711b7005","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"status":-1},{"failures":[],"tindex":"80a5b6e1-13aa-11e5-8132-8bb4ef26bfa7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:129","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.List<E>) {\n    if (!(org.apache.commons.collections4.bag.HashBag<E>.remove(E, 1))) {\n        java.util.ArrayList<E>.add(E);\n    } \n}"},"variableMap":{"list1":"collection","result":"list","bag":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:354","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    if (!(java.util.Collection<?>.contains(E))) {\n        java.util.List<E>.add(E);\n    } \n}"},"status":-2},{"failures":[524],"tindex":"80a5b6e2-13aa-11e5-8132-71cef9a0ca81","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:60","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 1) {\n    return org.apache.commons.collections4.functors.FunctorUtils.org.apache.commons.collections4.functors.FunctorUtils.coerce(org.apache.commons.collections4.Predicate<? super T>[][0]);\n} "},"status":-1},{"failures":[],"tindex":"80a5b6e3-13aa-11e5-8132-79c634cd1d1f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:556","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-2},{"failures":[525],"tindex":"80a5b6e4-13aa-11e5-8132-95a34fcb71f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtIfImpl","sourcecode":"if (((java.util.Collection<?> == null) || (java.util.Collection<?> == null)) || ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size()))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"80a5b6e5-13aa-11e5-8132-534d05d585f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) < (java.util.Collection<?>.size())) {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n} else {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n}"},"variableMap":{"coll2":"coll","coll1":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    boolean boolean = false;\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n        boolean = boolean || boolean;\n    }\n    return boolean;\n} else {\n    return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().removeAll(null);\n}"},"status":-2},{"failures":[526],"tindex":"80a5b6e6-13aa-11e5-8132-11fbcac5266d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:338","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"status":-1},{"failures":[],"tindex":"80a5b6e7-13aa-11e5-8132-a717004a2ba7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:130","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.bag.HashBag<E>.remove(E, 1))) {\n    java.util.ArrayList<E>.add(E);\n} "},"status":-2},{"failures":[],"tindex":"80a5b6e8-13aa-11e5-8132-ab8b11a1cf54","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1139","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}