{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":29,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":274,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":217,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":318,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":441,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":41,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":63,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":261,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":298,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":493,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEmptyMapCompatibility":555,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":229,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":305,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":226,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":494,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":570,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":122,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":166,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testKeySetRemoveChangesMap":521,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":244,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapHashCode":409,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":241,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":37,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":424,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFullIterator":393,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":406,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":425,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRetainAll":519,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":537,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":482,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":49,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":497,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":265,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":79,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":43,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":460,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":44,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":258,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":89,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":133,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRetainAll":531,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":272,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":557,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":75,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":260,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":97,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":309,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":378,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":33,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":491,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":69,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":240,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":203,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":492,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":362,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":68,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":172,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":334,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":502,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":578,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":315,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":465,"org.apache.commons.collections4.CollectionUtilsTest.select":211,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":76,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":206,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":62,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":263,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":213,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":451,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":346,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapRemove":513,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":496,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":145,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":157,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":13,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":174,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":51,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":14,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":433,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":432,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":301,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":369,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":46,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveChangesMap":517,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":190,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":487,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":155,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":351,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsContract":400,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":329,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":405,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":38,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":310,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveChangesMap":525,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":538,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":83,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":546,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":17,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":297,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":462,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":257,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":375,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":192,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":268,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":30,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":136,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":27,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastValues":564,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":233,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":87,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":293,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":577,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":445,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":111,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":385,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":294,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":120,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":423,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":480,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":25,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":163,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":143,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":108,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":259,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":2,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":306,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":549,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":384,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":109,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":368,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":575,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":444,"org.apache.commons.collections4.trie.PatriciaTrieTest.testLastKey":528,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":576,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":372,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":418,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":129,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":276,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":24,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":64,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapPutNullValue":511,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":147,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":140,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":352,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":224,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":214,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":175,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":278,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":466,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":112,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":107,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":327,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":180,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":58,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":440,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEmptyMapCompatibility":553,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":50,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":328,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":450,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":10,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":160,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":247,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":467,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":42,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":202,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":248,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":473,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":337,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":330,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":47,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":574,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":4,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":235,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":34,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":539,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":131,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":343,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":223,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":287,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":342,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":341,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":407,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":182,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":304,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":286,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testFirstKey":506,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":103,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":118,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastEntrySet":562,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":45,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":338,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":339,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":184,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":340,"org.apache.commons.collections4.trie.PatriciaTrieTest.testObjectHashCodeEqualsContract":428,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":169,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":56,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":55,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":532,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":54,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":66,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":251,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":479,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":353,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetIteratorRemoveChangesMap":526,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":264,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastEntrySet":571,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":292,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":354,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":119,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":252,"org.apache.commons.collections4.trie.PatriciaTrieTest.testFirstKey":527,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":325,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":164,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":218,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":196,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":308,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":420,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":548,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":171,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":332,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":194,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":404,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":364,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":82,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":246,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":141,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":71,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":40,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":442,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":435,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":187,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":188,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":489,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":434,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":191,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":26,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":156,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":168,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":100,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":98,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":115,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":35,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":256,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":300,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":335,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":569,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":5,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":500,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":28,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":132,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":560,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":238,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":388,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":398,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":125,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":128,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":204,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":245,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":73,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":165,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":61,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":470,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":144,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":469,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":271,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":254,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":242,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":123,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":205,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":23,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":448,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":540,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":481,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":547,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":316,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":544,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":459,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEmptyMapCompatibility":552,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":200,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":121,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":312,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":288,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":237,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveAll":518,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":39,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":275,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":225,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":299,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":313,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":477,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":193,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":285,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":386,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastKeySet":572,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":550,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":307,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":408,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":395,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":367,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":536,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":22,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":387,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":376,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":181,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":486,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":381,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testLastKey":507,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":311,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":415,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":344,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":167,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":262,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":401,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapHashCode":422,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":90,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":127,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":216,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":236,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":359,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll":232,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":542,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":464,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":282,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":370,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":183,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":302,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":416,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testObjectEqualsSelf":411,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":455,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":456,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":471,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":457,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":478,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":281,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":199,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":179,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":296,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapPut":509,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEmptyIterator":243,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":361,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapPutAll":512,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":317,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":116,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":345,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":373,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":197,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":19,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":137,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":314,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":565,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":65,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":88,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":283,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":355,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":85,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":277,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":490,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testKeySetRetainAll":523,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":284,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":207,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":220,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":324,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":558,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":356,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testSimpleSerialization":414,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":124,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastKeySet":563,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":253,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":67,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":212,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":349,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":543,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":110,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":514,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":515,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":516,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":189,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":77,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":201,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":208,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":389,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":266,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":472,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":114,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":397,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":32,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":185,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSimpleSerialization":402,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":326,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testFullMapCompatibility":554,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":383,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":391,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":392,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsSelfHashCode":399,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":533,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":105,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":431,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":78,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":15,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":215,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":380,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":70,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":142,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":358,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":350,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":138,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":505,"org.apache.commons.collections4.set.CompositeSetTest.testContains":198,"org.apache.commons.collections4.trie.PatriciaTrieTest.testSimpleSerialization":430,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":374,"org.apache.commons.collections4.trie.PatriciaTrieTest.testObjectHashCodeEqualsSelfHashCode":427,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":468,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveAll":530,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":250,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":57,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":86,"org.apache.commons.collections4.ListUtilsTest.testSelect":210,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":390,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":267,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":394,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":484,"org.apache.commons.collections4.trie.PatriciaTrieTest.testFullMapCompatibility":556,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":319,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":16,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":295,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":336,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":234,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":12,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":113,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":20,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":520,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":322,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":321,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":320,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":154,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":102,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":483,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicateEx1":437,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":80,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":249,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":99,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":135,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":488,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":92,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testObjectHashCodeEqualsSelfHashCode":412,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":567,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":130,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":106,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":436,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":219,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":541,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testSerializeDeserializeThenCompare":413,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":72,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":9,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":333,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":474,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":476,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":475,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":566,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":93,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":161,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":458,"org.apache.commons.collections4.trie.PatriciaTrieTest.testSerializeDeserializeThenCompare":429,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":403,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":410,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":159,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":439,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":461,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":438,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":535,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":96,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":95,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":94,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":101,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":173,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":139,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":146,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemove":230,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":59,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":3,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":209,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":270,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":269,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":21,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":449,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":162,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":176,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":178,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":561,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":186,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":134,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":104,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":11,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":499,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":504,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":366,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":126,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":453,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":454,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":153,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":152,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":452,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":495,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":151,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapPutNullKey":510,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":117,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":148,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":231,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":149,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":150,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":503,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":48,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapClear":417,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":447,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":279,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testKeySetIteratorRemoveChangesMap":524,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":273,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":60,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":357,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":396,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":6,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":158,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":7,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":8,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":421,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":545,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":36,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":348,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":463,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":239,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":74,"org.apache.commons.collections4.map.LRUMapTest.testLRU":289,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":1,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testHashCode":551,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":280,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":347,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":426,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":303,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":222,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":534,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":221,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":379,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":443,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testKeySetRemoveAll":522,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":377,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":446,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":228,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":363,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetClearChangesMap":529,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":170,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":290,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":84,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":227,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":498,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":31,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":419,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":323,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":485,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":18,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":195,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":559,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":91,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":81,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":255,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":331,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":360,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":365,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapClear":508,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":291,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":501,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":177,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":382,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastValues":573,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":568,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":371},"transformations":[{"failures":[0,1],"tindex":"d5b14903-13d7-11e5-afa0-9bd6c6cf7727","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:312","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-1},{"failures":[2,3,4,5],"tindex":"d5ba22a4-13d7-11e5-afa0-cfa5812abf60","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:995","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1182","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"d5ba49b5-13d7-11e5-afa0-dd8b9cac4d3c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:314","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"variableMap":{"node":"node","it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-2},{"failures":[],"tindex":"d5ba49b6-13d7-11e5-afa0-1924cb6a9e82","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:467","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"status":-2},{"failures":[],"tindex":"d5ba70c7-13d7-11e5-afa0-073d29281ca7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:215","type":"CtIfImpl","sourcecode":"if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n    int[][int] = (int[][(int + 1)]) - 1;\n} else {\n    int[][int] = int[][(int - 1)];\n}"},"variableMap":{"vUp":"obj","d":"length","delta":"length","i":"length","k":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map.Entry) {\n    for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n        final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(java.lang.Object));\n        java.util.Map<K, V>.put(java.util.Map.Entry<K, V>.getKey(), java.util.Map.Entry<K, V>.getValue());\n    }\n} else if (java.lang.Object instanceof org.apache.commons.collections4.KeyValue) {\n    for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n        final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(java.lang.Object));\n        java.util.Map<K, V>.put(org.apache.commons.collections4.KeyValue<K, V>.getKey(), org.apache.commons.collections4.KeyValue<K, V>.getValue());\n    }\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n        final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(java.lang.Object[][int]));\n        if ((java.lang.Object[] == null) || ((java.lang.Object[].int) < 2)) {\n            throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + int));\n        } \n        java.util.Map<K, V>.put(((K)(java.lang.Object[][0])), ((V)(java.lang.Object[][1])));\n    }\n} else {\n    for (int int = 0 ; int < ((java.lang.Object[].int) - 1) ; ) {\n        java.util.Map<K, V>.put(((K)(java.lang.Object[][int++])), ((V)(java.lang.Object[][int++])));\n    }\n}"},"status":-2},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17],"tindex":"d5ba70c8-13d7-11e5-afa0-ddd6c3307475","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"remove() cannot be called\");\n} "},"variableMap":{"nextObjectSet":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:163","type":"CtIfImpl","sourcecode":"if (E instanceof java.util.Iterator) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)));\n} else {\n    E = E;\n    boolean = true;\n}"},"status":-1},{"failures":[],"tindex":"d5ba97d9-13d7-11e5-afa0-757ec2dd3c50","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:919","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry());\n} else {\n    return null;\n}"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:748","type":"CtIfImpl","sourcecode":"if (java.util.AbstractMap<K, V>.isEmpty()) {\n    return null;\n} "},"status":-2},{"failures":[0,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,2,45,46,47,3,48,49,50,51,52,53,54,55,56,57,58,59,60,4,61,62,63,5,64,65,66,67,68,1,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108],"tindex":"d5ba97da-13d7-11e5-afa0-83b5698a0970","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"cmp","index":"cmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:505","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-1},{"failures":[109,110,111,112,113,114,115,116,117,118,119],"tindex":"d5c03d2b-13d7-11e5-afa0-07b5fd57bfa5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"variableMap":{"lastItemIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:520","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E E = ((E)(java.io.ObjectInputStream.readObject()));\n    final int int = java.io.ObjectInputStream.readInt();\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    int += int;\n}"},"status":-1},{"failures":[120,121],"tindex":"d5c03d2c-13d7-11e5-afa0-3df727c54147","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:320","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"variableMap":{"mapSize":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:399","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)).purge(java.lang.ref.Reference<?>)) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n        (this.int)--;\n        return ;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167],"tindex":"d5c0643d-13d7-11e5-afa0-59ea25e800f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:88","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"allNull","beforeFirst":"allNull"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:99","type":"CtIfImpl","sourcecode":"if (char != 0) {\n    boolean = false;\n} "},"status":-1},{"failures":[],"tindex":"d5c0643e-13d7-11e5-afa0-e5f3cf0e1eaa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n        if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n            return true;\n        } \n    }\n} else {\n    for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n            return true;\n        } \n    }\n}"},"variableMap":{"this":"this","header":"entry","after":"entry","value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:225","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"d5c08b4f-13d7-11e5-afa0-0f4288d32c17","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:553","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n} else {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"d5c0b260-13d7-11e5-afa0-914aaaff1fed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"hash","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:324","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n    if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    } else {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n    (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n    return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n} "},"status":-2},{"failures":[2,3,60,4,63,5,64,65,66],"tindex":"d5c0b261-13d7-11e5-afa0-0964a77dce9d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1140","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"d5c60992-13d7-11e5-afa0-65a4917c676a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"composite","length":"length","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"status":-2},{"failures":[],"tindex":"d5c60993-13d7-11e5-afa0-05bd3cfb21c3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:138","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Closure<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Closure<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + int) + \" was null\"));\n    } \n}"},"variableMap":{"closures":"key4","length":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[144,157,163,164],"tindex":"d5c8efc4-13d7-11e5-afa0-156352a82f32","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:564","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[168],"tindex":"d5c8efc5-13d7-11e5-afa0-61fcf4be639e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:340","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>)"},"status":-1},{"failures":[123,124,125,122,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167],"tindex":"d5c916d6-13d7-11e5-afa0-7b551d39b344","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:153","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"slotFilled":"allNull"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:99","type":"CtIfImpl","sourcecode":"if (char != 0) {\n    boolean = false;\n} "},"status":-1},{"failures":[],"tindex":"d5c916d7-13d7-11e5-afa0-7fad01c22841","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:515","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.size()) != (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.size())) {\n    return false;\n} "},"variableMap":{"helper":"helper","cardinalityB":"cardinalityA","cardinalityA":"cardinalityA"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:518","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.keySet()) {\n    if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) != (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-2},{"failures":[169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186],"tindex":"d5c916d8-13d7-11e5-afa0-e5c938173789","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:469","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T T = ((T)(E));\n    T[][int++] = T;\n}"},"status":-1},{"failures":[187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206],"tindex":"d5c916d9-13d7-11e5-afa0-c30fa29ad63a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:129","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.contains(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"d5c916da-13d7-11e5-afa0-8557a0c6e5dc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"k","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:190","type":"CtIfImpl","sourcecode":"if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n    int[][int] = int[][(int + 1)];\n} else {\n    int[][int] = (int[][(int - 1)]) + 1;\n}"},"status":-2},{"failures":[],"tindex":"d5c93deb-13d7-11e5-afa0-db28648e7a46","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtIfImpl","sourcecode":"if ((java.util.List<? extends E>.size()) > (java.util.List<? extends E>.size())) {\n    java.util.List<? extends E> = java.util.List<? extends E>;\n    java.util.List<? extends E> = java.util.List<? extends E>;\n} "},"variableMap":{"list1":"b","larger":"b","smaller":"b","list2":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:331","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    if (org.apache.commons.collections4.Predicate<O>.evaluate(O)) {\n        org.apache.commons.collections4.bag.HashBag<O>.add(O);\n    } \n}"},"status":-2},{"failures":[207,208,209],"tindex":"d5c93dec-13d7-11e5-afa0-372a54f3c529","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:245","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsValue(java.lang.Object);\n} "},"status":-1},{"failures":[210,211],"tindex":"d5c93ded-13d7-11e5-afa0-f1618cd9b115","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:923","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<? extends O> != null) && (org.apache.commons.collections4.Predicate<? super O> != null)) {\n    for (final O O : java.lang.Iterable<? extends O>) {\n        if (org.apache.commons.collections4.Predicate<? super O>.evaluate(O)) {\n            R.add(O);\n        } \n    }\n} "},"status":-1},{"failures":[212,213,214,215,216,217,218,219,220,221,222],"tindex":"d5c93dee-13d7-11e5-afa0-b151bc7abec2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:75","type":"CtReturnImpl","sourcecode":"return (boolean) && (!(boolean))"},"variableMap":{"removed":"nextObjectSet","beforeFirst":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:233","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"d5c93def-13d7-11e5-afa0-63c48b7ce151","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1808","type":"CtReturnImpl","sourcecode":"return int >= 0"},"variableMap":{"ret":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:297","type":"CtIfImpl","sourcecode":"if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n    return false;\n} "},"status":0},{"failures":[223,224,225,226,227,228],"tindex":"d5c93df0-13d7-11e5-afa0-a5759c9c1030","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:174","type":"CtIfImpl","sourcecode":"if ((int == 0) || (int == 0)) {\n    return null;\n} "},"variableMap":{"m":"delta","n":"k"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtIfImpl","sourcecode":"if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n    if ((int[][(int - int)]) <= (int[][int])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[229,230,231,232,233,234],"tindex":"d5c96501-13d7-11e5-afa0-8b08edc85599","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1056","type":"CtReturnImpl","sourcecode":"return (this.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) == org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength"},"variableMap":{"keyType":"obj","type":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:134","type":"CtIfImpl","sourcecode":"if (java.util.Collection<E>.contains(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"d5c96502-13d7-11e5-afa0-d971aab03d5f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:868","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"currentNode","node":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1019","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n    }\n}"},"status":-2},{"failures":[235,236,237,238,239,240,241,242,243,244,245,246,247],"tindex":"d5ce4703-13d7-11e5-afa0-e9a83d18e2f2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:295","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<E>) == null) {\n    java.util.ArrayList<E> = new java.util.ArrayList<E>(java.util.ArrayList<java.util.Iterator<? extends E>>.size());\n    java.util.BitSet = new java.util.BitSet(java.util.ArrayList<java.util.Iterator<? extends E>>.size());\n    for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n        java.util.ArrayList<E>.add(null);\n        java.util.BitSet.clear(int);\n    }\n} "},"status":-1},{"failures":[248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,168,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,207,349,350,351,352,208,353,354,209,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384],"tindex":"d5ce4704-13d7-11e5-afa0-47eb489ff37e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1294","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.init()"},"variableMap":{"cloned":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:642","type":"CtDoImpl","sourcecode":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null )"},"status":-1},{"failures":[],"tindex":"d5ce6e15-13d7-11e5-afa0-876d863289c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"index","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:344","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    return V;\n} "},"status":-2},{"failures":[385,386],"tindex":"d5ce6e16-13d7-11e5-afa0-13384d02929f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:306","type":"CtOperatorAssignmentImpl","sourcecode":"boolean |= java.util.Collection<E>.retainAll(java.util.Collection<?>)"},"status":-1},{"failures":[122,126,127,128,130,131,133,134,135,137,138,140,143,144,148,149,150,151,152,153,154,157,161,163,164,165,166,167],"tindex":"d5ce6e17-13d7-11e5-afa0-433e360c0f1b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:762","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"d5ce6e18-13d7-11e5-afa0-c77f4a8d6bb0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:345","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValues<V>(this);\n} "},"status":-2},{"failures":[223,224,225,226,227,228],"tindex":"d5ce6e19-13d7-11e5-afa0-974617ce8177","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:174","type":"CtIfImpl","sourcecode":"if ((int == 0) || (int == 0)) {\n    return null;\n} "},"variableMap":{"m":"start2","n":"end1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:184","type":"CtForImpl","sourcecode":"for (int int = 0 ; int <= int ; ++int) {\n    for (int int = -int ; int <= int ; int += 2) {\n        final int int = int + int;\n        if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n            int[][int] = int[][(int + 1)];\n        } else {\n            int[][int] = (int[][(int - 1)]) + 1;\n        }\n        int int = int[][int];\n        int int = ((int - int) + int) - int;\n        while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            int[][int] = ++int;\n            ++int;\n        }\n        if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n            if ((int[][(int - int)]) <= (int[][int])) {\n                return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n            } \n        } \n    }\n    for (int int = int - int ; int <= (int + int) ; int += 2) {\n        final int int = (int + int) - int;\n        if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n            int[][int] = (int[][(int + 1)]) - 1;\n        } else {\n            int[][int] = int[][(int - 1)];\n        }\n        int int = (int[][int]) - 1;\n        int int = ((int - int) + int) - int;\n        while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            int[][int] = int--;\n            int--;\n        }\n        if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n            if ((int[][int]) <= (int[][(int + int)])) {\n                return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n            } \n        } \n    }\n}"},"status":-1},{"failures":[387,388,389,390,391,392,393],"tindex":"d5ce952a-13d7-11e5-afa0-4b8e2bba8832","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.TransformIterator:90","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends I>.remove()"},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:85","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    boolean = true;\n} "},"status":-1},{"failures":[394,395,396],"tindex":"d5ce952b-13d7-11e5-afa0-75456ad98ab2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:136","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.PeekingIterator<E>.(hasNext())) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:258","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    java.util.Iterator<E>.next();\n    java.util.Iterator<E>.remove();\n}"},"status":-1},{"failures":[],"tindex":"d5ce952c-13d7-11e5-afa0-03aa101ef605","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[223,224,225,226,227,228],"tindex":"d5ce952d-13d7-11e5-afa0-cfd7b0a193ab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:206","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int)"},"variableMap":{"vUp":"vUp","start1":"start1","delta":"offset","end2":"offset","this":"this","i":"d","end1":"d","k":"delta","start2":"start1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:212","type":"CtForImpl","sourcecode":"for (int int = int - int ; int <= (int + int) ; int += 2) {\n    final int int = (int + int) - int;\n    if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n        int[][int] = (int[][(int + 1)]) - 1;\n    } else {\n        int[][int] = int[][(int - 1)];\n    }\n    int int = (int[][int]) - 1;\n    int int = ((int - int) + int) - int;\n    while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = int--;\n        int--;\n    }\n    if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n        if ((int[][int]) <= (int[][(int + int)])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"d5ce952e-13d7-11e5-afa0-cff548fb5648","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hash1","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:149","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return V;\n        } \n    case 2 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return V;\n        } \n    case 1 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return V;\n        } \n}"},"status":-2},{"failures":[397,398],"tindex":"d5cebc3f-13d7-11e5-afa0-cf2d9f924da8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"count","expectedModCount":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:614","type":"CtIfImpl","sourcecode":"if (O == null) {\n    for (final java.lang.Object java.lang.Object : java.lang.Iterable<? super O>) {\n        if (java.lang.Object == null) {\n            int++;\n        } \n    }\n} else {\n    for (final java.lang.Object java.lang.Object : java.lang.Iterable<? super O>) {\n        if (O.equals(java.lang.Object)) {\n            int++;\n        } \n    }\n}"},"status":-1},{"failures":[130,131,132,133,134,135,136,137,138,144,154,157,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430],"tindex":"d5cebc40-13d7-11e5-afa0-4d5b57aabae9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:748","type":"CtIfImpl","sourcecode":"if (java.util.AbstractMap<K, V>.isEmpty()) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"d5cebc41-13d7-11e5-afa0-73354966aa63","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:177","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    this.java.util.Map<K, V>[][int].clear();\n}"},"status":-2},{"failures":[],"tindex":"d5cebc42-13d7-11e5-afa0-6b8a7a393255","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:152","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:436","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        java.lang.Object[][int++] = E;\n    }\n}"},"status":-2},{"failures":[431,432,433,434,435,436],"tindex":"d5cebc43-13d7-11e5-afa0-75b1c0313245","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:397","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    return true;\n} "},"variableMap":{"iterator":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:94","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[437],"tindex":"d5cebc44-13d7-11e5-afa0-7b6089017f98","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"d5cee355-13d7-11e5-afa0-19ff3448d760","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Closure<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"d5cee356-13d7-11e5-afa0-052cd49c475b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:114","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.((java.util.List<E>)(decorated()))"},"status":-2},{"failures":[21,26,28,29,31,32,33,2,3,54,55,57,60,4,63,5,64,65,66],"tindex":"d5cee357-13d7-11e5-afa0-113efb4ee38e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:827","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"node":"deletedNode","rightChild":"replacement","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:959","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            }\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":-1},{"failures":[438,439,440,441,442,443,444,346,347,445,348,207,349,350,351,352,446,208,447,448,353,354,449,450,451,452,453,454,455,456,457,458,459,460,209,461,462,463,464,465,466,467,468],"tindex":"d5d43a88-13d7-11e5-afa0-d156b32bab13","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"size","modifications":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:398","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 2 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 1 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":-1},{"failures":[],"tindex":"d5d43a89-13d7-11e5-afa0-93a1150cc10c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hash","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:319","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            } else {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            }\n            (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n            return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"d5d4619a-13d7-11e5-afa0-0d6177f3ad0b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:345","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValues<V>(this);\n} "},"status":-2},{"failures":[469,470,471,472,473,474,475,476,477,478,479,189,385,480,195],"tindex":"d5d4619b-13d7-11e5-afa0-256dc99b207e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1394","type":"CtReturnImpl","sourcecode":"return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false"},"variableMap":{"object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:200","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"d5d4619c-13d7-11e5-afa0-156acbfe65d1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:810","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>(this);\n} "},"variableMap":{"entrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:319","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntrySet<K, V>(this);\n} "},"status":0},{"failures":[124,125,130,131,133,134,135,136,138,140,143,144,158,162,163,164,403,404,405,406,407,408,410,481,482,483,484,415,416,418,419,420,421,423,485,486,424,487,488,489,490],"tindex":"d5d4619d-13d7-11e5-afa0-91fb2bcb9dd6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:115","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"d5d4619e-13d7-11e5-afa0-c784ce4a8124","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2062","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(java.lang.Object)"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:160","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"d5d4619f-13d7-11e5-afa0-dbbb4c94522d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:220","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[268,273,491,276,492,280,285,493,288,297,302,494,305,495,309,313,496,316,330,335,497,344,207,208,458,209],"tindex":"d5d488b0-13d7-11e5-afa0-37f48a1388fc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:246","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsValue(java.lang.Object)"},"variableMap":{"delegateMap":"this","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:254","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[124],"tindex":"d5d488b1-13d7-11e5-afa0-37c2fa8151b7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:797","type":"CtIfImpl","sourcecode":"if (K == null) {\n    throw new java.lang.NullPointerException();\n} "},"status":-1},{"failures":[],"tindex":"d5d488b2-13d7-11e5-afa0-b5f2fbf463cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:456","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? java.lang.Object : ((java.lang.ref.Reference<K>)(java.lang.Object)).get()"},"variableMap":{"key2":"key","org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.HARD":"key","keyType":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:496","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object = K"},"status":-2},{"failures":[],"tindex":"d5d488b3-13d7-11e5-afa0-75753505c293","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1603","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return org.apache.commons.collections4.IteratorUtils.toList(java.util.Iterator<O>, int);\n} else {\n    final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>(int);\n    O O = null;\n    while (java.util.Iterator<O>.hasNext()) {\n        final O O = java.util.Iterator<O>.next();\n        if ((O == null) || (!(O.equals(O)))) {\n            java.util.ArrayList<O>.add(O);\n        } \n        O = O;\n    }\n    java.util.ArrayList<O>.trimToSize();\n    return java.util.ArrayList<O>;\n}"},"status":-2},{"failures":[498,499],"tindex":"d5d488b4-13d7-11e5-afa0-af7aa8a1d355","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OnePredicate:96","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.Predicate<? super T> org.apache.commons.collections4.Predicate<? super T> : org.apache.commons.collections4.Predicate<? super T>[]) {\n    if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n        if (boolean) {\n            return false;\n        } \n        boolean = true;\n    } \n}"},"status":-1},{"failures":[500,501,502,503,504,505],"tindex":"d5d4afc5-13d7-11e5-afa0-43144b801ed6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:199","type":"CtForEachImpl","sourcecode":"for (final C C : org.apache.commons.collections4.collection.AbstractCollectionDecorator<C>.decorated()) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C);\n}"},"status":-1},{"failures":[],"tindex":"d5d4afc6-13d7-11e5-afa0-41b5bed47849","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:505","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"d5d4afc7-13d7-11e5-afa0-6b140d11c692","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:614","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int)"},"variableMap":{"newCapacity":"size","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    final int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) * 2;\n    if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n    } \n} "},"status":0},{"failures":[],"tindex":"d5d4afc8-13d7-11e5-afa0-6925579652d9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:96","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> != null) {\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} else {\n    boolean = true;\n}"},"status":-2},{"failures":[127,128,130,131,132,133,134,135,136,138,140,143,144,146,158,159,160,161,506,507,403,404,508,405,406,407,408,409,410,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,481,482,526,527,528,415,416,417,418,419,420,421,423,485,486,424,529,487,530,531,532],"tindex":"d5d4afc9-13d7-11e5-afa0-ef221d76f1c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:399","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet();\n} "},"status":-1},{"failures":[2],"tindex":"d5d4afca-13d7-11e5-afa0-8574ac3b8660","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:827","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"d5d4d6db-13d7-11e5-afa0-0ded2ee8f490","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:480","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key2","next":"entry","entry":"entry","key2":"key3","previous":"entry","hashCode":"hashCode","key3":"key4","key4":"key3","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:409","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2},{"failures":[],"tindex":"d5d4d6dc-13d7-11e5-afa0-9fe73c3c3e87","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"size","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n} else {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[533,534,535,536],"tindex":"d5d4d6dd-13d7-11e5-afa0-47d5a1168848","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:99","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>.isSetValueChecking()) {\n    return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this);\n} "},"status":-1},{"failures":[537,538,539,540,541,542,543,544,545],"tindex":"d5d4d6de-13d7-11e5-afa0-2d23d46f7196","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:190","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.SingletonMap<K, V>.isEqualKey(java.lang.Object)) {\n    return V;\n} "},"status":-1},{"failures":[19,20,45,46,70,71],"tindex":"d5d4fdef-13d7-11e5-afa0-7b152e2cf745","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    throw new java.lang.NullPointerException((org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement + \" cannot be null\"));\n} "},"status":-1},{"failures":[546,270,495,547,311],"tindex":"d5d4fdf0-13d7-11e5-afa0-eb30c611517d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:245","type":"CtIfImpl","sourcecode":"if (java.util.Map.Entry<K, V> == null) {\n    return null;\n} "},"status":-1},{"failures":[548,549],"tindex":"d5d4fdf1-13d7-11e5-afa0-0dbcc2e74fc7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.SwitchClosure:149","type":"CtReturnImpl","sourcecode":"return "},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:147","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super E>[][int].evaluate(E)) == true) {\n    org.apache.commons.collections4.Closure<? super E>[][int].execute(E);\n    return ;\n} "},"status":-1},{"failures":[0,19,35,36,38,39,40,42,43,2,47,3,60,64,65,1,70,80,81,83,84,85,87,88],"tindex":"d5d4fdf2-13d7-11e5-afa0-776353fb9a71","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:615","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"parent":"rval","dataElement":"dataElement","child":"rval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:684","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[317,318,550,168,551],"tindex":"d5d4fdf3-13d7-11e5-afa0-ede196020955","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"d5d4fdf4-13d7-11e5-afa0-97cba7d79884","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse = new org.apache.commons.collections4.bidimap.TreeBidiMap.Inverse();\n} "},"status":-2},{"failures":[21,26,28,29,31,32,33,2,3,54,55,57,60,4,63,5,64,65,66],"tindex":"d5d52505-13d7-11e5-afa0-ef4c127128a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"replacement","leftChild":"replacement","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:959","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            }\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":-1},{"failures":[552,139,401,402,553,554,413,414,555,556,429,430],"tindex":"d5d5c146-13d7-11e5-afa0-dd93e0cb234a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1664","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"previous":"root","e":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2403","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(null , null , -1)"},"status":-1},{"failures":[457],"tindex":"d5d5c147-13d7-11e5-afa0-51352c0cd661","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"status":-1},{"failures":[],"tindex":"d5d5c148-13d7-11e5-afa0-693ecd946cbf","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1062","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"variableMap":{"siblingNode":"deletedNode","currentNode":"deletedNode","this":"this","dataElement":"dataElement","rootNode":"rootNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:980","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[],"tindex":"d5e79b99-13d7-11e5-afa0-3f5431c698ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"hash1","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:147","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = java.lang.Object.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n        case 2 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n        case 1 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n    }\n} "},"status":-2},{"failures":[557,558,559,560,289,290,293,323],"tindex":"d5e79b9a-13d7-11e5-afa0-99c9433ab4ec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:180","type":"CtLocalVariableImpl","sourcecode":"final int int = ((int % 2) == 0 ? int : int + 1) / 2"},"variableMap":{"sum":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:302","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)"},"status":-1},{"failures":[2,3,4,5],"tindex":"d5e79b9b-13d7-11e5-afa0-ab9d5e9b3b61","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:967","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"y","replacement":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1184","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"status":-1},{"failures":[561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577],"tindex":"d5eb6c2c-13d7-11e5-afa0-614ce40d3f8f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:268","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsKey(java.lang.Object)) {\n    V = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().remove(java.lang.Object);\n    java.util.List<K>.remove(java.lang.Object);\n} "},"status":-1},{"failures":[],"tindex":"d5eb6c2d-13d7-11e5-afa0-d184cf13dd31","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n} else {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n    (int)++;\n    for (int int = int - 1 ; int >= 0 ; int--) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n            do {\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n        } \n    }\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n}"},"status":0},{"failures":[125,144,154,157,161,163,164,165,166],"tindex":"d5ef15ae-13d7-11e5-afa0-3bbad19098c8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:216","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"d5ef15af-13d7-11e5-afa0-77dc0860ea4b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:756","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyMapIterator.<K,V>emptyMapIterator();\n} "},"status":0},{"failures":[],"tindex":"d5ef15b0-13d7-11e5-afa0-8b12e99e36ca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:415","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[],"tindex":"d5ef15b1-13d7-11e5-afa0-0f46beb3f48c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:967","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"child","replacement":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:615","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[578,548,549],"tindex":"d5ef3cc2-13d7-11e5-afa0-25e6282cf947","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.ChainedClosure:80","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Closure<? super E>[])"},"variableMap":{"cmds":"closures"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Closure<?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The closure array must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"d5ef3cc3-13d7-11e5-afa0-375efec3f03c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtIfImpl","sourcecode":"if ((java.lang.CharSequence == null) || (java.lang.CharSequence == null)) {\n    throw new java.lang.IllegalArgumentException(\"CharSequence must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"d5ef3cc4-13d7-11e5-afa0-798ebe8c6036","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:245","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"variableMap":{"entry":"next","size":"index","before":"entry","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:401","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} else {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[498,499],"tindex":"d5ef3cc5-13d7-11e5-afa0-0bb72afcfdf3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OnePredicate:98","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"status":-1},{"failures":[20,60,63,64,65,66,71],"tindex":"d5ef3cc6-13d7-11e5-afa0-5529ff1a36dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:853","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"parent","leftChild":"child","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:649","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}