{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":554,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":511,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":786,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":230,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":97,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":165,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":591,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":301,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx1":752,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":753,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":754,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":19,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":54,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":48,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":421,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":439,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":8,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":379,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":822,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":526,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":562,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":410,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":539,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":311,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":58,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":359,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":609,"org.apache.commons.collections4.CollectionUtilsTest.get":304,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":318,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":473,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":619,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":28,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":139,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":605,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":627,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":558,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":599,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":768,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":779,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":597,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":681,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":92,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":724,"org.apache.commons.collections4.CollectionUtilsTest.testSize_PrimitiveArray":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":590,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":167,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":147,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":470,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":794,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":81,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":327,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":56,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":42,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":696,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":745,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":572,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":415,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":728,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":320,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":175,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":533,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":104,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":105,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":113,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":563,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":246,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":613,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":96,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":59,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":555,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":47,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Other":6,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":31,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":617,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":265,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":682,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":464,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":35,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":509,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":570,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsContract":435,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":718,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":109,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":299,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":502,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":463,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":446,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":133,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":134,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":258,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":322,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":294,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":436,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":792,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":394,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":492,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":668,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":201,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":202,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":200,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":125,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":290,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":478,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":637,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":454,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":585,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testObjectEqualsSelf":639,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":309,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":455,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":469,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":372,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":43,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":671,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":181,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":176,"org.apache.commons.collections4.comparators.ComparatorChainTest.testBadListComparatorChain":424,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":488,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":242,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":714,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":588,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":773,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":373,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":422,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":666,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":132,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":300,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":535,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":80,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":633,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":571,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":182,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":183,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":680,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":286,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":495,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":722,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":595,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":158,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":236,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":762,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":264,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":808,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":824,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":282,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":340,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":437,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":734,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":61,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":674,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":389,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":284,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":498,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":732,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":783,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":508,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":612,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":417,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":145,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":601,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsContract":429,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":231,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":551,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":333,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":630,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":750,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":628,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":356,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":560,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":162,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":553,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":323,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":386,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":376,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":447,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":155,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":154,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":766,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":25,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":445,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetIteratorRemoveChangesMap":689,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":55,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":767,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":708,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":15,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":665,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":36,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":160,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":380,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":321,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":723,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":467,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":548,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":267,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":653,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":291,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":252,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":472,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":758,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":823,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":260,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":457,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":458,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":375,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":456,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":197,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":443,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":731,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":720,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":69,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":673,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":481,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":110,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":227,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":510,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":207,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":791,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":295,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":400,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":114,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":319,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":659,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":413,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":24,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":219,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":374,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":256,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":364,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":433,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":99,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":518,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":504,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":807,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":790,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":95,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":10,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":121,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":221,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":122,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":123,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":735,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":32,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":544,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":618,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":215,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":257,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":615,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":124,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":530,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":68,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":172,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":64,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":787,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":84,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":713,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":715,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":216,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiPut":385,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":20,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":351,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":407,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":816,"org.apache.commons.collections4.SetUtilsTest.testHashCode":353,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":802,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":235,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":717,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":169,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":168,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":344,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":557,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":266,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":106,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":283,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":812,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":442,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":608,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":326,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":781,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":480,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":616,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":485,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":276,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":180,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":545,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":119,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":120,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":251,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":279,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":278,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":277,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":331,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":432,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetIteratorRemoveChangesMap":709,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":632,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":45,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":138,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":662,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":819,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":186,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":765,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":26,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":636,"org.apache.commons.collections4.keyvalue.DefaultMapEntryTest.testAccessorsAndMutators":649,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":363,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEqualsAfterSerialization":540,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":285,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":337,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":471,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":623,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":335,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":357,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":829,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":289,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":664,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":626,"org.apache.commons.collections4.keyvalue.DefaultMapEntryTest.testConstructors":648,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":625,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":624,"org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest.testEqualsAndHashCode":647,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":324,"org.apache.commons.collections4.keyvalue.DefaultMapEntryTest.testEqualsAndHashCode":650,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":496,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":239,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":700,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":468,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":418,"org.apache.commons.collections4.MapUtilsTest.testPutAll_Map_array":644,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":29,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":634,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":756,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":140,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEqualsNull":642,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":226,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":737,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":486,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":41,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":40,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":39,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":343,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveChangesMap":660,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":195,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":217,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":268,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":71,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":522,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":312,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":83,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":476,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":377,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":366,"org.apache.commons.collections4.map.LRUMapTest.testLRU":261,"org.apache.commons.collections4.map.ListOrderedMapTest.testPreviousKey":426,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":393,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":487,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":831,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":100,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":209,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":392,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":65,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":494,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":778,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":827,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":514,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":678,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":796,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":556,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":520,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":428,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":543,"org.apache.commons.collections4.map.Flat3MapTest.testToString":449,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":621,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":611,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":759,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":347,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":493,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":151,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":255,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":828,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":7,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":513,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":314,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":775,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":776,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":196,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":274,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":271,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":566,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":701,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testEqualsNull":640,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":146,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":686,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":247,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":397,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":830,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":22,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":679,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":381,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":534,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":360,"org.apache.commons.collections4.comparators.ComparatorChainTest.testBadNoopComparatorChain":423,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":576,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":188,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":568,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":785,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":440,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":569,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":269,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":194,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":450,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":164,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":451,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":814,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":818,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":112,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":208,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":378,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":721,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":75,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":222,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":178,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":687,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":118,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":431,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":606,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":810,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":411,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":241,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":396,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorOrder":657,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":483,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":579,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":771,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":815,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":580,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveChangesMap":688,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":578,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":98,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":751,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":229,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":527,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":234,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":332,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":367,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":675,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":499,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":348,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":11,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":67,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":448,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":475,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetRemoveChangesMap":705,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":163,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":313,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":206,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":730,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetIteratorRemoveChangesMap":706,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":191,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetIteratorRemoveChangesMap":692,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":736,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":552,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":402,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":690,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":444,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":93,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":491,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":187,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":523,"org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest.testConstructors":645,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":550,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":339,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":800,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":135,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":716,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":638,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":656,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":497,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":259,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":136,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":430,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":214,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":305,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":228,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":425,"org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testConstructors":651,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":358,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":204,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":669,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":519,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":141,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":369,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":549,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":593,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":703,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":329,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":34,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":86,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveChangesMap":655,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":46,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":813,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":9,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":798,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":173,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":74,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":746,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":174,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":399,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":577,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":460,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":336,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":461,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":479,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":567,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":719,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":316,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":573,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":685,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":370,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":16,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":199,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":198,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":383,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":459,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":559,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":770,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":293,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":500,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":27,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":287,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":185,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":184,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Iterator":4,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":391,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":101,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":131,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":405,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":694,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":811,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":310,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":49,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":253,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":398,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":420,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":684,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":542,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":583,"org.apache.commons.collections4.map.ListOrderedMap2Test.testPreviousKey":427,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":582,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":581,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":441,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":272,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":409,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":354,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":87,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":489,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":111,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":521,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals":541,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":298,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":774,"org.apache.commons.collections4.TransformerUtilsTest.testExceptionTransformer":342,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":532,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":412,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":667,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":224,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":806,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":371,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":325,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":565,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":820,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":254,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":529,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":729,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":308,"org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testAccessorsAndMutators":652,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Array":5,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Map":3,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":275,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiPut":384,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":782,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":484,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":352,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":726,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":799,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":350,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":757,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":156,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":179,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":244,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":592,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":817,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":805,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":21,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":382,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":307,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":603,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":341,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":345,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":72,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":589,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":349,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":292,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":462,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":795,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":388,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":538,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":712,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":108,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":115,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":144,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":564,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":395,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":243,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":116,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":79,"org.apache.commons.collections4.functors.AllPredicateTest.emptyArrayToGetInstance":760,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":130,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":53,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":248,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":62,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":536,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":240,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":547,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":804,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":789,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":270,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":525,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":171,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":211,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":170,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":517,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":288,"org.apache.commons.collections4.functors.AllPredicateTest.nullArrayToGetInstance":763,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":18,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":166,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":699,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":250,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":620,"org.apache.commons.collections4.CollectionUtilsTest.testSize_List":1,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":355,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":477,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":401,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":203,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveChangesMap":670,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":143,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":306,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":90,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":91,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":238,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":419,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":137,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":738,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":128,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":801,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":764,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":273,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":777,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":117,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":702,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":594,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":677,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":695,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":676,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionSize":66,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":761,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":78,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":129,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":691,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":281,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":503,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveChangesMap":672,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":159,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":596,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":85,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":727,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":607,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":362,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":793,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":189,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":506,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":213,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":14,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":710,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":769,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":635,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":505,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":210,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":600,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":218,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":414,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":233,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":663,"org.apache.commons.collections4.set.ListOrderedSet2Test.testOrdering":387,"org.apache.commons.collections4.set.ListOrderedSetTest.testOrdering":390,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":772,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":33,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":205,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":150,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":490,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":157,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":809,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":315,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":584,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":803,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":51,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":190,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":77,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":826,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":516,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":434,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":94,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":403,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":641,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":725,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":515,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":416,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":610,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":629,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":30,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":528,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":622,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":748,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":749,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":512,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx1":747,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":602,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":44,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":60,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":142,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":531,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":537,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":453,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":474,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":452,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":70,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":57,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":683,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":631,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":328,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":788,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":368,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":586,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":193,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":574,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveChangesMap":654,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":192,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":658,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":546,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":338,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":249,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":501,"org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest.testAccessorsAndMutators":646,"org.apache.commons.collections4.list.SetUniqueListTest.testAddAll":52,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":406,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveChangesMap":693,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":365,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":23,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":89,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":237,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":88,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":107,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":697,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":780,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":37,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":38,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":361,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":330,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":13,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":575,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":317,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":12,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":466,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":126,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":296,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":73,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":587,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectEqualsSelf":643,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":438,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":334,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":102,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":661,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":103,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":561,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":784,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":507,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":149,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":604,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":698,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":404,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testDecorateFactory":482,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":598,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":127,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":50,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":82,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":232,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":465,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":740,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":739,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":303,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":741,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":223,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":297,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":262,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":711,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":614,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":825,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":302,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":755,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":797,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":408,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":152,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":280,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":524,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":153,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":743,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx1":742,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":733,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":744,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":245,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":161,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":177,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":220,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":225,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":346,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":821,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":263,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":704,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":212,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":707,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":148},"transformations":[{"failures":[],"tindex":"5c507476-13ab-11e5-9151-eb9de879bb87","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:416","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.EntryView();\n} "},"variableMap":{"entrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:391","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet();\n} "},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"tindex":"5c509b87-13ab-11e5-9151-a528476e537b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    int = ((java.util.Map<?, ?>)(java.lang.Object)).size();\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    int = ((java.util.Collection<?>)(java.lang.Object)).size();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    int = ((java.lang.Object[])(java.lang.Object)).int;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int++;\n        java.util.Iterator<?>.next();\n    }\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int++;\n        java.util.Enumeration<?>.nextElement();\n    }\n} else {\n    try {\n        int = java.lang.reflect.Array.getLength(java.lang.Object);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[16],"tindex":"5c509b88-13ab-11e5-9151-89e0757076bc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:222","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"5c50c299-13ab-11e5-9151-37311222eabc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"end2","index":"start1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:264","type":"CtIfImpl","sourcecode":"if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n    ++int;\n} else {\n    if ((int - int) > (int - int)) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    } else {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    }\n}"},"status":-2},{"failures":[17],"tindex":"5c50c29a-13ab-11e5-9151-b53be90fc235","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2016","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"obj":"aColl2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:418","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.contains(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"tindex":"5c50c29b-13ab-11e5-9151-dfa013db5052","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:88","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-1},{"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73],"tindex":"5c50c29c-13ab-11e5-9151-8b212e1d1845","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:79","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.clear()"},"variableMap":{"list":"temp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:193","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.add(E)) {\n    java.util.List<E>.add(E);\n} "},"status":-1},{"failures":[74,75,76,77,78,79,80],"tindex":"5c50c29d-13ab-11e5-9151-297d6e4c6ae6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:414","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n    return false;\n} "},"variableMap":{"obj":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:153","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag<E>.(getCount(java.lang.Object)) < (org.apache.commons.collections4.Bag<?>.getCount(java.lang.Object))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"5c50c29e-13ab-11e5-9151-e16b66e31262","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:398","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<java.util.Map.Entry<K, V>>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"status":0},{"failures":[],"tindex":"5c50e9af-13ab-11e5-9151-7f5f15157b56","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:648","type":"CtInvocationImpl","sourcecode":"((java.lang.ref.Reference<V>)(java.lang.Object)).clear()"},"variableMap":{"value":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.KeyValue) {\n    for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n        final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(java.lang.Object));\n        java.util.Map<K, V>.put(org.apache.commons.collections4.KeyValue<K, V>.getKey(), org.apache.commons.collections4.KeyValue<K, V>.getValue());\n    }\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n        final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(java.lang.Object[][int]));\n        if ((java.lang.Object[] == null) || ((java.lang.Object[].int) < 2)) {\n            throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + int));\n        } \n        java.util.Map<K, V>.put(((K)(java.lang.Object[][0])), ((V)(java.lang.Object[][1])));\n    }\n} else {\n    for (int int = 0 ; int < ((java.lang.Object[].int) - 1) ; ) {\n        java.util.Map<K, V>.put(((K)(java.lang.Object[][int++])), ((V)(java.lang.Object[][int++])));\n    }\n}"},"status":-2},{"failures":[81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202],"tindex":"5c50e9b0-13ab-11e5-9151-2bdb11214c2d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:458","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"5c50e9b1-13ab-11e5-9151-b3ff883d7bba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtIfImpl","sourcecode":"if ((java.util.List<? extends E>.size()) > (java.util.List<? extends E>.size())) {\n    java.util.List<? extends E> = java.util.List<? extends E>;\n    java.util.List<? extends E> = java.util.List<? extends E>;\n} "},"variableMap":{"list1":"coll","larger":"coll","smaller":"coll","list2":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.PredicatedList:118","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E);\n}"},"status":-2},{"failures":[203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,81,82,83,84,85,233,234,86,235,236,87,88,89,237,90,91,238,239,240,241,242,93,94,95,96,97,243,244,98,99,100,101,102,103,245,104,105,246,247,248,249,250,109,110,111,112,113,114,115,116,117,118,119,120,251,121,122,123,252,253,254,255,124,125,126,127,128,256,257,129,130,131,132,133,134,258,135,136,259,260,261,262,263,264,265,157,158,266,267,268,159,160,161,162,163,269,164,165,166,167,168,169,170,171,270,271,272,273,274,275,276,277,278,279,280,281,282,283,173,174,175,176,177,284,285,178,179,180,181,182,183,286,184,185,287,288,289,290,291,188,189,190,191,192,193,292,194,195,196,197,198,199,293,200,201,202,294],"tindex":"5c5110c2-13ab-11e5-9151-cf2e26d6baa8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:363","type":"CtForImpl","sourcecode":"for (int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n}"},"variableMap":{"data":"data","length":"oldCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n} else {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n    (int)++;\n    for (int int = int - 1 ; int >= 0 ; int--) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n            do {\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n        } \n    }\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n}"},"status":-1},{"failures":[],"tindex":"5c5110c3-13ab-11e5-9151-93d4f4faed7f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2319","type":"CtIfImpl","sourcecode":"if ((int) != 1) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"hit":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:126","type":"CtForImpl","sourcecode":"for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n    char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n}"},"status":-2},{"failures":[295,296,297],"tindex":"5c5110c4-13ab-11e5-9151-61e24fa48966","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:378","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    if ((java.util.Collection<?>.contains(java.util.Iterator<E>.next())) == false) {\n        java.util.Iterator<E>.remove();\n        boolean = true;\n    } \n}"},"variableMap":{"coll":"coll","modified":"modified","it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:259","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.contains(java.util.Iterator<E>.next())) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-1},{"failures":[298,299],"tindex":"5c5137d5-13ab-11e5-9151-075a63f7d8a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:320","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"variableMap":{"mapSize":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:147","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super E>[][int].evaluate(E)) == true) {\n    org.apache.commons.collections4.Closure<? super E>[][int].execute(E);\n    return ;\n} "},"status":-1},{"failures":[300,301,302,303],"tindex":"5c5137d6-13ab-11e5-9151-f3d0c38a5b8c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:284","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart() ; int < (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) ; ++int) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n}"},"status":-1},{"failures":[299],"tindex":"5c5137d7-13ab-11e5-9151-2527dc16a247","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n} "},"variableMap":{"predicates":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:61","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super E>[].int) != (org.apache.commons.collections4.Closure<? super E>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and closure arrays must be the same size\");\n} "},"status":-1},{"failures":[],"tindex":"5c5137d8-13ab-11e5-9151-f94334f8d1ea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"variableMap":{"next":"entry","entry":"entry","previous":"entry","hashCode":"hashCode","this":"this","index":"hashCode","key":"convertedKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:280","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n    return V;\n} "},"status":-2},{"failures":[304,305,306],"tindex":"5c5137d9-13ab-11e5-9151-0f3326c32794","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    return java.util.Iterator<T>.next();\n} "},"variableMap":{"iterator":"iterator","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1179","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<T>.hasNext()) {\n    int--;\n    if (int == (-1)) {\n        return java.util.Iterator<T>.next();\n    } \n    java.util.Iterator<T>.next();\n}"},"status":-1},{"failures":[307,308,309,310],"tindex":"5c515eea-13ab-11e5-9151-1b8670d407ba","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.List) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:195","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[311,312,313,314,315,316,317,318,319,320],"tindex":"5c515eeb-13ab-11e5-9151-992310a069da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:440","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.checkModCount()"},"variableMap":{"this":"cursor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:355","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-1},{"failures":[18,19,22,321,20,21,23,24,25,322,26,27,323,28,29,30,31,32,33,324,34,325,326,35,36,327,328,329,37,38,330,39,40,41,331,332,333,42,334,335,336,337,338,339,340,341],"tindex":"5c515eec-13ab-11e5-9151-bff3b0b65d6a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"allNull","nextCalled":"allNull"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:99","type":"CtIfImpl","sourcecode":"if (char != 0) {\n    boolean = false;\n} "},"status":-1},{"failures":[],"tindex":"5c515eed-13ab-11e5-9151-318fac8e1abc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:266","type":"CtIfImpl","sourcecode":"if (V == null) {\n    throw new java.lang.NullPointerException(\"null values not allowed\");\n} "},"status":-2},{"failures":[],"tindex":"5c515eee-13ab-11e5-9151-9fe2b7c6f9e9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet<K>(this);\n} "},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:373","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.TreeBidiMap.KeyView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"5c5185ff-13ab-11e5-9151-edf46157b01b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:314","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"variableMap":{"node":"node","it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:355","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-2},{"failures":[342],"tindex":"5c518600-13ab-11e5-9151-9bc58fddf2c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:67","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Collection must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ExceptionTransformer:67","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.collections4.FunctorException(\"ExceptionTransformer invoked\")"},"status":-1},{"failures":[],"tindex":"5c518601-13ab-11e5-9151-15534cd8e73e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:886","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"5c518602-13ab-11e5-9151-87e3a43ec00b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:86","type":"CtForEachImpl","sourcecode":"for (final E E : E[]) {\n    org.apache.commons.collections4.list.TransformedList<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}"},"status":-2},{"failures":[343],"tindex":"5c518603-13ab-11e5-9151-dbe7baeb1241","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1182","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<T>.next()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<T>.hasNext()) {\n    C.execute(T);\n} else {\n    return T;\n}"},"status":-1},{"failures":[],"tindex":"5c518604-13ab-11e5-9151-455f29f5c911","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"5c518605-13ab-11e5-9151-5fa3b5d0b485","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:138","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key2","next":"next","entry":"next","key2":"key1","hashCode":"hashCode","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:408","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"5c51ad16-13ab-11e5-9151-997e800fa81b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:83","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"status":0},{"failures":[344],"tindex":"5c51ad17-13ab-11e5-9151-c9fc927a29b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1967","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"delegate\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:138","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\")"},"status":-1},{"failures":[345,346,347,348,349,350],"tindex":"5c51ad18-13ab-11e5-9151-9b03661dd16b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.println(\" = \");\n} "},"status":-1},{"failures":[351,352],"tindex":"5c51ad19-13ab-11e5-9151-4996b88299f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:329","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.util.List<E>.addAll(int, java.util.List<E>);\n} "},"status":-1},{"failures":[],"tindex":"5c51ad1a-13ab-11e5-9151-e12030607e29","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:919","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry());\n} else {\n    return null;\n}"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:748","type":"CtIfImpl","sourcecode":"if (java.util.AbstractMap<K, V>.isEmpty()) {\n    return null;\n} "},"status":-2},{"failures":[84,235,239,96,99,247,107,112,116,252,127,130,260,176,179,191,195,294],"tindex":"5c51ad1b-13ab-11e5-9151-0f633e9c429a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2016","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n                return true;\n            } \n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n} else {\n    for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n                return true;\n            } \n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"5c51ad1c-13ab-11e5-9151-b559c115c7d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:442","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n} else {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n}"},"status":-2},{"failures":[],"tindex":"5c51ad1d-13ab-11e5-9151-0d8fef886f5e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:281","type":"CtForEachImpl","sourcecode":"for (final O O : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>) {\n    org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, ((org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.max(O)) - (org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.min(O))));\n}"},"status":-2},{"failures":[353],"tindex":"5c51d42e-13ab-11e5-9151-9b4f7aae99eb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:147","type":"CtIfImpl","sourcecode":"if (T != null) {\n    int += T.hashCode();\n} "},"status":-1},{"failures":[212,227,354,355,356,357,358],"tindex":"5c51d42f-13ab-11e5-9151-17fc1f29d8d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1266","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final K K = ((K)(java.io.ObjectInputStream.readObject()));\n    final V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n}"},"status":-1},{"failures":[359,360,361,362,363,364,365,366,367,368,369,370],"tindex":"5c51d430-13ab-11e5-9151-09eb215fb13a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:176","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[371,372,373,374,375,376,377,378,379,380,381,382],"tindex":"5c51d431-13ab-11e5-9151-1bdce88d1bc0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:360","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    int = int;\n    E = java.util.ArrayList<E>.get(int);\n} else {\n    final E E = java.util.ArrayList<E>.get(int);\n    if ((java.util.Comparator<? super E>) == null) {\n        throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n    } \n    if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n        E = E;\n        int = int;\n    } \n}"},"status":-1},{"failures":[],"tindex":"5c51d432-13ab-11e5-9151-3fcf9b27b06b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:75","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(int, java.util.Collection<? extends E>)"},"status":-2},{"failures":[383,384,385,386],"tindex":"5c51d433-13ab-11e5-9151-a3d6948bb73b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:172","type":"CtIfImpl","sourcecode":"if (java.util.Map<V, K>.containsKey(V)) {\n    java.util.Map<K, V>.remove(java.util.Map<V, K>.get(V));\n} "},"status":-1},{"failures":[387,388,389,390,391,392],"tindex":"5c51d434-13ab-11e5-9151-cf892ebb0cdb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n} "},"variableMap":{"predicates":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:213","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.util.List<E>.remove(java.lang.Object);\n} "},"status":-1},{"failures":[],"tindex":"5c51d435-13ab-11e5-9151-87e8a6b7324a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1204","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"left":"node","start":"node","this":"this","predecessor":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1242","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-2},{"failures":[261,138,149],"tindex":"5c51d436-13ab-11e5-9151-5544ceb00441","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1113","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()"},"variableMap":{"this":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:226","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.setValue(V)"},"status":-1},{"failures":[],"tindex":"5c51d437-13ab-11e5-9151-731d679cc883","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:108","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[393],"tindex":"5c51fb48-13ab-11e5-9151-bb381f96f15b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"numberOfNodesToCache"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:219","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    org.apache.commons.collections4.list.NodeCachingLinkedList<E>.addNodeToCache(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-1},{"failures":[300,394,395,301,302,303],"tindex":"5c51fb49-13ab-11e5-9151-81bc1a41b87c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:232","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int)"},"variableMap":{"vUp":"vUp","start1":"end1","end2":"k","this":"this","i":"k","end1":"k","k":"delta","start2":"k"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtIfImpl","sourcecode":"if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n    if ((int[][int]) <= (int[][(int + int)])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[86,98,115,129,148,164,178,194],"tindex":"5c51fb4a-13ab-11e5-9151-05c57d23175b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.toString();\n} "},"variableMap":{"delegateMap":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1365","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return \"{}\";\n} "},"status":-1},{"failures":[396,397,295,398,399,400,401,402,403,404,405,406,407,408,320,409,410,411,412,311,413,414,415,416,417,315,316,317,318,319,418,419,420,421],"tindex":"5c51fb4b-13ab-11e5-9151-c16c0d38292c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"remove() cannot be called\");\n} "},"variableMap":{"nextObjectSet":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:397","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(\", \");\n} "},"status":-1},{"failures":[],"tindex":"5c51fb4c-13ab-11e5-9151-07c6bab2b7c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"maxElements"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:236","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"status":-2},{"failures":[],"tindex":"5c51fb4d-13ab-11e5-9151-353f091b8a50","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1086","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<?> != null) {\n    return java.util.Iterator<?>;\n} "},"variableMap":{"it":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:51","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Iterator<E> java.util.Iterator<E> = ((java.util.Iterator<E>)(java.util.Iterator<? extends E>));\n    return java.util.Iterator<E>;\n} "},"status":-2},{"failures":[422],"tindex":"5c51fb4e-13ab-11e5-9151-07835369ae26","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"size","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"status":-1},{"failures":[423,424],"tindex":"5c51fb4f-13ab-11e5-9151-e5fc4b977545","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"isLocked","beforeFirst":"isLocked"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:267","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    org.apache.commons.collections4.comparators.ComparatorChain<E>.checkChainIntegrity();\n    boolean = true;\n} "},"status":-1},{"failures":[425,426,427],"tindex":"5c522260-13ab-11e5-9151-1fe11dca5796","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    return java.util.List<K>.get((int - 1));\n} "},"status":-1},{"failures":[81,82,83,84,85,86,235,236,87,93,94,428,95,96,97,243,98,99,100,101,429,430,109,110,431,111,112,113,114,115,116,117,118,432,433,124,125,434,126,127,128,256,129,130,131,132,435,436,142,143,437,144,145,146,147,148,149,150,151,438,439,159,160,440,161,162,163,269,164,165,166,167,441,442,173,174,443,175,176,177,284,178,179,180,181,444,445,188,189,446,190,191,192,193,194,195,196,197,447,448],"tindex":"5c522261-13ab-11e5-9151-9fc6c9d856f5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"5c522262-13ab-11e5-9151-f18e1bb43564","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:440","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.checkModCount()"},"variableMap":{"this":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:145","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[449,450,451,452,453,454,455,456,457,458,459,460,461,462,230,231,232,463,81,82,464,83,84,85,233,234,86,465,235,466,467,236,87,468,469,470,88,89,237,90,91,238,471,472,473,239,474,475,476,477,92,478,479,480],"tindex":"5c522263-13ab-11e5-9151-c125d3836c62","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hash2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:317","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = K.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (K.equals(K))) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 2 :\n            if (((int) == int) && (K.equals(K))) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 1 :\n            if (((int) == int) && (K.equals(K))) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n    }\n} "},"status":-1},{"failures":[300,394,395,301,302,303],"tindex":"5c522264-13ab-11e5-9151-cfbb2c7197db","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:212","type":"CtForImpl","sourcecode":"for (int int = int - int ; int <= (int + int) ; int += 2) {\n    final int int = (int + int) - int;\n    if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n        int[][int] = (int[][(int + 1)]) - 1;\n    } else {\n        int[][int] = int[][(int - 1)];\n    }\n    int int = (int[][int]) - 1;\n    int int = ((int - int) + int) - int;\n    while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = int--;\n        int--;\n    }\n    if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n        if ((int[][int]) <= (int[][(int + int)])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n        } \n    } \n}"},"variableMap":{"start1":"offset","d":"delta","offset":"start1","vDown":"vDown","delta":"start1","this":"this","sequence1":"sequence1","sequence2":"sequence1","vUp":"vDown","equator":"equator","end2":"delta","end1":"d","start2":"start2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:186","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int += 2) {\n    final int int = int + int;\n    if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n        int[][int] = int[][(int + 1)];\n    } else {\n        int[][int] = (int[][(int - 1)]) + 1;\n    }\n    int int = int[][int];\n    int int = ((int - int) + int) - int;\n    while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = ++int;\n        ++int;\n    }\n    if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n        if ((int[][(int - int)]) <= (int[][int])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"5c522265-13ab-11e5-9151-496c0a818ef5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:965","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"xFormerParent","replacement":"xFormerParent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1150","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-2},{"failures":[274,481,275,280],"tindex":"5c522266-13ab-11e5-9151-2b6235b8bd83","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"variableMap":{"obj":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:159","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[482],"tindex":"5c524977-13ab-11e5-9151-7fac808838c0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:51","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Iterator<E> java.util.Iterator<E> = ((java.util.Iterator<E>)(java.util.Iterator<? extends E>));\n    return java.util.Iterator<E>;\n} "},"status":-1},{"failures":[],"tindex":"5c524978-13ab-11e5-9151-7966518e34e1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[273,274],"tindex":"5c524979-13ab-11e5-9151-e9c655b35190","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:702","type":"CtIfImpl","sourcecode":"if (java.lang.Runnable == null) {\n    throw new java.lang.NullPointerException();\n} "},"variableMap":{"r":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514],"tindex":"5c52497a-13ab-11e5-9151-d5626ac0899d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:138","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.List<E>.add(org.apache.commons.collections4.collection.TransformedCollection<E>.transform(E));\n}"},"status":-1},{"failures":[],"tindex":"5c52497b-13ab-11e5-9151-598fb4833599","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"status":-2},{"failures":[515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,20,21,26,27,28,29,30,31,33,34,35,36,334,338,339,340],"tindex":"5c52497c-13ab-11e5-9151-3b759e02e361","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:115","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    return false;\n} "},"status":-1},{"failures":[540,541,108,481,179,180,181,183,185,173,174,175,176,177,284,178],"tindex":"5c52497d-13ab-11e5-9151-3fd4410a2479","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} "},"variableMap":{"object":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:221","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638],"tindex":"5c52497e-13ab-11e5-9151-b17d9e3e492d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:549","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    return null;\n} "},"status":-1},{"failures":[570],"tindex":"5c52497f-13ab-11e5-9151-4f1d69254a32","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:952","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"this":"this","dataElement":"dataElement","deletedNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:906","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[639,640,641,307,308,309,310,642,643],"tindex":"5c527090-13ab-11e5-9151-877e7395a7db","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:169","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().remove(java.lang.Object);\n}"},"variableMap":{"this":"this","lock":"object","object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:194","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    if (java.lang.Object == (this)) {\n        return true;\n    } \n    return (java.lang.Object == (this)) || (org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().equals(java.lang.Object));\n}"},"status":-1},{"failures":[528,338,644,645,646,647,648,649,650,651,652,560,561,563,564,565,568,570,573,574,592,653,654,655,610,611,613,614,615,618,656,657,92,658,106,659,660,137,661,662,663,664,665,666,667,668,156,172,669,670,671,672,673,186,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710],"tindex":"5c527091-13ab-11e5-9151-d99ee35e2a40","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1085","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.AbstractKeyValue:53","type":"CtReturnImpl","sourcecode":"return K"},"status":-1},{"failures":[],"tindex":"5c527092-13ab-11e5-9151-bf2d94b597a3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:686","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<T>.hasNext()) {\n    C.execute(java.util.Iterator<T>.next());\n}"},"status":-2},{"failures":[711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735],"tindex":"5c527093-13ab-11e5-9151-f31190fd9b57","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:97","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    int += java.util.Set<E>.size();\n}"},"status":-1},{"failures":[44,736,70],"tindex":"5c527094-13ab-11e5-9151-23746efed60e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:257","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Set<E>.contains(java.lang.Object)) {\n        java.util.Set<java.lang.Object>.add(java.lang.Object);\n    } \n}"},"status":-1},{"failures":[],"tindex":"5c527095-13ab-11e5-9151-937f04171923","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:892","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:932","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,759,760,761,761,762,763,764,765,298,299],"tindex":"5c527096-13ab-11e5-9151-cbb3f9389c8d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:56","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate<? super T>[])"},"variableMap":{"predicates":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"5c527097-13ab-11e5-9151-cb89edf77c6e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"5c527098-13ab-11e5-9151-b3d579a203e0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"total","index":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1361","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n}"},"status":0},{"failures":[],"tindex":"5c5297a9-13ab-11e5-9151-292d266b87fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n    E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n} "},"status":-2},{"failures":[766,767,768,769,770,498,771,772,773,774],"tindex":"5c5297aa-13ab-11e5-9151-11caa615b805","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.TransformedBag:81","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.Bag<E>.clear()"},"variableMap":{"bag":"excess"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:380","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E);\n    final int int = org.apache.commons.collections4.Bag<?>.getCount(E);\n    if ((1 <= int) && (int <= int)) {\n        org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n    } else {\n        org.apache.commons.collections4.Bag<E>.add(E, int);\n    }\n}"},"status":-1},{"failures":[],"tindex":"5c5297ab-13ab-11e5-9151-fdf697f580a1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:78","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"5c5297ac-13ab-11e5-9151-830a6ea27b43","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:394","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.ValueView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"5c5297ad-13ab-11e5-9151-bd9c92ebe206","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:958","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n}"},"variableMap":{"root":"previous","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:726","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[273,481],"tindex":"5c5297ae-13ab-11e5-9151-f134c9518177","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:559","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-1},{"failures":[273,274,481,275],"tindex":"5c5297af-13ab-11e5-9151-4f95aabf27b6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[775,203,776,204,777,205,206,207,778,208,209,210,211,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,229,235,99,107,116,779,780,130,261,138,149,781,165,179,195],"tindex":"5c5297b0-13ab-11e5-9151-df7de2dbe08c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:279","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202],"tindex":"5c5297b1-13ab-11e5-9151-3f32f6401f25","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:458","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} "},"status":-1},{"failures":[782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,296,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,297,820,821,822],"tindex":"5c52bec2-13ab-11e5-9151-bba713b1d56c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:182","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> , int++) {\n    T[][int] = ((T)(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue()));\n}"},"status":-1},{"failures":[],"tindex":"5c52bec3-13ab-11e5-9151-0f79826f3688","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == null) {\n    return 0;\n} "},"variableMap":{"list":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1501","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> instanceof org.apache.commons.collections4.BoundedCollection) {\n    return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).maxSize();\n} "},"status":0},{"failures":[823,824],"tindex":"5c52bec4-13ab-11e5-9151-4f1991ccdf66","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"variableMap":{"lastItemIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:175","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-1},{"failures":[452,453,455,230,231,232,474,475,476,477,92,478,479,480,463,81,82,464,83,84,85,233,234,86,465,235,466,467,236,87,468,469,470,88,89,237,90,91,238,471,472,473,239],"tindex":"5c52bec5-13ab-11e5-9151-f10bf390f3e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"size","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:398","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 2 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 1 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"tindex":"5c52bec6-13ab-11e5-9151-b1caff42aa35","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1334","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    int = ((java.util.Map<?, ?>)(java.lang.Object)).size();\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    int = ((java.util.Collection<?>)(java.lang.Object)).size();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    int = ((java.lang.Object[])(java.lang.Object)).int;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int++;\n        java.util.Iterator<?>.next();\n    }\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int++;\n        java.util.Enumeration<?>.nextElement();\n    }\n} else {\n    try {\n        int = java.lang.reflect.Array.getLength(java.lang.Object);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[545,543,601,599],"tindex":"5c52bec7-13ab-11e5-9151-cf77de2495c2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[711,825,712,713,826,715,716,717,718,827,719,720,721,722,724,828,829,727,728,830,729,730,731,732,831,733,734,735],"tindex":"5c52bec8-13ab-11e5-9151-ef92438e3432","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"code","index":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}