{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":492,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":644,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":310,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":609,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":59,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":49,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":473,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":668,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":467,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":657,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":730,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":503,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionSize":395,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":511,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":448,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":189,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":518,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":513,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":470,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":110,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":391,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":403,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":697,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFullIterator":484,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":291,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":390,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd":505,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":698,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":404,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":432,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":4,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":442,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":636,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":231,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":158,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":12,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":289,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":58,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":357,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":665,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":284,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":719,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":529,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":642,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":750,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":413,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":667,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":100,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":751,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":29,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":104,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":585,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":675,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":722,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":173,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":272,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":251,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":569,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":729,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":205,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":246,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":625,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":187,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":716,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":680,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":211,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":206,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":258,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":259,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":339,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":230,"org.apache.commons.collections4.CollectionUtilsTest.transform2":715,"org.apache.commons.collections4.CollectionUtilsTest.transform1":714,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":152,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":353,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":92,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":208,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":450,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":670,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":338,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":321,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":70,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":218,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":111,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":444,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":540,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":499,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":130,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":410,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":260,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":709,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":101,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":352,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":124,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":360,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":710,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":367,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":414,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":221,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":653,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":576,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":378,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":455,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":699,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":116,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":549,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":252,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":18,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":443,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":149,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":621,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":693,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":477,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":386,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":180,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":210,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":326,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":270,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":741,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":650,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":713,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":77,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":475,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":6,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":582,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":380,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":212,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":639,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":318,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":748,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":516,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":229,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":267,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":532,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":393,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":371,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":370,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":462,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":607,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":37,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":752,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":209,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":143,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySet":560,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":647,"org.apache.commons.collections4.map.CompositeMapTest.testGet":0,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":2,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":169,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":195,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabelAndMap":430,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":489,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":347,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":78,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":556,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":155,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":539,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":36,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":666,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":424,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":67,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":373,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":147,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":672,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":591,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":472,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":301,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":575,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":579,"org.apache.commons.collections4.map.HashedMapTest.testEqualsNull":474,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":440,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":399,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":428,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":721,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":286,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":525,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":646,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":203,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":542,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":34,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEqualsNull":466,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":536,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":117,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":478,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":68,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":509,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":144,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":99,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":263,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":38,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":227,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":242,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":254,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":744,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":202,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":274,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":593,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":264,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":53,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":74,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":320,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":619,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":156,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":329,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":165,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":21,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":245,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":42,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInCollectionToGetInstance":50,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":460,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":620,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":26,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":216,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":250,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":27,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":423,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":553,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":706,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":316,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":561,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":323,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":628,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":622,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":740,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":177,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":400,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":10,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":441,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":217,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":226,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":341,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":25,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":129,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":330,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":394,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":197,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":131,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabelAndMap":429,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":488,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testEqualsNull":431,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":527,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":634,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":172,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":331,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":508,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":601,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":633,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":632,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":288,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":159,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":656,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":600,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":16,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":93,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":346,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":362,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":178,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":629,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":630,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":190,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":631,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":146,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":725,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":161,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":459,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":297,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":192,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":660,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":256,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":119,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":236,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":671,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":447,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":120,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":606,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":90,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":140,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":201,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":658,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":732,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":617,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":557,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":384,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":674,"org.apache.commons.collections4.ListUtilsTest.testSubtract":28,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":498,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":268,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":290,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":213,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":148,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":235,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":623,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":382,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":266,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":319,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":451,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":727,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":571,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":57,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":88,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":308,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":8,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":747,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":537,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":457,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":55,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":276,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":186,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":183,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":720,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":107,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":487,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":154,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":315,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":35,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":369,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":31,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":406,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":337,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":379,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":184,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":176,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":314,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":45,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":302,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":368,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":550,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":610,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":294,"org.apache.commons.collections4.IteratorUtilsTest.testToList":425,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":412,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":76,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":363,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":52,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":497,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":695,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":626,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":652,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":664,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":496,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":528,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":103,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":86,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":376,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":486,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":32,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":327,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":521,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":749,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":167,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":262,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":524,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":261,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":175,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":558,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":696,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":253,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":726,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":336,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":418,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":408,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":694,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":417,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":641,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":662,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":81,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":244,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":519,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":71,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":98,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":207,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":44,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":396,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":681,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":3,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":215,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":677,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":23,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":602,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":24,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":41,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":22,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":490,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":257,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":645,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":162,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":510,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":651,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":723,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":678,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":196,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":281,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":381,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":65,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":157,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":599,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":746,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":365,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":325,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":287,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":349,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":673,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":271,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":574,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":141,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":240,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":753,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":309,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":87,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":139,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":485,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":734,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":583,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":735,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":62,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":345,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":19,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":588,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":445,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":449,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":733,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":64,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":676,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":635,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":512,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":669,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":241,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":731,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":452,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":128,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":523,"org.apache.commons.collections4.collection.CompositeCollectionTest.testSize":388,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":566,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":422,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":138,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":334,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":461,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":133,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":436,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":596,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":577,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":468,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":122,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":174,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":238,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":654,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":296,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":39,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":304,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":491,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":745,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":419,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":191,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":453,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":89,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":465,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":79,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":40,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":375,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":298,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":649,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":687,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":568,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":164,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":608,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":333,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":416,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":514,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":580,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":385,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":533,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":679,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":247,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":126,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":562,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":597,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":166,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":592,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":407,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":350,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":354,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":598,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":60,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":340,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":114,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":269,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":685,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":303,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":616,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":356,"org.apache.commons.collections4.IteratorUtilsTest.testToArray2":426,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":563,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":520,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":661,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":225,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":324,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":718,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":115,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":464,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":243,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":299,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":233,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintCasting":684,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":102,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":686,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":377,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":96,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":118,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":479,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":69,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":434,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":366,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":306,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":637,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":420,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":54,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":275,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":136,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":123,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":179,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":618,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":181,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":185,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":134,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":482,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":590,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":701,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":483,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":322,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":358,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":305,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":355,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":711,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":587,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":538,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":565,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":332,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":454,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":80,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":682,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":198,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":335,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":534,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":282,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":581,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":142,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":277,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":91,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":659,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":9,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":132,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":85,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":476,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":480,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":500,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":504,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":638,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":348,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":127,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":402,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":374,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":328,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":611,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":712,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":14,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":627,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":648,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":397,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":220,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":502,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":708,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":279,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":495,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":43,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":95,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":463,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":83,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":614,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":613,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":612,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":66,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":409,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":293,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":361,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":742,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":204,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":401,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":736,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":737,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":415,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":456,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":108,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":193,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":105,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx6":48,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":194,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":531,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":700,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":526,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":311,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":182,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":285,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":724,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":493,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":170,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":435,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":739,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySet":559,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":705,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":515,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":624,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":688,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":163,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":421,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":239,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":554,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":552,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":20,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":387,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":517,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":494,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":188,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":137,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":199,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":219,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":224,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":535,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":541,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":30,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":61,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":343,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":743,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":439,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":640,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":683,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":471,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":342,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":555,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":222,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":265,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":359,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":150,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":458,"org.apache.commons.collections4.collection.CompositeCollectionTest.testMultipleCollectionsSize":389,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":530,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":17,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":707,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":437,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":573,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":234,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":522,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":135,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":548,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":547,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":249,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":546,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":151,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":543,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":433,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":544,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":545,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":11,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":295,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":392,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":160,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":237,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":594,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":75,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":643,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":351,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":564,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":551,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":702,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":703,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":704,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":5,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":738,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":717,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":56,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":113,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":94,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":438,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":307,"org.apache.commons.collections4.map.LRUMapTest.testLRU":603,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":15,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":728,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":248,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":97,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":278,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":171,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":372,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":595,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":1,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":200,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":283,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":112,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":405,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":655,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":586,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":82,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":228,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":344,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":584,"org.apache.commons.collections4.IteratorUtilsTest.testToArray":427,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":507,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":121,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":46,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":570,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":292,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":313,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":106,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":604,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":255,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":214,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":300,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":506,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":446,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":72,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":168,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":317,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":411,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":125,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":398,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":84,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":615,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":481,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":232,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":690,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":383,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":501,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":33,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":47,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":273,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":663,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":469,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":567,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":689,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":109,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":364,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":572,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":691,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":145,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":692,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":605,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":223,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":153,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":280,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":589,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":312,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":7,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":578},"transformations":[{"failures":[0,1],"tindex":"bb2ecc28-13b6-11e5-8deb-154735918d1b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"status":-1},{"failures":[2,3],"tindex":"bb2ef339-13b6-11e5-8deb-afe324f429a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    return ;\n} "},"variableMap":{"oldCapacity":"index","newCapacity":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:400","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)).purge(java.lang.ref.Reference<?>)) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    (this.int)--;\n    return ;\n} "},"status":-1},{"failures":[],"tindex":"bb2f686a-13b6-11e5-8deb-0d68620a94ed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1922","type":"CtReturnImpl","sourcecode":"return boolean[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]"},"variableMap":{"blackColor":"value","dataElement":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:266","type":"CtIfImpl","sourcecode":"if (java.lang.Object.equals(V)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"bb2f686b-13b6-11e5-8deb-456b7f752f42","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:432","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<K>emptyOrderedIterator();\n} "},"status":0},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"tindex":"bb2f686c-13b6-11e5-8deb-09b76d10d8f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:171","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.setValue(null)"},"variableMap":{"node":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:355","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-1},{"failures":[],"tindex":"bb32007d-13b6-11e5-8deb-212706b4051a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:190","type":"CtIfImpl","sourcecode":"if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n    int[][int] = int[][(int + 1)];\n} else {\n    int[][int] = (int[][(int - 1)]) + 1;\n}"},"status":0},{"failures":[20,21,22,23,24,25,26,27],"tindex":"bb32007e-13b6-11e5-8deb-1348b6fadf68","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:156","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-1},{"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"tindex":"bb32007f-13b6-11e5-8deb-1d79fb4d346a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:318","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    return false;\n} "},"status":-1},{"failures":[44,45],"tindex":"bb322790-13b6-11e5-8deb-dfcf0c672d29","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:742","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>"},"variableMap":{"right":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:245","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(int)"},"status":-1},{"failures":[46,47,48,49,50],"tindex":"bb322791-13b6-11e5-8deb-a76837531f8e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:106","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"status":-1},{"failures":[],"tindex":"bb322792-13b6-11e5-8deb-07740fbc4fbf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:391","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet();\n} "},"status":-2},{"failures":[],"tindex":"bb324ea3-13b6-11e5-8deb-1371d206c330","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:309","type":"CtIfImpl","sourcecode":"if (null != (java.util.BitSet)) {\n    int ^= java.util.BitSet.hashCode();\n} "},"status":0},{"failures":[],"tindex":"bb32eae4-13b6-11e5-8deb-33fd9ecf5032","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1378","type":"CtReturnImpl","sourcecode":"return \"{}\""},"status":0},{"failures":[51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110],"tindex":"bb32eae5-13b6-11e5-8deb-49021deab3d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) > 0) {\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.CursorableLinkedList<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        java.util.Iterator<E>.next();\n        java.util.Iterator<E>.remove();\n    }\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:221","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, E);\n}"},"status":-1},{"failures":[111,112,113,114,115,116,117,118,119,120],"tindex":"bb3311f6-13b6-11e5-8deb-e791c49e7a0e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.size();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"status":-1},{"failures":[28,29,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,30,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,31,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,32,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,33,231,232,233,234,235,236,237,238,239,240,241,242,243,34,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,35,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,36,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,37,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,38,371,372,373,374,375,39,40,41,376,42,43],"tindex":"bb344a77-13b6-11e5-8deb-ad0b26ec8d9c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(E);\n    int += int;\n    if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n        return true;\n    } \n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int += int;\n    return false;\n} "},"status":-1},{"failures":[377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400],"tindex":"bb347188-13b6-11e5-8deb-7df07cc67647","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"size","currentIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:102","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    int += java.util.Collection<E>.size();\n}"},"status":-1},{"failures":[],"tindex":"bb347189-13b6-11e5-8deb-8316e722cb6c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:280","type":"CtInvocationImpl","sourcecode":"java.util.Set<E>.clear()"},"variableMap":{"set":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:336","type":"CtTryImpl","sourcecode":"try {\n    java.util.Set<E> = java.util.Set<E>.getClass().newInstance();\n} catch (final java.lang.InstantiationException ie) {\n    java.util.Set<E> = new java.util.HashSet<E>();\n} catch (final java.lang.IllegalAccessException iae) {\n    java.util.Set<E> = new java.util.HashSet<E>();\n}"},"status":-2},{"failures":[401,402,403,404,405,406,407,408,409,410],"tindex":"bb34989a-13b6-11e5-8deb-b7a2f80521ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1591","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"current":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:481","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n} "},"status":-1},{"failures":[],"tindex":"bb34989b-13b6-11e5-8deb-cfde7c699314","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n} "},"status":-2},{"failures":[411,412],"tindex":"bb34989c-13b6-11e5-8deb-e74158598048","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:164","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior == null) {\n    throw new java.lang.IllegalArgumentException(\"Unknown object behavior must not be null\");\n} "},"variableMap":{"unknownObjectBehavior":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:188","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(java.lang.Object)) {\n    V = java.util.Map<K, V>.remove(java.lang.Object);\n    java.util.Map<V, K>.remove(V);\n} "},"status":-1},{"failures":[413,414],"tindex":"bb34989d-13b6-11e5-8deb-014722f8a0a0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"status":-1},{"failures":[],"tindex":"bb34989e-13b6-11e5-8deb-238614f6feaf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:766","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[415,416],"tindex":"bb34bfaf-13b6-11e5-8deb-4162a54f0ecc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:131","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.putAll(java.util.Map<? extends K, ? extends V>)"},"variableMap":{"this":"result","map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:203","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    java.util.Map<K, V>.put(org.apache.commons.collections4.map.TransformedMap<K, V>.transformKey(java.util.Map.Entry<? extends K, ? extends V>.getKey()), org.apache.commons.collections4.map.TransformedMap<K, V>.transformValue(java.util.Map.Entry<? extends K, ? extends V>.getValue()));\n}"},"status":-1},{"failures":[417,418,419,420,421,377,383],"tindex":"bb34bfb0-13b6-11e5-8deb-cb1d7bc3209e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:199","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"bb34bfb1-13b6-11e5-8deb-430e5b072928","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    final int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) * 2;\n    if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n    } \n} "},"status":0},{"failures":[],"tindex":"bb34bfb2-13b6-11e5-8deb-a5326b441b43","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:132","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E);\n}"},"status":-2},{"failures":[422,423,424,425,426,427],"tindex":"bb34bfb3-13b6-11e5-8deb-235612d296c8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:1025","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.List<E>.add(java.util.Iterator<? extends E>.next());\n}"},"status":-1},{"failures":[],"tindex":"bb34e6c4-13b6-11e5-8deb-79bf4fbe3112","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:439","type":"CtReturnImpl","sourcecode":"return int & (int - 1)"},"status":-2},{"failures":[],"tindex":"bb34e6c5-13b6-11e5-8deb-6dc28e0a50a4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1365","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return \"{}\";\n} "},"variableMap":{"this":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.toString();\n} "},"status":-2},{"failures":[],"tindex":"bb34e6c6-13b6-11e5-8deb-136150672c13","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1164","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"variableMap":{"node":"left","right":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:667","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[428,429,430],"tindex":"bb34e6c7-13b6-11e5-8deb-55b63c574cee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:806","type":"CtIfImpl","sourcecode":"if (org.w3c.dom.Node == null) {\n    throw new java.lang.NullPointerException(\"Node must not be null\");\n} "},"variableMap":{"node":"label"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:973","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.print(\" = \");\n} "},"status":-1},{"failures":[],"tindex":"bb34e6c8-13b6-11e5-8deb-3bbf7b20e743","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:319","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntrySet<K, V>(this);\n} "},"status":-2},{"failures":[431],"tindex":"bb350dd9-13b6-11e5-8deb-db4bde89e477","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:172","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object.getClass().equals(java.lang.Object.getClass()))) {\n    return false;\n} "},"variableMap":{"obj":"object","this":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:110","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"bb350dda-13b6-11e5-8deb-097707034464","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:721","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n} "},"variableMap":{"listIterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\");\n} "},"status":0},{"failures":[],"tindex":"bb350ddb-13b6-11e5-8deb-bfe2d9d9bad0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:320","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"variableMap":{"mapSize":"oldCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":"bb350ddc-13b6-11e5-8deb-d75aadd098b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:676","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} "},"variableMap":{"current":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:726","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"bb350ddd-13b6-11e5-8deb-355405414be2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:338","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"variableMap":{"key1":"key1","entry":"entry","key2":"key2","previous":"next","hashCode":"hashCode","key3":"key3","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:558","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"bb3534ee-13b6-11e5-8deb-2d6cc7aedf81","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"newCapacity","index":"oldCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n} else {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n    (int)++;\n    for (int int = int - 1 ; int >= 0 ; int--) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n            do {\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n        } \n    }\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n}"},"status":0},{"failures":[432,433,434,435,436,437,438,439,440,441,442,443],"tindex":"bb3534ef-13b6-11e5-8deb-b959f0a62f5a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:174","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final E E = java.util.Iterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"bb3534f0-13b6-11e5-8deb-1d634d0c759b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:130","type":"CtIfImpl","sourcecode":"if (K == null) {\n    throw new java.lang.NullPointerException(\"Key cannot be null\");\n} "},"status":-2},{"failures":[],"tindex":"bb355c01-13b6-11e5-8deb-e3e9183779bd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:156","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Collection<E>.iterator());\n}"},"status":-2},{"failures":[],"tindex":"bb355c02-13b6-11e5-8deb-3f939896cbd1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:267","type":"CtLocalVariableImpl","sourcecode":"V V = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:293","type":"CtLocalVariableImpl","sourcecode":"final V V = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V"},"status":-2},{"failures":[],"tindex":"bb389053-13b6-11e5-8deb-abacfa7fafb5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedClosure:77","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> : java.util.Collection<org.apache.commons.collections4.Closure<E>>) {\n    org.apache.commons.collections4.Closure<? super E>[][int++] = org.apache.commons.collections4.Closure<? super E>;\n}"},"status":-2},{"failures":[],"tindex":"bb389054-13b6-11e5-8deb-4303aed559dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"variableMap":{"lastItemIndex":"end2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:264","type":"CtIfImpl","sourcecode":"if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n    ++int;\n} else {\n    if ((int - int) > (int - int)) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    } else {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    }\n}"},"status":-2},{"failures":[],"tindex":"bb389055-13b6-11e5-8deb-43c0561c7e73","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"hash3","proposedCapacity":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1195","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 2 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 1 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":-2},{"failures":[],"tindex":"bb38de76-13b6-11e5-8deb-838d1a3e2a7d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:546","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Bag<?>.size()) != org.apache.commons.collections4.bag.AbstractMapBag<E>.(size())) {\n    return false;\n} "},"variableMap":{"other":"other","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:549","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet()) {\n    if ((org.apache.commons.collections4.Bag<?>.getCount(E)) != org.apache.commons.collections4.bag.AbstractMapBag<E>.(getCount(E))) {\n        return false;\n    } \n}"},"status":0},{"failures":[444,445,446,51,447,448,449,18,450,451,4,452,453,454,455,456,457,9,10,11,12,13,458,459,460,461,462,463,15,16,17,464],"tindex":"bb390587-13b6-11e5-8deb-b3c48a48c93a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:393","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    java.lang.StringBuilder.append((java.lang.Object == (this) ? \"(this Collection)\" : java.lang.Object));\n    boolean = java.util.Iterator<E>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(\", \");\n    } \n}"},"status":-1},{"failures":[],"tindex":"bb3953a8-13b6-11e5-8deb-1f50dd6b3992","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1056","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return null;\n}"},"variableMap":{"root":"previous"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:694","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} "},"status":-2},{"failures":[465,466,467,468,469,470,471,472,473,474,475,476,477,478,115],"tindex":"bb3953a9-13b6-11e5-8deb-b376a3dc3223","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-1},{"failures":[479,480,481,482,483,484,485,486],"tindex":"bb397aba-13b6-11e5-8deb-2f6fcd5cdeab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.TransformIterator:90","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends I>.remove()"},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:83","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if ((java.util.Iterator<? extends E>) == null) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n        boolean = true;\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-1},{"failures":[],"tindex":"bb397abb-13b6-11e5-8deb-119778846950","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:90","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<E>.hasNext()) == false) {\n    org.apache.commons.collections4.iterators.LoopingListIterator<E>.reset();\n} "},"variableMap":{"iterator":"it","this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:596","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<E>.hasNext()) {\n    java.lang.StringBuilder.append(',');\n} "},"status":-2},{"failures":[],"tindex":"bb397abc-13b6-11e5-8deb-2b7f2de2fd82","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:431","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"current":"right","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:428","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        if ((!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K))) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        } else {\n            return null;\n        }\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[487],"tindex":"bb397abd-13b6-11e5-8deb-bd628cc3aacc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:74","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>>.size()) == 0) {\n    return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n} "},"status":-1},{"failures":[122,135,488,150,158,159,173,189,190,191,204,489,219,222,231,235,244,259,490,274,491,280,283,296,312,313,328,344,345,358,374,375],"tindex":"bb39a1ce-13b6-11e5-8deb-57ebaf3da672","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:436","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        java.lang.Object[][int++] = E;\n    }\n}"},"status":-1},{"failures":[],"tindex":"bb39a1cf-13b6-11e5-8deb-b59d36874104","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super C> == null) {\n    return false;\n} "},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:231","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasNext()) {\n    final E E = java.util.ListIterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":0},{"failures":[],"tindex":"bb3ab340-13b6-11e5-8deb-01928459c58c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        return null;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"right","parent":"right","left":"parent","root":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:726","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"bb3ada51-13b6-11e5-8deb-f558e6f6b0b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:516","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"path","predecessor":"entry","bitIndex":"lengthInBits","child":"path"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:220","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[492,493,494,495,496,497,498,499,500,501,502],"tindex":"bb3ada52-13b6-11e5-8deb-b1c89bd84c23","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    return false;\n} "},"variableMap":{"mut":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:229","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[446,503,504,74,105],"tindex":"bb3ada53-13b6-11e5-8deb-bf5b16287ab2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:238","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.removeNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    return true;\n} "},"status":-1},{"failures":[505],"tindex":"bb3ada54-13b6-11e5-8deb-35e0a6ef185d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.GrowthList:123","type":"CtIfImpl","sourcecode":"if (int > int) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.<E>nCopies((int - int), null));\n} "},"status":-1},{"failures":[506,507,508,509,510,511],"tindex":"bb3b0165-13b6-11e5-8deb-95d27aa3e1be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:174","type":"CtIfImpl","sourcecode":"if ((int == 0) || (int == 0)) {\n    return null;\n} "},"variableMap":{"m":"delta","n":"end2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:231","type":"CtIfImpl","sourcecode":"if ((int[][int]) <= (int[][(int + int)])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n} "},"status":-1},{"failures":[],"tindex":"bb3b0166-13b6-11e5-8deb-53fc13d0c0d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1068","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"siblingNode":"newNode","currentNode":"newNode","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1284","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue(), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"bb3cd627-13b6-11e5-8deb-d72897726807","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"variableMap":{"parent":"previous","current":"previous","right":"predecessor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:659","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) || (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    while (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            break;\n        } \n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} "},"status":-2},{"failures":[512,513],"tindex":"bb3de798-13b6-11e5-8deb-4b9d043a8c2f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:873","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return 0;\n} "},"variableMap":{"removed":"allNull"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:78","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final int int = int + int;\n    final int int = int + int;\n    if (int >= int) {\n        char = 0;\n    } else {\n        char = java.lang.String.charAt(int);\n    }\n    if ((java.lang.String == null) || (int >= int)) {\n        char = 0;\n    } else {\n        char = java.lang.String.charAt(int);\n    }\n    if (char != char) {\n        final int int = char ^ char;\n        return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n    } \n    if (char != 0) {\n        boolean = false;\n    } \n}"},"status":-2},{"failures":[],"tindex":"bb3de799-13b6-11e5-8deb-e787447758d0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:91","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.LoopingListIterator<E>.reset()"},"status":-2},{"failures":[],"tindex":"bb3de79a-13b6-11e5-8deb-bfdebe6bfbbb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:106","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"hasNext","beforeFirst":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:393","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    java.lang.StringBuilder.append((java.lang.Object == (this) ? \"(this Collection)\" : java.lang.Object));\n    boolean = java.util.Iterator<E>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(\", \");\n    } \n}"},"status":0},{"failures":[514],"tindex":"bb3de79b-13b6-11e5-8deb-f3ed6d30a3fc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:764","type":"CtIfImpl","sourcecode":"if (java.util.List<E> == null) {\n    throw new java.lang.NullPointerException(\"List must not be null\");\n} "},"variableMap":{"list":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:86","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E>.size()) > 0) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E[] E[] = ((E[])(java.util.Collection<E>.toArray()));\n    java.util.Collection<E>.clear();\n    for (final E E : E[]) {\n        org.apache.commons.collections4.collection.TransformedCollection<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n} "},"status":-1},{"failures":[],"tindex":"bb3de79c-13b6-11e5-8deb-c532dc39c09e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:133","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<K, V> = this;\n} "},"status":-2},{"failures":[],"tindex":"bb3e0ead-13b6-11e5-8deb-a5683ecb81f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1384","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    java.lang.StringBuilder.append((java.lang.Object == (this) ? \"(this Map)\" : java.lang.Object)).append('=').append((java.lang.Object == (this) ? \"(this Map)\" : java.lang.Object));\n    boolean = org.apache.commons.collections4.MapIterator<?, ?>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(\", \");\n    } \n}"},"status":-2},{"failures":[515,516,517],"tindex":"bb3e0eae-13b6-11e5-8deb-b3710ed51724","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:112","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>.isEmpty()) == false) {\n    return false;\n} "},"variableMap":{"item":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:262","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.Object>.size()) == (java.util.Set<E>.size())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"bb3e0eaf-13b6-11e5-8deb-296dcdc96f79","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtIfImpl","sourcecode":"if ((java.util.List<? extends E>.size()) > (java.util.List<? extends E>.size())) {\n    java.util.List<? extends E> = java.util.List<? extends E>;\n    java.util.List<? extends E> = java.util.List<? extends E>;\n} "},"status":0},{"failures":[],"tindex":"bb3e0eb0-13b6-11e5-8deb-85e3b4325602","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:842","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"currentNode","rightChild":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:932","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"bb3e35c1-13b6-11e5-8deb-a1d984b7e7c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:116","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[512,513,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,408,540,541,542,543,544,545,546,547,548,409,549,550,410,551,552,553,554,555,556,557,558],"tindex":"bb3e35c2-13b6-11e5-8deb-611f3c2a6e56","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"bb3e35c3-13b6-11e5-8deb-2b265a72ea82","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:60","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.ArrayIterator<E>.this(java.lang.Object, 0)"},"variableMap":{"array":"array","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:74","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.ArrayIterator<E>.this(java.lang.Object, int, java.lang.reflect.Array.getLength(java.lang.Object))"},"status":-2},{"failures":[559,560],"tindex":"bb3e35c4-13b6-11e5-8deb-9d73324ba6f8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate":"keyPredicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:142","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Predicate<? super K>) != null) && ((org.apache.commons.collections4.Predicate<? super K>.evaluate(K)) == false)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot add key - Predicate rejected it\");\n} "},"status":-1},{"failures":[561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,415,592,593,594,595,465,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,469,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,471,640,641,642,643,644,645,646,647,648,649,650,473,651,652,653,654,655,656,657,658,659,660,661,662,663,664,475,665,666,667,668,669,670,671,416,672,673,674,675,477,676,677,678,679,680,681,111,112,113,114,115,682,116,117,118,119,120,683],"tindex":"bb3e35c5-13b6-11e5-8deb-07dae9974c3d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1294","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.init()"},"variableMap":{"cloned":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:642","type":"CtDoImpl","sourcecode":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null )"},"status":-1},{"failures":[],"tindex":"bb3e5cd6-13b6-11e5-8deb-d9a4d93e7120","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:558","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[684,685,686,687,688,689,690,691,692,693,694,695,696],"tindex":"bb3e5cd7-13b6-11e5-8deb-836db9d364ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:191","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"IteratorChain cannot be changed after the first use of a method from the Iterator interface\");\n} "},"variableMap":{"isLocked":"debug"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:993","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) && (!(org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.contains(java.lang.Object)))) {\n    org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, (java.lang.Object == null ? \"null\" : java.lang.Object), ((java.util.Map<?, ?>)(java.lang.Object)), org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>, boolean);\n} else {\n    org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream, org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size());\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.print(\" = \");\n    final int int = org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.indexOf(java.lang.Object);\n    if (int == (-1)) {\n        java.io.PrintStream.print(java.lang.Object);\n    } else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n        java.io.PrintStream.print(\"(this Map)\");\n    } else {\n        java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n    }\n    if (boolean && (java.lang.Object != null)) {\n        java.io.PrintStream.print(' ');\n        java.io.PrintStream.println(java.lang.Object.getClass().getName());\n    } else {\n        java.io.PrintStream.println();\n    }\n}"},"status":-1},{"failures":[],"tindex":"bb3e5cd8-13b6-11e5-8deb-f767e8ed1a7f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"end","newCapacity":"maxElements"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    int = boolean ? int : 0;\n} else {\n    int = (int) - (int);\n}"},"status":-2},{"failures":[80],"tindex":"bb3e83e9-13b6-11e5-8deb-ffdc308afa3b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:829","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"variableMap":{"next":"node","current":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:221","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":-1},{"failures":[2,3],"tindex":"bb42065a-13b6-11e5-8deb-95160cd3d86e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1036","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.init()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:380","type":"CtWhileImpl","sourcecode":"while (java.lang.ref.Reference<?> != null) {\n    org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purge(java.lang.ref.Reference<?>);\n    java.lang.ref.Reference<?> = java.lang.ref.ReferenceQueue<java.lang.Object>.poll();\n}"},"status":-1},{"failures":[506,507,508,509,510,511],"tindex":"bb42a29b-13b6-11e5-8deb-3154773456eb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:190","type":"CtIfImpl","sourcecode":"if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n    int[][int] = int[][(int + 1)];\n} else {\n    int[][int] = (int[][(int - 1)]) + 1;\n}"},"status":-1},{"failures":[401,403,697,698,699,700],"tindex":"bb42a29c-13b6-11e5-8deb-cfc5310f556f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:439","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"bb42a29d-13b6-11e5-8deb-01b059ea7663","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse = new org.apache.commons.collections4.bidimap.TreeBidiMap.Inverse();\n} "},"status":-2},{"failures":[14,56,57,58,59,60,61,62,63,19,68,69,70,71,72,73,74,75,76,79,85,86,87,88,89,90,91,92,93,96,701,99,100,101,102,103,104,105,106,107,110],"tindex":"bb42c9ae-13b6-11e5-8deb-15b80c787090","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2319","type":"CtIfImpl","sourcecode":"if ((int) != 1) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"hit":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"status":-1},{"failures":[],"tindex":"bb42c9af-13b6-11e5-8deb-77625ed8c544","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:432","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<K>emptyOrderedIterator();\n} "},"status":-2},{"failures":[],"tindex":"bb42c9b0-13b6-11e5-8deb-437ebcb6f653","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:816","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.keyvalue.MultiKey<?> == null) {\n    throw new java.lang.NullPointerException(\"Key must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"bb42c9b1-13b6-11e5-8deb-d7784082a3bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"status":0},{"failures":[],"tindex":"bb42c9b2-13b6-11e5-8deb-b122b1807cd7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:398","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<java.util.Map.Entry<K, V>>emptyOrderedIterator();\n} "},"status":0},{"failures":[702,703,704,705,706,707,708,709,710,711,712,713],"tindex":"bb42c9b3-13b6-11e5-8deb-8b7350fa1f3a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} "},"variableMap":{"hasNext":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:163","type":"CtIfImpl","sourcecode":"if (E instanceof java.util.Iterator) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)));\n} else {\n    E = E;\n    boolean = true;\n}"},"status":-1},{"failures":[714,715],"tindex":"bb42f0c4-13b6-11e5-8deb-9f374a63236e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super I, ? extends O> == null) {\n    throw new java.lang.NullPointerException(\"Transformer must not be null\");\n} "},"variableMap":{"transform":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:798","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<C> != null) && (org.apache.commons.collections4.Transformer<? super C, ? extends C> != null)) {\n    if (java.util.Collection<C> instanceof java.util.List<?>) {\n        final java.util.List<C> java.util.List<C> = ((java.util.List<C>)(java.util.Collection<C>));\n        for (final java.util.ListIterator<C> java.util.ListIterator<C> = java.util.List<C>.listIterator() ; java.util.ListIterator<C>.hasNext() ; ) {\n            java.util.ListIterator<C>.set(org.apache.commons.collections4.Transformer<? super C, ? extends C>.transform(java.util.ListIterator<C>.next()));\n        }\n    } else {\n        final java.util.Collection<C> java.util.Collection<C> = org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.collect(java.util.Collection<C>, org.apache.commons.collections4.Transformer<? super C, ? extends C>);\n        java.util.Collection<C>.clear();\n        java.util.Collection<C>.addAll(java.util.Collection<C>);\n    }\n} "},"status":-1},{"failures":[],"tindex":"bb42f0c5-13b6-11e5-8deb-4fcc03cdc64e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:722","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"ListIterator must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:47","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Predicate must not be null\")"},"status":-2},{"failures":[],"tindex":"bb42f0c6-13b6-11e5-8deb-7ffa604e93eb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    return true;\n} "},"status":0},{"failures":[28,29,140,127,129,142,143,144,145,146,30,147,148,149,150,151,152,153,154,155,156,157,158,159,160,178,165,167,180,181,182,183,184,185,31,186,187,188,189,190,209,196,198,211,212,213,214,215,32,216,217,218,219,264,251,253,266,267,268,269,270,35,271,272,273,274,275,276,277,278,279,280,281,301,288,290,303,304,305,306,307,308,36,309,310,311,312,313,333,320,322,335,336,337,338,339,340,37,341,342,343,344,345,363,350,352,365,366,367,368,369,370,38,371,372,373,374,375],"tindex":"bb4317d7-13b6-11e5-8deb-a9fe52ac6560","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:173","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:275","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.add(java.util.Iterator<? extends E>.next());\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[716,717,718,719,720],"tindex":"bb4317d8-13b6-11e5-8deb-339f1b4c7487","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:142","type":"CtIfImpl","sourcecode":"if ((int[][int]) > int) {\n    boolean[][int] = !(boolean[][int]);\n} "},"status":-1},{"failures":[721,722,492,723,493,494,724,495,496,497,725,726,498,727,499,728,729,500,501,730,731,732,733,734,735,736,737,502,738,739,740,741,742,743,744,745,746,747,748,749],"tindex":"bb438d09-13b6-11e5-8deb-018574f54a5b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:277","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> == null) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = new org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>();\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K = K;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V = V;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)++;\n    return null;\n} "},"status":-1},{"failures":[750,751,111,112,752,113,114,115,682,117,120,753],"tindex":"bb438d0a-13b6-11e5-8deb-333f9ff7fa9e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1152","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    java.lang.Object java.lang.Object = null;\n    switch (int) {\n        case 3 :\n            if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n                return false;\n            } \n            java.lang.Object = java.util.Map<?, ?>.get(K);\n            if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n                return false;\n            } \n        case 2 :\n            if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n                return false;\n            } \n            java.lang.Object = java.util.Map<?, ?>.get(K);\n            if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n                return false;\n            } \n        case 1 :\n            if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n                return false;\n            } \n            java.lang.Object = java.util.Map<?, ?>.get(K);\n            if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n                return false;\n            } \n    }\n} "},"status":-1},{"failures":[401,521],"tindex":"bb4513ab-13b6-11e5-8deb-6b85a69a5799","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1156","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"left":"node","root":"parent","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1216","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n            return null;\n        } else {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}