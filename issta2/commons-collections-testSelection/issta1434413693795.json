{"failureDictionary":{"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":254,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":115,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":334,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":10,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":42,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemovePrevious":224,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":313,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":57,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":366,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":173,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":24,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIterator":199,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":21,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":159,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd":211,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":14,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":178,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":46,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":356,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":336,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":229,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":114,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":286,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":375,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":205,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":248,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":95,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":358,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":151,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":155,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":300,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":91,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":20,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":395,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":337,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":371,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":292,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":142,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":333,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":250,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":362,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":127,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":277,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":327,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":263,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":202,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":176,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":230,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":200,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":152,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":392,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":94,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":216,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":270,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":48,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":364,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":73,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":365,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":379,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":86,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":62,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":187,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":289,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemoveNext":228,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":346,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":296,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":67,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":89,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":316,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":265,"org.apache.commons.collections4.TransformerUtilsTest.testCloneTransformer":6,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":403,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":121,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":401,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":348,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":376,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":262,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":315,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":106,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":298,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":214,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":80,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":271,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":232,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":124,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":55,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":167,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":382,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":251,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":149,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":293,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":131,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":246,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":201,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":97,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":311,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":332,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":261,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":102,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":276,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":5,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":103,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":197,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":294,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":76,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":164,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":308,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":161,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":78,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":244,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":363,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":35,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":397,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":15,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":247,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":101,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":389,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":54,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":325,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":355,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":354,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Iterator":37,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":312,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":143,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":245,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":165,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testIterator":31,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":111,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":206,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":105,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":323,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":43,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":13,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":140,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":352,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":255,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":378,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":357,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":182,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":384,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":393,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":213,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":386,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":372,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":390,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":342,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicSerialization":9,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":113,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":138,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":26,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":66,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":38,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":49,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":75,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":368,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":11,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":158,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":387,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":322,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":110,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":338,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":220,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":350,"org.apache.commons.collections4.IteratorUtilsTest.testToList":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":402,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":133,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":71,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":41,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":36,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":192,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":44,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":320,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":18,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":154,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":136,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":68,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":391,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":25,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":175,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":394,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":328,"org.apache.commons.collections4.CollectionUtilsTest.filter":400,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":221,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":22,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":237,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":128,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":146,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":190,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":274,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":302,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":285,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":240,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":380,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":99,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":326,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":100,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":17,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":335,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":98,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":74,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":218,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":329,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":40,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":56,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":373,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":301,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":210,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":226,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":189,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":65,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":172,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":50,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":183,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":377,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":51,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":198,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":361,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":137,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":118,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":123,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":171,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":309,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":16,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":253,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":340,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":4,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":291,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":374,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":163,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":208,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":314,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":64,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":281,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":282,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":283,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":139,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":107,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":119,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":134,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEmptyIterator":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":122,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":70,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":381,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":81,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":90,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":147,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":330,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":88,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":30,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":324,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":188,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":185,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":116,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":267,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":257,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":318,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":351,"org.apache.commons.collections4.IteratorUtilsTest.testToArray2":1,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":249,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":268,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":153,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":234,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":243,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":144,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":168,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":104,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":126,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":162,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":203,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":93,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":317,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":353,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":369,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":148,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":360,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":388,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":45,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":252,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":83,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":180,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":269,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":396,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":47,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":217,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemoveNext":222,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":345,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":295,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":145,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":383,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":141,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":34,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":239,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":135,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":174,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":170,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":29,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":303,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":370,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":108,"org.apache.commons.collections4.list.GrowthListTest.testListListIterator":219,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":306,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":305,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":304,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":399,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":63,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":166,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":195,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":59,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":60,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":84,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":156,"org.apache.commons.collections4.SetUtilsTest.testEquals":160,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":359,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":27,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":256,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":207,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":349,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":231,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":212,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":181,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":284,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":260,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":288,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":96,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":191,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":177,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicSerializationError":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":117,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":33,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":287,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":225,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":275,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":236,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":233,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":223,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":343,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":279,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":385,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":280,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":278,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":299,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":196,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":184,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":109,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicCopyConstructor":7,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":273,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":235,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":132,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":194,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":297,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":79,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":367,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":125,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":193,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":61,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":72,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":112,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":266,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":290,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":19,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":204,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":179,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":398,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":39,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":242,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":150,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemovePrevious":215,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":82,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":169,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":264,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":259,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":331,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":28,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":12,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":258,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":347,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":186,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":272,"org.apache.commons.collections4.IteratorUtilsTest.testToArray":3,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":53,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":157,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":87,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":52,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":120,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":130,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":339,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":129,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":238,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":92,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":307,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":227,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":58,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":319,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":85,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":341,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":241,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":404,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":209,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":321,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":310,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":344},"transformations":[{"failures":[],"tindex":"b654ace1-13bc-11e5-bf77-59e6a0a7dd04","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:124","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.Map<E, ? super V>.put(E, V);\n}"},"status":-2},{"failures":[],"tindex":"b654d3f2-13bc-11e5-bf77-09fe70ed1d54","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1089","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.map.Flat3Map<K, V>.mapIterator() ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<?, ?>.next());\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<?, ?>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"b654d3f3-13bc-11e5-bf77-afd548159035","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:416","type":"CtReturnImpl","sourcecode":"return this.java.util.Map<K, V>[][int].remove(java.lang.Object)"},"variableMap":{"composite":"key","i":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:156","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"b654d3f4-13bc-11e5-bf77-0f2223d9da66","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:509","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"child","left":"node","h":"right","right":"node","child":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:762","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"b6571de5-13bc-11e5-bf77-833987a3157f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"status":-2},{"failures":[],"tindex":"b65744f6-13bc-11e5-bf77-95b4a5443726","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:387","type":"CtIfImpl","sourcecode":"if (boolean) {\n    continue;\n} else {\n    return false;\n}"},"variableMap":{"foundCurrentElement":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:231","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasNext()) {\n    final E E = java.util.ListIterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"b65744f7-13bc-11e5-bf77-ad1a569bff00","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:225","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return true;\n} "},"variableMap":{"entry":"next","hashCode":"hashCode","this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:224","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"b65744f8-13bc-11e5-bf77-a113f65cc1bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:1025","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.List<E>.add(java.util.Iterator<? extends E>.next());\n}"},"status":-1},{"failures":[],"tindex":"b65744f9-13bc-11e5-bf77-49c6e3086a05","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:380","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    org.apache.commons.collections4.queue.CircularFifoQueue.this.remove();\n    int = -1;\n    return ;\n} "},"variableMap":{"lastReturnedIndex":"mapSize","start":"mapSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:320","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"status":-2},{"failures":[6,7,8,9],"tindex":"b65744fa-13bc-11e5-bf77-b1646845a66a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:67","type":"CtTryImpl","sourcecode":"try {\n    T.getClass().getConstructor(new java.lang.Class<?>[]{ T.getClass() });\n    return new org.apache.commons.collections4.functors.InstantiateFactory<T>(((java.lang.Class<T>)(T.getClass())) , new java.lang.Class<?>[]{ T.getClass() } , new java.lang.Object[]{ T });\n} catch (final java.lang.NoSuchMethodException ex2) {\n    if (T instanceof java.io.Serializable) {\n        return ((org.apache.commons.collections4.Factory<T>)(new org.apache.commons.collections4.functors.PrototypeFactory.PrototypeSerializationFactory<java.io.Serializable>(((java.io.Serializable)(T)))));\n    } \n}"},"status":-1},{"failures":[],"tindex":"b65744fb-13bc-11e5-bf77-7149179589c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:229","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.doWriteObject(java.io.ObjectOutputStream)"},"status":-2},{"failures":[],"tindex":"b65744fc-13bc-11e5-bf77-0b2d9fa46bde","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtIfImpl","sourcecode":"if ((java.util.Comparator<? super E>) == null) {\n    throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n} "},"status":-2},{"failures":[],"tindex":"b65744fd-13bc-11e5-bf77-c1dd80c7e4b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:949","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement : org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.values()) {\n    if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                } else {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"b6576c0e-13bc-11e5-bf77-fbec36a56e4f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.isEmpty()) {\n    return true;\n} else {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n            continue;\n        } \n        boolean boolean = false;\n        while (java.util.Iterator<?>.hasNext()) {\n            final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n            java.util.Set<java.lang.Object>.add(java.lang.Object);\n            if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n                boolean = true;\n                break;\n            } \n        }\n        if (boolean) {\n            continue;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}"},"variableMap":{"coll2":"coll","coll1":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1470","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> instanceof org.apache.commons.collections4.BoundedCollection) {\n    return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).isFull();\n} "},"status":-2},{"failures":[],"tindex":"b6576c0f-13bc-11e5-bf77-9d05a7e764c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:216","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"path":"node","entry":"node","current":"right","predecessor":"right","bitIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1169","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[10,11,12,13],"tindex":"b6576c10-13bc-11e5-bf77-8fdf81b7a912","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(java.lang.Object);\n} "},"variableMap":{"delegateMap":"delegateMap","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:438","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(java.lang.Object);\n} "},"status":-1},{"failures":[14],"tindex":"b6576c11-13bc-11e5-bf77-2b69d2329f92","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) < (java.util.Collection<?>.size())) {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n} else {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"b6576c12-13bc-11e5-bf77-8b269accd257","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:614","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int)"},"status":0},{"failures":[15,16,17,18,19,20,21,22,23,24,25,26,5],"tindex":"b6576c13-13bc-11e5-bf77-3d5a4a46057e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:341","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<E>) != null) {\n    throw new java.lang.IllegalStateException(\"Can\\'t do that after next or hasNext has been called.\");\n} "},"variableMap":{"values":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:295","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<E>) == null) {\n    java.util.ArrayList<E> = new java.util.ArrayList<E>(java.util.ArrayList<java.util.Iterator<? extends E>>.size());\n    java.util.BitSet = new java.util.BitSet(java.util.ArrayList<java.util.Iterator<? extends E>>.size());\n    for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n        java.util.ArrayList<E>.add(null);\n        java.util.BitSet.clear(int);\n    }\n} "},"status":-1},{"failures":[],"tindex":"b6576c14-13bc-11e5-bf77-15db679de11b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"numberOfNodesToCache","proposedCapacity":"numberOfNodesToCache"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:219","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    org.apache.commons.collections4.list.NodeCachingLinkedList<E>.addNodeToCache(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-2},{"failures":[],"tindex":"b6579325-13bc-11e5-bf77-ef8d5deae879","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:990","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> : java.util.Map<?, ?>.entrySet()) {\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getKey();\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getValue();\n    if ((java.lang.Object instanceof java.util.Map) && (!(org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.contains(java.lang.Object)))) {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, (java.lang.Object == null ? \"null\" : java.lang.Object), ((java.util.Map<?, ?>)(java.lang.Object)), org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>, boolean);\n    } else {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream, org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size());\n        java.io.PrintStream.print(java.lang.Object);\n        java.io.PrintStream.print(\" = \");\n        final int int = org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.indexOf(java.lang.Object);\n        if (int == (-1)) {\n            java.io.PrintStream.print(java.lang.Object);\n        } else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n            java.io.PrintStream.print(\"(this Map)\");\n        } else {\n            java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n        }\n        if (boolean && (java.lang.Object != null)) {\n            java.io.PrintStream.print(' ');\n            java.io.PrintStream.println(java.lang.Object.getClass().getName());\n        } else {\n            java.io.PrintStream.println();\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"b6579326-13bc-11e5-bf77-0f963f32237b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:263","type":"CtIfImpl","sourcecode":"if (K == null) {\n    throw new java.lang.NullPointerException(\"null keys not allowed\");\n} "},"status":-2},{"failures":[27,28,29,30],"tindex":"b6579327-13bc-11e5-bf77-9fac218b3839","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtIfImpl","sourcecode":"if (int > int) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s beyond the end of the array. \"));\n} "},"status":-1},{"failures":[],"tindex":"b6579328-13bc-11e5-bf77-5135e114b40a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"b6579329-13bc-11e5-bf77-47045049cbb5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:233","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"b657932a-13bc-11e5-bf77-4ff55fbb177f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[31],"tindex":"b657932b-13bc-11e5-bf77-37389792f6bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[32,33,34,35,36],"tindex":"b657932c-13bc-11e5-bf77-ad8254506127","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:993","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1182","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"status":-1},{"failures":[37],"tindex":"b657932d-13bc-11e5-bf77-cb129e8b007b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"total","index":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1342","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    int++;\n    java.util.Iterator<?>.next();\n}"},"status":-1},{"failures":[],"tindex":"b657ba3e-13bc-11e5-bf77-51c3c4888341","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:276","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.Values<V>(this);\n} "},"status":-2},{"failures":[],"tindex":"b657ba3f-13bc-11e5-bf77-db84a7aa924c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:95","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and transformer map must not be null\");\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:181","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":0},{"failures":[38,39,40,41,42,43],"tindex":"b657ba40-13bc-11e5-bf77-2d7551c0efdd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:138","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:149","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n    return true;\n} "},"status":-1},{"failures":[44,45,46,47],"tindex":"b657ba41-13bc-11e5-bf77-056e7f39aaa2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"added","beforeFirst":"added"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C);\n} "},"status":-1},{"failures":[],"tindex":"b657ba42-13bc-11e5-bf77-03b2a6cc2b22","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n    E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n} "},"status":-2},{"failures":[],"tindex":"b657ba43-13bc-11e5-bf77-a7700e3ba944","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:553","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n} else {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"b657ba44-13bc-11e5-bf77-bb3e801bbf90","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T> == null) || (org.apache.commons.collections4.Predicate<? super T> == null)) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":0},{"failures":[],"tindex":"b657ba45-13bc-11e5-bf77-bdf3bbe1cb67","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1046","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"node","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":0},{"failures":[],"tindex":"b657e156-13bc-11e5-bf77-73fa05c2fd8e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E>.size()) == 0) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"variableMap":{"collection":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:287","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n    boolean |= java.util.Collection<E>.removeAll(java.util.Collection<?>);\n}"},"status":0},{"failures":[48,49,50,51],"tindex":"b657e157-13bc-11e5-bf77-2d27d9dcc38c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"status":-1},{"failures":[],"tindex":"b657e158-13bc-11e5-bf77-cfa9d861ad4d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.IndexedCollection:227","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.IndexedCollection<K, C>.reindex()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:208","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.removeFromIndex(((C)(java.lang.Object)));\n} "},"status":0},{"failures":[],"tindex":"b657e159-13bc-11e5-bf77-af6a0904ddb7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:359","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.isEmpty()) {\n    return \"{}\";\n} "},"status":0},{"failures":[52,53,54,55,56,57],"tindex":"b657e15a-13bc-11e5-bf77-bb0cc8303e38","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:206","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int)"},"variableMap":{"vUp":"vUp","start1":"start2","delta":"start1","end2":"start2","this":"this","i":"delta","end1":"delta","k":"start2","start2":"delta"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:205","type":"CtIfImpl","sourcecode":"if ((int[][(int - int)]) <= (int[][int])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n} "},"status":-1},{"failures":[58,59,60,61,62,63,64,65,66,67,68],"tindex":"b657e15b-13bc-11e5-bf77-a3b20ba70912","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"hash","index":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:326","type":"CtIfImpl","sourcecode":"if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n} else {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"b657e15c-13bc-11e5-bf77-b3a54b3f6624","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:391","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet();\n} "},"status":-2},{"failures":[69,70,71,72,73,74,75,76,77,32,78,33,79,80,81,82,83,84,85,86,87,88,89,90],"tindex":"b657e15d-13bc-11e5-bf77-8b4978d6f4a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:615","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"parent":"rval","dataElement":"dataElement","child":"rval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:684","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[69,70,91,92,93,71,72,73,74,75,76,77,32,78,33,79,80,81,82,83,84,85,86,87,88,89,90],"tindex":"b658086e-13bc-11e5-bf77-b181d319e49e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:971","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"rval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:684","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"b658086f-13bc-11e5-bf77-df809d00a0f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:500","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n} else if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isExternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an external Entry!\"));\n} "},"variableMap":{"root":"parent","h":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1208","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[94,95],"tindex":"b6580870-13bc-11e5-bf77-d1b96cdde2e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY","index":"proposedCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"status":-1},{"failures":[96,97,98,99,100,101,102,103,104,105],"tindex":"b6580871-13bc-11e5-bf77-4dcd6268b8b6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2016","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:217","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = java.lang.Object.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n        case 2 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n        case 1 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n    }\n} "},"status":-1},{"failures":[],"tindex":"b6580872-13bc-11e5-bf77-5741e8894a2f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:153","type":"CtIfImpl","sourcecode":"if (boolean == true) {\n    java.util.BitSet.set(((java.util.List<java.util.Comparator<E>>.size()) - 1));\n} "},"status":-2},{"failures":[],"tindex":"b6580873-13bc-11e5-bf77-3b764b87520f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"end"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:145","type":"CtWhileImpl","sourcecode":"while ((((int - int) < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get((int - int))))) {\n    ++int;\n}"},"status":0},{"failures":[106,107],"tindex":"b6580874-13bc-11e5-bf77-27700982e991","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:347","type":"CtIfImpl","sourcecode":"if ((this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n    throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n} "},"status":-1},{"failures":[],"tindex":"b6580875-13bc-11e5-bf77-4d7e9c0f5b31","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:970","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"rightChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"b6582f86-13bc-11e5-bf77-19f2d6b3c406","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1932","type":"CtReturnImpl","sourcecode":"return !(boolean[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()])"},"variableMap":{"blackColor":"item","dataElement":"item"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:256","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.collection.CompositeCollection<E>.(contains(java.lang.Object)) == false) {\n    return false;\n} "},"status":-2},{"failures":[108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159],"tindex":"b6582f87-13bc-11e5-bf77-f9191374db4c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.List) == false) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"b6582f88-13bc-11e5-bf77-4178019dda37","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2066","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsValue(java.lang.Object)"},"variableMap":{"key":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:149","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n    return true;\n} "},"status":-2},{"failures":[160],"tindex":"b6582f89-13bc-11e5-bf77-09daca81ce93","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size())) {\n    return false;\n} "},"variableMap":{"a":"set1","b":"set1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:117","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == java.util.Collection<?>) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"b6582f8a-13bc-11e5-bf77-7fe98f70d6f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n} "},"variableMap":{"predicates":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E>.size()) == 0) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"status":0},{"failures":[],"tindex":"b6582f8b-13bc-11e5-bf77-9f61199ba71a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"bitIndex","index":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1169","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"b6582f8c-13bc-11e5-bf77-f7c760770cf4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:134","type":"CtReturnImpl","sourcecode":"return java.lang.String.startsWith(java.lang.String)"},"variableMap":{"key":"value","s1":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:254","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"b6582f8d-13bc-11e5-bf77-f50842967a3a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1036","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.init()"},"variableMap":{"this":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:189","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends J, ? extends U> java.util.Map.Entry<? extends J, ? extends U> : java.util.Map<? extends J, ? extends U>.entrySet()) {\n    java.util.Map<K, V>.put(org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>.transformKey(java.util.Map.Entry<? extends J, ? extends U>.getKey()), org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>.transformValue(java.util.Map.Entry<? extends J, ? extends U>.getValue()));\n}"},"status":-2},{"failures":[49,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239],"tindex":"b658569e-13bc-11e5-bf77-abec09e8db18","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:99","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().remove(int)"},"variableMap":{"this":"this","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:79","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int)"},"status":-1},{"failures":[240,241,242,243,244,245,246,247],"tindex":"b658569f-13bc-11e5-bf77-ed140e7454d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:261","type":"CtAssignmentImpl","sourcecode":"int = (int * 37) + (int)"},"variableMap":{"total":"modCount","counter":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:259","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"b65856a0-13bc-11e5-bf77-71a0e821ea4b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:102","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    int += java.util.Collection<E>.size();\n}"},"status":-2},{"failures":[],"tindex":"b65856a1-13bc-11e5-bf77-dd755810cf13","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:230","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.queue.CircularFifoQueue<E>.isAtFullCapacity()) {\n    org.apache.commons.collections4.queue.CircularFifoQueue<E>.remove();\n} "},"status":-2},{"failures":[248,249,250,251,252,253,254,255,256,257,258,259],"tindex":"b65856a2-13bc-11e5-bf77-c9e69b19bab0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.OnePredicate:98","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"variableMap":{"match":"previousObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:263","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasPrevious()) {\n    final E E = java.util.ListIterator<? extends E>.previous();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"b65856a3-13bc-11e5-bf77-976fd21c0f8e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:83","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"status":0},{"failures":[],"tindex":"b65856a4-13bc-11e5-bf77-83877653c905","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1501","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> instanceof org.apache.commons.collections4.BoundedCollection) {\n    return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).maxSize();\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? super O> instanceof java.util.Set<?>) {\n    return ((java.util.Set<? super O>)(java.lang.Iterable<? super O>)).contains(O) ? 1 : 0;\n} "},"status":0},{"failures":[96,260,261,10,11,12,262,263,264,265,266,267,268,269,270,271,272,104,273,274,105,13,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295],"tindex":"b65856a5-13bc-11e5-bf77-57cce9ad3b1d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:398","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 2 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 1 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":-1},{"failures":[296,297,298,299,300,301,302],"tindex":"b6587db6-13bc-11e5-bf77-1f562695220c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"status":-1},{"failures":[303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,40,323,324,325,326,327,328,329,298,330,331,332,333,334,43,335,336,337,302,338,339,13,287,293,294,340,341,342,343,344,345,346,347],"tindex":"b6587db7-13bc-11e5-bf77-b58f86b0ec1a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:363","type":"CtForImpl","sourcecode":"for (int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n}"},"variableMap":{"data":"data","length":"hashIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:583","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} else {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"b6587db8-13bc-11e5-bf77-8ffe6f2fb365","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"size","modifications":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:553","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n} else {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"b6587db9-13bc-11e5-bf77-f1a0b34206a4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:254","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n    return false;\n} "},"variableMap":{"this":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:97","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<E>.hasNext()"},"status":-2},{"failures":[],"tindex":"b6587dba-13bc-11e5-bf77-3dbbffba69a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:431","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"current":"left","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:428","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        if ((!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K))) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        } else {\n            return null;\n        }\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[348,349],"tindex":"b6587dbb-13bc-11e5-bf77-adf779b90747","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:125","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof org.apache.commons.collections4.ResettableIterator) {\n    ((org.apache.commons.collections4.ResettableIterator<? extends E>)(java.util.Iterator<? extends E>)).reset();\n} "},"status":-1},{"failures":[],"tindex":"b6587dbc-13bc-11e5-bf77-130d0831b263","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:153","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"variableMap":{"maximumCacheSize":"hashCode","cacheSize":"hash1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:229","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":0},{"failures":[307,350,303,304,305,306,351,352,353,308,354,355,356,309,357,358,359,310,311,360,361,362,363,312,364,365,366,313,367,368,369,314,315,370],"tindex":"b658a4cd-13bc-11e5-bf77-65aef1fd8a31","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:196","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n    throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n} "},"variableMap":{"entry":"next","before":"previous"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:583","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} else {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"b658a4ce-13bc-11e5-bf77-61a21a21eb3c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:205","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"variableMap":{"key1":"key1","entry":"next","key2":"key1","previous":"next","hashCode":"index","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:337","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"b658a4cf-13bc-11e5-bf77-31dee2e58e78","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:373","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.TreeBidiMap.KeyView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[371,372,310,311,373,314,315,374,327,328,332,375,335,336,376,377,378,300,379,380,301,381,337,269,293,294],"tindex":"b658a4d0-13bc-11e5-bf77-b3a4ba9cb243","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(java.lang.Object);\n} "},"variableMap":{"delegateMap":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:184","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n} "},"status":-1},{"failures":[382,383,384,385,386],"tindex":"b658a4d1-13bc-11e5-bf77-294b184fec4f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.CollectionBag:136","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().removeAll(null)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:95","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n    return false;\n} "},"status":-1},{"failures":[387],"tindex":"b6598f32-13bc-11e5-bf77-db1605442b5c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:72","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\")"},"status":-1},{"failures":[388,389,390,391,392,393,394,395,396,397],"tindex":"b6598f33-13bc-11e5-bf77-f951619033a8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:380","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E);\n    final int int = org.apache.commons.collections4.Bag<?>.getCount(E);\n    if ((1 <= int) && (int <= int)) {\n        org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n    } else {\n        org.apache.commons.collections4.Bag<E>.add(E, int);\n    }\n}"},"status":-1},{"failures":[],"tindex":"b659b644-13bc-11e5-bf77-d5ba8d800435","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:262","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"b659b645-13bc-11e5-bf77-bd820d34f7e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:219","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n    throw new java.lang.UnsupportedOperationException(\"add() is not supported on CompositeCollection without a CollectionMutator strategy\");\n} "},"status":-2},{"failures":[],"tindex":"b659b646-13bc-11e5-bf77-17d3ab38c5e8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} "},"variableMap":{"lastUsedIterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:223","type":"CtWhileImpl","sourcecode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":0},{"failures":[],"tindex":"b659b647-13bc-11e5-bf77-f19e3b61d4c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:512","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"leftChild","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[398,399],"tindex":"b659b648-13bc-11e5-bf77-59dc69c0cd24","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:117","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().hashCode()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:92","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().size()"},"status":-1},{"failures":[],"tindex":"b659b649-13bc-11e5-bf77-0336e72ab7d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:828","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[],"tindex":"b659b64a-13bc-11e5-bf77-c538ab29b7eb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:584","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n    return false;\n} "},"variableMap":{"obj":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"status":-2},{"failures":[400,401],"tindex":"b659b64b-13bc-11e5-bf77-090d59bc057d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T> == null) || (org.apache.commons.collections4.Predicate<? super T> == null)) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:750","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<T> java.util.Iterator<T> = java.lang.Iterable<T>.iterator() ; java.util.Iterator<T>.hasNext() ; ) {\n    if (!(org.apache.commons.collections4.Predicate<? super T>.evaluate(java.util.Iterator<T>.next()))) {\n        java.util.Iterator<T>.remove();\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"b659b64c-13bc-11e5-bf77-03c5c2401353","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:167","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<E>emptyOrderedIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.EmptyOrderedIterator:45","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.OrderedIterator<E>)(org.apache.commons.collections4.iterators.EmptyOrderedIterator.org.apache.commons.collections4.OrderedIterator))"},"status":-2},{"failures":[],"tindex":"b659dd5d-13bc-11e5-bf77-dd807aa75b41","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:516","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"b659dd5e-13bc-11e5-bf77-67950d57df0d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1310","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"b659dd5f-13bc-11e5-bf77-97c6049ddb4b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2050","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"b659dd60-13bc-11e5-bf77-b1ed2f8224ec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:135","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1336","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"status":0},{"failures":[71,72,73,74,75,77,32,78,33,84,85,86,87,88,90],"tindex":"b659dd61-13bc-11e5-bf77-9d54c1b9fd83","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1205","type":"CtReturnImpl","sourcecode":"return (java.util.Map<?, ?> == null) || (java.util.Map<?, ?>.isEmpty())"},"variableMap":{"map":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1335","type":"CtTryImpl","sourcecode":"try {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n} catch (final java.lang.ClassCastException ex) {\n    return false;\n} catch (final java.lang.NullPointerException ex) {\n    return false;\n}"},"status":-1},{"failures":[],"tindex":"b659dd62-13bc-11e5-bf77-3ba6f240d0ee","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:135","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:45","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"b65a0473-13bc-11e5-bf77-8d9b518a6ecb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:94","type":"CtIfImpl","sourcecode":"if (char != char) {\n    final int int = char ^ char;\n    return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n} "},"status":-2},{"failures":[402,112,113,114,115,116,117,118,119,123,124,125,126,127,128,129,130,131,132,133,403,134,135,136,137,138,139,140,141,142,143,144,148,149,150,151,152,153,154,155,156,157,158,404,159],"tindex":"b65a0474-13bc-11e5-bf77-a3f4d55db536","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:182","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> , int++) {\n    T[][int] = ((T)(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue()));\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}