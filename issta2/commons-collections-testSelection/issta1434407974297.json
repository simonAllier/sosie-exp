{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":45,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":207,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":546,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":322,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":375,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":631,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":101,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":109,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":171,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":558,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":578,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":74,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":630,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":626,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":452,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":306,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":409,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":87,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":481,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":646,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":372,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":3,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":245,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":554,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":4,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":5,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":267,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":6,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRetainAll":273,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":317,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":123,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":423,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":566,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":124,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":199,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":505,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":613,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":437,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":356,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":321,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":399,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":560,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":561,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":657,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":658,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":515,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":291,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":205,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":144,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":108,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":500,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":364,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":368,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":523,"org.apache.commons.collections4.ListUtilsTest.testLazyList":664,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":186,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":550,"org.apache.commons.collections4.CollectionUtilsTest.addAllForElements":488,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":494,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":33,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":125,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":244,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":492,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":115,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":158,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":89,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":192,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":653,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":142,"org.apache.commons.collections4.CollectionUtilsTest.select":0,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":35,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":352,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":501,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":421,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":577,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":111,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":454,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":147,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":336,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":394,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":131,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":309,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":298,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":52,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":16,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":96,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":614,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":238,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":365,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":569,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":570,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":568,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":172,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveChangesMap":271,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":563,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":8,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":37,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":311,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":299,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":386,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":413,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":155,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":266,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":178,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":606,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":179,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":187,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":555,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":509,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":170,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":656,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":379,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":460,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":107,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":427,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":39,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":202,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":547,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":294,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":544,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":247,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":513,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":310,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":90,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":384,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":167,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":198,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":281,"org.apache.commons.collections4.map.CompositeMapTest.testGet":596,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":256,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":542,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":461,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":232,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":28,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":297,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":533,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":402,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":458,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":30,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":183,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":233,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":652,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":330,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":383,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testSerializeDeserializeThenCompare":589,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":655,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":230,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":231,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":277,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":146,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":471,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":541,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":407,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":296,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":136,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":662,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":334,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":304,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":84,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":363,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":212,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":213,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":211,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":63,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":222,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":532,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":449,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":340,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":153,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":574,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":580,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":374,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":112,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":154,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":441,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":567,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":393,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":585,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":586,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":64,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":559,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":31,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":592,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":161,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":156,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":252,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":435,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":564,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":93,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":240,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":405,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":210,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":209,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":241,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":551,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":584,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":82,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":248,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":357,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":116,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":289,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":165,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":229,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":303,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":472,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":164,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":268,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":629,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":175,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":228,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":312,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":94,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":353,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":528,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":562,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":162,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":88,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":163,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":440,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":462,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":92,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":447,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":534,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":573,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":572,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":571,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":579,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":215,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":595,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":391,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":635,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":643,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":119,"org.apache.commons.collections4.map.LRUMapTest.testClone":640,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":490,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":414,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":137,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":350,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testMultiplePeek":588,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":21,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":645,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":43,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":185,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":621,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":279,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":51,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveAll":257,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":663,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":128,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":237,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":484,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":242,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":648,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":332,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":455,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":265,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":83,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":422,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":320,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":348,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":508,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":315,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":433,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":451,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":496,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":557,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":371,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":376,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":117,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":485,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":446,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":11,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":38,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":253,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":543,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":300,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":504,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":342,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":524,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":552,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":50,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":448,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":608,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":152,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":106,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":159,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":466,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":406,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":113,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":420,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":545,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":290,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":331,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":367,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":619,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":346,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":151,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":150,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":61,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":236,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":287,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":649,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":498,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":442,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":609,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":243,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":590,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":576,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":81,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":14,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":607,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":104,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":467,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":337,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":477,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":390,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":540,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":13,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSinglePeek":587,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":249,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":638,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":426,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":398,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":612,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":25,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":182,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":72,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":189,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":582,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":359,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":583,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveAll":272,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":581,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":208,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":556,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRetainAll":286,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":305,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":489,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":651,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":190,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":647,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":40,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":591,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":32,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":227,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":328,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIsEmpty":246,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":465,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":262,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":184,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":269,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":415,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":122,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":637,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":474,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":318,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":539,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":347,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":325,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":283,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":333,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":219,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":218,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":453,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":410,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":418,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":188,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":274,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":327,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":438,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":110,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":99,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":429,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":516,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":381,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":443,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":661,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":634,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":654,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":127,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":173,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":275,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":71,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":59,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":140,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":141,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":255,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":396,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":430,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":234,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":349,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":225,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":326,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":343,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":169,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":195,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":600,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":261,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":463,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":196,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":44,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":197,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":618,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":102,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":191,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":536,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":408,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsSelfHashCode":464,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":85,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":514,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":120,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":482,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":95,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":259,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":511,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":221,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":641,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":12,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":644,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":220,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":226,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":329,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":323,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":134,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":486,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":26,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":598,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesClearChangesMap":284,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":27,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":345,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":103,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":473,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":491,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":135,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":314,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":366,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":599,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":36,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":360,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":29,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":388,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":502,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":335,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":217,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":216,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":200,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":450,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":549,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":180,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":362,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":235,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":624,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":530,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":114,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":659,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":503,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":487,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":495,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":617,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":616,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":431,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":344,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":68,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":79,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":385,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":67,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":239,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":615,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":69,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":126,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":625,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":66,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":65,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":130,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":295,"org.apache.commons.collections4.functors.AllPredicateTest.allTrue":611,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRetainAll":258,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":77,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":382,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":476,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":214,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":351,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":404,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":434,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":512,"org.apache.commons.collections4.ListUtilsTest.testSelect":1,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":361,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":632,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":53,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":201,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":411,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":610,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":660,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":160,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":168,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":419,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":250,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":57,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":622,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":48,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":537,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":193,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":263,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":194,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":355,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":316,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":469,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":456,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":58,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":527,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":2,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":636,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":55,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":56,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":432,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":506,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":479,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":143,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":369,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":525,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":10,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":166,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":293,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":518,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":358,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":118,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":288,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":531,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":46,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":497,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":593,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":601,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":594,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":18,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":397,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":519,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":70,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":264,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":270,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":62,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":378,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":373,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsSelfHashCode":483,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":47,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":80,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":91,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":522,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":521,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":520,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":526,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":324,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":620,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":260,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":575,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":204,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":400,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":403,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":100,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":203,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":538,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":392,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":439,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":292,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":529,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":313,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":642,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":412,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":145,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":129,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":425,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":139,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":395,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":138,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":181,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":302,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":301,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":97,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":121,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":445,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":565,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapClear":276,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":436,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":389,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":223,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":341,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":206,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":401,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":459,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":17,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":280,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":176,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":424,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":177,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":319,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":553,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":133,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":380,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":354,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":76,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":499,"org.apache.commons.collections4.map.LRUMapTest.testLRU":639,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":98,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":444,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":478,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":493,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":475,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":224,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":597,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":7,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":132,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":174,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionSize":628,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":377,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":468,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":623,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":387,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveAll":285,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":308,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":370,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":254,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":23,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":86,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":510,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":24,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":307,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":457,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":339,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":417,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":338,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":548,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":278,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":650,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":251,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":470,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":148,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":282,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":149,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":535,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":603,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":627,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":42,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":54,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":517,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":105,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":507,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":157,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":602,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":480,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":604,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":605,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":416,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":78,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":633,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":75,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":428},"transformations":[{"failures":[],"tindex":"659f4803-13af-11e5-9efb-992dd3c24a0c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super C> == null) {\n    return false;\n} "},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:174","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final E E = java.util.Iterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":0},{"failures":[],"tindex":"65a03264-13af-11e5-9efb-855845d827bd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"leastIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:355","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<E>.size()) ; int++) {\n    if ((java.util.BitSet.get(int)) == false) {\n        org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n    } \n    if (java.util.BitSet.get(int)) {\n        if (int == (-1)) {\n            int = int;\n            E = java.util.ArrayList<E>.get(int);\n        } else {\n            final E E = java.util.ArrayList<E>.get(int);\n            if ((java.util.Comparator<? super E>) == null) {\n                throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n            } \n            if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n                E = E;\n                int = int;\n            } \n        }\n    } \n}"},"status":0},{"failures":[],"tindex":"65a05975-13af-11e5-9efb-61dfcbb68486","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"status":-2},{"failures":[0,1],"tindex":"65a05976-13af-11e5-9efb-051be0835278","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:925","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super O>.evaluate(O)) {\n    R.add(O);\n} "},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"65a08087-13af-11e5-9efb-61d8c0ef275c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:532","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n} else if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an internal Entry!\"));\n} "},"variableMap":{"root":"child","h":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:509","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"65a08088-13af-11e5-9efb-cf298e9b74c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ArrayStack:107","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.util.EmptyStackException();\n} else {\n    return java.util.ArrayList<E>.get(int);\n}"},"variableMap":{"this":"list","m":"currentIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:142","type":"CtIfImpl","sourcecode":"if ((int) < (int)) {\n    ++(int);\n    return java.util.List<E>.get(((int) - 1));\n} "},"status":-2},{"failures":[],"tindex":"65a08089-13af-11e5-9efb-6554a578de37","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:333","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.getClass().equals(java.util.HashSet.java.util.HashSet)) {\n    java.util.Set<E> = new java.util.HashSet<E>(java.util.List<E>.size());\n} else {\n    try {\n        java.util.Set<E> = java.util.Set<E>.getClass().newInstance();\n    } catch (final java.lang.InstantiationException ie) {\n        java.util.Set<E> = new java.util.HashSet<E>();\n    } catch (final java.lang.IllegalAccessException iae) {\n        java.util.Set<E> = new java.util.HashSet<E>();\n    }\n}"},"status":-2},{"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"tindex":"65a0a79a-13af-11e5-9efb-3b6c6cfe96a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"code","newCapacity":"code","proposedCapacity":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"status":-1},{"failures":[],"tindex":"65a0a79b-13af-11e5-9efb-1b4c4f709260","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:432","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<K>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:398","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<java.util.Map.Entry<K, V>>emptyOrderedIterator();\n} "},"status":-2},{"failures":[45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"tindex":"65a0ceac-13af-11e5-9efb-af558c740be6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:636","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == java.lang.Object) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    org.apache.commons.collections4.map.StaticBucketMap.this.remove(java.lang.Object);\n    return true;\n} "},"variableMap":{"obj":"key","k":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:226","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            return true;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-1},{"failures":[],"tindex":"65a0cead-13af-11e5-9efb-d1ba7f7ae8a1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:359","type":"CtIfImpl","sourcecode":"if ((java.util.List<?>.size()) != org.apache.commons.collections4.list.AbstractLinkedList<E>.(size())) {\n    return false;\n} "},"status":0},{"failures":[62,63,64],"tindex":"65a0ceae-13af-11e5-9efb-2b15679671dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:438","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(java.lang.Object);\n} "},"variableMap":{"delegateMap":"delegateMap","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(java.lang.Object);\n} "},"status":-1},{"failures":[],"tindex":"65a0f5bf-13af-11e5-9efb-7fe8fe2aa300","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2364","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.nextEntryInSubtree(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"subtree":"left","prior":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:759","type":"CtWhileImpl","sourcecode":"while (true) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"65a2f190-13af-11e5-9efb-e55eb565f9e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:123","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>(this , 0)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:588","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubListIterator<E>(org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E> , int)"},"status":-1},{"failures":[65,66,67,68,69],"tindex":"65a2f191-13af-11e5-9efb-5b7dc420a20f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"status":-1},{"failures":[70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111],"tindex":"65a2f192-13af-11e5-9efb-153450b2adbb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[112],"tindex":"65a2f193-13af-11e5-9efb-f3165773b44a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:352","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>).size()) > 0) {\n    throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n} "},"status":-1},{"failures":[],"tindex":"65a2f194-13af-11e5-9efb-5f603d5b416a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:376","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1438","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[45,46,47,48,49,50,51,52,53,54,57],"tindex":"65a318a5-13af-11e5-9efb-512bfd08f2ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:333","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"variableMap":{"object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:230","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"65a318a6-13af-11e5-9efb-2d4b4467e4ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:636","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == java.lang.Object) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    org.apache.commons.collections4.map.StaticBucketMap.this.remove(java.lang.Object);\n    return true;\n} "},"variableMap":{"obj":"value","k":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n        if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n            return true;\n        } \n    }\n} else {\n    for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n            return true;\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"65a318a7-13af-11e5-9efb-53fad2ba1ff6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:991","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE","deletedNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1301","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"status":-2},{"failures":[113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130],"tindex":"65a318a8-13af-11e5-9efb-ab1f7c49729a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:717","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\");\n} "},"variableMap":{"canRemove":"uniqueIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:243","type":"CtIfImpl","sourcecode":"if ((boolean) && (org.apache.commons.collections4.MultiMap<K, C>.containsKey(K))) {\n    throw new java.lang.IllegalArgumentException(\"Duplicate key in uniquely indexed collection.\");\n} "},"status":-1},{"failures":[],"tindex":"65a318a9-13af-11e5-9efb-b39e463faf69","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:448","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (java.util.List<K>.size()))) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + int) + \", Size: \") + (java.util.List<K>.size())));\n} "},"status":0},{"failures":[],"tindex":"65a33fba-13af-11e5-9efb-df3cd74a2630","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"65a33fbb-13af-11e5-9efb-5d0e05ea0551","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"rval","rightChild":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,70,71,72,73,74,147,75,76,77,78,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,103,104,105,106,107,108,109,110,111,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234],"tindex":"65a33fbc-13af-11e5-9efb-dd70862b418f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:458","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"65a366cd-13af-11e5-9efb-1d34bdf3e311","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:762","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"node":"left","right":"right","child":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"65a366ce-13af-11e5-9efb-3b7d32ad83de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"cmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[235,236,237,238,239,240,241,242,243,244],"tindex":"65a4030f-13af-11e5-9efb-29c259124854","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:380","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E);\n    final int int = org.apache.commons.collections4.Bag<?>.getCount(E);\n    if ((1 <= int) && (int <= int)) {\n        org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n    } else {\n        org.apache.commons.collections4.Bag<E>.add(E, int);\n    }\n}"},"status":-1},{"failures":[245,246,247,248,249,250,251,252,36,37,38,39,40,41,42,43,44],"tindex":"65a40310-13af-11e5-9efb-0789ba5513e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:99","type":"CtReturnImpl","sourcecode":"return (java.util.List<E>) != null"},"variableMap":{"nextPermutation":"item"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:117","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E>.isEmpty()) == false) {\n    return false;\n} "},"status":-1},{"failures":[253,254,255,256,257,258,259,260],"tindex":"65a40311-13af-11e5-9efb-19f2f82dabfa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:81","type":"CtReturnImpl","sourcecode":"return java.util.Map.Entry<K, V>.hashCode()"},"status":-1},{"failures":[261,262],"tindex":"65a40312-13af-11e5-9efb-03fd2a0c5f20","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:559","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-1},{"failures":[],"tindex":"65a42a23-13af-11e5-9efb-ade3200ab12b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1754","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getValue() can only be called after next() and before remove()\");\n} "},"variableMap":{"lastReturnedNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1030","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":-2},{"failures":[],"tindex":"65a93334-13af-11e5-9efb-493d5eedc86b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:199","type":"CtWhileImpl","sourcecode":"while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    int[][int] = ++int;\n    ++int;\n}"},"status":0},{"failures":[],"tindex":"65a93335-13af-11e5-9efb-f9115e3d7562","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"length","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:431","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    int += this.java.util.Map<K, V>[][int].size();\n}"},"status":-2},{"failures":[263,264,265,266,267,268,269,270,271,272,273,7,274,275,276,277,278,279,280,281,282,283,3,284,6,285,286,287,16,288,289,290,291,292,293,294,295,296,297,14,298,15,299,300],"tindex":"65a95a46-13af-11e5-9efb-91789d1bbe16","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:407","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>) == null) {\n    java.util.Collection<V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values();\n} "},"status":-1},{"failures":[7,3,11,12,16,14,301,302,20,21],"tindex":"65a95a47-13af-11e5-9efb-733d557ff8c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:489","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.decrementSize()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:601","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[303,304,305,306,307,308],"tindex":"65a95a48-13af-11e5-9efb-f5c246d97658","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtIfImpl","sourcecode":"if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n    if ((int[][int]) <= (int[][(int + int)])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n    } \n} "},"variableMap":{"vUp":"vUp","start1":"i","d":"delta","vDown":"vDown","delta":"start1","end2":"delta","this":"this","i":"start1","end1":"end1","k":"delta","start2":"start2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:205","type":"CtIfImpl","sourcecode":"if ((int[][(int - int)]) <= (int[][int])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n} "},"status":-1},{"failures":[309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372],"tindex":"65a95a49-13af-11e5-9efb-e3b845a179cd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"index","expectedModCount":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:556","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[373,62,374,375,376,377,378,379,380,381,142,63,64,382,383,131,132,384,133,134,135,385,386,136,387,388,389,390,391,137,392,393,394,138,139,395,140,141,396,397,398,399,400],"tindex":"65a9815a-13af-11e5-9efb-1d67418906b5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.size();\n} "},"status":-1},{"failures":[401,402,403,404,405,406,407,408],"tindex":"65a9815b-13af-11e5-9efb-cd17965938ea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:993","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"to"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[309,409,410,411,412,310,413,414,415,416,417,418,317,419,420,421,422,423,424,425,426,427,428,315,429,430,431,311,432,433,434,435,436,437,438,439,440,441,442,443,316,444,312,313,314,445,446,447,448,449,318,450,451,319,320,321,322,452,323,324,453,325,454,326,327,328,329,330,331,332,455,456,457,458,333,334,459,335,336,337,338,339,340,341,342,460,461,343,462,463,464,465,466,344,467,468,345,469,470,346,347,348,349,471,350,351,472,352,473,353,354,355,356,357,358,359,360,361,474,475,476,477,362,363,478,364,365,366,367,368,369,370,371,479,480,372,481,482,483,484,485],"tindex":"65a9815c-13af-11e5-9efb-adb17b9c6534","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"index","listSize":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"status":-1},{"failures":[],"tindex":"65a9a86d-13af-11e5-9efb-711ddac1fe8d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:86","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 1000 ; int++) {\n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n        break;\n    } \n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(java.util.Collection<? extends E>)).decorated();\n    } else if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n    } \n}"},"status":0},{"failures":[],"tindex":"65a9a86e-13af-11e5-9efb-39cac354900a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) > 0) {\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.CursorableLinkedList<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        java.util.Iterator<E>.next();\n        java.util.Iterator<E>.remove();\n    }\n} "},"variableMap":{"this":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:85","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.clear()"},"status":0},{"failures":[],"tindex":"65a9a86f-13af-11e5-9efb-a77413bc7c1b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:853","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"siblingNode","leftChild":"siblingNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1022","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"65a9a870-13af-11e5-9efb-6d4141c46ca7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:96","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> != null) {\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} else {\n    boolean = true;\n}"},"variableMap":{"nextIterator":"i","chainExhausted":"result","currentIterator":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:346","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1);\n    boolean = boolean || boolean;\n}"},"status":-2},{"failures":[],"tindex":"65a9a871-13af-11e5-9efb-dd9ce9d2de46","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:131","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.NULL":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"65a9cf82-13af-11e5-9efb-a3394a0db90e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet<K>(this);\n} "},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"status":0},{"failures":[486,487],"tindex":"65a9cf83-13af-11e5-9efb-d1513c238c84","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:972","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    if (!(org.apache.commons.collections4.Predicate<? super O>.evaluate(O))) {\n        R.add(O);\n    } \n}"},"status":-1},{"failures":[416,336,365],"tindex":"65a9cf84-13af-11e5-9efb-bb76c61731b2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1473","type":"CtTryImpl","sourcecode":"try {\n    final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(java.util.Collection<?>);\n    return org.apache.commons.collections4.BoundedCollection<?>.isFull();\n} catch (final java.lang.IllegalArgumentException ex) {\n    return false;\n}"},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:159","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (!org.apache.commons.collections4.list.AbstractLinkedList<E>.(contains(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"65a9cf85-13af-11e5-9efb-1175c5534503","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:842","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"newNode","rightChild":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[488],"tindex":"65a9cf86-13af-11e5-9efb-5754e62ba62e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:807","type":"CtInvocationImpl","sourcecode":"java.util.Collection<C>.addAll(java.util.Collection<C>)"},"variableMap":{"resultCollection":"collection","collection":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1157","type":"CtInvocationImpl","sourcecode":"java.util.Collection<C>.add(C)"},"status":-1},{"failures":[],"tindex":"65a9cf87-13af-11e5-9efb-91085e4b6a08","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:96","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> != null) {\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} else {\n    boolean = true;\n}"},"status":-2},{"failures":[489,73,76,490,106,109],"tindex":"65a9f698-13af-11e5-9efb-9f66bdfd703c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:185","type":"CtReturnImpl","sourcecode":"return java.lang.Integer == null"},"variableMap":{"position":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:148","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"65a9f699-13af-11e5-9efb-eb6e34961e1c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:333","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"variableMap":{"object":"o"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:160","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.list.AbstractLinkedList<E>.(contains(java.lang.Object))) {\n    return false;\n} "},"status":0},{"failures":[491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,401,551,552,553,554,555,556,557,558,559,560,561,402,562,563,564,403,565,566,567,568,569,570,571,572,573,404,574,575,405,576,577,578,406,407,408,579],"tindex":"65a9f69a-13af-11e5-9efb-7f867ccb7504","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:511","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>)"},"variableMap":{"this":"this","newNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:499","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"65aa1dab-13af-11e5-9efb-15e85b7a2ee6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger != null) {\n    return org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n} "},"status":-2},{"failures":[],"tindex":"65aa1dac-13af-11e5-9efb-f387c6bffef8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:564","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[373,580,581,582,583,584,585,586,391,388],"tindex":"65aa1dad-13af-11e5-9efb-1db5e96cc219","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:217","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = java.lang.Object.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n        case 2 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n        case 1 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n    }\n} "},"status":-1},{"failures":[587,588],"tindex":"65aa1dae-13af-11e5-9efb-554c5deaea8b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:137","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return ;\n} "},"variableMap":{"hasNext":"exhausted"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:82","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    return ;\n} "},"status":-1},{"failures":[],"tindex":"65aa1daf-13af-11e5-9efb-497b53e80513","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1218","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"root":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:696","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[589],"tindex":"65aa1db0-13af-11e5-9efb-f77ded674687","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:590","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"status":-1},{"failures":[303,304,305,306,307,308],"tindex":"65aa44c1-13af-11e5-9efb-8daa59402195","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:190","type":"CtIfImpl","sourcecode":"if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n    int[][int] = int[][(int + 1)];\n} else {\n    int[][int] = (int[][(int - 1)]) + 1;\n}"},"status":-1},{"failures":[],"tindex":"65aa44c2-13af-11e5-9efb-71f65542de36","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1322","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if (java.lang.Object == null) {\n        if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n            return false;\n        } \n    } else {\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n}"},"variableMap":{"it":"it","map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1321","type":"CtTryImpl","sourcecode":"try {\n    while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if (java.lang.Object == null) {\n            if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n                return false;\n            } \n        } else {\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    }\n} catch (final java.lang.ClassCastException ignored) {\n    return false;\n} catch (final java.lang.NullPointerException ignored) {\n    return false;\n}"},"status":0},{"failures":[46,47,48,49,50,590,51,52,53,54],"tindex":"65aa44c3-13af-11e5-9efb-43e76b75b5b7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"hashCode","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:429","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    int += org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.hashCode();\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[494,496,535,537],"tindex":"65aa44c4-13af-11e5-9efb-f18fd4844ba0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:507","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"rval","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:702","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[591,34,592,593,594,595],"tindex":"65aa44c5-13af-11e5-9efb-d79bbb6600b1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:586","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:228","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : org.apache.commons.collections4.set.CompositeSet<E>.getSets()) {\n    if (java.util.Set<E>.contains(java.lang.Object)) {\n        return java.util.Set<E>.remove(java.lang.Object);\n    } \n}"},"status":-1},{"failures":[596,597],"tindex":"65aa6bd6-13af-11e5-9efb-ebdaf3a379e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"status":-1},{"failures":[],"tindex":"65aa6bd7-13af-11e5-9efb-c1ab8aa78587","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:480","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key1","next":"entry","entry":"entry","key2":"key1","previous":"entry","hashCode":"hashCode","key3":"key1","key4":"key1","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:139","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2},{"failures":[598,599,600,601,602,603,604,605,606,607,608,609],"tindex":"65aa6bd8-13af-11e5-9efb-155829c8c0e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtIfImpl","sourcecode":"if ((java.lang.CharSequence == null) || (java.lang.CharSequence == null)) {\n    throw new java.lang.IllegalArgumentException(\"CharSequence must not be null\");\n} "},"variableMap":{"a":"childValue","b":"childKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:993","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) && (!(org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.contains(java.lang.Object)))) {\n    org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, (java.lang.Object == null ? \"null\" : java.lang.Object), ((java.util.Map<?, ?>)(java.lang.Object)), org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>, boolean);\n} else {\n    org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream, org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size());\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.print(\" = \");\n    final int int = org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.indexOf(java.lang.Object);\n    if (int == (-1)) {\n        java.io.PrintStream.print(java.lang.Object);\n    } else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n        java.io.PrintStream.print(\"(this Map)\");\n    } else {\n        java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n    }\n    if (boolean && (java.lang.Object != null)) {\n        java.io.PrintStream.print(' ');\n        java.io.PrintStream.println(java.lang.Object.getClass().getName());\n    } else {\n        java.io.PrintStream.println();\n    }\n}"},"status":-1},{"failures":[388],"tindex":"65aa6bd9-13af-11e5-9efb-5962f9a4d230","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((V) == null) {\n                return true;\n            } \n        case 2 :\n            if ((V) == null) {\n                return true;\n            } \n        case 1 :\n            if ((V) == null) {\n                return true;\n            } \n    }\n} else {\n    switch (int) {\n        case 3 :\n            if (java.lang.Object.equals(V)) {\n                return true;\n            } \n        case 2 :\n            if (java.lang.Object.equals(V)) {\n                return true;\n            } \n        case 1 :\n            if (java.lang.Object.equals(V)) {\n                return true;\n            } \n    }\n}"},"status":-1},{"failures":[],"tindex":"65aa6bda-13af-11e5-9efb-e12281027894","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"from":"newNode","to":"newNode","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1284","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue(), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"65aa92eb-13af-11e5-9efb-dfa21e1a3e8e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:467","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator();\n} "},"status":-2},{"failures":[],"tindex":"65aa92ec-13af-11e5-9efb-237dd0048c12","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:278","type":"CtIfImpl","sourcecode":"if (int != 0) {\n    if ((java.util.BitSet.get(int)) == true) {\n        if (int > 0) {\n            int = -1;\n        } else {\n            int = 1;\n        }\n    } \n    return int;\n} "},"variableMap":{"comparatorIndex":"n","orderingBits":"current","retval":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:157","type":"CtIfImpl","sourcecode":"if (((java.lang.Object == null) && (java.lang.Object == null)) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    return int;\n} "},"status":-2},{"failures":[610,2,3,4,5,6,7,11,12,14,301,302,15,16,20,21],"tindex":"65aa92ed-13af-11e5-9efb-737bb4f5a2ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:481","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n} "},"status":-1},{"failures":[],"tindex":"65aa92ee-13af-11e5-9efb-1907f6de7f31","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"65aab9ff-13af-11e5-9efb-299aa6a03a48","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1122","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends C>.hasNext()) {\n    boolean |= java.util.Collection<C>.add(java.util.Iterator<? extends C>.next());\n}"},"status":-2},{"failures":[491,492,493,494,495,496,497,498,499,500,501,502,503,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,504,526,527,528,529,530,531,532,533,534,535,536,537,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,402,562,563,564,403,565,566,567,568,569,570,571,572,573,404,574,575,401,405,576,577,578,406,407,408,579],"tindex":"65aaba00-13af-11e5-9efb-c79397a535dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:932","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-1},{"failures":[611,612],"tindex":"65ac3fa1-13af-11e5-9efb-a36d238b7797","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1008","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:112","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[613,614,65,66,67,68,69,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638],"tindex":"65ac3fa2-13af-11e5-9efb-bdae8405f392","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:159","type":"CtIfImpl","sourcecode":"if ((int) < (int)) {\n    int = ((int) - (int)) + (int);\n} else if ((int) == (int)) {\n    int = boolean ? int : 0;\n} else {\n    int = (int) - (int);\n}"},"status":-1},{"failures":[2,610],"tindex":"65ac3fa3-13af-11e5-9efb-7160588ac269","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:716","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"65ac3fa4-13af-11e5-9efb-99ba2e5ba3c6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n} "},"status":0},{"failures":[],"tindex":"65ac3fa5-13af-11e5-9efb-e7aea6a50936","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:84","type":"CtIfImpl","sourcecode":"if (V == (this)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot set value to this map entry\");\n} "},"status":-2},{"failures":[],"tindex":"65ac66b6-13af-11e5-9efb-c7ba4518ad07","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:721","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n} "},"variableMap":{"listIterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:144","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator();\n} "},"status":0},{"failures":[],"tindex":"65ac66b7-13af-11e5-9efb-2f56d96c68d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:642","type":"CtDoImpl","sourcecode":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null )"},"status":-2},{"failures":[],"tindex":"65ac66b8-13af-11e5-9efb-cd0367695190","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:152","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>.decorated().isFull()"},"variableMap":{"this":"item"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:117","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E>.isEmpty()) == false) {\n    return false;\n} "},"status":-2},{"failures":[402,403,405,406],"tindex":"65ac66b9-13af-11e5-9efb-c1519aa5562d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:993","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"xFormerParent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1151","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[639,143,640,144,641,642,643,644,76,147],"tindex":"65ac66ba-13af-11e5-9efb-07272cb21177","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:208","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n} "},"variableMap":{"entry":"entry","header":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:193","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    (int)++;\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n        throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n    } \n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n} else if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n} "},"status":-1},{"failures":[137,131,132,133,134,135,136,388,391,78,70,71,645,72,73,74,147,75,76,77,646,161,153,154,647,155,156,157,648,158,159,160,649,175,167,168,650,169,170,171,651,172,173,174,652,192,183,184,653,185,186,187,188,189,190,191,654,208,199,200,655,201,202,203,204,205,206,207,656,111,103,104,657,105,106,107,658,108,109,110,659,229,221,222,660,223,224,225,661,226,227,228,662],"tindex":"65ac8dcb-13af-11e5-9efb-eb1059a7ff55","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1321","type":"CtTryImpl","sourcecode":"try {\n    while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if (java.lang.Object == null) {\n            if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n                return false;\n            } \n        } else {\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    }\n} catch (final java.lang.ClassCastException ignored) {\n    return false;\n} catch (final java.lang.NullPointerException ignored) {\n    return false;\n}"},"status":-1},{"failures":[],"tindex":"65ac8dcc-13af-11e5-9efb-c706a4e6f0ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1017","type":"CtIfImpl","sourcecode":"if (boolean && (java.lang.Object != null)) {\n    java.io.PrintStream.print(' ');\n    java.io.PrintStream.println(java.lang.Object.getClass().getName());\n} else {\n    java.io.PrintStream.println();\n}"},"variableMap":{"debug":"modified","childValue":"key1","out":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:719","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 1) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) {\n    org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"65ac8dcd-13af-11e5-9efb-67da73460dae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtIfImpl","sourcecode":"if ((java.util.List<? extends E>.size()) > (java.util.List<? extends E>.size())) {\n    java.util.List<? extends E> = java.util.List<? extends E>;\n    java.util.List<? extends E> = java.util.List<? extends E>;\n} "},"variableMap":{"list1":"transformers","larger":"transformers","smaller":"transformers","list2":"transformers"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"65ac8dce-13af-11e5-9efb-81f9bb74d333","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"from":"y","to":"y","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:915","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[45,46,47,48,49,50,51,52,53,54,57],"tindex":"65acb4df-13af-11e5-9efb-51e083d4fb29","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:586","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry) == false) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:230","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"65acb4e0-13af-11e5-9efb-5b1c6ff79fa0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"length","currentIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1165","type":"CtIfImpl","sourcecode":"if ((java.lang.Object[] == null) || ((java.lang.Object[].int) < 2)) {\n    throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + int));\n} "},"status":-2},{"failures":[],"tindex":"65acb4e1-13af-11e5-9efb-47efdca44d84","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:133","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<K, V> = this;\n} "},"status":-2},{"failures":[663],"tindex":"65acb4e2-13af-11e5-9efb-27d7af89aa89","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"i","expectedModCount":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:363","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> : java.util.Map<? extends E, org.apache.commons.collections4.Closure<E>>.entrySet()) {\n    org.apache.commons.collections4.Predicate<E>[][int] = org.apache.commons.collections4.functors.EqualPredicate.<E>equalPredicate(java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>>.getKey());\n    org.apache.commons.collections4.Closure<? super E>[][int] = java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>>.getValue();\n    int++;\n}"},"status":-1},{"failures":[],"tindex":"65acdbf3-13af-11e5-9efb-dd7458b38e56","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:378","type":"CtForEachImpl","sourcecode":"for (java.util.Set<E> java.util.Set<E> : java.util.Set<E>[]) {\n    org.apache.commons.collections4.set.CompositeSet<E>.addComposited(java.util.Set<E>);\n}"},"status":-2},{"failures":[664],"tindex":"65acdbf4-13af-11e5-9efb-4ddb7e9e104a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"index","expectedModCount":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.LazyList:126","type":"CtForImpl","sourcecode":"for (int int = int ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(null);\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":98,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}