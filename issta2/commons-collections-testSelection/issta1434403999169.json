{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":61,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":285,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":217,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":146,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":369,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":183,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":254,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":458,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":4,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":290,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":66,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":243,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":113,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":309,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":359,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":509,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":212,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":358,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":556,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":650,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":649,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":566,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapHashCode":675,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":109,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":490,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":491,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":503,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":598,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":492,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":513,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":493,"org.apache.commons.collections4.comparators.ComparatorChainTest.testBadNoopComparatorChain":40,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":248,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":354,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":518,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":326,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":128,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":597,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":612,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":53,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":192,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":638,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":342,"org.apache.commons.collections4.CollectionUtilsTest.get":593,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":437,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":274,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":368,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":169,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":201,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":170,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":523,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":59,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":76,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":615,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":401,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":405,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":29,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":116,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":159,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSerializeDeserializeThenCompare":559,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":625,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":432,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":551,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":223,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":13,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":49,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":578,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":572,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":279,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":391,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":553,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":324,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":78,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":187,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":132,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":195,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":251,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":265,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":377,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":99,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":355,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":637,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":193,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":661,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":481,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":246,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":402,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":457,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":639,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":150,"org.apache.commons.collections4.CollectionUtilsTest.intersection":596,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":85,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":19,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":249,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":151,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":336,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":470,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":495,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":104,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":670,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":316,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":45,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":512,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testObjectHashCodeEqualsContract":646,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":209,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":588,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":210,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":574,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":211,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":312,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":82,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":565,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":276,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":74,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":330,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":463,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":25,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":472,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":37,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":137,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":56,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":314,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":526,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":322,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":258,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":473,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":79,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":536,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":647,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":384,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFullMapCompatibility":414,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":485,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":240,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":529,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":545,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":75,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":419,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":286,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":410,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":547,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":631,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":570,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":242,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":241,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":568,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":33,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":158,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":120,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":444,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":257,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":563,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testSerializeDeserializeThenCompare":645,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":22,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":221,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":237,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":244,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":238,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":239,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":532,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":581,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":126,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":175,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":655,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":453,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":112,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":292,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":663,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":528,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":105,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":569,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":375,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":421,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":400,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":624,"org.apache.commons.collections4.ListUtilsTest.testIndexOf":644,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":450,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":623,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":90,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":280,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":621,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":362,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":381,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":43,"org.apache.commons.collections4.CollectionUtilsTest.union":595,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":148,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":424,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":361,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":618,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":156,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":160,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":425,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":346,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":583,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":264,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":228,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":427,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":673,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":281,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":549,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":462,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":52,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":46,"org.apache.commons.collections4.comparators.ComparatorChainTest.testBadListComparatorChain":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":340,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFullMapCompatibility":418,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":196,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testObjectEqualsSelf":558,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":289,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testEmptyListIteratorIsIndeedEmpty":297,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":428,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":447,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":438,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testEqualsNull":295,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":522,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":98,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":130,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":173,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":508,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":611,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":514,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":610,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":172,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":88,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":97,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":351,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":392,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":14,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":455,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":225,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":305,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":345,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":552,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":454,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":162,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":409,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":496,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":294,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":164,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":107,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":153,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":5,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testWalkForwardAndBack":298,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":317,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":200,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":108,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":176,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":389,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":161,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":311,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":608,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":131,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":486,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":127,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":477,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":573,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":534,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":306,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":614,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":628,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFullMapCompatibility":416,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":213,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":561,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":446,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":475,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":511,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":325,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":186,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":367,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":387,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":461,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":313,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":332,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":426,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":659,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":338,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":0,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":601,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":218,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":449,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":255,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":397,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":226,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":145,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":408,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":459,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":460,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":498,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":471,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":641,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":283,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":671,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":110,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":383,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":468,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":133,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":304,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":364,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":152,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":3,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":50,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":84,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":291,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":235,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":303,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":323,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":284,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":445,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":656,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":404,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":431,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":385,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":144,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":143,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":142,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":520,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":626,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":456,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":654,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":562,"org.apache.commons.collections4.map.LRUMapTest.testReset":122,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":347,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":487,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":252,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":479,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":586,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":58,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":72,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":501,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":651,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEmptyIterator":502,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":378,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":395,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":185,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":262,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":166,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":500,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":622,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":517,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":118,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":155,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":329,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":273,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":123,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":541,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":648,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":65,"org.apache.commons.collections4.map.LinkedMapTest.testReset":157,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":576,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":114,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":440,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":504,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":591,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":67,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":191,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":430,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":62,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":2,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":422,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":199,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":117,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":560,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":247,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":467,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":474,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":96,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":442,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":550,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":28,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":632,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":571,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":515,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":147,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":194,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":363,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":386,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":372,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":182,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":374,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":538,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":32,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":174,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":181,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":180,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":319,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":360,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":343,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":441,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":530,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":575,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":613,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":77,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":640,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":674,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":310,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFullMapCompatibility":412,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":634,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapHashCode":676,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":333,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":653,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":245,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":184,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":231,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":10,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":429,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":278,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":216,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":348,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":230,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":20,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":579,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":86,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":220,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":585,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":531,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":64,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":269,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":270,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":271,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":334,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":250,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":388,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":580,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":93,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":111,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":373,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":582,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":587,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":81,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":635,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":411,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":23,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":34,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":636,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":478,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":577,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":657,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":293,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":398,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":629,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":6,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":94,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":506,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":89,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":134,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":154,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":499,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":423,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":190,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":95,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":234,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":443,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":35,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":370,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":102,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":542,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":413,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":607,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEmptyIterator":505,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":544,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":7,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":203,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":434,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":589,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":519,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":71,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":149,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":103,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":353,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":403,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":469,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":393,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":106,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":546,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":376,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":178,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":177,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":54,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":179,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":599,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":197,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":365,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":592,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":165,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":452,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":417,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":219,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":609,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":168,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":121,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":399,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":619,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":567,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":31,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":660,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":9,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":335,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":433,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":259,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":189,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":188,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":527,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":24,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":69,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":214,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":282,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":163,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":390,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":339,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":394,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":307,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":321,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":543,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":489,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":229,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":603,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":222,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":51,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":318,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":448,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":302,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":600,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":436,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":233,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":349,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":606,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":605,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":129,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":604,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":253,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":480,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":204,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":488,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":124,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":337,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":232,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":406,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":497,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":525,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":616,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":202,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":439,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":521,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":301,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":299,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":627,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":48,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":464,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":466,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":465,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":272,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":483,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":63,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":510,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":516,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":672,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":275,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":171,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":555,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":620,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":300,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":658,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":662,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":371,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":119,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":287,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":564,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":57,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":263,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":484,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":633,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":344,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":524,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":135,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":352,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":356,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":125,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testIterator":296,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":328,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":18,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":267,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":652,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":268,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":669,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":115,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":266,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":668,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":205,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":667,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":224,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":594,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":664,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":665,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":407,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":666,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":341,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":261,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":382,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":60,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":288,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":415,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":215,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":8,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":482,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":167,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":535,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":206,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":327,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":207,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":366,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":101,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":277,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":435,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":1,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":350,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":92,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":557,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":100,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":494,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":87,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":630,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":30,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":256,"org.apache.commons.collections4.map.StaticBucketMapTest.testObjectHashCodeEqualsContract":315,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":27,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":138,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":260,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":420,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":548,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":15,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":396,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":539,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":540,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":42,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":38,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":141,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":380,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":642,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":357,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":379,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":584,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":533,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":198,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":139,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":537,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":140,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":136,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":308,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":476,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":590,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":208,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":73,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":11,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":47,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":17,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":507,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":320,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":451,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":70,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":227,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":236,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":554,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":643,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":68,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":617,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":331,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":602},"transformations":[{"failures":[],"tindex":"23dd909e-13a6-11e5-8438-0f585ed1d76b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:66","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"23dd909f-13a6-11e5-8438-b12676550d36","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1291","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"variableMap":{"node":"node","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY","this":"this","newNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:499","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"23ddb7b0-13a6-11e5-8438-474c55a7cecb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:394","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.ValueView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"23ddb7b1-13a6-11e5-8438-81fa599ceda0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:369","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey()"},"variableMap":{"current":"before"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:217","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) || ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey()"},"status":-2},{"failures":[],"tindex":"23dddec2-13a6-11e5-8438-b3807b37c021","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:380","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    org.apache.commons.collections4.queue.CircularFifoQueue.this.remove();\n    int = -1;\n    return ;\n} "},"variableMap":{"lastReturnedIndex":"mapSize","start":"mapSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:320","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"23dddec3-13a6-11e5-8438-69a6f56de52d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:149","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"23dddec4-13a6-11e5-8438-15c8b8bc3935","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:516","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"current","predecessor":"right","bitIndex":"lengthInBits","child":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"23dddec5-13a6-11e5-8438-07ba377a69fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:106","type":"CtReturnImpl","sourcecode":"return \"ComparableComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:163","type":"CtReturnImpl","sourcecode":"return java.util.Map<E, ? super V>.keySet().hashCode()"},"status":-1},{"failures":[34,35,36,37],"tindex":"23dddec6-13a6-11e5-8438-e117a67c21c8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:203","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    java.util.Map<K, V>.put(org.apache.commons.collections4.map.TransformedMap<K, V>.transformKey(java.util.Map.Entry<? extends K, ? extends V>.getKey()), org.apache.commons.collections4.map.TransformedMap<K, V>.transformValue(java.util.Map.Entry<? extends K, ? extends V>.getValue()));\n}"},"status":-1},{"failures":[],"tindex":"23de05d7-13a6-11e5-8438-d588aae74b88","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:148","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"variableMap":{"end":"start1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:181","type":"CtAssignmentImpl","sourcecode":"int[][(1 + int)] = int"},"status":-2},{"failures":[38,39],"tindex":"23de05d8-13a6-11e5-8438-e5ee275439d4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:216","type":"CtIfImpl","sourcecode":"if (boolean == false) {\n    return false;\n} "},"variableMap":{"removed":"match"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OnePredicate:98","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"status":-1},{"failures":[40,41],"tindex":"23de05d9-13a6-11e5-8438-3b76eddeff2f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"isLocked","beforeFirst":"isLocked"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:267","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    org.apache.commons.collections4.comparators.ComparatorChain<E>.checkChainIntegrity();\n    boolean = true;\n} "},"status":-1},{"failures":[42],"tindex":"23de05da-13a6-11e5-8438-317d0ec2b81c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtIfImpl","sourcecode":"if ((java.util.List<E> == null) || (java.util.List<E> == null)) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} "},"status":-1},{"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,0,66,67,68,1,69,70,71,72,73,3,74,75,76,4,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108],"tindex":"23de05db-13a6-11e5-8438-85ef9213c48b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1352","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.util.Map.Entry<K, V>>.hasNext()) {\n    int += java.util.Iterator<java.util.Map.Entry<K, V>>.next().hashCode();\n}"},"status":-1},{"failures":[109,110,111],"tindex":"23de05dc-13a6-11e5-8438-e5188c833bb6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"size","currentIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:176","type":"CtIfImpl","sourcecode":"if ((T[].int) < (int)) {\n    final java.lang.Class<?> java.lang.Class<?> = T[].getClass().getComponentType();\n    T[] = ((T[])(java.lang.reflect.Array.newInstance(java.lang.Class<?>, int)));\n} "},"status":-1},{"failures":[],"tindex":"23de2ced-13a6-11e5-8438-d5e6d34f45ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:708","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"variableMap":{"current":"tree","tree":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"23de2cee-13a6-11e5-8438-11ef4980d75c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:682","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>.heightRightMinusLeft()) > 0) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>.rotateLeft(), null);\n} "},"variableMap":{"left":"root","this":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:186","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) != null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(java.lang.Object[], org.apache.commons.collections4.list.TreeList.AVLNode<E>.int);\n} "},"status":-2},{"failures":[46,50,56,60,112,82,86,113,92,96,114,115,116,117,118,102,106,119],"tindex":"23de2cef-13a6-11e5-8438-dfac5d9b1b9c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n    return true;\n} "},"status":-1},{"failures":[6,8,9,10,11,12,13,15,16,17,18,120,19,20,22,23,24,25,26,27,29,30,31,32,121,33,122,123,124,125,126,127,128,129,130,63,64,131,65,0,66,132,67,68,133,1,134,135,69,70,136,137,138,139,140,141,142,143,144,145,146,147,2,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,71,72,169,73,3,74,170,75,76,171,4,172,173,77,78,174,175,176,177,178,179,180,181,182,183,184,185,5,186,187,188,189,190,191,192,193,35,194,195,196,197,79,80,198,81,82,83,199,84,85,200,86,201,202,87,88,203,204,205,206,207,208,209,210,211,212,213,214,113,215,216,217,218,219,220,221,222,223,224,225,226,227,228,89,90,229,91,92,93,230,94,95,231,96,232,233,97,98,234,235,236,237,238,239,240,241,242,243,244,245,114,246,247,248,249,250,251,252,253,254,255,256,257,99,100,258,101,102,103,259,104,105,260,106,261,262,107,108,263,264,265,266,267,268,269,270,271,272,273,274,119,275,276,277,278,279,280,281,282],"tindex":"23de2cf0-13a6-11e5-8438-49076cd63039","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:279","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"23de5401-13a6-11e5-8438-fd2e08d6e91d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:109","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>.(hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:282","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.contains(java.util.Iterator<E>.next())) == false) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[283,284,285,286,287,288,289,290,291,292,293,294],"tindex":"23de5402-13a6-11e5-8438-ffd51ea81e37","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:827","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"node":"deletedNode","rightChild":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:964","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"23de7b13-13a6-11e5-8438-8b806bce7608","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1086","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<?> != null) {\n    return java.util.Iterator<?>;\n} "},"variableMap":{"it":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:51","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Iterator<E> java.util.Iterator<E> = ((java.util.Iterator<E>)(java.util.Iterator<? extends E>));\n    return java.util.Iterator<E>;\n} "},"status":-2},{"failures":[],"tindex":"23de7b14-13a6-11e5-8438-49f7361bdd99","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:124","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.hasPrevious();\n} "},"status":0},{"failures":[],"tindex":"23de7b15-13a6-11e5-8438-930eb7fa8f68","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"from":"node","to":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1287","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"23de7b16-13a6-11e5-8438-67c5249872f8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} "},"variableMap":{"o1":"key","o2":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:199","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return true;\n    } \n}"},"status":0},{"failures":[295],"tindex":"23de7b17-13a6-11e5-8438-591a3059c572","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:398","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:114","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[296,297,298],"tindex":"23de7b18-13a6-11e5-8438-913174e69951","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"removed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315],"tindex":"23de7b19-13a6-11e5-8438-05292993cf7d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"cnt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:177","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        int += org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int;\n    }\n}"},"status":-1},{"failures":[316,317,318,110,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,111],"tindex":"23dea22a-13a6-11e5-8438-290cbccefc67","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:171","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.setValue(null)"},"variableMap":{"node":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:352","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-1},{"failures":[385,386,387,388,389,390,391,392,393,394,395,396,397,109,398,399,400,401,402,403,404,405,406,318,407,408,409,366,367,368,369,370,371,372,373,410,382,383,111,411,374,375,376,377,378,379,380,381],"tindex":"23dea22b-13a6-11e5-8438-03aeab9fa644","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1392","type":"CtReturnImpl","sourcecode":"return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false"},"variableMap":{"object":"o1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"23dea22c-13a6-11e5-8438-39cc14e9973a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"status":0},{"failures":[412,413,414,415,416,417,418,419],"tindex":"23dea22d-13a6-11e5-8438-b740085aec65","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:95","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and transformer map must not be null\");\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:181","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-1},{"failures":[42,420,421,422],"tindex":"23dea22e-13a6-11e5-8438-df4051eb85f8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:226","type":"CtAssignmentImpl","sourcecode":"int[][int] = int--"},"status":-1},{"failures":[],"tindex":"23dea22f-13a6-11e5-8438-3b64018bad26","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"length","newCapacity":"length","proposedCapacity":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:363","type":"CtForImpl","sourcecode":"for (int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n}"},"status":-2},{"failures":[],"tindex":"23dec940-13a6-11e5-8438-efe2f7c50103","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"value","index":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:569","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.entrySet()) {\n    final E E = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey();\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue();\n    int += (E == null ? 0 : E.hashCode()) ^ (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int);\n}"},"status":-2},{"failures":[],"tindex":"23df3e71-13a6-11e5-8438-011a2f1ca502","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:194","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    if (java.lang.Object == (this)) {\n        return true;\n    } \n    return (java.lang.Object == (this)) || (org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().equals(java.lang.Object));\n}"},"variableMap":{"this":"item","lock":"obj","object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:134","type":"CtIfImpl","sourcecode":"if (java.util.Collection<E>.contains(java.lang.Object)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"23e11332-13a6-11e5-8438-092d74ce6179","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n} "},"status":-2},{"failures":[423],"tindex":"23e11333-13a6-11e5-8438-335d5a3fe79a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:249","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    final K K = java.util.Map.Entry<? extends K, ? extends V>.getKey();\n    final boolean boolean = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.containsKey(K);\n    org.apache.commons.collections4.map.ListOrderedMap<K, V>.put(int, java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n    if (!boolean) {\n        int++;\n    } else {\n        int = org.apache.commons.collections4.map.ListOrderedMap<K, V>.(indexOf(java.util.Map.Entry<? extends K, ? extends V>.getKey())) + 1;\n    }\n}"},"status":-1},{"failures":[],"tindex":"23e11334-13a6-11e5-8438-913f31627cb6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:212","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    } else {\n        java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n    }\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-2},{"failures":[],"tindex":"23e11335-13a6-11e5-8438-d51a5251ba70","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:578","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"index2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:88","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-2},{"failures":[424,425,260],"tindex":"23e11336-13a6-11e5-8438-ff2003a480e0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1105","type":"CtForImpl","sourcecode":"for (int int = int ; int > 0 ; int--) {\n    org.apache.commons.collections4.map.Flat3Map<K, V>.put(((K)(java.io.ObjectInputStream.readObject())), ((V)(java.io.ObjectInputStream.readObject())));\n}"},"status":-1},{"failures":[],"tindex":"23e11337-13a6-11e5-8438-cbf53f0bba03","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:274","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext() ; ) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    if ((java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get()) == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } \n}"},"status":-2},{"failures":[426,427,428,429,430,431,432],"tindex":"23e11338-13a6-11e5-8438-2998ec0ccef9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:384","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    return true;\n} "},"status":-1},{"failures":[433,434,385,386,387,388,389,390,391,392,435,436,437,438,439,440,393,394,406,396,397,109,399,400,401,402,403,404,405,355,354,332,336,349,351,352,353,322,363,366,367,368,369,370,371,372,373,441,442,443,444,445,446,381,382,383,111,374,375,376,377,378,379,380],"tindex":"23e11339-13a6-11e5-8438-ffad5acd3d82","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:556","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[],"tindex":"23e13a4a-13a6-11e5-8438-71f195593fd8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"largestKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:115","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int[].int) ; int++) {\n    if ((((boolean[][int]) && (int < ((int[].int) - 1))) && ((int[][int]) > (int[][(int + 1)]))) || (((!(boolean[][int])) && (int > 0)) && ((int[][int]) > (int[][(int - 1)])))) {\n        if ((int[][int]) > int) {\n            int = int[][int];\n            int = int;\n        } \n    } \n}"},"status":-2},{"failures":[],"tindex":"23e13a4b-13a6-11e5-8438-019f849a5422","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:1001","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.IteratorUtils.org.apache.commons.collections4.IteratorUtils.toList(java.util.Iterator<? extends E>, 10)"},"status":-2},{"failures":[106],"tindex":"23e13a4c-13a6-11e5-8438-e5fd27ac3dda","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    return false;\n} "},"variableMap":{"mut":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:270","type":"CtIfImpl","sourcecode":"if (java.lang.Object.equals(V)) {\n    return true;\n} "},"status":-1},{"failures":[447,448,449,450,451,452,453,454,455,456,457],"tindex":"23e13a4d-13a6-11e5-8438-31bef9333ca2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:504","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeInt(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue().int)"},"status":-1},{"failures":[156],"tindex":"23e13a4e-13a6-11e5-8438-7bbff5ca701a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:96","type":"CtReturnImpl","sourcecode":"return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)"},"variableMap":{"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"i","x":"i","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:168","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.java.lang.Object)) {\n    return int;\n} "},"status":-1},{"failures":[325,327,329,333,334,335,336,337,338,339,340,341,344,345,346,348,443],"tindex":"23e13a4f-13a6-11e5-8438-d199b2a4bf18","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-1},{"failures":[458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478],"tindex":"23e13a50-13a6-11e5-8438-c9083c73a9e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:251","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.set.CompositeSet<java.util.Map.Entry<K, V>>.addComposited(java.util.Map<K, V>[][int].entrySet());\n}"},"status":-1},{"failures":[],"tindex":"23e13a51-13a6-11e5-8438-0954549e8f2f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:251","type":"CtIfImpl","sourcecode":"if ((java.util.List<java.util.Comparator<E>>.size()) == 0) {\n    throw new java.lang.UnsupportedOperationException(\"ComparatorChains must contain at least one Comparator\");\n} "},"status":-2},{"failures":[],"tindex":"23e1d692-13a6-11e5-8438-07e5822ca30e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:380","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    org.apache.commons.collections4.queue.CircularFifoQueue.this.remove();\n    int = -1;\n    return ;\n} "},"variableMap":{"lastReturnedIndex":"size","start":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:400","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)).purge(java.lang.ref.Reference<?>)) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    (this.int)--;\n    return ;\n} "},"status":-2},{"failures":[],"tindex":"23e1fda3-13a6-11e5-8438-6322b352c177","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hash1","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:147","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = java.lang.Object.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n        case 2 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n        case 1 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n    }\n} "},"status":-2},{"failures":[],"tindex":"23e1fda4-13a6-11e5-8438-314833545c13","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:627","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap.this.containsKey(java.lang.Object)"},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:238","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, java.lang.Object> java.util.Map.Entry<K, java.lang.Object> : java.util.Set<java.util.Map.Entry<K, java.lang.Object>>) {\n    if (((java.util.Collection<V>)(java.util.Map.Entry<K, java.lang.Object>.getValue())).contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-2},{"failures":[479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500],"tindex":"23e1fda5-13a6-11e5-8438-69be307e8eae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:534","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an internal Entry!\"));\n} "},"variableMap":{"h":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:482","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-1},{"failures":[501,502,503,504,505,506],"tindex":"23e1fda6-13a6-11e5-8438-117f27fd203c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:132","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[],"tindex":"23e1fda7-13a6-11e5-8438-f17e9d7da5b4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"status":0},{"failures":[],"tindex":"23e1fda8-13a6-11e5-8438-bf5d2fe7a764","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"status":0},{"failures":[389,399,400,401,402,404,396,507,359,361,320,370,374,375,376,377,379,382,384],"tindex":"23e1fda9-13a6-11e5-8438-bf71a53dce7a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:643","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    return 0;\n} "},"variableMap":{"integerObject":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:135","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    return int;\n} "},"status":-1},{"failures":[42,420,508,421,422,509],"tindex":"23e1fdaa-13a6-11e5-8438-f952a0308d51","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:205","type":"CtIfImpl","sourcecode":"if ((int[][(int - int)]) <= (int[][int])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n} "},"variableMap":{"vUp":"vUp","start1":"d","vDown":"vDown","delta":"start1","end2":"end2","this":"this","i":"end2","end1":"end1","k":"delta","start2":"delta"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:212","type":"CtForImpl","sourcecode":"for (int int = int - int ; int <= (int + int) ; int += 2) {\n    final int int = (int + int) - int;\n    if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n        int[][int] = (int[][(int + 1)]) - 1;\n    } else {\n        int[][int] = int[][(int - 1)];\n    }\n    int int = (int[][int]) - 1;\n    int int = ((int - int) + int) - int;\n    while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = int--;\n        int--;\n    }\n    if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n        if ((int[][int]) <= (int[][(int + int)])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"23e224bb-13a6-11e5-8438-d9bd73f6d804","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:684","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"23e224bc-13a6-11e5-8438-172fbfb1a9e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"23e224bd-13a6-11e5-8438-d9c2de9c372f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtIfImpl","sourcecode":"if (java.util.List<T> == null) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} "},"status":-2},{"failures":[510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,479,482,484,485,486,488,489,530,531,532,533,534,535,536,537,538,490,495,497,498,499],"tindex":"23e224be-13a6-11e5-8438-fde26795962c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:115","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    return false;\n} "},"status":-1},{"failures":[539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,469,470,556,471,472,474,475,557,476,477,478],"tindex":"23e224bf-13a6-11e5-8438-6509f2e948c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"status":-1},{"failures":[558,559],"tindex":"23e224c0-13a6-11e5-8438-09edddc24655","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:115","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"status":-1},{"failures":[42,420,508,421,422,509],"tindex":"23e224c1-13a6-11e5-8438-05d0ff3bdf95","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtIfImpl","sourcecode":"if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n    if ((int[][int]) <= (int[][(int + int)])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n    } \n} "},"variableMap":{"vUp":"vDown","start1":"start2","d":"start1","vDown":"vUp","delta":"end2","end2":"delta","this":"this","i":"end2","end1":"i","k":"i","start2":"start1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:205","type":"CtIfImpl","sourcecode":"if ((int[][(int - int)]) <= (int[][int])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n} "},"status":-1},{"failures":[],"tindex":"23e224c2-13a6-11e5-8438-8163245963f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY","index":"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n} "},"status":-2},{"failures":[43,44,560,45,46,47,561,49,50,51,52,562,53,54,563,55,56,57,564,59,60,61,62,565,63,64,131,65,0,66,132,68,1,69,70,566,71,72,169,73,3,74,170,76,4,77,78,567,79,80,198,81,82,83,199,85,86,87,88,568,89,90,229,91,92,93,230,95,96,97,98,569,570,571,572,573,116,574,575,576,117,577,578,579,99,100,101,102,103,105,106,107,108],"tindex":"23e224c3-13a6-11e5-8438-a109c1aacd91","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1321","type":"CtTryImpl","sourcecode":"try {\n    while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if (java.lang.Object == null) {\n            if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n                return false;\n            } \n        } else {\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    }\n} catch (final java.lang.ClassCastException ignored) {\n    return false;\n} catch (final java.lang.NullPointerException ignored) {\n    return false;\n}"},"status":-1},{"failures":[580],"tindex":"23e24bd4-13a6-11e5-8438-d518f7cf40fb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:104","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ((org.apache.commons.collections4.Transformer<I, O>)(org.apache.commons.collections4.Transformer<? super I, ? extends O> == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer() : org.apache.commons.collections4.Transformer<? super I, ? extends O>));\n} "},"status":-1},{"failures":[],"tindex":"23e24bd5-13a6-11e5-8438-3d2235dc3a38","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"i","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"23e24bd6-13a6-11e5-8438-d90e00a4dd16","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:250","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.lockChain()"},"variableMap":{"this":"chain"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:151","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Set<E>.iterator());\n}"},"status":-2},{"failures":[],"tindex":"23e24bd7-13a6-11e5-8438-d5073303c1c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:636","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == java.lang.Object) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    org.apache.commons.collections4.map.StaticBucketMap.this.remove(java.lang.Object);\n    return true;\n} "},"variableMap":{"obj":"object","k":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"23e24bd8-13a6-11e5-8438-0d16b555bf03","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2050","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"23e24bd9-13a6-11e5-8438-d3e472f6d97e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:986","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.println(\"{\")"},"variableMap":{"out":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:213","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.util.List<E>.remove(java.lang.Object);\n} "},"status":-2},{"failures":[581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599],"tindex":"23e24bda-13a6-11e5-8438-f510451cad2e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:442","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n} else {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n}"},"status":-1},{"failures":[],"tindex":"23e272eb-13a6-11e5-8438-9d5cdb79b494","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:757","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[600,288,290,292,293,294,601],"tindex":"23e272ec-13a6-11e5-8438-312d53c0ed10","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:854","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"leftChild":"rval","node":"rval","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-1},{"failures":[10,11,16,18,602,24,25,30,32,603,604,605,606,607,608,609,52,610,611,612,613,614,615,616,617,618,619,620,621,622,62,623,624,625,112,626,627,628,629,630,631,127,128,129,70,142,143,145,2,148,151,152,153,154,155,160,165,166,167,78,180,181,183,5,186,189,190,191,192,193,194,195,196,88,209,210,212,113,215,218,219,220,221,222,225,226,227,98,240,241,243,114,246,249,250,251,252,253,632,633,634,574,578,635,636,637,118,638,639,640,641,642,643,254,255,256,108,269,270,272,119,275,278,279,280,281,282],"tindex":"23e272ed-13a6-11e5-8438-477b7b46f9b2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"23e272ee-13a6-11e5-8438-7f95223a339c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:897","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"currentNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1291","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"status":-2},{"failures":[],"tindex":"23e272ef-13a6-11e5-8438-23d287c84244","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"bitIndex","currentIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:564","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[644],"tindex":"23e272f0-13a6-11e5-8438-939976f0c337","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:510","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.List<E>.size()) ; int++) {\n    final E E = java.util.List<E>.get(int);\n    if (org.apache.commons.collections4.Predicate<E>.evaluate(E)) {\n        return int;\n    } \n}"},"variableMap":{"predicate":"predicate","list":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:509","type":"CtIfImpl","sourcecode":"if ((java.util.List<E> != null) && (org.apache.commons.collections4.Predicate<E> != null)) {\n    for (int int = 0 ; int < (java.util.List<E>.size()) ; int++) {\n        final E E = java.util.List<E>.get(int);\n        if (org.apache.commons.collections4.Predicate<E>.evaluate(E)) {\n            return int;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"23e272f1-13a6-11e5-8438-7956c47f7e74","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtIfImpl","sourcecode":"if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n    if ((int[][int]) <= (int[][(int + int)])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n    } \n} "},"variableMap":{"vUp":"vDown","start1":"start1","d":"start1","vDown":"vDown","delta":"start2","end2":"offset","this":"this","i":"start2","end1":"start2","k":"end1","start2":"delta"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:186","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int += 2) {\n    final int int = int + int;\n    if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n        int[][int] = int[][(int + 1)];\n    } else {\n        int[][int] = (int[][(int - 1)]) + 1;\n    }\n    int int = int[][int];\n    int int = ((int - int) + int) - int;\n    while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = ++int;\n        ++int;\n    }\n    if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n        if ((int[][(int - int)]) <= (int[][int])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":0},{"failures":[],"tindex":"23e29a02-13a6-11e5-8438-89ebbd70f89e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[406,357,359,321,381],"tindex":"23e29a03-13a6-11e5-8438-3109e7d2ddac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:238","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.removeNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"23e29a04-13a6-11e5-8438-f1ccb9e46888","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1629","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getValue()"},"variableMap":{"current":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:428","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        if ((!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K))) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        } else {\n            return null;\n        }\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[413,645,646],"tindex":"23e29a05-13a6-11e5-8438-afbd7edce200","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} "},"variableMap":{"o1":"object","o2":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:116","type":"CtIfImpl","sourcecode":"if (java.lang.Object.getClass().equals(java.lang.Object.getClass())) {\n    final org.apache.commons.collections4.comparators.ReverseComparator<?> org.apache.commons.collections4.comparators.ReverseComparator<?> = ((org.apache.commons.collections4.comparators.ReverseComparator<?>)(java.lang.Object));\n    return java.util.Comparator<E>.equals(org.apache.commons.collections4.comparators.ReverseComparator<?>.java.util.Comparator<?>);\n} "},"status":-1},{"failures":[647,648],"tindex":"23e29a06-13a6-11e5-8438-e97d485a0824","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:380","type":"CtWhileImpl","sourcecode":"while (java.lang.ref.Reference<?> != null) {\n    org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purge(java.lang.ref.Reference<?>);\n    java.lang.ref.Reference<?> = java.lang.ref.ReferenceQueue<java.lang.Object>.poll();\n}"},"status":-1},{"failures":[],"tindex":"23e29a07-13a6-11e5-8438-d5cefdc824ba","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:970","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY","deletedNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:506","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[649,650,651,519,520,652,653,654,655,521,522,656,523,524,525,526,657,527,658,528,659,660,529,479,661,662,663,664,665,666,667,668,669,480,670,671,481,482,672,673,483,484,485,486,487,674],"tindex":"23e29a08-13a6-11e5-8438-31537bc48b79","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"allNull","beforeFirst":"allNull"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:99","type":"CtIfImpl","sourcecode":"if (char != 0) {\n    boolean = false;\n} "},"status":-1},{"failures":[510,511,512,513,514,675,516,519,521,522,523,524,525,657,527,528,529,479,481,485,486,488,489,530,531,532,533,534,676,536,537,538,490,494,498,499],"tindex":"23e2c119-13a6-11e5-8438-69b20c1b520e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:694","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} "},"status":-1},{"failures":[],"tindex":"23e2c11a-13a6-11e5-8438-4bc3804977d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"length","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"status":-2},{"failures":[],"tindex":"23e2c11b-13a6-11e5-8438-8199e9be3c92","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n} else {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"23e2c11c-13a6-11e5-8438-25acc3306477","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"variableMap":{"node":"currentNode","this":"this","rval":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":0},{"failures":[],"tindex":"23e2c11d-13a6-11e5-8438-0903e573961e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"leastIndex","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:360","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    int = int;\n    E = java.util.ArrayList<E>.get(int);\n} else {\n    final E E = java.util.ArrayList<E>.get(int);\n    if ((java.util.Comparator<? super E>) == null) {\n        throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n    } \n    if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n        E = E;\n        int = int;\n    } \n}"},"status":-2},{"failures":[],"tindex":"23e2c11e-13a6-11e5-8438-dbb5a4ca9d9a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:810","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[],"tindex":"23e2c11f-13a6-11e5-8438-e11ba15e67ea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n    throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:86","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 1000 ; int++) {\n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n        break;\n    } \n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(java.util.Collection<? extends E>)).decorated();\n    } else if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n    } \n}"},"status":0},{"failures":[],"tindex":"23e2e830-13a6-11e5-8438-6318538ddb5b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:808","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"parent":"this","modCount":"length","expectedModCount":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    final int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) * 2;\n    if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n    } \n} "},"status":-2},{"failures":[],"tindex":"23e2e831-13a6-11e5-8438-bd8639595920","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtIfImpl","sourcecode":"if (java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and closure map must not be null\");\n} "},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}