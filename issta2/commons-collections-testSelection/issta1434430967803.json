{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":6,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":195,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":143,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":218,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":421,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":168,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":210,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":328,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":470,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":482,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":384,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":77,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":93,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":99,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":358,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":134,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":287,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":286,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":493,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":62,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":109,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":63,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":472,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":505,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":366,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":346,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":188,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":407,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":415,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":508,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":208,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":295,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":194,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":136,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":209,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":348,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":442,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":85,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":257,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":396,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":461,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":20,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":244,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":155,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":446,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":495,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":227,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testFullIterator":324,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":429,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":212,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":354,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":388,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":439,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":228,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":414,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":306,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":408,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":18,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":53,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":465,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":272,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":385,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":443,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":273,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":416,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":171,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":251,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":386,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":374,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":65,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":101,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":123,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":233,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":313,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":504,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsContract":513,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":151,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":356,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":223,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":357,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":473,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":35,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":75,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":277,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":207,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":506,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":255,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":449,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":103,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":337,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":81,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":42,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":284,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":298,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":111,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":176,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":496,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":165,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":57,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":382,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":305,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":0,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":402,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":220,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":322,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":450,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":383,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":263,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":250,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":253,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":363,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":5,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":282,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":291,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":329,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":308,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":302,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":340,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":234,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":97,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":490,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":395,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":38,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":394,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":180,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":392,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":430,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIteratorExhausted":319,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":94,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":149,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":278,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":373,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":435,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":351,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":197,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":279,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":131,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":150,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":269,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":316,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":431,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":157,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":34,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":73,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":116,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":127,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":499,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":355,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testReset":318,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":3,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":112,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":488,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":474,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":163,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":293,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":96,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":162,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":187,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":161,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":173,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":186,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":463,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":158,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":159,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":494,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":160,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":14,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":379,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":130,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":498,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testIterator":323,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":66,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":331,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":199,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":345,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":235,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":376,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":219,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":175,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":236,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":441,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":25,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":147,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":58,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":107,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":365,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":222,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":335,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":16,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":347,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":448,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":399,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":153,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":105,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":117,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":489,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":17,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":403,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":246,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":41,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":303,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":125,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":320,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":462,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":360,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":422,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":380,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":371,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":336,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":68,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":102,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":418,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":144,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":314,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":13,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":375,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":74,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":170,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":206,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":4,"org.apache.commons.collections4.functors.AllPredicateTest.singletonCollectionToGetInstance":264,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":12,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":294,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":370,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":290,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":369,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":397,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":43,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":48,"org.apache.commons.collections4.ClosureUtilsTest.testNopClosure":451,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":59,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":15,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":389,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":487,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":49,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":193,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":204,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":270,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":288,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testDecorateFactory":510,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":475,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":201,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":70,"org.apache.commons.collections4.CollectionUtilsTest.countMatches":434,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":113,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":393,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":119,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":378,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":447,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":478,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":225,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":481,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":80,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":453,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":406,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":196,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":98,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":372,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":7,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":169,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":86,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":104,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":454,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":79,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIsEmpty":110,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testEmptyIterator":275,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":40,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":409,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":332,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":221,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":457,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":249,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":353,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":27,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":28,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":256,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":217,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":216,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":260,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":215,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":26,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":224,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":509,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":164,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":211,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":317,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":417,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":468,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":24,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":411,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":514,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":120,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":47,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":241,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":428,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":132,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":183,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":252,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":76,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":362,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":338,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":480,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":39,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":424,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":425,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":121,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":387,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":516,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":182,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":511,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":167,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":412,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":243,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":142,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":413,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":456,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":108,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":226,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":299,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":471,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":330,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":491,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":400,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":464,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":184,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":237,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":179,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":69,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":377,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":405,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":185,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":133,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":437,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":88,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":146,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":238,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":289,"org.apache.commons.collections4.CollectionUtilsTest.addAllForEnumeration":334,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":203,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":231,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":477,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":100,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":89,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":502,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":438,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":214,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":213,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":189,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":343,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":200,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSimpleSerialization":515,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":148,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":361,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":262,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":352,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":503,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsSelfHashCode":512,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":274,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":259,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":304,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":240,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":122,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":232,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":485,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":501,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":404,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":445,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":300,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":254,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":484,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":432,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":198,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":126,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":92,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":190,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":61,"org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testFullIterator":325,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":145,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":276,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":364,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":156,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":166,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":114,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":31,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":271,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":11,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":460,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":140,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":139,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":138,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":367,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":52,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":390,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":36,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":60,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":29,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":30,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":124,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":95,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":67,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":297,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":349,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":292,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":10,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":476,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":8,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":326,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":398,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":33,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd":341,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":268,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":154,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":283,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicate":281,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":55,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":426,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":479,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":452,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":315,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":427,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":72,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":285,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":391,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":9,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":486,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":497,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":339,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":301,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":307,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":37,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":1,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":90,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":192,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":469,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":191,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":56,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":410,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":129,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":296,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":248,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":46,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalSet":342,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":312,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":51,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":84,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":50,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":466,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":309,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":310,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd":344,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":137,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":311,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":128,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":181,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":440,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":82,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":327,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":359,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":239,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":54,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":265,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":202,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":266,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":267,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":118,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":230,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":321,"org.apache.commons.collections4.map.LRUMapTest.testLRU":177,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":467,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":19,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testHashCode":333,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":78,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":135,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":64,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":229,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":172,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":71,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":401,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":258,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":423,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":458,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":280,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":44,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":245,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":444,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":178,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":492,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":45,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":419,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":91,"org.apache.commons.collections4.ListUtilsTest.testRetainAll":500,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":115,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":141,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":459,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":22,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":106,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":205,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":152,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":242,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":247,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":174,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":436,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":368,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":381,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":420,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":261,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":350,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":483,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":433,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":455,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":507},"transformations":[{"failures":[0,1,2,3,4],"tindex":"ee6efaf7-13e4-11e5-aab7-efb5558b2068","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1057","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1068","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"tindex":"ee6f2208-13e4-11e5-aab7-292fd882250e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"ee6f4919-13e4-11e5-aab7-4d08dd4231cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[44,45],"tindex":"ee6f491a-13e4-11e5-aab7-81a5d8255bbf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"end1","lengthInBits":"i","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"end2","otherOffsetInBits":"start2","otherLengthInBits":"start2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:264","type":"CtIfImpl","sourcecode":"if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n    ++int;\n} else {\n    if ((int - int) > (int - int)) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    } else {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    }\n}"},"status":-2},{"failures":[],"tindex":"ee6f491b-13e4-11e5-aab7-8b34055b6dc1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:376","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1350","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[6,8,9,11,12,13,16,18,21,22,31],"tindex":"ee6f491c-13e4-11e5-aab7-318d726bf325","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:229","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"tindex":"ee6f491d-13e4-11e5-aab7-fb1e88905cd8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:502","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isExternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an external Entry!\"));\n} "},"variableMap":{"h":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:597","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"ee6f702e-13e4-11e5-aab7-530fca27830d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1167","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"ee6f702f-13e4-11e5-aab7-c7924f5ab0be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:558","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key3","next":"entry","entry":"next","key2":"key3","key5":"key1","hashCode":"hashCode","key3":"key2","key4":"key3","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:268","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"ee6f7030-13e4-11e5-aab7-6ff03629f6d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:104","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ((org.apache.commons.collections4.Transformer<I, O>)(org.apache.commons.collections4.Transformer<? super I, ? extends O> == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer() : org.apache.commons.collections4.Transformer<? super I, ? extends O>));\n} "},"variableMap":{"size":"length","defaultTransformer":"defaultTransformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:65","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super I>[].int) == 0) {\n    return ((org.apache.commons.collections4.Transformer<I, O>)(org.apache.commons.collections4.Transformer<? super I, ? extends O> == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer() : org.apache.commons.collections4.Transformer<? super I, ? extends O>));\n} "},"status":-2},{"failures":[71,72],"tindex":"ee6f9741-13e4-11e5-aab7-bbb2fb8d88e3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:186","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.PredicatedMap<K, V>.validate(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-1},{"failures":[73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90],"tindex":"ee6f9742-13e4-11e5-aab7-3101e2f11570","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:185","type":"CtReturnImpl","sourcecode":"return java.lang.Integer == null"},"variableMap":{"position":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:254","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"ee6f9743-13e4-11e5-aab7-3d3e3610440e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:970","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:964","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"ee6f9744-13e4-11e5-aab7-37d07ca0781e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:94","type":"CtIfImpl","sourcecode":"if (char != char) {\n    final int int = char ^ char;\n    return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n} "},"status":-2},{"failures":[60,62,63,64,65,66,67,68,69,70],"tindex":"ee6f9745-13e4-11e5-aab7-cf6c811e27ad","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:502","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isExternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an external Entry!\"));\n} "},"variableMap":{"h":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:509","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"ee6fbe56-13e4-11e5-aab7-afbdd4f64083","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"dataElement":"dataElement","deletedNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[91,92,93,94,95],"tindex":"ee703387-13e4-11e5-aab7-dd1811a2dca1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:185","type":"CtReturnImpl","sourcecode":"return java.lang.Integer == null"},"variableMap":{"position":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:238","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.removeNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"ee703388-13e4-11e5-aab7-9ba90f1d09aa","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:397","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    return true;\n} "},"variableMap":{"iterator":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:94","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n        return false;\n    } \n}"},"status":0},{"failures":[],"tindex":"ee703389-13e4-11e5-aab7-219223465042","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:135","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1335","type":"CtTryImpl","sourcecode":"try {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n} catch (final java.lang.ClassCastException ex) {\n    return false;\n} catch (final java.lang.NullPointerException ex) {\n    return false;\n}"},"status":0},{"failures":[45,44,96,97,98,99],"tindex":"ee70338a-13e4-11e5-aab7-55865bfef8bd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:212","type":"CtForImpl","sourcecode":"for (int int = int - int ; int <= (int + int) ; int += 2) {\n    final int int = (int + int) - int;\n    if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n        int[][int] = (int[][(int + 1)]) - 1;\n    } else {\n        int[][int] = int[][(int - 1)];\n    }\n    int int = (int[][int]) - 1;\n    int int = ((int - int) + int) - int;\n    while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = int--;\n        int--;\n    }\n    if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n        if ((int[][int]) <= (int[][(int + int)])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n        } \n    } \n}"},"variableMap":{"start1":"end1","d":"end1","offset":"delta","vDown":"vDown","delta":"end1","this":"this","sequence1":"sequence2","sequence2":"sequence2","vUp":"vUp","equator":"equator","end2":"delta","end1":"end2","start2":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:186","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int += 2) {\n    final int int = int + int;\n    if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n        int[][int] = int[][(int + 1)];\n    } else {\n        int[][int] = (int[][(int - 1)]) + 1;\n    }\n    int int = int[][int];\n    int int = ((int - int) + int) - int;\n    while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = ++int;\n        ++int;\n    }\n    if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n        if ((int[][(int - int)]) <= (int[][int])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[0,1,2,3,4],"tindex":"ee70338b-13e4-11e5-aab7-1d67d1aff0a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"variableMap":{"node":"siblingNode","this":"this","rval":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1054","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116],"tindex":"ee70338c-13e4-11e5-aab7-61820cb44359","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:117","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E>.isEmpty()) == false) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"ee70338d-13e4-11e5-aab7-65ea3925c764","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"i":"length","object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"status":-2},{"failures":[],"tindex":"ee705a9e-13e4-11e5-aab7-8ba10932aff9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:467","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:398","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<java.util.Map.Entry<K, V>>emptyOrderedIterator();\n} "},"status":-2},{"failures":[],"tindex":"ee705a9f-13e4-11e5-aab7-677cdd0c78ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1139","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"ee705aa0-13e4-11e5-aab7-f738de093e06","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:380","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    org.apache.commons.collections4.queue.CircularFifoQueue.this.remove();\n    int = -1;\n    return ;\n} "},"variableMap":{"lastReturnedIndex":"oldCapacity","start":"oldCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    return ;\n} "},"status":-2},{"failures":[],"tindex":"ee705aa1-13e4-11e5-aab7-735068134a2d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:231","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"ee705aa2-13e4-11e5-aab7-853422806098","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:130","type":"CtIfImpl","sourcecode":"if (K == null) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"ee705aa3-13e4-11e5-aab7-db41537a2b82","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"index1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:82","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":0},{"failures":[],"tindex":"ee705aa4-13e4-11e5-aab7-2382078af692","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1396","type":"CtTryImpl","sourcecode":"try {\n    return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n}"},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"ee705aa5-13e4-11e5-aab7-1d76e4f4b119","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:368","type":"CtIfImpl","sourcecode":"if (boolean) {\n    boolean = false;\n} else {\n    java.lang.StringBuilder.append(\", \");\n}"},"status":-2},{"failures":[117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133],"tindex":"ee705aa6-13e4-11e5-aab7-cb54772fb2f7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:333","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-1},{"failures":[],"tindex":"ee705aa7-13e4-11e5-aab7-793900c2dd6a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1301","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"variableMap":{"node":"currentNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"dataElement","this":"this","newNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1036","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"ee7081b8-13e4-11e5-aab7-c9345b5b3423","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:66","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-2},{"failures":[100,101,134,102,103,104,105,135,106,107,108,136,137],"tindex":"ee7081b9-13e4-11e5-aab7-0bc1f1f84a3c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map) {\n    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object));\n    return org.apache.commons.collections4.map.CompositeMap<K, V>.entrySet().equals(java.util.Map<?, ?>.entrySet());\n} "},"status":-1},{"failures":[],"tindex":"ee7081ba-13e4-11e5-aab7-db7b4c88e503","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"variableMap":{"it2":"iterator","it1":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:112","type":"CtIfImpl","sourcecode":"if (((int) == (int)) || ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator)) {\n    return java.util.Iterator<? extends E>.hasNext();\n} "},"status":0},{"failures":[106,107],"tindex":"ee7081bb-13e4-11e5-aab7-ab43d467f716","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"code","index":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:480","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : org.apache.commons.collections4.map.CompositeMap<K, V>.entrySet()) {\n    int += java.util.Map.Entry<K, V>.hashCode();\n}"},"status":-1},{"failures":[],"tindex":"ee7081bc-13e4-11e5-aab7-9d1d8b5d00a4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Closure<?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The closure array must not be null\");\n} "},"status":-2},{"failures":[138,139,140,141,142,143,144,145,146,147,148,149,150,151,73,152,153,154,155,74,156,157,158,159,160,161,162,163,164,165,166,167,75,168,169,170,171,76,172,173,77,174,175,176,177,178,179,180,181,78,182,183,184,185,79,186,187,80,188,189,190,81,191,192,193,194,82,195,196,83,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,85,223,224,225,86,226,227,87,228,229,230,88,231,232,233,234,89,235,236,90,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263],"tindex":"ee7081bd-13e4-11e5-aab7-f387167fec30","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:642","type":"CtDoImpl","sourcecode":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null )"},"status":-1},{"failures":[264],"tindex":"ee70a8ce-13e4-11e5-aab7-1ddedd25e33f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:84","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[].int) == 1) {\n    return org.apache.commons.collections4.Predicate<T>[][0];\n} "},"status":-1},{"failures":[],"tindex":"ee70a8cf-13e4-11e5-aab7-2d4490dd1567","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:82","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Transformer<? super E, ? extends E> != null) && (java.util.List<E> != null)) && ((java.util.List<E>.size()) > 0)) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E[] E[] = ((E[])(java.util.List<E>.toArray()));\n    java.util.List<E>.clear();\n    for (final E E : E[]) {\n        org.apache.commons.collections4.list.TransformedList<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n} "},"status":-2},{"failures":[],"tindex":"ee70a8d0-13e4-11e5-aab7-371a371c1b8e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:151","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Set<E>.iterator());\n}"},"status":-2},{"failures":[265,266,267,268,269,270,271,272,273,274,275,276,277],"tindex":"ee70a8d1-13e4-11e5-aab7-45441077fef3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:187","type":"CtWhileImpl","sourcecode":"while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n    E E = java.util.Iterator<? extends E>.next();\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n        E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n    } \n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n}"},"status":-1},{"failures":[278,279,280],"tindex":"ee70a8d2-13e4-11e5-aab7-b583d90f9e7c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1105","type":"CtForImpl","sourcecode":"for (int int = int ; int > 0 ; int--) {\n    org.apache.commons.collections4.map.Flat3Map<K, V>.put(((K)(java.io.ObjectInputStream.readObject())), ((V)(java.io.ObjectInputStream.readObject())));\n}"},"status":-1},{"failures":[],"tindex":"ee70a8d3-13e4-11e5-aab7-af798aac7f5c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:906","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[281],"tindex":"ee70a8d4-13e4-11e5-aab7-b9993290789f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:306","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.OrPredicate.<T>orPredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)"},"variableMap":{"predicate1":"predicate2","predicate2":"predicate1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:258","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.AndPredicate.<T>andPredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)"},"status":-1},{"failures":[100,101,134,102,103,104,135,107,108,282],"tindex":"ee70a8d5-13e4-11e5-aab7-cda9977881f2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:175","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"size":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:170","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.collection.CompositeCollection<E>.iterator() ; java.util.Iterator<E>.hasNext() ; int++) {\n    java.lang.Object[][int] = java.util.Iterator<E>.next();\n}"},"status":-1},{"failures":[60],"tindex":"ee70cfe6-13e4-11e5-aab7-170d05480aac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return null;\n} "},"variableMap":{"lengthInBits":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1142","type":"CtIfImpl","sourcecode":"if ((int >= 0) && (int < int)) {\n    return null;\n} "},"status":-1},{"failures":[283,284,285],"tindex":"ee70cfe7-13e4-11e5-aab7-fbe61987a545","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n} "},"variableMap":{"predicates":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:257","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Set<E>.contains(java.lang.Object)) {\n        java.util.Set<java.lang.Object>.add(java.lang.Object);\n    } \n}"},"status":-1},{"failures":[286,287,288,289,290,46,47,48,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,49,306,307,308,309,310,311,50,51,312,52,313,314,53,54,315,316,55,56,57,58,59,317],"tindex":"ee70cfe8-13e4-11e5-aab7-b519cba2e864","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:202","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[318],"tindex":"ee70cfe9-13e4-11e5-aab7-21cb48f37e02","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:397","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    return true;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:124","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.hasPrevious();\n} "},"status":-1},{"failures":[319],"tindex":"ee70cfea-13e4-11e5-aab7-a51f3a8096a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:153","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"slotFilled":"exhausted"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:129","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[320,321,206,210],"tindex":"ee70cfeb-13e4-11e5-aab7-d782b3655d7f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:142","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n}"},"status":-1},{"failures":[322,323,324,325,326],"tindex":"ee70cfec-13e4-11e5-aab7-a944b8a51eb4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"wrappedIteratorIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:112","type":"CtIfImpl","sourcecode":"if (((int) == (int)) || ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator)) {\n    return java.util.Iterator<? extends E>.hasNext();\n} "},"status":-1},{"failures":[0,1,327,3,328,4,329,330,331],"tindex":"ee70cfed-13e4-11e5-aab7-f73ab3857425","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:970","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1140","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[142,332,143,144,333],"tindex":"ee70cfee-13e4-11e5-aab7-81157971880e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:363","type":"CtForImpl","sourcecode":"for (int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n}"},"variableMap":{"data":"keys","length":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:263","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    if (java.lang.Object != null) {\n        int ^= java.lang.Object.hashCode();\n    } \n}"},"status":-1},{"failures":[],"tindex":"ee70f6ff-13e4-11e5-aab7-23d8896fb3ab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:130","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.bag.HashBag<E>.remove(E, 1))) {\n    java.util.ArrayList<E>.add(E);\n} "},"status":-2},{"failures":[334],"tindex":"ee70f700-13e4-11e5-aab7-050dae70dd93","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1139","type":"CtWhileImpl","sourcecode":"while (java.util.Enumeration<? extends C>.hasMoreElements()) {\n    boolean |= java.util.Collection<C>.add(java.util.Enumeration<? extends C>.nextElement());\n}"},"status":-1},{"failures":[335,336,337,338,339,340,341,342,343,344,345],"tindex":"ee70f701-13e4-11e5-aab7-af3911aea8d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate to call must not be null\");\n} "},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:100","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) == false) {\n    throw new java.lang.IllegalArgumentException(((((\"Cannot add Object \\'\" + E) + \"\\' - Predicate \\'\") + (org.apache.commons.collections4.Predicate<? super E>)) + \"\\' rejected it\"));\n} "},"status":-1},{"failures":[145,138,139,140,146,147,148,157,161,162,346,164,347,348,349,350,351,352,353,354,355,173,356,357,358,77,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,187,382,383,384,80,385,386,387,388,389,390,391,392,393,196,394,395,396,83,397,398,399,400,401,402,197,200,201,202,212,215,216,218,219,403,404,405,406,407,408,409,410,411,223,227,412,413,414,87,415,416,417,418,419,420,421,422,423,236,424,425,426,90,427,428,429,430,431,432,241,242,246,248,433,254,255,258,260],"tindex":"ee70f702-13e4-11e5-aab7-8560abb94010","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:344","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    return V;\n} "},"status":-1},{"failures":[],"tindex":"ee70f703-13e4-11e5-aab7-553b8c0c2044","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1645","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.iterators.PermutationIterator<E>.hasNext()) {\n    java.util.Collection<java.util.List<E>>.add(org.apache.commons.collections4.iterators.PermutationIterator<E>.next());\n}"},"status":-2},{"failures":[434],"tindex":"ee70f704-13e4-11e5-aab7-3f91bab9ca31","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:832","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[435,93,436,437,438,439,440,441,442,443,444],"tindex":"ee70f705-13e4-11e5-aab7-cdc7ef3d0eff","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ArrayStack:157","type":"CtIfImpl","sourcecode":"if (((java.lang.Object == null) && (java.lang.Object == null)) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    return int;\n} "},"variableMap":{"current":"value","n":"i","object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:134","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n    if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n        return int;\n    } \n    int++;\n}"},"status":-1},{"failures":[],"tindex":"ee70f706-13e4-11e5-aab7-4d1e8e915b3c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"isLocked","beforeFirst":"isLocked"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"status":0},{"failures":[],"tindex":"ee711e17-13e4-11e5-aab7-49b0ce25940d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:251","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.updateCurrentIterator()"},"variableMap":{"this":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:145","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"ee711e18-13e4-11e5-aab7-d53d0706a577","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:54","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n} "},"status":0},{"failures":[0,1,327,3,328,4,329,330,331],"tindex":"ee711e19-13e4-11e5-aab7-ed30ebd04eca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:853","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"x","leftChild":"x","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1167","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[445,446,447,448,449,450,451,452,453],"tindex":"ee711e1a-13e4-11e5-aab7-6b439e66bef5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedClosure:72","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NOPClosure:47","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.functors.NOPClosure.org.apache.commons.collections4.Closure))"},"status":-1},{"failures":[],"tindex":"ee711e1b-13e4-11e5-aab7-4398ab496926","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"status":-2},{"failures":[237,238,239,240,454,241,242,243,244,245,246,248,250,251,252,455,253,456,457,254,255,256,458,257,258,260,262,263],"tindex":"ee711e1c-13e4-11e5-aab7-35ed08bc2bca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.MapBackedSet:145","type":"CtInvocationImpl","sourcecode":"java.util.Map<E, ? super V>.clear()"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:124","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.Map<E, ? super V>.put(E, V);\n}"},"status":-1},{"failures":[],"tindex":"ee711e1d-13e4-11e5-aab7-1bf185985f97","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:298","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n    java.util.ArrayList<E>.add(null);\n    java.util.BitSet.clear(int);\n}"},"status":-2},{"failures":[44,45,97,98],"tindex":"ee711e1e-13e4-11e5-aab7-f7286f446a74","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:231","type":"CtIfImpl","sourcecode":"if ((int[][int]) <= (int[][(int + int)])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n} "},"variableMap":{"vUp":"vUp","start1":"start1","vDown":"vUp","delta":"d","end2":"delta","this":"this","i":"k","end1":"k","k":"d","start2":"end2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtIfImpl","sourcecode":"if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n    if ((int[][int]) <= (int[][(int + int)])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[],"tindex":"ee711e1f-13e4-11e5-aab7-eb8d93533952","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1964","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()].org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == (this))"},"variableMap":{"leftNode":"key","parentNode":"key","dataElement":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:229","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-2},{"failures":[45,44,96,97,98,99],"tindex":"ee714530-13e4-11e5-aab7-9d8da76f55a3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtIfImpl","sourcecode":"if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n    if ((int[][(int - int)]) <= (int[][int])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[],"tindex":"ee714531-13e4-11e5-aab7-094f8f7d71de","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:203","type":"CtReturnImpl","sourcecode":"return ((T[])(java.lang.Object[]))"},"variableMap":{"result":"lock"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:163","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toArray(T[]);\n}"},"status":-2},{"failures":[],"tindex":"ee714532-13e4-11e5-aab7-6558fba20cdc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[459,460,461,462],"tindex":"ee714533-13e4-11e5-aab7-3121ea2b49a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:965","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"rval","replacement":"rval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:701","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[0,1,2,327,3,328,4,329,330,331],"tindex":"ee714534-13e4-11e5-aab7-4120934dfb59","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:855","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"node","node":"rightChild","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:827","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"ee714535-13e4-11e5-aab7-85b7cd5c31ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1196","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    throw new java.lang.IllegalArgumentException(\"must have come from somewhere!\");\n} "},"variableMap":{"start":"path","predecessor":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:220","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,320,482,483,321,484,368,485,486,487,488,489,490,203,204,205,206,207,209,210,211,212,491,492,493,494,495,496,497,498,499,292,293,295,296,297,300,302,305,49],"tindex":"ee714536-13e4-11e5-aab7-6f5d9108a40b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:106","type":"CtReturnImpl","sourcecode":"return \"ComparableComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[500,501],"tindex":"ee714537-13e4-11e5-aab7-9d9680831a27","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n    throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n} "},"variableMap":{"coll":"retain"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:322","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.contains(E)) {\n    java.util.List<E>.add(E);\n} "},"status":-1},{"failures":[],"tindex":"ee714538-13e4-11e5-aab7-17403b444f4e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:73","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.OrderedMapIterator<? extends K, ? extends V>.hasNext()"},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1322","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if (java.lang.Object == null) {\n        if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n            return false;\n        } \n    } else {\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"ee716c49-13e4-11e5-aab7-d9c2bd2f6262","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:199","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return true;\n    } \n}"},"variableMap":{"composite":"value","length":"size","key":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((V) == null) {\n                return true;\n            } \n        case 2 :\n            if ((V) == null) {\n                return true;\n            } \n        case 1 :\n            if ((V) == null) {\n                return true;\n            } \n    }\n} else {\n    switch (int) {\n        case 3 :\n            if (java.lang.Object.equals(V)) {\n                return true;\n            } \n        case 2 :\n            if (java.lang.Object.equals(V)) {\n                return true;\n            } \n        case 1 :\n            if (java.lang.Object.equals(V)) {\n                return true;\n            } \n    }\n}"},"status":-2},{"failures":[],"tindex":"ee716c4a-13e4-11e5-aab7-018f19bdf6ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"bound","newCapacity":"bound","proposedCapacity":"bound"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s before the start of the array. \"));\n} "},"status":-2},{"failures":[100,101,102,103,104,105,106,107,108],"tindex":"ee716c4b-13e4-11e5-aab7-e3f011293b3a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:297","type":"CtIfImpl","sourcecode":"if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"ee716c4c-13e4-11e5-aab7-93db2e82b8fc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:467","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:398","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<java.util.Map.Entry<K, V>>emptyOrderedIterator();\n} "},"status":-2},{"failures":[502,503],"tindex":"ee716c4d-13e4-11e5-aab7-b1b325eac6f7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"chainExhausted","beforeFirst":"chainExhausted"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:85","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    boolean = true;\n} "},"status":-1},{"failures":[290,60],"tindex":"ee716c4e-13e4-11e5-aab7-413269f695bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1208","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[504,505,118,506,507,126,127,128,508,509],"tindex":"ee716c4f-13e4-11e5-aab7-ed63d4ca9a41","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:352","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-1},{"failures":[510,511],"tindex":"ee716c50-13e4-11e5-aab7-99d94d6cc4bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:55","type":"CtIfImpl","sourcecode":"if (java.util.Queue<? extends E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Queue<E> java.util.Queue<E> = ((java.util.Queue<E>)(java.util.Queue<? extends E>));\n    return java.util.Queue<E>;\n} "},"status":-1},{"failures":[],"tindex":"ee716c51-13e4-11e5-aab7-3bd11aed95be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:562","type":"CtInvocationImpl","sourcecode":"((org.apache.commons.collections4.list.CursorableLinkedList<E>)(org.apache.commons.collections4.list.AbstractLinkedList<E>)).unregisterCursor(this)"},"variableMap":{"parent":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:321","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    if (java.util.Collection<?>.contains(E)) {\n        java.util.List<E>.add(E);\n    } \n}"},"status":-2},{"failures":[286,46,292,293,294,295,296,297,298,299,300,302,305,49,308,309,310,311,50,51,312,52,53,56,57,58,59,512,513,514,515,317],"tindex":"ee719362-13e4-11e5-aab7-fb8509559830","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:391","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet();\n} "},"status":-1},{"failures":[],"tindex":"ee719363-13e4-11e5-aab7-1f197d92f052","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:830","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"variableMap":{"next":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:494","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":-2},{"failures":[283,284,285],"tindex":"ee719364-13e4-11e5-aab7-3d62739c64d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    throw new java.lang.NullPointerException((org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement + \" cannot be null\"));\n} "},"variableMap":{"dataElement":"next","o":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:258","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.contains(java.lang.Object)) {\n    java.util.Set<java.lang.Object>.add(java.lang.Object);\n} "},"status":-1},{"failures":[],"tindex":"ee719365-13e4-11e5-aab7-b587c6aab071","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"bitIndex","listSize":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:211","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"ee719366-13e4-11e5-aab7-5192590ffb03","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:115","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    return false;\n} "},"status":0},{"failures":[516],"tindex":"ee719367-13e4-11e5-aab7-4b54c8090b60","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:111","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> : java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>>.entrySet()) {\n    org.apache.commons.collections4.Predicate<? super I>[][int] = java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>>.getKey();\n    org.apache.commons.collections4.Transformer<? super I, ? extends O>[][int] = java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>>.getValue();\n    int++;\n}"},"status":-1},{"failures":[334],"tindex":"ee719368-13e4-11e5-aab7-9f4d6bde5898","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"changed","beforeFirst":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1139","type":"CtWhileImpl","sourcecode":"while (java.util.Enumeration<? extends C>.hasMoreElements()) {\n    boolean |= java.util.Collection<C>.add(java.util.Enumeration<? extends C>.nextElement());\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":98,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}