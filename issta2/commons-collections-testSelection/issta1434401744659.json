{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":504,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":360,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":378,"org.apache.commons.collections4.map.DefaultedMapTest.testMapSize":286,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":555,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":593,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":208,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":74,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":110,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":180,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":429,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":516,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutNullKey":603,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":211,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":333,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":435,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":673,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":678,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":272,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":214,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":96,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":300,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapClear":186,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":552,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":431,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":445,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":512,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":403,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":276,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapIsEmpty":310,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":315,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":460,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":573,"org.apache.commons.collections4.map.ListOrderedMap2Test.testSerializeDeserializeThenCompare":182,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":524,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testSerializeDeserializeThenCompare":219,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":386,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":401,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":472,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testSerializeDeserializeThenCompare":156,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":643,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":518,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":519,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":570,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":372,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":475,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":81,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.initializationError":576,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":542,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":379,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":455,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":468,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":393,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":324,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":483,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":427,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":704,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":508,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectEqualsSelf":261,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":235,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":4,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":28,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":59,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":103,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":712,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":257,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":688,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":461,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":124,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":165,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":302,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":602,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":231,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapClear":312,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":358,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":201,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":649,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":259,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":61,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":469,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":597,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":142,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":537,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":188,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":457,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiRemove":550,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":217,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":293,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":209,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKey":578,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":458,"org.apache.commons.collections4.map.LazySortedMapTest.testMapToString":241,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveAll":670,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":90,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":174,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":198,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":420,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":98,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":527,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":669,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":314,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":528,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":526,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":421,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":44,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":633,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":46,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":150,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":258,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":234,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":341,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":539,"org.apache.commons.collections4.map.TransformedMapTest.testSerializeDeserializeThenCompare":335,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":694,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":521,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":557,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":12,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":63,"org.apache.commons.collections4.map.TransformedSortedMapTest.testSerializeDeserializeThenCompare":195,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":402,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":161,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":441,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":513,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":277,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":114,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":289,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":424,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":439,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":232,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":701,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":65,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":193,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":133,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testObjectEqualsSelf":274,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":505,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":354,"org.apache.commons.collections4.map.ListOrderedMapTest.testSerializeDeserializeThenCompare":308,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":502,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":636,"org.apache.commons.collections4.map.SingletonMapTest.testObjectEqualsSelf":284,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":474,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":571,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":210,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":304,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetClearChangesMap":661,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":500,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":191,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":92,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":411,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":54,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":87,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":494,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":624,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":658,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":71,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":56,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":346,"org.apache.commons.collections4.map.SingletonMapTest.testSerializeDeserializeThenCompare":283,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":565,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":709,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":438,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":426,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":693,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":374,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":698,"org.apache.commons.collections4.map.HashedMapTest.testEqualsNull":430,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":399,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":152,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMakeMap":644,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":638,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":242,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":499,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":75,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove1":666,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove2":667,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove3":668,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":86,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEqualsNull":433,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":541,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":375,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":442,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":23,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":226,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectEqualsSelf":295,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":627,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":585,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":285,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":493,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":126,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":230,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":140,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":158,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":564,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRetainAll":675,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":339,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":533,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":122,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":586,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":396,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":428,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":296,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":20,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":159,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":525,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSerializeDeserializeThenCompare":275,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":1,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":418,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":337,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":517,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":57,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":168,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":252,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":162,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":522,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFullMapCompatibility":654,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":307,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":387,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":400,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":619,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":651,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":100,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":535,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiInverse":580,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":425,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":558,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":207,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":630,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testFullMapCompatibility":556,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":104,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":509,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":223,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastKeySet":589,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":559,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":278,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":80,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":385,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":384,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":383,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":212,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":171,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":233,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":489,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":520,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":264,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":380,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":301,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":381,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":382,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":19,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":60,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":306,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":149,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":495,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":531,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":530,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":529,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":77,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":130,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":199,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveAll":617,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMakeMap":591,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetClearChangesMap":609,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRetainAll":671,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":349,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":648,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":185,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":616,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":154,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":369,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":93,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":69,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutAll":319,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectEqualsSelf":248,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":250,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":655,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals":357,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove1":613,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":390,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove2":614,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":265,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":345,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove3":615,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":187,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":101,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":575,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFullMapCompatibility":601,"org.apache.commons.collections4.map.LazyMapTest.testSerializeDeserializeThenCompare":147,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":105,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":164,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testDecorateFactory":544,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSerializeDeserializeThenCompare":228,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":6,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":224,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":690,"org.apache.commons.collections4.map.DefaultedMapTest.testMapToString":288,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":332,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":473,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":0,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":14,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":107,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiClear":582,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":29,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":515,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains1":663,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains2":664,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains3":665,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":260,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":637,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":145,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":352,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":592,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":47,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":568,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":229,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":650,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":48,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":64,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":254,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":620,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":134,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":501,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":676,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":363,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":486,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":340,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":606,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveAll":621,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":547,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":484,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":510,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":646,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":109,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":166,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":538,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMakeMap":553,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":266,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.initializationError":629,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":503,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":577,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":3,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":42,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":97,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testObjectEqualsSelf":135,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutNullKey":656,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":169,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":554,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetClearChangesMap":608,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":466,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":94,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":102,"org.apache.commons.collections4.map.LazyMapTest.testMapToString":139,"org.apache.commons.collections4.map.LazyMapTest.testMapIsEmpty":141,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":536,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":222,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":88,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":453,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":569,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":391,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":279,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":498,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":680,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapClear":173,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":677,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesClearChangesMap":607,"org.apache.commons.collections4.map.TransformedSortedMapTest.testObjectEqualsSelf":196,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":572,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":8,"org.apache.commons.collections4.map.DefaultedMapTest.testMapIsEmpty":290,"org.apache.commons.collections4.map.MultiKeyMapTest.testSampleMappings":371,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastEntrySet":641,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":344,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":51,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":448,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":543,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":128,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":514,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKey":631,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":24,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":160,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":720,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutNullValue":657,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":66,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":58,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":713,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":197,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":269,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":245,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":362,"org.apache.commons.collections4.map.LazyMapTest.testMapSize":137,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapClear":299,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapHashCode":599,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKeyInverse":579,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":129,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":497,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":702,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":459,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":323,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":707,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":144,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":389,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":95,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":456,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":178,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":291,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSerializeDeserializeThenCompare":321,"org.apache.commons.collections4.set.UnmodifiableSetTest.testDecorateFactory":443,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":679,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRetainAll":622,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":9,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":476,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":2,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":685,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":281,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":583,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":255,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":645,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":21,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":407,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":581,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":125,"org.apache.commons.collections4.map.PredicatedMapTest.testSerializeDeserializeThenCompare":262,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":625,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":696,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectEqualsSelf":236,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":436,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":256,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":351,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":710,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":273,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":447,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":566,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectEqualsSelf":119,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":647,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":10,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":5,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":432,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":546,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":687,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":359,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":567,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":699,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":41,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":70,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":84,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":181,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":496,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":192,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":76,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":136,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":189,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":377,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":634,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":297,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":118,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":172,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":238,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":681,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":116,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":204,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":348,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":121,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":540,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":22,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":329,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":155,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":52,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":368,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":53,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":682,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutNullValue":604,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":78,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":131,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":452,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":326,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":462,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":434,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":246,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":282,"org.apache.commons.collections4.map.LazySortedMapTest.testMapIsEmpty":243,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":62,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":55,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":470,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":714,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":405,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":639,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectEqualsSelf":157,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":507,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":190,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":605,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":370,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":708,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":397,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":106,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":574,"org.apache.commons.collections4.map.TransformedMapTest.testObjectEqualsSelf":334,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":491,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":45,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":184,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":471,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":422,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":376,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":706,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":464,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":40,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":39,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":684,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":11,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":36,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":220,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains2":611,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":35,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":99,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains3":612,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.initializationError":628,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":38,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":37,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains1":610,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":32,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":153,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":34,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":33,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":85,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithStringTokenizer":111,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":292,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":700,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":450,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":718,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":15,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":532,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":117,"org.apache.commons.collections4.map.LazyMapTest.testObjectEqualsSelf":146,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetClearChangesMap":662,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":440,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":325,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiClear":549,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":596,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapSize":311,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":364,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":423,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":167,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":560,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSerializeDeserializeThenCompare":237,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":419,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":31,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":388,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":270,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":367,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":366,"org.apache.commons.collections4.map.ListOrderedMap2Test.testObjectEqualsSelf":183,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":365,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":89,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":177,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":303,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":672,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":488,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":584,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testUnknownObjectBehavior":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":13,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":112,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectEqualsSelf":309,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":716,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":485,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":83,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":394,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveAll":674,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":478,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":595,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":203,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":79,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":548,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":215,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":492,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":43,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":280,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":247,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":406,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":465,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapToString":317,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEqualsAfterSerialization":356,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":417,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":353,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":373,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":91,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":479,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":446,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":253,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":271,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastKeySet":642,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":355,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":313,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":221,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectEqualsSelf":170,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":305,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":482,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":481,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":123,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":480,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":487,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":267,"org.apache.commons.collections4.map.LazySortedMapTest.testMapClear":240,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":331,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":398,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":534,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":72,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":179,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":600,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":437,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":18,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":82,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectEqualsSelf":127,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":490,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":392,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":320,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":343,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":444,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":408,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":202,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":143,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":338,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":692,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":120,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":719,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":175,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":711,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":404,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":151,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":598,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastEntrySet":588,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":523,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":17,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":294,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":410,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":330,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectEqualsSelf":218,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":717,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":73,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":244,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":328,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":653,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":683,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":251,"org.apache.commons.collections4.map.DefaultedMapTest.testMapClear":287,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":414,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesClearChangesMap":660,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":415,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":416,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":7,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testUnmodifiable":545,"org.apache.commons.collections4.map.FixedSizeMapTest.testSerializeDeserializeThenCompare":206,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":511,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":594,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":361,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":409,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":200,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":108,"org.apache.commons.collections4.map.LazySortedMapTest.testSerializeDeserializeThenCompare":249,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRetainAll":618,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":467,"org.apache.commons.collections4.map.LRUMapTest.testLRU":715,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":176,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":463,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiClear":635,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":318,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectEqualsSelf":227,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":350,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":194,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":561,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":562,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":626,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":632,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapHashCode":652,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":413,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":563,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":263,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":705,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":551,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":703,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":25,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":412,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":689,"org.apache.commons.collections4.map.LazySortedMapTest.testMapSize":239,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":216,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":327,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":49,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":132,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":298,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":115,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":50,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":26,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":268,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":342,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":148,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":506,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":659,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":640,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":30,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":316,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":68,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":623,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":477,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":113,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":454,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":163,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":686,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testObjectEqualsSelf":322,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":347,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":213,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":691,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":336,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectEqualsSelf":205,"org.apache.commons.collections4.map.LazyMapTest.testMapClear":138,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":451,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":587,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":590,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":395,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":449,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":225,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":695,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":697},"transformations":[{"failures":[0,1,2,3,4],"tindex":"e4138e4d-13a0-11e5-9f85-ed9ecbe8a9b3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:384","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    return true;\n} "},"status":-1},{"failures":[5],"tindex":"e413b55e-13a0-11e5-9f85-79eff84d91f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:95","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and transformer map must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"e413b55f-13a0-11e5-9f85-d7c87e7a75c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    java.lang.String = java.lang.String;\n} "},"variableMap":{"answer":"value","defaultValue":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:262","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(1);\n    java.util.Collection<V>.add(((V)(java.lang.Object)));\n    if ((java.util.Collection<V>.size()) > 0) {\n        org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n        boolean = true;\n    } \n} else {\n    boolean = java.util.Collection<V>.add(((V)(java.lang.Object)));\n}"},"status":-2},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"e4140380-13a0-11e5-9f85-c5a4d7538e47","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-1},{"failures":[23,24,25,26],"tindex":"e4140381-13a0-11e5-9f85-99ee60ae6d53","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:224","type":"CtWhileImpl","sourcecode":"while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    int[][int] = int--;\n    int--;\n}"},"status":-1},{"failures":[],"tindex":"e4140382-13a0-11e5-9f85-8986c761824f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:213","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.util.List<E>.remove(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"e4149fc3-13a0-11e5-9f85-214442f75361","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:841","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"deletedNode","rightChild":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:991","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"e4149fc4-13a0-11e5-9f85-9fb408e6cc11","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2157","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(java.lang.Object, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"lock","obj":"lock"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:194","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    if (java.lang.Object == (this)) {\n        return true;\n    } \n    return (java.lang.Object == (this)) || (org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().equals(java.lang.Object));\n}"},"status":-2},{"failures":[27],"tindex":"e414ede5-13a0-11e5-9f85-0389ab64f6c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:114","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.intValue()"},"variableMap":{"count":"position1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:232","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) {\n    case BEFORE :\n        return java.lang.Integer == null ? java.lang.Integer == null ? 0 : -1 : 1;\n    case AFTER :\n        return java.lang.Integer == null ? java.lang.Integer == null ? 0 : 1 : -1;\n    case EXCEPTION :\n        final java.lang.Object java.lang.Object = java.lang.Integer == null ? T : T;\n        throw new java.lang.IllegalArgumentException((\"Attempting to compare unknown object \" + java.lang.Object));\n    default :\n        throw new java.lang.UnsupportedOperationException((\"Unknown unknownObjectBehavior: \" + (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)));\n}"},"status":-1},{"failures":[],"tindex":"e414ede6-13a0-11e5-9f85-c762ee0f128f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"end2","index":"end1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:257","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.sequence.SequencesComparator.Snake == null) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) {\n    int int = int;\n    int int = int;\n    while ((int < int) || (int < int)) {\n        if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n            ++int;\n        } else {\n            if ((int - int) > (int - int)) {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            } else {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            }\n        }\n    }\n} else {\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(int, org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), org.apache.commons.collections4.sequence.EditScript<T>);\n    for (int int = org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart() ; int < (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) ; ++int) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    }\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), int, org.apache.commons.collections4.sequence.EditScript<T>);\n}"},"status":-2},{"failures":[28,29,30,31],"tindex":"e414ede7-13a0-11e5-9f85-8f181e4a40c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:853","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"rval","leftChild":"rval","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:701","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"e41514f8-13a0-11e5-9f85-d7229b783369","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ArrayStack:122","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.util.EmptyStackException();\n} else {\n    return java.util.ArrayList<E>.remove((int - 1));\n}"},"variableMap":{"this":"list","n":"wrappedIteratorIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:142","type":"CtIfImpl","sourcecode":"if ((int) < (int)) {\n    ++(int);\n    return java.util.List<E>.get(((int) - 1));\n} "},"status":-2},{"failures":[],"tindex":"e41514f9-13a0-11e5-9f85-1fd5de605f0a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"bitIndex","proposedCapacity":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1101","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || (int < (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n    break;\n} "},"status":-2},{"failures":[],"tindex":"e41514fa-13a0-11e5-9f85-699aeca6b38f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:512","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"y","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"yFormerRightChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1140","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"e41514fb-13a0-11e5-9f85-c34e54c63cd5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:263","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.modify()"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:99","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.putAll(java.util.Map<K, V>)"},"status":-2},{"failures":[],"tindex":"e415631c-13a0-11e5-9f85-714e3b51539d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:416","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.EntryView();\n} "},"status":-2},{"failures":[32,33,34,35,36,37,38,39,40,41,42],"tindex":"e4158a2d-13a0-11e5-9f85-45f4987d3cb4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"status":-1},{"failures":[],"tindex":"e4158a2e-13a0-11e5-9f85-c7b9b58fc88d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:167","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-2},{"failures":[43,44,45,46,47,48],"tindex":"e4158a2f-13a0-11e5-9f85-254957d3650b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:94","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"tindex":"e4158a30-13a0-11e5-9f85-ad81a3245c40","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"status":-1},{"failures":[],"tindex":"e415b141-13a0-11e5-9f85-3b0cb750306c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1046","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"node","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":0},{"failures":[],"tindex":"e415b142-13a0-11e5-9f85-3de86181c42e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(java.lang.Object);\n} "},"variableMap":{"delegateMap":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":0},{"failures":[71,72,73,74,75,76,77],"tindex":"e415b143-13a0-11e5-9f85-ef748a8541a6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1168","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"tindex":"e415d854-13a0-11e5-9f85-231cc43cfd4d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"e415d855-13a0-11e5-9f85-633bd8f7fb30","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"e415d856-13a0-11e5-9f85-0b4f200de6f4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-2},{"failures":[],"tindex":"e415d857-13a0-11e5-9f85-6b16411dfc76","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"The collection must not be null\");\n} "},"variableMap":{"coll":"remove"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:354","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    if (!(java.util.Collection<?>.contains(E))) {\n        java.util.List<E>.add(E);\n    } \n}"},"status":0},{"failures":[97,98,99,100,101,102,103,104,105,106],"tindex":"e415d858-13a0-11e5-9f85-f3bbd636ee7f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"variableMap":{"isLocked":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:390","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Bag<E>.isEmpty())) {\n    boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.removeAll(org.apache.commons.collections4.Bag<E>);\n} "},"status":-1},{"failures":[],"tindex":"e415d859-13a0-11e5-9f85-a721990a644c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2070","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsKey(java.lang.Object)"},"variableMap":{"value":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:194","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    if (java.lang.Object == (this)) {\n        return true;\n    } \n    return (java.lang.Object == (this)) || (org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().equals(java.lang.Object));\n}"},"status":-2},{"failures":[],"tindex":"e415d85a-13a0-11e5-9f85-cf01b9304d28","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) > 0) {\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.CursorableLinkedList<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        java.util.Iterator<E>.next();\n        java.util.Iterator<E>.remove();\n    }\n} "},"status":-2},{"failures":[107,108,109,110],"tindex":"e415d85b-13a0-11e5-9f85-7b0d455712a4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1142","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(java.lang.Object);\n} "},"variableMap":{"obj":"value","delegateMap":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:149","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"e415ff6c-13a0-11e5-9f85-61c8ceac2b26","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:236","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"status":-2},{"failures":[111],"tindex":"e415ff6d-13a0-11e5-9f85-b548e7b052b9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.EnumerationUtils:63","type":"CtWhileImpl","sourcecode":"while (java.util.StringTokenizer.hasMoreTokens()) {\n    java.util.List<java.lang.String>.add(java.util.StringTokenizer.nextToken());\n}"},"status":-1},{"failures":[112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335],"tindex":"e4169bae-13a0-11e5-9f85-2d7b79aef486","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2016","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:127","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[336,337],"tindex":"e416c2bf-13a0-11e5-9f85-e32a5b3659b9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.TransformedSet:82","type":"CtForEachImpl","sourcecode":"for (final E E : E[]) {\n    org.apache.commons.collections4.set.TransformedSet<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}"},"status":-1},{"failures":[],"tindex":"e416c2c0-13a0-11e5-9f85-5b3d5e1b497e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:111","type":"CtAssignmentImpl","sourcecode":"this.E = E"},"status":-2},{"failures":[],"tindex":"e41a4531-13a0-11e5-9f85-df76013f4cfb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:184","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Transformer<?, ?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Transformer<?, ?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + int) + \" was null\"));\n    } \n}"},"status":-2},{"failures":[52],"tindex":"e41a4532-13a0-11e5-9f85-0b7db33fbc5c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"offset","index":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:190","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n    for (final E E : java.util.Collection<E>) {\n        java.lang.Object[][int++] = E;\n    }\n}"},"status":-1},{"failures":[],"tindex":"e41a4533-13a0-11e5-9f85-010f7167a86e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:825","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","rightChild":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:502","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"e41a6c44-13a0-11e5-9f85-419f24155d08","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:104","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ((org.apache.commons.collections4.Transformer<I, O>)(org.apache.commons.collections4.Transformer<? super I, ? extends O> == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer() : org.apache.commons.collections4.Transformer<? super I, ? extends O>));\n} "},"variableMap":{"size":"length","defaultTransformer":"defaultTransformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:65","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super I>[].int) == 0) {\n    return ((org.apache.commons.collections4.Transformer<I, O>)(org.apache.commons.collections4.Transformer<? super I, ? extends O> == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer() : org.apache.commons.collections4.Transformer<? super I, ? extends O>));\n} "},"status":-2},{"failures":[338,5,339,340,341,342,343,344,345,346,347,347,348,348,349],"tindex":"e41a6c45-13a0-11e5-9f85-7158f7dde1e6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"i","index":"i","beyond":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:83","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"status":-1},{"failures":[350,351],"tindex":"e41a6c46-13a0-11e5-9f85-c9d8e4bfef30","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.TransformedBag:81","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.Bag<E>.clear()"},"variableMap":{"bag":"bag"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TransformedBag:78","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Transformer<? super E, ? extends E> != null) && (org.apache.commons.collections4.Bag<E> != null)) && ((org.apache.commons.collections4.Bag<E>.size()) > 0)) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E[] E[] = ((E[])(org.apache.commons.collections4.Bag<E>.toArray()));\n    org.apache.commons.collections4.Bag<E>.clear();\n    for (final E E : E[]) {\n        org.apache.commons.collections4.bag.TransformedBag<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n} "},"status":-1},{"failures":[],"tindex":"e41a6c47-13a0-11e5-9f85-b547bd7aac3d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.AnyPredicate:81","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 1) {\n    return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.Predicate<? super T>[][0]));\n} "},"variableMap":{"length":"length","preds":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:54","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n} "},"status":-2},{"failures":[352],"tindex":"e41a6c48-13a0-11e5-9f85-b3caf9175334","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:184","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Transformer<?, ?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Transformer<?, ?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + int) + \" was null\"));\n    } \n}"},"status":-1},{"failures":[353,354,355],"tindex":"e41a6c49-13a0-11e5-9f85-ebf16d19c2e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:266","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.SetUniqueList<E>.clear()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:265","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.Object>.size()) == 0) {\n    org.apache.commons.collections4.list.SetUniqueList<E>.clear();\n} else {\n    for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.SetUniqueList<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n        if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"e41a6c4a-13a0-11e5-9f85-2527f996961e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"variableMap":{"other":"value","keys":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:237","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n    if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n        org.apache.commons.collections4.list.AbstractLinkedList<E>.removeNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n        return true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"e41a935b-13a0-11e5-9f85-ef17a3791b67","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:85","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    boolean = true;\n} "},"variableMap":{"chainExhausted":"chainExhausted","currentIterator":"nextIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:96","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> != null) {\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} else {\n    boolean = true;\n}"},"status":-2},{"failures":[],"tindex":"e41a935c-13a0-11e5-9f85-1dd00d61187e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:266","type":"CtAssignmentImpl","sourcecode":"E = E"},"status":-2},{"failures":[356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,158,159,160,161,162,163,164,373,165,374,166,375,376,167,168,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397],"tindex":"e41a935d-13a0-11e5-9f85-afe96b5a8a36","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} "},"variableMap":{"o1":"other","o2":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:221","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[363],"tindex":"e41a935e-13a0-11e5-9f85-d39db5ea793a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:635","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-1},{"failures":[398,399,400,401,402,403,404,405,406,407,408,409],"tindex":"e41a935f-13a0-11e5-9f85-c9572aca8984","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:174","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final E E = java.util.Iterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"e41a9360-13a0-11e5-9f85-2b9558367f21","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1153","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:275","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.convertKey(K)"},"status":-2},{"failures":[410,411,412,413],"tindex":"e41a9361-13a0-11e5-9f85-5df76d4b586b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"retval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:280","type":"CtIfImpl","sourcecode":"if ((java.util.BitSet.get(int)) == true) {\n    if (int > 0) {\n        int = -1;\n    } else {\n        int = 1;\n    }\n} "},"status":-1},{"failures":[414,415,416,417,418,419,420,421,422,423,424],"tindex":"e41a9362-13a0-11e5-9f85-f19b252c6f41","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"hasNext","beforeFirst":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:187","type":"CtWhileImpl","sourcecode":"while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n    E E = java.util.Iterator<? extends E>.next();\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n        E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n    } \n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n}"},"status":-1},{"failures":[],"tindex":"e41aba73-13a0-11e5-9f85-0108492ea44f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:568","type":"CtIfImpl","sourcecode":"if (java.util.Map<?, ?> == null) {\n    java.util.Map<?, ?> = java.util.Map<?, ?>;\n} "},"variableMap":{"answer":"map","defaultValue":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:181","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[425,426,427,428],"tindex":"e41aba74-13a0-11e5-9f85-715d4277bf69","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"status":-1},{"failures":[398,399,400,401,402,403,404,405,406,407,408,409],"tindex":"e41aba75-13a0-11e5-9f85-c95aa3b5a900","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:264","type":"CtReturnImpl","sourcecode":"return boolean"},"variableMap":{"modified":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:176","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"e41aba76-13a0-11e5-9f85-a1ca27d0b188","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:347","type":"CtIfImpl","sourcecode":"if ((this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n    throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n} "},"status":-2},{"failures":[429,430,163,431,432,433,434,435,436,437,438,439,440,441,442],"tindex":"e41aba77-13a0-11e5-9f85-8fa54752c361","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:333","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"e41aba78-13a0-11e5-9f85-d92d526f6954","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1770","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.ViewIterator.navigatePrevious().getValue()"},"variableMap":{"this":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:156","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-2},{"failures":[443],"tindex":"e41aba79-13a0-11e5-9f85-7b555f924993","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtIfImpl","sourcecode":"if (java.util.Set<? extends E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Set<E> java.util.Set<E> = ((java.util.Set<E>)(java.util.Set<? extends E>));\n    return java.util.Set<E>;\n} "},"status":-1},{"failures":[],"tindex":"e41aba7a-13a0-11e5-9f85-8d64877f7bd0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:363","type":"CtForImpl","sourcecode":"for (int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n}"},"status":-2},{"failures":[352],"tindex":"e41aba7b-13a0-11e5-9f85-15b744ff6edf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n} "},"status":-1},{"failures":[414,415,416,417,418,444,419,420,421,422,423,424],"tindex":"e41ae18c-13a0-11e5-9f85-a7016adcf473","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:140","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    if ((E) == null) {\n    } else {\n        if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n            org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n        } else {\n            org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n        }\n        E = null;\n    }\n} else {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n}"},"status":-1},{"failures":[],"tindex":"e41ae18d-13a0-11e5-9f85-c3ecddb10f18","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:66","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"e41ae18e-13a0-11e5-9f85-154f42424bb1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:177","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    this.java.util.Map<K, V>[][int].clear();\n}"},"status":-2},{"failures":[445],"tindex":"e41ae18f-13a0-11e5-9f85-93ac1cbdfe41","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:75","type":"CtIfImpl","sourcecode":"if ((((java.lang.Class<?>[] == null) && (java.lang.Object[] != null)) || ((java.lang.Class<?>[] != null) && (java.lang.Object[] == null))) || (((java.lang.Class<?>[] != null) && (java.lang.Object[] != null)) && ((java.lang.Class<?>[].int) != (java.lang.Object[].int)))) {\n    throw new java.lang.IllegalArgumentException(\"The parameter types must match the arguments\");\n} "},"status":-1},{"failures":[],"tindex":"e41ae190-13a0-11e5-9f85-03983219ade0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:562","type":"CtInvocationImpl","sourcecode":"((org.apache.commons.collections4.list.CursorableLinkedList<E>)(org.apache.commons.collections4.list.AbstractLinkedList<E>)).unregisterCursor(this)"},"variableMap":{"parent":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:221","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, E);\n}"},"status":-2},{"failures":[],"tindex":"e41ae191-13a0-11e5-9f85-1998f942299b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1122","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.Flat3Map<K, V>.org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    org.apache.commons.collections4.map.Flat3Map<K, V>.org.apache.commons.collections4.map.AbstractHashedMap<K, V> = org.apache.commons.collections4.map.Flat3Map<K, V>.org.apache.commons.collections4.map.AbstractHashedMap<K, V>.clone();\n} "},"variableMap":{"cloned":"map","delegateMap":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1151","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(java.lang.Object));\n    java.util.Map<K, V>.put(java.util.Map.Entry<K, V>.getKey(), java.util.Map.Entry<K, V>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"e41ae192-13a0-11e5-9f85-858c746dede6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:264","type":"CtIfImpl","sourcecode":"if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n    ++int;\n} else {\n    if ((int - int) > (int - int)) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    } else {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    }\n}"},"status":-2},{"failures":[171,172,174,175,176,178,179,180,181,446,447,448,107,435,449,108,450,451,452,453,454,109,439,455,110,456,457,220,221,222,223,224,226,297,298,300,301,302,304,305,306,307],"tindex":"e41ae193-13a0-11e5-9f85-2f4fa27c4156","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtIfImpl","sourcecode":"if (E == E) {\n    return 0;\n} "},"status":-1},{"failures":[415,416,417,418,419,420,421,422],"tindex":"e41b08a4-13a0-11e5-9f85-cf484ce2e422","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:195","type":"CtIfImpl","sourcecode":"if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n} "},"status":-1},{"failures":[29,31],"tindex":"e41b08a5-13a0-11e5-9f85-ff2fc345ec2f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1179","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.swapColors(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"x":"child","y":"child","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:649","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[458,459],"tindex":"e41b08a6-13a0-11e5-9f85-f91992f29f47","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:171","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.setValue(null)"},"variableMap":{"node":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:314","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-1},{"failures":[460],"tindex":"e41b08a7-13a0-11e5-9f85-5585a14c6080","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? extends C> instanceof java.util.Collection<?>) {\n    return java.util.Collection<C>.addAll(((java.util.Collection<? extends C>)(java.lang.Iterable<? extends C>)));\n} "},"status":-1},{"failures":[],"tindex":"e41b08a8-13a0-11e5-9f85-69358e386f94","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:139","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n}"},"variableMap":{"root":"right","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:601","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"e41b08a9-13a0-11e5-9f85-3349203bdb24","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n    E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n} "},"status":-2},{"failures":[],"tindex":"e41b08aa-13a0-11e5-9f85-bfb984e2e71e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"e41b08ab-13a0-11e5-9f85-bd072abd666a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:390","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Bag<E>.isEmpty())) {\n    boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.removeAll(org.apache.commons.collections4.Bag<E>);\n} "},"status":-2},{"failures":[],"tindex":"e41b08ac-13a0-11e5-9f85-29fb24184ec6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:116","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayListIterator<E>.(hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:467","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        @java.lang.SuppressWarnings(value = \"unchecked\")\n        final T T = ((T)(E));\n        T[][int++] = T;\n    }\n}"},"status":-2},{"failures":[],"tindex":"e41b2fbd-13a0-11e5-9f85-13a9aaaf0aae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:505","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[461,462,463,28,464,29,465,466,467,468,469,470,471,472,112,113,473,114,115,116,117,474,118,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,30,496,31,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,71,520,521,522,72,523,524,525,526,527,528,529,530,531,532,533,534,73,535,536,537,74,538,75,76,77],"tindex":"e41b2fbe-13a0-11e5-9f85-3d9e6c1cb263","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1025","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"e41b2fbf-13a0-11e5-9f85-49b5c977ffe8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:137","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":"e41b2fc0-13a0-11e5-9f85-6f1b841ce73d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorDecorator:44","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"OrderedMapIterator must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:91","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[],"tindex":"e41b2fc1-13a0-11e5-9f85-7955935ab2b2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"y","rightChild":"x","dataElement":"dataElement","rootNode":"rootNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1182","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"status":-2},{"failures":[539,165,540,541,449,542,455,543],"tindex":"e41b56d2-13a0-11e5-9f85-5dc619d64390","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.toString();\n} "},"variableMap":{"delegateMap":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1365","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return \"{}\";\n} "},"status":-1},{"failures":[544,545,546,547,548,549,550,551,552,553,120,121,554,122,123,124,125,555,126,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680],"tindex":"e41b56d3-13a0-11e5-9f85-e743f9cf34e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:641","type":"CtInvocationImpl","sourcecode":"this.org.apache.commons.collections4.map.ListOrderedMap<K, V>.clear()"},"variableMap":{"parent":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:172","type":"CtIfImpl","sourcecode":"if (java.util.Map<V, K>.containsKey(V)) {\n    java.util.Map<K, V>.remove(java.util.Map<V, K>.get(V));\n} "},"status":-1},{"failures":[],"tindex":"e41b56d4-13a0-11e5-9f85-db06c37741e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2138","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<V, K>>) == null) {\n    java.util.Set<java.util.Map.Entry<V, K>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseEntryView();\n} "},"variableMap":{"inverseEntrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:305","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[],"tindex":"e41b56d5-13a0-11e5-9f85-fff1feef1212","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        return null;\n    }\n} "},"variableMap":{"lengthInBits":"bitIndex","root":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:766","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"e41b56d6-13a0-11e5-9f85-a5bdbf566396","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:757","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,166,711,712,713,714,715,716,108,717,718,110,719,720],"tindex":"e41b56d7-13a0-11e5-9f85-89e378b979b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:279","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[425,426,427,428],"tindex":"e41b56d8-13a0-11e5-9f85-8ba83dca3544","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2319","type":"CtIfImpl","sourcecode":"if ((int) != 1) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"hit":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"status":-1},{"failures":[],"tindex":"e41b7de9-13a0-11e5-9f85-37536da35f02","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"variableMap":{"values":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:345","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValues<V>(this);\n} "},"status":0},{"failures":[],"tindex":"e41b7dea-13a0-11e5-9f85-d787258941b2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1159","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) != null"},"variableMap":{"next":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:242","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n            return true;\n        } \n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"e41b7deb-13a0-11e5-9f85-3767ec4970cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:352","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"e41b7dec-13a0-11e5-9f85-a3012770c205","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:189","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.DualTreeBidiMap.BidiOrderedMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:57","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator<K, V>(org.apache.commons.collections4.OrderedMapIterator<K, ? extends V>)"},"status":-2},{"failures":[],"tindex":"e41b7ded-13a0-11e5-9f85-e5cfc79ca0a0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.EqualPredicate:109","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Equator<T>) != null) {\n    return org.apache.commons.collections4.Equator<T>.equate(T, T);\n} else {\n    return T.equals(T);\n}"},"status":-2},{"failures":[],"tindex":"e41b7dee-13a0-11e5-9f85-177bcf7142a6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:140","type":"CtLocalVariableImpl","sourcecode":"final java.util.SortedSet<E> java.util.SortedSet<E> = org.apache.commons.collections4.set.TransformedSortedSet<E>.getSortedSet().tailSet(E)"},"status":-2},{"failures":[],"tindex":"e41b7def-13a0-11e5-9f85-7bc80ba7c48a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.isEmpty()) {\n    return true;\n} else {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n            continue;\n        } \n        boolean boolean = false;\n        while (java.util.Iterator<?>.hasNext()) {\n            final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n            java.util.Set<java.lang.Object>.add(java.lang.Object);\n            if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n                boolean = true;\n                break;\n            } \n        }\n        if (boolean) {\n            continue;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}"},"variableMap":{"coll2":"a","coll1":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:465","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) > (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":"e41b7df0-13a0-11e5-9f85-eb71eaf5841a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"currentNode","leftChild":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}