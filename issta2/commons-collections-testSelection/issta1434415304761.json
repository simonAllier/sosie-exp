{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":271,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":564,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":232,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":60,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":212,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":308,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":662,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":24,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":498,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":752,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":821,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":123,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":13,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":279,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":14,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFullIterator":141,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":750,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":760,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":763,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":92,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":324,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":43,"org.apache.commons.collections4.CollectionUtilsTest.get":746,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":773,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":252,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":334,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":394,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":806,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":86,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":643,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":320,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":451,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":342,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":356,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":275,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":105,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":379,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":215,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":514,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":313,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":369,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":421,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":607,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":609,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":257,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":42,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Other":102,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":307,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":416,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":808,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":595,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":646,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":538,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":244,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":107,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":434,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":540,"org.apache.commons.collections4.CollectionUtilsTest.intersection":748,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":735,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":289,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":74,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":767,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":755,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":617,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":668,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":280,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":669,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":688,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":442,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":61,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":328,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":487,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":511,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":468,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":221,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":575,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":272,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastKeySet":147,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":545,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":332,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":422,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":236,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":81,"org.apache.commons.collections4.functors.AllPredicateTest.trueAndFalseCombined":117,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":518,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":399,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":562,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":130,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":287,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":144,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":34,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":684,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":554,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":355,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":791,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":235,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":790,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":678,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":732,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":679,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFirstKey":608,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":569,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":824,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":22,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":458,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":431,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":641,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":642,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":519,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":640,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":258,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":517,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":672,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":504,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":352,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":302,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":171,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":231,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":243,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":622,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":618,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Enumeration":100,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":703,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":722,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":305,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":582,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":354,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":599,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":51,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":429,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":21,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":677,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":473,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":552,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":348,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":288,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":623,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":420,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":624,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":499,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":461,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":39,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":587,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":362,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":312,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":653,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":114,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":373,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":149,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":708,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":84,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":508,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":793,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":464,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":700,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":80,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_PrimitiveArray":101,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":327,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":561,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":769,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":404,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":106,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":495,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":491,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":233,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":710,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":361,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":494,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":803,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":268,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":541,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":345,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":118,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":343,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":536,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":277,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":412,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testObjectEqualsSelf":99,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":365,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":90,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":270,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":706,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":604,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":580,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":650,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":649,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":485,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":40,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":819,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":503,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":481,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":593,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":136,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":428,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":400,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":739,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":410,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastValues":156,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":41,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":241,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":265,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":444,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":52,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":797,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":447,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastEntrySet":164,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":121,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":251,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":579,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":226,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":637,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":713,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":699,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":71,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":79,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":482,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":37,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":528,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":390,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":685,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":811,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":712,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":175,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":563,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":198,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":603,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":758,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":759,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":798,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":689,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":774,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":802,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":764,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":719,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":181,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":812,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":158,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":730,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":825,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":213,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":557,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":479,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":740,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":661,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":128,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":695,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":183,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":590,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":696,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":10,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":85,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":697,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":262,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":701,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":333,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":359,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":374,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":177,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":330,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":671,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":658,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":731,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":110,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":29,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":816,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":31,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":178,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":742,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":783,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":446,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":33,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":113,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":539,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":655,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":654,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":751,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":274,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":551,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":670,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":698,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":489,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":176,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":153,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":822,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":323,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":810,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":9,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":8,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":5,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":4,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":7,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":6,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":1,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":3,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":2,"org.apache.commons.collections4.functors.AllPredicateTest.allTrue":116,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":211,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":260,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":331,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":138,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":621,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":104,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":693,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":694,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":704,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":801,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":488,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":707,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":347,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testSize":385,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":209,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":627,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":392,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":351,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":490,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":227,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":338,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":45,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":95,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":174,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":789,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":427,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":341,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":340,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":339,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":462,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":601,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":228,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":438,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":242,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":775,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":395,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":349,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":120,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":644,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":151,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":383,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":188,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":449,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":49,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastEntrySet":146,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":360,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":375,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastEntrySet":159,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":150,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":207,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":477,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":179,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":714,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":109,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":255,"org.apache.commons.collections4.map.LRUMapTest.testLRU":208,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":358,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":546,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":82,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":531,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":664,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":173,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":795,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":93,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":201,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":460,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":602,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":199,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":35,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":567,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastKeySet":155,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":418,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":577,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":804,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":578,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":273,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":723,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":54,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":103,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":139,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":709,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":743,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":515,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":336,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":326,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":459,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":533,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":408,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":44,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":728,"org.apache.commons.collections4.map.ListOrderedMapTest.testFirstKey":606,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":122,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":566,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":191,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":193,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":636,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":389,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":813,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":711,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":718,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":283,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":439,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastEntrySet":154,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":405,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":225,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":223,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":222,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":757,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":75,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":419,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":87,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":47,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":441,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":377,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":293,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":378,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":702,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":749,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":629,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":529,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":166,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":285,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":286,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":715,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":716,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":635,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":414,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":200,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":687,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":38,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":184,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":502,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":620,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":496,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":592,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":145,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":692,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":573,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":220,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":734,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":596,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":523,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":321,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":761,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":152,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":800,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":456,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":583,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":753,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":296,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":535,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":134,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":297,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":295,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":119,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":663,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":127,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":190,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":16,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":238,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":97,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":610,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":465,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":741,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":131,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":788,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":135,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":820,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":254,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":413,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":67,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":197,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":77,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":632,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":507,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":163,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":269,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":50,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":543,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":784,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":598,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":78,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":572,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":457,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":659,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":584,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":628,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":267,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":526,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":680,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":32,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":62,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":353,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":125,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":547,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":463,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":796,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastValues":148,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":681,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":823,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":205,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":189,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testSerializeDeserializeThenCompare":98,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":194,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":736,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":645,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":55,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":168,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":470,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":266,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":310,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":398,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":112,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":809,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":544,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":124,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":588,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":615,"org.apache.commons.collections4.CollectionUtilsTest.union":747,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":527,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":484,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":357,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":294,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":616,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":737,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":777,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":581,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":259,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":284,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":36,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":56,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":290,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":771,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":425,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":129,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":639,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":638,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":469,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":276,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":453,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastKeySet":160,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":792,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":126,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":443,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":466,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":370,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":393,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":626,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":625,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":787,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":530,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":665,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":676,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":781,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":432,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":486,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":169,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":776,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":785,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":424,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":261,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":300,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":299,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":298,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":721,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":756,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":115,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":454,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":814,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":520,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":686,"org.apache.commons.collections4.ListUtilsTest.testSubtract":450,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":382,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":553,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":586,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":576,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":726,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":505,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":430,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":762,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":186,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":65,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":474,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":19,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":282,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":501,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":371,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":525,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":63,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":64,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":512,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":542,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":594,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":76,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":492,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":391,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":162,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":651,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":57,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":206,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":309,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":366,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":11,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":59,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":605,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":318,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":306,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":720,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":786,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":568,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":28,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":683,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":403,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":690,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":744,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":516,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":281,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":23,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":724,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":218,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":570,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":143,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":216,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":799,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":611,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":537,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testConstructorsByArray":386,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":612,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":513,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":376,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":264,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":137,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":203,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":657,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":717,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":656,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":705,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":415,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":437,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":335,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":733,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":256,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":778,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":192,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":88,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":381,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":448,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":402,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":96,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":248,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":249,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":250,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":72,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":765,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":682,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":674,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":25,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":549,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":550,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":388,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":364,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":195,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":440,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":574,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":691,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":311,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":417,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":433,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":794,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":18,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":534,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":675,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":597,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":509,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":555,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":725,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":94,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":409,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":314,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":807,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":111,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":510,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":73,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":157,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":322,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":559,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":630,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":472,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":745,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":471,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":493,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":140,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":204,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":58,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":589,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":350,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":367,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":558,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":202,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":316,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":180,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":766,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":237,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":426,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":571,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":591,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":380,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":384,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":397,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":196,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":407,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":455,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":727,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":475,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":170,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":652,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":301,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":770,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":631,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":452,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":30,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":219,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":548,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":729,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":660,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":478,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":483,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":556,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":500,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":779,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":363,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":521,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":12,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":325,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":768,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":344,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":396,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":337,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":372,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":565,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":445,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":815,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":317,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":68,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":70,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":69,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":401,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":230,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":253,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":229,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastKeySet":165,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":46,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":497,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":423,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":346,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":585,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":172,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":303,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":291,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":634,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":633,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":263,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":600,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":467,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":782,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":246,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":247,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":217,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":245,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":214,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":435,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":522,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":89,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":91,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":133,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":292,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":772,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":48,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":132,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":240,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":532,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":673,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":304,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":666,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":667,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":278,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":560,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":210,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":319,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":436,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":780,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testDecorateFactory":614,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":315,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testHashCode":387,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":476,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":224,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":108,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":818,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":234,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":817,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":239,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":0,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":185,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":66,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":26,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":329,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":27,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":754,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":738,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":167,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":142,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":613,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":647,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":648,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":83,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":411,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":182,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":619,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":187,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":506,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":161,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":368,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":805,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":480,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":524,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":406},"transformations":[{"failures":[0],"tindex":"768abba3-13c0-11e5-86ff-c1fa19b4bc91","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:580","type":"CtForEachImpl","sourcecode":"for (java.lang.Character java.lang.Character : java.util.List<java.lang.Character>) {\n    java.lang.StringBuilder.append(java.lang.Character);\n}"},"status":-1},{"failures":[],"tindex":"768ae2b4-13c0-11e5-86ff-4d5680a75cbc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:151","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior"},"status":-2},{"failures":[],"tindex":"768ae2b5-13c0-11e5-86ff-51c67fc6dfc7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:104","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ((org.apache.commons.collections4.Transformer<I, O>)(org.apache.commons.collections4.Transformer<? super I, ? extends O> == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer() : org.apache.commons.collections4.Transformer<? super I, ? extends O>));\n} "},"variableMap":{"size":"length","defaultTransformer":"defaultTransformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:65","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super I>[].int) == 0) {\n    return ((org.apache.commons.collections4.Transformer<I, O>)(org.apache.commons.collections4.Transformer<? super I, ? extends O> == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer() : org.apache.commons.collections4.Transformer<? super I, ? extends O>));\n} "},"status":-2},{"failures":[],"tindex":"768b09c6-13c0-11e5-86ff-abd7cf22b0bc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"hashCode","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:638","type":"CtForImpl","sourcecode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n        do {\n            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n    } \n}"},"status":-2},{"failures":[],"tindex":"768b09c7-13c0-11e5-86ff-49960a7cdb83","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AnyPredicate:78","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n} "},"variableMap":{"length":"length","preds":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:60","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 1) {\n    return org.apache.commons.collections4.functors.FunctorUtils.org.apache.commons.collections4.functors.FunctorUtils.coerce(org.apache.commons.collections4.Predicate<? super T>[][0]);\n} "},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11],"tindex":"768b09c8-13c0-11e5-86ff-01f86a66e960","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"status":-1},{"failures":[12,13,14,15,16,17],"tindex":"768b09c9-13c0-11e5-86ff-e5f27c6be1af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:439","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[18,19],"tindex":"768b09ca-13c0-11e5-86ff-e999a05e2406","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"variableMap":{"lastItemIndex":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:255","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    int++;\n} else {\n    int = org.apache.commons.collections4.map.ListOrderedMap<K, V>.(indexOf(java.util.Map.Entry<? extends K, ? extends V>.getKey())) + 1;\n}"},"status":-1},{"failures":[],"tindex":"768b30db-13c0-11e5-86ff-1d41440e6e7a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1770","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.ViewIterator.navigatePrevious().getValue()"},"variableMap":{"this":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"768eda5c-13c0-11e5-86ff-07940efa1d72","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hash3","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                return V;\n            } \n        case 2 :\n            if ((K) == null) {\n                return V;\n            } \n        case 1 :\n            if ((K) == null) {\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n        }\n    } \n}"},"status":-2},{"failures":[20,0,21,22,23,24],"tindex":"768eda5d-13c0-11e5-86ff-17726b73ba03","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:232","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int)"},"variableMap":{"vUp":"vUp","start1":"delta","end2":"k","this":"this","i":"start2","end1":"k","k":"delta","start2":"k"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:205","type":"CtIfImpl","sourcecode":"if ((int[][(int - int)]) <= (int[][int])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n} "},"status":-1},{"failures":[],"tindex":"768eda5e-13c0-11e5-86ff-0973e2aa8f77","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"cmp","maxElements":"cmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:571","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    break;\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"tindex":"768eda5f-13c0-11e5-86ff-6757af97fdf9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtIfImpl","sourcecode":"if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n} else {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-1},{"failures":[98,99],"tindex":"768f2880-13c0-11e5-86ff-b5c5b7b8fe8a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:110","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"status":-1},{"failures":[100,101,102],"tindex":"768f2881-13c0-11e5-86ff-8b20f4871d73","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:206","type":"CtReturnImpl","sourcecode":"return java.lang.Object == java.lang.Object"},"variableMap":{"key1":"object","key2":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[103,104,105,106],"tindex":"768f2882-13c0-11e5-86ff-d72d1c38d175","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:853","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"rval","leftChild":"rval","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:701","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"768f2883-13c0-11e5-86ff-99788cb849d6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:79","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int)"},"variableMap":{"this":"this","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.GrowthList:186","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E)"},"status":-2},{"failures":[107,108,109,110,111,112,113,114,115],"tindex":"768f2884-13c0-11e5-86ff-2bac02de854e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:853","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map.Entry) {\n    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(java.lang.Object));\n    final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.getEntry(java.util.Map.Entry<?, ?>.getKey());\n    return (java.util.Map.Entry<K, V> != null) && (java.util.Map.Entry<K, V>.equals(java.util.Map.Entry<?, ?>));\n} "},"variableMap":{"entry":"obj","parent":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1142","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(java.lang.Object);\n} "},"status":-1},{"failures":[],"tindex":"768f2885-13c0-11e5-86ff-0161c2615623","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TransformedBag:82","type":"CtForEachImpl","sourcecode":"for (final E E : E[]) {\n    org.apache.commons.collections4.bag.TransformedBag<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}"},"status":-2},{"failures":[116,116,117,117,118,119,120,121],"tindex":"768f2886-13c0-11e5-86ff-c75a5b527820","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:56","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate<? super T>[])"},"variableMap":{"predicates":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:106","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"status":-1},{"failures":[],"tindex":"768f4f97-13c0-11e5-86ff-57c83662db7a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:216","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"768f4f98-13c0-11e5-86ff-6352028f0738","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:329","type":"CtInvocationImpl","sourcecode":"java.util.ListIterator<java.util.Map.Entry<K, V>>.remove()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:99","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<java.util.Map.Entry<K, V>>.remove()"},"status":0},{"failures":[122,123,124,125,126,127,128,129,130,131,132,133,134,135,58,136],"tindex":"768f4f99-13c0-11e5-86ff-e7f8ba430a56","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:271","type":"CtAssignmentImpl","sourcecode":"boolean = java.util.Collection<V>.add(((V)(java.lang.Object)))"},"status":-1},{"failures":[137,59,138,139,140,141],"tindex":"768f4f9a-13c0-11e5-86ff-2950934d9c80","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"chainExhausted","nextCalled":"chainExhausted"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:96","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> != null) {\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} else {\n    boolean = true;\n}"},"status":-1},{"failures":[142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167],"tindex":"768f4f9b-13c0-11e5-86ff-b11e6ad9f41a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1062","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : java.util.Map<K, V>.entrySet()) {\n    java.util.Map<V, K>.put(java.util.Map.Entry<K, V>.getValue(), java.util.Map.Entry<K, V>.getKey());\n}"},"variableMap":{"map":"normalMap","out":"reverseMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:188","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(java.lang.Object)) {\n    V = java.util.Map<K, V>.remove(java.lang.Object);\n    java.util.Map<V, K>.remove(V);\n} "},"status":-1},{"failures":[168,169],"tindex":"768f4f9c-13c0-11e5-86ff-cf71bc76cfea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:207","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n    return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n} "},"status":-1},{"failures":[],"tindex":"768f4f9d-13c0-11e5-86ff-0d6210e191ae","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:546","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Bag<?>.size()) != org.apache.commons.collections4.bag.AbstractMapBag<E>.(size())) {\n    return false;\n} "},"variableMap":{"other":"other","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:549","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet()) {\n    if ((org.apache.commons.collections4.Bag<?>.getCount(E)) != org.apache.commons.collections4.bag.AbstractMapBag<E>.(getCount(E))) {\n        return false;\n    } \n}"},"status":0},{"failures":[],"tindex":"768f4f9e-13c0-11e5-86ff-672b372880e8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:952","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.Flat3Map.KeySet<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:491","type":"CtReturnImpl","sourcecode":"return java.util.Set<E>"},"status":-2},{"failures":[],"tindex":"768f4f9f-13c0-11e5-86ff-ed09323a4994","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:211","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"768f75b0-13c0-11e5-86ff-fbc285d1a9dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:394","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.ValueView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[170,171,172],"tindex":"768f75b1-13c0-11e5-86ff-83e55d66b7f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger != null) {\n    return org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n} "},"variableMap":{"count":"value","value":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:146","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    return int;\n} "},"status":-1},{"failures":[],"tindex":"768f75b2-13c0-11e5-86ff-5102d7aadf14","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:264","type":"CtIfImpl","sourcecode":"if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n    ++int;\n} else {\n    if ((int - int) > (int - int)) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    } else {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    }\n}"},"status":-2},{"failures":[20,0,21,22,23,24],"tindex":"769282f3-13c0-11e5-86ff-0949e9fd44e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:174","type":"CtIfImpl","sourcecode":"if ((int == 0) || (int == 0)) {\n    return null;\n} "},"variableMap":{"m":"d","n":"k"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtIfImpl","sourcecode":"if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n    if ((int[][int]) <= (int[][(int + int)])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[29,41],"tindex":"769282f4-13c0-11e5-86ff-8d61c00dbc57","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:165","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.CompositeSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; int++) {\n    java.lang.Object[][int] = java.util.Iterator<E>.next();\n}"},"status":-1},{"failures":[173,174,175,176],"tindex":"769282f5-13c0-11e5-86ff-ed9a915ed331","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:99","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>.isSetValueChecking()) {\n    return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this);\n} "},"status":-1},{"failures":[],"tindex":"769282f6-13c0-11e5-86ff-49726cb52fd3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"status":0},{"failures":[],"tindex":"769282f7-13c0-11e5-86ff-f9ffa656db32","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"convertedKey","length":"hashCode","key":"convertedKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:279","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"7692aa08-13c0-11e5-86ff-d530950ecf6c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:358","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.removeAllExpired(org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.now())"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:167","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-2},{"failures":[],"tindex":"7692aa09-13c0-11e5-86ff-c962ed4be474","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:138","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.List<E>.add(org.apache.commons.collections4.collection.TransformedCollection<E>.transform(E));\n}"},"status":-2},{"failures":[177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,113],"tindex":"7692aa0a-13c0-11e5-86ff-25f4a0d77c92","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:279","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"7692aa0b-13c0-11e5-86ff-d3913a586388","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:568","type":"CtIfImpl","sourcecode":"if (java.util.Map<?, ?> == null) {\n    java.util.Map<?, ?> = java.util.Map<?, ?>;\n} "},"variableMap":{"answer":"mapToCopy","defaultValue":"mapToCopy"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:862","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> : java.util.Map<? extends org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, ? extends V>.keySet()) {\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.checkKey(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>);\n}"},"status":-2},{"failures":[],"tindex":"7692aa0c-13c0-11e5-86ff-75199cf40ec0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"index","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[12,219],"tindex":"7692aa0d-13c0-11e5-86ff-cfa14aff29b5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1106","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, (int + (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)), (int + int)))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"7692aa0e-13c0-11e5-86ff-31d3801e12cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:810","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[],"tindex":"7692aa0f-13c0-11e5-86ff-4b029952d497","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:181","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[220,221,222,223,224,225,226,227,228],"tindex":"7692d120-13c0-11e5-86ff-afbd8cdf1061","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:398","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:242","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n            return true;\n        } \n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n}"},"status":-1},{"failures":[229,230,231,232,233,234,235,236,109,110,111,237,238,112,239,113,240,241,114,115,242,243,244,245,246,247,248,249,250,227,251,252,228,253,254,255,256,257,258,259,260,107,108],"tindex":"7692d121-13c0-11e5-86ff-1ffbebb280fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:398","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 2 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 1 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":-1},{"failures":[261,103,262,104,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,105,316,106,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353],"tindex":"7692d122-13c0-11e5-86ff-dd58cc963b20","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:854","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"leftChild":"node","node":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:571","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    break;\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"7692d123-13c0-11e5-86ff-154ff230bab3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"variableMap":{"isLocked":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:187","type":"CtWhileImpl","sourcecode":"while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n    E E = java.util.Iterator<? extends E>.next();\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n        E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n    } \n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n}"},"status":-2},{"failures":[],"tindex":"7692d124-13c0-11e5-86ff-a77f4e1eab28","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:868","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"siblingNode","node":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1030","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":-2},{"failures":[354,355,356,357],"tindex":"7692f835-13c0-11e5-86ff-eb81675ac47f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"size","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:245","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"7692f836-13c0-11e5-86ff-9f8b94c95c32","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"status":-2},{"failures":[358,359,360,361,362,363,364],"tindex":"7692f837-13c0-11e5-86ff-85887c806693","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"status":-1},{"failures":[],"tindex":"7692f838-13c0-11e5-86ff-63613b8875ac","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"right","current":"current","tree":"current","right":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:696","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"7692f839-13c0-11e5-86ff-b12ea5b61e47","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"length","newCapacity":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:363","type":"CtForImpl","sourcecode":"for (int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n}"},"status":-2},{"failures":[],"tindex":"7692f83a-13c0-11e5-86ff-d79ee61efcab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"oldCapacity","proposedCapacity":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:638","type":"CtForImpl","sourcecode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n        do {\n            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n    } \n}"},"status":-2},{"failures":[],"tindex":"7692f83b-13c0-11e5-86ff-4b23bad7f6c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1552","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDelete(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>)"},"variableMap":{"node":"node","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:520","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384],"tindex":"7692f83c-13c0-11e5-86ff-297f150acec5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:88","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"uniqueIndex","beforeFirst":"uniqueIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:243","type":"CtIfImpl","sourcecode":"if ((boolean) && (org.apache.commons.collections4.MultiMap<K, C>.containsKey(K))) {\n    throw new java.lang.IllegalArgumentException(\"Duplicate key in uniquely indexed collection.\");\n} "},"status":-1},{"failures":[287,291,301,304,305,308,309,310,311,312],"tindex":"76931f4d-13c0-11e5-86ff-0731f2795e1e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"dataElement":"dataElement","deletedNode":"to"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[12],"tindex":"76931f4e-13c0-11e5-86ff-3f4e71ce3bd9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1056","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return null;\n}"},"variableMap":{"root":"found"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1023","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"status":-1},{"failures":[116,117,117,121],"tindex":"76931f4f-13c0-11e5-86ff-1d2d13093596","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:398","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:108","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Predicate<? super T>.evaluate(T))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"76931f50-13c0-11e5-86ff-7f24e69e3ea4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:431","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"current":"left","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:428","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        if ((!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K))) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        } else {\n            return null;\n        }\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[129],"tindex":"76931f51-13c0-11e5-86ff-6b1784e025fd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:216","type":"CtIfImpl","sourcecode":"if (boolean == false) {\n    return false;\n} "},"status":-1},{"failures":[385,386,387,220,388,389,390,391],"tindex":"76931f52-13c0-11e5-86ff-f98031791262","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:178","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    int += org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int;\n}"},"variableMap":{"size":"total","cnt":"total","i":"total","locks":"keys"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:263","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    if (java.lang.Object != null) {\n        int ^= java.lang.Object.hashCode();\n    } \n}"},"status":-1},{"failures":[391,389,388,390],"tindex":"76931f53-13c0-11e5-86ff-2523b78405d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2279","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int"},"variableMap":{"modCount":"h","expectedModCount":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:369","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 14"},"status":-1},{"failures":[392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,210,407,408,409,410,411,412,413,414,212,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447],"tindex":"76931f54-13c0-11e5-86ff-cbbfd4ebd7d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:57","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[],"tindex":"76934665-13c0-11e5-86ff-9b09c3f4cd7f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"cmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:502","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"769457d6-13c0-11e5-86ff-536303adc868","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:92","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\");\n} "},"variableMap":{"canRemove":"isLocked"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:267","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    org.apache.commons.collections4.comparators.ComparatorChain<E>.checkChainIntegrity();\n    boolean = true;\n} "},"status":0},{"failures":[],"tindex":"769457d7-13c0-11e5-86ff-a7dcb1d0afec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:548","type":"CtIfImpl","sourcecode":"if (java.lang.Double == null) {\n    java.lang.Double = java.lang.Double;\n} "},"variableMap":{"answer":"childValue","defaultValue":"childValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1017","type":"CtIfImpl","sourcecode":"if (boolean && (java.lang.Object != null)) {\n    java.io.PrintStream.print(' ');\n    java.io.PrintStream.println(java.lang.Object.getClass().getName());\n} else {\n    java.io.PrintStream.println();\n}"},"status":-2},{"failures":[],"tindex":"769457d8-13c0-11e5-86ff-a9906a8bcf59","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:333","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1139","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[448,449],"tindex":"769457d9-13c0-11e5-86ff-a9c1f12cc01b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:518","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.keySet()) {\n    if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) != (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[20,0,21,22,23,24],"tindex":"769457da-13c0-11e5-86ff-55bede2724b4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:174","type":"CtIfImpl","sourcecode":"if ((int == 0) || (int == 0)) {\n    return null;\n} "},"variableMap":{"m":"end2","n":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtIfImpl","sourcecode":"if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n    if ((int[][(int - int)]) <= (int[][int])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605],"tindex":"7695905b-13c0-11e5-86ff-f351d6431f2b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:547","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    throw new java.util.ConcurrentModificationException(\"Cursor closed\");\n} "},"variableMap":{"valid":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:275","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.add(java.util.Iterator<? extends E>.next());\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[388,389,390,391],"tindex":"7695905c-13c0-11e5-86ff-139e5f28ddf2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1165","type":"CtIfImpl","sourcecode":"if ((java.lang.Object[] == null) || ((java.lang.Object[].int) < 2)) {\n    throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + int));\n} "},"variableMap":{"sub":"key5","length":"h","i":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:671","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[606,607,608,609],"tindex":"7695905d-13c0-11e5-86ff-c73fea9dffe8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:641","type":"CtInvocationImpl","sourcecode":"this.org.apache.commons.collections4.map.ListOrderedMap<K, V>.clear()"},"variableMap":{"parent":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:167","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-1},{"failures":[610,19,611,612],"tindex":"7695905e-13c0-11e5-86ff-9761962719a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"status":-1},{"failures":[613],"tindex":"7695905f-13c0-11e5-86ff-55e50afbe15a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:159","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"7695b770-13c0-11e5-86ff-23ba254ceaae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"7695b771-13c0-11e5-86ff-1bacc529e25c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:171","type":"CtAssignmentImpl","sourcecode":"boolean = int == 0"},"variableMap":{"result":"tmpDirection","comparison":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:137","type":"CtAssignmentImpl","sourcecode":"boolean[][(int + int)] = boolean"},"status":-2},{"failures":[286],"tindex":"7695b772-13c0-11e5-86ff-9d87cc6e06f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1420","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    K K = ((K)(java.io.ObjectInputStream.readObject()));\n    V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.put(K, V);\n}"},"status":-1},{"failures":[614],"tindex":"7695b773-13c0-11e5-86ff-1b9bf2361374","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:51","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Iterator<E> java.util.Iterator<E> = ((java.util.Iterator<E>)(java.util.Iterator<? extends E>));\n    return java.util.Iterator<E>;\n} "},"status":-1},{"failures":[],"tindex":"7695b774-13c0-11e5-86ff-45f316af96ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:160","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super V>.evaluate(V)) == false) {\n    throw new java.lang.IllegalArgumentException(\"Cannot set value - Predicate rejected it\");\n} "},"status":-2},{"failures":[],"tindex":"7695b775-13c0-11e5-86ff-43191748d3be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:452","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.collection.CompositeCollection<V>.addComposited(java.util.Map<K, V>[][int].values());\n}"},"status":-2},{"failures":[615,616,617,618,619,620,206,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,207,636,637,638,639,640,641,642,209,643,644,645,401,402,403,404,405,646,406,210,407,408,647,648,649,650,651,652,653,409,410,411,412,413,414,212,415,416,654,655,656,657,658,659,660,661,221,662,663,213,664,665,666,667,668,669,670,671,672,673,224,674,675,216,676,677,678,679,680,681,682,683,217,684,685,686,687,688,689,690,218,691,692,693,694,695,696,697,107,108,109,110,111,112,115,245,246,248,249,257],"tindex":"7695b776-13c0-11e5-86ff-0daf3a7b07b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:457","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"7695b777-13c0-11e5-86ff-2dc86b5a05b2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ArrayStack:107","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.util.EmptyStackException();\n} else {\n    return java.util.ArrayList<E>.get(int);\n}"},"variableMap":{"this":"list","m":"wrappedIteratorIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:142","type":"CtIfImpl","sourcecode":"if ((int) < (int)) {\n    ++(int);\n    return java.util.List<E>.get(((int) - 1));\n} "},"status":-2},{"failures":[220,698,615,616,699,617,618,619,700,620,206,621,622,701,702,703,704,705,706,208,209,707,401,402,708,403,404,405,646,406,210,407,408,709,710,711,712,713,211,714,409,410,715,411,412,413,716,414,212,415,416,717,718,719,720,721,722,659,660,723,661,221,662,724,663,213,664,665,725,222,726,727,223,728,671,672,729,673,224,674,730,675,216,676,677,731,225,732,733,226,684,685,734,686,687,688,689,690,218,691,692,234,107,108,109,110,111,112,113,114,115,242,227,251,252,228],"tindex":"7695de88-13c0-11e5-86ff-e51bc7e60adb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"status":-1},{"failures":[],"tindex":"7695de89-13c0-11e5-86ff-d3af239461df","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1317","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size())) {\n    return false;\n} "},"status":0},{"failures":[490,525,540,558,735,594],"tindex":"7695de8a-13c0-11e5-86ff-315c2b19c178","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:371","type":"CtReturnImpl","sourcecode":"return !((java.util.ListIterator<?>.hasNext()) || (java.util.ListIterator<?>.hasNext()))"},"variableMap":{"it2":"e","it1":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:95","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n    return false;\n} "},"status":-1},{"failures":[736,25,737,738,448,739,740,741,742,743,744,745,746,449,747,748,749,750,751],"tindex":"7695de8b-13c0-11e5-86ff-f543ecdbeec3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:442","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n} else {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n}"},"status":-1},{"failures":[752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785],"tindex":"7695de8c-13c0-11e5-86ff-7bfbec712483","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:219","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"canRemove":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:397","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(\", \");\n} "},"status":-1},{"failures":[],"tindex":"7695de8d-13c0-11e5-86ff-c3bb8bc93ab4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1057","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:505","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[786,787],"tindex":"7695de8e-13c0-11e5-86ff-85edf9d7a87f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:106","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"result","beforeFirst":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:222","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    boolean |= org.apache.commons.collections4.set.ListOrderedSet<E>.remove(java.lang.Object);\n}"},"status":-1},{"failures":[],"tindex":"7695de8f-13c0-11e5-86ff-19f06f9ad52e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:380","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    org.apache.commons.collections4.queue.CircularFifoQueue.this.remove();\n    int = -1;\n    return ;\n} "},"variableMap":{"lastReturnedIndex":"mapSize","start":"mapSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:320","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"status":-2},{"failures":[12,13,14,15,16,17],"tindex":"7695de90-13c0-11e5-86ff-ed768fc55156","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:439","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[788,789,629,630,790,631,632,633,634,635,207,636,637,791,638,639,792,640,641,642,793,794,795,796,797,798,799,684,685,734,686,687,688,689,690,218,691,692,800,693,694,801,695,696,697,802,803,804,805],"tindex":"769605a1-13c0-11e5-86ff-0d10d811d90c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:319","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntrySet<K, V>(this);\n} "},"status":-1},{"failures":[],"tindex":"769605a2-13c0-11e5-86ff-01d7a0e65ce9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:111","type":"CtReturnImpl","sourcecode":"return (this.int) < (this.int)"},"variableMap":{"endIndex":"length","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"769605a3-13c0-11e5-86ff-793651610ba1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:127","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[806,807,808,809,810,811,812,813,814,815,816,817,818],"tindex":"769605a4-13c0-11e5-86ff-5b02319b3791","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"variableMap":{"it2":"iterator","it1":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"status":-1},{"failures":[615,616,699,617,618,619,700,620,206,621,622,819,629,630,790,631,632,633,634,635,207,636,637,820,401,402,708,403,404,405,646,406,210,407,408,821,409,410,715,411,412,413,716,414,212,415,416,822,659,660,723,661,221,662,724,663,213,664,665,823,671,672,729,673,224,674,730,675,216,676,677,824,684,685,734,686,687,688,689,690,218,691,692,825,107,108,109,110,111,112,113,114,115],"tindex":"769605a5-13c0-11e5-86ff-bd483507de63","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1317","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size())) {\n    return false;\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}