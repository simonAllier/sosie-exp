{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":25,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":555,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":206,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":423,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":37,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":62,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":371,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":235,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":156,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx4":389,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":154,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":634,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":152,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":8,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":340,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":6,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":151,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":33,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":326,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":365,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":261,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":675,"org.apache.commons.collections4.comparators.ComparatorChainTest.testBadNoopComparatorChain":323,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":415,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":373,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":47,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":336,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":683,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":80,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":300,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":296,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":259,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":378,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":130,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":422,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":456,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":40,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":398,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":90,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":255,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":167,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":200,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":76,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":141,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":448,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":98,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":145,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":403,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":29,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":5,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":70,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":232,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":293,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":392,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":286,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":67,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":276,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":334,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":592,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":494,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":656,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":408,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":570,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":290,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":564,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":598,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":660,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":637,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":619,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":219,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":77,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":125,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":566,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":319,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":61,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":202,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":446,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":659,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":305,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":511,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":464,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":434,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":578,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":179,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":191,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":244,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":291,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":50,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":142,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":218,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":51,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":353,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":49,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":239,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":457,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":466,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":532,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":628,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":346,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":43,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":189,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":287,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":372,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":682,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":518,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":34,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":350,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":404,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":84,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":486,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":498,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":569,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":647,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":611,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":519,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":356,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":441,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":444,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":572,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":26,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":303,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":170,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":607,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":636,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":23,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":222,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":88,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":469,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":662,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":567,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":512,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":279,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":476,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":559,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":21,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":214,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":197,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":442,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":614,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":622,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":673,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":177,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":109,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":554,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":349,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":41,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":343,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":431,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":445,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":472,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":247,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":400,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":544,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":450,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":685,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":580,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":163,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":257,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":545,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":121,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":20,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":563,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":64,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":181,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":174,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":531,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":432,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":369,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":513,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":203,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":139,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":601,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":289,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":470,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":529,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":633,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":603,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":295,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":341,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":562,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":602,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":108,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":416,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":304,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":438,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":623,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":309,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":228,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":56,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":533,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":413,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":397,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":381,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":48,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":277,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":594,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":11,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":194,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":301,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":38,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":307,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":316,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":393,"org.apache.commons.collections4.comparators.ComparatorChainTest.testBadListComparatorChain":324,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":482,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":377,"org.apache.commons.collections4.list.TreeListTest.testRemove":313,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":686,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":59,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":278,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":0,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":632,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":348,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":310,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":508,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":30,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":243,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":131,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":649,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":272,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":249,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":345,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":500,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":165,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":124,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":368,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":479,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":650,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":258,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":584,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":297,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":127,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":213,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":459,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":104,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":483,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":639,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":42,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":236,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":516,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":225,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":263,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":568,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":54,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":268,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":66,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":596,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":384,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":354,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":522,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":122,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":507,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":561,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":198,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":207,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":615,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":402,"org.apache.commons.collections4.ListUtilsTest.testSubtract":447,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":608,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":260,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":579,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":573,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":248,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":251,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":395,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":605,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":644,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":630,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":421,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":119,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":83,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":553,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":10,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":175,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":344,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":418,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":585,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":72,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":36,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":234,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":484,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":490,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":355,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":148,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":621,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":641,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":612,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":468,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":493,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":328,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":658,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":491,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":481,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":642,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":527,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":22,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":546,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":467,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":190,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":539,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":101,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":116,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":99,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":440,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":460,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":31,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":419,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":63,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":330,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":24,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":331,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":166,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":3,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":144,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":117,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":212,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":665,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":577,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":648,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":159,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":653,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":230,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":600,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":162,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping1":666,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":599,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping2":667,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping3":668,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":9,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":74,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":480,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":199,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":288,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":60,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":590,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":657,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":358,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":178,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":7,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":111,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":363,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":157,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":253,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEmptyIterator":364,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":136,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":435,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":565,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":19,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":314,"org.apache.commons.collections4.functors.AllPredicateTest.nullCollectionToGetInstance":385,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":557,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":410,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":535,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":318,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":405,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":576,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":133,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":360,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":412,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":2,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":294,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":35,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":597,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":226,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":370,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":399,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":406,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":271,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":321,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":591,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":429,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":624,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":463,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":646,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":536,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":325,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":401,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":452,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":292,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":509,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":526,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":264,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":18,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsSelf":558,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":118,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":506,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":312,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":426,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":322,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":379,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":428,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":155,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":528,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":91,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":320,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":161,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":242,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":1,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":205,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":505,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":654,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":394,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":502,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":679,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":233,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":237,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":252,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":262,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":449,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":549,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":281,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":12,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":267,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":120,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":427,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":443,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":411,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":224,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":541,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":347,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":473,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":475,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":652,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":409,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":16,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":171,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":407,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":571,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":283,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":65,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":89,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":153,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":499,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":86,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":362,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":229,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":329,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":216,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":453,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":424,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":661,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":209,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":609,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":547,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEmptyIterator":361,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":455,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":113,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":158,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":126,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":299,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":68,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":201,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":645,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":530,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":542,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":520,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":143,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":610,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":134,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":78,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":383,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":433,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":677,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":465,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":551,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":13,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testSize":670,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":417,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":582,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":28,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":246,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":581,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":461,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":238,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":485,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":488,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":492,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":503,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":138,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":357,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":306,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":106,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":220,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":332,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":454,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":550,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":79,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":204,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":71,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":176,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":651,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":110,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":396,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":273,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":655,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":337,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":172,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":339,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":534,"org.apache.commons.collections4.list.TreeListTest.testBug35258":317,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":510,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":586,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":123,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":376,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":87,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":501,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":137,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testReset":669,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":342,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":215,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":241,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":223,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":308,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":315,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":627,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":589,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":583,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":17,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":548,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":496,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":129,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":414,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":474,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":487,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":114,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":188,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":430,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":458,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":538,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":103,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":275,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":616,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":81,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":149,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":269,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":100,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":146,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":270,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":169,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":93,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx4":388,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":132,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":164,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":107,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":556,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":256,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":489,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":208,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":73,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":477,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":678,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":227,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":525,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":94,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":195,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":193,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":380,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":495,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":504,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":97,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":96,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":95,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":274,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":102,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":280,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":173,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":631,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":180,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":425,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":517,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":664,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":57,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":684,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":45,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":643,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":663,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":196,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":221,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":298,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":604,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":250,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":168,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":105,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testRemoving1":671,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":593,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":523,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":680,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":338,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":160,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":521,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":187,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":245,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":186,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":185,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":285,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":390,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":617,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":182,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":183,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":676,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":184,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":335,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":352,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":46,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":540,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":351,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":626,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":672,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":524,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":439,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":588,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":58,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":217,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":192,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":374,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":420,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":382,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":4,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":128,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":681,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":552,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":75,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":140,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":284,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":69,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":135,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":587,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":471,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":478,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":254,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":560,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":327,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":625,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":211,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":210,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":112,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":311,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":515,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":635,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":367,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4":386,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":497,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":674,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":266,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":537,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":147,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":595,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":85,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":574,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":543,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":366,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":437,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":436,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":575,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":27,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":231,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":302,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":240,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":391,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsSelf":451,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":115,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":15,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4":387,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":640,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":638,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":613,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":92,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":82,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":150,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":462,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":514,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":618,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":606,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":333,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":629,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":282,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":620,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":359,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":265,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":375},"transformations":[{"failures":[],"tindex":"07ae256f-13e5-11e5-84d0-bbde0bf0e02e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"size","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:431","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    int += this.java.util.Map<K, V>[][int].size();\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"tindex":"07c99cb0-13e5-11e5-84d0-3f25fb9a4b12","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"leastIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:360","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    int = int;\n    E = java.util.ArrayList<E>.get(int);\n} else {\n    final E E = java.util.ArrayList<E>.get(int);\n    if ((java.util.Comparator<? super E>) == null) {\n        throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n    } \n    if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n        E = E;\n        int = int;\n    } \n}"},"status":-1},{"failures":[],"tindex":"07ca8711-13e5-11e5-84d0-fdb3afa99253","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:278","type":"CtIfImpl","sourcecode":"if (int != 0) {\n    if ((java.util.BitSet.get(int)) == true) {\n        if (int > 0) {\n            int = -1;\n        } else {\n            int = 1;\n        }\n    } \n    return int;\n} "},"variableMap":{"comparatorIndex":"i","orderingBits":"value","retval":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:146","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    return int;\n} "},"status":-2},{"failures":[],"tindex":"07ca8712-13e5-11e5-84d0-190adf1622fe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse = new org.apache.commons.collections4.bidimap.TreeBidiMap.Inverse();\n} "},"status":-2},{"failures":[],"tindex":"07cb9883-13e5-11e5-84d0-3d1b7f4e92de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:297","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>) {\n    java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear();\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    break;\n} "},"variableMap":{"cursor":"cur","cur":"cur","ref":"ref","it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:292","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>) {\n    java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear();\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    break;\n} "},"status":0},{"failures":[12],"tindex":"07cca9f4-13e5-11e5-84d0-193c554ceec0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"status":-1},{"failures":[13],"tindex":"07ccd105-13e5-11e5-84d0-6d20fc045ca1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:353","type":"CtIfImpl","sourcecode":"if ((this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n    throw new java.lang.UnsupportedOperationException(\"No mutator specified\");\n} "},"variableMap":{"mutator":"mutator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:137","type":"CtIfImpl","sourcecode":"if ((this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n    throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n} "},"status":-1},{"failures":[],"tindex":"07ceccd6-13e5-11e5-84d0-61f5b9898654","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:333","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-2},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109],"tindex":"07ceccd7-13e5-11e5-84d0-8f0ec5e00095","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:855","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"y","node":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:915","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-1},{"failures":[],"tindex":"07d77f68-13e5-11e5-84d0-53e9177fe522","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:862","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> : java.util.Map<? extends org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, ? extends V>.keySet()) {\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.checkKey(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>);\n}"},"status":-2},{"failures":[],"tindex":"07d77f69-13e5-11e5-84d0-67ec65ac95d8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:296","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n        return false;\n    } \n}"},"status":-2},{"failures":[110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153],"tindex":"07d77f6a-13e5-11e5-84d0-05fde294cfa2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:136","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"status":-1},{"failures":[154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199],"tindex":"07d77f6b-13e5-11e5-84d0-99fe47600967","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:158","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int))) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n        final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n        return null;\n    } else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        }\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n        } \n    } \n} "},"status":-1},{"failures":[],"tindex":"07d77f6c-13e5-11e5-84d0-b93445c7b989","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"length","lengthInBits":"length","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"length","otherOffsetInBits":"length","otherLengthInBits":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:177","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    this.java.util.Map<K, V>[][int].clear();\n}"},"status":-2},{"failures":[],"tindex":"07d7a67d-13e5-11e5-84d0-6383e2a8ea16","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:854","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"leftChild":"node","node":"node","dataElement":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:569","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(((T)(java.lang.Object)), ((T)(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))));\n    if (int == 0) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        break;\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n}"},"status":-2},{"failures":[200,201,202,203,204,205,206,207,208,209,210,211],"tindex":"07d7a67e-13e5-11e5-84d0-35ce8b39790c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:216","type":"CtIfImpl","sourcecode":"if (boolean == false) {\n    return false;\n} "},"variableMap":{"removed":"previousObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:220","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n} "},"status":-1},{"failures":[],"tindex":"07d7a67f-13e5-11e5-84d0-d702f29cb333","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1396","type":"CtTryImpl","sourcecode":"try {\n    return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n}"},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map) {\n    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object));\n    return org.apache.commons.collections4.map.CompositeMap<K, V>.entrySet().equals(java.util.Map<?, ?>.entrySet());\n} "},"status":-2},{"failures":[],"tindex":"07d7a680-13e5-11e5-84d0-a5d5e8a925d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:133","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[],"tindex":"07d9f071-13e5-11e5-84d0-d95144604d5a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[],"tindex":"07db01e2-13e5-11e5-84d0-dd9761bcd9e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:265","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)))"},"variableMap":{"i":"end2","script":"script","sequence1":"sequence1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:264","type":"CtIfImpl","sourcecode":"if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n    ++int;\n} else {\n    if ((int - int) > (int - int)) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    } else {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    }\n}"},"status":-2},{"failures":[212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312],"tindex":"07db01e3-13e5-11e5-84d0-817e695fb33b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger != null) {\n    return org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n} "},"status":-1},{"failures":[],"tindex":"07db01e4-13e5-11e5-84d0-d90532155a0e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"status":-2},{"failures":[],"tindex":"07db01e5-13e5-11e5-84d0-37f3f7fed74e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:333","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.getClass().equals(java.util.HashSet.java.util.HashSet)) {\n    java.util.Set<E> = new java.util.HashSet<E>(java.util.List<E>.size());\n} else {\n    try {\n        java.util.Set<E> = java.util.Set<E>.getClass().newInstance();\n    } catch (final java.lang.InstantiationException ie) {\n        java.util.Set<E> = new java.util.HashSet<E>();\n    } catch (final java.lang.IllegalAccessException iae) {\n        java.util.Set<E> = new java.util.HashSet<E>();\n    }\n}"},"status":-2},{"failures":[313,314,315,316,317,318,319,320,321,322],"tindex":"07dd24c6-13e5-11e5-84d0-ed76c73c2689","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:203","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(int , E , null , null);\n} else {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(int, E);\n}"},"status":-1},{"failures":[],"tindex":"07dd24c7-13e5-11e5-84d0-09b80a554204","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:516","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[41,45,55,58,59,62,63,64,65,66],"tindex":"07dd4bd8-13e5-11e5-84d0-1da73c1fd12a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"yWasLeftChild","beforeFirst":"yWasLeftChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1126","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"07dd4bd9-13e5-11e5-84d0-dd838aabbc8d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:177","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        int += org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int;\n    }\n}"},"status":-2},{"failures":[323,324],"tindex":"07dd4bda-13e5-11e5-84d0-fb5bd252dc6c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:150","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.comparators.ComparatorChain<E>.checkLocked()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:267","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    org.apache.commons.collections4.comparators.ComparatorChain<E>.checkChainIntegrity();\n    boolean = true;\n} "},"status":-1},{"failures":[22,24,25,41,45,58,59,62,63,64,65,66],"tindex":"07dd4bdb-13e5-11e5-84d0-61ad71f760e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"replacement","rightChild":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:974","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"07dd4bdc-13e5-11e5-84d0-3b1c4a6b0c0c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:238","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.LoopingListIterator<E>._reset()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:259","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.contains(java.util.Iterator<E>.next())) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"07dd72ed-13e5-11e5-84d0-11ac8fe69564","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:490","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(null, null)"},"variableMap":{"h":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:428","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        if ((!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K))) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        } else {\n            return null;\n        }\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"07dd72ee-13e5-11e5-84d0-3dc1dfa11345","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:140","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.comparators.FixedOrderComparator<T>.isLocked()) {\n    throw new java.lang.UnsupportedOperationException(\"Cannot modify a FixedOrderComparator after a comparison\");\n} "},"status":-2},{"failures":[],"tindex":"07dd72ef-13e5-11e5-84d0-e31c1828f9ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2070","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsKey(java.lang.Object)"},"variableMap":{"value":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:466","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) > (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"07dd72f0-13e5-11e5-84d0-4b41d7a00e0a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:245","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":0},{"failures":[],"tindex":"07dd72f1-13e5-11e5-84d0-65527646f920","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:598","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:613","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"status":-2},{"failures":[200,201,202,203,204,325,205,206,207,208,209,210,211],"tindex":"07dd9a02-13e5-11e5-84d0-d913bc809f84","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:254","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n    return false;\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:252","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n} "},"status":-1},{"failures":[326,327,328,329,178,185,186,191,197,198],"tindex":"07def993-13e5-11e5-84d0-afffd5cf6ecf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:489","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.decrementSize()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:601","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"07def994-13e5-11e5-84d0-13d15925d1bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359],"tindex":"07def995-13e5-11e5-84d0-996995fb35cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:265","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>.size()) > 0) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"07df20a6-13e5-11e5-84d0-23ae4d4d0cbe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"rval":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"07e05927-13e5-11e5-84d0-13b9fe5dc19f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:147","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[360,361,362,363,364,365],"tindex":"07e05928-13e5-11e5-84d0-530e21a3d10d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:132","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[],"tindex":"07e05929-13e5-11e5-84d0-cf6674d93676","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:268","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key2","next":"entry","entry":"entry","key2":"key1","hashCode":"hashCode","key3":"key1","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:139","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2},{"failures":[200,201,202,203,204,205,206,207,208,209,210,211],"tindex":"07e0803a-13e5-11e5-84d0-cd34869f2626","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:596","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:265","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"07e0803b-13e5-11e5-84d0-e989983a042b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hash3","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:512","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 2;\n            return V;\n        } \n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = int;\n            K = K;\n            V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 2;\n            return V;\n        } \n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = int;\n            K = K;\n            V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 2;\n            return V;\n        } \n        return null;\n    case 2 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 1;\n            return V;\n        } \n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = int;\n            K = K;\n            V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 1;\n            return V;\n        } \n        return null;\n    case 1 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 0;\n            return V;\n        } \n}"},"status":-2},{"failures":[366,367,368,369,370,371],"tindex":"07e0803c-13e5-11e5-84d0-7f200ab8042d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:212","type":"CtForImpl","sourcecode":"for (int int = int - int ; int <= (int + int) ; int += 2) {\n    final int int = (int + int) - int;\n    if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n        int[][int] = (int[][(int + 1)]) - 1;\n    } else {\n        int[][int] = int[][(int - 1)];\n    }\n    int int = (int[][int]) - 1;\n    int int = ((int - int) + int) - int;\n    while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = int--;\n        int--;\n    }\n    if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n        if ((int[][int]) <= (int[][(int + int)])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"07e0a74d-13e5-11e5-84d0-05d0ec6ce539","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"rval":"rightChild","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:827","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[372,373,374,375,376,377,378,379],"tindex":"07e0a74e-13e5-11e5-84d0-79214c176fed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"variableMap":{"cursor":"cursor","node":"node","it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:355","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-1},{"failures":[],"tindex":"07e0a74f-13e5-11e5-84d0-afa3433d5c40","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1040","type":"CtIfImpl","sourcecode":"if (K == null) {\n    break;\n} "},"status":-2},{"failures":[],"tindex":"07e0a750-13e5-11e5-84d0-7dd279271b71","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:587","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:130","type":"CtIfImpl","sourcecode":"if (K == null) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"07e0a751-13e5-11e5-84d0-9b3800605397","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"index","removeIndex":"index","currentIndex":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"status":-2},{"failures":[380,381,382,383,384,12],"tindex":"07e0a752-13e5-11e5-84d0-5f62ebdeba16","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:198","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(java.lang.Object);\n} "},"status":-1},{"failures":[],"tindex":"07e0ce63-13e5-11e5-84d0-eb5744fed9e8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:506","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[],"tindex":"07e0ce64-13e5-11e5-84d0-53373bab1f49","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:296","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n        return false;\n    } \n}"},"variableMap":{"composite":"key1","length":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:289","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"07e0ce65-13e5-11e5-84d0-71abf476dffc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"07e0ce66-13e5-11e5-84d0-7b009ddb0dd9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:161","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.nextIndex();\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:194","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.previousIndex();\n} "},"status":-2},{"failures":[],"tindex":"07e0ce67-13e5-11e5-84d0-5b27ed121f30","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:200","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return true;\n} "},"variableMap":{"composite":"value","i":"i","key":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:248","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n            return true;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"07e0f578-13e5-11e5-84d0-99adba0f7e61","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AnyPredicate:81","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 1) {\n    return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.Predicate<? super T>[][0]));\n} "},"variableMap":{"length":"length","preds":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:52","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n} "},"status":-2},{"failures":[],"tindex":"07e0f579-13e5-11e5-84d0-b31f89ae4baf","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:108","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.PermutationIterator<E>.(hasNext())) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[366,367,368,369,370,371],"tindex":"07e0f57a-13e5-11e5-84d0-a52acaabde00","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:174","type":"CtIfImpl","sourcecode":"if ((int == 0) || (int == 0)) {\n    return null;\n} "},"variableMap":{"m":"start1","n":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:212","type":"CtForImpl","sourcecode":"for (int int = int - int ; int <= (int + int) ; int += 2) {\n    final int int = (int + int) - int;\n    if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n        int[][int] = (int[][(int + 1)]) - 1;\n    } else {\n        int[][int] = int[][(int - 1)];\n    }\n    int int = (int[][int]) - 1;\n    int int = ((int - int) + int) - int;\n    while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = int--;\n        int--;\n    }\n    if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n        if ((int[][int]) <= (int[][(int + int)])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[385,386,387,388,389],"tindex":"07e0f57b-13e5-11e5-84d0-83eb705b9287","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n} "},"status":-1},{"failures":[390,391,392,393,394,395,380,381,396,397,398,399,400,401,402,403,404,405,406,407,408],"tindex":"07e0f57c-13e5-11e5-84d0-4949081c461a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:183","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"07e0f57d-13e5-11e5-84d0-29092bfe301f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:762","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"node":"node","right":"parent","child":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1208","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"07e11c8e-13e5-11e5-84d0-31ddb9445aa7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"p":"left","parent":"predecessor","h":"left","predecessor":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:597","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[41,45,55,58,59,62,63,64,65,66],"tindex":"07e11c8f-13e5-11e5-84d0-0379c0a7cc10","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1754","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getValue() can only be called after next() and before remove()\");\n} "},"variableMap":{"lastReturnedNode":"siblingNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1022","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"07e11c90-13e5-11e5-84d0-7bdd3e5a7ce0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1965","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()"},"variableMap":{"dataElement":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:363","type":"CtInvocationImpl","sourcecode":"java.lang.Object.hashCode()"},"status":-2},{"failures":[],"tindex":"07e143a1-13e5-11e5-84d0-b56774666720","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"status":-2},{"failures":[366,367,368,369,370,371],"tindex":"07e143a2-13e5-11e5-84d0-6539a9b96ed1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtIfImpl","sourcecode":"if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n    if ((int[][int]) <= (int[][(int + int)])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n    } \n} "},"variableMap":{"vUp":"vDown","start1":"offset","d":"delta","vDown":"vDown","delta":"delta","end2":"start1","this":"this","i":"offset","end1":"start1","k":"delta","start2":"end2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:186","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int += 2) {\n    final int int = int + int;\n    if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n        int[][int] = int[][(int + 1)];\n    } else {\n        int[][int] = (int[][(int - 1)]) + 1;\n    }\n    int int = int[][int];\n    int int = ((int - int) + int) - int;\n    while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = ++int;\n        ++int;\n    }\n    if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n        if ((int[][(int - int)]) <= (int[][int])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[409],"tindex":"07e143a3-13e5-11e5-84d0-b5503632ed2e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"maxElements"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"status":-1},{"failures":[],"tindex":"07e143a4-13e5-11e5-84d0-2be44c6b4051","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:596","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1336","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"status":0},{"failures":[410],"tindex":"07e143a5-13e5-11e5-84d0-f727537099b0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:276","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n    throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeCollection without a CollectionMutator strategy\");\n} "},"status":-1},{"failures":[222,234,264,299,310],"tindex":"07e143a6-13e5-11e5-84d0-dbb07d5f9c35","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:128","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[411,412,413,414],"tindex":"07e16ab7-13e5-11e5-84d0-e38e2968329f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1617","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<O>.trimToSize()"},"variableMap":{"mergedList":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:337","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.bag.HashBag<O>.remove(O, 1))) {\n    java.util.ArrayList<O>.add(O);\n} "},"status":-1},{"failures":[],"tindex":"07e16ab8-13e5-11e5-84d0-4151a9c9124c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:181","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,110,112,114,115,111,137,117,118,119,120,122,123,125,127,128,129,134,135,136,139,141,142,143,144,145,146,147,148,149,150,151],"tindex":"07e16ab9-13e5-11e5-84d0-bd0967d92e0b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:221","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, E);\n}"},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"tindex":"07e16aba-13e5-11e5-84d0-d37b624e2145","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"leastIndex","lengthInBits":"leastIndex","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"i","otherOffsetInBits":"leastIndex","otherLengthInBits":"leastIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:360","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    int = int;\n    E = java.util.ArrayList<E>.get(int);\n} else {\n    final E E = java.util.ArrayList<E>.get(int);\n    if ((java.util.Comparator<? super E>) == null) {\n        throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n    } \n    if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n        E = E;\n        int = int;\n    } \n}"},"status":-1},{"failures":[444,445,446],"tindex":"07e16abb-13e5-11e5-84d0-d3f4fb066323","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:92","type":"CtInvocationImpl","sourcecode":"java.util.ListIterator<E>.remove()"},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:243","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n} "},"status":-1},{"failures":[],"tindex":"07e191cc-13e5-11e5-84d0-0365b8994ffd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:416","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.EntryView();\n} "},"status":-2},{"failures":[],"tindex":"07e191cd-13e5-11e5-84d0-5bcde9cff1ce","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:461","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().values()) {\n    int += org.apache.commons.collections4.CollectionUtils.size(java.lang.Object);\n}"},"status":0},{"failures":[447,448,449,411,412,450,212,413,414,213,451,214,215,452,216,217,218,219,453,454,455,456,220,221,457,458,459,460,461,462,463,464,465,466,467,468,469,470,222,471,472,223,224,473,225,474,226,227,475,228,229,230,231,476,477,478,479,232,233,480,481,482,483,484,485,486,487,488,489,490,491,492,493,234,494,495,235,236,496,497,237,238,498,239,240,499,241,242,243,244,500,501,502,503,245,246,504,505,506,507,508,509,510,511,512,513,514,515,516,517,247,248,518,249,250,519,520,521,251,522,523,524,252,525,526,527,528,529,530,531,532,253,533,534,254,255,535,256,257,536,258,259,260,261,537,538,539,540,262,263,541,542,543,544,545,546,547,548,549,550,551,552,553,554,264,555,556,265,266,557,267,268,558,269,270,559,271,272,273,274,560,561,562,563,275,276,564,565,566,567,568,569,570,571,572,573,574,575,576,577,277,278,578,279,280,579,580,581,582,583,584,585,586,587,588,589,281,282,590,591,592,283,593,284,285,594,286,287,288,289,595,596,597,598,290,291,599,600,601,602,603,604,605,606,607,608,609,610,611,612,292,293,613,294,295,614,615,616,617,618,619,620,621,622,623,624,296,297,625,626,627,628,298,629,630,631,299,632,633,634,635,636,637,638,639,300,640,641,642,301,643,302,303,644,304,305,306,307,645,646,647,648,308,309,649,650,651,652,653,654,655,656,657,658,659,660,661,662,310,663,664,311,312,665],"tindex":"07e191ce-13e5-11e5-84d0-c70baa12e652","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"07e1b8df-13e5-11e5-84d0-c93c0edd8c78","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"status":-2},{"failures":[666,667,668,669,670,671],"tindex":"07e1b8e0-13e5-11e5-84d0-616e39ab001e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:122","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends E>.remove()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:87","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>.hasNext()) == false) {\n    org.apache.commons.collections4.iterators.LoopingIterator<E>.reset();\n} "},"status":-1},{"failures":[],"tindex":"07e1b8e1-13e5-11e5-84d0-3bf69434e5be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"convertedKey","i":"hashCode","key":"convertedKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:280","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"07e1b8e2-13e5-11e5-84d0-67c60a663381","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:95","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"07e1b8e3-13e5-11e5-84d0-73a308c8f5d3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"maxElements"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:236","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"status":0},{"failures":[],"tindex":"07e1b8e4-13e5-11e5-84d0-699ca1203552","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"size","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:319","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            } else {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            }\n            (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n            return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"07e36695-13e5-11e5-84d0-b7267e741192","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchClosure:59","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate<? super E>[])"},"variableMap":{"predicates":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:262","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(1);\n    java.util.Collection<V>.add(((V)(java.lang.Object)));\n    if ((java.util.Collection<V>.size()) > 0) {\n        org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n        boolean = true;\n    } \n} else {\n    boolean = java.util.Collection<V>.add(((V)(java.lang.Object)));\n}"},"status":-2},{"failures":[],"tindex":"07e36696-13e5-11e5-84d0-45d998b14ed4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:621","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.init()"},"variableMap":{"this":"toAdd"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:320","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    if (org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.contains(E)) {\n        continue;\n    } \n    org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().add(E);\n    java.util.List<E>.add(E);\n    boolean = true;\n}"},"status":-2},{"failures":[672,673,674],"tindex":"07e36697-13e5-11e5-84d0-450c0ae3dea3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:153","type":"CtIfImpl","sourcecode":"if (boolean == true) {\n    java.util.BitSet.set(((java.util.List<java.util.Comparator<E>>.size()) - 1));\n} "},"status":-1},{"failures":[],"tindex":"07e36698-13e5-11e5-84d0-73b9623ead57","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY","deletedNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:520","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[],"tindex":"07e38da9-13e5-11e5-84d0-c714f96d27c9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:520","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[],"tindex":"07e38daa-13e5-11e5-84d0-ffa22a91887a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.OnePredicate:98","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"variableMap":{"match":"removed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:211","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"07e38dab-13e5-11e5-84d0-379af49c75f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"status":-2},{"failures":[675,676,677,678,679,680,681,682,683,684,685,686],"tindex":"07e38dac-13e5-11e5-84d0-8b89386f5c84","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super C> == null) {\n    return false;\n} "},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:174","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final E E = java.util.Iterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-1},{"failures":[154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199],"tindex":"07e3b4bd-13e5-11e5-84d0-c7917bd5246a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"allNull","nextCalled":"allNull"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:99","type":"CtIfImpl","sourcecode":"if (char != 0) {\n    boolean = false;\n} "},"status":-1},{"failures":[],"tindex":"07e3b4be-13e5-11e5-84d0-af081abe1500","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"start2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:257","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.sequence.SequencesComparator.Snake == null) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) {\n    int int = int;\n    int int = int;\n    while ((int < int) || (int < int)) {\n        if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n            ++int;\n        } else {\n            if ((int - int) > (int - int)) {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            } else {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            }\n        }\n    }\n} else {\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(int, org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), org.apache.commons.collections4.sequence.EditScript<T>);\n    for (int int = org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart() ; int < (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) ; ++int) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    }\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), int, org.apache.commons.collections4.sequence.EditScript<T>);\n}"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":96,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}