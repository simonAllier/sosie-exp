{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":146,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":732,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":319,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":752,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":23,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":58,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":183,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":393,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":18,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":358,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":445,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":154,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":582,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":708,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":310,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":609,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":677,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":201,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":584,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":772,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":493,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":307,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":211,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":724,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":118,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":372,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":11,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":597,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":733,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":197,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":746,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":829,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":219,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":641,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":150,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":545,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":191,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":387,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":62,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":188,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":466,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":326,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":451,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":353,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":778,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":323,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":182,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":60,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":120,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":672,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":613,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":711,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":764,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":87,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":580,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":678,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":455,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":237,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":587,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":709,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":164,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":294,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":1,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":77,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":501,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":33,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":155,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":502,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":28,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":205,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":22,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":593,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":416,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":619,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":147,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastKeySet":350,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":209,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":308,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":41,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":467,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":756,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetClearChangesMap":277,"org.apache.commons.collections4.TransformerUtilsTest.testCloneTransformer":115,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":430,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":162,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":345,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":29,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":302,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":375,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":640,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":538,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":755,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":523,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":697,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":703,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":698,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":699,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":262,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":548,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":483,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":16,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":476,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":543,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":544,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":542,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":65,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":518,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":779,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":314,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":229,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRetainAll":280,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":177,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":630,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":344,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":749,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":639,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":86,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":763,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":450,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":567,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":392,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":83,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":78,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":682,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":822,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":740,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":487,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":180,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":439,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":295,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":598,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":474,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":296,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":15,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":72,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":611,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":657,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":225,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":788,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":163,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":734,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":465,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":735,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":736,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":187,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":413,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":648,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":94,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveChangesMap":364,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":362,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":40,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":645,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":722,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":612,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":9,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":274,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":553,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":795,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":312,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":726,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":6,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":204,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":45,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":193,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":510,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":389,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":261,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":318,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":753,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":626,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":271,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":589,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":330,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":143,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":281,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":222,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":339,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":335,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":220,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":537,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":152,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":615,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":55,"org.apache.commons.collections4.functors.AllPredicateTest.singletonCollectionToGetInstance":246,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":695,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":145,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":602,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":442,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":51,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":625,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":549,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":624,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":812,"org.apache.commons.collections4.map.LRUMapTest.testReset":595,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":286,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testNextKey":406,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":572,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":712,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":473,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":293,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapClear":412,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":53,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":446,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":570,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":306,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastValues":384,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":744,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":140,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":761,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":650,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":519,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":557,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":583,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":245,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":771,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":604,"org.apache.commons.collections4.map.LinkedMapTest.testReset":638,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":705,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":410,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":441,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":614,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":676,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":535,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":826,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":629,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":725,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":707,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":5,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":74,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":30,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":628,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":103,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":411,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":424,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains3":426,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":425,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":109,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":242,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":560,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":566,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":588,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRetainAll":332,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":401,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":668,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":123,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":440,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":786,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll":801,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":508,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":689,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":806,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":290,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":569,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":25,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRetainAll":399,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":403,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":268,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":536,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetClearChangesMap":363,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":21,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveAll":432,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":577,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":100,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":823,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":304,"org.apache.commons.collections4.map.HashedMapTest.testClone":484,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":578,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":10,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":579,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":137,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":731,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":210,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":97,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":690,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":207,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":64,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRetainAll":429,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":675,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":285,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":694,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":680,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":90,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":127,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":361,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":600,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":782,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":414,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":371,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":376,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":93,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":346,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":663,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":662,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":133,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":664,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":488,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":547,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":149,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":649,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":511,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":723,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":652,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":750,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":311,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":200,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":122,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":674,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":673,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetIteratorRemoveChangesMap":400,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":644,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":781,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":208,"org.apache.commons.collections4.map.LinkedMapTest.testClone":643,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":714,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":514,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":82,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":297,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":138,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":574,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":575,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":741,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":576,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":693,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":717,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":716,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":610,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":715,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":713,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":224,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":313,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":496,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":605,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":596,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveAll":279,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":747,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":321,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":494,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":228,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":727,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":825,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":215,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":770,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":656,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":517,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":472,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":218,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":217,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":530,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":216,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":288,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":571,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":773,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":459,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":762,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testRemove":802,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":226,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":804,"org.apache.commons.collections4.SplitMapUtilsTest.testAlreadyWritableMap":477,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":606,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":374,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":790,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":284,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":324,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":568,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":370,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":531,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":394,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":507,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":98,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":273,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":651,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":89,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":776,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":369,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":443,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":373,"org.apache.commons.collections4.map.LRUMapTest.testLRU":594,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":816,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":7,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":377,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":26,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":298,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":555,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":299,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":300,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":799,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":282,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":620,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":797,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastKeySet":383,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":463,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":590,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":437,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":148,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":489,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":136,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":618,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":253,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":601,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":333,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":520,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":213,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":203,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetClearChangesMap":396,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":255,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":50,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":315,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":686,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":696,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":748,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":791,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":792,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":534,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":509,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":124,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":482,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":291,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":627,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":667,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":158,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":359,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":460,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":46,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":278,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":702,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":506,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":503,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":2,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":464,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":551,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":283,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":447,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSortOrder":334,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutAll":422,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":168,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":739,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":521,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":585,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":265,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":160,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":161,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":653,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":654,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":529,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":57,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPut":419,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":32,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":110,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSerializeDeserializeThenCompare":117,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":360,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":444,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":818,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testFirstKey":404,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":787,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":80,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":289,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":37,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiKeySetValuesOrder":380,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":719,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":565,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveAll":365,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":270,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":198,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":378,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":573,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveChangesMap":431,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":486,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":342,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":171,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":706,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":172,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":170,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":238,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":532,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":632,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":24,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":105,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":633,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":758,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":807,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":256,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":546,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":515,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":241,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":775,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":56,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":108,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":336,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":4,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":525,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":144,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":19,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":516,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":814,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":142,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":354,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":700,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":230,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":655,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":275,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":556,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastValues":351,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":73,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":701,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":114,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":104,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":348,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":728,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":107,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":513,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":607,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":660,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":809,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":141,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":185,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":391,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":92,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":729,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":121,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":292,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":75,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":301,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiKeySetValuesOrder":347,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":810,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":287,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":642,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":352,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":76,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":169,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":235,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":687,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":780,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":159,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":478,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveChangesMap":435,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":165,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":470,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":272,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":386,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":540,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":539,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":151,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastKeySet":316,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":541,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":84,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":658,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":738,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":817,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":737,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":27,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":71,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":453,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":684,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":824,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":469,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":135,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":175,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":646,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":174,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":173,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutNullValue":421,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":635,"org.apache.commons.collections4.map.LRUMapTest.testClone":603,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":670,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":269,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":408,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":492,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":95,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":368,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":661,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":125,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":608,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":31,"org.apache.commons.collections4.ListUtilsTest.testSubtract":828,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicBad":116,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":743,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":504,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testLastKey":405,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":475,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":671,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":789,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":449,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":157,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":685,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":305,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":3,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapHashCode":417,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":821,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":427,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":418,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":247,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":328,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveAll":331,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":258,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":267,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":634,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":81,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":491,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":436,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":388,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":184,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetIteratorRemoveChangesMap":434,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutNullKey":420,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":448,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetClearChangesMap":329,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":195,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":820,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":259,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":181,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":131,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":257,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":130,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":349,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":528,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":669,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":309,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":637,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":423,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":558,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":34,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":44,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":156,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":17,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":490,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":35,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":784,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":70,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":341,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":798,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":561,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":794,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":485,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":139,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":61,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":659,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":666,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":785,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":800,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":665,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":742,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":59,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":458,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiMapIteratorSet":409,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":563,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":550,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":212,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":704,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":586,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":691,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":266,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":777,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":106,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":480,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":819,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":512,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":581,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":43,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":303,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":390,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":768,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":132,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":769,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":96,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":710,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":805,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":68,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":250,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":356,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":481,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":679,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":793,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":36,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":461,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":186,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":462,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":454,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":554,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":616,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":811,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":636,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":69,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":248,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":721,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":495,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":338,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":382,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":52,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":631,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":119,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":189,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":91,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":249,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":0,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":379,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":395,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":199,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testPreviousKey":407,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":522,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":327,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":599,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":113,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":340,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":227,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRetainAll":366,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":239,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":355,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":111,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":730,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":192,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":783,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveChangesMap":397,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":471,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":757,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":683,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":796,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":49,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":505,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":647,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":176,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":524,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":322,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":688,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":240,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":20,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":236,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":385,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAdd":827,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":381,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":202,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":592,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":692,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":221,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":214,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":126,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":194,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":552,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":815,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":234,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":251,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":134,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":42,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":85,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":774,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":751,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":533,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastKeySet":264,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":468,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":223,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveAll":428,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":402,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":178,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":808,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":166,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":527,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":325,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":526,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":452,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":562,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":617,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":745,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":766,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":767,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":559,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":765,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":497,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":63,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":456,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":12,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":831,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":167,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":760,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":830,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":66,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetIteratorRemoveChangesMap":438,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":243,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":179,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":231,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":232,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":233,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":498,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":499,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":153,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":320,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":720,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":48,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetIteratorRemoveChangesMap":367,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":196,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":457,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":190,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":67,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":479,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":88,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":129,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":128,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":754,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":759,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":14,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":101,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":244,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":38,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":260,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":415,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":206,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":13,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":623,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":803,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":813,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":276,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":263,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":681,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":337,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":343,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":621,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":718,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":622,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":8,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":357,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":500,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":54,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":79,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":99,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":252,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRetainAll":433,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":102,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":254,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveAll":398,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":39,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":317,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":564,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":591,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":112,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":47},"transformations":[{"failures":[],"tindex":"1d0409fd-13aa-11e5-9407-7dddbee81656","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:769","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"1d0409fe-13aa-11e5-9407-5f77e94cc8e7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:315","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.ArrayList<E>.set(int, java.util.Iterator<? extends E>.next());\n    java.util.BitSet.set(int);\n    return true;\n} "},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"tindex":"1d04310f-13aa-11e5-9407-8df92a6a9082","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map) {\n    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object));\n    return org.apache.commons.collections4.map.CompositeMap<K, V>.entrySet().equals(java.util.Map<?, ?>.entrySet());\n} "},"status":-1},{"failures":[13,14,15,16,17,18],"tindex":"1d043110-13aa-11e5-9407-c937d7fb001d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtIfImpl","sourcecode":"if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n    if ((int[][(int - int)]) <= (int[][int])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[],"tindex":"1d043111-13aa-11e5-9407-5510458983a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1056","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return null;\n}"},"variableMap":{"root":"tree"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"1d043112-13aa-11e5-9407-337815cb3d5e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:106","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114],"tindex":"1d043113-13aa-11e5-9407-cb76cfb13e0c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:224","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"1d045824-13aa-11e5-9407-c747857262cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:334","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:263","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[115,116],"tindex":"1d045825-13aa-11e5-9407-cd87dd3f5d5a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:60","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ConstantFactory.<T>constantFactory(null)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:74","type":"CtIfImpl","sourcecode":"if (T instanceof java.io.Serializable) {\n    return ((org.apache.commons.collections4.Factory<T>)(new org.apache.commons.collections4.functors.PrototypeFactory.PrototypeSerializationFactory<java.io.Serializable>(((java.io.Serializable)(T)))));\n} "},"status":-1},{"failures":[117],"tindex":"1d045826-13aa-11e5-9407-136982eae475","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:115","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"1d045827-13aa-11e5-9407-c9e2fb002b69","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:129","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V> = this;\n} "},"variableMap":{"inverse":"reverseMap","this":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:169","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(K)) {\n    java.util.Map<V, K>.remove(java.util.Map<K, V>.get(K));\n} "},"status":-2},{"failures":[],"tindex":"1d045828-13aa-11e5-9407-c798ca762116","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:190","type":"CtIfImpl","sourcecode":"if (java.io.ByteArrayInputStream != null) {\n    java.io.ByteArrayInputStream.close();\n} "},"variableMap":{"bais":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:232","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().contains(java.lang.Object)) {\n    java.util.Set<java.lang.Object>.add(java.lang.Object);\n} "},"status":-2},{"failures":[118,119,120,121,122,123,124,125,126,127,128,129],"tindex":"1d047f39-13aa-11e5-9407-699b98045c81","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:334","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:265","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"1d047f3a-13aa-11e5-9407-4d0fa30685a4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:215","type":"CtIfImpl","sourcecode":"if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n    int[][int] = (int[][(int + 1)]) - 1;\n} else {\n    int[][int] = int[][(int - 1)];\n}"},"variableMap":{"vUp":"childValue","d":"lineageIndex","delta":"lineageIndex","i":"lineageIndex","k":"lineageIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1006","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    java.io.PrintStream.print(java.lang.Object);\n} else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n    java.io.PrintStream.print(\"(this Map)\");\n} else {\n    java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n}"},"status":-2},{"failures":[],"tindex":"1d047f3b-13aa-11e5-9407-db7fc398ce46","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:962","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"dataElement":"dataElement","deletedNode":"x","replacement":"x","rootNode":"rootNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1184","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"status":0},{"failures":[130,131,132,133,134,0,8],"tindex":"1d047f3c-13aa-11e5-9407-3906dda73189","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:200","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230],"tindex":"1d04a64d-13aa-11e5-9407-bfa01773984a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"dataElement":"dataElement","deletedNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[136,138,179,183,185,186,187,191,193],"tindex":"1d04a64e-13aa-11e5-9407-350415429a54","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"rval","rightChild":"rval","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[231,232,233,234,235,236,237,238,239,240,241],"tindex":"1d04a64f-13aa-11e5-9407-d7d2b323cf22","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.DefaultedMap:128","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super K, ? extends V> == null) {\n    throw new java.lang.IllegalArgumentException(\"Transformer must not be null\");\n} "},"variableMap":{"transformer":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n    E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n} "},"status":-1},{"failures":[],"tindex":"1d04cd60-13aa-11e5-9407-2f26af5a63ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.IfClosure:76","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Closure<? super E> == null) || (org.apache.commons.collections4.Closure<? super E> == null)) {\n    throw new java.lang.IllegalArgumentException(\"Closures must not be null\");\n} "},"variableMap":{"falseClosure":"closure","trueClosure":"closure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Closure<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n} "},"status":0},{"failures":[242,243,244],"tindex":"1d04cd61-13aa-11e5-9407-7f70c6604f81","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:92","type":"CtInvocationImpl","sourcecode":"java.util.ListIterator<E>.remove()"},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:259","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.contains(java.util.Iterator<E>.next())) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"1d04cd62-13aa-11e5-9407-0521cb1b04d7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) > 0) {\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.CursorableLinkedList<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        java.util.Iterator<E>.next();\n        java.util.Iterator<E>.remove();\n    }\n} "},"status":-2},{"failures":[245,246],"tindex":"1d04cd63-13aa-11e5-9407-51776bb80234","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.NonePredicate:55","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.NonePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Predicate<? super T>[]))"},"variableMap":{"predicates":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:85","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Predicate<T>[][0]"},"status":-1},{"failures":[],"tindex":"1d04cd64-13aa-11e5-9407-39135104b6af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:553","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n} else {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"1d04cd65-13aa-11e5-9407-d52dacbb376a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:387","type":"CtIfImpl","sourcecode":"if (boolean) {\n    continue;\n} else {\n    return false;\n}"},"variableMap":{"foundCurrentElement":"match"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OnePredicate:98","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"1d04cd66-13aa-11e5-9407-d1c1c552c67c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"1d04f477-13aa-11e5-9407-65bfd036a63f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:416","type":"CtReturnImpl","sourcecode":"return (java.lang.Object == java.lang.Object) || (java.lang.Object == null ? false : java.lang.Object.equals(java.lang.Object))"},"variableMap":{"value2":"key","value1":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:221","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":0},{"failures":[247],"tindex":"1d04f478-13aa-11e5-9407-15386be1b6fd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:638","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>)"},"status":-1},{"failures":[],"tindex":"1d04f479-13aa-11e5-9407-7181e056951d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:183","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[248,249,250,251,252,253,254,255,256,257,258,259],"tindex":"1d04f47a-13aa-11e5-9407-eb64d097e535","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:982","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.println(\" = \")"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:990","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> : java.util.Map<?, ?>.entrySet()) {\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getKey();\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getValue();\n    if ((java.lang.Object instanceof java.util.Map) && (!(org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.contains(java.lang.Object)))) {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, (java.lang.Object == null ? \"null\" : java.lang.Object), ((java.util.Map<?, ?>)(java.lang.Object)), org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>, boolean);\n    } else {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream, org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size());\n        java.io.PrintStream.print(java.lang.Object);\n        java.io.PrintStream.print(\" = \");\n        final int int = org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.indexOf(java.lang.Object);\n        if (int == (-1)) {\n            java.io.PrintStream.print(java.lang.Object);\n        } else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n            java.io.PrintStream.print(\"(this Map)\");\n        } else {\n            java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n        }\n        if (boolean && (java.lang.Object != null)) {\n            java.io.PrintStream.print(' ');\n            java.io.PrintStream.println(java.lang.Object.getClass().getName());\n        } else {\n            java.io.PrintStream.println();\n        }\n    }\n}"},"status":-1},{"failures":[260,10],"tindex":"1d04f47b-13aa-11e5-9407-156fbcb6fa56","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:209","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"variableMap":{"size":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:225","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsValue(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438],"tindex":"1d04f47c-13aa-11e5-9407-7383956dd44b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"status":-1},{"failures":[],"tindex":"1d051b8d-13aa-11e5-9407-a9544178eebd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:122","type":"CtReturnImpl","sourcecode":"return ((java.lang.String.charAt(int)) & org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.(org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int))) != 0"},"variableMap":{"this":"key","index":"i","bit":"i","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:200","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"1d051b8e-13aa-11e5-9407-931a9e471393","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:128","type":"CtIfImpl","sourcecode":"if (K == null) {\n    return K == null;\n} else if (K == null) {\n    return false;\n} "},"status":0},{"failures":[157,207],"tindex":"1d051b8f-13aa-11e5-9407-9d7142532fa9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:675","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    return false;\n} "},"variableMap":{"entryKey":"obj","entryValue":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"1d051b90-13aa-11e5-9407-29840ce4a238","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"newCapacity","lengthInBits":"hashCode","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"oldCapacity","otherOffsetInBits":"newCapacity","otherLengthInBits":"oldCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:638","type":"CtForImpl","sourcecode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n        do {\n            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n    } \n}"},"status":-2},{"failures":[439,440,441,442,443,444,445,446,447,448,449,450],"tindex":"1d051b91-13aa-11e5-9407-2b454143ffb7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:356","type":"CtIfImpl","sourcecode":"if ((java.util.BitSet.get(int)) == false) {\n    org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n} "},"status":-1},{"failures":[],"tindex":"1d051b92-13aa-11e5-9407-69432a647eea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"status":-2},{"failures":[451],"tindex":"1d051b93-13aa-11e5-9407-a9120ec895f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:378","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n    java.util.Set<java.lang.Object>.add(java.lang.Object);\n    if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n        boolean = true;\n        break;\n    } \n}"},"status":-1},{"failures":[],"tindex":"1d051b94-13aa-11e5-9407-bb5cb46e681d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:825","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"currentNode","rightChild":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:906","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"1d051b95-13aa-11e5-9407-e957b28db2e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:94","type":"CtIfImpl","sourcecode":"if (char != char) {\n    final int int = char ^ char;\n    return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n} "},"status":-2},{"failures":[],"tindex":"1d0542a6-13aa-11e5-9407-096f8e155dbe","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1005","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(null)"},"variableMap":{"out":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:797","type":"CtIfImpl","sourcecode":"if ((((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 4) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(3)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(3)))) {\n    org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"1d0542a7-13aa-11e5-9407-a5d0156cb7af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:889","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        return null;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n}"},"variableMap":{"root":"current","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:726","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[452,140,141,142,143,145,146,152,153,154,155,156,157,158,160,162,165,166,195,196,202,203,205,206,207,208,210],"tindex":"1d0542a8-13aa-11e5-9407-512a8353512f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse = new org.apache.commons.collections4.bidimap.TreeBidiMap.Inverse();\n} "},"status":-1},{"failures":[453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,471,472,473,474,475,476],"tindex":"1d0542a9-13aa-11e5-9407-392d69f24b21","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[],"tindex":"1d0542aa-13aa-11e5-9407-2586f5000e52","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1045","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"newNode","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1284","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue(), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"1d0542ab-13aa-11e5-9407-15f4559a2bca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"hash","maxElements":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:326","type":"CtIfImpl","sourcecode":"if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n} else {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-2},{"failures":[477,478],"tindex":"1d0542ac-13aa-11e5-9407-e17bd007bcce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SplitMapUtils:238","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Put<K, V> instanceof java.util.Map) {\n    return ((java.util.Map<K, V>)(org.apache.commons.collections4.Put<K, V>));\n} "},"status":-1},{"failures":[],"tindex":"1d0569bd-13aa-11e5-9407-e9a8d7f3cb1b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"this":"key","i":"length","object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"status":-2},{"failures":[247],"tindex":"1d0569be-13aa-11e5-9407-771ba8d2f9f4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:636","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"status":-1},{"failures":[479,480],"tindex":"1d0569bf-13aa-11e5-9407-11c45ea21632","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TransformedBag:82","type":"CtForEachImpl","sourcecode":"for (final E E : E[]) {\n    org.apache.commons.collections4.bag.TransformedBag<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}"},"status":-1},{"failures":[],"tindex":"1d0569c0-13aa-11e5-9407-a3c0119e6a68","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:334","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:108","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) == 0"},"status":-2},{"failures":[481,482,74,247],"tindex":"1d0569c1-13aa-11e5-9407-37b360e6617e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[478,483,484,485,486,487,488,19,20,489,21,22,23,490,491,24,492,25,493,494,26,27,495,496,497,498,499,500,501,502,28,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,29,30,565,31,32,33,566,567,34,568,35,569,570,36,37,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,38,39,40,41,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,42,43,612,44,45,46,613,614,47,615,48,616,617,49,50,618,619,620,621,622,623,624,625,51,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,52,53,653,54,55,56,654,655,57,656,58,657,658,59,60,659,660,661,662,663,664,665,666,61,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,63,683,62,684,685,686,687,64,65,688,66,67,68,689,690,69,691,70,692,693,71,72,694,695,696,697,698,699,700,701,73,702,703,704,705,706,707,708,709,710,711,712,713,481,482,74,247,714,715,716,717,718,719,720,721,722,723,724,75,76,725,77,78,79,726,727,80,728,81,729,730,82,83,731,732,733,734,735,736,737,738,84,739,740,741,742,743,744,745,746,747,748,749,750,751,85,86,752,753,754,755,87,88,756,89,90,91,757,758,92,759,93,760,761,94,95,762,763,764,765,766,767,768,769,96,770,771,772,773,774,775,776,777,778,779,780,781,97,782,98,783,784,785,786,99,100,787,788,101,789,102,790,103,104,105,791,106,792,107,793,794,795,796,108,109,797,798,110,799,111,800,112,113,114],"tindex":"1d0569c2-13aa-11e5-9407-a1706a3d4ca7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2319","type":"CtIfImpl","sourcecode":"if ((int) != 1) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"hit":"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    final int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) * 2;\n    if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n    } \n} "},"status":-1},{"failures":[],"tindex":"1d0590d3-13aa-11e5-9407-f5cae29d5099","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:810","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>(this);\n} "},"variableMap":{"entrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:319","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntrySet<K, V>(this);\n} "},"status":0},{"failures":[14,13,15,16,17,18],"tindex":"1d0590d4-13aa-11e5-9407-77a9ba5755d7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:232","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int)"},"variableMap":{"vUp":"vDown","start1":"start2","end2":"delta","this":"this","i":"start2","end1":"start1","k":"start1","start2":"end1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:205","type":"CtIfImpl","sourcecode":"if ((int[][(int - int)]) <= (int[][int])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n} "},"status":-1},{"failures":[801],"tindex":"1d0590d5-13aa-11e5-9407-f535dd04a50e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:297","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    boolean |= java.util.Collection<E>.removeAll(java.util.Collection<?>);\n}"},"status":-1},{"failures":[],"tindex":"1d0590d6-13aa-11e5-9407-cbf7aedcb73e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:47","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int"},"variableMap":{"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:312","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"1d0590d7-13aa-11e5-9407-d32d59331e96","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:582","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"1d0590d8-13aa-11e5-9407-b330e51052b5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n    break;\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.PredicatedList:118","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E);\n}"},"status":-2},{"failures":[],"tindex":"1d0590d9-13aa-11e5-9407-57078c3b911d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:962","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"dataElement":"dataElement","deletedNode":"currentNode","replacement":"currentNode","rootNode":"rootNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":0},{"failures":[802],"tindex":"1d05b7ea-13aa-11e5-9407-fff39cc19ac4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"currentIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"status":-1},{"failures":[],"tindex":"1d05b7eb-13aa-11e5-9407-251aa57bcc68","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1196","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    throw new java.lang.IllegalArgumentException(\"must have come from somewhere!\");\n} "},"variableMap":{"start":"left","predecessor":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:573","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"1d05b7ec-13aa-11e5-9407-c7111f266387","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[485,486,487,27,501,502,503,506,507,510,511,512,513,514,517,518,519,535,542,543,545,548,549,552,553,554,555,556,561,562,563,33,37,577,578,580,583,584,587,588,589,590,591,608,609,610,50,624,625,626,629,630,633,634,635,636,637,642,649,650,651,60,665,666,667,670,671,674,675,676,677,678,684,685,686,72,700,701,702,705,706,709,710,711,712,713,714,715,716,717,721,722,723,83,737,738,739,742,743,746,747,748,749,750,752,753,754,95,768,769,770,773,774,777,778,779,780,781,786,99,789,790,791,796,108,799,800],"tindex":"1d06060d-13aa-11e5-9407-2f2237320004","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"1d06060e-13aa-11e5-9407-03d7c13ec108","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:889","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        return null;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n}"},"variableMap":{"root":"right","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:696","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"1d06060f-13aa-11e5-9407-3123d7ecb2f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2116","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.remove(java.lang.Object)"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"1d060610-13aa-11e5-9407-6ff484182d96","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:137","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return ;\n} "},"status":0},{"failures":[63,62,681,684,685,686,687,64,65,688,66,67,68,689,690,69,691,70,692,693,71,72,694,695,696,697,698,699,700,701,73,702,703,704,705,706,707,708,709,710,711,712,713],"tindex":"1d060611-13aa-11e5-9407-01b945fe7ca4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"status":-1},{"failures":[],"tindex":"1d060612-13aa-11e5-9407-4fed0a8ee69a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1039","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList<E>.int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"parent":"setOrder","modCount":"index","expectedModCount":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:299","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(E))) {\n    org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().add(E);\n    java.util.List<E>.add(int, E);\n} "},"status":0},{"failures":[803,804],"tindex":"1d060613-13aa-11e5-9407-c79a1e2951a4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:216","type":"CtIfImpl","sourcecode":"if (boolean == false) {\n    return false;\n} "},"variableMap":{"removed":"match"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OnePredicate:98","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"status":-1},{"failures":[482,74,247],"tindex":"1d062c24-13aa-11e5-9407-35ffa1f49243","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:115","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    return false;\n} "},"variableMap":{"lengthInBits":"hashCode","key":"key2","bitIndex":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:582","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-1},{"failures":[],"tindex":"1d062c25-13aa-11e5-9407-0914b2b36039","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"1d062c26-13aa-11e5-9407-dd27a3faa129","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:469","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T T = ((T)(E));\n    T[][int++] = T;\n}"},"status":0},{"failures":[87,88,89,90,91,758,92,93,94,95],"tindex":"1d062c27-13aa-11e5-9407-eb35f4ec640c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.size();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"1d062c28-13aa-11e5-9407-dbbdfc9017f0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:146","type":"CtIfImpl","sourcecode":"if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"1d062c29-13aa-11e5-9407-d3969a1accfc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:125","type":"CtReturnImpl","sourcecode":"return this.E[][(this.int)++]"},"status":-2},{"failures":[805],"tindex":"1d062c2a-13aa-11e5-9407-e535fdf99f3e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:104","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ((org.apache.commons.collections4.Transformer<I, O>)(org.apache.commons.collections4.Transformer<? super I, ? extends O> == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer() : org.apache.commons.collections4.Transformer<? super I, ? extends O>));\n} "},"status":-1},{"failures":[806,807,808,809],"tindex":"1d062c2b-13aa-11e5-9407-1972aa437c5a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:427","type":"CtReturnImpl","sourcecode":"return (boolean) == false"},"variableMap":{"hasNext":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:176","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"1d062c2c-13aa-11e5-9407-e34871c2272a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"1d062c2d-13aa-11e5-9407-cdd94a4d3a98","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:383","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.BitSet.size()) ; int++) {\n    if (java.util.BitSet.get(int)) {\n        return true;\n    } \n}"},"variableMap":{"set":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:121","type":"CtIfImpl","sourcecode":"if (java.lang.Object.getClass().equals(java.lang.Object.getClass())) {\n    final org.apache.commons.collections4.comparators.TransformingComparator<?, ?> org.apache.commons.collections4.comparators.TransformingComparator<?, ?> = ((org.apache.commons.collections4.comparators.TransformingComparator<?, ?>)(java.lang.Object));\n    return null == (java.util.Comparator<O>) ? null == (org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.java.util.Comparator<?>) : (java.util.Comparator<O>.equals(org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.java.util.Comparator<?>)) && (null == (org.apache.commons.collections4.Transformer<? super I, ? extends O>)) ? null == (org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>) : org.apache.commons.collections4.Transformer<? super I, ? extends O>.equals(org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>);\n} "},"status":-2},{"failures":[],"tindex":"1d06533e-13aa-11e5-9407-6765ffaf4a48","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:502","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[135,136,137,138,452,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230],"tindex":"1d06533f-13aa-11e5-9407-139f0b649077","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"cmp","listSize":"cmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:571","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    break;\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"1d065340-13aa-11e5-9407-8d5a94a8c385","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:278","type":"CtIfImpl","sourcecode":"if (int != 0) {\n    if ((java.util.BitSet.get(int)) == true) {\n        if (int > 0) {\n            int = -1;\n        } else {\n            int = 1;\n        }\n    } \n    return int;\n} "},"variableMap":{"comparatorIndex":"i","orderingBits":"value","retval":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:134","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n    if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n        return int;\n    } \n    int++;\n}"},"status":-2},{"failures":[],"tindex":"1d065341-13aa-11e5-9407-9ba48350d21e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:138","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = java.lang.Boolean.booleanValue()"},"variableMap":{"b1":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:212","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().remove(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"1d065342-13aa-11e5-9407-1f0808485f75","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[135,137,152,153,155,156,157,159,160,162,165,166,179,185,186,190,192,202,203,205,206,207,209,210],"tindex":"1d073da3-13aa-11e5-9407-59233a05182d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:684","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"1d073da4-13aa-11e5-9407-bb796a7d3225","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtIfImpl","sourcecode":"if (((java.util.Collection<?> == null) || (java.util.Collection<?> == null)) || ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size()))) {\n    return false;\n} "},"variableMap":{"list1":"iterable","list2":"iterable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? extends C> instanceof java.util.Collection<?>) {\n    return java.util.Collection<C>.addAll(((java.util.Collection<? extends C>)(java.lang.Iterable<? extends C>)));\n} "},"status":-2},{"failures":[],"tindex":"1d073da5-13aa-11e5-9407-a7c6280efa4d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:414","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Set) {\n    final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(java.lang.Object));\n    return ((java.util.Set<?>.size()) == org.apache.commons.collections4.set.CompositeSet<E>.(size())) && (java.util.Set<?>.containsAll(this));\n} "},"status":-2},{"failures":[810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827],"tindex":"1d073da6-13aa-11e5-9407-f57e17eeecfa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:185","type":"CtReturnImpl","sourcecode":"return java.lang.Integer == null"},"variableMap":{"position":"lock"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:106","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().add(E);\n}"},"status":-1},{"failures":[802],"tindex":"1d0764b7-13aa-11e5-9407-793fdf00c66b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"removeIndex","index":"currentIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:215","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (((int) - (int)) > 1)) {\n    throw new java.lang.IllegalStateException(java.text.MessageFormat.format(org.apache.commons.collections4.iterators.ListIteratorWrapper.java.lang.String, java.lang.Integer.valueOf(int)));\n} "},"status":-1},{"failures":[],"tindex":"1d0764b8-13aa-11e5-9407-0da84adaad40","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:360","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.Values()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1024","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.values()"},"status":-2},{"failures":[828,829],"tindex":"1d0764b9-13aa-11e5-9407-551f891c3e01","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:130","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.bag.HashBag<E>.remove(E, 1))) {\n    java.util.ArrayList<E>.add(E);\n} "},"status":-1},{"failures":[],"tindex":"1d0764ba-13aa-11e5-9407-9be27fb1a4da","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:567","type":"CtInvocationImpl","sourcecode":"new java.lang.StringBuilder(128).append('{').append((org.apache.commons.collections4.map.SingletonMap<K, V>.(getKey()) == (this) ? \"(this Map)\" : org.apache.commons.collections4.map.SingletonMap<K, V>.getKey())).append('=')"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:567","type":"CtInvocationImpl","sourcecode":"new java.lang.StringBuilder(128).append('{').append((org.apache.commons.collections4.map.SingletonMap<K, V>.(getKey()) == (this) ? \"(this Map)\" : org.apache.commons.collections4.map.SingletonMap<K, V>.getKey())).append('=').append((org.apache.commons.collections4.map.SingletonMap<K, V>.(getValue()) == (this) ? \"(this Map)\" : org.apache.commons.collections4.map.SingletonMap<K, V>.getValue()))"},"status":0},{"failures":[118,119,120,121,122,123,124,125,126,127,128,129],"tindex":"1d0764bb-13aa-11e5-9407-73da754ba6af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"previousObjectSet","nextCalled":"previousObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:145","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} "},"status":-1},{"failures":[439,440,441,442,443,444,445,446,447,448,449,450],"tindex":"1d0764bc-13aa-11e5-9407-1bc55cc76239","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtIfImpl","sourcecode":"if ((java.util.Comparator<? super E>) == null) {\n    throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n} "},"variableMap":{"comparator":"comparator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:359","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    if (int == (-1)) {\n        int = int;\n        E = java.util.ArrayList<E>.get(int);\n    } else {\n        final E E = java.util.ArrayList<E>.get(int);\n        if ((java.util.Comparator<? super E>) == null) {\n            throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n        } \n        if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n            E = E;\n            int = int;\n        } \n    }\n} "},"status":-1},{"failures":[830,831],"tindex":"1d0764bd-13aa-11e5-9407-4d107bf027ca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends K, ?> instanceof org.apache.commons.collections4.MultiMap) {\n    for (final java.util.Map.Entry<? extends K, java.lang.Object> java.util.Map.Entry<? extends K, java.lang.Object> : ((org.apache.commons.collections4.MultiMap<? extends K, V>)(java.util.Map<? extends K, ?>)).entrySet()) {\n        org.apache.commons.collections4.map.MultiValueMap<K, V>.putAll(java.util.Map.Entry<? extends K, java.lang.Object>.getKey(), ((java.util.Collection<V>)(java.util.Map.Entry<? extends K, java.lang.Object>.getValue())));\n    }\n} else {\n    for (final java.util.Map.Entry<? extends K, ?> java.util.Map.Entry<? extends K, ?> : java.util.Map<? extends K, ?>.entrySet()) {\n        org.apache.commons.collections4.map.MultiValueMap<K, V>.put(java.util.Map.Entry<? extends K, ?>.getKey(), java.util.Map.Entry<? extends K, ?>.getValue());\n    }\n}"},"status":-1},{"failures":[640,641,642],"tindex":"1d0764be-13aa-11e5-9407-ff5a84251803","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:239","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"1d0764bf-13aa-11e5-9407-034cac74e9fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:414","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:252","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n    return true;\n} "},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}