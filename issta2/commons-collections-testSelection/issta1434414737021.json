{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":496,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":384,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":165,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":613,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":665,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":51,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":530,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":859,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":144,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":582,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":282,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":735,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":754,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":604,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":835,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":504,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":769,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":719,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":83,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":430,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":547,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":839,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":726,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":745,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":335,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":695,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":557,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":357,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":4,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":122,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":77,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":543,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":208,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":565,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":500,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":537,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":311,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":534,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":170,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":296,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":403,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":709,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":110,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":701,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":33,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":405,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":168,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":529,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":6,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":651,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":804,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":456,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKey":157,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":622,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":686,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":669,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":224,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":298,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":641,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":218,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":345,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":419,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":513,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":65,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":779,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":718,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":505,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":52,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":272,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":444,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":551,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":308,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":821,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":409,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":436,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":497,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":427,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":350,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":555,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":671,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":72,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":325,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":382,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":203,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":618,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":99,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":25,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":374,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":125,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":808,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":668,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKey":131,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":178,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":620,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":580,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":238,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":301,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":292,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":425,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":313,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":399,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":702,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":161,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":302,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":575,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiInverse":133,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":478,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":525,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":213,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":162,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":98,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":664,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":685,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":828,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":434,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":143,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":441,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":269,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":644,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":205,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":415,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiInverse":159,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":829,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":460,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":42,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":449,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":579,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":361,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":861,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":571,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":512,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":283,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":240,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":30,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":370,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":389,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":609,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":533,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":198,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":682,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":117,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":587,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":398,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":75,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":187,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":306,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":243,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":467,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":811,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":437,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":611,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":381,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":550,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":781,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":479,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":796,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":539,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":279,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":141,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":275,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":164,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":666,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":480,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":758,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":608,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":185,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":278,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":493,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":346,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":367,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":568,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":93,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":89,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":136,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":341,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":566,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":502,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":792,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":482,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":820,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":81,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":495,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":156,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":832,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":413,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":259,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":300,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":31,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":785,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":291,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testListIterator":714,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":454,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":836,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":635,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":477,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":32,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":404,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":490,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":681,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":43,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":634,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":774,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":694,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":412,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":196,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":831,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":254,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":481,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":62,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":70,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":252,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":28,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":320,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":818,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":443,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":360,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":737,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":327,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":766,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":869,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":749,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":472,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":197,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":654,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":383,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":794,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":233,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":464,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":619,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testListIteratorSet":715,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":631,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":765,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":727,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":473,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":776,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":190,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":222,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":9,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":830,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":160,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":452,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":227,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":369,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":192,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":377,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":388,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":586,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":147,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":617,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":210,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":371,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":256,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":451,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":76,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":850,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":487,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":285,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":556,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":605,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":220,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":553,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":151,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":807,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":614,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":673,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":13,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":20,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":116,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":22,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiPut":101,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":732,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":199,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":121,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":791,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":598,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueCompatibility":853,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":126,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":591,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":24,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":679,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":100,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":344,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":230,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":499,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":271,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":273,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":594,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":656,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":857,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":134,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":546,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":8,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":849,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":848,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":729,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":845,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":844,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":847,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":846,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":841,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":843,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":842,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":355,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":704,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":554,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":446,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":606,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":44,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":418,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":855,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":488,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":744,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":366,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":570,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":401,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":752,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":390,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":601,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":391,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":166,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":747,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":574,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":274,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":255,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":561,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":693,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":36,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":86,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":564,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":563,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":153,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":396,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":562,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":241,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":462,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":696,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":684,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":303,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":420,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":782,"org.apache.commons.collections4.map.ListOrderedMap2Test.testLastKey":824,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":572,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":705,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":124,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":773,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":466,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":150,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":287,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":607,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":120,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":145,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":329,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":186,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":817,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":720,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":672,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":699,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":119,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":833,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":743,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":123,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":286,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":755,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":750,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":263,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":351,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":73,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":397,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":127,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":175,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":84,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":426,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":463,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":731,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":26,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":215,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":365,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":387,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":293,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":411,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":373,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":624,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":498,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":219,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":486,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":860,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":312,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":559,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":549,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":239,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":767,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":163,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":35,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":421,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKeyInverse":132,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":193,"org.apache.commons.collections4.map.ListOrderedMap2Test.testNextKey":661,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":865,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":386,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":722,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":10,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":483,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":863,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":114,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":508,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":862,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":648,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":800,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":763,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":66,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":706,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":837,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":803,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":78,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":38,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":364,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":650,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":516,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":2,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":321,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":362,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":510,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":612,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":511,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":871,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":596,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":600,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":115,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":265,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":834,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":29,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":289,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":402,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testFullIterator":717,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":154,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":284,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":826,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":280,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":105,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":408,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiInverse":104,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":297,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":457,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":184,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":428,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":315,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":331,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":544,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":589,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":771,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":128,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":439,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":416,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":759,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":96,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":840,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":330,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":519,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":597,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":520,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":518,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":338,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":642,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":176,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":195,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":676,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":290,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":88,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":244,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":407,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":632,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":698,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":814,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":721,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":58,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":90,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":68,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":305,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":177,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":494,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":41,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":348,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":768,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":798,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":459,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":69,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":406,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":237,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":261,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":392,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":492,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":815,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":739,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":318,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":23,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":53,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":576,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":188,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":352,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":242,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":106,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":46,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":359,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":652,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":738,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":400,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":491,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":531,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":476,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":677,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":7,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":595,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":349,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":474,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":793,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":438,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":626,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":155,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":319,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":447,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":257,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":152,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":109,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":517,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":784,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":288,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":414,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":639,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":703,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":509,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":27,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":514,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":724,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":139,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":424,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":173,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":223,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":501,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":448,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":746,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":394,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":225,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":264,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":740,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":322,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":789,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":324,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":340,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":590,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":270,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":253,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":783,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":816,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":485,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":523,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testIterator":708,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":522,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":521,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":294,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":867,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":468,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":484,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":762,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":183,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":118,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":683,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":234,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":11,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":854,"org.apache.commons.collections4.ListUtilsTest.testSubtract":207,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":363,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_Decorate":655,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":756,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":410,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKey":102,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":810,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":304,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":772,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":585,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":56,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":728,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":775,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":825,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":247,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":507,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":603,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":317,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":433,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":54,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":55,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":309,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":347,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":455,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":67,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":276,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":268,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":432,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":201,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":375,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiPut":130,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":172,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":148,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":736,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":628,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":646,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":182,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":48,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testFullIterator":713,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":140,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":206,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":770,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":0,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":809,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":599,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":851,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":50,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":212,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":583,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":445,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":299,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":838,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":267,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":541,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":528,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":108,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":730,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":593,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":623,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":799,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":870,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":19,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":211,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":748,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKey":174,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":295,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":506,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":581,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":393,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":95,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":806,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":343,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":660,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":310,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKeyInverse":158,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":235,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":489,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":584,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":647,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":616,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":802,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":805,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":558,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testIterator":716,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":181,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":700,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":232,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":786,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":866,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":79,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":216,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":266,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":470,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":209,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":801,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":142,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":690,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":691,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":692,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":777,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":629,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":354,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":112,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":630,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":653,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":532,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsSelfHashCode":819,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":710,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":258,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":328,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":332,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":107,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":458,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":307,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":376,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":334,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":85,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":92,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":137,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":742,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":423,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":5,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":442,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":535,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":674,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":372,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":475,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":465,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":64,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":129,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":146,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":545,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":621,"org.apache.commons.collections4.map.ListOrderedMapTest.testNextKey":659,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":379,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":179,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":246,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":795,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":171,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":217,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":277,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":228,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":94,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":49,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":440,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":573,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":1,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":336,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":333,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":378,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":643,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":111,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":538,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":450,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":778,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":675,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":395,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":453,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":3,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":858,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":202,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":236,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":248,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":751,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":588,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":524,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":723,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":226,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":592,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":864,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":764,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":167,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":326,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":221,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":797,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":353,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKeyInverse":103,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":640,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":250,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":138,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":214,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":787,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":733,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":645,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":194,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":812,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":135,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":339,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":868,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":548,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":658,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":780,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex1":707,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":567,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testWalkForwardAndBack":712,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":560,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":149,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":385,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":358,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":12,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":262,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":540,"org.apache.commons.collections4.map.ListOrderedMapTest.testLastKey":822,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":638,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":59,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":61,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":60,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":471,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":827,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":663,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testSet":711,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":697,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":662,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsSelfHashCode":757,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":633,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":37,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":281,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":231,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_Decorate":657,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":417,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":569,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":422,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":615,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":852,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":191,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":526,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":204,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":169,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":461,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":337,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":245,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":790,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":760,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":688,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":689,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":229,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":687,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":314,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":80,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":82,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":515,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":368,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":725,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":39,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":323,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":680,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":469,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":627,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":527,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":636,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":637,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":503,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":610,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":380,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":542,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":788,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":536,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":249,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":356,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":670,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":823,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":15,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":741,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":14,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":667,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":856,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":649,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":678,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":578,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":602,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":57,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":17,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":200,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":552,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":18,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":577,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":813,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":625,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":761,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":260,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":435,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":189,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":180,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":91,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":97,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":734,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":431,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":74,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":429,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":113,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":342,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":753,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":251,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":316},"transformations":[{"failures":[],"tindex":"24290ee6-13bf-11e5-9dc2-f543152a708d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"status":-2},{"failures":[],"tindex":"242935f7-13bf-11e5-9dc2-6db64b6321b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"variableMap":{"next":"entry","entry":"entry","previous":"entry","hashCode":"hashCode","this":"this","index":"hashCode","key":"convertedKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:280","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n    return V;\n} "},"status":-2},{"failures":[0,1,2,3],"tindex":"242935f8-13bf-11e5-9dc2-eb5306efca03","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:129","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"exhausted":"added"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C);\n} "},"status":-1},{"failures":[],"tindex":"242935f9-13bf-11e5-9dc2-07aedf0dec59","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"status":0},{"failures":[],"tindex":"242935fa-13bf-11e5-9dc2-353a44ed9317","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:520","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[],"tindex":"24295d0b-13bf-11e5-9dc2-3bdc5c279512","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-2},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15],"tindex":"24295d0c-13bf-11e5-9dc2-cfc679ec95b5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:268","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"24295d0d-13bf-11e5-9dc2-d74a8755359e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:924","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    if (org.apache.commons.collections4.Predicate<? super O>.evaluate(O)) {\n        R.add(O);\n    } \n}"},"status":-2},{"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88],"tindex":"24295d0e-13bf-11e5-9dc2-19e5731e8883","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:59","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtIfImpl","sourcecode":"if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n} else {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-1},{"failures":[],"tindex":"2429841f-13bf-11e5-9dc2-e333f5086cb2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:924","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} "},"variableMap":{"found":"root","this":"this","bitIndex":"endIndexInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(lengthInBits(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey())) < int)) {\n    return null;\n} "},"status":0},{"failures":[89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202],"tindex":"24298420-13bf-11e5-9dc2-e356bcdc55b6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:197","type":"CtInvocationImpl","sourcecode":"java.util.Map<V, K>.clear()"},"variableMap":{"reverseMap":"reverseMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:169","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(K)) {\n    java.util.Map<V, K>.remove(java.util.Map<K, V>.get(K));\n} "},"status":-1},{"failures":[203,204,205,206],"tindex":"24298421-13bf-11e5-9dc2-c9a20d53bb70","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1179","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.swapColors(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"x":"y","y":"x","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1182","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15],"tindex":"24298422-13bf-11e5-9dc2-efb31aaad50e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super C> == null) {\n    return false;\n} "},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:231","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasNext()) {\n    final E E = java.util.ListIterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-1},{"failures":[207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478],"tindex":"2429ab33-13bf-11e5-9dc2-4f23f11d592a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(E);\n    int += int;\n    if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n        return true;\n    } \n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int += int;\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"2429d244-13bf-11e5-9dc2-7b5faeb9a867","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:368","type":"CtIfImpl","sourcecode":"if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n    E = E;\n    int = int;\n} "},"status":0},{"failures":[479,480,481,482,483,484],"tindex":"2429f955-13bf-11e5-9dc2-ffc0049132de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n    return true;\n} "},"variableMap":{"entry":"header"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:142","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n}"},"status":-1},{"failures":[485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,203,512,513,514,204,515,516,517,518,519,520,521,522,523,524,525,526,527,205,528,529,530,206,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576],"tindex":"2429f956-13bf-11e5-9dc2-3b3d665a9652","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1552","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDelete(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>)"},"variableMap":{"node":"currentNode","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:906","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[577,578,579,580,581,582],"tindex":"2429f957-13bf-11e5-9dc2-b99c80349a76","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:186","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int += 2) {\n    final int int = int + int;\n    if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n        int[][int] = int[][(int + 1)];\n    } else {\n        int[][int] = (int[][(int - 1)]) + 1;\n    }\n    int int = int[][int];\n    int int = ((int - int) + int) - int;\n    while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = ++int;\n        ++int;\n    }\n    if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n        if ((int[][(int - int)]) <= (int[][int])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630],"tindex":"2429f958-13bf-11e5-9dc2-27acec5a6bd6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"it1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"242ba709-13bf-11e5-9dc2-2749c5748c20","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n    return true;\n} "},"variableMap":{"entry":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:244","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[602,631,627],"tindex":"242ba70a-13bf-11e5-9dc2-01020a364769","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:282","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.contains(java.util.Iterator<E>.next())) == false) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"variableMap":{"coll":"coll","modified":"modified","it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:259","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.contains(java.util.Iterator<E>.next())) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-1},{"failures":[632,633,634,635],"tindex":"242ba70b-13bf-11e5-9dc2-73d5e526effb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:548","type":"CtThrowImpl","sourcecode":"throw new java.util.ConcurrentModificationException(\"Cursor closed\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:267","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"null values not allowed\")"},"status":-1},{"failures":[],"tindex":"242ba70c-13bf-11e5-9dc2-4dd7b3e145e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"i","maxElements":"leastIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:360","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    int = int;\n    E = java.util.ArrayList<E>.get(int);\n} else {\n    final E E = java.util.ArrayList<E>.get(int);\n    if ((java.util.Comparator<? super E>) == null) {\n        throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n    } \n    if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n        E = E;\n        int = int;\n    } \n}"},"status":-2},{"failures":[219,223,242,243,255,259,287,291,310,311,326,330,359,363,391,395,414,415,436,440],"tindex":"242bce1d-13bf-11e5-9dc2-83a41d9b4aec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"variableMap":{"isLocked":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:346","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1);\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[636,637,638,639,640,641,642,643],"tindex":"242bce1e-13bf-11e5-9dc2-cdfdb8d9db8c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:181","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) != null) {\n    org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n} "},"status":-1},{"failures":[],"tindex":"242bce1f-13bf-11e5-9dc2-d329faca7955","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"variableMap":{"values":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:345","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValues<V>(this);\n} "},"status":0},{"failures":[],"tindex":"242bce20-13bf-11e5-9dc2-d95a40b8050d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:801","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey() : null;\n} else {\n    return null;\n}"},"status":-2},{"failures":[],"tindex":"242bce21-13bf-11e5-9dc2-c1f6544f7c8e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:686","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<T>.hasNext()) {\n    C.execute(java.util.Iterator<T>.next());\n}"},"status":-2},{"failures":[203,204,524,205,206],"tindex":"242bce22-13bf-11e5-9dc2-9fadcf1ab490","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"x","rightChild":"x","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1167","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"242bce23-13bf-11e5-9dc2-6bc7bf916240","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"variableMap":{"currentNode":"currentNode","this":"this","dataElement":"dataElement","rootNode":"rootNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1030","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":-2},{"failures":[],"tindex":"242bf534-13bf-11e5-9dc2-632bcd79d337","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:962","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"dataElement":"dataElement","deletedNode":"currentNode","replacement":"currentNode","rootNode":"rootNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1019","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n    }\n}"},"status":0},{"failures":[17,19,20,644,22,23,24,25,27,28,29,30,32,33,645,646,64,65,67,68,70,71,74,75,76],"tindex":"242bf535-13bf-11e5-9dc2-69278baab9c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:578","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:97","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    int += java.util.Set<E>.size();\n}"},"status":-1},{"failures":[647,648,649,650,651,40,41,44,46,47,652],"tindex":"242c1c46-13bf-11e5-9dc2-7fd2b461db2a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:133","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    if (java.util.Collection<E>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[653,654,655,656,657,658],"tindex":"242c1c47-13bf-11e5-9dc2-136400b3084a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:167","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Transformer<? super K, ? extends K>) == null) {\n    return K;\n} "},"status":-1},{"failures":[],"tindex":"242c1c48-13bf-11e5-9dc2-77c1e4131d09","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:106","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"status":-2},{"failures":[207,208,210,211,213,214,218,219,222,223,241,242,243,254,255,258,259,278,279,286,287,290,291,309,310,311,325,326,329,330,349,350,358,359,362,363,382,383,390,391,394,395,413,414,415,423,429,435,436,439,440,459,460,470,476],"tindex":"242c1c49-13bf-11e5-9dc2-33e3813f29da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Closure<?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The closure array must not be null\");\n} "},"variableMap":{"closures":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:325","type":"CtIfImpl","sourcecode":"if (int < (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int)) {\n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int -= int;\n    int -= int;\n} else {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(java.lang.Object);\n    int -= org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n}"},"status":-1},{"failures":[],"tindex":"242c1c4a-13bf-11e5-9dc2-4dd28ddcb900","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:109","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>.(hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[279,350,383,423,460],"tindex":"242c1c4b-13bf-11e5-9dc2-4fc945b61660","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:92","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\");\n} "},"variableMap":{"canRemove":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:128","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[],"tindex":"242c1c4c-13bf-11e5-9dc2-65045fcb02ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:675","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    return false;\n} "},"variableMap":{"entryKey":"otherValue","entryValue":"otherValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1168","type":"CtIfImpl","sourcecode":"if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"242c1c4d-13bf-11e5-9dc2-0521a5117469","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:750","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<T> java.util.Iterator<T> = java.lang.Iterable<T>.iterator() ; java.util.Iterator<T>.hasNext() ; ) {\n    if (!(org.apache.commons.collections4.Predicate<? super T>.evaluate(java.util.Iterator<T>.next()))) {\n        java.util.Iterator<T>.remove();\n        boolean = true;\n    } \n}"},"status":0},{"failures":[659,660,661],"tindex":"242c435e-13bf-11e5-9dc2-3fd4bd90c25c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:195","type":"CtIfImpl","sourcecode":"if ((int >= 0) && (int < (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) - 1))) {\n    return java.util.List<K>.get((int + 1));\n} "},"status":-1},{"failures":[],"tindex":"242c435f-13bf-11e5-9dc2-4f24920cdcca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1330","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(size())) {\n    return false;\n} "},"variableMap":{"other":"other","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1336","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"status":0},{"failures":[],"tindex":"242c4360-13bf-11e5-9dc2-03fb1a2813e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:358","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.removeAllExpired(org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.now())"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:167","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-2},{"failures":[],"tindex":"242c4361-13bf-11e5-9dc2-05a77d6fd573","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:71","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n} "},"status":0},{"failures":[636,637,638,639,640,641,642,643],"tindex":"242c4362-13bf-11e5-9dc2-6f77c6f047c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:956","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<?> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:195","type":"CtIfImpl","sourcecode":"if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n} "},"status":-1},{"failures":[],"tindex":"242c4363-13bf-11e5-9dc2-9557f6dd368e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"rval":"y","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1140","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"242c4364-13bf-11e5-9dc2-b172ceb71812","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:428","type":"CtIfImpl","sourcecode":"if (java.lang.Number == null) {\n    java.lang.Number = java.lang.Number;\n} "},"variableMap":{"answer":"key4","defaultValue":"key4"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:668","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"242c4365-13bf-11e5-9dc2-17aafdbcf996","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"hashIndex","newCapacity":"hashIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:583","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} else {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"242c4366-13bf-11e5-9dc2-6736948c8634","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1470","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> instanceof org.apache.commons.collections4.BoundedCollection) {\n    return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).isFull();\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) == 0) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"242c6a77-13bf-11e5-9dc2-53964bf87abc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"index","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"status":-2},{"failures":[219,223,242,243,255,259,287,291,310,311,326,330,359,363,391,395,414,415,436,440],"tindex":"242c6a78-13bf-11e5-9dc2-2bd3f2e08e5d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1);\n        boolean = boolean || boolean;\n    }\n} "},"status":-1},{"failures":[662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704],"tindex":"242c6a79-13bf-11e5-9dc2-ef5eaf842a24","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.size();\n} "},"status":-1},{"failures":[],"tindex":"242c6a7a-13bf-11e5-9dc2-4bd323066d84","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"242c6a7b-13bf-11e5-9dc2-af929443e0ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:762","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"node":"h","right":"p","child":"predecessor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[705,706,707],"tindex":"242c6a7c-13bf-11e5-9dc2-9ff575f145ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n} "},"status":-1},{"failures":[663,664,675],"tindex":"242c6a7d-13bf-11e5-9dc2-fdc8721bc583","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(java.lang.Object);\n} "},"status":-1},{"failures":[487,494,502,503,505,506,507,509,510,203,514,204,527,530,531,532,533,538,545,548,549,551,552,553,555,556,574,575],"tindex":"242c6a7e-13bf-11e5-9dc2-550e13ab0463","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:967","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"parent","replacement":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:615","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"242c6a7f-13bf-11e5-9dc2-b1e43e4471a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:116","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayListIterator<E>.(hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:243","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n} "},"status":-2},{"failures":[577,578,580,581],"tindex":"242c9190-13bf-11e5-9dc2-b36155681147","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:150","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.sequence.SequencesComparator.Snake(int , int , int)"},"variableMap":{"diag":"end1","start":"end1","end":"end1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:212","type":"CtForImpl","sourcecode":"for (int int = int - int ; int <= (int + int) ; int += 2) {\n    final int int = (int + int) - int;\n    if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n        int[][int] = (int[][(int + 1)]) - 1;\n    } else {\n        int[][int] = int[][(int - 1)];\n    }\n    int int = (int[][int]) - 1;\n    int int = ((int - int) + int) - int;\n    while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = int--;\n        int--;\n    }\n    if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n        if ((int[][int]) <= (int[][(int + int)])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[708],"tindex":"242c9191-13bf-11e5-9dc2-bf7654089017","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"currentIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[709],"tindex":"242c9192-13bf-11e5-9dc2-930d4cbadaa9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:427","type":"CtReturnImpl","sourcecode":"return (boolean) == false"},"variableMap":{"hasNext":"foundCurrentElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:387","type":"CtIfImpl","sourcecode":"if (boolean) {\n    continue;\n} else {\n    return false;\n}"},"status":-1},{"failures":[],"tindex":"242c9193-13bf-11e5-9dc2-b56c55c5724f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:190","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.SingletonMap<K, V>.isEqualKey(java.lang.Object)) {\n    return V;\n} "},"status":0},{"failures":[],"tindex":"242c9194-13bf-11e5-9dc2-31ca5f9c167c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:980","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[],"tindex":"242c9195-13bf-11e5-9dc2-0768bc6d36fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:701","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"rval":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:932","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[710,711,712,713,714,715,716,717],"tindex":"242c9196-13bf-11e5-9dc2-c11cb5a5a1a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:109","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>.(hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:124","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[],"tindex":"242c9197-13bf-11e5-9dc2-a360b206e4b6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:231","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"242c9198-13bf-11e5-9dc2-197a735e9ddd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:391","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet();\n} "},"status":-2},{"failures":[583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630],"tindex":"242d7bf9-13bf-11e5-9dc2-2f632fa1be2b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"it2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"242d7bfa-13bf-11e5-9dc2-250ff5366117","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:401","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} else {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":0},{"failures":[718,719,720,721,722,723,724,725,726,727],"tindex":"242d7bfb-13bf-11e5-9dc2-6b8b72e57805","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:355","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-1},{"failures":[203,204,524,527,205,206,531,532],"tindex":"242d7bfc-13bf-11e5-9dc2-bfe00f50bd38","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:970","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"from"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[219,223,242,243,255,259,287,291,310,311,326,330,359,363,391,395,414,415,436,440],"tindex":"242d7bfd-13bf-11e5-9dc2-9dfd95291c9f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:129","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"exhausted":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1);\n        boolean = boolean || boolean;\n    }\n} "},"status":-1},{"failures":[],"tindex":"242d7bfe-13bf-11e5-9dc2-8fecd62a06bc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:495","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:886","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"242da30f-13bf-11e5-9dc2-096a5e4c98e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1336","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    java.lang.StringBuilder.append(\"RootEntry(\");\n} else {\n    java.lang.StringBuilder.append(\"Entry(\");\n}"},"variableMap":{"buffer":"obj","bitIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.KeyValue) {\n    for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n        final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(java.lang.Object));\n        java.util.Map<K, V>.put(org.apache.commons.collections4.KeyValue<K, V>.getKey(), org.apache.commons.collections4.KeyValue<K, V>.getValue());\n    }\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n        final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(java.lang.Object[][int]));\n        if ((java.lang.Object[] == null) || ((java.lang.Object[].int) < 2)) {\n            throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + int));\n        } \n        java.util.Map<K, V>.put(((K)(java.lang.Object[][0])), ((V)(java.lang.Object[][1])));\n    }\n} else {\n    for (int int = 0 ; int < ((java.lang.Object[].int) - 1) ; ) {\n        java.util.Map<K, V>.put(((K)(java.lang.Object[][int++])), ((V)(java.lang.Object[][int++])));\n    }\n}"},"status":-2},{"failures":[728],"tindex":"242da310-13bf-11e5-9dc2-293bdfaafb3e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1617","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<O>.trimToSize()"},"variableMap":{"mergedList":"mergedList"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1609","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<O>.hasNext()) {\n    final O O = java.util.Iterator<O>.next();\n    if ((O == null) || (!(O.equals(O)))) {\n        java.util.ArrayList<O>.add(O);\n    } \n    O = O;\n}"},"status":-1},{"failures":[],"tindex":"242da311-13bf-11e5-9dc2-33b108f6775b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:125","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof org.apache.commons.collections4.ResettableIterator) {\n    ((org.apache.commons.collections4.ResettableIterator<? extends E>)(java.util.Iterator<? extends E>)).reset();\n} "},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:272","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.updateCurrentIterator();\n} "},"status":-2},{"failures":[],"tindex":"242da312-13bf-11e5-9dc2-a9f182e96171","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:175","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"size":"cmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:505","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[729,730,731,732,733,734,735,736,583,584,585,586,737,738,587,588,739,740,589,741,742,590,743,744,745,746,747,748,591,592,749,750,751,593,752,753,604,754,605,594,595,755,596,597,598,599,600,601,602,603,756,757,758,759,760,761,718,762,763,631,606,764,765,766,767,768,769,770,771,772,719,720,773,774,721,722,775,776,777,778,779,780,781,723,724,725,726,727,782,783,784,785,786,787,788,789,790,791,607,608,609,792,793,794,795,796,797,798,610,611,612,613,799,800,614,615,801,802,616,803,804,617,805,806,807,808,809,810,811,812,813,618,814,815,629,816,630,619,620,817,621,622,623,624,625,626,627,628,818,819,820],"tindex":"242da313-13bf-11e5-9dc2-97798d126fc2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"index","lengthInBits":"index","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"index","otherOffsetInBits":"index","otherLengthInBits":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"status":-1},{"failures":[821],"tindex":"242dca24-13bf-11e5-9dc2-eb3d2b30cfba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:116","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayListIterator<E>.(hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[],"tindex":"242dca25-13bf-11e5-9dc2-fb9de716daca","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:220","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[822,823,824,825],"tindex":"242dca26-13bf-11e5-9dc2-4dc56798f0d8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:180","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-1},{"failures":[826],"tindex":"242dca27-13bf-11e5-9dc2-83033c130ab0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:138","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Closure<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Closure<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + int) + \" was null\"));\n    } \n}"},"status":-1},{"failures":[],"tindex":"242dca28-13bf-11e5-9dc2-c720005e2903","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:344","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    return V;\n} "},"variableMap":{"entry":"entry","previous":"entry","hashCode":"hashCode","this":"this","index":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:184","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n} "},"status":-2},{"failures":[],"tindex":"242dca29-13bf-11e5-9dc2-4f5e8b52d0c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:762","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"242dca2a-13bf-11e5-9dc2-cb2375111c00","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:123","type":"CtLocalVariableImpl","sourcecode":"int int = (\"ConstantTransformer\".hashCode()) << 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:181","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.set.CompositeSet<E>.size()"},"status":-2},{"failures":[],"tindex":"242dca2b-13bf-11e5-9dc2-17f5c4e86cd0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:390","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Bag<E>.isEmpty())) {\n    boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.removeAll(org.apache.commons.collections4.Bag<E>);\n} "},"status":-2},{"failures":[827],"tindex":"242dca2c-13bf-11e5-9dc2-a3dfdc22dfb3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.GrowthList:153","type":"CtIfImpl","sourcecode":"if (int > int) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.<E>nCopies((int - int), null));\n    boolean = true;\n} "},"status":-1},{"failures":[728,828,829,830,831,832,833,834,835,836,837,838],"tindex":"242df13d-13bf-11e5-9dc2-110f6b9409ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:175","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"size":"leastIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:360","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    int = int;\n    E = java.util.ArrayList<E>.get(int);\n} else {\n    final E E = java.util.ArrayList<E>.get(int);\n    if ((java.util.Comparator<? super E>) == null) {\n        throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n    } \n    if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n        E = E;\n        int = int;\n    } \n}"},"status":-1},{"failures":[839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870],"tindex":"242df13e-13bf-11e5-9dc2-2d1770206402","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"end"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:236","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"status":-1},{"failures":[],"tindex":"242df13f-13bf-11e5-9dc2-5935c4ea5dab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1137","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        if (boolean) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[871],"tindex":"242df140-13bf-11e5-9dc2-e7676564a636","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"result","nextCalled":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:387","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>.size()) > 0) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"242df141-13bf-11e5-9dc2-9fe06387ffbd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:333","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:127","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"242df142-13bf-11e5-9dc2-df867ba0d8f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:123","type":"CtLocalVariableImpl","sourcecode":"int int = (\"ConstantTransformer\".hashCode()) << 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:103","type":"CtLocalVariableImpl","sourcecode":"final int int = java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>>.size()"},"status":-2},{"failures":[],"tindex":"242df143-13bf-11e5-9dc2-d9a865754536","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"index","currentIndex":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:299","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(E))) {\n    org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().add(E);\n    java.util.List<E>.add(int, E);\n} "},"status":-2},{"failures":[],"tindex":"242df144-13bf-11e5-9dc2-254fb92c9cc8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1583","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"prior":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:889","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        return null;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n}"},"status":0},{"failures":[],"tindex":"242df145-13bf-11e5-9dc2-8599e4b326c3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:138","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key3","next":"entry","entry":"entry","key2":"key1","hashCode":"hashCode","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:337","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"242e1856-13bf-11e5-9dc2-db9bb7790223","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:194","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.previousIndex();\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:161","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.nextIndex();\n} "},"status":-2},{"failures":[480,481,483,484],"tindex":"242e1857-13bf-11e5-9dc2-cd133004369e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:398","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n    return true;\n} "},"status":-1},{"failures":[203,204,524,527,205,530,206,531,532,533],"tindex":"242e1858-13bf-11e5-9dc2-2d94f82a5202","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:513","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"x","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"xFormerRightChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1112","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        if (boolean) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}