{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":5,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":242,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":328,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":251,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":141,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":153,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":296,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":311,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":438,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":174,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":324,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":376,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":342,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":51,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":323,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":28,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":424,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":292,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":380,"org.apache.commons.collections4.CollectionUtilsTest.collect":10,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":381,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":409,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":331,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":336,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":84,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":271,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":297,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":403,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":235,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":399,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":152,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":53,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":0,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":111,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":160,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIsEmpty":358,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":228,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":60,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":191,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":185,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":426,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":165,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":349,"org.apache.commons.collections4.CollectionUtilsTest.transform2":8,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":277,"org.apache.commons.collections4.CollectionUtilsTest.transform1":289,"org.apache.commons.collections4.CollectionUtilsTest.select":21,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":230,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":155,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":237,"org.apache.commons.collections4.TransformerUtilsTest.testFactoryTransformer":346,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":360,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":63,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":442,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":263,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":127,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":334,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":458,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":214,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":391,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":433,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":72,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":88,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":337,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":142,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":124,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":27,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":383,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":257,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":56,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":182,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":444,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":161,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":293,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":445,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":146,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":410,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":304,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":3,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":140,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":274,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":151,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":109,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":30,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":62,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":74,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":169,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":427,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":65,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":255,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":31,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":137,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":234,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicateEx1":24,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":69,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping1":14,"org.apache.commons.collections4.functors.AllPredicateTest.trueAndFalseCombined":37,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":395,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":22,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":408,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":86,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping2":15,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":298,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":374,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":93,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":225,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":362,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":157,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":201,"org.apache.commons.collections4.PredicateUtilsTest.testIdentityPredicate":316,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":115,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":123,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":254,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":108,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":326,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":313,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":96,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":407,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":132,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":49,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":238,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":421,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":73,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":193,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":278,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":180,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":282,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":105,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":327,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":126,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":181,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":80,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":262,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":287,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":288,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":279,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":226,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":188,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":183,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":299,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":430,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":443,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":81,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":310,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":66,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":91,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":286,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":419,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":371,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":77,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":411,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":189,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":402,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":45,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":48,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":200,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray2":353,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":370,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":145,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":199,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":431,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":425,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":211,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":229,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":429,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":384,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":315,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":350,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":134,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":329,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":135,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":168,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":243,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":396,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":34,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":159,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testJoggingOverBoundary":17,"org.apache.commons.collections4.ListUtilsTest.testSubtract":52,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":213,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":361,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":85,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":94,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":231,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":420,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":359,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":455,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":321,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":173,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":203,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":295,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":102,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":447,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":250,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":252,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":58,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":101,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionSize":368,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":386,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":366,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":29,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":339,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":7,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":290,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":210,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":150,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":186,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":312,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":1,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":79,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":179,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":100,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":397,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":57,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":212,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":363,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":418,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":343,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":389,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":148,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetHashCode":351,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":260,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":412,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":451,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":388,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":356,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testNextAndPreviousIndex":18,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":335,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":415,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":38,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":270,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":221,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":233,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":162,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":172,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":284,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":104,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":285,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":330,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":283,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":294,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":97,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":50,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":163,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":23,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":32,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":198,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":227,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":459,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":6,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":204,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":158,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":240,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":205,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":59,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":365,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":122,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":441,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":87,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":110,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":156,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":440,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":454,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":453,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":154,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":338,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":436,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":461,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":90,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":241,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":320,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":276,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":107,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":95,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":143,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":325,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":344,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":171,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":267,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":268,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":136,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":352,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":196,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":103,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":139,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":332,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":119,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":4,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":333,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":35,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":164,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":439,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":314,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":422,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":308,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":432,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":116,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":306,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":99,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":192,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":387,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":202,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":457,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":197,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":130,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":222,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":245,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testSet":13,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":223,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":147,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":67,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":236,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":131,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":414,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionSize":354,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":26,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":133,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":224,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":450,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":345,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":448,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":114,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":64,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":239,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":112,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":43,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":256,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":416,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":42,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":78,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":39,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":41,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":456,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":40,"org.apache.commons.collections4.functors.AllPredicateTest.allTrue":36,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":406,"org.apache.commons.collections4.CollectionUtilsTest.isFull":44,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":318,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":177,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":280,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":348,"org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll":347,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":307,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":377,"org.apache.commons.collections4.ListUtilsTest.testSelect":20,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":215,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":70,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":379,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":449,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":138,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":187,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":209,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":106,"org.apache.commons.collections4.map.StaticBucketMapTest.testObjectHashCodeEqualsSelfHashCode":218,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":390,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":378,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":302,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":75,"org.apache.commons.collections4.SetUtilsTest.testEquals":249,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":76,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":385,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":405,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":401,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIteratorRemove":355,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":82,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":208,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":244,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":413,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":206,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":98,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":269,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":393,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":170,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":125,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":273,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":281,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":367,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":207,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":417,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":428,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":92,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":373,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":272,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":300,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":437,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testAdd":12,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":261,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":394,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":460,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":404,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":357,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":322,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":265,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":266,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":264,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":55,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":190,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":434,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":9,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":248,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":259,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":194,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":309,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":71,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":446,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":117,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":392,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":452,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":2,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":372,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":291,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":129,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":275,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testRemovingElementsAndIteratingForward":11,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":176,"org.apache.commons.collections4.map.LRUMapTest.testLRU":398,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":435,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":54,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":195,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":33,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":128,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":382,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":369,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":144,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":247,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testReset":16,"org.apache.commons.collections4.map.StaticBucketMapTest.testObjectHashCodeEqualsContract":217,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":246,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":253,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":319,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":375,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":258,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":47,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":120,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":25,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":166,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":219,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":423,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":305,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":220,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":46,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":340,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":301,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":61,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":89,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":400,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testJoggingNotOverBoundary":19,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":216,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":232,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":68,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":149,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":303,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":118,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":184,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":121,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":167,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":178,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":341,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":113,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":364,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":175,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":317},"transformations":[{"failures":[0,1,2,3],"tindex":"3e9acd77-13e1-11e5-9422-1b6fddf2432c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:413","type":"CtReturnImpl","sourcecode":"return (java.lang.Object == java.lang.Object) || (java.lang.Object.equals(java.lang.Object))"},"variableMap":{"key1":"value","key2":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:251","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[4,5,6,7],"tindex":"3e9af488-13e1-11e5-9422-af6c8092d108","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    int = ((java.lang.Object[])(java.lang.Object)).int;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int++;\n        java.util.Iterator<?>.next();\n    }\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int++;\n        java.util.Enumeration<?>.nextElement();\n    }\n} else {\n    try {\n        int = java.lang.reflect.Array.getLength(java.lang.Object);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"total":"h","length":"h","object":"key5"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:671","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[8,9,10],"tindex":"3e9af489-13e1-11e5-9422-8bf8b058feea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\");\n} "},"variableMap":{"iterator":"inputIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1066","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends I>.hasNext()) {\n    final I I = java.util.Iterator<? extends I>.next();\n    final O O = org.apache.commons.collections4.Transformer<? super I, ? extends O>.transform(I);\n    R.add(O);\n}"},"status":-1},{"failures":[],"tindex":"3e9b1b9a-13e1-11e5-9422-cd54bd57fc8d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:127","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-2},{"failures":[11,12,13,14,15,16,17,18,19],"tindex":"3e9b1b9b-13e1-11e5-9422-01d90b896f60","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:92","type":"CtInvocationImpl","sourcecode":"java.util.ListIterator<E>.remove()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:90","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<E>.hasNext()) == false) {\n    org.apache.commons.collections4.iterators.LoopingListIterator<E>.reset();\n} "},"status":-1},{"failures":[20,21],"tindex":"3e9b1b9c-13e1-11e5-9422-c18f925bdb4a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:926","type":"CtInvocationImpl","sourcecode":"R.add(O)"},"status":-1},{"failures":[22,23],"tindex":"3e9b1b9d-13e1-11e5-9422-ebbc0a9529f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:411","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Collection<?>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"variableMap":{"coll2":"coll","coll1":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) == 0) {\n    return false;\n} "},"status":-1},{"failures":[24],"tindex":"3e9b1b9e-13e1-11e5-9422-d559811c8392","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ExceptionClosure:65","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.collections4.FunctorException(\"ExceptionClosure invoked\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:48","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Predicate must not be null\")"},"status":-1},{"failures":[],"tindex":"3e9b1b9f-13e1-11e5-9422-4fce7702f6ab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"status":-2},{"failures":[25,23,26,27,28,29,30,31,32,33,34,35],"tindex":"3e9b42b0-13e1-11e5-9422-3f75fb6d7ad8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:858","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:297","type":"CtIfImpl","sourcecode":"if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n    return false;\n} "},"status":-1},{"failures":[36,37,37,38],"tindex":"3e9b42b1-13e1-11e5-9422-91523bda61a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.PredicatedMap:174","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.Predicate<? super V>) != null"},"variableMap":{"valuePredicate":"iPredicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:108","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Predicate<? super T>.evaluate(T))) {\n    return false;\n} "},"status":-1},{"failures":[39,40,41,42,43,44,45],"tindex":"3e9b42b2-13e1-11e5-9422-63bd6a856b0a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"maxElements"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"status":-1},{"failures":[],"tindex":"3e9b42b3-13e1-11e5-9422-07ad5a476d0d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"endIndex1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:82","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-2},{"failures":[46,47,48,49,50,51],"tindex":"3e9b42b4-13e1-11e5-9422-8b509c67c038","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:212","type":"CtForImpl","sourcecode":"for (int int = int - int ; int <= (int + int) ; int += 2) {\n    final int int = (int + int) - int;\n    if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n        int[][int] = (int[][(int + 1)]) - 1;\n    } else {\n        int[][int] = int[][(int - 1)];\n    }\n    int int = (int[][int]) - 1;\n    int int = ((int - int) + int) - int;\n    while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = int--;\n        int--;\n    }\n    if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n        if ((int[][int]) <= (int[][(int + int)])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n        } \n    } \n}"},"variableMap":{"start1":"d","d":"d","offset":"offset","vDown":"vUp","delta":"d","this":"this","sequence1":"sequence2","sequence2":"sequence2","vUp":"vDown","equator":"equator","end2":"d","end1":"start1","start2":"end1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:186","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int += 2) {\n    final int int = int + int;\n    if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n        int[][int] = int[][(int + 1)];\n    } else {\n        int[][int] = (int[][(int - 1)]) + 1;\n    }\n    int int = int[][int];\n    int int = ((int - int) + int) - int;\n    while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = ++int;\n        ++int;\n    }\n    if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n        if ((int[][(int - int)]) <= (int[][int])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106],"tindex":"3e9b69c5-13e1-11e5-9422-bb82453853b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:62","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super I>[].int) != (org.apache.commons.collections4.Transformer<? super I, ? extends O>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and transformer arrays must be the same size\");\n} "},"variableMap":{"predicates":"object","transformers":"object","length":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:325","type":"CtIfImpl","sourcecode":"if (int < (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int)) {\n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int -= int;\n    int -= int;\n} else {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(java.lang.Object);\n    int -= org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n}"},"status":-1},{"failures":[],"tindex":"3e9b69c6-13e1-11e5-9422-17c3e0e56251","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:499","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"3e9e9e17-13e1-11e5-9422-53fdee8ef848","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"variableMap":{"values":"valuesForKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:219","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V>.isEmpty()) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.remove(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"3e9e9e18-13e1-11e5-9422-79a22ab2bff6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"value","expectedModCount":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:325","type":"CtIfImpl","sourcecode":"if (int < (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int)) {\n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int -= int;\n    int -= int;\n} else {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(java.lang.Object);\n    int -= org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n}"},"status":-2},{"failures":[],"tindex":"3e9e9e19-13e1-11e5-9422-f1f9b3fceeec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:759","type":"CtWhileImpl","sourcecode":"while (true) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"current","left":"path","right":"current","bitIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:460","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"3e9e9e1a-13e1-11e5-9422-1518d78c5c71","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:147","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"3e9e9e1b-13e1-11e5-9422-e9a715b0171f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:675","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    return false;\n} "},"variableMap":{"entryKey":"object","entryValue":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} "},"status":0},{"failures":[107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,6,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201],"tindex":"3e9ec52c-13e1-11e5-9422-010836626344","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} "},"variableMap":{"o1":"key","o2":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:224","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"3e9ec52d-13e1-11e5-9422-499cec9b7695","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n} else {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[202,203,204,205],"tindex":"3e9ec52e-13e1-11e5-9422-fd2f6196ad57","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:255","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    int++;\n} else {\n    int = org.apache.commons.collections4.map.ListOrderedMap<K, V>.(indexOf(java.util.Map.Entry<? extends K, ? extends V>.getKey())) + 1;\n}"},"status":-1},{"failures":[206,207,208,209,1,210,211,212,213,214,215,216,217,218],"tindex":"3e9ec52f-13e1-11e5-9422-c16352380d42","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"i","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:426","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        int += org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.hashCode();\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-1},{"failures":[],"tindex":"3e9ec530-13e1-11e5-9422-575bf83cec27","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"status":-2},{"failures":[219,220,221,222,223,22,224,225,226,227,228,229,230,26,27,29,30,32,231,232,34,35],"tindex":"3e9ec531-13e1-11e5-9422-13890b16dbe9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"code","index":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"status":-1},{"failures":[],"tindex":"3e9ec532-13e1-11e5-9422-c53fe65b91c1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1077","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        return null;\n    }\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"found":"right","root":"right","bitIndex":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:198","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"3e9eec43-13e1-11e5-9422-a310b0cff7b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return null;\n} "},"variableMap":{"lengthInBits":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:759","type":"CtWhileImpl","sourcecode":"while (true) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[233,234],"tindex":"3e9eec44-13e1-11e5-9422-2f4b4d82184f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:399","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)).purge(java.lang.ref.Reference<?>)) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n        (this.int)--;\n        return ;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[46,47,48,49,50,51],"tindex":"3e9eec45-13e1-11e5-9422-d3e8ef3a0bee","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:206","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int)"},"variableMap":{"vUp":"vUp","start1":"start1","delta":"delta","end2":"start2","this":"this","i":"k","end1":"start1","k":"d","start2":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtIfImpl","sourcecode":"if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n    if ((int[][int]) <= (int[][(int + int)])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[235,236,237,238,239,240,241,242,243,244,245,246,247],"tindex":"3e9eec46-13e1-11e5-9422-fb8ff3e7e67a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"variableMap":{"it2":"iterator","it1":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"3e9eec47-13e1-11e5-9422-c576ee5d29f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"to","leftChild":"to","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":0},{"failures":[],"tindex":"3e9eec48-13e1-11e5-9422-8163aba4bc7d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:201","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) || ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey()"},"variableMap":{"entry":"header","header":"before","after":"before"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:190","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey()"},"status":-2},{"failures":[],"tindex":"3e9eec49-13e1-11e5-9422-63a0d45ce80a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1068","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"siblingNode":"newNode","currentNode":"newNode","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1284","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue(), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[248],"tindex":"3e9f135a-13e1-11e5-9422-bb6f8501713a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:295","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ?> java.util.Map.Entry<? extends K, ?> : java.util.Map<? extends K, ?>.entrySet()) {\n    org.apache.commons.collections4.map.MultiValueMap<K, V>.put(java.util.Map.Entry<? extends K, ?>.getKey(), java.util.Map.Entry<? extends K, ?>.getValue());\n}"},"variableMap":{"this":"this","map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:291","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, java.lang.Object> java.util.Map.Entry<? extends K, java.lang.Object> : ((org.apache.commons.collections4.MultiMap<? extends K, V>)(java.util.Map<? extends K, ?>)).entrySet()) {\n    org.apache.commons.collections4.map.MultiValueMap<K, V>.putAll(java.util.Map.Entry<? extends K, java.lang.Object>.getKey(), ((java.util.Collection<V>)(java.util.Map.Entry<? extends K, java.lang.Object>.getValue())));\n}"},"status":-1},{"failures":[],"tindex":"3e9f135b-13e1-11e5-9422-b14a796a4cc6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:854","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"leftChild":"currentNode","node":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1036","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[249],"tindex":"3e9f135c-13e1-11e5-9422-210ce857904b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:118","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"3e9f135d-13e1-11e5-9422-8591a6b75023","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:582","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"p":"entry","parent":"current","left":"entry","h":"path","right":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:216","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"3e9f135e-13e1-11e5-9422-a5f78d89897c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:685","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"rval":"y","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1176","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[250],"tindex":"3e9f3a6f-13e1-11e5-9422-d9b0a11a94f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:184","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Transformer<?, ?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Transformer<?, ?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + int) + \" was null\"));\n    } \n}"},"status":-1},{"failures":[251,252,253,254,127,128,255,129,130,131,256,257,132,258,133,259,260,134,135,261,262,263,264,265,266,267,268,136,269,270,271,272,273,274,275,276,277,278,279,280],"tindex":"3e9f3a70-13e1-11e5-9422-938ab0c5e1c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:291","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n} "},"status":-1},{"failures":[281,282,283,284,285,286,287,288,133,134],"tindex":"3e9f3a71-13e1-11e5-9422-090aa6eb7300","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:219","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return true;\n        } \n    case 2 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return true;\n        } \n    case 1 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return true;\n        } \n}"},"status":-1},{"failures":[],"tindex":"3e9f3a72-13e1-11e5-9422-b5df2138bd54","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1218","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"root":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:726","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"3e9f3a73-13e1-11e5-9422-b12cdaac3e36","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:324","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n    if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    } else {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n    (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n    return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n} "},"status":-2},{"failures":[],"tindex":"3e9f3a74-13e1-11e5-9422-03745586fe37","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:974","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[281,125,126,251,252,253,254,127,128,255,129,130,131,256,257,132,258,133,259,260,134,135,261,262,263,264,265,266,267,268,136,269,270,271,272,273,274,275,276,277,278,279,280],"tindex":"3e9f3a75-13e1-11e5-9422-193d50b287a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.size();\n} "},"status":-1},{"failures":[289,8],"tindex":"3e9f3a76-13e1-11e5-9422-47bd098a25c3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super I, ? extends O> == null) {\n    throw new java.lang.NullPointerException(\"Transformer must not be null\");\n} "},"variableMap":{"transform":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtIfImpl","sourcecode":"if (java.util.Collection<C> instanceof java.util.List<?>) {\n    final java.util.List<C> java.util.List<C> = ((java.util.List<C>)(java.util.Collection<C>));\n    for (final java.util.ListIterator<C> java.util.ListIterator<C> = java.util.List<C>.listIterator() ; java.util.ListIterator<C>.hasNext() ; ) {\n        java.util.ListIterator<C>.set(org.apache.commons.collections4.Transformer<? super C, ? extends C>.transform(java.util.ListIterator<C>.next()));\n    }\n} else {\n    final java.util.Collection<C> java.util.Collection<C> = org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.collect(java.util.Collection<C>, org.apache.commons.collections4.Transformer<? super C, ? extends C>);\n    java.util.Collection<C>.clear();\n    java.util.Collection<C>.addAll(java.util.Collection<C>);\n}"},"status":-1},{"failures":[],"tindex":"3e9f6187-13e1-11e5-9422-23018af3d1f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:263","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"3e9f6188-13e1-11e5-9422-0d88a58de62c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:590","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(java.lang.Object);\n    java.lang.StringBuilder.append(int);\n    java.lang.StringBuilder.append(':');\n    java.lang.StringBuilder.append(java.lang.Object);\n    if (java.util.Iterator<E>.hasNext()) {\n        java.lang.StringBuilder.append(',');\n    } \n}"},"status":0},{"failures":[],"tindex":"3e9f6189-13e1-11e5-9422-876571115fb4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key1","length":"hashCode","key":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:205","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"3e9f618a-13e1-11e5-9422-5deee8c45bba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:971","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY","deletedNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:520","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[],"tindex":"3e9f618b-13e1-11e5-9422-354f7daaca85","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:358","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"variableMap":{"cursor":"cursor","node":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:317","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":0},{"failures":[290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308],"tindex":"3e9f618c-13e1-11e5-9422-e722e00e426d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2016","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1323","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"3e9f618d-13e1-11e5-9422-17deb88099fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1208","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"left","parent":"left","left":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:509","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[298,300,309,310,311,312,313,314,315],"tindex":"3e9f618e-13e1-11e5-9422-2194d1e82f15","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:993","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"yFormerLeftChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1140","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[316],"tindex":"3e9f889f-13e1-11e5-9422-b393f8524b73","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:871","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.IdentityPredicate:72","type":"CtReturnImpl","sourcecode":"return (T) == T"},"status":-1},{"failures":[317,318,109,319,320,118,321,322,135,269,272,278,279,145,323,324,325,326,327,155,328,329,330,331,165,332,333,334,335,336,337,338,339,340,341],"tindex":"3e9f88a0-13e1-11e5-9422-1764cf162635","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:583","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} else {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"3e9f88a1-13e1-11e5-9422-4d645e0f7f39","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:458","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} "},"variableMap":{"entry":"next","hashCode":"hashCode","this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:457","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"3e9f88a2-13e1-11e5-9422-6b1aeb7fcac8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtIfImpl","sourcecode":"if ((java.util.SortedMap<K, V>.size()) > 0) {\n    final java.util.Map<K, V> java.util.Map<K, V> = org.apache.commons.collections4.map.TransformedSortedMap<K, V>.transformMap(java.util.SortedMap<K, V>);\n    org.apache.commons.collections4.map.TransformedSortedMap<K, V>.clear();\n    org.apache.commons.collections4.map.TransformedSortedMap<K, V>.decorated().putAll(java.util.Map<K, V>);\n} "},"variableMap":{"map":"map","decorated":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1682","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.populateMap(java.util.Map<K, V>, java.lang.Iterable<? extends V>, org.apache.commons.collections4.Transformer<V, K>, org.apache.commons.collections4.TransformerUtils.<V>nopTransformer())"},"status":-2},{"failures":[342],"tindex":"3e9f88a3-13e1-11e5-9422-bdfde7d4e662","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"total","index":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1348","type":"CtWhileImpl","sourcecode":"while (java.util.Enumeration<?>.hasMoreElements()) {\n    int++;\n    java.util.Enumeration<?>.nextElement();\n}"},"status":-1},{"failures":[],"tindex":"3e9f88a4-13e1-11e5-9422-23c51bade4b4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"status":0},{"failures":[],"tindex":"3e9f88a5-13e1-11e5-9422-01cd1a7f2d90","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == null) {\n    return 0;\n} "},"variableMap":{"list":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1501","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> instanceof org.apache.commons.collections4.BoundedCollection) {\n    return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).maxSize();\n} "},"status":0},{"failures":[],"tindex":"3e9f88a6-13e1-11e5-9422-89b4e6d4761e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:722","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"from":"node","to":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:854","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"3e9f88a7-13e1-11e5-9422-ab55df0866f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2319","type":"CtIfImpl","sourcecode":"if ((int) != 1) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"hit":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:321","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.set.CompositeSet<K>.addComposited(this.java.util.Map<K, V>[][int].keySet());\n}"},"status":-2},{"failures":[],"tindex":"3e9fafb8-13e1-11e5-9422-8fa6169cda15","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:686","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<T>.hasNext()) {\n    C.execute(java.util.Iterator<T>.next());\n}"},"status":-2},{"failures":[],"tindex":"3e9fafb9-13e1-11e5-9422-9df9696ce909","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:146","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:146","type":"CtIfImpl","sourcecode":"if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[343,344,345],"tindex":"3e9fafba-13e1-11e5-9422-a1c442c6c8bc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} "},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:466","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) > (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n    return false;\n} "},"status":-1},{"failures":[346],"tindex":"3e9fafbb-13e1-11e5-9422-a91f0dffe65a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Factory<? extends O> == null) {\n    throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"3e9fafbc-13e1-11e5-9422-ef187c27593d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:841","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>.(hasPrevious())) {\n    throw new java.util.NoSuchElementException(\"Already at start of list.\");\n} "},"variableMap":{"this":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:146","type":"CtIfImpl","sourcecode":"if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[241],"tindex":"3e9fafbd-13e1-11e5-9422-adc64f2a7b38","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:858","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"variableMap":{"removed":"previousObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:220","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n} "},"status":-1},{"failures":[],"tindex":"3e9fafbe-13e1-11e5-9422-77c21041dc49","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-2},{"failures":[55,57,59,60,62,64,70,72,76,78,80,81,83,85,89,91,93,94,98,100],"tindex":"3e9fafbf-13e1-11e5-9422-8f13d079633b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1467","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == null) {\n    throw new java.lang.NullPointerException(\"The collection must not be null\");\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1);\n        boolean = boolean || boolean;\n    }\n} "},"status":-1},{"failures":[347],"tindex":"3e9fafc0-13e1-11e5-9422-c76546ca6799","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:877","type":"CtForEachImpl","sourcecode":"for (final C C : java.lang.Iterable<C>) {\n    if (!(org.apache.commons.collections4.Predicate<? super C>.evaluate(C))) {\n        return false;\n    } \n}"},"variableMap":{"input":"input","predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:876","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<C> != null) {\n    for (final C C : java.lang.Iterable<C>) {\n        if (!(org.apache.commons.collections4.Predicate<? super C>.evaluate(C))) {\n            return false;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"3e9fafc1-13e1-11e5-9422-a5f383765692","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:389","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    final org.apache.commons.collections4.map.StaticBucketMap.Lock org.apache.commons.collections4.map.StaticBucketMap.Lock = org.apache.commons.collections4.map.StaticBucketMap.Lock[][int];\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = null;\n        org.apache.commons.collections4.map.StaticBucketMap.Lock.int = 0;\n    }\n}"},"status":-2},{"failures":[298,300,348,309,311,313,314,315],"tindex":"3e9fafc2-13e1-11e5-9422-d58d99f82abe","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:993","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"xFormerParent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1137","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        if (boolean) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[349],"tindex":"3e9fd6d3-13e1-11e5-9422-119132f7c181","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:66","type":"CtReturnImpl","sourcecode":"return (!(boolean)) && (!(boolean))"},"variableMap":{"removed":"foundCurrentElement","beforeFirst":"foundCurrentElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:387","type":"CtIfImpl","sourcecode":"if (boolean) {\n    continue;\n} else {\n    return false;\n}"},"status":-1},{"failures":[],"tindex":"3e9fd6d4-13e1-11e5-9422-e56903ddbf09","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:199","type":"CtForEachImpl","sourcecode":"for (final C C : org.apache.commons.collections4.collection.AbstractCollectionDecorator<C>.decorated()) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C);\n}"},"status":-2},{"failures":[],"tindex":"3e9fd6d5-13e1-11e5-9422-e1b22755104a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.TransformedMap:106","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.TransformedMap<K, V>.decorated().putAll(java.util.Map<K, V>)"},"variableMap":{"transformed":"map","decorated":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeMap:117","type":"CtIfImpl","sourcecode":"if ((java.util.Map<K, V>.containsKey(K)) == false) {\n    throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size\");\n} "},"status":-2},{"failures":[350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377],"tindex":"3e9fd6d6-13e1-11e5-9422-6bb8497f2cc2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:204","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    boolean |= org.apache.commons.collections4.set.ListOrderedSet<E>.add(E);\n}"},"status":-1},{"failures":[378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397],"tindex":"3e9fd6d7-13e1-11e5-9422-1592f5ff533e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:502","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isExternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an external Entry!\"));\n} "},"variableMap":{"h":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[398,166,167,168,169,399,400],"tindex":"3e9fd6d8-13e1-11e5-9422-2d1b39a16aab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:268","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"reuse=null, header.after=\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n    org.apache.commons.collections4.map.LRUMap<K, V>.reuseMapping(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n} else {\n    super.addMapping(int, int, K, V);\n}"},"status":-1},{"failures":[],"tindex":"3e9fd6d9-13e1-11e5-9422-2bfde3017078","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:297","type":"CtIfImpl","sourcecode":"if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n    return false;\n} "},"variableMap":{"composite":"key","i":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:224","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"3e9fd6da-13e1-11e5-9422-0dd7b32b432f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:975","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE","replacement":"newNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1301","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"status":-2},{"failures":[401,402,403,404,405,406,407,408,389,409,410,411,412,413,414,415,416,417,418,419,420,421,147,148,149,150,151,152,153,154,155,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,170,171,172,173,174,175,176,177,178],"tindex":"3e9ffdeb-13e1-11e5-9422-192ad8b93f3e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:106","type":"CtReturnImpl","sourcecode":"return \"ComparableComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[],"tindex":"3e9ffdec-13e1-11e5-9422-2d57cf2e25ce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"variableMap":{"currentNode":"node","this":"this","y":"rval","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"3e9ffded-13e1-11e5-9422-c9d5eb2dec66","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.EqualPredicate:109","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Equator<T>) != null) {\n    return org.apache.commons.collections4.Equator<T>.equate(T, T);\n} else {\n    return T.equals(T);\n}"},"status":-2},{"failures":[],"tindex":"3e9ffdee-13e1-11e5-9422-dfc2fe7ae8d9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:239","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":0},{"failures":[],"tindex":"3e9ffdef-13e1-11e5-9422-a5d55ff00c36","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:64","type":"CtReturnImpl","sourcecode":"return java.util.SortedMap<K, V>"},"variableMap":{"tmpMap":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedSortedMap:92","type":"CtReturnImpl","sourcecode":"return ((java.util.SortedMap<K, V>)(java.util.Map<K, V>))"},"status":-2},{"failures":[],"tindex":"3e9ffdf0-13e1-11e5-9422-f764129edbd7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:225","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsValue(java.lang.Object)) {\n    return true;\n} "},"variableMap":{"composite":"key","i":"hash1","value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                return true;\n            } \n        case 2 :\n            if ((K) == null) {\n                return true;\n            } \n        case 1 :\n            if ((K) == null) {\n                return true;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return true;\n                } \n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return true;\n                } \n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return true;\n                } \n        }\n    } \n}"},"status":-2},{"failures":[],"tindex":"3e9ffdf1-13e1-11e5-9422-b5e071f7fe31","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:431","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    int += this.java.util.Map<K, V>[][int].size();\n}"},"variableMap":{"size":"i","composite":"result","length":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:165","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.CompositeSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; int++) {\n    java.lang.Object[][int] = java.util.Iterator<E>.next();\n}"},"status":-2},{"failures":[133],"tindex":"3e9ffdf2-13e1-11e5-9422-cb846468d52d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:270","type":"CtIfImpl","sourcecode":"if (java.lang.Object.equals(V)) {\n    return true;\n} "},"status":-1},{"failures":[317,318,109,319,440,320,118,321,322,251,252,253,135,267,268,269,272,273,276,277,278,279,280,441,442,443,145,444,445,323,324,446,447,448,325,326,449,327,450,451,452,155,453,454,328,329,455,456,457,330,331,458,459,460,461,161,165,332,333,334,335,336,337,338,339,340,341],"tindex":"3ea02503-13e1-11e5-9422-c1a9716a7cc3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:838","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"previous":"previous"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:583","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} else {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"3ea02504-13e1-11e5-9422-b7f0a10e0225","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:163","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.NodeCachingLinkedList<E>.isCacheFull()) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":"3ea02505-13e1-11e5-9422-cfad9ddd428f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:553","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n} else {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"3ea02506-13e1-11e5-9422-7949a52bb017","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:553","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n} else {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":96,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}