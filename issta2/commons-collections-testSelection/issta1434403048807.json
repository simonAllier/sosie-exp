{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":113,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":566,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":792,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":525,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":150,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":186,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":247,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":416,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":12,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":583,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":837,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":58,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":879,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":681,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":878,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":121,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":278,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd":672,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":781,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":749,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":350,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":550,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":72,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":279,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":394,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":727,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":765,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":855,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":82,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":24,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":338,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":733,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":68,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":507,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":554,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":90,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":884,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":117,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":318,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":62,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":217,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":630,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":60,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":456,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":534,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":700,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":149,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":249,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":801,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":591,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":354,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":522,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":818,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":231,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":276,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":36,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":551,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":441,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":48,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":463,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":899,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":282,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":330,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":661,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":520,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":131,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":704,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":759,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":739,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":209,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":485,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":122,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":177,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":486,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":191,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":887,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":76,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":573,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":627,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":185,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":334,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":360,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":604,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":114,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":27,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":666,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":80,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":195,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":457,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":34,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":564,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":129,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":812,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":390,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":695,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":173,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":557,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":883,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":311,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":806,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":296,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":20,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":326,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":386,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":815,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":10,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":638,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":451,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":316,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":317,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":315,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":220,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":291,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":535,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":632,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":622,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":100,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":144,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":370,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":687,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":510,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":230,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":674,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":263,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":2,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":215,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":210,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":484,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":691,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":147,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":610,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":675,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":339,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":595,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":449,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":719,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":9,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":227,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":352,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":555,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":420,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":96,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":130,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":455,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":584,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":640,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":1,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":780,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":154,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":238,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":194,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":845,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":500,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":55,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":353,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":710,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":440,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":625,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":325,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":643,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":708,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":809,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":790,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":75,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":563,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":761,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":199,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":786,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":64,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":580,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":490,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":576,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":526,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":367,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":882,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":779,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToString":419,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":579,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":285,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":110,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":662,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":47,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":93,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":91,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":310,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":658,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":119,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":356,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":782,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":244,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":830,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":112,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":23,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":343,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":678,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":205,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":608,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":366,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":321,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":365,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":571,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":19,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testAddThenRemove":685,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":726,"org.apache.commons.collections4.map.LRUMapTest.testReset":336,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":771,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":621,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":439,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":268,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":589,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":523,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":448,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":35,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":242,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":682,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":266,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":14,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":699,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":107,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":889,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":540,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":292,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":720,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":255,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":284,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":752,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":892,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":348,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":607,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":518,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":355,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":549,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":677,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":308,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":375,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":729,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":619,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":707,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":652,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":697,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIsEmpty":717,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":829,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":206,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":843,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":174,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":369,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":744,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":161,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":430,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":861,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":565,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":784,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":167,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":599,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSimpleSerialization":252,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":814,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":738,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":743,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":254,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":262,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":766,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":283,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":756,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":18,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":475,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":676,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":265,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":188,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":559,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":309,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":842,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":802,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":184,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":273,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":158,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":274,"org.apache.commons.collections4.map.HashedMapTest.testClone":331,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":433,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":587,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":275,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":405,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":711,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":28,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":104,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":81,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":865,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":155,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":78,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":219,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":548,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":805,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":380,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":795,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":234,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":690,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":341,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":692,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":834,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":777,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":891,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":871,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueCompatibility":408,"org.apache.commons.collections4.CollectionUtilsTest.filterNullParameters":388,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":859,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":237,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":694,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":660,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":320,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":116,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":539,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":491,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":501,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":574,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":511,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":866,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":414,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":71,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":33,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":404,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":403,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":831,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":400,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":399,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":402,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":401,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":396,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":398,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":547,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":397,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":537,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":79,"org.apache.commons.collections4.map.LinkedMapTest.testClone":384,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":495,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":494,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":214,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":770,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":721,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":410,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":105,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":436,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":270,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":271,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":854,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":272,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":498,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":497,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":351,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":496,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":45,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":524,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":95,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":347,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":876,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":337,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":474,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":508,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":857,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":21,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":99,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":575,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":52,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":86,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":530,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":50,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":290,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":447,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":89,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":88,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":303,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":87,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":30,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":267,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":391,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":641,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":597,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":531,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":467,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":767,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":25,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":97,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":345,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":751,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":477,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":885,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":44,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":43,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":778,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":264,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":304,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":489,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":156,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":816,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":541,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":750,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":233,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":679,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":853,"org.apache.commons.collections4.map.LRUMapTest.testLRU":335,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":868,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":862,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":667,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":732,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":189,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":328,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionSize":418,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":480,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":598,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":833,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":361,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":725,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":569,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":453,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":606,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":286,"org.apache.commons.collections4.map.LinkedMapTest.testInitialCapacityZero":385,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":820,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":251,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":115,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":722,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":103,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":359,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":417,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":342,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":443,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":293,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":631,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":84,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":74,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":639,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testEmptyQueueSerialization":412,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":745,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":204,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":514,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":728,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":425,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":568,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":509,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":478,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":754,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":307,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":713,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":368,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":544,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":422,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":125,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":468,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":200,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":421,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":517,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":488,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":794,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":470,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":487,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":737,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":730,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":13,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":323,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":454,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":683,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":800,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":734,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":716,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":886,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":135,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":504,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":294,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":280,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":653,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":127,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":791,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":128,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":302,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":246,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":869,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":873,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":168,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":176,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testEmptyQueueCompatibility":413,"org.apache.commons.collections4.CollectionUtilsTest.addAllForElements":445,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":680,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":698,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":620,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":212,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":581,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":181,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":603,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":261,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":592,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":647,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":69,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":849,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":747,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":269,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":483,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":611,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":736,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":395,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":138,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":519,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":657,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":870,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":139,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":137,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":900,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":305,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":372,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":187,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":163,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":373,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":46,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":644,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":319,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":288,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":903,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":824,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":245,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":753,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":166,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":706,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":298,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":624,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":111,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":718,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":664,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":742,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":788,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":594,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":602,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":731,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":182,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":637,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":289,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":109,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":825,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":847,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":515,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":650,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":693,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":101,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":444,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":668,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":329,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":642,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":228,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":516,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":172,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":162,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":165,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":493,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":346,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":844,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":108,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":152,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":38,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":31,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":236,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":867,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":665,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":783,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":473,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":585,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":207,"org.apache.commons.collections4.CollectionUtilsTest.union":686,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":651,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":570,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":538,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":136,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":208,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":769,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":609,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":51,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":897,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":536,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":905,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":126,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":387,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":696,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":723,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":132,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":763,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":460,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":313,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":312,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":118,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":634,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":856,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":314,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":888,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":22,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":216,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":393,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":503,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":848,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":502,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":654,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":190,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":226,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":775,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":461,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":852,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":572,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":512,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":768,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":827,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":459,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":102,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":142,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":141,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":140,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":6,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":376,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":427,"org.apache.commons.collections4.map.LRUMapTest.testClone":344,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":545,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":740,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":239,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":635,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":349,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":175,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":409,"org.apache.commons.collections4.ListUtilsTest.testSubtract":553,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":506,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":556,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":881,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":605,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":808,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":623,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":450,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":748,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":546,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":476,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":841,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":673,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":755,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":32,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":614,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":124,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testInitialCapacityZero":383,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":875,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":513,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":649,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":628,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionClear":424,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":663,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":590,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":705,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":577,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":714,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":838,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":702,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":823,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":438,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":374,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":213,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":151,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":437,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":746,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":807,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":406,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":872,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":839,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":16,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":684,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":66,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":56,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":148,"org.apache.commons.collections4.CollectionUtilsTest.filter":389,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":301,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":832,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":819,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":864,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":793,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":431,"org.apache.commons.collections4.map.HashedMapTest.testInitialCapacityZero":332,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":378,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":689,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":256,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":178,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":198,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":858,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":123,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":11,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":179,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":600,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":0,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":225,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":804,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":257,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":659,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":629,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":482,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":106,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":840,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":799,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":250,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":481,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":543,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":542,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":798,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":803,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":505,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":57,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":248,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":466,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":259,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":322,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":83,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":281,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":533,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":772,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":164,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":426,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSimpleSerialization":432,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":671,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":492,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":277,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":197,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":797,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":528,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":529,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":240,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":757,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":521,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":223,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":724,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":826,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":670,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":712,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":813,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":379,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":180,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":469,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":153,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsSelfHashCode":828,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":452,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":327,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":462,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":357,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":377,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":656,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":224,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":593,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":626,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":499,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":558,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":241,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":851,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":371,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":59,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":235,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":703,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":817,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":295,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":561,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":613,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":785,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":340,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":578,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":171,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":586,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":98,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":560,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":901,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":169,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":758,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":446,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":601,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":382,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":588,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":415,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":29,"org.apache.commons.collections4.CollectionUtilsTest.isFull":392,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":479,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":203,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":636,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":615,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":863,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":846,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":143,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":762,"org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll":715,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":860,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":423,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":442,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":297,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":472,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":633,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":787,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":669,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":902,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":183,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":898,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":617,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":773,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":835,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":701,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":810,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":428,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":73,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":333,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":760,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":92,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":26,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":85,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":567,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":890,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":434,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":65,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":324,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":896,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":3,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":5,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":4,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":196,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":229,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":532,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsSelfHashCode":880,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":306,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":435,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":582,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":458,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":94,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":612,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":37,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":407,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":796,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":145,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":133,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":300,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":299,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":552,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":596,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":53,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":258,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":645,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":358,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":776,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":741,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":17,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":253,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":218,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":464,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":646,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":39,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":40,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":41,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":735,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":429,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":134,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":764,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":655,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":221,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":822,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":146,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":49,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":893,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":894,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":895,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":120,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":789,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":562,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":202,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":67,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":465,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":774,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":61,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":616,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":222,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":232,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":850,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":527,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":411,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":8,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":159,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":874,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":193,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":688,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":77,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":7,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":811,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":364,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":821,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":471,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":836,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":362,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":381,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":363,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":709,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":243,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":157,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":211,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":160,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":877,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":904,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":192,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":260,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":287,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":618,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":648,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":170,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":201},"transformations":[{"failures":[],"tindex":"edc0a3ee-13a3-11e5-b9b5-d5010a214fe7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:903","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[],"tindex":"edc2c6cf-13a3-11e5-b9b5-7f4d2c1f11aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:383","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.BitSet.size()) ; int++) {\n    if (java.util.BitSet.get(int)) {\n        return true;\n    } \n}"},"variableMap":{"set":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:109","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"edc2c6d0-13a3-11e5-b9b5-55a69ef0b1e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Closure<?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The closure array must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"edc2c6d1-13a3-11e5-b9b5-4940286864f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"rval":"newNode","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1287","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6],"tindex":"edc4e9b2-13a3-11e5-b9b5-d1cc447ea54a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1392","type":"CtReturnImpl","sourcecode":"return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false"},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:229","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.contains(java.lang.Object)) {\n    return java.util.Set<E>.remove(java.lang.Object);\n} "},"status":-1},{"failures":[7,8,9,10,11,12],"tindex":"edc4e9b3-13a3-11e5-b9b5-bd8b163dd41b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"end2","lengthInBits":"y","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"x","otherOffsetInBits":"i","otherLengthInBits":"end1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:199","type":"CtWhileImpl","sourcecode":"while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    int[][int] = ++int;\n    ++int;\n}"},"status":-1},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58],"tindex":"edc4e9b4-13a3-11e5-b9b5-4bab4dfac913","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:490","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(null, null)"},"variableMap":{"h":"found"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    return null;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } \n} "},"status":-1},{"failures":[],"tindex":"edc510c5-13a3-11e5-b9b5-1dd356cfbc87","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:177","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        int += org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int;\n    }\n}"},"variableMap":{"size":"i","buckets":"result","length":"i","cnt":"i","locks":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:438","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    java.lang.Object[][int++] = E;\n}"},"status":-2},{"failures":[59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154],"tindex":"edc510c6-13a3-11e5-b9b5-37a92a0f3a01","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:855","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"node","node":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"edc55ee7-13a3-11e5-b9b5-95f17dcd2ced","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n    throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n} "},"status":-2},{"failures":[],"tindex":"edc55ee8-13a3-11e5-b9b5-5b59f9f44fcf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:229","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"edc55ee9-13a3-11e5-b9b5-dba1b7155e12","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:516","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250],"tindex":"edc55eea-13a3-11e5-b9b5-034d4c3aa627","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:224","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"edc5ad0b-13a3-11e5-b9b5-b1cc2ee59502","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:162","type":"CtOperatorAssignmentImpl","sourcecode":"int += ~(int << 11)"},"status":0},{"failures":[61,63,70,73,74,76,77,78,79,80,81,99,100,102,104,111,119,120,121,122,123,124,125,126,127,129,132,133,143,146,147,150,151,152,153,154,251,252],"tindex":"edc5ad0c-13a3-11e5-b9b5-1f838657711b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:855","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"rval","node":"rval","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[],"tindex":"edc5ad0d-13a3-11e5-b9b5-715d8a94eaa7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"hashCode","proposedCapacity":"oldCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:638","type":"CtForImpl","sourcecode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n        do {\n            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n    } \n}"},"status":-2},{"failures":[],"tindex":"edc5d41e-13a3-11e5-b9b5-9dea7757bf78","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1594","type":"CtIfImpl","sourcecode":"if (java.util.Comparator<? super O> == null) {\n    throw new java.lang.IllegalArgumentException(\"The comparator must not be null\");\n} "},"status":-2},{"failures":[129,133],"tindex":"edc5d41f-13a3-11e5-b9b5-6352d415df05","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:239","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"Comparator ordering cannot be changed after the first comparison is performed\");\n} "},"variableMap":{"isLocked":"yWasLeftChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1112","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        if (boolean) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[253,254,255,256,257,258,259,260,173,174,261,175,176,177,262,263,178,264,179,265,266,180,181,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,193,192,194,195,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,196,197,353,198,199,200,354,355,201,356,202,357,358,203,204,359,360,361,362,363,364,365,366,205,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,217,382,383,384,385,386,387],"tindex":"edc7a8e0-13a3-11e5-b9b5-b12a470f4f3d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"status":-1},{"failures":[388,389,390,391],"tindex":"edc7a8e1-13a3-11e5-b9b5-19c688901862","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"variableMap":{"isLocked":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:749","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<T> != null) && (org.apache.commons.collections4.Predicate<? super T> != null)) {\n    for (final java.util.Iterator<T> java.util.Iterator<T> = java.lang.Iterable<T>.iterator() ; java.util.Iterator<T>.hasNext() ; ) {\n        if (!(org.apache.commons.collections4.Predicate<? super T>.evaluate(java.util.Iterator<T>.next()))) {\n            java.util.Iterator<T>.remove();\n            boolean = true;\n        } \n    }\n} "},"status":-1},{"failures":[129,133,146,147,150,151,152,153,154],"tindex":"edc7a8e2-13a3-11e5-b9b5-096cad572bbf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1125","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432],"tindex":"edc7a8e3-13a3-11e5-b9b5-d1001db7e2ce","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:92","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\");\n} "},"variableMap":{"canRemove":"full"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    int = boolean ? int : 0;\n} else {\n    int = (int) - (int);\n}"},"status":-1},{"failures":[],"tindex":"edc7a8e4-13a3-11e5-b9b5-6578c9ddf1e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:99","type":"CtIfImpl","sourcecode":"if (char != 0) {\n    boolean = false;\n} "},"status":0},{"failures":[433],"tindex":"edc7cff5-13a3-11e5-b9b5-3f6c69f97eba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:352","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>).size()) > 0) {\n    throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n} "},"variableMap":{"set":"collection","existingSet":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:86","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E>.size()) > 0) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E[] E[] = ((E[])(java.util.Collection<E>.toArray()));\n    java.util.Collection<E>.clear();\n    for (final E E : E[]) {\n        org.apache.commons.collections4.collection.TransformedCollection<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n} "},"status":-1},{"failures":[],"tindex":"edc7cff6-13a3-11e5-b9b5-45eab0ce1a3c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"numberOfNodesToCache"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:219","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    org.apache.commons.collections4.list.NodeCachingLinkedList<E>.addNodeToCache(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":0},{"failures":[63,61,73,74,76,77,78,80,81,104,102,119,120,122,123,124,126,127,129,132,133,146,152,153],"tindex":"edc7cff7-13a3-11e5-b9b5-8d28aec08d21","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:970","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"rval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:684","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"edc7cff8-13a3-11e5-b9b5-d354c5b9e9dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:506","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[434,435,436,437,438,439,440,441,442,443],"tindex":"edc7cff9-13a3-11e5-b9b5-c94ca9e94dce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:426","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        int += org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.hashCode();\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-1},{"failures":[],"tindex":"edc7cffa-13a3-11e5-b9b5-d5c230aeabca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:841","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"newNode","rightChild":"newNode","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1284","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue(), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[444],"tindex":"edc7f70b-13a3-11e5-b9b5-6115975c8aeb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.MapTransformer:51","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer()"},"status":-1},{"failures":[445],"tindex":"edc7f70c-13a3-11e5-b9b5-e1c858093eb3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1157","type":"CtOperatorAssignmentImpl","sourcecode":"boolean |= java.util.Collection<C>.add(C)"},"status":-1},{"failures":[],"tindex":"edc7f70d-13a3-11e5-b9b5-338c856fb23b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"end","removeIndex":"maxElements","currentIndex":"end"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:236","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"status":-2},{"failures":[],"tindex":"edc7f70e-13a3-11e5-b9b5-cbca18d5e28e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:223","type":"CtWhileImpl","sourcecode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-2},{"failures":[446,447,448,449,450,451,196,197,198,199,200,201,202,203,204,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,241,242,243,244,245,246,247,248,249],"tindex":"edc7f70f-13a3-11e5-b9b5-7925147ccdc0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[470,471,472,473,474],"tindex":"edc81d20-13a3-11e5-b9b5-c175a0560f10","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:237","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n    if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n        org.apache.commons.collections4.list.AbstractLinkedList<E>.removeNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n        return true;\n    } \n}"},"status":-1},{"failures":[406,412,413,429,432],"tindex":"edc81d21-13a3-11e5-b9b5-4513a71a73cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:137","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    E[][int] = ((E)(java.io.ObjectInputStream.readObject()));\n}"},"status":-1},{"failures":[],"tindex":"edc81d22-13a3-11e5-b9b5-f37c5deab263","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:215","type":"CtIfImpl","sourcecode":"if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n    int[][int] = (int[][(int + 1)]) - 1;\n} else {\n    int[][int] = int[][(int - 1)];\n}"},"status":-2},{"failures":[],"tindex":"edc81d23-13a3-11e5-b9b5-e5efc9e3d76a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:964","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"dataElement":"dataElement","deletedNode":"y","replacement":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[475,157,476,477,478,479,166,480,481,257,258,259,273,274,276,284,279,282,283,285,286,287,177,181,290,291,292,315,316,318,326,321,324,325,327,328,329,308,482,483,484,485,486,487,488,489,490,491,492,493,494,190,349,350,351,365,366,367,375,370,373,374,376,377,378,204,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,215,512,513,514,515,516,517,518,519,520,521,522,523,524,227,525,526,527,528,529,530,531,532,533,534,535,536,537,239,538,539,540,541,542,543,544,545,546,547,548,549,550,551,249],"tindex":"edc84434-13a3-11e5-b9b5-4dc4a29042e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[59,60,63,64,61,62,65,66,67,68,69,70,71,93,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,104,105,102,103,552,106,107,108,109,110,111,112,113,114,115,116,117,146,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154],"tindex":"edc84435-13a3-11e5-b9b5-f179afce2340","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:853","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","leftChild":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:569","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(((T)(java.lang.Object)), ((T)(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))));\n    if (int == 0) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        break;\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n}"},"status":-1},{"failures":[],"tindex":"edc84436-13a3-11e5-b9b5-5d75e805dabc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1069","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.list.TreeList.TreeListIterator<E>.(hasPrevious())) {\n    throw new java.util.NoSuchElementException(\"Already at start of list.\");\n} "},"variableMap":{"this":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:380","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E);\n    final int int = org.apache.commons.collections4.Bag<?>.getCount(E);\n    if ((1 <= int) && (int <= int)) {\n        org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n    } else {\n        org.apache.commons.collections4.Bag<E>.add(E, int);\n    }\n}"},"status":-2},{"failures":[],"tindex":"edc84437-13a3-11e5-b9b5-0bb976afd75d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1163","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>.int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"parent":"this","modCount":"newCapacity","expectedModCount":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:642","type":"CtDoImpl","sourcecode":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null )"},"status":-2},{"failures":[],"tindex":"edc84438-13a3-11e5-b9b5-95e3846ddd2f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:467","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"status":-2},{"failures":[553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670],"tindex":"edc84439-13a3-11e5-b9b5-e9c389663dc7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:275","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.add(java.util.Iterator<? extends E>.next());\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[],"tindex":"edc8443a-13a3-11e5-b9b5-330f24d5ae39","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"bitIndex","newCapacity":"bitIndex","proposedCapacity":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:231","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"edc86b4b-13a3-11e5-b9b5-71f2043ac839","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"status":-2},{"failures":[671,609,629,642],"tindex":"edca671c-13a3-11e5-b9b5-1d70dd49961b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:173","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:128","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[129,133,147,151],"tindex":"edca671d-13a3-11e5-b9b5-dfe793afd0a8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1182","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"edca671e-13a3-11e5-b9b5-87eaa575967d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"from":"replacement","to":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:974","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"edca671f-13a3-11e5-b9b5-4b207350ba51","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:263","type":"CtWhileImpl","sourcecode":"while ((int < int) || (int < int)) {\n    if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n        ++int;\n    } else {\n        if ((int - int) > (int - int)) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        } else {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        }\n    }\n}"},"variableMap":{"start1":"end1","end2":"end2","equator":"equator","i":"start2","end1":"end1","j":"end2","start2":"start2","sequence1":"sequence2","script":"script","sequence2":"sequence2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:257","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.sequence.SequencesComparator.Snake == null) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) {\n    int int = int;\n    int int = int;\n    while ((int < int) || (int < int)) {\n        if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n            ++int;\n        } else {\n            if ((int - int) > (int - int)) {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            } else {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            }\n        }\n    }\n} else {\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(int, org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), org.apache.commons.collections4.sequence.EditScript<T>);\n    for (int int = org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart() ; int < (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) ; ++int) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    }\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), int, org.apache.commons.collections4.sequence.EditScript<T>);\n}"},"status":-2},{"failures":[],"tindex":"edca6720-13a3-11e5-b9b5-7504942f917a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"flag":"result","removed":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:131","type":"CtAssignmentImpl","sourcecode":"boolean = boolean || boolean"},"status":0},{"failures":[129,133],"tindex":"edca6721-13a3-11e5-b9b5-072389605db7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:991","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"dataElement":"dataElement","deletedNode":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1150","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[672],"tindex":"edca8e32-13a3-11e5-b9b5-418bad7d9bcf","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.GrowthList:184","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.<E>nCopies(((int - int) + 1), null))"},"variableMap":{"size":"index","this":"this","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.GrowthList:124","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.<E>nCopies((int - int), null))"},"status":-1},{"failures":[],"tindex":"edca8e33-13a3-11e5-b9b5-9f3875aa4cc7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:333","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:129","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.contains(java.lang.Object)) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"edca8e34-13a3-11e5-b9b5-c7b14eb5e103","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:345","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator()"},"status":-2},{"failures":[73,74,76,77,78,79,81,119,120,121,122,123,124,125,127,129,132,133,251],"tindex":"edca8e35-13a3-11e5-b9b5-d740efa44882","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2016","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-1},{"failures":[673,674,675,676,677,678,679,680,681,682,683,684],"tindex":"edca8e36-13a3-11e5-b9b5-df43e39a12b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:315","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.ArrayList<E>.set(int, java.util.Iterator<? extends E>.next());\n    java.util.BitSet.set(int);\n    return true;\n} "},"status":-1},{"failures":[7,8,9,10,11,12],"tindex":"edca8e37-13a3-11e5-b9b5-855d6423def7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"start1","index":"start1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:257","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.sequence.SequencesComparator.Snake == null) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) {\n    int int = int;\n    int int = int;\n    while ((int < int) || (int < int)) {\n        if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n            ++int;\n        } else {\n            if ((int - int) > (int - int)) {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            } else {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            }\n        }\n    }\n} else {\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(int, org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), org.apache.commons.collections4.sequence.EditScript<T>);\n    for (int int = org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart() ; int < (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) ; ++int) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    }\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), int, org.apache.commons.collections4.sequence.EditScript<T>);\n}"},"status":-1},{"failures":[685],"tindex":"edca8e38-13a3-11e5-b9b5-e37205844b01","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2000","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Map.Entry.setValue is not supported\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:129","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\")"},"status":-1},{"failures":[],"tindex":"edca8e39-13a3-11e5-b9b5-0d1f176e605a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:489","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.decrementSize()"},"variableMap":{"this":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:235","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.BidiMap<V, K>) == null) {\n    org.apache.commons.collections4.BidiMap<V, K> = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.createBidiMap(java.util.Map<V, K>, java.util.Map<K, V>, this);\n} "},"status":-2},{"failures":[686,687],"tindex":"edcab54a-13a3-11e5-b9b5-f3da021d6c0b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:281","type":"CtForEachImpl","sourcecode":"for (final O O : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>) {\n    org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, ((org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.max(O)) - (org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.min(O))));\n}"},"variableMap":{"helper":"helper"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:229","type":"CtForEachImpl","sourcecode":"for (final O O : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>) {\n    org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.max(O));\n}"},"status":-2},{"failures":[],"tindex":"edcab54b-13a3-11e5-b9b5-bd9b0d92f97b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtIfImpl","sourcecode":"if ((java.util.Comparator<? super E>) == null) {\n    throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n} "},"status":-2},{"failures":[],"tindex":"edcab54c-13a3-11e5-b9b5-ff992783ace5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:248","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[688,689,690,691,692,693,694,695,696,697,698,1,699,700,701,702,703,704,705,706,707,708,709,710,711],"tindex":"edcab54d-13a3-11e5-b9b5-31cc913cec14","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"size","newCapacity":"size","proposedCapacity":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:97","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    int += java.util.Set<E>.size();\n}"},"status":-1},{"failures":[],"tindex":"edcadc5e-13a3-11e5-b9b5-ddea3fa0737b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:97","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"variableMap":{"exhausted":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:252","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n} "},"status":0},{"failures":[],"tindex":"edcadc5f-13a3-11e5-b9b5-2305ada99275","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:584","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:251","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"edcadc60-13a3-11e5-b9b5-31a043605b53","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"edcadc61-13a3-11e5-b9b5-618888ba3a3b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"length","currentIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:476","type":"CtWhileImpl","sourcecode":"while (int < (T[].int)) {\n    T[][int++] = null;\n}"},"status":-2},{"failures":[712,713,206,714],"tindex":"edcb0372-13a3-11e5-b9b5-a716c6782d06","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"edcb0373-13a3-11e5-b9b5-0176ace6c940","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:251","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.set.CompositeSet<java.util.Map.Entry<K, V>>.addComposited(java.util.Map<K, V>[][int].entrySet());\n}"},"status":-2},{"failures":[],"tindex":"edcb0374-13a3-11e5-b9b5-8bd8edc30a75","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:278","type":"CtIfImpl","sourcecode":"if (int != 0) {\n    if ((java.util.BitSet.get(int)) == true) {\n        if (int > 0) {\n            int = -1;\n        } else {\n            int = 1;\n        }\n    } \n    return int;\n} "},"variableMap":{"comparatorIndex":"i","orderingBits":"value","retval":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:135","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    return int;\n} "},"status":-2},{"failures":[715],"tindex":"edcb0375-13a3-11e5-b9b5-e57c2142b5d6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:847","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<C> != null) && (org.apache.commons.collections4.Predicate<? super C> != null)) {\n    for (final C C : java.lang.Iterable<C>) {\n        if (org.apache.commons.collections4.Predicate<? super C>.evaluate(C)) {\n            return true;\n        } \n    }\n} "},"variableMap":{"input":"input","predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:876","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<C> != null) {\n    for (final C C : java.lang.Iterable<C>) {\n        if (!(org.apache.commons.collections4.Predicate<? super C>.evaluate(C))) {\n            return false;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"edcb2a86-13a3-11e5-b9b5-5178727e7627","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:526","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"currentNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1030","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":-2},{"failures":[],"tindex":"edcb2a87-13a3-11e5-b9b5-eb13e1e4ef15","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:161","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.nextIndex();\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:194","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.previousIndex();\n} "},"status":-2},{"failures":[703,704,705,706,707,708,709,710,711,716,717,718,719,720,721,722,723],"tindex":"edcb2a88-13a3-11e5-b9b5-1b1ec65a0e07","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:117","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E>.isEmpty()) == false) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"edcb2a89-13a3-11e5-b9b5-43d87758354b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:320","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"variableMap":{"mapSize":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":"edcb2a8a-13a3-11e5-b9b5-97ecd03b773e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:288","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.queue.CircularFifoQueue<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"queue is empty\");\n} "},"status":-2},{"failures":[],"tindex":"edcb78ab-13a3-11e5-b9b5-932417e1b837","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:223","type":"CtWhileImpl","sourcecode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-2},{"failures":[],"tindex":"edcb9fbc-13a3-11e5-b9b5-e7d81bedaa83","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:964","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[724,688,689,690,691,692,693,694,695,725,696,697,698,1,726,699,700,727,728,701,729,702,703,704,730,705,706,731,707,708,732,709,710,711,733,734,735],"tindex":"edcb9fbd-13a3-11e5-b9b5-8970535a1bbb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"size","lengthInBits":"size","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:97","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    int += java.util.Set<E>.size();\n}"},"status":-1},{"failures":[736,737,738,739,740,741,472,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,471,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,473,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,474,874,875,876,877,878,879,880,881,882],"tindex":"edcb9fbe-13a3-11e5-b9b5-050c6b597197","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2319","type":"CtIfImpl","sourcecode":"if ((int) != 1) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"hit":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"status":-1},{"failures":[],"tindex":"edcb9fbf-13a3-11e5-b9b5-a591bd283556","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:458","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} "},"variableMap":{"entry":"entry","hashCode":"hashCode","this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:457","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[673,674,675,676,677,678,679,680,681,682,683,684],"tindex":"edcb9fc0-13a3-11e5-b9b5-67b6b7166a01","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:356","type":"CtIfImpl","sourcecode":"if ((java.util.BitSet.get(int)) == false) {\n    org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n} "},"status":-1},{"failures":[339,883,884,538],"tindex":"edcb9fc1-13a3-11e5-b9b5-c125bc2194d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"variableMap":{"lastItemIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:245","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"edcb9fc2-13a3-11e5-b9b5-9f40edc15a04","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:140","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.comparators.FixedOrderComparator<T>.isLocked()) {\n    throw new java.lang.UnsupportedOperationException(\"Cannot modify a FixedOrderComparator after a comparison\");\n} "},"status":-2},{"failures":[],"tindex":"edcbc6d3-13a3-11e5-b9b5-4f230dcd09c0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:127","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"edcbc6d4-13a3-11e5-b9b5-6b171e2ec3ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.IfClosure:119","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    org.apache.commons.collections4.Closure<? super E>.execute(E);\n} else {\n    org.apache.commons.collections4.Closure<? super E>.execute(E);\n}"},"status":-2},{"failures":[],"tindex":"edcbc6d5-13a3-11e5-b9b5-05d244bf473f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"variableMap":{"node":"node","this":"this","rval":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:520","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[],"tindex":"edcbc6d6-13a3-11e5-b9b5-c9863bd54d9b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:636","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == java.lang.Object) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    org.apache.commons.collections4.map.StaticBucketMap.this.remove(java.lang.Object);\n    return true;\n} "},"variableMap":{"obj":"object","k":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:127","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"edcbc6d7-13a3-11e5-b9b5-df6ecc2244c0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:129","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V> = this;\n} "},"variableMap":{"inverse":"reverseMap","this":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:169","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(K)) {\n    java.util.Map<V, K>.remove(java.util.Map<K, V>.get(K));\n} "},"status":-2},{"failures":[],"tindex":"edcbc6d8-13a3-11e5-b9b5-51fd1ae63874","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.ListOrderedSet:183","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().clear()"},"variableMap":{"this":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:344","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : org.apache.commons.collections4.set.CompositeSet<E>.getSets()) {\n    final java.util.Collection<E> java.util.Collection<E> = org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>);\n    if ((java.util.Collection<E>.size()) > 0) {\n        if ((this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n            throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n        } \n        org.apache.commons.collections4.set.CompositeSet<E>.getMutator().resolveCollision(this, java.util.Set<E>, java.util.Set<E>, java.util.Collection<E>);\n        if ((org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>).size()) > 0) {\n            throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n        } \n    } \n}"},"status":-2},{"failures":[],"tindex":"edcbc6d9-13a3-11e5-b9b5-23b0920e8dff","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"lastItemIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"status":0},{"failures":[885],"tindex":"edcbc6da-13a3-11e5-b9b5-a356f2507f0e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:334","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> : java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>>.entrySet()) {\n    org.apache.commons.collections4.Predicate<I>[][int] = org.apache.commons.collections4.functors.EqualPredicate.<I>equalPredicate(java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>>.getKey());\n    org.apache.commons.collections4.Transformer<? super I, ? extends O>[][int++] = java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>>.getValue();\n}"},"status":-1},{"failures":[],"tindex":"edcbc6db-13a3-11e5-b9b5-e7f8bfc60da8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:113","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    return java.lang.Integer.intValue();\n} "},"variableMap":{"count":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return 0;\n} "},"status":-2},{"failures":[446,447,448,449,450,451,196,197,198,199,200,201,202,203,204,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,886,887,888,889,890,891,892,241,242,243,244,245,246,247,248,249,21,22,24,25,26,29,31,34,35],"tindex":"edcbc6dc-13a3-11e5-b9b5-9b24827e8c75","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[893,894,895,896,897,898,899,900,901,902,903],"tindex":"edcbc6dd-13a3-11e5-b9b5-cd34d2102eef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:721","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n} "},"variableMap":{"listIterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:187","type":"CtWhileImpl","sourcecode":"while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n    E E = java.util.Iterator<? extends E>.next();\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n        E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n    } \n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n}"},"status":-1},{"failures":[713,206,714],"tindex":"edcbc6de-13a3-11e5-b9b5-afd2176a1b6e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n    return false;\n} "},"variableMap":{"obj":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:290","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[904,905],"tindex":"edcbedef-13a3-11e5-b9b5-b1786abf7145","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:280","type":"CtInvocationImpl","sourcecode":"java.util.Set<E>.clear()"},"variableMap":{"set":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.TransformedSet:78","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Transformer<? super E, ? extends E> != null) && (java.util.Set<E> != null)) && ((java.util.Set<E>.size()) > 0)) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E[] E[] = ((E[])(java.util.Set<E>.toArray()));\n    java.util.Set<E>.clear();\n    for (final E E : E[]) {\n        org.apache.commons.collections4.set.TransformedSet<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":98,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}