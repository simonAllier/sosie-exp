{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":465,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":560,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":139,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":378,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":421,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":25,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":199,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":473,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":505,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":115,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":3,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":798,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":75,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":799,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":209,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesClearChangesMap":80,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":354,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":487,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":707,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":747,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":406,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":362,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":363,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":640,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":626,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":708,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":9,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":449,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":510,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":545,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":222,"org.apache.commons.collections4.map.CompositeMapTest.testFullMapCompatibility":48,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":154,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":21,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":561,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":634,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":575,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":808,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":583,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":780,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":109,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":205,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":855,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":146,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":70,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":885,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":454,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":143,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":606,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":156,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":400,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":621,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":649,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":388,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":440,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":750,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":425,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":705,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":234,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":627,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveAll":101,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":246,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":828,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":711,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":870,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":873,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":795,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":748,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":315,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":361,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":549,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":520,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":521,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":687,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":522,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":26,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":407,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":60,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":658,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":810,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":225,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":827,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":633,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":427,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":51,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":822,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":65,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":232,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":847,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":466,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":867,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":264,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":478,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":683,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":892,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":132,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":287,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":584,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":773,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":424,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":760,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClear":295,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":736,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":743,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":737,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":738,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":280,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":218,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":417,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":386,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":1,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":778,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":779,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":777,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":455,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":721,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":755,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":307,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiInverse":293,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":670,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":931,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":805,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":308,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":263,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":578,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":580,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":420,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":439,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":480,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":689,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":32,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":114,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":558,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":877,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":409,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":896,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":569,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":888,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":499,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":153,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":472,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":821,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiInverse":303,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":481,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":629,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":909,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":814,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":0,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":642,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":732,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":603,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesClearChangesMap":118,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":915,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":562,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":563,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":564,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":866,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveChangesMap":81,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":475,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":57,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":586,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":881,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":436,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":79,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":150,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":632,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":336,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":587,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":543,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":253,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":645,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":19,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":96,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":787,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":905,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":551,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":834,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":920,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":376,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":317,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiClear":305,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":374,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":647,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":840,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":529,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":111,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":85,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":138,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":422,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":666,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":865,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":93,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":839,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":713,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":463,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":245,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":298,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":772,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":652,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":370,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":597,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":734,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":464,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":221,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":301,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":484,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":665,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":819,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":664,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":663,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":783,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":838,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":217,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":8,"org.apache.commons.collections4.map.LRUMapTest.testReset":628,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":852,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":697,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":751,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":233,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":594,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":488,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":693,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":214,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":930,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastValues":106,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":573,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":435,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":590,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":756,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":678,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":413,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":311,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":448,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":637,"org.apache.commons.collections4.map.LinkedMapTest.testReset":582,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":415,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":55,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":483,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":625,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":650,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":770,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":835,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":669,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":907,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":548,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":897,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":746,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":40,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":15,"org.apache.commons.collections4.list.TreeListTest.testCollectionClear":901,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":269,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":477,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsSelfHashCode":912,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":684,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":668,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":360,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":492,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":925,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":56,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":848,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":372,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":187,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":385,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":359,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":688,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":899,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":712,"org.apache.commons.collections4.map.CompositeMapTest.testMakeMap":46,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":927,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":312,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":883,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":216,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":830,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":617,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":159,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":170,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":482,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":306,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":527,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":725,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":129,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":692,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":195,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":90,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":771,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":335,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":382,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":803,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":504,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":702,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":172,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":134,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":703,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":20,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":704,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":226,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":277,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":559,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":863,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":166,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":726,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRetainAll":64,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":720,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":624,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":125,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":325,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":733,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":379,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":496,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":410,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":163,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":78,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":167,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiPut":266,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":329,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":58,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":211,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":284,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":368,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":348,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":342,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":886,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":197,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":265,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":904,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":611,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":610,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":612,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":500,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":782,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":890,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":589,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":530,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":544,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":592,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":344,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":579,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":296,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveAll":120,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":158,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":231,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":910,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":326,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":891,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":623,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":622,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":84,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":198,"org.apache.commons.collections4.list.TreeListTest.testBug35258":879,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":457,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":903,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":911,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":537,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":533,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":356,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":557,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":403,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":699,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":341,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":570,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":700,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":701,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":730,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":540,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":539,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":538,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":641,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":243,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":752,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":103,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":135,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":515,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":638,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":201,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":815,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":351,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":816,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":576,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":802,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":141,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":511,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":219,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":871,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":552,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":836,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":250,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":447,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":248,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":602,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":754,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":766,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":127,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":228,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":696,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":832,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":411,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":438,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":50,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":321,"org.apache.commons.collections4.MapUtilsTest.testPutAll_Map_array":461,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":223,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":460,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":635,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":922,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":286,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":177,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":919,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":124,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":242,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":241,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":240,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":850,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":401,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":864,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":144,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":691,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":283,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":208,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":116,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":824,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":526,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":95,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":168,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesClearChangesMap":99,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":591,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":310,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":428,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":452,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":282,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":485,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":340,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":285,"org.apache.commons.collections4.map.LRUMapTest.testLRU":200,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":894,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":849,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":17,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":288,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":512,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":789,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":275,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":190,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":328,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":123,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":188,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":659,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsContract":913,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":714,"org.apache.commons.collections4.map.LinkedMapTest.testInitialCapacityZero":860,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":390,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":503,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":829,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":657,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":757,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRetainAll":83,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":656,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":136,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":718,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":735,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKeyInverse":292,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":577,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":180,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":182,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":769,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":528,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":160,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":535,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":667,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":616,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":76,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":648,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":742,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":397,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":408,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":523,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":12,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":213,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":785,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":490,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":399,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":568,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":43,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":758,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":900,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":709,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":87,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":845,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":377,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":595,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":599,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":765,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":601,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":346,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":350,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":189,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":412,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":77,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":486,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":173,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":128,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":553,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":271,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":695,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiKeySetValuesOrder":104,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":914,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":534,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":685,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiInverse":268,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":92,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":338,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":882,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":289,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":698,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":811,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":498,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRetainAll":121,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":369,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":262,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":100,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":347,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":745,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":825,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":929,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":767,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":276,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":672,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":508,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":179,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":256,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":673,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":244,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":431,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":851,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":53,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":781,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":753,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":451,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":598,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":34,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":186,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":257,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":14,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":416,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":279,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":402,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":364,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":813,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":49,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":501,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":71,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":252,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":739,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":27,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":600,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":97,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":790,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":833,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastValues":68,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":741,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":740,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":194,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":52,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":178,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveChangesMap":119,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":272,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testSerializeDeserializeThenCompare":458,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":554,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":183,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":532,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":608,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":636,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":404,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":844,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":39,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":113,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":236,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":229,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":857,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":432,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":555,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":157,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":345,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":826,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":928,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":371,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":392,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":130,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":131,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":546,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":908,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiKeySetValuesOrder":66,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":126,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":581,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":323,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":547,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":820,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":249,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":719,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":456,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":494,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":405,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":319,"org.apache.commons.collections4.list.TreeListTest.testRemove":875,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":94,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":108,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":775,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":774,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":274,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":831,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":902,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":776,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":817,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":220,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":567,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":566,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":604,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":565,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":513,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":731,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":339,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":906,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":716,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":322,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":588,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":469,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":468,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveAll":151,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":44,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRetainAll":102,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":675,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":921,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":619,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":54,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":91,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":509,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":437,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":609,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":161,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":639,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":686,"org.apache.commons.collections4.ListUtilsTest.testSubtract":807,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":572,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":846,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":524,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":917,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":309,"org.apache.commons.collections4.CollectionUtilsTest.collateException1":24,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":620,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":175,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":334,"org.apache.commons.collections4.list.TreeListTest.testListEquals":884,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":30,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":479,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":230,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testInitialCapacityZero":861,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":353,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":717,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":872,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":28,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":29,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":853,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":869,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":13,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":62,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":926,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":61,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":889,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":536,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiPut":291,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":148,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":299,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":394,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":89,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":800,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":674,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":196,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":507,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":110,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiModifyEntrySet":294,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":474,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":349,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":332,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":212,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":491,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":254,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":67,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":764,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":327,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":389,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":862,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":618,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":33,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":878,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesClearChangesMap":149,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":677,"org.apache.commons.collections4.map.HashedMapTest.testInitialCapacityZero":859,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":23,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":646,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":690,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":880,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":804,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":2,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":506,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":204,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":207,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":261,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":384,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":679,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":854,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKeyInverse":302,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":497,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":333,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":396,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":381,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":615,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":192,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":607,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":614,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":613,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveAll":82,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":383,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":571,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":210,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":605,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":681,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":784,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":744,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":710,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":728,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":88,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":453,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":324,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":304,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":898,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":181,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":856,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":531,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":706,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":644,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":133,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":112,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":444,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":445,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":446,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":313,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":749,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":724,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":6,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":395,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":801,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEmptyIterator":489,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":73,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":476,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":868,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":184,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":495,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":694,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":788,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":653,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":837,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":676,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":273,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":727,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":542,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":514,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":105,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":259,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":593,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":671,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":841,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":155,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":429,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":918,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":10,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":895,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":117,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":290,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClear":270,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":387,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":887,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":759,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":281,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":373,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":147,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":193,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":260,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":812,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":874,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":72,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":191,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":556,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":169,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":314,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":430,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":818,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":227,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":185,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":525,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":655,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":916,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":337,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":585,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":318,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":470,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":343,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":358,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":761,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":142,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":823,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKeyInverse":267,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":722,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":876,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":502,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":107,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":806,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":365,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":330,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":38,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":45,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":255,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":297,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":316,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":729,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":224,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":796,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":797,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":300,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":843,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":162,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":122,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":786,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":35,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":37,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":36,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":924,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":643,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":419,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":450,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":418,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":768,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveAll":63,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":235,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":380,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":467,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":763,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":145,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":762,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":462,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":47,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":251,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":680,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":367,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":574,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":654,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":355,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":215,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":442,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":443,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":203,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":441,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":516,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":206,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":237,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":238,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":22,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":239,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":320,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":434,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":923,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":723,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryNull":858,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":393,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":471,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":247,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":517,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":518,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":140,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":375,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":202,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRetainAll":152,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":366,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiClear":278,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":414,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":426,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":165,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":164,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":423,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":398,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":433,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":791,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":5,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":792,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":174,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":352,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":31,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":630,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":7,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":59,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":4,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":391,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":459,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":662,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":357,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":809,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":98,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":86,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":258,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":331,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":541,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":660,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":661,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":793,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":18,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":794,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":842,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":74,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":519,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":596,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":171,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":550,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":893,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":176,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":631,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":137,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":682,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":715,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":493,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":651},"transformations":[{"failures":[],"tindex":"463372e4-13a0-11e5-80cf-9379d42c8082","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Collection<?>) {\n    return ((java.util.Collection<?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"length":"hash","object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:226","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            return true;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"463399f5-13a0-11e5-80cf-bd2f5420c9c7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:206","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int)"},"variableMap":{"vUp":"vDown","start1":"start2","delta":"delta","end2":"end1","this":"this","i":"d","end1":"offset","k":"start1","start2":"start2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:212","type":"CtForImpl","sourcecode":"for (int int = int - int ; int <= (int + int) ; int += 2) {\n    final int int = (int + int) - int;\n    if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n        int[][int] = (int[][(int + 1)]) - 1;\n    } else {\n        int[][int] = int[][(int - 1)];\n    }\n    int int = (int[][int]) - 1;\n    int int = ((int - int) + int) - int;\n    while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = int--;\n        int--;\n    }\n    if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n        if ((int[][int]) <= (int[][(int + int)])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"4633c106-13a0-11e5-80cf-139c20f8e4cb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1322","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if (java.lang.Object == null) {\n        if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n            return false;\n        } \n    } else {\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n}"},"variableMap":{"it":"it","map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1321","type":"CtTryImpl","sourcecode":"try {\n    while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if (java.lang.Object == null) {\n            if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n                return false;\n            } \n        } else {\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    }\n} catch (final java.lang.ClassCastException ignored) {\n    return false;\n} catch (final java.lang.NullPointerException ignored) {\n    return false;\n}"},"status":0},{"failures":[],"tindex":"4633c107-13a0-11e5-80cf-75b5344e6c2b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:825","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","rightChild":"rightChild","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:827","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"46371c68-13a0-11e5-80cf-615cd7152b6b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:94","type":"CtIfImpl","sourcecode":"if (char != char) {\n    final int int = char ^ char;\n    return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n} "},"status":-2},{"failures":[],"tindex":"46371c69-13a0-11e5-80cf-8f21308b0b87","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:160","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"46371c6a-13a0-11e5-80cf-91202d898f08","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:920","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry())"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:889","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        return null;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n}"},"status":-2},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"46371c6b-13a0-11e5-80cf-6f0651831ff1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    return false;\n} "},"variableMap":{"mut":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Set) {\n    final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(java.lang.Object));\n    return ((java.util.Set<?>.size()) == org.apache.commons.collections4.set.CompositeSet<E>.(size())) && (java.util.Set<?>.containsAll(this));\n} "},"status":-1},{"failures":[],"tindex":"46371c6c-13a0-11e5-80cf-9352c112c96c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:299","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(E))) {\n    org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().add(E);\n    java.util.List<E>.add(int, E);\n} "},"status":-2},{"failures":[],"tindex":"4637437d-13a0-11e5-80cf-535da5527872","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:432","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<K>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:467","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator();\n} "},"status":-2},{"failures":[6,23,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"4637437e-13a0-11e5-80cf-a9a0dc779a35","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1473","type":"CtTryImpl","sourcecode":"try {\n    final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(java.util.Collection<?>);\n    return org.apache.commons.collections4.BoundedCollection<?>.isFull();\n} catch (final java.lang.IllegalArgumentException ex) {\n    return false;\n}"},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:246","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (org.apache.commons.collections4.set.CompositeSet<E>.(contains(java.lang.Object)) == false) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"4637437f-13a0-11e5-80cf-4f5224d21ed0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1142","type":"CtIfImpl","sourcecode":"if ((int >= 0) && (int < int)) {\n    return null;\n} "},"variableMap":{"lengthInBits":"bitIndex","bitIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:766","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"46374380-13a0-11e5-80cf-f1a8d15d8906","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:398","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<java.util.Map.Entry<K, V>>emptyOrderedIterator();\n} "},"status":-2},{"failures":[24],"tindex":"46374381-13a0-11e5-80cf-a55966465833","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1467","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == null) {\n    throw new java.lang.NullPointerException(\"The collection must not be null\");\n} "},"variableMap":{"coll":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<? extends O> == null) || (java.lang.Iterable<? extends O> == null)) {\n    throw new java.lang.IllegalArgumentException(\"The collections must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"46374382-13a0-11e5-80cf-255ade405b4c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:762","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"node":"predecessor","right":"predecessor","child":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:601","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"46376a93-13a0-11e5-80cf-758db8d2be38","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:230","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.queue.CircularFifoQueue<E>.isAtFullCapacity()) {\n    org.apache.commons.collections4.queue.CircularFifoQueue<E>.remove();\n} "},"status":-2},{"failures":[],"tindex":"46376a94-13a0-11e5-80cf-cb9638cfcfae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:512","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"newNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE","newNode":"newNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1287","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"46376a95-13a0-11e5-80cf-d93aca4d3f9b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n    throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n} "},"status":-2},{"failures":[],"tindex":"463791a6-13a0-11e5-80cf-1d0118cec88b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1402","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) {\n    case KEY :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    case VALUE :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    default :\n        throw new java.lang.IllegalArgumentException();\n}"},"status":-2},{"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,10,45,46,11,47,12,48,13,14,49,15,50,16,51,17,18,19,20,52,53],"tindex":"463791a7-13a0-11e5-80cf-a1e017b8c9a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:122","type":"CtAssignmentImpl","sourcecode":"this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V> = org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>"},"status":-1},{"failures":[],"tindex":"463791a8-13a0-11e5-80cf-4148a936359b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:438","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(java.lang.Object);\n} "},"status":0},{"failures":[54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153],"tindex":"463791a9-13a0-11e5-80cf-b354f78cfd0d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:276","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.Values<V>(this);\n} "},"status":-1},{"failures":[],"tindex":"4638a31a-13a0-11e5-80cf-e55b9602dde5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:216","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"4638a31b-13a0-11e5-80cf-b9ac7e96eef6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:383","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.BitSet.size()) ; int++) {\n    if (java.util.BitSet.get(int)) {\n        return true;\n    } \n}"},"variableMap":{"set":"valueSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:315","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.ArrayList<E>.set(int, java.util.Iterator<? extends E>.next());\n    java.util.BitSet.set(int);\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"4638a31c-13a0-11e5-80cf-1511b817848a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtIfImpl","sourcecode":"if (java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and closure map must not be null\");\n} "},"status":-2},{"failures":[154,155,156,157,158,159,160,161,162,163,164,165],"tindex":"4638a31d-13a0-11e5-80cf-4fd036d186af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:265","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"4638a31e-13a0-11e5-80cf-39072e1bbe15","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:265","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.Object>.size()) == 0) {\n    org.apache.commons.collections4.list.SetUniqueList<E>.clear();\n} else {\n    for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.SetUniqueList<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n        if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n        } \n    }\n}"},"status":-2},{"failures":[166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208],"tindex":"4638a31f-13a0-11e5-80cf-510261732dfa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:280","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n    return V;\n} "},"status":-1},{"failures":[209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254],"tindex":"4638a320-13a0-11e5-80cf-99e894cad064","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:158","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int))) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n        final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n        return null;\n    } else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        }\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n        } \n    } \n} "},"status":-1},{"failures":[255,256,55,56,57,59,58,60,61,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,67,69,70,71,72,74,73,75,76,77,78,79,274,275,276,277,278,279,280,281,86,88,89,90,91,93,92,94,95,96,97,98,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,105,107,108,109,110,112,111,113,114,115,116,117,299,300,124,125,126,128,127,129,130,301,302,303,304,305,306,307,308,136,138,139,140,141,143,142,144,145,146,147,148],"tindex":"4638ca31-13a0-11e5-80cf-d398e084e13b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:104","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.putAll(java.util.Map<K, V>)"},"variableMap":{"this":"this","map":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:235","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.BidiMap<V, K>) == null) {\n    org.apache.commons.collections4.BidiMap<V, K> = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.createBidiMap(java.util.Map<V, K>, java.util.Map<K, V>, this);\n} "},"status":-1},{"failures":[309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325],"tindex":"4638ca32-13a0-11e5-80cf-c3cff9fe89a0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-1},{"failures":[],"tindex":"4638ca33-13a0-11e5-80cf-0f0359e9cbb8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1008","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n    java.io.PrintStream.print(\"(this Map)\");\n} else {\n    java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n}"},"status":-2},{"failures":[],"tindex":"4638ca34-13a0-11e5-80cf-f7308b5eff64","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:108","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.PermutationIterator<E>.(hasNext())) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:146","type":"CtIfImpl","sourcecode":"if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"4638ca35-13a0-11e5-80cf-fd400c4934ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:225","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsValue(java.lang.Object)) {\n    return true;\n} "},"variableMap":{"composite":"key2","i":"hashCode","value":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:158","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[154,155,156,157,158,159,160,161,162,163,164,165],"tindex":"4638ca36-13a0-11e5-80cf-ef6d0958aaab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super C> == null) {\n    return false;\n} "},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:263","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasPrevious()) {\n    final E E = java.util.ListIterator<? extends E>.previous();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-1},{"failures":[326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,309,363,310,312,313,314,318,319,320,321,324,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395],"tindex":"4638f147-13a0-11e5-80cf-bfaa87169944","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:562","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[],"tindex":"4638f148-13a0-11e5-80cf-7fca64c384b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.EditScript:106","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.sequence.EditCommand<T> org.apache.commons.collections4.sequence.EditCommand<T> : java.util.List<org.apache.commons.collections4.sequence.EditCommand<T>>) {\n    org.apache.commons.collections4.sequence.EditCommand<T>.accept(org.apache.commons.collections4.sequence.CommandVisitor<T>);\n}"},"status":-2},{"failures":[396,397,398,399,400,401,402,403,404,405,39],"tindex":"4638f149-13a0-11e5-80cf-9d726fe8a2da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:133","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    if (java.util.Collection<E>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"4638f14a-13a0-11e5-80cf-93eb435c83aa","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1730","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inRange(org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.castKey(java.lang.Object)))) {\n    return null;\n} "},"variableMap":{"this":"map","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.DefaultedMap:202","type":"CtIfImpl","sourcecode":"if ((java.util.Map<K, V>.containsKey(java.lang.Object)) == false) {\n    return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(java.lang.Object)));\n} "},"status":-2},{"failures":[406],"tindex":"4638f14b-13a0-11e5-80cf-278085935f1e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtIfImpl","sourcecode":"if (((java.util.Collection<?> == null) || (java.util.Collection<?> == null)) || ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size()))) {\n    return false;\n} "},"variableMap":{"list1":"coll1","list2":"coll1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) < (java.util.Collection<?>.size())) {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n} else {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"4638f14c-13a0-11e5-80cf-0d3998e36aae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:218","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"variableMap":{"next":"firstCachedNode","header":"firstCachedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:168","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":0},{"failures":[0,1,2,3,4,5],"tindex":"4638f14d-13a0-11e5-80cf-4dcaa5224c0e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"end1","index":"start1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:257","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.sequence.SequencesComparator.Snake == null) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) {\n    int int = int;\n    int int = int;\n    while ((int < int) || (int < int)) {\n        if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n            ++int;\n        } else {\n            if ((int - int) > (int - int)) {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            } else {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            }\n        }\n    }\n} else {\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(int, org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), org.apache.commons.collections4.sequence.EditScript<T>);\n    for (int int = org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart() ; int < (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) ; ++int) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    }\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), int, org.apache.commons.collections4.sequence.EditScript<T>);\n}"},"status":-1},{"failures":[407,195,408,409,196,410,197,411,203,412,204,413,414,207,415,416,208,417],"tindex":"4638f14e-13a0-11e5-80cf-752bdb2d2615","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:198","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(java.lang.Object);\n} "},"variableMap":{"delegateMap":"this","key":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:254","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[418,419,420,421,422,423,424,425,426,427,428,410,429,430,431,432,433,197,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,411,450,451,452,453,454,455,456,457],"tindex":"4639185f-13a0-11e5-80cf-37a8af6514aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.size();\n} "},"status":-1},{"failures":[],"tindex":"46391860-13a0-11e5-80cf-0384a52ea3e8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtIfImpl","sourcecode":"if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n} else {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-2},{"failures":[458],"tindex":"46391861-13a0-11e5-80cf-7577fee9bc5a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"46391862-13a0-11e5-80cf-8b81469df910","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.EditScript:106","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.sequence.EditCommand<T> org.apache.commons.collections4.sequence.EditCommand<T> : java.util.List<org.apache.commons.collections4.sequence.EditCommand<T>>) {\n    org.apache.commons.collections4.sequence.EditCommand<T>.accept(org.apache.commons.collections4.sequence.CommandVisitor<T>);\n}"},"status":-2},{"failures":[],"tindex":"46391863-13a0-11e5-80cf-a5a07d905d1a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:448","type":"CtIfImpl","sourcecode":"if (java.lang.Byte == null) {\n    java.lang.Byte = java.lang.Byte;\n} "},"variableMap":{"answer":"childValue","defaultValue":"childValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:993","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) && (!(org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.contains(java.lang.Object)))) {\n    org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, (java.lang.Object == null ? \"null\" : java.lang.Object), ((java.util.Map<?, ?>)(java.lang.Object)), org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>, boolean);\n} else {\n    org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream, org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size());\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.print(\" = \");\n    final int int = org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.indexOf(java.lang.Object);\n    if (int == (-1)) {\n        java.io.PrintStream.print(java.lang.Object);\n    } else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n        java.io.PrintStream.print(\"(this Map)\");\n    } else {\n        java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n    }\n    if (boolean && (java.lang.Object != null)) {\n        java.io.PrintStream.print(' ');\n        java.io.PrintStream.println(java.lang.Object.getClass().getName());\n    } else {\n        java.io.PrintStream.println();\n    }\n}"},"status":-2},{"failures":[],"tindex":"46391864-13a0-11e5-80cf-0dfb7ca1d0e4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:515","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.size()) != (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.size())) {\n    return false;\n} "},"variableMap":{"helper":"helper","cardinalityB":"cardinalityA","cardinalityA":"cardinalityA"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:518","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.keySet()) {\n    if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) != (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-2},{"failures":[459,460],"tindex":"46391865-13a0-11e5-80cf-ab2d813d358d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:216","type":"CtIfImpl","sourcecode":"if (boolean == false) {\n    return false;\n} "},"variableMap":{"removed":"match"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OnePredicate:96","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.Predicate<? super T> org.apache.commons.collections4.Predicate<? super T> : org.apache.commons.collections4.Predicate<? super T>[]) {\n    if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n        if (boolean) {\n            return false;\n        } \n        boolean = true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"46393f76-13a0-11e5-80cf-61b6b63f2e81","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    return ((java.lang.Object[])(java.lang.Object))[int];\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"this":"key","i":"length","object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"status":-2},{"failures":[],"tindex":"46393f77-13a0-11e5-80cf-791ef828a0f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.IfClosure:76","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Closure<? super E> == null) || (org.apache.commons.collections4.Closure<? super E> == null)) {\n    throw new java.lang.IllegalArgumentException(\"Closures must not be null\");\n} "},"variableMap":{"falseClosure":"closure","trueClosure":"closure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Closure<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n} "},"status":0},{"failures":[209,210,213,214,211,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254],"tindex":"46393f78-13a0-11e5-80cf-4dbb08a0c747","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:202","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"46393f79-13a0-11e5-80cf-e91b8e55a7af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:391","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet();\n} "},"status":-2},{"failures":[461],"tindex":"46393f7a-13a0-11e5-80cf-ed1e7c316bc1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:641","type":"CtInvocationImpl","sourcecode":"this.org.apache.commons.collections4.map.ListOrderedMap<K, V>.clear()"},"variableMap":{"parent":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1172","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < ((java.lang.Object[].int) - 1) ; ) {\n    java.util.Map<K, V>.put(((K)(java.lang.Object[][int++])), ((V)(java.lang.Object[][int++])));\n}"},"status":-1},{"failures":[],"tindex":"463a29db-13a0-11e5-80cf-738254bdd3ea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:115","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int[].int) ; int++) {\n    if ((((boolean[][int]) && (int < ((int[].int) - 1))) && ((int[][int]) > (int[][(int + 1)]))) || (((!(boolean[][int])) && (int > 0)) && ((int[][int]) > (int[][(int - 1)])))) {\n        if ((int[][int]) > int) {\n            int = int[][int];\n            int = int;\n        } \n    } \n}"},"status":-2},{"failures":[],"tindex":"463a29dc-13a0-11e5-80cf-d352a8e71db9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:759","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractHashedMap.HashMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1402","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) {\n    case KEY :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    case VALUE :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    default :\n        throw new java.lang.IllegalArgumentException();\n}"},"status":-2},{"failures":[462,463,464,465,466,467,468,469,470,471,472,473,474,475],"tindex":"463a29dd-13a0-11e5-80cf-1bf93d856f88","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1746","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getKey() can only be called after next() and before remove()\");\n} "},"variableMap":{"lastReturnedNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:949","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement : org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.values()) {\n    if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                } else {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"463a29de-13a0-11e5-80cf-cd69d0363bb6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:116","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayListIterator<E>.(hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:90","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<E>.hasNext()) == false) {\n    org.apache.commons.collections4.iterators.LoopingListIterator<E>.reset();\n} "},"status":-2},{"failures":[476,477],"tindex":"463a29df-13a0-11e5-80cf-cf227c229329","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:409","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-1},{"failures":[],"tindex":"463a29e0-13a0-11e5-80cf-25924b1a852f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:923","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1054","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[478],"tindex":"463a50f1-13a0-11e5-80cf-395ed7058e4d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtIfImpl","sourcecode":"if (java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and closure map must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"463a50f2-13a0-11e5-80cf-756aef354882","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.WhileClosure:61","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.WhileClosure<E>(org.apache.commons.collections4.Predicate<? super E> , org.apache.commons.collections4.Closure<? super E> , boolean)"},"status":-2},{"failures":[],"tindex":"463a50f3-13a0-11e5-80cf-a76de55532ef","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtIfImpl","sourcecode":"if (((java.util.Collection<?> == null) || (java.util.Collection<?> == null)) || ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size()))) {\n    return false;\n} "},"variableMap":{"list1":"coll1","list2":"coll1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) < (java.util.Collection<?>.size())) {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n} else {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n}"},"status":0},{"failures":[],"tindex":"463a50f4-13a0-11e5-80cf-9d41b78161c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:112","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>.isEmpty()) == false) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"463a50f5-13a0-11e5-80cf-3137b1b37386","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:509","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"right","left":"h","h":"h","right":"right","child":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:582","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[479,480,481,482,483,484,485,486,487,488,489,490,491],"tindex":"463a50f6-13a0-11e5-80cf-857b7c5e6f86","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:341","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<E>) != null) {\n    throw new java.lang.IllegalStateException(\"Can\\'t do that after next or hasNext has been called.\");\n} "},"variableMap":{"values":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:298","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n    java.util.ArrayList<E>.add(null);\n    java.util.BitSet.clear(int);\n}"},"status":-1},{"failures":[],"tindex":"463a50f7-13a0-11e5-80cf-69ecbd8a2c39","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:115","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.NodeCachingLinkedList<E>.shrinkCacheToMaximumSize()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:221","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, E);\n}"},"status":-2},{"failures":[209,210],"tindex":"463a50f8-13a0-11e5-80cf-318299dd5bf8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:708","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"variableMap":{"current":"node","tree":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:766","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"463a50f9-13a0-11e5-80cf-a3556fb084ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:289","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext() ; ) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>) {\n        java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear();\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n        break;\n    } \n}"},"status":-2},{"failures":[],"tindex":"463a780a-13a0-11e5-80cf-556386ef8df8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:133","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    if (java.util.Collection<E>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":0},{"failures":[],"tindex":"463a780b-13a0-11e5-80cf-43511bdd5d96","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:407","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>) == null) {\n    java.util.Collection<V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values();\n} "},"status":-2},{"failures":[],"tindex":"463a780c-13a0-11e5-80cf-836969ad6cbd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:230","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[166,168,169,170,171,172,173,174,175,176,177,492,178,179,180,181,183,184,185,186,187,188,189,190,191,192,493,193,194,494,495,496,497,498,499,500,501,502,503,504,407,505,506,507,508,509,195,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,408,526,527,528,529,530,531,532,533,534,476,535,477,536,537,538,539,540,541,542,543,544,545,546,547,548,549,409,550,551,552,553,554,196,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,418,419,420,421,422,423,424,425,426,427,428,410,429,430,431,432,433,197,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,411,450,451,452,453,454,455,456,457,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,199,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,200,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,202,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,203,679,680,681,682,683,684,685,686,412,687,688,689,690,691,204,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,413,708,709,710,711,712,713,714,715,205,206,716,717,718,719,720,721,722,723,414,724,725,726,727,728,207,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,415,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,416,762,763,764,765,766,208,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,417,783,784,785,786,787,788,789,790],"tindex":"463a780d-13a0-11e5-80cf-0facb8544e6b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    final int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) * 2;\n    if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n    } \n} "},"status":-1},{"failures":[],"tindex":"463a780e-13a0-11e5-80cf-09d1d75deb60","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:263","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    if (java.lang.Object != null) {\n        int ^= java.lang.Object.hashCode();\n    } \n}"},"variableMap":{"total":"length","keys":"array"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1172","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < ((java.lang.Object[].int) - 1) ; ) {\n    java.util.Map<K, V>.put(((K)(java.lang.Object[][int++])), ((V)(java.lang.Object[][int++])));\n}"},"status":-2},{"failures":[197,436],"tindex":"463a780f-13a0-11e5-80cf-3fb86a6841b5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1195","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 2 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 1 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":-1},{"failures":[],"tindex":"463a9f20-13a0-11e5-80cf-87064e3f11d9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:452","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.collection.CompositeCollection<V>.addComposited(java.util.Map<K, V>[][int].values());\n}"},"status":-2},{"failures":[],"tindex":"463a9f21-13a0-11e5-80cf-f1723ed9881e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:177","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        int += org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int;\n    }\n}"},"variableMap":{"size":"nCopies","buckets":"object","length":"nCopies","cnt":"value","locks":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:325","type":"CtIfImpl","sourcecode":"if (int < (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int)) {\n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int -= int;\n    int -= int;\n} else {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(java.lang.Object);\n    int -= org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n}"},"status":-2},{"failures":[],"tindex":"463a9f22-13a0-11e5-80cf-61e06d4a8057","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:177","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    this.java.util.Map<K, V>[][int].clear();\n}"},"variableMap":{"composite":"object","length":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Collection<?>) {\n    int = ((java.util.Collection<?>)(java.lang.Object)).size();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    int = ((java.lang.Object[])(java.lang.Object)).int;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int++;\n        java.util.Iterator<?>.next();\n    }\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int++;\n        java.util.Enumeration<?>.nextElement();\n    }\n} else {\n    try {\n        int = java.lang.reflect.Array.getLength(java.lang.Object);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[791,792,793,794,795,796,797,798,799,800,801,802],"tindex":"463a9f23-13a0-11e5-80cf-efa9d16d023a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:83","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"status":-1},{"failures":[803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857],"tindex":"463a9f24-13a0-11e5-80cf-857874d70184","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:325","type":"CtIfImpl","sourcecode":"if (int < (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int)) {\n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int -= int;\n    int -= int;\n} else {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(java.lang.Object);\n    int -= org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n}"},"status":-1},{"failures":[],"tindex":"463a9f25-13a0-11e5-80cf-37865d066cf0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n} else {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"463a9f26-13a0-11e5-80cf-87aced292ead","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:768","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.next()"},"status":-2},{"failures":[858],"tindex":"463a9f27-13a0-11e5-80cf-fd4af063f5f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ConstantFactory:54","type":"CtIfImpl","sourcecode":"if (T == null) {\n    return ((org.apache.commons.collections4.Factory<T>)(org.apache.commons.collections4.functors.ConstantFactory.org.apache.commons.collections4.Factory));\n} "},"status":-1},{"failures":[166,167,168,169,170,171,172,173,174,175,176,177,492,178,179,181,183,185,186,187,189,190,191,192,493,193,194,501,502,504,407,505,506,507,508,195,512,513,408,476,536,537,538,539,540,541,535,542,543,544,546,547,549,409,550,551,552,553,196,557,558,562,563,564,565,566,567,571,425,426,428,410,429,430,431,432,197,436,437,411,581,585,586,589,590,591,593,594,596,597,598,599,601,199,605,606,610,611,613,614,615,616,619,200,630,631,632,633,683,684,686,412,687,688,690,204,694,695,413,720,721,723,414,724,725,726,727,207,731,732,415,758,759,761,416,762,763,764,765,208,769,770,417],"tindex":"463a9f28-13a0-11e5-80cf-93dfb30866f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n    do {\n        final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n} "},"status":-1},{"failures":[859,860,861],"tindex":"463ac639-13a0-11e5-80cf-2f19f23a96bd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"proposedCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"status":-1},{"failures":[],"tindex":"463ac63a-13a0-11e5-80cf-a365ec83b4d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:542","type":"CtIfImpl","sourcecode":"if ((!boolean) && (int == (int))) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") is the size of the list.\"));\n} "},"status":-2},{"failures":[],"tindex":"463ac63b-13a0-11e5-80cf-113c212bd1a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1473","type":"CtTryImpl","sourcecode":"try {\n    final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(java.util.Collection<?>);\n    return org.apache.commons.collections4.BoundedCollection<?>.isFull();\n} catch (final java.lang.IllegalArgumentException ex) {\n    return false;\n}"},"variableMap":{"coll":"iterable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? extends C> instanceof java.util.Collection<?>) {\n    return java.util.Collection<C>.addAll(((java.util.Collection<? extends C>)(java.lang.Iterable<? extends C>)));\n} "},"status":-2},{"failures":[],"tindex":"463ac63c-13a0-11e5-80cf-f111d7812f9b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:314","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"variableMap":{"node":"node","it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:355","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-2},{"failures":[332,333,334,335,336,337,338,339,342,343,862,863,344,345,346,347,348,349,350,351,352,353,354,356,864,865,866,375,376,377,378,379,380,381,382,867,868,385,386,387,388,389,390,391,392,393,394,395],"tindex":"463ac63d-13a0-11e5-80cf-856964e16f2f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"it1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[869,870,871,872,873,874],"tindex":"463ac63e-13a0-11e5-80cf-99bcd13baf5c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.CollectionBag:95","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n    return false;\n} "},"variableMap":{"e":"e","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:94","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[419,420,428,197,436,446],"tindex":"463ac63f-13a0-11e5-80cf-7be9dc6d14c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:675","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    return false;\n} "},"variableMap":{"entryKey":"key","entryValue":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:198","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(java.lang.Object);\n} "},"status":-1},{"failures":[],"tindex":"463ac640-13a0-11e5-80cf-69a156eba13b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:973","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.print(\" = \");\n} "},"variableMap":{"label":"key3","out":"key3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:365","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913],"tindex":"463ac641-13a0-11e5-80cf-4bbdffe0fb99","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:147","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.TreeList<E>.checkInterval(int, 0, org.apache.commons.collections4.list.TreeList<E>.size())"},"variableMap":{"this":"this","fromIndex":"endIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:287","type":"CtIfImpl","sourcecode":"if ((int < int) || (int > int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Invalid index:\" + int) + \", size=\") + org.apache.commons.collections4.list.TreeList<E>.(size())));\n} "},"status":-1},{"failures":[],"tindex":"463aed52-13a0-11e5-80cf-eb3a00405b19","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:235","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList<E>.broadcastNodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"variableMap":{"this":"this","nodeToInsert":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:221","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, E);\n}"},"status":-2},{"failures":[914,915,916,917,918,919,920,921,922,923,856,924,925,926,927,928,857,929,930,931],"tindex":"463aed53-13a0-11e5-80cf-c7c2346a37db","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:88","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"changed","beforeFirst":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:111","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.CollectionSortedBag<E>.add(java.util.Iterator<? extends E>.next(), 1);\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[],"tindex":"463aed54-13a0-11e5-80cf-55e2f05dd286","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"463aed55-13a0-11e5-80cf-75d0e103c945","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:140","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V> = this;\n} "},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":98,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}