{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":52,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":663,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":275,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":608,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":675,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":562,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":64,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":89,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":36,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":623,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":240,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":577,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":144,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":145,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":206,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":5,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":736,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":589,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":60,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":179,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":528,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":182,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":184,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":183,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":188,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":255,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":74,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":731,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":595,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":107,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":212,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":504,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":253,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":556,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":66,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":348,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":705,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":67,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":117,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":267,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":156,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":602,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":588,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":103,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":513,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":125,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIsEmpty":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":56,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":97,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":223,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":551,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":473,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":450,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":95,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":423,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":194,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":448,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":729,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":238,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":409,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":180,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":181,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":444,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":38,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":397,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":424,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":457,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":458,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":209,"org.apache.commons.collections4.CollectionUtilsTest.transform2":755,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":711,"org.apache.commons.collections4.CollectionUtilsTest.transform1":754,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":509,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":344,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":104,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":555,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":426,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":88,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":604,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":20,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":396,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":379,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":337,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":372,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":438,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":696,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":679,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":670,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":309,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":459,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":654,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":77,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":343,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":78,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":749,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":76,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":323,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":351,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":655,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":300,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":374,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":198,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":637,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":141,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":742,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":70,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":576,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":686,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":451,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":6,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":592,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":330,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":187,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":61,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":746,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":111,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":245,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":305,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":384,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":443,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":563,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":470,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":333,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":752,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":658,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":708,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":569,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":579,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":446,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":53,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":394,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":159,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":208,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":482,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":50,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":531,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":363,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":115,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":361,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":399,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":681,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":427,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":580,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":338,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":176,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":219,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":428,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":439,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":583,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":48,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":358,"org.apache.commons.collections4.TransformerUtilsTest.testCloneTransformer":659,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":477,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":501,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":162,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":545,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":136,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":273,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":564,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":745,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":34,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":68,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":719,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":739,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":365,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":328,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":521,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":547,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":22,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":196,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":265,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":517,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":678,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":172,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":536,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":485,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":268,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":280,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":47,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":421,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":91,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":161,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":299,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":687,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":621,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":339,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":605,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":462,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":205,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":297,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":362,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":453,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":478,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":420,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":476,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":712,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":737,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":463,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":135,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":378,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":502,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":387,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":215,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":635,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":83,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":302,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":624,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":519,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":625,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":75,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":436,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":464,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":633,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":695,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":634,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":651,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":601,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":713,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":393,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":65,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":549,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":381,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":227,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":537,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":71,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":86,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":437,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":204,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":744,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":400,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":334,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":522,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":57,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":308,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":632,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":388,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":532,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":31,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":415,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":310,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":331,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":724,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":741,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":155,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":222,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":389,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":620,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray2":13,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":189,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":252,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":495,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":30,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":505,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking":39,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":353,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":356,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":131,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":228,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":211,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":69,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":241,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":1,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":326,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":230,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":552,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":261,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":442,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":81,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":429,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":717,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":80,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":79,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":93,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":10,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":455,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":692,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":644,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":750,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":289,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testEmptyIterator":524,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":693,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":0,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":319,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":419,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":3,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":609,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":499,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":586,"org.apache.commons.collections4.ListUtilsTest.testSubtract":512,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":174,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":669,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":195,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":483,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":21,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":254,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":441,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":447,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testQueueElement":615,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":288,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":329,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":582,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":186,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":480,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":392,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":19,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":201,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicSerialization":662,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":110,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":272,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":567,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":496,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":740,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":99,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":7,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":63,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":237,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":243,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":233,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":751,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":676,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":511,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":376,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":716,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":565,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":566,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":471,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":360,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionSize":28,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":236,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":26,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":411,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":578,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":234,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":226,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":375,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":295,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":49,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":281,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":359,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":258,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":128,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":636,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":126,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":354,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":58,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":146,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":668,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":559,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":90,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":725,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":667,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":51,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":593,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":726,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":405,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":518,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":561,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":385,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":435,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":150,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":406,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":217,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":461,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":153,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":460,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":553,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":101,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":225,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":452,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":87,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":410,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":492,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":753,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":23,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":163,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetHashCode":11,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":301,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":554,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":425,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":722,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":46,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":691,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":16,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":279,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":533,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":251,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":640,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":704,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":541,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":434,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":630,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":516,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":631,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":475,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":629,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":62,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":456,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":232,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":622,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":414,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":573,"org.apache.commons.collections4.functors.AllPredicateTest.emptyArrayToGetInstance":642,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":493,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":581,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":503,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":550,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":8,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":371,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":383,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":266,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":355,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":9,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":190,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":25,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":472,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":294,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":335,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":274,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":45,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsSelf":413,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":318,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":404,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":178,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":170,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testSingletonIteratorRemove":523,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":296,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":118,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":152,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":307,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":607,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":710,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":317,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":407,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":312,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":224,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":292,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":304,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":590,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":171,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":260,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":514,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":284,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":599,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":490,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":700,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":701,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":12,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":702,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":412,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":574,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":646,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":538,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":515,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":367,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":147,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":262,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":743,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":368,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":229,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":720,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":391,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":627,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":587,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":42,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":445,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":465,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":92,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":116,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":723,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":320,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":113,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":216,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":643,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":341,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":345,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":398,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":683,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":618,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":468,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":542,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":611,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":282,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":347,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":544,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":149,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":597,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testRemove":525,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":203,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":94,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":382,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":603,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":684,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":263,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":298,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":286,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":192,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":193,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":469,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionSize":14,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":575,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":105,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":546,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":689,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":373,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":270,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":486,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":55,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":315,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":484,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":369,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":321,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":244,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":247,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":235,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":313,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":560,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":380,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":133,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":349,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":727,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":285,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":346,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":106,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":606,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":656,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":98,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":617,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":390,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":685,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":416,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":408,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":732,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":160,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":734,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":249,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":336,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":714,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":497,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":82,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":37,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":114,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":311,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":671,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":738,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":357,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":306,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":543,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":366,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":386,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":614,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":657,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":534,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":197,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":653,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":673,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":489,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":494,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":43,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":283,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":666,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":242,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":520,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":214,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":246,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":718,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":257,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":352,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":130,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":422,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":498,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":169,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":108,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":2,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":431,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":127,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":430,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":148,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":158,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":120,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":142,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":143,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":154,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIteratorRemove":15,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":134,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":276,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":248,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":269,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":610,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":664,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":100,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":220,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":650,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":570,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":231,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":572,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":293,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":571,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":121,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":703,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":185,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":191,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":674,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":707,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":558,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":628,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":27,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":527,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":598,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":665,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":239,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":316,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":124,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":123,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicSerializationError":661,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":122,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":417,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":129,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":440,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":202,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":327,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":402,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":33,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":84,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":72,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":706,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":377,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":44,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":401,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":694,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":199,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":350,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":479,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":332,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":157,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":17,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":132,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":449,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":639,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":652,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":4,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":290,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":733,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":645,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":151,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":287,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":698,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":699,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":168,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":314,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":167,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":697,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":166,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":466,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":500,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":164,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":530,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":165,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":591,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":594,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":715,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":730,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":748,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":73,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":259,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicCopyConstructor":660,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":529,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":507,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testDecorateFactory":616,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":690,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":747,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":291,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":488,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":85,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":342,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":647,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":648,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":175,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":649,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":32,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":59,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":682,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":709,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":271,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":102,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":467,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":96,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":487,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":721,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":221,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":364,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":584,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":250,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":418,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":506,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":680,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":29,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":613,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":35,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":596,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":612,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":677,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":207,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":325,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":403,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":688,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":137,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":548,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":619,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":138,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":303,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":256,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":278,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":568,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":454,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":539,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":112,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":432,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":540,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":264,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":526,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":638,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":433,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":626,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":54,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":173,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":218,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":395,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":322,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":535,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsSelf":340,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":177,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":139,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":41,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":213,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":140,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":585,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":672,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":210,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":474,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":119,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":109,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":641,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":370,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":600,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":324,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":508,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":481,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":557,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":728,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":200,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":491,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":510,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":735,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":24,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":277},"transformations":[{"failures":[0,1,2,3,4,5],"tindex":"a8655786-13aa-11e5-b569-454eaaf9ac4f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"a8657e97-13aa-11e5-b569-835f8f69d6bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    return ;\n} "},"status":0},{"failures":[6,7,8,9],"tindex":"a8657e98-13aa-11e5-b569-b3faa5b6c95c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"index","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"status":-1},{"failures":[],"tindex":"a8657e99-13aa-11e5-b569-3313c05534e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:141","type":"CtReturnImpl","sourcecode":"return java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)"},"variableMap":{"a":"value","b":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:270","type":"CtIfImpl","sourcecode":"if (java.lang.Object.equals(V)) {\n    return true;\n} "},"status":0},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"tindex":"a8657e9a-13aa-11e5-b569-29a2757d6a3b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n} "},"variableMap":{"transformers":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:204","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    boolean |= org.apache.commons.collections4.set.ListOrderedSet<E>.add(E);\n}"},"status":-1},{"failures":[],"tindex":"a865a5ab-13aa-11e5-b569-b1f61f16e0c6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n} else {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n    (int)++;\n    for (int int = int - 1 ; int >= 0 ; int--) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n            do {\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n        } \n    }\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n}"},"status":0},{"failures":[],"tindex":"a865a5ac-13aa-11e5-b569-15e0d23e1cd4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:345","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValues<V>(this);\n} "},"variableMap":{"values":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"status":0},{"failures":[],"tindex":"a865a5ad-13aa-11e5-b569-336343e24562","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:183","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"variableMap":{"next":"previous","entry":"entry","hashCode":"hashCode","this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:344","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    return V;\n} "},"status":-2},{"failures":[38,39],"tindex":"a865ccbe-13aa-11e5-b569-5bf8de874136","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:202","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.TreeList<E>.checkInterval(int, 0, org.apache.commons.collections4.list.TreeList<E>.size())"},"status":-1},{"failures":[40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136],"tindex":"a865ccbf-13aa-11e5-b569-f583a5692f93","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:549","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"a865f3d0-13aa-11e5-b569-2d4e2dc6b1e5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:356","type":"CtIfImpl","sourcecode":"if ((java.util.BitSet.get(int)) == false) {\n    org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n} "},"variableMap":{"valueSet":"valueSet","this":"this","i":"leastIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:355","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<E>.size()) ; int++) {\n    if ((java.util.BitSet.get(int)) == false) {\n        org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n    } \n    if (java.util.BitSet.get(int)) {\n        if (int == (-1)) {\n            int = int;\n            E = java.util.ArrayList<E>.get(int);\n        } else {\n            final E E = java.util.ArrayList<E>.get(int);\n            if ((java.util.Comparator<? super E>) == null) {\n                throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n            } \n            if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n                E = E;\n                int = int;\n            } \n        }\n    } \n}"},"status":0},{"failures":[43,72,86,90,99],"tindex":"a865f3d1-13aa-11e5-b569-0f63091caf0d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:720","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"to":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:827","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"a865f3d2-13aa-11e5-b569-d5f2bc5bd499","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"a8661ae3-13aa-11e5-b569-a3aa56a03e6a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:183","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"variableMap":{"next":"previous","entry":"previous","hashCode":"hashCode","this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:344","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    return V;\n} "},"status":-2},{"failures":[137,138,139,140,141,142,143,144,145,146,147,148],"tindex":"a8661ae4-13aa-11e5-b569-5937d4b0a814","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:83","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"status":-1},{"failures":[],"tindex":"a8661ae5-13aa-11e5-b569-99bd982f4d6b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1402","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) {\n    case KEY :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    case VALUE :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    default :\n        throw new java.lang.IllegalArgumentException();\n}"},"status":-2},{"failures":[149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193],"tindex":"a8661ae6-13aa-11e5-b569-c7902fc1e2e2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:130","type":"CtIfImpl","sourcecode":"if (K == null) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"a8661ae7-13aa-11e5-b569-e3ad8c79f74b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:298","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n    java.util.ArrayList<E>.add(null);\n    java.util.BitSet.clear(int);\n}"},"status":-2},{"failures":[],"tindex":"a86641f8-13aa-11e5-b569-ddca6519d225","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1068","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"siblingNode":"rval","currentNode":"rval","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"a86641f9-13aa-11e5-b569-d31b8b4ac909","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:518","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.keySet()) {\n    if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) != (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n        return false;\n    } \n}"},"variableMap":{"helper":"helper","cardinalityA":"cardinalityB"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:515","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.size()) != (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.size())) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"a86641fa-13aa-11e5-b569-135ed1f4d17f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:144","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[194,195,196],"tindex":"a86641fb-13aa-11e5-b569-5d8894e91bb2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedClosure:80","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Closure<? super E>[])"},"variableMap":{"cmds":"closures"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:138","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Closure<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Closure<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + int) + \" was null\"));\n    } \n}"},"status":-1},{"failures":[],"tindex":"a86641fc-13aa-11e5-b569-05daca107b33","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1402","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) {\n    case KEY :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    case VALUE :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    default :\n        throw new java.lang.IllegalArgumentException();\n}"},"status":-2},{"failures":[],"tindex":"a86641fd-13aa-11e5-b569-c9d3e84dae2b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:81","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.OrderedMapIterator<? extends K, ? extends V>.hasPrevious()"},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1322","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if (java.lang.Object == null) {\n        if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n            return false;\n        } \n    } else {\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n}"},"status":-2},{"failures":[197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520],"tindex":"a866690e-13aa-11e5-b569-33a044d3c0f1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    return true;\n} "},"status":-1},{"failures":[521],"tindex":"a866690f-13aa-11e5-b569-3943a4255447","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:547","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    throw new java.util.ConcurrentModificationException(\"Cursor closed\");\n} "},"variableMap":{"valid":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:751","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Predicate<? super T>.evaluate(java.util.Iterator<T>.next()))) {\n    java.util.Iterator<T>.remove();\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"a8666910-13aa-11e5-b569-e553ca4f7760","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2062","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(java.lang.Object)"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:160","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-2},{"failures":[215,217,228,245,247,248,233,234,235,236,237,239,240,241,238,252,254,265,282,284,285,270,271,272,273,274,276,277,278,275,306,308,319,336,338,339,324,326,327,328,330,332,329,341,343,354,371,373,374,359,360,361,362,363,365,366,367,364,378,380,391,408,410,411,396,397,398,399,400,402,403,404,401,414,416,427,444,446,447,432,434,435,436,438,440,437,450,452,463,480,482,483,468,470,471,472,474,476,473,486,496,497,487,489,491,493,500,509,510,511,501,502,503,504,505,507,512,513],"tindex":"a8666911-13aa-11e5-b569-6f687d4f6a36","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:275","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.add(java.util.Iterator<? extends E>.next());\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[],"tindex":"a8669022-13aa-11e5-b569-d52e83b79c0c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:333","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-2},{"failures":[50,51,55,56,58,59,60,61,62,63,64,66,68,71,72,74,86,87,88,89,96,97,98,99,105,106,108,109,110,111,112,113,114,115,116,522,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136],"tindex":"a8669023-13aa-11e5-b569-a31113345850","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:373","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.TreeBidiMap.KeyView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[523,524,525],"tindex":"a8669024-13aa-11e5-b569-2d2d434ec8dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:97","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"canRemove":"removed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:110","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[526],"tindex":"a8669025-13aa-11e5-b569-a1408e56671d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtIfImpl","sourcecode":"if ((java.util.List<E> == null) || (java.util.List<E> == null)) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} "},"status":-1},{"failures":[527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599],"tindex":"a866b736-13aa-11e5-b569-fdd76ca75f9c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"remove() cannot be called\");\n} "},"variableMap":{"nextObjectSet":"isLocked"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"a869eb87-13aa-11e5-b569-e7235ae088a3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1287","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"a869eb88-13aa-11e5-b569-fb374e1b9ff8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:721","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n} "},"variableMap":{"listIterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:223","type":"CtWhileImpl","sourcecode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":0},{"failures":[298,335,443,479,495],"tindex":"a86a1299-13aa-11e5-b569-571964141e78","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:398","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:104","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.CollectionSortedBag<E>.add(E, 1)"},"status":-1},{"failures":[],"tindex":"a86a129a-13aa-11e5-b569-9d85ee400633","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1208","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"current","parent":"current","left":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1101","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || (int < (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n    break;\n} "},"status":-2},{"failures":[600,601],"tindex":"a86a129b-13aa-11e5-b569-8dec9e9b795d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.TransformedSet:82","type":"CtForEachImpl","sourcecode":"for (final E E : E[]) {\n    org.apache.commons.collections4.set.TransformedSet<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}"},"status":-1},{"failures":[602,603,604,605,606,607,608,609,610,611,612,613],"tindex":"a86a129c-13aa-11e5-b569-2d07e4152c85","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:233","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[614],"tindex":"a86a129d-13aa-11e5-b569-8b54d0fff940","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:129","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"exhausted":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:717","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.hasNext()) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.next();\n    if (((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 1) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) {\n        org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"a86a129e-13aa-11e5-b569-211fa7f8b128","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.DefaultedMap:180","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[],"tindex":"a86a129f-13aa-11e5-b569-c968544d87c7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtIfImpl","sourcecode":"if (int > 3) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V> = org.apache.commons.collections4.map.Flat3Map<K, V>.createDelegateMap();\n} "},"status":0},{"failures":[615],"tindex":"a86a12a0-13aa-11e5-b569-8f22e6e04dab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.AbstractQueueDecorator:76","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.AbstractQueueDecorator<E>.decorated().peek()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.AbstractQueueDecorator:80","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.AbstractQueueDecorator<E>.decorated().element()"},"status":-1},{"failures":[201,215,217,242,252,254,279,290,306,308,333,329,341,343,368,375,378,380,405,414,416,441,437,450,452,477,473,492,506],"tindex":"a86a12a1-13aa-11e5-b569-1171c8ec857b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:488","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>) == null) {\n    java.util.Set<E> = org.apache.commons.collections4.set.UnmodifiableSet.<E>unmodifiableSet(java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet());\n} "},"status":-1},{"failures":[],"tindex":"a86a39b2-13aa-11e5-b569-73b203142965","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:305","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[616],"tindex":"a86a39b3-13aa-11e5-b569-f9c5fc71e7c8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:52","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.OrderedMapIterator<K, ? extends V> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final org.apache.commons.collections4.OrderedMapIterator<K, V> org.apache.commons.collections4.OrderedMapIterator<K, V> = ((org.apache.commons.collections4.OrderedMapIterator<K, V>)(org.apache.commons.collections4.OrderedMapIterator<K, ? extends V>));\n    return org.apache.commons.collections4.OrderedMapIterator<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"a86a39b4-13aa-11e5-b569-359177a3aab4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n        if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n            return true;\n        } \n    }\n} else {\n    for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n            return true;\n        } \n    }\n}"},"status":-2},{"failures":[617,618],"tindex":"a86a39b5-13aa-11e5-b569-d59baeca585a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n} "},"variableMap":{"transformers":"inputCollection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<? extends O> != null) && (org.apache.commons.collections4.Predicate<? super O> != null)) {\n    for (final O O : java.lang.Iterable<? extends O>) {\n        if (!(org.apache.commons.collections4.Predicate<? super O>.evaluate(O))) {\n            R.add(O);\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"a86a39b6-13aa-11e5-b569-c9ef9225d732","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"cmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"a86a39b7-13aa-11e5-b569-a1dec2c44866","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"variableMap":{"node":"y","this":"this","rval":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":0},{"failures":[],"tindex":"a86a60c8-13aa-11e5-b569-a13b18c8e193","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:276","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.Values<V>(this);\n} "},"variableMap":{"values":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:407","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>) == null) {\n    java.util.Collection<V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values();\n} "},"status":-2},{"failures":[619,526,620,621,622,623],"tindex":"a86a60c9-13aa-11e5-b569-1325112c97f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"d","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:215","type":"CtIfImpl","sourcecode":"if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n    int[][int] = (int[][(int + 1)]) - 1;\n} else {\n    int[][int] = int[][(int - 1)];\n}"},"status":-1},{"failures":[],"tindex":"a86a60ca-13aa-11e5-b569-a334ae2ec5a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:268","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"a86a60cb-13aa-11e5-b569-859720e703cd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:949","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement : org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.values()) {\n    if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                } else {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"variableMap":{"this":"this","deletedNode":"siblingNode","rootNode":"rootNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1062","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":-2},{"failures":[624,625],"tindex":"a86a60cc-13aa-11e5-b569-f511cee2ab84","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:345","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.Flat3Map<K, V>.convertToMap()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1089","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.map.Flat3Map<K, V>.mapIterator() ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<?, ?>.next());\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<?, ?>.getValue());\n}"},"status":-1},{"failures":[],"tindex":"a86a87dd-13aa-11e5-b569-533ad2aff18f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:133","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<K, V> = this;\n} "},"status":-2},{"failures":[],"tindex":"a86a87de-13aa-11e5-b569-57701a8fca90","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1068","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"siblingNode":"node","currentNode":"rval","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"a86a87df-13aa-11e5-b569-59cb40ddea97","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:467","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"status":-2},{"failures":[58,59,60,61,62,63,64,66,68,71,72,626,108,109,111,112,113,114,116],"tindex":"a86d9520-13aa-11e5-b569-f5640763a9df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1330","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(size())) {\n    return false;\n} "},"status":-1},{"failures":[68,72,85,86,89,90,91,92,93],"tindex":"a86d9521-13aa-11e5-b569-8384377d749a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:853","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"y","leftChild":"y","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1140","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"a86d9522-13aa-11e5-b569-9f8896c2a5c2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:238","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, java.lang.Object> java.util.Map.Entry<K, java.lang.Object> : java.util.Set<java.util.Map.Entry<K, java.lang.Object>>) {\n    if (((java.util.Collection<V>)(java.util.Map.Entry<K, java.lang.Object>.getValue())).contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":0},{"failures":[],"tindex":"a86dbc33-13aa-11e5-b569-07926c5bdc32","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:136","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<K>.size()) != 0) {\n    if ((this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n        throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n    } \n    this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(this, this.java.util.Map<K, V>[][int], java.util.Map<K, V>, java.util.Collection<K>);\n} "},"status":-2},{"failures":[58,59,60,61,62,63,64,66,68,71,72,626,108,109,111,112,113,114,116],"tindex":"a86dbc34-13aa-11e5-b569-3b0ecc5dfe82","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1330","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(size())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"a86dbc35-13aa-11e5-b569-f58e2a93fb78","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"threshold"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n} else {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n    (int)++;\n    for (int int = int - 1 ; int >= 0 ; int--) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n            do {\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n        } \n    }\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n}"},"status":0},{"failures":[627],"tindex":"a86dbc36-13aa-11e5-b569-773f2288abd1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:90","type":"CtForEachImpl","sourcecode":"for (final E E : E[]) {\n    org.apache.commons.collections4.collection.TransformedCollection<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}"},"status":-1},{"failures":[628,624,629,630,631,632,633,634],"tindex":"a86dbc37-13aa-11e5-b569-b516ea4d89be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                return V;\n            } \n        case 2 :\n            if ((K) == null) {\n                return V;\n            } \n        case 1 :\n            if ((K) == null) {\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n        }\n    } \n}"},"status":-1},{"failures":[],"tindex":"a86dbc38-13aa-11e5-b569-81daf848096b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"length","proposedCapacity":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:476","type":"CtWhileImpl","sourcecode":"while (int < (T[].int)) {\n    T[][int++] = null;\n}"},"status":-2},{"failures":[194,195,196],"tindex":"a86dbc39-13aa-11e5-b569-9b22d450e5ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedClosure:123","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.FunctorUtils.<E>copy(org.apache.commons.collections4.Closure<? super E>[])"},"variableMap":{"iClosures":"closures"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:126","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Closure<E>[])(org.apache.commons.collections4.Closure<? super E>[].clone()))"},"status":-1},{"failures":[],"tindex":"a86dbc3a-13aa-11e5-b569-09a8fe3bb121","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"status":-2},{"failures":[],"tindex":"a86dbc3b-13aa-11e5-b569-177b158eef7f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1396","type":"CtTryImpl","sourcecode":"try {\n    return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n}"},"variableMap":{"object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:198","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"a86de34c-13aa-11e5-b569-bd2200060849","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:373","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.TreeBidiMap.KeyView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"a86de34d-13aa-11e5-b569-d16cc0b39900","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:139","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Closure<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + int) + \" was null\"));\n} "},"status":-2},{"failures":[137,138,139,140,141,635,142,143,636,637,144,145,638,639,146,640,641,641,642,643,643,644,147,148,195,196,645,646],"tindex":"a86de34e-13aa-11e5-b569-7b37434d7f2b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:56","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate<? super T>[])"},"variableMap":{"predicates":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:82","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n    } \n}"},"status":-1},{"failures":[],"tindex":"a86de34f-13aa-11e5-b569-f7464303668a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:276","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n    throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeCollection without a CollectionMutator strategy\");\n} "},"status":-2},{"failures":[619,526,621,622],"tindex":"a86de350-13aa-11e5-b569-bfcfd6f1f189","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:199","type":"CtWhileImpl","sourcecode":"while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    int[][int] = ++int;\n    ++int;\n}"},"status":-1},{"failures":[647,648,649,650,651,652,653,654,655,656,657,658],"tindex":"a86de351-13aa-11e5-b569-2bf36e03b56d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:239","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"Comparator ordering cannot be changed after the first comparison is performed\");\n} "},"variableMap":{"isLocked":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:163","type":"CtIfImpl","sourcecode":"if (E instanceof java.util.Iterator) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)));\n} else {\n    E = E;\n    boolean = true;\n}"},"status":-1},{"failures":[],"tindex":"a86de352-13aa-11e5-b569-fbd2fb0f3333","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-2},{"failures":[526,619,620,621,622,623],"tindex":"a86de353-13aa-11e5-b569-27916f7197f1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:174","type":"CtIfImpl","sourcecode":"if ((int == 0) || (int == 0)) {\n    return null;\n} "},"variableMap":{"m":"start2","n":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:205","type":"CtIfImpl","sourcecode":"if ((int[][(int - int)]) <= (int[][int])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n} "},"status":-1},{"failures":[659,660,661,662],"tindex":"a86de354-13aa-11e5-b569-f751f5d2d306","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:67","type":"CtTryImpl","sourcecode":"try {\n    T.getClass().getConstructor(new java.lang.Class<?>[]{ T.getClass() });\n    return new org.apache.commons.collections4.functors.InstantiateFactory<T>(((java.lang.Class<T>)(T.getClass())) , new java.lang.Class<?>[]{ T.getClass() } , new java.lang.Object[]{ T });\n} catch (final java.lang.NoSuchMethodException ex2) {\n    if (T instanceof java.io.Serializable) {\n        return ((org.apache.commons.collections4.Factory<T>)(new org.apache.commons.collections4.functors.PrototypeFactory.PrototypeSerializationFactory<java.io.Serializable>(((java.io.Serializable)(T)))));\n    } \n}"},"status":-1},{"failures":[],"tindex":"a86de355-13aa-11e5-b569-fb3fb4959c30","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"this":"key","i":"length","object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"status":-2},{"failures":[],"tindex":"a86e0a66-13aa-11e5-b569-1d10fabd2ace","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:297","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>) {\n    java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear();\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    break;\n} "},"status":0},{"failures":[],"tindex":"a86e0a67-13aa-11e5-b569-b972b5f42d19","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:363","type":"CtForImpl","sourcecode":"for (int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n}"},"status":-2},{"failures":[],"tindex":"a86e0a68-13aa-11e5-b569-293b1b8e6029","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:363","type":"CtForImpl","sourcecode":"for (int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n}"},"status":-2},{"failures":[663,664,665,666,667,668,669,670,671,672,673],"tindex":"a86e0a69-13aa-11e5-b569-ef7dcca59027","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:226","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            return true;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-1},{"failures":[628,674,625,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714],"tindex":"a86e0a6a-13aa-11e5-b569-3786d945ec56","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.size();\n} "},"status":-1},{"failures":[715,716,717,718,719,720,721,722,723],"tindex":"a86e0a6b-13aa-11e5-b569-71a34ff026de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:621","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.init()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:623","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.add(((E)(java.io.ObjectInputStream.readObject())));\n}"},"status":-1},{"failures":[],"tindex":"a86e0a6c-13aa-11e5-b569-5bacd3235223","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedSortedMap:105","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().comparator()"},"status":-2},{"failures":[541],"tindex":"a86e0a6d-13aa-11e5-b569-95402558a817","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size())) {\n    return false;\n} "},"variableMap":{"a":"coll","b":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:246","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (org.apache.commons.collections4.set.CompositeSet<E>.(contains(java.lang.Object)) == false) {\n        return false;\n    } \n}"},"status":-1},{"failures":[217,254,308,329,343,380,416,437,452,473],"tindex":"a86e317e-13aa-11e5-b569-57f0097e43f1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:158","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot add to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:390","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Bag<E>.isEmpty())) {\n    boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.removeAll(org.apache.commons.collections4.Bag<E>);\n} "},"status":-1},{"failures":[],"tindex":"a86e317f-13aa-11e5-b569-d7e16f278411","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:140","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V> = this;\n} "},"status":-2},{"failures":[],"tindex":"a86e3180-13aa-11e5-b569-d9c74e533053","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"variableMap":{"outputStream":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:232","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().contains(java.lang.Object)) {\n    java.util.Set<java.lang.Object>.add(java.lang.Object);\n} "},"status":-2},{"failures":[724],"tindex":"a86e3181-13aa-11e5-b569-f99ddc8f5917","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:124","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Comparator must not be null.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:137","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,560,753],"tindex":"a86e3182-13aa-11e5-b569-cf734918d463","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:153","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"slotFilled":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:262","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(1);\n    java.util.Collection<V>.add(((V)(java.lang.Object)));\n    if ((java.util.Collection<V>.size()) > 0) {\n        org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n        boolean = true;\n    } \n} else {\n    boolean = java.util.Collection<V>.add(((V)(java.lang.Object)));\n}"},"status":-1},{"failures":[169],"tindex":"a86e3183-13aa-11e5-b569-6b14f4992b15","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:134","type":"CtReturnImpl","sourcecode":"return java.lang.String.startsWith(java.lang.String)"},"status":-1},{"failures":[754,755],"tindex":"a86e3184-13aa-11e5-b569-b750becfbb57","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtIfImpl","sourcecode":"if (java.util.Collection<C> instanceof java.util.List<?>) {\n    final java.util.List<C> java.util.List<C> = ((java.util.List<C>)(java.util.Collection<C>));\n    for (final java.util.ListIterator<C> java.util.ListIterator<C> = java.util.List<C>.listIterator() ; java.util.ListIterator<C>.hasNext() ; ) {\n        java.util.ListIterator<C>.set(org.apache.commons.collections4.Transformer<? super C, ? extends C>.transform(java.util.ListIterator<C>.next()));\n    }\n} else {\n    final java.util.Collection<C> java.util.Collection<C> = org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.collect(java.util.Collection<C>, org.apache.commons.collections4.Transformer<? super C, ? extends C>);\n    java.util.Collection<C>.clear();\n    java.util.Collection<C>.addAll(java.util.Collection<C>);\n}"},"status":-1},{"failures":[],"tindex":"a86e3185-13aa-11e5-b569-fd919cf58664","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:96","type":"CtReturnImpl","sourcecode":"return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)"},"variableMap":{"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"cnt","x":"cnt","i":"cnt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:182","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"a86e3186-13aa-11e5-b569-575dd0538f06","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:113","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    return java.lang.Integer.intValue();\n} "},"variableMap":{"count":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:155","type":"CtWhileImpl","sourcecode":"while (int >= 0) {\n    final java.lang.Object java.lang.Object = java.util.ArrayList<E>.get(int);\n    if (((java.lang.Object == null) && (java.lang.Object == null)) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n        return int;\n    } \n    int--;\n    int++;\n}"},"status":-2},{"failures":[],"tindex":"a86e3187-13aa-11e5-b569-77dbecde9d0d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"variableMap":{"delegateMap":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:99","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>.isSetValueChecking()) {\n    return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this);\n} "},"status":-2},{"failures":[],"tindex":"a86e3188-13aa-11e5-b569-13d4d6b77890","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:401","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.get(java.util.List<K>.get(int))"},"variableMap":{"insertOrder":"insertOrder","this":"m","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:453","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(K)) {\n    final V V = java.util.Map<K, V>.remove(K);\n    final int int = java.util.List<K>.indexOf(K);\n    java.util.List<K>.remove(int);\n    if (int < int) {\n        int--;\n    } \n    java.util.List<K>.add(int, K);\n    java.util.Map<K, V>.put(K, V);\n    return V;\n} else {\n    java.util.List<K>.add(int, K);\n    java.util.Map<K, V>.put(K, V);\n    return null;\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}