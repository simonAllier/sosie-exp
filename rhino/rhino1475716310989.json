{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"dc91a586-8b61-11e6-b207-8d07baf30395","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider:327","type":"CtIfImpl","sourcecode":"if (eq == (-1)) {\n    return -1;\n} "},"variableMap":{"eq":"stringBufferTop"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.TokenStream:959","type":"CtForImpl","sourcecode":"for (int int = getChar() ; c != (org.mozilla.javascript.TokenStream.org.mozilla.javascript.TokenStream.int) ; c = getChar()) {\n    if (boolean) {\n        switch (c) {\n            case '>' :\n                addToString(c);\n                boolean = false;\n                boolean = false;\n                break;\n            case '/' :\n                addToString(c);\n                if ((peekChar()) == '>') {\n                    c = getChar();\n                    addToString(c);\n                    boolean = false;\n                    (int)--;\n                } \n                break;\n            case '{' :\n                ungetChar(c);\n                org.mozilla.javascript.TokenStream.this.java.lang.String = getStringFromBuffer();\n                return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n            case '\\'' :\n            case '\"' :\n                addToString(c);\n                if (!(readQuotedString(c)))\n                    return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n                \n                break;\n            case '=' :\n                addToString(c);\n                boolean = true;\n                break;\n            case ' ' :\n            case '\\t' :\n            case '\\r' :\n            case '\\n' :\n                addToString(c);\n                break;\n            default :\n                addToString(c);\n                boolean = false;\n                break;\n        }\n        if ((!(boolean)) && ((int) == 0)) {\n            org.mozilla.javascript.TokenStream.this.java.lang.String = getStringFromBuffer();\n            return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n        } \n    } else {\n        switch (c) {\n            case '<' :\n                addToString(c);\n                c = peekChar();\n                switch (c) {\n                    case '!' :\n                        c = getChar();\n                        addToString(c);\n                        c = peekChar();\n                        switch (c) {\n                            case '-' :\n                                c = getChar();\n                                addToString(c);\n                                c = getChar();\n                                if (c == '-') {\n                                    addToString(c);\n                                    if (!(readXmlComment()))\n                                        return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n                                    \n                                } else {\n                                    int = 0;\n                                    org.mozilla.javascript.TokenStream.this.java.lang.String = null;\n                                    org.mozilla.javascript.Parser.addError(\"msg.XML.bad.form\");\n                                    return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n                                }\n                                break;\n                            case '[' :\n                                c = getChar();\n                                addToString(c);\n                                if (((((((getChar()) == 'C') && ((getChar()) == 'D')) && ((getChar()) == 'A')) && ((getChar()) == 'T')) && ((getChar()) == 'A')) && ((getChar()) == '[')) {\n                                    addToString('C');\n                                    addToString('D');\n                                    addToString('A');\n                                    addToString('T');\n                                    addToString('A');\n                                    addToString('[');\n                                    if (!(readCDATA()))\n                                        return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n                                    \n                                } else {\n                                    int = 0;\n                                    org.mozilla.javascript.TokenStream.this.java.lang.String = null;\n                                    org.mozilla.javascript.Parser.addError(\"msg.XML.bad.form\");\n                                    return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n                                }\n                                break;\n                            default :\n                                if (!(readEntity()))\n                                    return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n                                \n                                break;\n                        }\n                        break;\n                    case '?' :\n                        c = getChar();\n                        addToString(c);\n                        if (!(readPI()))\n                            return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n                        \n                        break;\n                    case '/' :\n                        c = getChar();\n                        addToString(c);\n                        if ((int) == 0) {\n                            int = 0;\n                            org.mozilla.javascript.TokenStream.this.java.lang.String = null;\n                            org.mozilla.javascript.Parser.addError(\"msg.XML.bad.form\");\n                            return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n                        } \n                        boolean = true;\n                        (int)--;\n                        break;\n                    default :\n                        boolean = true;\n                        (int)++;\n                        break;\n                }\n                break;\n            case '{' :\n                ungetChar(c);\n                org.mozilla.javascript.TokenStream.this.java.lang.String = getStringFromBuffer();\n                return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n            default :\n                addToString(c);\n                break;\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"dc91f3a7-8b61-11e6-b207-e19ea56ee835","series":0,"name":"add","transplant":{"position":"org.mozilla.classfile.ClassFileWriter:1568","type":"CtSwitchImpl","sourcecode":"switch (opcode) {\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        return true;\n    default :\n        return false;\n}"},"variableMap":{"org.mozilla.classfile.ByteCode.IFLT":"c","org.mozilla.classfile.ByteCode.IF_ICMPGT":"c","org.mozilla.classfile.ByteCode.IF_ICMPEQ":"c","org.mozilla.classfile.ByteCode.IFNONNULL":"c","org.mozilla.classfile.ByteCode.GOTO":"c","org.mozilla.classfile.ByteCode.IF_ICMPLT":"c","org.mozilla.classfile.ByteCode.IF_ICMPNE":"c","org.mozilla.classfile.ByteCode.GOTO_W":"c","opcode":"c","org.mozilla.classfile.ByteCode.IF_ACMPEQ":"c","org.mozilla.classfile.ByteCode.IFGE":"c","org.mozilla.classfile.ByteCode.IF_ICMPGE":"c","org.mozilla.classfile.ByteCode.IFLE":"c","org.mozilla.classfile.ByteCode.IFNE":"c","org.mozilla.classfile.ByteCode.IF_ICMPLE":"c","org.mozilla.classfile.ByteCode.IF_ACMPNE":"c","org.mozilla.classfile.ByteCode.IFNULL":"c","org.mozilla.classfile.ByteCode.IFEQ":"c","org.mozilla.classfile.ByteCode.IFGT":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.TokenStream:1129","type":"CtIfImpl","sourcecode":"if ((c == '-') && ((peekChar()) == '-')) {\n    c = getChar();\n    addToString(c);\n    if ((peekChar()) == '>') {\n        c = getChar();\n        addToString(c);\n        return true;\n    } else {\n        continue;\n    }\n} "},"status":-1},{"failures":[],"tindex":"dc921ab8-8b61-11e6-b207-035cfd9e37b2","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.regexp.NativeRegExp:1599","type":"CtAssignmentImpl","sourcecode":"thisCh = '\\\\'"},"variableMap":{"thisCh":"H"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeGlobal:687","type":"CtAssignmentImpl","sourcecode":"buf[(bufTop++)] = H"},"status":-1},{"failures":[],"tindex":"dc921ab9-8b61-11e6-b207-2d853963d0b4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeJavaPackage:140","type":"CtIfImpl","sourcecode":"if (createPkg) {\n    org.mozilla.javascript.NativeJavaPackage org.mozilla.javascript.NativeJavaPackage;\n    pkg = new org.mozilla.javascript.NativeJavaPackage(true , className , java.lang.ClassLoader);\n    org.mozilla.javascript.ScriptRuntime.setObjectProtoAndParent(pkg, getParentScope());\n    newValue = pkg;\n} else {\n    if ((java.util.Set<java.lang.String>) == null)\n        java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>();\n    \n    java.util.Set<java.lang.String>.add(name);\n}"},"status":-1}],"header":{"groupId":"r","transformationCount":4,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}