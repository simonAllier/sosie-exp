{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"657525fd-8b41-11e6-a278-bb437ab49797","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.JavaAdapter:498","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Modifier.isStatic(mods))\n    continue;\n"},"variableMap":{"mods":"org.mozilla.javascript.typedarrays.NativeInt16Array.BYTES_PER_ELEMENT"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.typedarrays.NativeInt16Array:90","type":"CtInvocationImpl","sourcecode":"org.mozilla.javascript.typedarrays.ByteIo.writeInt16(org.mozilla.javascript.typedarrays.NativeArrayBuffer.byte[], ((index * (org.mozilla.javascript.typedarrays.NativeInt16Array.org.mozilla.javascript.typedarrays.NativeInt16Array.int)) + (int)), val, false)"},"status":-1},{"failures":[],"tindex":"65754d0e-8b41-11e6-a278-f5be53ed6052","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.IdScriptableObject:420","type":"CtIfImpl","sourcecode":"if (info != 0) {\n    int int = info >>> 16;\n    return attr;\n} "},"variableMap":{"info":"org.mozilla.javascript.Node.RIGHT"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Optimizer:118","type":"CtSwitchImpl","sourcecode":"switch (n.getType()) {\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n        {\n            org.mozilla.javascript.Node org.mozilla.javascript.Node = n.getFirstChild();\n            int int = rewriteForNumberVariables(child, org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int);\n            if (type == (org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int))\n                n.putIntProp(org.mozilla.javascript.Node.org.mozilla.javascript.Node.int, org.mozilla.javascript.Node.org.mozilla.javascript.Node.int);\n            \n            return org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int;\n        }\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n        n.putIntProp(org.mozilla.javascript.Node.org.mozilla.javascript.Node.int, org.mozilla.javascript.Node.org.mozilla.javascript.Node.int);\n        return org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int;\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n        {\n            int int = org.mozilla.javascript.optimizer.OptFunctionNode.getVarIndex(n);\n            if (((boolean) && (org.mozilla.javascript.optimizer.OptFunctionNode.isParameter(varIndex))) && (desired == (org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int))) {\n                n.putIntProp(org.mozilla.javascript.Node.org.mozilla.javascript.Node.int, org.mozilla.javascript.Node.org.mozilla.javascript.Node.int);\n                return org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int;\n            } else if (org.mozilla.javascript.optimizer.OptFunctionNode.isNumberVar(varIndex)) {\n                n.putIntProp(org.mozilla.javascript.Node.org.mozilla.javascript.Node.int, org.mozilla.javascript.Node.org.mozilla.javascript.Node.int);\n                return org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int;\n            } \n            return org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int;\n        }\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n        {\n            org.mozilla.javascript.Node org.mozilla.javascript.Node = n.getFirstChild();\n            int int = rewriteForNumberVariables(child, org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int);\n            if ((child.getType()) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n                if ((type == (org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int)) && (!(convertParameter(child)))) {\n                    n.putIntProp(org.mozilla.javascript.Node.org.mozilla.javascript.Node.int, org.mozilla.javascript.Node.org.mozilla.javascript.Node.int);\n                    markDCPNumberContext(child);\n                    return org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int;\n                } \n                return org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int;\n            } else if (((child.getType()) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) || ((child.getType()) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))) {\n                return type;\n            } \n            return org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int;\n        }\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n        {\n            org.mozilla.javascript.Node org.mozilla.javascript.Node = n.getFirstChild();\n            org.mozilla.javascript.Node org.mozilla.javascript.Node = lChild.getNext();\n            int int = rewriteForNumberVariables(rChild, org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int);\n            int int = org.mozilla.javascript.optimizer.OptFunctionNode.getVarIndex(n);\n            if ((boolean) && (org.mozilla.javascript.optimizer.OptFunctionNode.isParameter(varIndex))) {\n                if (rType == (org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int)) {\n                    if (!(convertParameter(rChild))) {\n                        n.putIntProp(org.mozilla.javascript.Node.org.mozilla.javascript.Node.int, org.mozilla.javascript.Node.org.mozilla.javascript.Node.int);\n                        return org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int;\n                    } \n                    markDCPNumberContext(rChild);\n                    return org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int;\n                } else\n                    return rType;\n                \n            } else if (org.mozilla.javascript.optimizer.OptFunctionNode.isNumberVar(varIndex)) {\n                if (rType != (org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int)) {\n                    n.removeChild(rChild);\n                    n.addChildToBack(new org.mozilla.javascript.Node(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int , rChild));\n                } \n                n.putIntProp(org.mozilla.javascript.Node.org.mozilla.javascript.Node.int, org.mozilla.javascript.Node.org.mozilla.javascript.Node.int);\n                markDCPNumberContext(rChild);\n                return org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int;\n            } else {\n                if (rType == (org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int)) {\n                    if (!(convertParameter(rChild))) {\n                        n.removeChild(rChild);\n                        n.addChildToBack(new org.mozilla.javascript.Node(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int , rChild));\n                    } \n                } \n                return org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int;\n            }\n        }\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n        {\n            org.mozilla.javascript.Node org.mozilla.javascript.Node = n.getFirstChild();\n            org.mozilla.javascript.Node org.mozilla.javascript.Node = lChild.getNext();\n            int int = rewriteForNumberVariables(lChild, org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int);\n            int int = rewriteForNumberVariables(rChild, org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int);\n            markDCPNumberContext(lChild);\n            markDCPNumberContext(rChild);\n            if (convertParameter(lChild)) {\n                if (convertParameter(rChild)) {\n                    return org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int;\n                } else if (rType == (org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int)) {\n                    n.putIntProp(org.mozilla.javascript.Node.org.mozilla.javascript.Node.int, org.mozilla.javascript.Node.org.mozilla.javascript.Node.int);\n                } \n            } else if (convertParameter(rChild)) {\n                if (lType == (org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int)) {\n                    n.putIntProp(org.mozilla.javascript.Node.org.mozilla.javascript.Node.int, org.mozilla.javascript.Node.org.mozilla.javascript.Node.int);\n                } \n            } else {\n                if (lType == (org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int)) {\n                    if (rType == (org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int)) {\n                        n.putIntProp(org.mozilla.javascript.Node.org.mozilla.javascript.Node.int, org.mozilla.javascript.Node.org.mozilla.javascript.Node.int);\n                    } else {\n                        n.putIntProp(org.mozilla.javascript.Node.org.mozilla.javascript.Node.int, org.mozilla.javascript.Node.org.mozilla.javascript.Node.int);\n                    }\n                } else {\n                    if (rType == (org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int)) {\n                        n.putIntProp(org.mozilla.javascript.Node.org.mozilla.javascript.Node.int, org.mozilla.javascript.Node.org.mozilla.javascript.Node.int);\n                    } \n                }\n            }\n            return org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int;\n        }\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n        {\n            org.mozilla.javascript.Node org.mozilla.javascript.Node = n.getFirstChild();\n            org.mozilla.javascript.Node org.mozilla.javascript.Node = lChild.getNext();\n            int int = rewriteForNumberVariables(lChild, org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int);\n            int int = rewriteForNumberVariables(rChild, org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int);\n            if (convertParameter(lChild)) {\n                if (convertParameter(rChild)) {\n                    return org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int;\n                } else {\n                    if (rType == (org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int)) {\n                        n.putIntProp(org.mozilla.javascript.Node.org.mozilla.javascript.Node.int, org.mozilla.javascript.Node.org.mozilla.javascript.Node.int);\n                    } \n                }\n            } else {\n                if (convertParameter(rChild)) {\n                    if (lType == (org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int)) {\n                        n.putIntProp(org.mozilla.javascript.Node.org.mozilla.javascript.Node.int, org.mozilla.javascript.Node.org.mozilla.javascript.Node.int);\n                    } \n                } else {\n                    if (lType == (org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int)) {\n                        if (rType == (org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int)) {\n                            n.putIntProp(org.mozilla.javascript.Node.org.mozilla.javascript.Node.int, org.mozilla.javascript.Node.org.mozilla.javascript.Node.int);\n                            return org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int;\n                        } else {\n                            n.putIntProp(org.mozilla.javascript.Node.org.mozilla.javascript.Node.int, org.mozilla.javascript.Node.org.mozilla.javascript.Node.int);\n                        }\n                    } else {\n                        if (rType == (org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int)) {\n                            n.putIntProp(org.mozilla.javascript.Node.org.mozilla.javascript.Node.int, org.mozilla.javascript.Node.org.mozilla.javascript.Node.int);\n                        } \n                    }\n                }\n            }\n            return org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int;\n        }\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n        {\n            org.mozilla.javascript.Node org.mozilla.javascript.Node = n.getFirstChild();\n            org.mozilla.javascript.Node org.mozilla.javascript.Node = lChild.getNext();\n            int int = rewriteForNumberVariables(lChild, org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int);\n            int int = rewriteForNumberVariables(rChild, org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int);\n            markDCPNumberContext(lChild);\n            markDCPNumberContext(rChild);\n            if (lType == (org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int)) {\n                if (rType == (org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int)) {\n                    n.putIntProp(org.mozilla.javascript.Node.org.mozilla.javascript.Node.int, org.mozilla.javascript.Node.org.mozilla.javascript.Node.int);\n                    return org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int;\n                } else {\n                    if (!(convertParameter(rChild))) {\n                        n.removeChild(rChild);\n                        n.addChildToBack(new org.mozilla.javascript.Node(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int , rChild));\n                        n.putIntProp(org.mozilla.javascript.Node.org.mozilla.javascript.Node.int, org.mozilla.javascript.Node.org.mozilla.javascript.Node.int);\n                    } \n                    return org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int;\n                }\n            } else {\n                if (rType == (org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int)) {\n                    if (!(convertParameter(lChild))) {\n                        n.removeChild(lChild);\n                        n.addChildToFront(new org.mozilla.javascript.Node(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int , lChild));\n                        n.putIntProp(org.mozilla.javascript.Node.org.mozilla.javascript.Node.int, org.mozilla.javascript.Node.org.mozilla.javascript.Node.int);\n                    } \n                    return org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int;\n                } else {\n                    if (!(convertParameter(lChild))) {\n                        n.removeChild(lChild);\n                        n.addChildToFront(new org.mozilla.javascript.Node(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int , lChild));\n                    } \n                    if (!(convertParameter(rChild))) {\n                        n.removeChild(rChild);\n                        n.addChildToBack(new org.mozilla.javascript.Node(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int , rChild));\n                    } \n                    n.putIntProp(org.mozilla.javascript.Node.org.mozilla.javascript.Node.int, org.mozilla.javascript.Node.org.mozilla.javascript.Node.int);\n                    return org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int;\n                }\n            }\n        }\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n        {\n            org.mozilla.javascript.Node org.mozilla.javascript.Node = n.getFirstChild();\n            org.mozilla.javascript.Node org.mozilla.javascript.Node = arrayBase.getNext();\n            org.mozilla.javascript.Node org.mozilla.javascript.Node = arrayIndex.getNext();\n            int int = rewriteForNumberVariables(arrayBase, org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int);\n            if (baseType == (org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int)) {\n                if (!(convertParameter(arrayBase))) {\n                    n.removeChild(arrayBase);\n                    n.addChildToFront(new org.mozilla.javascript.Node(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int , arrayBase));\n                } \n            } \n            int int = rewriteForNumberVariables(arrayIndex, org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int);\n            if (indexType == (org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int)) {\n                if (!(convertParameter(arrayIndex))) {\n                    n.putIntProp(org.mozilla.javascript.Node.org.mozilla.javascript.Node.int, org.mozilla.javascript.Node.org.mozilla.javascript.Node.int);\n                } \n            } \n            int int = rewriteForNumberVariables(rValue, org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int);\n            if (rValueType == (org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int)) {\n                if (!(convertParameter(rValue))) {\n                    n.removeChild(rValue);\n                    n.addChildToBack(new org.mozilla.javascript.Node(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int , rValue));\n                } \n            } \n            return org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int;\n        }\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n        {\n            org.mozilla.javascript.Node org.mozilla.javascript.Node = n.getFirstChild();\n            org.mozilla.javascript.Node org.mozilla.javascript.Node = arrayBase.getNext();\n            int int = rewriteForNumberVariables(arrayBase, org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int);\n            if (baseType == (org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int)) {\n                if (!(convertParameter(arrayBase))) {\n                    n.removeChild(arrayBase);\n                    n.addChildToFront(new org.mozilla.javascript.Node(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int , arrayBase));\n                } \n            } \n            int int = rewriteForNumberVariables(arrayIndex, org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int);\n            if (indexType == (org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int)) {\n                if (!(convertParameter(arrayIndex))) {\n                    n.putIntProp(org.mozilla.javascript.Node.org.mozilla.javascript.Node.int, org.mozilla.javascript.Node.org.mozilla.javascript.Node.int);\n                } \n            } \n            return org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int;\n        }\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n        {\n            org.mozilla.javascript.Node org.mozilla.javascript.Node = n.getFirstChild();\n            rewriteAsObjectChildren(child, child.getFirstChild());\n            child = child.getNext();\n            org.mozilla.javascript.optimizer.OptFunctionNode org.mozilla.javascript.optimizer.OptFunctionNode = ((org.mozilla.javascript.optimizer.OptFunctionNode)(n.getProp(org.mozilla.javascript.Node.org.mozilla.javascript.Node.int)));\n            if (target != null) {\n                while (child != null) {\n                    int int = rewriteForNumberVariables(child, org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int);\n                    if (type == (org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int)) {\n                        markDCPNumberContext(child);\n                    } \n                    child = child.getNext();\n                }\n            } else {\n                rewriteAsObjectChildren(n, child);\n            }\n            return org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int;\n        }\n    default :\n        {\n            rewriteAsObjectChildren(n, n.getFirstChild());\n            return org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int;\n        }\n}"},"status":-1}],"header":{"groupId":"r","transformationCount":2,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}