{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"4029ac87-89ce-11e6-a677-a5b9bad0d29e","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.FunctionObject:218","type":"CtReturnImpl","sourcecode":"return (int) < 0 ? 1 : int"},"variableMap":{"parmsLength":"org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase.loadLockCount"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase:171","type":"CtReturnImpl","sourcecode":"return org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase.org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase.int"},"status":-1},{"failures":[],"tindex":"4029ac88-89ce-11e6-a677-072689758933","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:493","type":"CtInvocationImpl","sourcecode":"cfw.addALoad(3)"},"status":-1},{"failures":[],"tindex":"4029d399-89ce-11e6-a677-01c3574356b0","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.regexp.NativeRegExp:433","type":"CtIfImpl","sourcecode":"if (ch < 128) {\n    if (('A' <= ch) && (ch <= 'Z')) {\n        return ((char)(ch + ('a' - 'A')));\n    } \n    return ch;\n} "},"variableMap":{"ch":"ch"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.regexp.NativeRegExp:428","type":"CtReturnImpl","sourcecode":"return cu < 128 ? ch : cu"},"status":-1},{"failures":[],"tindex":"4029d39a-89ce-11e6-a677-df7223fc4949","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.IRFactory:1726","type":"CtInvocationImpl","sourcecode":"catchScopeBlock.addChildToBack(catchScope)"},"variableMap":{"catchScope":"result","catchScopeBlock":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ScriptRuntime:1893","type":"CtIfImpl","sourcecode":"if (result != (org.mozilla.javascript.Scriptable.org.mozilla.javascript.Scriptable.java.lang.Object)) {\n    if (asFunctionCall) {\n        thisObj = org.mozilla.javascript.ScriptableObject.getTopLevelScope(parentScope);\n    } \n    break;\n} "},"status":-1},{"failures":[],"tindex":"4029d39b-89ce-11e6-a677-c766509bab43","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.regexp.NativeRegExp:258","type":"CtAssignmentImpl","sourcecode":"str = org.mozilla.javascript.ScriptRuntime.toString(args[0])"},"status":-1},{"failures":[],"tindex":"4029d39c-89ce-11e6-a677-e36504b57717","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.BaseFunction:276","type":"CtIfImpl","sourcecode":"if (indent >= 0) {\n    flags = 0;\n} else {\n    indent = 0;\n}"},"variableMap":{"indent":"i","flags":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.IRFactory:883","type":"CtIfImpl","sourcecode":"if (i < size) {\n    org.mozilla.javascript.Decompiler.addToken(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int);\n} "},"status":-1},{"failures":[],"tindex":"4029d39d-89ce-11e6-a677-e767cee7c98d","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.regexp.NativeRegExp:1215","type":"CtReturnImpl","sourcecode":"return pc + 2"},"variableMap":{"pc":"endLineno"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ast.ScriptNode:152","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"4029d39e-89ce-11e6-a677-494c8e0aac6b","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.NativeDate:1127","type":"CtIfImpl","sourcecode":"if (sec < 0)\n    sec = 0;\n"},"variableMap":{"sec":"insertPos"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ScriptableObject:3013","type":"CtInvocationImpl","sourcecode":"org.mozilla.javascript.ScriptableObject.addKnownAbsentSlot(newSlots, insSlot, insertPos)"},"status":-1},{"failures":[],"tindex":"4029d39f-89ce-11e6-a677-2115b1b4939e","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.v8dtoa.DiyFp:53","type":"CtAssignmentImpl","sourcecode":"org.mozilla.javascript.v8dtoa.DiyFp.this.long = f"},"variableMap":{"f":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeArray:1248","type":"CtAssignmentImpl","sourcecode":"count = ((long)(dcount))"},"status":-1},{"failures":[],"tindex":"4029fab0-89ce-11e6-a677-1b3ab5a9f7ba","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.NodeTransformer:286","type":"CtIfImpl","sourcecode":"if ((n.getType()) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n    if (!(n.hasChildren()))\n        continue;\n    \n    org.mozilla.javascript.Node org.mozilla.javascript.Node = n.getFirstChild();\n    n.removeChild(init);\n    n.setType(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int);\n    n = new org.mozilla.javascript.Node((type == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int) ? org.mozilla.javascript.Token.org.mozilla.javascript.Token.int : org.mozilla.javascript.Token.org.mozilla.javascript.Token.int) , n , init);\n} else {\n    if ((n.getType()) != (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))\n        throw org.mozilla.javascript.Kit.codeBug();\n    \n}"},"variableMap":{"org.mozilla.javascript.Token.LETEXPR":"org.mozilla.javascript.optimizer.Optimizer.NumberType","org.mozilla.javascript.Token.NAME":"baseType","org.mozilla.javascript.Token.CONST":"baseType","org.mozilla.javascript.Token.SETCONST":"org.mozilla.javascript.Token.TO_OBJECT","org.mozilla.javascript.Token.BINDNAME":"baseType","type":"org.mozilla.javascript.optimizer.Optimizer.NumberType","n":"n","org.mozilla.javascript.Token.SETNAME":"org.mozilla.javascript.optimizer.Optimizer.NumberType"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Optimizer:355","type":"CtIfImpl","sourcecode":"if (baseType == (org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int)) {\n    if (!(convertParameter(arrayBase))) {\n        n.removeChild(arrayBase);\n        n.addChildToFront(new org.mozilla.javascript.Node(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int , arrayBase));\n    } \n} "},"status":-1}],"header":{"groupId":"r","transformationCount":10,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}