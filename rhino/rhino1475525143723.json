{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"c3ff5097-89a4-11e6-9098-fb1550b78d4e","series":0,"name":"replace","transplant":{"position":"org.mozilla.classfile.ClassFileWriter:707","type":"CtIfImpl","sourcecode":"if (!((0 <= theOperand2) && (theOperand2 < 65536)))\n    throw new org.mozilla.classfile.ClassFileWriter.ClassFileFormatException(\"out of range increment\");\n"},"variableMap":{"theOperand2":"limit"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.classfile.ClassFileWriter:965","type":"CtIfImpl","sourcecode":"if (limit == length) {\n    break;\n} "},"status":-1},{"failures":[],"tindex":"c3ff77a8-89a4-11e6-9098-256f618f4b23","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.BaseFunction:462","type":"CtIfImpl","sourcecode":"if ((java.lang.Object) != null) {\n    return java.lang.Object;\n} "},"variableMap":{"prototypeProperty":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeJavaObject:476","type":"CtSwitchImpl","sourcecode":"switch (org.mozilla.javascript.NativeJavaObject.getJSTypeCode(value)) {\n    case org.mozilla.javascript.NativeJavaObject.org.mozilla.javascript.NativeJavaObject.int :\n        if (type.isPrimitive()) {\n            org.mozilla.javascript.NativeJavaObject.reportConversionError(value, type);\n        } \n        return null;\n    case org.mozilla.javascript.NativeJavaObject.org.mozilla.javascript.NativeJavaObject.int :\n        if ((type == (org.mozilla.javascript.ScriptRuntime.org.mozilla.javascript.ScriptRuntime.java.lang.Class<?>)) || (type == (org.mozilla.javascript.ScriptRuntime.org.mozilla.javascript.ScriptRuntime.java.lang.Class<?>))) {\n            return \"undefined\";\n        } else {\n            org.mozilla.javascript.NativeJavaObject.reportConversionError(\"undefined\", type);\n        }\n        break;\n    case org.mozilla.javascript.NativeJavaObject.org.mozilla.javascript.NativeJavaObject.int :\n        if (((type == (java.lang.Boolean.java.lang.Boolean.java.lang.Class<java.lang.Boolean>)) || (type == (org.mozilla.javascript.ScriptRuntime.org.mozilla.javascript.ScriptRuntime.java.lang.Class<?>))) || (type == (org.mozilla.javascript.ScriptRuntime.org.mozilla.javascript.ScriptRuntime.java.lang.Class<?>))) {\n            return value;\n        } else if (type == (org.mozilla.javascript.ScriptRuntime.org.mozilla.javascript.ScriptRuntime.java.lang.Class<?>)) {\n            return value.toString();\n        } else {\n            org.mozilla.javascript.NativeJavaObject.reportConversionError(value, type);\n        }\n        break;\n    case org.mozilla.javascript.NativeJavaObject.org.mozilla.javascript.NativeJavaObject.int :\n        if (type == (org.mozilla.javascript.ScriptRuntime.org.mozilla.javascript.ScriptRuntime.java.lang.Class<?>)) {\n            return org.mozilla.javascript.ScriptRuntime.toString(value);\n        } else if (type == (org.mozilla.javascript.ScriptRuntime.org.mozilla.javascript.ScriptRuntime.java.lang.Class<?>)) {\n            return org.mozilla.javascript.NativeJavaObject.coerceToNumber(java.lang.Double.java.lang.Double.java.lang.Class<java.lang.Double>, value);\n        } else if (((type.isPrimitive()) && (type != (java.lang.Boolean.java.lang.Boolean.java.lang.Class<java.lang.Boolean>))) || (org.mozilla.javascript.ScriptRuntime.org.mozilla.javascript.ScriptRuntime.java.lang.Class<?>.isAssignableFrom(type))) {\n            return org.mozilla.javascript.NativeJavaObject.coerceToNumber(type, value);\n        } else {\n            org.mozilla.javascript.NativeJavaObject.reportConversionError(value, type);\n        }\n        break;\n    case org.mozilla.javascript.NativeJavaObject.org.mozilla.javascript.NativeJavaObject.int :\n        if ((type == (org.mozilla.javascript.ScriptRuntime.org.mozilla.javascript.ScriptRuntime.java.lang.Class<?>)) || (type.isInstance(value))) {\n            return value.toString();\n        } else if ((type == (java.lang.Character.java.lang.Character.java.lang.Class<java.lang.Character>)) || (type == (org.mozilla.javascript.ScriptRuntime.org.mozilla.javascript.ScriptRuntime.java.lang.Class<?>))) {\n            if ((((java.lang.CharSequence)(value)).length()) == 1) {\n                return java.lang.Character.valueOf(((java.lang.CharSequence)(value)).charAt(0));\n            } else {\n                return org.mozilla.javascript.NativeJavaObject.coerceToNumber(type, value);\n            }\n        } else if (((type.isPrimitive()) && (type != (java.lang.Boolean.java.lang.Boolean.java.lang.Class<java.lang.Boolean>))) || (org.mozilla.javascript.ScriptRuntime.org.mozilla.javascript.ScriptRuntime.java.lang.Class<?>.isAssignableFrom(type))) {\n            return org.mozilla.javascript.NativeJavaObject.coerceToNumber(type, value);\n        } else {\n            org.mozilla.javascript.NativeJavaObject.reportConversionError(value, type);\n        }\n        break;\n    case org.mozilla.javascript.NativeJavaObject.org.mozilla.javascript.NativeJavaObject.int :\n        if (value instanceof org.mozilla.javascript.Wrapper) {\n            value = ((org.mozilla.javascript.Wrapper)(value)).unwrap();\n        } \n        if ((type == (org.mozilla.javascript.ScriptRuntime.org.mozilla.javascript.ScriptRuntime.java.lang.Class<?>)) || (type == (org.mozilla.javascript.ScriptRuntime.org.mozilla.javascript.ScriptRuntime.java.lang.Class<?>))) {\n            return value;\n        } else if (type == (org.mozilla.javascript.ScriptRuntime.org.mozilla.javascript.ScriptRuntime.java.lang.Class<?>)) {\n            return value.toString();\n        } else {\n            org.mozilla.javascript.NativeJavaObject.reportConversionError(value, type);\n        }\n        break;\n    case org.mozilla.javascript.NativeJavaObject.org.mozilla.javascript.NativeJavaObject.int :\n    case org.mozilla.javascript.NativeJavaObject.org.mozilla.javascript.NativeJavaObject.int :\n        if (value instanceof org.mozilla.javascript.Wrapper) {\n            value = ((org.mozilla.javascript.Wrapper)(value)).unwrap();\n        } \n        if (type.isPrimitive()) {\n            if (type == (java.lang.Boolean.java.lang.Boolean.java.lang.Class<java.lang.Boolean>)) {\n                org.mozilla.javascript.NativeJavaObject.reportConversionError(value, type);\n            } \n            return org.mozilla.javascript.NativeJavaObject.coerceToNumber(type, value);\n        } else {\n            if (type == (org.mozilla.javascript.ScriptRuntime.org.mozilla.javascript.ScriptRuntime.java.lang.Class<?>)) {\n                return value.toString();\n            } else {\n                if (type.isInstance(value)) {\n                    return value;\n                } else {\n                    org.mozilla.javascript.NativeJavaObject.reportConversionError(value, type);\n                }\n            }\n        }\n        break;\n    case org.mozilla.javascript.NativeJavaObject.org.mozilla.javascript.NativeJavaObject.int :\n        if (type == (org.mozilla.javascript.ScriptRuntime.org.mozilla.javascript.ScriptRuntime.java.lang.Class<?>)) {\n            return org.mozilla.javascript.ScriptRuntime.toString(value);\n        } else if (type.isPrimitive()) {\n            if (type == (java.lang.Boolean.java.lang.Boolean.java.lang.Class<java.lang.Boolean>)) {\n                org.mozilla.javascript.NativeJavaObject.reportConversionError(value, type);\n            } \n            return org.mozilla.javascript.NativeJavaObject.coerceToNumber(type, value);\n        } else if (type.isInstance(value)) {\n            return value;\n        } else if ((type == (org.mozilla.javascript.ScriptRuntime.org.mozilla.javascript.ScriptRuntime.java.lang.Class<?>)) && (value instanceof org.mozilla.javascript.NativeDate)) {\n            double double = ((org.mozilla.javascript.NativeDate)(value)).getJSTimeValue();\n            return new java.util.Date(((long)(time)));\n        } else if ((type.isArray()) && (value instanceof org.mozilla.javascript.NativeArray)) {\n            org.mozilla.javascript.NativeArray org.mozilla.javascript.NativeArray = ((org.mozilla.javascript.NativeArray)(value));\n            long long = array.getLength();\n            java.lang.Class<?> java.lang.Class<?> = type.getComponentType();\n            java.lang.Object java.lang.Object = java.lang.reflect.Array.newInstance(arrayType, ((int)(length)));\n            for (int int = 0 ; i < length ; ++i) {\n                try {\n                    java.lang.reflect.Array.set(Result, i, org.mozilla.javascript.NativeJavaObject.coerceTypeImpl(arrayType, array.get(i, array)));\n                } catch (org.mozilla.javascript.EvaluatorException ee) {\n                    org.mozilla.javascript.NativeJavaObject.reportConversionError(value, type);\n                }\n            }\n            return Result;\n        } else if (value instanceof org.mozilla.javascript.Wrapper) {\n            value = ((org.mozilla.javascript.Wrapper)(value)).unwrap();\n            if (type.isInstance(value))\n                return value;\n            \n            org.mozilla.javascript.NativeJavaObject.reportConversionError(value, type);\n        } else if ((type.isInterface()) && ((value instanceof org.mozilla.javascript.NativeObject) || (value instanceof org.mozilla.javascript.NativeFunction))) {\n            return org.mozilla.javascript.NativeJavaObject.createInterfaceAdapter(type, ((org.mozilla.javascript.ScriptableObject)(value)));\n        } else {\n            org.mozilla.javascript.NativeJavaObject.reportConversionError(value, type);\n        }\n        break;\n}"},"status":-1},{"failures":[],"tindex":"c3ff9eb9-89a4-11e6-9098-f1366174d400","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.ast.BreakStatement:89","type":"CtInvocationImpl","sourcecode":"sb.append(\";\\n\")"},"variableMap":{"sb":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeDate:1199","type":"CtInvocationImpl","sourcecode":"result.append(\" (\")"},"status":-1},{"failures":[],"tindex":"c3ff9eba-89a4-11e6-9098-e1b9178769a2","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.IRFactory:1042","type":"CtLocalVariableImpl","sourcecode":"org.mozilla.javascript.Node org.mozilla.javascript.Node = new org.mozilla.javascript.ast.Block()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.IRFactory:1749","type":"CtLocalVariableImpl","sourcecode":"org.mozilla.javascript.Node org.mozilla.javascript.Node = org.mozilla.javascript.Node.newTarget()"},"status":-1},{"failures":[],"tindex":"c3ffc5cb-89a4-11e6-9098-2bbb1435e385","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.ScriptableObject:1380","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = \"jsConstructor\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:73","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = ((\"org.mozilla.javascript.gen.\" + baseName) + \"_\") + serial"},"status":-1},{"failures":[],"tindex":"c3ffc5cc-89a4-11e6-9098-3d6b56786695","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.IRFactory:1827","type":"CtSwitchImpl","sourcecode":"switch (nodeType) {\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n        {\n            org.mozilla.javascript.Node org.mozilla.javascript.Node;\n            if (childType == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n                child.setType(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int);\n                org.mozilla.javascript.Node org.mozilla.javascript.Node = child;\n                org.mozilla.javascript.Node org.mozilla.javascript.Node = org.mozilla.javascript.Node.newString(child.getString());\n                n = new org.mozilla.javascript.Node(nodeType , left , right);\n            } else if ((childType == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) || (childType == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))) {\n                org.mozilla.javascript.Node org.mozilla.javascript.Node = child.getFirstChild();\n                org.mozilla.javascript.Node org.mozilla.javascript.Node = child.getLastChild();\n                child.removeChild(left);\n                child.removeChild(right);\n                n = new org.mozilla.javascript.Node(nodeType , left , right);\n            } else if (childType == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n                org.mozilla.javascript.Node org.mozilla.javascript.Node = child.getFirstChild();\n                child.removeChild(ref);\n                n = new org.mozilla.javascript.Node(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int , ref);\n            } else {\n                n = new org.mozilla.javascript.Node(nodeType , new org.mozilla.javascript.Node(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int) , child);\n            }\n            return n;\n        }\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n        if (childType == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n            child.setType(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int);\n            return child;\n        } \n        break;\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n        if (childType == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n            int int = org.mozilla.javascript.ScriptRuntime.toInt32(child.getDouble());\n            child.setDouble((~value));\n            return child;\n        } \n        break;\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n        if (childType == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n            child.setDouble((-(child.getDouble())));\n            return child;\n        } \n        break;\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n        {\n            int int = org.mozilla.javascript.IRFactory.isAlwaysDefinedBoolean(child);\n            if (status != 0) {\n                int int;\n                if (status == (org.mozilla.javascript.IRFactory.org.mozilla.javascript.IRFactory.int)) {\n                    type = org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n                } else {\n                    type = org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n                }\n                if ((childType == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) || (childType == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))) {\n                    child.setType(type);\n                    return child;\n                } \n                return new org.mozilla.javascript.Node(type);\n            } \n            break;\n        }\n}"},"variableMap":{"childType":"org.mozilla.javascript.Token.NAME","org.mozilla.javascript.Token.GET_REF":"org.mozilla.javascript.Token.DEC","org.mozilla.javascript.Token.NAME":"org.mozilla.javascript.Node.POST_FLAG","org.mozilla.javascript.Token.GETELEM":"org.mozilla.javascript.Node.DECR_FLAG","org.mozilla.javascript.Token.DEL_REF":"org.mozilla.javascript.Token.DEC","org.mozilla.javascript.Token.BINDNAME":"org.mozilla.javascript.Node.INCRDECR_PROP","nodeType":"org.mozilla.javascript.Token.NAME","org.mozilla.javascript.IRFactory.ALWAYS_TRUE_BOOLEAN":"org.mozilla.javascript.Node.DECR_FLAG","org.mozilla.javascript.Token.NOT":"org.mozilla.javascript.Token.GETPROP","org.mozilla.javascript.Token.DELPROP":"nodeType","org.mozilla.javascript.Token.TYPEOFNAME":"org.mozilla.javascript.Token.GETPROP","org.mozilla.javascript.Token.FALSE":"org.mozilla.javascript.Node.DECR_FLAG","org.mozilla.javascript.Token.NEG":"org.mozilla.javascript.Node.POST_FLAG","org.mozilla.javascript.Token.TRUE":"org.mozilla.javascript.Node.INCRDECR_PROP","org.mozilla.javascript.Token.GETPROP":"childType","org.mozilla.javascript.Token.NUMBER":"org.mozilla.javascript.Token.NAME","org.mozilla.javascript.Token.TYPEOF":"org.mozilla.javascript.Token.NAME","org.mozilla.javascript.Token.BITNOT":"org.mozilla.javascript.Node.DECR_FLAG","child":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.IRFactory:1924","type":"CtSwitchImpl","sourcecode":"switch (childType) {\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n        {\n            org.mozilla.javascript.Node org.mozilla.javascript.Node = new org.mozilla.javascript.Node(nodeType , child);\n            int int = 0;\n            if (nodeType == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n                incrDecrMask |= org.mozilla.javascript.Node.org.mozilla.javascript.Node.int;\n            } \n            if (post) {\n                incrDecrMask |= org.mozilla.javascript.Node.org.mozilla.javascript.Node.int;\n            } \n            n.putIntProp(org.mozilla.javascript.Node.org.mozilla.javascript.Node.int, incrDecrMask);\n            return n;\n        }\n}"},"status":-1}],"header":{"groupId":"r","transformationCount":6,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}