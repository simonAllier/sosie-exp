{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"c2a70ec8-8b88-11e6-9a70-57b5d90b6f40","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.ScriptableObject:2556","type":"CtAssignmentImpl","sourcecode":"result = null"},"variableMap":{"result":"k"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeJSON:355","type":"CtAssignmentImpl","sourcecode":"k = value.getIds()"},"status":-1},{"failures":[],"tindex":"c2a70ec9-8b88-11e6-9a70-eb4a816bd2f0","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.Interpreter:2885","type":"CtAssignmentImpl","sourcecode":"scope = scope.getParentScope()"},"variableMap":{"scope":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ScriptableObject:2539","type":"CtAssignmentImpl","sourcecode":"obj = obj.getPrototype()"},"status":-1},{"failures":[],"tindex":"c2a70eca-8b88-11e6-9a70-d9417c92aac1","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.NativeString:265","type":"CtIfImpl","sourcecode":"if (id == (org.mozilla.javascript.NativeString.org.mozilla.javascript.NativeString.int))\n    return \"\";\nelse\n    return org.mozilla.javascript.ScriptRuntime.org.mozilla.javascript.ScriptRuntime.java.lang.Double;\n"},"variableMap":{"org.mozilla.javascript.NativeString.Id_charAt":"pos","org.mozilla.javascript.ScriptRuntime.NaNobj":"value","id":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.json.JsonParser:99","type":"CtWhileImpl","sourcecode":"while ((int) < (int)) {\n    char char = java.lang.String.charAt(((int)++));\n    switch (c) {\n        case '}' :\n            if (!needsComma) {\n                throw new org.mozilla.javascript.json.JsonParser.ParseException(\"Unexpected comma in object literal\");\n            } \n            return object;\n        case ',' :\n            if (!needsComma) {\n                throw new org.mozilla.javascript.json.JsonParser.ParseException(\"Unexpected comma in object literal\");\n            } \n            needsComma = false;\n            break;\n        case '\"' :\n            if (needsComma) {\n                throw new org.mozilla.javascript.json.JsonParser.ParseException(\"Missing comma in object literal\");\n            } \n            id = readString();\n            consume(':');\n            value = readValue();\n            long long = org.mozilla.javascript.ScriptRuntime.indexFromString(id);\n            if (index < 0) {\n                object.put(id, object, value);\n            } else {\n                object.put(((int)(index)), object, value);\n            }\n            needsComma = true;\n            break;\n        default :\n            throw new org.mozilla.javascript.json.JsonParser.ParseException(\"Unexpected token in object literal\");\n    }\n    consumeWhitespace();\n}"},"status":-1},{"failures":[],"tindex":"c2a735db-8b88-11e6-9a70-91fe0d3242cb","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.ScriptableObject:1679","type":"CtAssignmentImpl","sourcecode":"buf[2] = 't'"},"variableMap":{"buf":"src"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.regexp.NativeRegExp:1149","type":"CtAssignmentImpl","sourcecode":"c = src[(++(state.int))]"},"status":-1},{"failures":[],"tindex":"c2a735dc-8b88-11e6-9a70-75b693456e66","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.DToA:567","type":"CtIfImpl","sourcecode":"if (j >= 0) {\n    b2 = 0;\n    s2 = j;\n} else {\n    b2 = -j;\n    s2 = 0;\n}"},"variableMap":{"b2":"strLen","j":"strLen","s2":"strLen"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.classfile.ClassFileWriter:4550","type":"CtInvocationImpl","sourcecode":"ensure(((1 + 2) + (strLen * 3)))"},"status":-1},{"failures":[],"tindex":"c2a735dd-8b88-11e6-9a70-2baf4254d1c7","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.FunctionObject:249","type":"CtLocalVariableImpl","sourcecode":"java.lang.reflect.Method java.lang.reflect.Method = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.JavaAdapter:422","type":"CtLocalVariableImpl","sourcecode":"java.lang.reflect.Method java.lang.reflect.Method = methods[j]"},"status":-1},{"failures":[],"tindex":"c2a735de-8b88-11e6-9a70-a15109b66593","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:4550","type":"CtIfImpl","sourcecode":"if (!(org.mozilla.javascript.optimizer.BodyCodegen.isArithmeticNode(child)))\n    addObjectToDouble();\n"},"status":-1},{"failures":[],"tindex":"c2a735df-8b88-11e6-9a70-fde58cacf62a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:1372","type":"CtInvocationImpl","sourcecode":"org.mozilla.classfile.ClassFileWriter.addLoadConstant(int)"},"status":-1},{"failures":[],"tindex":"c2a735e0-8b88-11e6-9a70-6fcd6cd9f6d8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.typedarrays.NativeFloat32Array:78","type":"CtIfImpl","sourcecode":"if (checkIndex(index)) {\n    return org.mozilla.javascript.Undefined.org.mozilla.javascript.Undefined.java.lang.Object;\n} "},"status":-1},{"failures":[],"tindex":"c2a735e1-8b88-11e6-9a70-cb6205bf138e","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.CodeGenerator:1244","type":"CtIfImpl","sourcecode":"if (!(org.mozilla.javascript.Icode.validTokenCode(token)))\n    throw org.mozilla.javascript.Kit.codeBug();\n"},"variableMap":{"token":"org.mozilla.javascript.ast.FunctionNode.FUNCTION_STATEMENT"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:197","type":"CtIfImpl","sourcecode":"if ((tree.getType()) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n    int int = tree.getFunctionCount();\n    for (int int = 0 ; i != functionCount ; ++i) {\n        org.mozilla.javascript.optimizer.OptFunctionNode org.mozilla.javascript.optimizer.OptFunctionNode = org.mozilla.javascript.optimizer.OptFunctionNode.get(tree, i);\n        if ((ofn.org.mozilla.javascript.ast.FunctionNode.getFunctionType()) == (org.mozilla.javascript.ast.FunctionNode.org.mozilla.javascript.ast.FunctionNode.int)) {\n            java.lang.String java.lang.String = ofn.org.mozilla.javascript.ast.FunctionNode.getName();\n            if ((name.length()) != 0) {\n                if (possibleDirectCalls == null) {\n                    possibleDirectCalls = new java.util.HashMap<java.lang.String, org.mozilla.javascript.optimizer.OptFunctionNode>();\n                } \n                possibleDirectCalls.put(name, ofn);\n            } \n        } \n    }\n} "},"status":-1}],"header":{"groupId":"r","transformationCount":10,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}