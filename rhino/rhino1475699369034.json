{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"6a607925-8b3a-11e6-ba51-69a4dfee88b4","series":0,"name":"replace","transplant":{"position":"org.mozilla.classfile.ClassFileWriter:1381","type":"CtIfImpl","sourcecode":"if ((handlerLabel & -2147483648) != -2147483648)\n    throw new java.lang.IllegalArgumentException(\"Bad handlerLabel\");\n"},"variableMap":{"handlerLabel":"localsTop"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.classfile.ClassFileWriter:1739","type":"CtIfImpl","sourcecode":"if (isBranch(bc)) {\n    org.mozilla.classfile.SuperBlock org.mozilla.classfile.SuperBlock = getBranchTarget(bci);\n    if (org.mozilla.classfile.ClassFileWriter.StackMapTable.org.mozilla.classfile.ClassFileWriter.StackMapTable.boolean) {\n        java.lang.System.java.lang.System.java.io.PrintStream.println(((((((((\"sb \" + (work.getIndex())) + \" points to sb \") + (targetSB.getIndex())) + \" (offset \") + bci) + \" -> \") + (targetSB.getStart())) + \")\"));\n        java.lang.System.java.lang.System.java.io.PrintStream.println(((\"type state at \" + bci) + \":\"));\n        org.mozilla.classfile.TypeInfo.print(int[], int, int[], int, org.mozilla.classfile.ConstantPool);\n    } \n    flowInto(targetSB);\n    if (org.mozilla.classfile.ClassFileWriter.StackMapTable.org.mozilla.classfile.ClassFileWriter.StackMapTable.boolean) {\n        java.lang.System.java.lang.System.java.io.PrintStream.println(((\"type state of \" + targetSB) + \" after merge:\"));\n        org.mozilla.classfile.TypeInfo.print(targetSB.getLocals(), targetSB.getStack(), org.mozilla.classfile.ConstantPool);\n    } \n} else if (bc == (org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int)) {\n    int int = (bci + 1) + (3 & (~bci));\n    int int = getOperand(switchStart, 4);\n    org.mozilla.classfile.SuperBlock org.mozilla.classfile.SuperBlock = getSuperBlockFromOffset((bci + defaultOffset));\n    if (org.mozilla.classfile.ClassFileWriter.org.mozilla.classfile.ClassFileWriter.boolean) {\n        java.lang.System.java.lang.System.java.io.PrintStream.println((((\"merging sb \" + (work.getIndex())) + \" with sb \") + (targetSB.getIndex())));\n    } \n    flowInto(targetSB);\n    int int = getOperand((switchStart + 4), 4);\n    int int = getOperand((switchStart + 8), 4);\n    int int = (high - low) + 1;\n    int int = switchStart + 12;\n    for (int int = 0 ; i < numCases ; i++) {\n        int int = bci + (getOperand((caseBase + (4 * i)), 4));\n        targetSB = getSuperBlockFromOffset(label);\n        if (org.mozilla.classfile.ClassFileWriter.StackMapTable.org.mozilla.classfile.ClassFileWriter.StackMapTable.boolean) {\n            java.lang.System.java.lang.System.java.io.PrintStream.println((((\"merging sb \" + (work.getIndex())) + \" with sb \") + (targetSB.getIndex())));\n        } \n        flowInto(targetSB);\n    }\n} "},"status":-1}],"header":{"groupId":"r","transformationCount":1,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}