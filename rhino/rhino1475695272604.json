{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"e0cbc35f-8b30-11e6-9573-7736fd47f87b","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.NativeDate:756","type":"CtAssignmentImpl","sourcecode":"array[loop] = 1"},"variableMap":{"array":"array","loop":"loop"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeDate:758","type":"CtAssignmentImpl","sourcecode":"array[loop] = 0"},"status":-1},{"failures":[],"tindex":"e0cc1180-8b30-11e6-9573-47304796a70e","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.optimizer.Codegen:1287","type":"CtAssignmentImpl","sourcecode":"treeTop = org.mozilla.javascript.ast.ScriptNode"},"variableMap":{"scriptOrFn":"result","treeTop":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NodeTransformer:422","type":"CtAssignmentImpl","sourcecode":"result = new org.mozilla.javascript.Node((isExpression ? org.mozilla.javascript.Token.org.mozilla.javascript.Token.int : org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))"},"status":-1},{"failures":[],"tindex":"e0cc1181-8b30-11e6-9573-7159ba941610","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.regexp.NativeRegExpCtor:121","type":"CtBlockImpl","sourcecode":"L0 : {\n    id = 0;\n    java.lang.String java.lang.String = null;\n    int int;\n    L : switch (s.length()) {\n        case 2 :\n            switch (s.charAt(1)) {\n                case '&' :\n                    if ((s.charAt(0)) == '$') {\n                        id = org.mozilla.javascript.regexp.NativeRegExpCtor.org.mozilla.javascript.regexp.NativeRegExpCtor.int;\n                        break L0;\n                    } \n                    break L;\n                case '\\'' :\n                    if ((s.charAt(0)) == '$') {\n                        id = org.mozilla.javascript.regexp.NativeRegExpCtor.org.mozilla.javascript.regexp.NativeRegExpCtor.int;\n                        break L0;\n                    } \n                    break L;\n                case '*' :\n                    if ((s.charAt(0)) == '$') {\n                        id = org.mozilla.javascript.regexp.NativeRegExpCtor.org.mozilla.javascript.regexp.NativeRegExpCtor.int;\n                        break L0;\n                    } \n                    break L;\n                case '+' :\n                    if ((s.charAt(0)) == '$') {\n                        id = org.mozilla.javascript.regexp.NativeRegExpCtor.org.mozilla.javascript.regexp.NativeRegExpCtor.int;\n                        break L0;\n                    } \n                    break L;\n                case '1' :\n                    if ((s.charAt(0)) == '$') {\n                        id = org.mozilla.javascript.regexp.NativeRegExpCtor.org.mozilla.javascript.regexp.NativeRegExpCtor.int;\n                        break L0;\n                    } \n                    break L;\n                case '2' :\n                    if ((s.charAt(0)) == '$') {\n                        id = org.mozilla.javascript.regexp.NativeRegExpCtor.org.mozilla.javascript.regexp.NativeRegExpCtor.int;\n                        break L0;\n                    } \n                    break L;\n                case '3' :\n                    if ((s.charAt(0)) == '$') {\n                        id = org.mozilla.javascript.regexp.NativeRegExpCtor.org.mozilla.javascript.regexp.NativeRegExpCtor.int;\n                        break L0;\n                    } \n                    break L;\n                case '4' :\n                    if ((s.charAt(0)) == '$') {\n                        id = org.mozilla.javascript.regexp.NativeRegExpCtor.org.mozilla.javascript.regexp.NativeRegExpCtor.int;\n                        break L0;\n                    } \n                    break L;\n                case '5' :\n                    if ((s.charAt(0)) == '$') {\n                        id = org.mozilla.javascript.regexp.NativeRegExpCtor.org.mozilla.javascript.regexp.NativeRegExpCtor.int;\n                        break L0;\n                    } \n                    break L;\n                case '6' :\n                    if ((s.charAt(0)) == '$') {\n                        id = org.mozilla.javascript.regexp.NativeRegExpCtor.org.mozilla.javascript.regexp.NativeRegExpCtor.int;\n                        break L0;\n                    } \n                    break L;\n                case '7' :\n                    if ((s.charAt(0)) == '$') {\n                        id = org.mozilla.javascript.regexp.NativeRegExpCtor.org.mozilla.javascript.regexp.NativeRegExpCtor.int;\n                        break L0;\n                    } \n                    break L;\n                case '8' :\n                    if ((s.charAt(0)) == '$') {\n                        id = org.mozilla.javascript.regexp.NativeRegExpCtor.org.mozilla.javascript.regexp.NativeRegExpCtor.int;\n                        break L0;\n                    } \n                    break L;\n                case '9' :\n                    if ((s.charAt(0)) == '$') {\n                        id = org.mozilla.javascript.regexp.NativeRegExpCtor.org.mozilla.javascript.regexp.NativeRegExpCtor.int;\n                        break L0;\n                    } \n                    break L;\n                case '_' :\n                    if ((s.charAt(0)) == '$') {\n                        id = org.mozilla.javascript.regexp.NativeRegExpCtor.org.mozilla.javascript.regexp.NativeRegExpCtor.int;\n                        break L0;\n                    } \n                    break L;\n                case '`' :\n                    if ((s.charAt(0)) == '$') {\n                        id = org.mozilla.javascript.regexp.NativeRegExpCtor.org.mozilla.javascript.regexp.NativeRegExpCtor.int;\n                        break L0;\n                    } \n                    break L;\n            }\n            break L;\n        case 5 :\n            X = \"input\";\n            id = org.mozilla.javascript.regexp.NativeRegExpCtor.org.mozilla.javascript.regexp.NativeRegExpCtor.int;\n            break L;\n        case 9 :\n            c = s.charAt(4);\n            if (c == 'M') {\n                X = \"lastMatch\";\n                id = org.mozilla.javascript.regexp.NativeRegExpCtor.org.mozilla.javascript.regexp.NativeRegExpCtor.int;\n            } else if (c == 'P') {\n                X = \"lastParen\";\n                id = org.mozilla.javascript.regexp.NativeRegExpCtor.org.mozilla.javascript.regexp.NativeRegExpCtor.int;\n            } else if (c == 'i') {\n                X = \"multiline\";\n                id = org.mozilla.javascript.regexp.NativeRegExpCtor.org.mozilla.javascript.regexp.NativeRegExpCtor.int;\n            } \n            break L;\n        case 11 :\n            X = \"leftContext\";\n            id = org.mozilla.javascript.regexp.NativeRegExpCtor.org.mozilla.javascript.regexp.NativeRegExpCtor.int;\n            break L;\n        case 12 :\n            X = \"rightContext\";\n            id = org.mozilla.javascript.regexp.NativeRegExpCtor.org.mozilla.javascript.regexp.NativeRegExpCtor.int;\n            break L;\n    }\n    if (((X != null) && (X != s)) && (!(X.equals(s))))\n        id = 0;\n    \n}"},"variableMap":{"org.mozilla.javascript.regexp.NativeRegExpCtor.Id_lastParen":"Do_getEncodedSource","org.mozilla.javascript.regexp.NativeRegExpCtor.Id_leftContext":"Do_getParamAndVarCount","org.mozilla.javascript.regexp.NativeRegExpCtor.Id_multiline":"Do_getParamCount","org.mozilla.javascript.regexp.NativeRegExpCtor.Id_QUOTE":"SWITCH_COUNT","org.mozilla.javascript.regexp.NativeRegExpCtor.Id_lastMatch":"org.mozilla.classfile.ByteCode.ICONST_0","org.mozilla.javascript.regexp.NativeRegExpCtor.Id_input":"org.mozilla.classfile.ByteCode.GETFIELD","org.mozilla.javascript.regexp.NativeRegExpCtor.Id_STAR":"org.mozilla.classfile.ByteCode.ICONST_0","org.mozilla.javascript.regexp.NativeRegExpCtor.Id_BACK_QUOTE":"Do_getParamAndVarCount","org.mozilla.javascript.regexp.NativeRegExpCtor.Id_rightContext":"org.mozilla.classfile.ByteCode.GETFIELD","org.mozilla.javascript.regexp.NativeRegExpCtor.Id_AMPERSAND":"length","org.mozilla.javascript.regexp.NativeRegExpCtor.Id_DOLLAR_9":"Do_getParamAndVarCount","s":"encodedSource","org.mozilla.javascript.regexp.NativeRegExpCtor.Id_UNDERSCORE":"org.mozilla.classfile.ByteCode.ACONST_NULL","org.mozilla.javascript.regexp.NativeRegExpCtor.Id_PLUS":"Do_getParamOrVarConst","org.mozilla.javascript.regexp.NativeRegExpCtor.Id_DOLLAR_7":"org.mozilla.javascript.Token.SCRIPT","org.mozilla.javascript.regexp.NativeRegExpCtor.Id_DOLLAR_8":"Do_getEncodedSource","org.mozilla.javascript.regexp.NativeRegExpCtor.Id_DOLLAR_5":"Do_getParamCount","org.mozilla.javascript.regexp.NativeRegExpCtor.Id_DOLLAR_6":"org.mozilla.javascript.Token.SCRIPT","org.mozilla.javascript.regexp.NativeRegExpCtor.Id_DOLLAR_3":"org.mozilla.classfile.ByteCode.INVOKEVIRTUAL","org.mozilla.javascript.regexp.NativeRegExpCtor.Id_DOLLAR_4":"org.mozilla.classfile.ByteCode.INVOKEVIRTUAL","org.mozilla.javascript.regexp.NativeRegExpCtor.Id_DOLLAR_1":"org.mozilla.classfile.ByteCode.ARETURN","id":"org.mozilla.classfile.ByteCode.GETFIELD","org.mozilla.javascript.regexp.NativeRegExpCtor.Id_DOLLAR_2":"org.mozilla.classfile.ByteCode.IRETURN"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:759","type":"CtForImpl","sourcecode":"for (int int = 0 ; methodIndex != SWITCH_COUNT ; ++methodIndex) {\n    if ((methodIndex == Do_getEncodedSource) && (encodedSource == null)) {\n        continue;\n    } \n    short short;\n    switch (methodIndex) {\n        case Do_getFunctionName :\n            methodLocals = 1;\n            cfw.startMethod(\"getFunctionName\", \"()Ljava/lang/String;\", org.mozilla.classfile.ClassFileWriter.org.mozilla.classfile.ClassFileWriter.short);\n            break;\n        case Do_getParamCount :\n            methodLocals = 1;\n            cfw.startMethod(\"getParamCount\", \"()I\", org.mozilla.classfile.ClassFileWriter.org.mozilla.classfile.ClassFileWriter.short);\n            break;\n        case Do_getParamAndVarCount :\n            methodLocals = 1;\n            cfw.startMethod(\"getParamAndVarCount\", \"()I\", org.mozilla.classfile.ClassFileWriter.org.mozilla.classfile.ClassFileWriter.short);\n            break;\n        case Do_getParamOrVarName :\n            methodLocals = 1 + 1;\n            cfw.startMethod(\"getParamOrVarName\", \"(I)Ljava/lang/String;\", org.mozilla.classfile.ClassFileWriter.org.mozilla.classfile.ClassFileWriter.short);\n            break;\n        case Do_getParamOrVarConst :\n            methodLocals = (1 + 1) + 1;\n            cfw.startMethod(\"getParamOrVarConst\", \"(I)Z\", org.mozilla.classfile.ClassFileWriter.org.mozilla.classfile.ClassFileWriter.short);\n            break;\n        case Do_getEncodedSource :\n            methodLocals = 1;\n            cfw.startMethod(\"getEncodedSource\", \"()Ljava/lang/String;\", org.mozilla.classfile.ClassFileWriter.org.mozilla.classfile.ClassFileWriter.short);\n            cfw.addPush(encodedSource);\n            break;\n        default :\n            throw org.mozilla.javascript.Kit.codeBug();\n    }\n    int int = org.mozilla.javascript.ast.ScriptNode[].int;\n    int int = 0;\n    int int = 0;\n    if (count > 1) {\n        cfw.addLoadThis();\n        cfw.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, cfw.getClassName(), org.mozilla.javascript.optimizer.Codegen.org.mozilla.javascript.optimizer.Codegen.java.lang.String, \"I\");\n        switchStart = cfw.addTableSwitch(1, (count - 1));\n    } \n    for (int int = 0 ; i != count ; ++i) {\n        org.mozilla.javascript.ast.ScriptNode org.mozilla.javascript.ast.ScriptNode = org.mozilla.javascript.ast.ScriptNode[][i];\n        if (i == 0) {\n            if (count > 1) {\n                cfw.markTableSwitchDefault(switchStart);\n                switchStackTop = cfw.getStackTop();\n            } \n        } else {\n            cfw.markTableSwitchCase(switchStart, (i - 1), switchStackTop);\n        }\n        switch (methodIndex) {\n            case Do_getFunctionName :\n                if ((n.getType()) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n                    cfw.addPush(\"\");\n                } else {\n                    java.lang.String java.lang.String = ((org.mozilla.javascript.ast.FunctionNode)(n)).getName();\n                    cfw.addPush(name);\n                }\n                cfw.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int);\n                break;\n            case Do_getParamCount :\n                cfw.addPush(n.getParamCount());\n                cfw.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int);\n                break;\n            case Do_getParamAndVarCount :\n                cfw.addPush(n.getParamAndVarCount());\n                cfw.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int);\n                break;\n            case Do_getParamOrVarName :\n                int int = n.getParamAndVarCount();\n                if (paramAndVarCount == 0) {\n                    cfw.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int);\n                    cfw.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int);\n                } else if (paramAndVarCount == 1) {\n                    cfw.addPush(n.getParamOrVarName(0));\n                    cfw.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int);\n                } else {\n                    cfw.addILoad(1);\n                    int int = cfw.addTableSwitch(1, (paramAndVarCount - 1));\n                    for (int int = 0 ; j != paramAndVarCount ; ++j) {\n                        if ((cfw.getStackTop()) != 0)\n                            org.mozilla.javascript.Kit.codeBug();\n                        \n                        java.lang.String java.lang.String = n.getParamOrVarName(j);\n                        if (j == 0) {\n                            cfw.markTableSwitchDefault(paramSwitchStart);\n                        } else {\n                            cfw.markTableSwitchCase(paramSwitchStart, (j - 1), 0);\n                        }\n                        cfw.addPush(s);\n                        cfw.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int);\n                    }\n                }\n                break;\n            case Do_getParamOrVarConst :\n                paramAndVarCount = n.getParamAndVarCount();\n                boolean[] boolean[] = n.getParamAndVarConst();\n                if (paramAndVarCount == 0) {\n                    cfw.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int);\n                    cfw.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int);\n                } else if (paramAndVarCount == 1) {\n                    cfw.addPush(constness[0]);\n                    cfw.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int);\n                } else {\n                    cfw.addILoad(1);\n                    int int = cfw.addTableSwitch(1, (paramAndVarCount - 1));\n                    for (int int = 0 ; j != paramAndVarCount ; ++j) {\n                        if ((cfw.getStackTop()) != 0)\n                            org.mozilla.javascript.Kit.codeBug();\n                        \n                        if (j == 0) {\n                            cfw.markTableSwitchDefault(paramSwitchStart);\n                        } else {\n                            cfw.markTableSwitchCase(paramSwitchStart, (j - 1), 0);\n                        }\n                        cfw.addPush(constness[j]);\n                        cfw.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int);\n                    }\n                }\n                break;\n            case Do_getEncodedSource :\n                cfw.addPush(n.getEncodedSourceStart());\n                cfw.addPush(n.getEncodedSourceEnd());\n                cfw.addInvoke(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, \"java/lang/String\", \"substring\", \"(II)Ljava/lang/String;\");\n                cfw.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int);\n                break;\n            default :\n                throw org.mozilla.javascript.Kit.codeBug();\n        }\n    }\n    cfw.stopMethod(methodLocals);\n}"},"status":-2},{"failures":[],"tindex":"e0ccadc2-8b30-11e6-9573-dbf34dbe9707","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.IdFunctionObject:41","type":"CtAssignmentImpl","sourcecode":"org.mozilla.javascript.IdFunctionObject.this.int = arity"},"status":-1},{"failures":[],"tindex":"e0ccadc3-8b30-11e6-9573-2fc3ecbe2354","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.NativeDate:1127","type":"CtIfImpl","sourcecode":"if (sec < 0)\n    sec = 0;\n"},"variableMap":{"sec":"org.mozilla.javascript.ScriptableObject.DONTENUM"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.regexp.NativeRegExp:125","type":"CtInvocationImpl","sourcecode":"proto.defineProperty(\"constructor\", ctor, org.mozilla.javascript.ScriptableObject.org.mozilla.javascript.ScriptableObject.int)"},"status":-1},{"failures":[],"tindex":"e0ccd4d4-8b30-11e6-9573-a974bea7ab8b","series":0,"name":"replace","transplant":{"position":"org.mozilla.classfile.ClassFileWriter:4507","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.DToA:433","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"e0ccd4d5-8b30-11e6-9573-413ad9170c32","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.classfile.ClassFileWriter:58","type":"CtAssignmentImpl","sourcecode":"short = org.mozilla.classfile.ConstantPool.addClass(superClassName)"},"status":-1},{"failures":[],"tindex":"e0ccd4d6-8b30-11e6-9573-9962cbd1d694","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.optimizer.Codegen:4387","type":"CtInvocationImpl","sourcecode":"org.mozilla.classfile.ClassFileWriter.addPush(1.0)"},"variableMap":{"cfw":"cfw"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:613","type":"CtInvocationImpl","sourcecode":"cfw.addALoad(SCOPE_ARG)"},"status":-1},{"failures":[],"tindex":"e0ccd4d7-8b30-11e6-9573-1fcfe055ef14","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeDate:1683","type":"CtAssignmentImpl","sourcecode":"X = \"setUTCMinutes\""},"status":-1},{"failures":[],"tindex":"e0ccd4d8-8b30-11e6-9573-672360f14d7a","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.TokenStream:162","type":"CtAssignmentImpl","sourcecode":"id = Id_for"},"variableMap":{"Id_for":"pos","id":"position"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ast.BreakStatement:35","type":"CtAssignmentImpl","sourcecode":"int = pos"},"status":-1}],"header":{"groupId":"r","transformationCount":10,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}