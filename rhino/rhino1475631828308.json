{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"28f71a92-8a9d-11e6-8e6f-a3f4fbddea32","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.ObjToIntMap:56","type":"CtIfImpl","sourcecode":"if ((int) == (-1))\n    org.mozilla.javascript.Kit.codeBug();\n"},"variableMap":{"remaining":"N"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeString:231","type":"CtForImpl","sourcecode":"for (int int = 0 ; i != N ; ++i) {\n    sb.append(org.mozilla.javascript.ScriptRuntime.toUint16(args[i]));\n}"},"status":-1},{"failures":[],"tindex":"28f741a3-8a9d-11e6-8e6f-1b63ffc45af5","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.NativeArray:1523","type":"CtReturnImpl","sourcecode":"return java.lang.Long.valueOf(i)"},"variableMap":{"i":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ObjArray:64","type":"CtReturnImpl","sourcecode":"return getImpl(index)"},"status":-1},{"failures":[],"tindex":"28f741a4-8a9d-11e6-8e6f-776d51ed95ef","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.typedarrays.NativeTypedArrayIterator:77","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"lastPosition":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.TokenStream:1155","type":"CtInvocationImpl","sourcecode":"addToString(c)"},"status":-1},{"failures":[],"tindex":"28f741a5-8a9d-11e6-8e6f-076f9cc92be2","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.commonjs.module.provider.ModuleSource:56","type":"CtAssignmentImpl","sourcecode":"this.java.net.URI = uri"},"variableMap":{"uri":"base"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.commonjs.module.Require:196","type":"CtAssignmentImpl","sourcecode":"base = moduleScope.getBase()"},"status":-1},{"failures":[],"tindex":"28f741a6-8a9d-11e6-8e6f-4352879d8619","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.ast.ConditionalExpression:117","type":"CtAssignmentImpl","sourcecode":"org.mozilla.javascript.ast.ConditionalExpression.this.int = questionMarkPosition"},"variableMap":{"questionMarkPosition":"org.mozilla.javascript.ScriptableObject.PERMANENT"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.BaseFunction:25","type":"CtAssignmentImpl","sourcecode":"obj.int = ((org.mozilla.javascript.ScriptableObject.org.mozilla.javascript.ScriptableObject.int) | (org.mozilla.javascript.ScriptableObject.org.mozilla.javascript.ScriptableObject.int)) | (org.mozilla.javascript.ScriptableObject.org.mozilla.javascript.ScriptableObject.int)"},"status":-1},{"failures":[],"tindex":"28f741a7-8a9d-11e6-8e6f-870828b6f289","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.NativeMath:319","type":"CtIfImpl","sourcecode":"if ((x < (-1.0)) || (1.0 < x)) {\n    result = 0;\n} else if (((-1.0) < x) && (x < 1.0)) {\n    result = java.lang.Double.java.lang.Double.double;\n} "},"variableMap":{"result":"number","java.lang.Double.POSITIVE_INFINITY":"number","x":"number"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.Decompiler:868","type":"CtIfImpl","sourcecode":"if (type == 'J') {\n    number = lbits;\n} else {\n    number = java.lang.Double.longBitsToDouble(lbits);\n}"},"status":-1},{"failures":[],"tindex":"28f741a8-8a9d-11e6-8e6f-87e56809281b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ast.AstNode:241","type":"CtIfImpl","sourcecode":"if ((org.mozilla.javascript.ast.AstNode.this.org.mozilla.javascript.ast.AstNode) != null) {\n    setRelative((-(org.mozilla.javascript.ast.AstNode.this.org.mozilla.javascript.ast.AstNode.getPosition())));\n} "},"status":-1},{"failures":[],"tindex":"28f741a9-8a9d-11e6-8e6f-f3185f067f12","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.NativeDate:792","type":"CtLocalVariableImpl","sourcecode":"int[] int[] = new int[]{ 1970 , 1 , 1 , 0 , 0 , 0 , 0 , -1 , -1 }"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.classfile.ClassFileWriter:1536","type":"CtLocalVariableImpl","sourcecode":"int[] int[] = org.mozilla.javascript.UintMap.getKeys()"},"status":-1},{"failures":[],"tindex":"28f768ba-8a9d-11e6-8e6f-a1a534f6aa99","series":0,"name":"replace","transplant":{"position":"org.mozilla.classfile.ClassFileWriter:426","type":"CtLocalVariableImpl","sourcecode":"int int = index"},"variableMap":{"index":"org.mozilla.javascript.Token.SETPROP_OP"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.IRFactory:2193","type":"CtLocalVariableImpl","sourcecode":"int int = nodeType == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int) ? org.mozilla.javascript.Token.org.mozilla.javascript.Token.int : org.mozilla.javascript.Token.org.mozilla.javascript.Token.int"},"status":-1},{"failures":[],"tindex":"28f768bb-8a9d-11e6-8e6f-8fcd530ac7b7","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.regexp.RegExpImpl:438","type":"CtIfImpl","sourcecode":"if (num == 0)\n    return null;\n"},"variableMap":{"num":"org.mozilla.javascript.Context.VERSION_1_4"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.regexp.RegExpImpl:406","type":"CtIfImpl","sourcecode":"if ((version != (org.mozilla.javascript.Context.org.mozilla.javascript.Context.int)) && (version <= (org.mozilla.javascript.Context.org.mozilla.javascript.Context.int))) {\n    if (dc == '0')\n        return null;\n    \n    num = 0;\n    cp = dp;\n    while (((++cp) < daL) && (org.mozilla.javascript.regexp.NativeRegExp.isDigit((dc = da.charAt(cp))))) {\n        tmp = (10 * num) + (dc - '0');\n        if (tmp < num)\n            break;\n        \n        num = tmp;\n    }\n} else {\n    int int = (res.org.mozilla.javascript.regexp.SubString[]) == null ? 0 : res.org.mozilla.javascript.regexp.SubString[].int;\n    num = dc - '0';\n    if (num > parenCount)\n        return null;\n    \n    cp = dp + 2;\n    if ((dp + 2) < daL) {\n        dc = da.charAt((dp + 2));\n        if (org.mozilla.javascript.regexp.NativeRegExp.isDigit(dc)) {\n            tmp = (10 * num) + (dc - '0');\n            if (tmp <= parenCount) {\n                cp++;\n                num = tmp;\n            } \n        } \n    } \n    if (num == 0)\n        return null;\n    \n}"},"status":-1}],"header":{"groupId":"r","transformationCount":10,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}