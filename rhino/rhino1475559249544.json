{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"2ca75ccb-89f4-11e6-816b-8326f283d19d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.JavaAdapter:1101","type":"CtForEachImpl","sourcecode":"for (java.lang.Class<?> java.lang.Class<?> : parms) {\n    paramOffset += org.mozilla.javascript.JavaAdapter.generatePushParam(cfw, paramOffset, parm);\n}"},"status":-1},{"failures":[],"tindex":"2ca783dc-89f4-11e6-816b-b71f1c0297c6","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.Icode:228","type":"CtReturnImpl","sourcecode":"return ((org.mozilla.javascript.Icode.org.mozilla.javascript.Icode.int) <= icode) && (icode <= 0)"},"variableMap":{"icode":"c","org.mozilla.javascript.Icode.MIN_ICODE":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.regexp.NativeRegExp:405","type":"CtReturnImpl","sourcecode":"return org.mozilla.javascript.ScriptRuntime.isJSWhitespaceOrLineTerminator(c)"},"status":-1},{"failures":[],"tindex":"2ca783dd-89f4-11e6-816b-07da93bc07ea","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.commonjs.module.provider.ParsedContentType:32","type":"CtLocalVariableImpl","sourcecode":"java.util.StringTokenizer java.util.StringTokenizer = new java.util.StringTokenizer(mimeType , \";\")"},"variableMap":{"mimeType":"qualifiedName"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.serialize.ScriptableOutputStream:153","type":"CtLocalVariableImpl","sourcecode":"java.util.StringTokenizer java.util.StringTokenizer = new java.util.StringTokenizer(qualifiedName , \".\")"},"status":-1},{"failures":[],"tindex":"2ca783de-89f4-11e6-816b-8db0ef0bd94e","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.JavaMembers:217","type":"CtIfImpl","sourcecode":"if (sigStart < 0) {\n    return null;\n} "},"variableMap":{"sigStart":"pass"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.JavaMembers:734","type":"CtForEachImpl","sourcecode":"for (org.mozilla.javascript.MemberBox org.mozilla.javascript.MemberBox : methods) {\n    if ((!isStatic) || (method.isStatic())) {\n        java.lang.Class<?>[] java.lang.Class<?>[] = method.java.lang.Class<?>[];\n        if ((params.int) == 1) {\n            if (pass == 1) {\n                if ((params[0]) == type) {\n                    return method;\n                } \n            } else {\n                if (pass != 2)\n                    org.mozilla.javascript.Kit.codeBug();\n                \n                if (params[0].isAssignableFrom(type)) {\n                    return method;\n                } \n            }\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"2ca7aaef-89f4-11e6-816b-61b5d7dbb833","series":0,"name":"replace","transplant":{"position":"org.mozilla.classfile.ClassFileWriter:2501","type":"CtAssignmentImpl","sourcecode":"byte[][((int)++)] = ((byte)(251))"},"variableMap":{"rawStackMap":"buf","rawStackMapTop":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.typedarrays.ByteIo:133","type":"CtAssignmentImpl","sourcecode":"buf[(offset + 1)] = ((byte)((val >>> 16L) & 255L))"},"status":-1},{"failures":[],"tindex":"2ca7aaf0-89f4-11e6-816b-559430f2fc63","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.UintMap:66","type":"CtIfImpl","sourcecode":"if (0 <= index) {\n    return java.lang.Object[][index];\n} "},"variableMap":{"values":"args","index":"org.mozilla.javascript.NativeMath.Id_imul"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeMath:108","type":"CtSwitchImpl","sourcecode":"switch (methodId) {\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        return \"Math\";\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        x = x == 0.0 ? 0.0 : x < 0.0 ? -x : x;\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        if (((x == x) && ((-1.0) <= x)) && (x <= 1.0)) {\n            x = methodId == (org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int) ? java.lang.Math.acos(x) : java.lang.Math.asin(x);\n        } else {\n            x = java.lang.Double.java.lang.Double.double;\n        }\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        x = java.lang.Math.atan(x);\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        x = java.lang.Math.atan2(x, org.mozilla.javascript.ScriptRuntime.toNumber(args, 1));\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        x = java.lang.Math.cbrt(x);\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        x = java.lang.Math.ceil(x);\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        x = (x == (java.lang.Double.java.lang.Double.double)) || (x == (java.lang.Double.java.lang.Double.double)) ? java.lang.Double.java.lang.Double.double : java.lang.Math.cos(x);\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        x = java.lang.Math.cosh(x);\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = js_hypot(args);\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        x = x == (java.lang.Double.java.lang.Double.double) ? x : x == (java.lang.Double.java.lang.Double.double) ? 0.0 : java.lang.Math.exp(x);\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        x = java.lang.Math.expm1(x);\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        x = java.lang.Math.floor(x);\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        return js_imul(args);\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        x = x < 0 ? java.lang.Double.java.lang.Double.double : java.lang.Math.log(x);\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        x = java.lang.Math.log1p(x);\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        x = java.lang.Math.log10(x);\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = methodId == (org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int) ? java.lang.Double.java.lang.Double.double : java.lang.Double.java.lang.Double.double;\n        for (int int = 0 ; i != (args.int) ; ++i) {\n            double double = org.mozilla.javascript.ScriptRuntime.toNumber(args[i]);\n            if (d != d) {\n                x = d;\n                break;\n            } \n            if (methodId == (org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int)) {\n                x = java.lang.Math.max(x, d);\n            } else {\n                x = java.lang.Math.min(x, d);\n            }\n        }\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        x = js_pow(x, org.mozilla.javascript.ScriptRuntime.toNumber(args, 1));\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = java.lang.Math.random();\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        if (((x == x) && (x != (java.lang.Double.java.lang.Double.double))) && (x != (java.lang.Double.java.lang.Double.double))) {\n            long long = java.lang.Math.round(x);\n            if (l != 0) {\n                x = l;\n            } else {\n                if (x < 0.0) {\n                    x = org.mozilla.javascript.ScriptRuntime.org.mozilla.javascript.ScriptRuntime.double;\n                } else if (x != 0.0) {\n                    x = 0.0;\n                } \n            }\n        } \n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        x = (x == (java.lang.Double.java.lang.Double.double)) || (x == (java.lang.Double.java.lang.Double.double)) ? java.lang.Double.java.lang.Double.double : java.lang.Math.sin(x);\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        x = java.lang.Math.sinh(x);\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        x = java.lang.Math.sqrt(x);\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        x = java.lang.Math.tan(x);\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        x = java.lang.Math.tanh(x);\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        x = js_trunc(x);\n        break;\n    default :\n        throw new java.lang.IllegalStateException(java.lang.String.valueOf(methodId));\n}"},"status":-1},{"failures":[],"tindex":"2ca7d201-89f4-11e6-816b-97e4a191186a","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.serialize.ScriptableOutputStream:168","type":"CtAssignmentImpl","sourcecode":"org.mozilla.javascript.serialize.ScriptableOutputStream.PendingLookup.this.java.lang.String = name"},"variableMap":{"name":"callSignature"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:3304","type":"CtAssignmentImpl","sourcecode":"callSignature = \"(Lorg/mozilla/javascript/Context;\" + (\"Lorg/mozilla/javascript/Callable;\" + (\"Lorg/mozilla/javascript/Scriptable;\" + (\"[Ljava/lang/Object;\" + (\"Lorg/mozilla/javascript/Scriptable;\" + (\"Lorg/mozilla/javascript/Scriptable;\" + (\"I\" + (\"Ljava/lang/String;I\" + \")Ljava/lang/Object;\")))))))"},"status":-1},{"failures":[],"tindex":"2ca7f912-89f4-11e6-816b-21811b0368b1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ast.CatchClause:145","type":"CtAssignmentImpl","sourcecode":"org.mozilla.javascript.ast.CatchClause.this.int = ifPosition"},"status":-1},{"failures":[],"tindex":"2ca7f913-89f4-11e6-816b-631567f7abcd","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase:72","type":"CtIfImpl","sourcecode":"if (moduleSource == (org.mozilla.javascript.commonjs.module.provider.ModuleSourceProvider.org.mozilla.javascript.commonjs.module.provider.ModuleSourceProvider.org.mozilla.javascript.commonjs.module.provider.ModuleSource)) {\n    return cachedModule1.getModule();\n} "},"variableMap":{"org.mozilla.javascript.commonjs.module.provider.ModuleSourceProvider.NOT_MODIFIED":"moduleSource","moduleSource":"validator1","cachedModule1":"validator1"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase:79","type":"CtTryImpl","sourcecode":"try {\n    final int int = moduleId.hashCode();\n    synchronized(java.lang.Object[][((idHash >>> (org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase.org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase.int)) & (org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase.org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase.int))]) {\n        final org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase.CachedModuleScript org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase.CachedModuleScript = getLoadedModule(moduleId);\n        if (cachedModule2 != null) {\n            if (!(org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase.equal(validator1, org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase.getValidator(cachedModule2)))) {\n                return cachedModule2.getModule();\n            } \n        } \n        final java.net.URI java.net.URI = moduleSource.getUri();\n        final org.mozilla.javascript.commonjs.module.ModuleScript org.mozilla.javascript.commonjs.module.ModuleScript = new org.mozilla.javascript.commonjs.module.ModuleScript(cx.compileReader(reader, sourceUri.toString(), 1, moduleSource.getSecurityDomain()) , sourceUri , moduleSource.getBase());\n        putLoadedModule(moduleId, moduleScript, moduleSource.getValidator());\n        return moduleScript;\n    }\n} finally {\n    reader.close();\n}"},"status":-1},{"failures":[],"tindex":"2ca7f914-89f4-11e6-816b-bf929ece6260","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.ScriptRuntime:3106","type":"CtReturnImpl","sourcecode":"return d == d"},"variableMap":{"d":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ScriptRuntime:385","type":"CtReturnImpl","sourcecode":"return (d == d) && (d != 0.0)"},"status":-1}],"header":{"groupId":"r","transformationCount":10,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}