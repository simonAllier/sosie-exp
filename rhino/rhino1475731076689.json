{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"3d9c3550-8b84-11e6-a7d1-fff6c83f3a37","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.CompilerEnvirons:195","type":"CtAssignmentImpl","sourcecode":"org.mozilla.javascript.CompilerEnvirons.this.boolean = generateObserverCount"},"variableMap":{"generateObserverCount":"exponentValid"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeGlobal:341","type":"CtAssignmentImpl","sourcecode":"exponentValid = true"},"status":-1},{"failures":[],"tindex":"3d9c5c61-8b84-11e6-a7d1-a73e22fc0279","series":0,"name":"add","transplant":{"position":"org.mozilla.classfile.ClassFileWriter:416","type":"CtAssignmentImpl","sourcecode":"index = org.mozilla.classfile.ClassFileWriter.putInt16(length, codeAttribute, index)"},"variableMap":{"codeAttribute":"array","length":"offset","index":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.classfile.ClassFileWriter:2831","type":"CtAssignmentImpl","sourcecode":"offset = org.mozilla.classfile.ClassFileWriter.putInt32(((int)(value >>> 32)), array, offset)"},"status":-1},{"failures":[],"tindex":"3d9c5c62-8b84-11e6-a7d1-d1affe7069dc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.regexp.NativeRegExp:2490","type":"CtIfImpl","sourcecode":"if (matchType != (org.mozilla.javascript.regexp.NativeRegExp.org.mozilla.javascript.regexp.NativeRegExp.int))\n    obj.put((num + 1), obj, org.mozilla.javascript.Undefined.org.mozilla.javascript.Undefined.java.lang.Object);\n"},"status":-1},{"failures":[],"tindex":"3d9c5c63-8b84-11e6-a7d1-39f88707cdc9","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.optimizer.OptRuntime:191","type":"CtIfImpl","sourcecode":"if (str != null)\n    throw new java.lang.IllegalArgumentException();\n"},"variableMap":{"str":"s"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.TokenStream:154","type":"CtBlockImpl","sourcecode":"L0 : {\n    id = 0;\n    java.lang.String java.lang.String = null;\n    int int;\n    L : switch (s.length()) {\n        case 2 :\n            c = s.charAt(1);\n            if (c == 'f') {\n                if ((s.charAt(0)) == 'i') {\n                    id = Id_if;\n                    break L0;\n                } \n            } else if (c == 'n') {\n                if ((s.charAt(0)) == 'i') {\n                    id = Id_in;\n                    break L0;\n                } \n            } else if (c == 'o') {\n                if ((s.charAt(0)) == 'd') {\n                    id = Id_do;\n                    break L0;\n                } \n            } \n            break L;\n        case 3 :\n            switch (s.charAt(0)) {\n                case 'f' :\n                    if (((s.charAt(2)) == 'r') && ((s.charAt(1)) == 'o')) {\n                        id = Id_for;\n                        break L0;\n                    } \n                    break L;\n                case 'i' :\n                    if (((s.charAt(2)) == 't') && ((s.charAt(1)) == 'n')) {\n                        id = Id_int;\n                        break L0;\n                    } \n                    break L;\n                case 'l' :\n                    if (((s.charAt(2)) == 't') && ((s.charAt(1)) == 'e')) {\n                        id = Id_let;\n                        break L0;\n                    } \n                    break L;\n                case 'n' :\n                    if (((s.charAt(2)) == 'w') && ((s.charAt(1)) == 'e')) {\n                        id = Id_new;\n                        break L0;\n                    } \n                    break L;\n                case 't' :\n                    if (((s.charAt(2)) == 'y') && ((s.charAt(1)) == 'r')) {\n                        id = Id_try;\n                        break L0;\n                    } \n                    break L;\n                case 'v' :\n                    if (((s.charAt(2)) == 'r') && ((s.charAt(1)) == 'a')) {\n                        id = Id_var;\n                        break L0;\n                    } \n                    break L;\n            }\n            break L;\n        case 4 :\n            switch (s.charAt(0)) {\n                case 'b' :\n                    X = \"byte\";\n                    id = Id_byte;\n                    break L;\n                case 'c' :\n                    c = s.charAt(3);\n                    if (c == 'e') {\n                        if (((s.charAt(2)) == 's') && ((s.charAt(1)) == 'a')) {\n                            id = Id_case;\n                            break L0;\n                        } \n                    } else if (c == 'r') {\n                        if (((s.charAt(2)) == 'a') && ((s.charAt(1)) == 'h')) {\n                            id = Id_char;\n                            break L0;\n                        } \n                    } \n                    break L;\n                case 'e' :\n                    c = s.charAt(3);\n                    if (c == 'e') {\n                        if (((s.charAt(2)) == 's') && ((s.charAt(1)) == 'l')) {\n                            id = Id_else;\n                            break L0;\n                        } \n                    } else if (c == 'm') {\n                        if (((s.charAt(2)) == 'u') && ((s.charAt(1)) == 'n')) {\n                            id = Id_enum;\n                            break L0;\n                        } \n                    } \n                    break L;\n                case 'g' :\n                    X = \"goto\";\n                    id = Id_goto;\n                    break L;\n                case 'l' :\n                    X = \"long\";\n                    id = Id_long;\n                    break L;\n                case 'n' :\n                    X = \"null\";\n                    id = Id_null;\n                    break L;\n                case 't' :\n                    c = s.charAt(3);\n                    if (c == 'e') {\n                        if (((s.charAt(2)) == 'u') && ((s.charAt(1)) == 'r')) {\n                            id = Id_true;\n                            break L0;\n                        } \n                    } else if (c == 's') {\n                        if (((s.charAt(2)) == 'i') && ((s.charAt(1)) == 'h')) {\n                            id = Id_this;\n                            break L0;\n                        } \n                    } \n                    break L;\n                case 'v' :\n                    X = \"void\";\n                    id = Id_void;\n                    break L;\n                case 'w' :\n                    X = \"with\";\n                    id = Id_with;\n                    break L;\n            }\n            break L;\n        case 5 :\n            switch (s.charAt(2)) {\n                case 'a' :\n                    X = \"class\";\n                    id = Id_class;\n                    break L;\n                case 'e' :\n                    c = s.charAt(0);\n                    if (c == 'b') {\n                        X = \"break\";\n                        id = Id_break;\n                    } else if (c == 'y') {\n                        X = \"yield\";\n                        id = Id_yield;\n                    } \n                    break L;\n                case 'i' :\n                    X = \"while\";\n                    id = Id_while;\n                    break L;\n                case 'l' :\n                    X = \"false\";\n                    id = Id_false;\n                    break L;\n                case 'n' :\n                    c = s.charAt(0);\n                    if (c == 'c') {\n                        X = \"const\";\n                        id = Id_const;\n                    } else if (c == 'f') {\n                        X = \"final\";\n                        id = Id_final;\n                    } \n                    break L;\n                case 'o' :\n                    c = s.charAt(0);\n                    if (c == 'f') {\n                        X = \"float\";\n                        id = Id_float;\n                    } else if (c == 's') {\n                        X = \"short\";\n                        id = Id_short;\n                    } \n                    break L;\n                case 'p' :\n                    X = \"super\";\n                    id = Id_super;\n                    break L;\n                case 'r' :\n                    X = \"throw\";\n                    id = Id_throw;\n                    break L;\n                case 't' :\n                    X = \"catch\";\n                    id = Id_catch;\n                    break L;\n            }\n            break L;\n        case 6 :\n            switch (s.charAt(1)) {\n                case 'a' :\n                    X = \"native\";\n                    id = Id_native;\n                    break L;\n                case 'e' :\n                    c = s.charAt(0);\n                    if (c == 'd') {\n                        X = \"delete\";\n                        id = Id_delete;\n                    } else if (c == 'r') {\n                        X = \"return\";\n                        id = Id_return;\n                    } \n                    break L;\n                case 'h' :\n                    X = \"throws\";\n                    id = Id_throws;\n                    break L;\n                case 'm' :\n                    X = \"import\";\n                    id = Id_import;\n                    break L;\n                case 'o' :\n                    X = \"double\";\n                    id = Id_double;\n                    break L;\n                case 't' :\n                    X = \"static\";\n                    id = Id_static;\n                    break L;\n                case 'u' :\n                    X = \"public\";\n                    id = Id_public;\n                    break L;\n                case 'w' :\n                    X = \"switch\";\n                    id = Id_switch;\n                    break L;\n                case 'x' :\n                    X = \"export\";\n                    id = Id_export;\n                    break L;\n                case 'y' :\n                    X = \"typeof\";\n                    id = Id_typeof;\n                    break L;\n            }\n            break L;\n        case 7 :\n            switch (s.charAt(1)) {\n                case 'a' :\n                    X = \"package\";\n                    id = Id_package;\n                    break L;\n                case 'e' :\n                    X = \"default\";\n                    id = Id_default;\n                    break L;\n                case 'i' :\n                    X = \"finally\";\n                    id = Id_finally;\n                    break L;\n                case 'o' :\n                    X = \"boolean\";\n                    id = Id_boolean;\n                    break L;\n                case 'r' :\n                    X = \"private\";\n                    id = Id_private;\n                    break L;\n                case 'x' :\n                    X = \"extends\";\n                    id = Id_extends;\n                    break L;\n            }\n            break L;\n        case 8 :\n            switch (s.charAt(0)) {\n                case 'a' :\n                    X = \"abstract\";\n                    id = Id_abstract;\n                    break L;\n                case 'c' :\n                    X = \"continue\";\n                    id = Id_continue;\n                    break L;\n                case 'd' :\n                    X = \"debugger\";\n                    id = Id_debugger;\n                    break L;\n                case 'f' :\n                    X = \"function\";\n                    id = Id_function;\n                    break L;\n                case 'v' :\n                    X = \"volatile\";\n                    id = Id_volatile;\n                    break L;\n            }\n            break L;\n        case 9 :\n            c = s.charAt(0);\n            if (c == 'i') {\n                X = \"interface\";\n                id = Id_interface;\n            } else if (c == 'p') {\n                X = \"protected\";\n                id = Id_protected;\n            } else if (c == 't') {\n                X = \"transient\";\n                id = Id_transient;\n            } \n            break L;\n        case 10 :\n            c = s.charAt(1);\n            if (c == 'm') {\n                X = \"implements\";\n                id = Id_implements;\n            } else if (c == 'n') {\n                X = \"instanceof\";\n                id = Id_instanceof;\n            } \n            break L;\n        case 12 :\n            X = \"synchronized\";\n            id = Id_synchronized;\n            break L;\n    }\n    if (((X != null) && (X != s)) && (!(X.equals(s))))\n        id = 0;\n    \n}"},"status":-1},{"failures":[],"tindex":"3d9c8374-8b84-11e6-a7d1-2de18602e625","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.TokenStream:1399","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    --n;\n} "},"variableMap":{"lineEndChar":"org.mozilla.javascript.Token.FOR","n":"org.mozilla.javascript.Token.FOR"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.IRFactory:649","type":"CtInvocationImpl","sourcecode":"org.mozilla.javascript.Decompiler.addToken(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)"},"status":-1},{"failures":[],"tindex":"3d9caa85-8b84-11e6-a7d1-3b0e64c3f7f7","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.Context:399","type":"CtAssignmentImpl","sourcecode":"cx = old"},"variableMap":{"cx":"cx","old":"cx"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.json.JsonParser:33","type":"CtAssignmentImpl","sourcecode":"org.mozilla.javascript.json.JsonParser.this.org.mozilla.javascript.Context = cx"},"status":-1},{"failures":[],"tindex":"3d9caa86-8b84-11e6-a7d1-618cb7ea92c6","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.NativeArray:1017","type":"CtReturnImpl","sourcecode":"return +1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.typedarrays.Conversions:53","type":"CtReturnImpl","sourcecode":"return 255"},"status":-1},{"failures":[],"tindex":"3d9caa87-8b84-11e6-a7d1-5d3c7b3a33ad","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.DToA:98","type":"CtIfImpl","sourcecode":"if ((x & 255) == 0) {\n    k += 8;\n    x >>>= 8;\n} "},"variableMap":{"x":"start","k":"start"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeGlobal:224","type":"CtIfImpl","sourcecode":"if ((c == '+') || (negative = c == '-'))\n    start++;\n"},"status":-1},{"failures":[],"tindex":"3d9caa88-8b84-11e6-a7d1-cbc66d5267e3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.Decompiler:214","type":"CtIfImpl","sourcecode":"if ((int) == (char[].int)) {\n    increaseSourceCapacity(((int) + 1));\n} "},"status":-1},{"failures":[],"tindex":"3d9caa89-8b84-11e6-a7d1-95fed84831b0","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.ScriptRuntime:393","type":"CtIfImpl","sourcecode":"if (org.mozilla.javascript.Context.getContext().isVersionECMA1()) {\n    return true;\n} "},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.regexp.NativeRegExp:2410","type":"CtIfImpl","sourcecode":"if (result) {\n    return true;\n} "},"status":-1}],"header":{"groupId":"r","transformationCount":10,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}