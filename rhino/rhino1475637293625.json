{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"e28d35fb-8aa9-11e6-b375-678c15278aea","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.optimizer.Codegen:4134","type":"CtAssignmentImpl","sourcecode":"org.mozilla.javascript.optimizer.BodyCodegen.ExceptionManager.ExceptionInfo.this.org.mozilla.javascript.Node = finallyBlock"},"variableMap":{"finallyBlock":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.IRFactory:1833","type":"CtInvocationImpl","sourcecode":"child.setType(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)"},"status":-1},{"failures":[],"tindex":"e28d841c-8aa9-11e6-b375-71076fdae012","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.CodeGenerator:460","type":"CtInvocationImpl","sourcecode":"addUint16(((int) & 65535))"},"status":-1},{"failures":[],"tindex":"e28d841d-8aa9-11e6-b375-995fbd6734f3","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.Decompiler:263","type":"CtIfImpl","sourcecode":"if (indent < 0)\n    throw new java.lang.IllegalArgumentException();\n"},"variableMap":{"indent":"org.mozilla.javascript.Token.FALSE"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.IRFactory:1878","type":"CtIfImpl","sourcecode":"if (status == (org.mozilla.javascript.IRFactory.org.mozilla.javascript.IRFactory.int)) {\n    type = org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n} else {\n    type = org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n}"},"status":-1},{"failures":[],"tindex":"e28d841e-8aa9-11e6-b375-35faab324032","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.optimizer.Codegen:4137","type":"CtAssignmentImpl","sourcecode":"org.mozilla.javascript.Node = null"},"variableMap":{"currentFinally":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NodeTransformer:191","type":"CtAssignmentImpl","sourcecode":"node = org.mozilla.javascript.NodeTransformer.replaceCurrent(parent, previous, node, unwindBlock)"},"status":-1},{"failures":[],"tindex":"e28dab2f-8aa9-11e6-b375-c308de732919","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.commonjs.module.provider.ModuleSource:57","type":"CtAssignmentImpl","sourcecode":"this.java.net.URI = base"},"variableMap":{"base":"base"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.commonjs.module.Require:196","type":"CtAssignmentImpl","sourcecode":"base = moduleScope.getBase()"},"status":-1},{"failures":[],"tindex":"e28ebca0-8aa9-11e6-b375-6b3d618f71ba","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.NativeJavaObject:488","type":"CtReturnImpl","sourcecode":"return \"undefined\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeString:234","type":"CtReturnImpl","sourcecode":"return sb.toString()"},"status":-1},{"failures":[],"tindex":"e28ebca1-8aa9-11e6-b375-030a59b34eb2","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.optimizer.Codegen:1283","type":"CtLocalVariableImpl","sourcecode":"org.mozilla.javascript.Node org.mozilla.javascript.Node"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.IRFactory:584","type":"CtLocalVariableImpl","sourcecode":"org.mozilla.javascript.Node org.mozilla.javascript.Node = decompileFunctionHeader(fn)"},"status":-1},{"failures":[],"tindex":"e28ebca2-8aa9-11e6-b375-6dab4b33417c","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.Context:784","type":"CtIfImpl","sourcecode":"if (boolean)\n    org.mozilla.javascript.Context.onSealedMutation();\n"},"variableMap":{"sealed":"includePrivate"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.JavaMembers:312","type":"CtIfImpl","sourcecode":"if (includeProtected || includePrivate) {\n    while (clazz != null) {\n        try {\n            java.lang.reflect.Method[] java.lang.reflect.Method[] = clazz.getDeclaredMethods();\n            for (java.lang.reflect.Method java.lang.reflect.Method : methods) {\n                int int = method.getModifiers();\n                if (((java.lang.reflect.Modifier.isPublic(mods)) || (java.lang.reflect.Modifier.isProtected(mods))) || includePrivate) {\n                    org.mozilla.javascript.JavaMembers.MethodSignature org.mozilla.javascript.JavaMembers.MethodSignature = new org.mozilla.javascript.JavaMembers.MethodSignature(method);\n                    if (!(map.containsKey(sig))) {\n                        if (includePrivate && (!(method.isAccessible())))\n                            method.setAccessible(true);\n                        \n                        map.put(sig, method);\n                    } \n                } \n            }\n            clazz = clazz.getSuperclass();\n        } catch (java.lang.SecurityException e) {\n            java.lang.reflect.Method[] java.lang.reflect.Method[] = clazz.getMethods();\n            for (java.lang.reflect.Method java.lang.reflect.Method : methods) {\n                org.mozilla.javascript.JavaMembers.MethodSignature org.mozilla.javascript.JavaMembers.MethodSignature = new org.mozilla.javascript.JavaMembers.MethodSignature(method);\n                if (!(map.containsKey(sig)))\n                    map.put(sig, method);\n                \n            }\n            break;\n        }\n    }\n} else {\n    java.lang.reflect.Method[] java.lang.reflect.Method[] = clazz.getMethods();\n    for (java.lang.reflect.Method java.lang.reflect.Method : methods) {\n        org.mozilla.javascript.JavaMembers.MethodSignature org.mozilla.javascript.JavaMembers.MethodSignature = new org.mozilla.javascript.JavaMembers.MethodSignature(method);\n        if (!(map.containsKey(sig)))\n            map.put(sig, method);\n        \n    }\n}"},"status":-1}],"header":{"groupId":"r","transformationCount":8,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}