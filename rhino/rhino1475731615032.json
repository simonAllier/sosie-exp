{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"7e7cd473-8b85-11e6-ad10-9b97ab341c5f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeDate:1154","type":"CtInvocationImpl","sourcecode":"org.mozilla.javascript.NativeDate.appendMonthName(result, org.mozilla.javascript.NativeDate.MonthFromTime(local))"},"status":-1},{"failures":[],"tindex":"7e7cfb84-8b85-11e6-ad10-ad309b07b3e9","series":0,"name":"replace","transplant":{"position":"org.mozilla.classfile.ClassFileWriter:1243","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Can only mark label once\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeString:282","type":"CtThrowImpl","sourcecode":"throw org.mozilla.javascript.ScriptRuntime.typeError2(\"msg.first.arg.not.regexp\", java.lang.String.java.lang.String.java.lang.Class.getSimpleName(), f.getFunctionName())"},"status":-1},{"failures":[],"tindex":"7e7cfb85-8b85-11e6-ad10-37e7ad697f32","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ScriptableObject:2042","type":"CtAssignmentImpl","sourcecode":"attributes = org.mozilla.javascript.ScriptRuntime.toBoolean(configurable) ? attributes & (~(org.mozilla.javascript.ScriptableObject.org.mozilla.javascript.ScriptableObject.int)) : attributes | (org.mozilla.javascript.ScriptableObject.org.mozilla.javascript.ScriptableObject.int)"},"status":-1},{"failures":[],"tindex":"7e7cfb86-8b85-11e6-ad10-d9762134807b","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.NativeBoolean:117","type":"CtAssignmentImpl","sourcecode":"id = org.mozilla.javascript.NativeBoolean.org.mozilla.javascript.NativeBoolean.int"},"variableMap":{"id":"operatorPosition","org.mozilla.javascript.NativeBoolean.Id_valueOf":"operatorPosition"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ast.InfixExpression:145","type":"CtAssignmentImpl","sourcecode":"org.mozilla.javascript.ast.InfixExpression.this.int = operatorPosition"},"status":0},{"failures":[],"tindex":"7e7cfb87-8b85-11e6-ad10-3b898ca07819","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.regexp.NativeRegExp:1709","type":"CtInvocationImpl","sourcecode":"org.mozilla.javascript.regexp.NativeRegExp.addCharacterRangeToCharSet(charSet, rangeStart, thisCh)"},"variableMap":{"charSet":"charSet","rangeStart":"rangeStart","thisCh":"thisCh"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.regexp.NativeRegExp:1694","type":"CtIfImpl","sourcecode":"if (inRange) {\n    if (((gData.org.mozilla.javascript.regexp.RECompiled.int) & (org.mozilla.javascript.regexp.NativeRegExp.org.mozilla.javascript.regexp.NativeRegExp.int)) != 0) {\n        assert rangeStart <= thisCh;\n        for (c = rangeStart ; c <= thisCh ; ) {\n            org.mozilla.javascript.regexp.NativeRegExp.addCharacterToCharSet(charSet, c);\n            char char = org.mozilla.javascript.regexp.NativeRegExp.upcase(c);\n            char char = org.mozilla.javascript.regexp.NativeRegExp.downcase(c);\n            if (c != uch)\n                org.mozilla.javascript.regexp.NativeRegExp.addCharacterToCharSet(charSet, uch);\n            \n            if (c != dch)\n                org.mozilla.javascript.regexp.NativeRegExp.addCharacterToCharSet(charSet, dch);\n            \n            if ((++c) == 0)\n                break;\n            \n        }\n    } else {\n        org.mozilla.javascript.regexp.NativeRegExp.addCharacterRangeToCharSet(charSet, rangeStart, thisCh);\n    }\n    inRange = false;\n} else {\n    if (((gData.org.mozilla.javascript.regexp.RECompiled.int) & (org.mozilla.javascript.regexp.NativeRegExp.org.mozilla.javascript.regexp.NativeRegExp.int)) != 0) {\n        org.mozilla.javascript.regexp.NativeRegExp.addCharacterToCharSet(charSet, org.mozilla.javascript.regexp.NativeRegExp.upcase(thisCh));\n        org.mozilla.javascript.regexp.NativeRegExp.addCharacterToCharSet(charSet, org.mozilla.javascript.regexp.NativeRegExp.downcase(thisCh));\n    } else {\n        org.mozilla.javascript.regexp.NativeRegExp.addCharacterToCharSet(charSet, thisCh);\n    }\n    if (src < (end - 1)) {\n        if ((gData.org.mozilla.javascript.regexp.RECompiled.char[][src]) == '-') {\n            ++src;\n            inRange = true;\n            rangeStart = thisCh;\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"7e7cfb88-8b85-11e6-ad10-676a73b9da5e","series":0,"name":"replace","transplant":{"position":"org.mozilla.classfile.ClassFileWriter:2344","type":"CtAssignmentImpl","sourcecode":"int[] = tmp"},"variableMap":{"stack":"stack","tmp":"stack"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.classfile.ClassFileWriter:4806","type":"CtAssignmentImpl","sourcecode":"int[] = new int[0]"},"status":-1},{"failures":[],"tindex":"7e7cfb89-8b85-11e6-ad10-65504e40f8bd","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.BaseFunction:276","type":"CtIfImpl","sourcecode":"if (indent >= 0) {\n    flags = 0;\n} else {\n    indent = 0;\n}"},"variableMap":{"indent":"firstLocal","flags":"firstLocal"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:380","type":"CtInvocationImpl","sourcecode":"cfw.addALoad(firstLocal)"},"status":-1},{"failures":[],"tindex":"7e7d229a-8b85-11e6-ad10-f5a26657c9d5","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.NativeGlobal:584","type":"CtIfImpl","sourcecode":"if ((i >> 4) != 0)\n    org.mozilla.javascript.Kit.codeBug();\n"},"variableMap":{"i":"org.mozilla.classfile.ByteCode.ARETURN"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:3036","type":"CtInvocationImpl","sourcecode":"org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int)"},"status":-1},{"failures":[],"tindex":"7e7d229b-8b85-11e6-ad10-eba4774fa7b4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ScriptableObject:2857","type":"CtWhileImpl","sourcecode":"while (slot != null) {\n    if (((slot.int) == indexOrHash) && (((slot.java.lang.String) == name) || ((name != null) && (name.equals(slot.java.lang.String))))) {\n        break;\n    } \n    prev = slot;\n    slot = slot.org.mozilla.javascript.ScriptableObject.Slot;\n}"},"status":-1}],"header":{"groupId":"r","transformationCount":9,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}