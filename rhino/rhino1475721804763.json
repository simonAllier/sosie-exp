{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"a73f0fed-8b6e-11e6-9653-7b27e20db884","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.json.JsonParser:38","type":"CtIfImpl","sourcecode":"if (json == null) {\n    throw new org.mozilla.javascript.json.JsonParser.ParseException(\"Input string may not be null\");\n} "},"variableMap":{"json":"separator"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeArray:941","type":"CtForImpl","sourcecode":"for (int int = 0 ; i != length ; i++) {\n    if (i != 0) {\n        sb.append(separator);\n    } \n    java.lang.String java.lang.String = buf[i];\n    if (str != null) {\n        sb.append(str);\n    } \n}"},"status":-1},{"failures":[],"tindex":"a743078e-8b6e-11e6-9653-39a8e55166f7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NodeTransformer:461","type":"CtInvocationImpl","sourcecode":"objectLiteral.putProp(org.mozilla.javascript.Node.org.mozilla.javascript.Node.int, list.toArray())"},"status":-1},{"failures":[],"tindex":"a7432e9f-8b6e-11e6-9653-3142cb38f9dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeDate:207","type":"CtSwitchImpl","sourcecode":"switch (id) {\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n        if (t == t) {\n            return org.mozilla.javascript.NativeDate.date_format(t, id);\n        } \n        return org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.java.lang.String;\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n        if (t == t) {\n            return org.mozilla.javascript.NativeDate.toLocale_helper(t, id);\n        } \n        return org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.java.lang.String;\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n        if (t == t) {\n            return org.mozilla.javascript.NativeDate.js_toUTCString(t);\n        } \n        return org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.java.lang.String;\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n        return (\"(new Date(\" + (org.mozilla.javascript.ScriptRuntime.toString(t))) + \"))\";\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n        return org.mozilla.javascript.ScriptRuntime.wrapNumber(t);\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n        if (t == t) {\n            if (id != (org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int))\n                t = org.mozilla.javascript.NativeDate.LocalTime(t);\n            \n            t = org.mozilla.javascript.NativeDate.YearFromTime(t);\n            if (id == (org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int)) {\n                if (cx.hasFeature(org.mozilla.javascript.Context.org.mozilla.javascript.Context.int)) {\n                    if ((1900 <= t) && (t < 2000)) {\n                        t -= 1900;\n                    } \n                } else {\n                    t -= 1900;\n                }\n            } \n        } \n        return org.mozilla.javascript.ScriptRuntime.wrapNumber(t);\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n        if (t == t) {\n            if (id == (org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int))\n                t = org.mozilla.javascript.NativeDate.LocalTime(t);\n            \n            t = org.mozilla.javascript.NativeDate.MonthFromTime(t);\n        } \n        return org.mozilla.javascript.ScriptRuntime.wrapNumber(t);\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n        if (t == t) {\n            if (id == (org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int))\n                t = org.mozilla.javascript.NativeDate.LocalTime(t);\n            \n            t = org.mozilla.javascript.NativeDate.DateFromTime(t);\n        } \n        return org.mozilla.javascript.ScriptRuntime.wrapNumber(t);\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n        if (t == t) {\n            if (id == (org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int))\n                t = org.mozilla.javascript.NativeDate.LocalTime(t);\n            \n            t = org.mozilla.javascript.NativeDate.WeekDay(t);\n        } \n        return org.mozilla.javascript.ScriptRuntime.wrapNumber(t);\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n        if (t == t) {\n            if (id == (org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int))\n                t = org.mozilla.javascript.NativeDate.LocalTime(t);\n            \n            t = org.mozilla.javascript.NativeDate.HourFromTime(t);\n        } \n        return org.mozilla.javascript.ScriptRuntime.wrapNumber(t);\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n        if (t == t) {\n            if (id == (org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int))\n                t = org.mozilla.javascript.NativeDate.LocalTime(t);\n            \n            t = org.mozilla.javascript.NativeDate.MinFromTime(t);\n        } \n        return org.mozilla.javascript.ScriptRuntime.wrapNumber(t);\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n        if (t == t) {\n            if (id == (org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int))\n                t = org.mozilla.javascript.NativeDate.LocalTime(t);\n            \n            t = org.mozilla.javascript.NativeDate.SecFromTime(t);\n        } \n        return org.mozilla.javascript.ScriptRuntime.wrapNumber(t);\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n        if (t == t) {\n            if (id == (org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int))\n                t = org.mozilla.javascript.NativeDate.LocalTime(t);\n            \n            t = org.mozilla.javascript.NativeDate.msFromTime(t);\n        } \n        return org.mozilla.javascript.ScriptRuntime.wrapNumber(t);\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n        if (t == t) {\n            t = (t - (org.mozilla.javascript.NativeDate.LocalTime(t))) / (org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.double);\n        } \n        return org.mozilla.javascript.ScriptRuntime.wrapNumber(t);\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n        t = org.mozilla.javascript.NativeDate.TimeClip(org.mozilla.javascript.ScriptRuntime.toNumber(args, 0));\n        realThis.double = t;\n        return org.mozilla.javascript.ScriptRuntime.wrapNumber(t);\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n        t = org.mozilla.javascript.NativeDate.makeTime(t, args, id);\n        realThis.double = t;\n        return org.mozilla.javascript.ScriptRuntime.wrapNumber(t);\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n        t = org.mozilla.javascript.NativeDate.makeDate(t, args, id);\n        realThis.double = t;\n        return org.mozilla.javascript.ScriptRuntime.wrapNumber(t);\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n        {\n            double double = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n            if ((year != year) || (java.lang.Double.isInfinite(year))) {\n                t = org.mozilla.javascript.ScriptRuntime.org.mozilla.javascript.ScriptRuntime.double;\n            } else {\n                if (t != t) {\n                    t = 0;\n                } else {\n                    t = org.mozilla.javascript.NativeDate.LocalTime(t);\n                }\n                if ((year >= 0) && (year <= 99))\n                    year += 1900;\n                \n                double double = org.mozilla.javascript.NativeDate.MakeDay(year, org.mozilla.javascript.NativeDate.MonthFromTime(t), org.mozilla.javascript.NativeDate.DateFromTime(t));\n                t = org.mozilla.javascript.NativeDate.MakeDate(day, org.mozilla.javascript.NativeDate.TimeWithinDay(t));\n                t = org.mozilla.javascript.NativeDate.internalUTC(t);\n                t = org.mozilla.javascript.NativeDate.TimeClip(t);\n            }\n        }\n        realThis.double = t;\n        return org.mozilla.javascript.ScriptRuntime.wrapNumber(t);\n    case org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int :\n        if (t == t) {\n            return org.mozilla.javascript.NativeDate.js_toISOString(t);\n        } \n        java.lang.String java.lang.String = org.mozilla.javascript.ScriptRuntime.getMessage0(\"msg.invalid.date\");\n        throw org.mozilla.javascript.ScriptRuntime.constructError(\"RangeError\", msg);\n    default :\n        throw new java.lang.IllegalArgumentException(java.lang.String.valueOf(id));\n}"},"status":-1},{"failures":[],"tindex":"a7437cc0-8b6e-11e6-9653-19e24260f1fa","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.regexp.NativeRegExp:1718","type":"CtInvocationImpl","sourcecode":"org.mozilla.javascript.regexp.NativeRegExp.addCharacterToCharSet(charSet, thisCh)"},"variableMap":{"charSet":"charSet","thisCh":"thisCh"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.regexp.NativeRegExp:1715","type":"CtInvocationImpl","sourcecode":"org.mozilla.javascript.regexp.NativeRegExp.addCharacterToCharSet(charSet, org.mozilla.javascript.regexp.NativeRegExp.upcase(thisCh))"},"status":-1},{"failures":[],"tindex":"a7437cc1-8b6e-11e6-9653-c1a495b23823","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.Context:1991","type":"CtReturnImpl","sourcecode":"return ((-1) <= optimizationLevel) && (optimizationLevel <= 9)"},"variableMap":{"optimizationLevel":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ScriptableObject:453","type":"CtReturnImpl","sourcecode":"return null != (getSlot(null, index, org.mozilla.javascript.ScriptableObject.org.mozilla.javascript.ScriptableObject.int))"},"status":-1},{"failures":[],"tindex":"a743a3d2-8b6e-11e6-9653-59496f325b4f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:3797","type":"CtInvocationImpl","sourcecode":"generateCatchBlock(org.mozilla.javascript.optimizer.BodyCodegen.org.mozilla.javascript.optimizer.BodyCodegen.int, savedVariableObject, catchLabel, exceptionLocal, handlerLabels[org.mozilla.javascript.optimizer.BodyCodegen.org.mozilla.javascript.optimizer.BodyCodegen.int])"},"status":-1},{"failures":[],"tindex":"a743f1f3-8b6e-11e6-9653-dd13c1a850e0","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.Interpreter:643","type":"CtIfImpl","sourcecode":"if (linePCIndex != 0)\n    org.mozilla.javascript.Kit.codeBug();\n"},"variableMap":{"linePCIndex":"strLen"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.classfile.ClassFileWriter:4550","type":"CtInvocationImpl","sourcecode":"ensure(((1 + 2) + (strLen * 3)))"},"status":-1},{"failures":[],"tindex":"a743f1f4-8b6e-11e6-9653-0bc0a119e4af","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.ScriptRuntime:186","type":"CtInvocationImpl","sourcecode":"org.mozilla.javascript.NativeArray.setMaximumInitialCapacity(200000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ast.Scope:85","type":"CtInvocationImpl","sourcecode":"child.setParentScope(org.mozilla.javascript.ast.Scope.this)"},"status":-1}],"header":{"groupId":"r","transformationCount":8,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}