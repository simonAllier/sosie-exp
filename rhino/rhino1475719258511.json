{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"b96d5a93-8b68-11e6-a090-636721aef11c","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.ScriptableObject:3120","type":"CtAssignmentImpl","sourcecode":"next = next.org.mozilla.javascript.ScriptableObject.Slot"},"variableMap":{"next":"prev","orderedNext":"prev"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ScriptableObject:3161","type":"CtAssignmentImpl","sourcecode":"prev = org.mozilla.javascript.ScriptableObject.Slot"},"status":-1},{"failures":[],"tindex":"b96d81a4-8b68-11e6-a090-7fb06e1a8374","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.IRFactory:2017","type":"CtSwitchImpl","sourcecode":"switch (nodeType) {\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n        if ((left.int) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n            java.lang.String java.lang.String;\n            if ((right.int) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n                s2 = right.getString();\n            } else if ((right.int) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n                s2 = org.mozilla.javascript.ScriptRuntime.numberToString(right.getDouble(), 10);\n            } else {\n                break;\n            }\n            java.lang.String java.lang.String = left.getString();\n            left.setString(s1.concat(s2));\n            return left;\n        } else if ((left.int) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n            if ((right.int) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n                left.setDouble(((left.getDouble()) + (right.getDouble())));\n                return left;\n            } else if ((right.int) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n                java.lang.String java.lang.String;\n                java.lang.String java.lang.String;\n                s1 = org.mozilla.javascript.ScriptRuntime.numberToString(left.getDouble(), 10);\n                s2 = right.getString();\n                right.setString(s1.concat(s2));\n                return right;\n            } \n        } \n        break;\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n        if ((left.int) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n            double double = left.getDouble();\n            if ((right.int) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n                left.setDouble((ld - (right.getDouble())));\n                return left;\n            } else if (ld == 0.0) {\n                return new org.mozilla.javascript.Node(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int , right);\n            } \n        } else if ((right.int) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n            if ((right.getDouble()) == 0.0) {\n                return new org.mozilla.javascript.Node(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int , left);\n            } \n        } \n        break;\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n        if ((left.int) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n            double double = left.getDouble();\n            if ((right.int) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n                left.setDouble((ld * (right.getDouble())));\n                return left;\n            } else if (ld == 1.0) {\n                return new org.mozilla.javascript.Node(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int , right);\n            } \n        } else if ((right.int) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n            if ((right.getDouble()) == 1.0) {\n                return new org.mozilla.javascript.Node(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int , left);\n            } \n        } \n        break;\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n        if ((right.int) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n            double double = right.getDouble();\n            if ((left.int) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n                left.setDouble(((left.getDouble()) / rd));\n                return left;\n            } else if (rd == 1.0) {\n                return new org.mozilla.javascript.Node(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int , left);\n            } \n        } \n        break;\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n        {\n            int int = org.mozilla.javascript.IRFactory.isAlwaysDefinedBoolean(left);\n            if (leftStatus == (org.mozilla.javascript.IRFactory.org.mozilla.javascript.IRFactory.int)) {\n                return left;\n            } else if (leftStatus == (org.mozilla.javascript.IRFactory.org.mozilla.javascript.IRFactory.int)) {\n                return right;\n            } \n            break;\n        }\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n        {\n            int int = org.mozilla.javascript.IRFactory.isAlwaysDefinedBoolean(left);\n            if (leftStatus == (org.mozilla.javascript.IRFactory.org.mozilla.javascript.IRFactory.int)) {\n                return left;\n            } else if (leftStatus == (org.mozilla.javascript.IRFactory.org.mozilla.javascript.IRFactory.int)) {\n                return right;\n            } \n            break;\n        }\n}"},"status":-1},{"failures":[],"tindex":"b96da8b5-8b68-11e6-a090-f1f68a3f569b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeArray:530","type":"CtIfImpl","sourcecode":"if ((cx.getLanguageVersion()) == (org.mozilla.javascript.Context.org.mozilla.javascript.Context.int))\n    return java.lang.Long.valueOf(long);\n"},"status":-1},{"failures":[],"tindex":"b96da8b6-8b68-11e6-a090-0d32c2ebb330","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:4213","type":"CtIfImpl","sourcecode":"if ((fBlock != null) && ((fBlock.getType()) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))) {\n    return fBlock;\n} "},"status":-1},{"failures":[],"tindex":"b96da8b7-8b68-11e6-a090-4b8e0fa82c14","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.JavaAdapter:122","type":"CtIfImpl","sourcecode":"if (N == 0) {\n    throw org.mozilla.javascript.ScriptRuntime.typeError0(\"msg.adapter.zero.args\");\n} "},"variableMap":{"N":"N"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeArray:479","type":"CtIfImpl","sourcecode":"if (N > currentLength) {\n    N = ((int)(currentLength));\n} "},"status":-1},{"failures":[],"tindex":"b96da8b8-8b68-11e6-a090-794bbd424553","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.Parser:1349","type":"CtInvocationImpl","sourcecode":"pn.setBody(body)"},"variableMap":{"body":"right","pn":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ast.InfixExpression:69","type":"CtInvocationImpl","sourcecode":"setRight(right)"},"status":-1},{"failures":[],"tindex":"b96da8b9-8b68-11e6-a090-9b6f8a9187c9","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.CodeGenerator:1169","type":"CtIfImpl","sourcecode":"if (!(label < (int)))\n    org.mozilla.javascript.Kit.codeBug();\n"},"variableMap":{"label":"type","labelTableTop":"type"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:2207","type":"CtInvocationImpl","sourcecode":"visitOptimizedCall(node, target, type, child)"},"status":-1},{"failures":[],"tindex":"b96da8ba-8b68-11e6-a090-33a9d1b715f5","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.DToA:86","type":"CtIfImpl","sourcecode":"if ((x & 1) != 0)\n    return 0;\n"},"variableMap":{"x":"position"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ast.AstNode:164","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"b96da8bb-8b68-11e6-a090-0340308b3ecf","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.Parser:619","type":"CtInvocationImpl","sourcecode":"root.setBaseLineno(baseLineno)"},"variableMap":{"baseLineno":"org.mozilla.javascript.Token.IFNE","root":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NodeTransformer:324","type":"CtIfImpl","sourcecode":"if (type == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n    while ((child.getType()) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n        child = child.getFirstChild();\n    }\n    if (((child.getType()) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) || ((child.getType()) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))) {\n        org.mozilla.javascript.Node org.mozilla.javascript.Node = child.getFirstChild();\n        org.mozilla.javascript.Node org.mozilla.javascript.Node = child.getLastChild();\n        if (((first.getType()) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) && (first.getString().equals(\"undefined\")))\n            child = last;\n        else if (((last.getType()) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) && (last.getString().equals(\"undefined\")))\n            child = first;\n        \n    } \n} "},"status":-1},{"failures":[],"tindex":"b96dcfcc-8b68-11e6-a090-0df5a83ff0da","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.IRFactory:2191","type":"CtLocalVariableImpl","sourcecode":"org.mozilla.javascript.Node org.mozilla.javascript.Node = left.getLastChild()"},"variableMap":{"left":"target"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.CodeGenerator:360","type":"CtLocalVariableImpl","sourcecode":"org.mozilla.javascript.Node org.mozilla.javascript.Node = ((org.mozilla.javascript.ast.Jump)(node)).org.mozilla.javascript.Node"},"status":-1}],"header":{"groupId":"r","transformationCount":10,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}