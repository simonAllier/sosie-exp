{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"8bfa0c02-8b85-11e6-91b9-63df179136e5","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.Parser:3637","type":"CtAssignmentImpl","sourcecode":"org.mozilla.javascript.Parser.this.java.util.List<org.mozilla.javascript.ast.Jump> = java.util.List<org.mozilla.javascript.ast.Jump>"},"variableMap":{"loopAndSwitchSet":"loopAndSwitchSet","savedLoopAndSwitchSet":"loopAndSwitchSet"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.Parser:3622","type":"CtAssignmentImpl","sourcecode":"java.util.List<org.mozilla.javascript.ast.Jump> = org.mozilla.javascript.Parser.this.java.util.List<org.mozilla.javascript.ast.Jump>"},"status":-1},{"failures":[],"tindex":"8bfa3313-8b85-11e6-91b9-9bb33f19af21","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeString:232","type":"CtInvocationImpl","sourcecode":"sb.append(org.mozilla.javascript.ScriptRuntime.toUint16(args[i]))"},"status":-1},{"failures":[],"tindex":"8bfa5a24-8b85-11e6-91b9-c37468bed9a1","series":0,"name":"replace","transplant":{"position":"org.mozilla.classfile.ClassFileWriter:705","type":"CtIfImpl","sourcecode":"if (!((0 <= theOperand1) && (theOperand1 < 65536)))\n    throw new org.mozilla.classfile.ClassFileWriter.ClassFileFormatException(\"out of range variable\");\n"},"variableMap":{"theOperand1":"newDigit"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ScriptRuntime:476","type":"CtIfImpl","sourcecode":"if (('0' <= c) && (c <= digitMax))\n    newDigit = c - '0';\nelse if (('a' <= c) && (c < lowerCaseBound))\n    newDigit = (c - 'a') + 10;\nelse if (('A' <= c) && (c < upperCaseBound))\n    newDigit = (c - 'A') + 10;\nelse\n    break;\n"},"status":-1},{"failures":[],"tindex":"8bfa5a25-8b85-11e6-91b9-39cd5112b8e1","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.UintMap:277","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][index] = oldValues[i]"},"variableMap":{"values":"loadLocks","index":"i","i":"i","oldValues":"loadLocks"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase:49","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][i] = new java.lang.Object()"},"status":-1},{"failures":[],"tindex":"8bfa5a26-8b85-11e6-91b9-35698abd4bd7","series":0,"name":"replace","transplant":{"position":"org.mozilla.classfile.ClassFileWriter:1657","type":"CtLocalVariableImpl","sourcecode":"int[] int[] = new int[0]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.Context:880","type":"CtLocalVariableImpl","sourcecode":"int[] int[] = new int[]{ 0 }"},"status":-1},{"failures":[],"tindex":"8bfa5a27-8b85-11e6-91b9-ab40810b0579","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.NativeDate:373","type":"CtReturnImpl","sourcecode":"return org.mozilla.javascript.NativeDate.js_toISOString(t)"},"variableMap":{"t":"number"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeJavaObject:704","type":"CtIfImpl","sourcecode":"if (((java.lang.Double.isInfinite(number)) || (java.lang.Double.isNaN(number))) || (number == 0.0)) {\n    return new java.lang.Float(((float)(number)));\n} else {\n    double double = java.lang.Math.abs(number);\n    if (absNumber < (java.lang.Float.java.lang.Float.float)) {\n        return new java.lang.Float((number > 0.0 ? +0.0 : -0.0));\n    } else if (absNumber > (java.lang.Float.java.lang.Float.float)) {\n        return new java.lang.Float((number > 0.0 ? java.lang.Float.java.lang.Float.float : java.lang.Float.java.lang.Float.float));\n    } else {\n        return new java.lang.Float(((float)(number)));\n    }\n}"},"status":-1},{"failures":[],"tindex":"8bfa5a28-8b85-11e6-91b9-975f5d653cc3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.regexp.NativeRegExpCtor:183","type":"CtIfImpl","sourcecode":"if ((1 <= shifted) && (shifted <= (org.mozilla.javascript.regexp.NativeRegExpCtor.org.mozilla.javascript.regexp.NativeRegExpCtor.int))) {\n    switch (shifted) {\n        case org.mozilla.javascript.regexp.NativeRegExpCtor.org.mozilla.javascript.regexp.NativeRegExpCtor.int :\n            return \"multiline\";\n        case org.mozilla.javascript.regexp.NativeRegExpCtor.org.mozilla.javascript.regexp.NativeRegExpCtor.int :\n            return \"$*\";\n        case org.mozilla.javascript.regexp.NativeRegExpCtor.org.mozilla.javascript.regexp.NativeRegExpCtor.int :\n            return \"input\";\n        case org.mozilla.javascript.regexp.NativeRegExpCtor.org.mozilla.javascript.regexp.NativeRegExpCtor.int :\n            return \"$_\";\n        case org.mozilla.javascript.regexp.NativeRegExpCtor.org.mozilla.javascript.regexp.NativeRegExpCtor.int :\n            return \"lastMatch\";\n        case org.mozilla.javascript.regexp.NativeRegExpCtor.org.mozilla.javascript.regexp.NativeRegExpCtor.int :\n            return \"$&\";\n        case org.mozilla.javascript.regexp.NativeRegExpCtor.org.mozilla.javascript.regexp.NativeRegExpCtor.int :\n            return \"lastParen\";\n        case org.mozilla.javascript.regexp.NativeRegExpCtor.org.mozilla.javascript.regexp.NativeRegExpCtor.int :\n            return \"$+\";\n        case org.mozilla.javascript.regexp.NativeRegExpCtor.org.mozilla.javascript.regexp.NativeRegExpCtor.int :\n            return \"leftContext\";\n        case org.mozilla.javascript.regexp.NativeRegExpCtor.org.mozilla.javascript.regexp.NativeRegExpCtor.int :\n            return \"$`\";\n        case org.mozilla.javascript.regexp.NativeRegExpCtor.org.mozilla.javascript.regexp.NativeRegExpCtor.int :\n            return \"rightContext\";\n        case org.mozilla.javascript.regexp.NativeRegExpCtor.org.mozilla.javascript.regexp.NativeRegExpCtor.int :\n            return \"$'\";\n    }\n    int int = (shifted - (org.mozilla.javascript.regexp.NativeRegExpCtor.org.mozilla.javascript.regexp.NativeRegExpCtor.int)) - 1;\n    char[] char[] = new char[]{ '$' , ((char)('1' + substring_number)) };\n    return new java.lang.String(buf);\n} "},"status":-1}],"header":{"groupId":"r","transformationCount":7,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}