{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"122965de-8b7b-11e6-9971-6702485bf051","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.TokenStream:515","type":"CtWhileImpl","sourcecode":"strLoop : while (c != (int)) {\n    if ((c == '\\n') || (c == (org.mozilla.javascript.TokenStream.org.mozilla.javascript.TokenStream.int))) {\n        ungetChar(c);\n        int = int;\n        org.mozilla.javascript.Parser.addError(\"msg.unterminated.string.lit\");\n        return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n    } \n    if (c == '\\\\') {\n        int int;\n        c = getChar();\n        switch (c) {\n            case 'b' :\n                c = '\\b';\n                break;\n            case 'f' :\n                c = '\\f';\n                break;\n            case 'n' :\n                c = '\\n';\n                break;\n            case 'r' :\n                c = '\\r';\n                break;\n            case 't' :\n                c = '\\t';\n                break;\n            case 'v' :\n                c = 11;\n                break;\n            case 'u' :\n                int int = int;\n                addToString('u');\n                escapeVal = 0;\n                for (int int = 0 ; i != 4 ; ++i) {\n                    c = getChar();\n                    escapeVal = org.mozilla.javascript.Kit.xDigitToInt(c, escapeVal);\n                    if (escapeVal < 0) {\n                        continue strLoop;\n                    } \n                    addToString(c);\n                }\n                int = escapeStart;\n                c = escapeVal;\n                break;\n            case 'x' :\n                c = getChar();\n                escapeVal = org.mozilla.javascript.Kit.xDigitToInt(c, 0);\n                if (escapeVal < 0) {\n                    addToString('x');\n                    continue strLoop;\n                } else {\n                    int int = c;\n                    c = getChar();\n                    escapeVal = org.mozilla.javascript.Kit.xDigitToInt(c, escapeVal);\n                    if (escapeVal < 0) {\n                        addToString('x');\n                        addToString(c1);\n                        continue strLoop;\n                    } else {\n                        c = escapeVal;\n                    }\n                }\n                break;\n            case '\\n' :\n                c = getChar();\n                continue strLoop;\n            default :\n                if (('0' <= c) && (c < '8')) {\n                    int int = c - '0';\n                    c = getChar();\n                    if (('0' <= c) && (c < '8')) {\n                        val = ((8 * val) + c) - '0';\n                        c = getChar();\n                        if ((('0' <= c) && (c < '8')) && (val <= 31)) {\n                            val = ((8 * val) + c) - '0';\n                            c = getChar();\n                        } \n                    } \n                    ungetChar(c);\n                    c = val;\n                } \n        }\n    } \n    addToString(c);\n    c = getChar(false);\n}"},"variableMap":{"cursor":"org.mozilla.javascript.Token.YIELD","quoteChar":"org.mozilla.javascript.Token.NAME","org.mozilla.javascript.Token.ERROR":"org.mozilla.javascript.Token.EOF","c":"c","parser":"parser","tokenEnd":"org.mozilla.javascript.Token.NAME","stringBufferTop":"org.mozilla.javascript.Token.LET","this":"this","org.mozilla.javascript.TokenStream.EOF_CHAR":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.TokenStream:329","type":"CtIfImpl","sourcecode":"if (identifierStart) {\n    boolean boolean = isUnicodeEscapeStart;\n    for ( ;  ; ) {\n        if (isUnicodeEscapeStart) {\n            int int = 0;\n            for (int int = 0 ; i != 4 ; ++i) {\n                c = getChar();\n                escapeVal = org.mozilla.javascript.Kit.xDigitToInt(c, escapeVal);\n                if (escapeVal < 0) {\n                    break;\n                } \n            }\n            if (escapeVal < 0) {\n                org.mozilla.javascript.Parser.addError(\"msg.invalid.escape\");\n                return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n            } \n            addToString(escapeVal);\n            isUnicodeEscapeStart = false;\n        } else {\n            c = getChar();\n            if (c == '\\\\') {\n                c = getChar();\n                if (c == 'u') {\n                    isUnicodeEscapeStart = true;\n                    containsEscape = true;\n                } else {\n                    org.mozilla.javascript.Parser.addError(\"msg.illegal.character\");\n                    return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n                }\n            } else {\n                if (((c == (org.mozilla.javascript.TokenStream.org.mozilla.javascript.TokenStream.int)) || (c == (org.mozilla.javascript.TokenStream.org.mozilla.javascript.TokenStream.char))) || (!(java.lang.Character.isJavaIdentifierPart(((char)(c)))))) {\n                    break;\n                } \n                addToString(c);\n            }\n        }\n    }\n    ungetChar(c);\n    java.lang.String java.lang.String = getStringFromBuffer();\n    if (!containsEscape) {\n        int int = org.mozilla.javascript.TokenStream.stringToKeyword(str);\n        if (result != (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n            if (((result == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) || (result == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))) && ((org.mozilla.javascript.Parser.org.mozilla.javascript.CompilerEnvirons.getLanguageVersion()) < (org.mozilla.javascript.Context.org.mozilla.javascript.Context.int))) {\n                java.lang.String = result == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int) ? \"let\" : \"yield\";\n                result = org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n            } \n            org.mozilla.javascript.TokenStream.this.java.lang.String = ((java.lang.String)(org.mozilla.javascript.ObjToIntMap.intern(str)));\n            if (result != (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n                return result;\n            } else if (!(org.mozilla.javascript.Parser.org.mozilla.javascript.CompilerEnvirons.isReservedKeywordAsIdentifier())) {\n                return result;\n            } \n        } \n    } else if (org.mozilla.javascript.TokenStream.isKeyword(str)) {\n        str = convertLastCharToHex(str);\n    } \n    org.mozilla.javascript.TokenStream.this.java.lang.String = ((java.lang.String)(org.mozilla.javascript.ObjToIntMap.intern(str)));\n    return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n} "},"status":-2},{"failures":[],"tindex":"12298cef-8b7b-11e6-9971-4fa3ac348f3c","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.optimizer.Codegen:639","type":"CtInvocationImpl","sourcecode":"cfw.addPush(0)"},"variableMap":{"cfw":"cfw"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.JavaAdapter:407","type":"CtIfImpl","sourcecode":"if (!(generatedOverrides.has(methodKey))) {\n    org.mozilla.javascript.JavaAdapter.generateMethod(cfw, adapterName, methodName, argTypes, method.getReturnType(), true);\n    generatedOverrides.put(methodKey, 0);\n    generatedMethods.put(methodName, 0);\n} "},"status":0},{"failures":[],"tindex":"1229b400-8b7b-11e6-9971-2d85f56bb9bb","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.NativeArray:1627","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object[] java.lang.Object[] = new java.lang.Object[3]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ObjArray:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object[] java.lang.Object[] = new java.lang.Object[int]"},"status":-1},{"failures":[],"tindex":"1229b401-8b7b-11e6-9971-6f552c45a54e","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.Context:1581","type":"CtLocalVariableImpl","sourcecode":"org.mozilla.javascript.BaseFunction org.mozilla.javascript.BaseFunction = ((org.mozilla.javascript.BaseFunction)(fun))"},"variableMap":{"fun":"thisObj"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.BaseFunction:265","type":"CtLocalVariableImpl","sourcecode":"org.mozilla.javascript.BaseFunction org.mozilla.javascript.BaseFunction = realFunction(thisObj, f)"},"status":-1},{"failures":[],"tindex":"1229b402-8b7b-11e6-9971-0b33935e9d24","series":0,"name":"replace","transplant":{"position":"org.mozilla.classfile.ClassFileWriter:2378","type":"CtReturnImpl","sourcecode":"return type"},"variableMap":{"type":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeArray:376","type":"CtReturnImpl","sourcecode":"return index"},"status":-2},{"failures":[],"tindex":"1229b403-8b7b-11e6-9971-3134a34b2715","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.NativeObject:227","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = id == (org.mozilla.javascript.NativeObject.org.mozilla.javascript.NativeObject.int)"},"variableMap":{"id":"org.mozilla.javascript.Node.DESTRUCTURING_SHORTHAND","org.mozilla.javascript.NativeObject.Id___defineSetter__":"org.mozilla.javascript.Node.DESTRUCTURING_SHORTHAND"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.IRFactory:2346","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = java.lang.Boolean.java.lang.Boolean.java.lang.Boolean.equals(prop.getProp(org.mozilla.javascript.Node.org.mozilla.javascript.Node.int))"},"status":-1},{"failures":[],"tindex":"1229b404-8b7b-11e6-9971-af61c91f1684","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.FunctionObject:453","type":"CtAssignmentImpl","sourcecode":"result = org.mozilla.javascript.MemberBox.newInstance(invokeArgs)"},"status":-1}],"header":{"groupId":"r","transformationCount":7,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}