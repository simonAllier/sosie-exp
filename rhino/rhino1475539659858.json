{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"904a318e-89c6-11e6-82e4-5185f9c75b88","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.TokenStream:1461","type":"CtAssertImpl","sourcecode":"assert (position >= 0) && (position <= (int))"},"variableMap":{"cursor":"org.mozilla.javascript.regexp.NativeRegExp.INDEX_LEN","position":"continuationOp"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.regexp.NativeRegExp:2264","type":"CtIfImpl","sourcecode":"if (!result) {\n    if (((state.int) == (-1)) || ((state.int) > 0)) {\n        org.mozilla.javascript.regexp.NativeRegExp.pushProgState(gData, state.int, state.int, gData.int, null, state.int, state.int);\n        continuationOp = org.mozilla.javascript.regexp.NativeRegExp.org.mozilla.javascript.regexp.NativeRegExp.byte;\n        continuationPc = pc;\n        int int = org.mozilla.javascript.regexp.NativeRegExp.getIndex(program, pc);\n        pc += org.mozilla.javascript.regexp.NativeRegExp.org.mozilla.javascript.regexp.NativeRegExp.int;\n        int int = org.mozilla.javascript.regexp.NativeRegExp.getIndex(program, pc);\n        pc += 2 * (org.mozilla.javascript.regexp.NativeRegExp.org.mozilla.javascript.regexp.NativeRegExp.int);\n        for (int int = 0 ; k < parenCount ; k++) {\n            gData.setParens((parenIndex + k), (-1), 0);\n        }\n        op = program[(pc++)];\n        continue;\n    } else {\n        continuationPc = state.int;\n        continuationOp = state.int;\n        break;\n    }\n} else {\n    if (((state.int) == 0) && ((gData.int) == (state.int))) {\n        result = false;\n        continuationPc = state.int;\n        continuationOp = state.int;\n        break;\n    } \n    int int = state.int;\n    int int = state.int;\n    if (new_min != 0)\n        new_min--;\n    \n    if (new_max != (-1))\n        new_max--;\n    \n    org.mozilla.javascript.regexp.NativeRegExp.pushProgState(gData, new_min, new_max, gData.int, null, state.int, state.int);\n    if (new_min != 0) {\n        continuationOp = org.mozilla.javascript.regexp.NativeRegExp.org.mozilla.javascript.regexp.NativeRegExp.byte;\n        continuationPc = pc;\n        int int = org.mozilla.javascript.regexp.NativeRegExp.getIndex(program, pc);\n        pc += org.mozilla.javascript.regexp.NativeRegExp.org.mozilla.javascript.regexp.NativeRegExp.int;\n        int int = org.mozilla.javascript.regexp.NativeRegExp.getIndex(program, pc);\n        pc += 2 * (org.mozilla.javascript.regexp.NativeRegExp.org.mozilla.javascript.regexp.NativeRegExp.int);\n        for (int int = 0 ; k < parenCount ; k++) {\n            gData.setParens((parenIndex + k), (-1), 0);\n        }\n        op = program[(pc++)];\n    } else {\n        continuationPc = state.int;\n        continuationOp = state.int;\n        org.mozilla.javascript.regexp.NativeRegExp.pushBackTrackState(gData, org.mozilla.javascript.regexp.NativeRegExp.org.mozilla.javascript.regexp.NativeRegExp.byte, pc);\n        org.mozilla.javascript.regexp.NativeRegExp.popProgState(gData);\n        pc += 2 * (org.mozilla.javascript.regexp.NativeRegExp.org.mozilla.javascript.regexp.NativeRegExp.int);\n        pc = pc + (org.mozilla.javascript.regexp.NativeRegExp.getOffset(program, pc));\n        op = program[(pc++)];\n    }\n    continue;\n}"},"status":-1},{"failures":[],"tindex":"904a589f-89c6-11e6-82e4-5303c78b8be1","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.regexp.NativeRegExp:555","type":"CtLocalVariableImpl","sourcecode":"char char = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ScriptRuntime:461","type":"CtLocalVariableImpl","sourcecode":"char char = 'a'"},"status":-1},{"failures":[],"tindex":"904a58a0-89c6-11e6-82e4-b9f7c81c028a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.JavaMembers:266","type":"CtIfImpl","sourcecode":"if (methodOrCtor.isCtor()) {\n    org.mozilla.javascript.NativeJavaConstructor org.mozilla.javascript.NativeJavaConstructor = new org.mozilla.javascript.NativeJavaConstructor(methodOrCtor);\n    fun.setPrototype(prototype);\n    member = fun;\n    ht.put(name, fun);\n} else {\n    java.lang.String java.lang.String = methodOrCtor.getName();\n    member = ht.get(trueName);\n    if ((member instanceof org.mozilla.javascript.NativeJavaMethod) && ((((org.mozilla.javascript.NativeJavaMethod)(member)).org.mozilla.javascript.MemberBox[].int) > 1)) {\n        org.mozilla.javascript.NativeJavaMethod org.mozilla.javascript.NativeJavaMethod = new org.mozilla.javascript.NativeJavaMethod(methodOrCtor , name);\n        fun.setPrototype(prototype);\n        ht.put(name, fun);\n        member = fun;\n    } \n}"},"status":-1},{"failures":[],"tindex":"904a7fb1-89c6-11e6-82e4-7b33d235ae80","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.optimizer.Codegen:612","type":"CtInvocationImpl","sourcecode":"cfw.addALoad(CONTEXT_ARG)"},"variableMap":{"CONTEXT_ARG":"enterCount","cfw":"helper"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.Context:398","type":"CtIfImpl","sourcecode":"if (old != null) {\n    cx = old;\n} else {\n    if (cx == null) {\n        cx = factory.makeContext();\n        if ((cx.int) != 0) {\n            throw new java.lang.IllegalStateException(\"factory.makeContext() returned Context instance already associated with some thread\");\n        } \n        factory.onContextCreated(cx);\n        if ((factory.isSealed()) && (!(cx.isSealed()))) {\n            cx.seal(null);\n        } \n    } else {\n        if ((cx.int) != 0) {\n            throw new java.lang.IllegalStateException(\"can not use Context instance already associated with some thread\");\n        } \n    }\n    org.mozilla.javascript.VMBridge.org.mozilla.javascript.VMBridge.org.mozilla.javascript.VMBridge.setContext(helper, cx);\n}"},"status":-1},{"failures":[],"tindex":"904a7fb2-89c6-11e6-82e4-3fc4f2547478","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ScriptRuntime:2568","type":"CtAssignmentImpl","sourcecode":"callThis = org.mozilla.javascript.ScriptRuntime.getTopCallScope(cx)"},"status":-1},{"failures":[],"tindex":"904a7fb3-89c6-11e6-82e4-dff03b73c970","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.IRFactory:799","type":"CtReturnImpl","sourcecode":"return node"},"variableMap":{"node":"body"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.IRFactory:1190","type":"CtReturnImpl","sourcecode":"return createLoop(loop, org.mozilla.javascript.IRFactory.org.mozilla.javascript.IRFactory.int, body, cond, null, null)"},"status":-1},{"failures":[],"tindex":"904a7fb4-89c6-11e6-82e4-9fb730a60cb2","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.optimizer.Codegen:1963","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw org.mozilla.javascript.optimizer.Codegen.badTree();\n"},"variableMap":{"hasVarsInRegs":"includePrivate"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.JavaMembers:313","type":"CtWhileImpl","sourcecode":"while (clazz != null) {\n    try {\n        java.lang.reflect.Method[] java.lang.reflect.Method[] = clazz.getDeclaredMethods();\n        for (java.lang.reflect.Method java.lang.reflect.Method : methods) {\n            int int = method.getModifiers();\n            if (((java.lang.reflect.Modifier.isPublic(mods)) || (java.lang.reflect.Modifier.isProtected(mods))) || includePrivate) {\n                org.mozilla.javascript.JavaMembers.MethodSignature org.mozilla.javascript.JavaMembers.MethodSignature = new org.mozilla.javascript.JavaMembers.MethodSignature(method);\n                if (!(map.containsKey(sig))) {\n                    if (includePrivate && (!(method.isAccessible())))\n                        method.setAccessible(true);\n                    \n                    map.put(sig, method);\n                } \n            } \n        }\n        clazz = clazz.getSuperclass();\n    } catch (java.lang.SecurityException e) {\n        java.lang.reflect.Method[] java.lang.reflect.Method[] = clazz.getMethods();\n        for (java.lang.reflect.Method java.lang.reflect.Method : methods) {\n            org.mozilla.javascript.JavaMembers.MethodSignature org.mozilla.javascript.JavaMembers.MethodSignature = new org.mozilla.javascript.JavaMembers.MethodSignature(method);\n            if (!(map.containsKey(sig)))\n                map.put(sig, method);\n            \n        }\n        break;\n    }\n}"},"status":-1},{"failures":[],"tindex":"904aa6c5-89c6-11e6-82e4-97f280747702","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.JavaMembers:459","type":"CtIfImpl","sourcecode":"if (N < 2)\n    org.mozilla.javascript.Kit.codeBug();\n"},"variableMap":{"N":"lineNumber"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ScriptStackElement:43","type":"CtIfImpl","sourcecode":"if ((int) > (-1)) {\n    sb.append(':').append(int);\n} "},"status":-1},{"failures":[],"tindex":"904aa6c6-89c6-11e6-82e4-4b447b45d51c","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.commonjs.module.Require:118","type":"CtIfImpl","sourcecode":"if (!(org.mozilla.javascript.commonjs.module.Require.this.java.lang.String.equals(mainModuleId))) {\n    throw new java.lang.IllegalStateException((\"Main module already set to \" + (org.mozilla.javascript.commonjs.module.Require.this.java.lang.String)));\n} "},"variableMap":{"mainModuleId":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ScriptableObject:736","type":"CtInvocationImpl","sourcecode":"checkNotSealed(name, 0)"},"status":-1},{"failures":[],"tindex":"904aa6c7-89c6-11e6-82e4-4bd22d483d47","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.ScriptableObject:1570","type":"CtIfImpl","sourcecode":"if (java.lang.Character.isUpperCase(propName.charAt(0))) {\n    if ((propName.length()) == 1) {\n        propName = propName.toLowerCase();\n    } else if (!(java.lang.Character.isUpperCase(propName.charAt(1)))) {\n        propName = (java.lang.Character.toLowerCase(propName.charAt(0))) + (propName.substring(1));\n    } \n} "},"variableMap":{"propName":"encoding"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.commonjs.module.provider.ParsedContentType:33","type":"CtIfImpl","sourcecode":"if (tok.hasMoreTokens()) {\n    contentType = tok.nextToken().trim();\n    while (tok.hasMoreTokens()) {\n        java.lang.String java.lang.String = tok.nextToken().trim();\n        if (param.startsWith(\"charset=\")) {\n            encoding = param.substring(8).trim();\n            int int = encoding.length();\n            if (l > 0) {\n                if ((encoding.charAt(0)) == '\"') {\n                    encoding = encoding.substring(1);\n                } \n                if ((encoding.charAt((l - 1))) == '\"') {\n                    encoding = encoding.substring(0, (l - 1));\n                } \n            } \n            break;\n        } \n    }\n} "},"status":-1}],"header":{"groupId":"r","transformationCount":10,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}