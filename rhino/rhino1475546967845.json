{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"946af490-89d7-11e6-8f30-81cbebc74b8b","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.MemberBox:42","type":"CtAssignmentImpl","sourcecode":"org.mozilla.javascript.MemberBox.this.java.lang.reflect.Member = method"},"variableMap":{"memberObject":"ctorMember","method":"ctorMember"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ScriptableObject:1387","type":"CtAssignmentImpl","sourcecode":"ctorMember = org.mozilla.javascript.FunctionObject.findSingleMethod(methods, ctorName)"},"status":-1},{"failures":[],"tindex":"946fd691-89d7-11e6-8f30-7fe6441536ff","series":0,"name":"replace","transplant":{"position":"org.mozilla.classfile.ClassFileWriter:4100","type":"CtIfImpl","sourcecode":"if (minimalSize > newSize) {\n    newSize = minimalSize;\n} "},"variableMap":{"newSize":"offset","minimalSize":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:4419","type":"CtInvocationImpl","sourcecode":"org.mozilla.classfile.ClassFileWriter.addDLoad((reg + offset))"},"status":-1},{"failures":[],"tindex":"946ffda2-89d7-11e6-8f30-577a09ff3792","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.NativeDate:1135","type":"CtIfImpl","sourcecode":"if (tzoffset == (-1)) {\n    return org.mozilla.javascript.NativeDate.internalUTC(msec);\n} else {\n    return msec + (tzoffset * (org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.double));\n}"},"variableMap":{"org.mozilla.javascript.NativeDate.msPerMinute":"sum","msec":"sum","tzoffset":"sum"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ScriptRuntime:489","type":"CtIfImpl","sourcecode":"if (sum >= 9.007199254740992E15) {\n    if (radix == 10) {\n        try {\n            return java.lang.Double.parseDouble(s.substring(start, end));\n        } catch (java.lang.NumberFormatException nfe) {\n            return org.mozilla.javascript.ScriptRuntime.org.mozilla.javascript.ScriptRuntime.double;\n        }\n    } else if (((((radix == 2) || (radix == 4)) || (radix == 8)) || (radix == 16)) || (radix == 32)) {\n        int int = 1;\n        int int = 0;\n        final int int = 0;\n        final int int = 1;\n        final int int = 2;\n        final int int = 3;\n        final int int = 4;\n        int int = SKIP_LEADING_ZEROS;\n        int int = 53;\n        double double = 0.0;\n        boolean boolean = false;\n        boolean boolean = false;\n        for ( ;  ; ) {\n            if (bitShiftInChar == 1) {\n                if (start == end)\n                    break;\n                \n                digit = s.charAt((start++));\n                if (('0' <= digit) && (digit <= '9'))\n                    digit -= '0';\n                else if (('a' <= digit) && (digit <= 'z'))\n                    digit -= 'a' - 10;\n                else\n                    digit -= 'A' - 10;\n                \n                bitShiftInChar = radix;\n            } \n            bitShiftInChar >>= 1;\n            boolean boolean = (digit & bitShiftInChar) != 0;\n            switch (state) {\n                case SKIP_LEADING_ZEROS :\n                    if (bit) {\n                        --exactBitsLimit;\n                        sum = 1.0;\n                        state = FIRST_EXACT_53_BITS;\n                    } \n                    break;\n                case FIRST_EXACT_53_BITS :\n                    sum *= 2.0;\n                    if (bit)\n                        sum += 1.0;\n                    \n                    --exactBitsLimit;\n                    if (exactBitsLimit == 0) {\n                        bit53 = bit;\n                        state = AFTER_BIT_53;\n                    } \n                    break;\n                case AFTER_BIT_53 :\n                    bit54 = bit;\n                    factor = 2.0;\n                    state = ZEROS_AFTER_54;\n                    break;\n                case ZEROS_AFTER_54 :\n                    if (bit) {\n                        state = MIXED_AFTER_54;\n                    } \n                case MIXED_AFTER_54 :\n                    factor *= 2;\n                    break;\n            }\n        }\n        switch (state) {\n            case SKIP_LEADING_ZEROS :\n                sum = 0.0;\n                break;\n            case FIRST_EXACT_53_BITS :\n            case AFTER_BIT_53 :\n                break;\n            case ZEROS_AFTER_54 :\n                if (bit54 & bit53)\n                    sum += 1.0;\n                \n                sum *= factor;\n                break;\n            case MIXED_AFTER_54 :\n                if (bit54)\n                    sum += 1.0;\n                \n                sum *= factor;\n                break;\n        }\n    } \n} "},"status":-1},{"failures":[],"tindex":"947024b3-89d7-11e6-8f30-c9a5448a204e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.IRFactory:1260","type":"CtAssignmentImpl","sourcecode":"pn = createBinary(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int, pn, expr)"},"status":-1}],"header":{"groupId":"r","transformationCount":4,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}