{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"1bb20df9-8a96-11e6-bfc0-55c69e2eae75","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.NativeArray:98","type":"CtAssignmentImpl","sourcecode":"int = attr"},"variableMap":{"attr":"actionType","lengthAttr":"org.mozilla.javascript.RegExpProxy.RA_MATCH"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeString:379","type":"CtAssignmentImpl","sourcecode":"actionType = org.mozilla.javascript.RegExpProxy.org.mozilla.javascript.RegExpProxy.int"},"status":-1},{"failures":[],"tindex":"1bb20dfa-8a96-11e6-bfc0-91a71114eb19","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.IRFactory:2010","type":"CtIfImpl","sourcecode":"if (memberTypeFlags != 0) {\n    ref.putIntProp(org.mozilla.javascript.Node.org.mozilla.javascript.Node.int, memberTypeFlags);\n} "},"status":-1},{"failures":[],"tindex":"1bb2350b-8a96-11e6-bfc0-c92c6aa329e4","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.optimizer.Codegen:3615","type":"CtInvocationImpl","sourcecode":"org.mozilla.classfile.ClassFileWriter.addALoad(tempLocal)"},"variableMap":{"cfw":"cfw","tempLocal":"org.mozilla.classfile.ClassFileWriter.ACC_PUBLIC"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:632","type":"CtInvocationImpl","sourcecode":"cfw.startMethod(\"<init>\", \"()V\", org.mozilla.classfile.ClassFileWriter.org.mozilla.classfile.ClassFileWriter.short)"},"status":-1},{"failures":[],"tindex":"1bb2350c-8a96-11e6-bfc0-0bc7280c836d","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.NativeGenerator:83","type":"CtLocalVariableImpl","sourcecode":"org.mozilla.javascript.Scriptable org.mozilla.javascript.Scriptable = org.mozilla.javascript.ScriptableObject.getTopLevelScope(org.mozilla.javascript.NativeGenerator)"},"variableMap":{"generator":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeIterator:164","type":"CtLocalVariableImpl","sourcecode":"org.mozilla.javascript.Scriptable org.mozilla.javascript.Scriptable = org.mozilla.javascript.ScriptRuntime.toIterator(cx, scope, obj, keyOnly)"},"status":-1},{"failures":[],"tindex":"1bb2350d-8a96-11e6-bfc0-157da16ccdbb","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.CodeGenerator:1169","type":"CtIfImpl","sourcecode":"if (!(label < (int)))\n    org.mozilla.javascript.Kit.codeBug();\n"},"variableMap":{"label":"offset","labelTableTop":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.Arguments:299","type":"CtForImpl","sourcecode":"for (int int = 0 ; i != (java.lang.Object[].int) ; ++i) {\n    if ((present == null) || (!(present[i]))) {\n        ids[offset] = java.lang.Integer.valueOf(i);\n        ++offset;\n    } \n}"},"status":-1},{"failures":[],"tindex":"1bb2350e-8a96-11e6-bfc0-3be04065fbdd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.regexp.RegExpImpl:160","type":"CtIfImpl","sourcecode":"if ((data.int) == (org.mozilla.javascript.RegExpProxy.org.mozilla.javascript.RegExpProxy.int)) {\n    result = re.executeRegExp(cx, scope, reImpl, str, indexp, org.mozilla.javascript.regexp.NativeRegExp.org.mozilla.javascript.regexp.NativeRegExp.int);\n    if ((result != null) && (result.equals(java.lang.Boolean.java.lang.Boolean.java.lang.Boolean)))\n        result = java.lang.Integer.valueOf(reImpl.org.mozilla.javascript.regexp.SubString.int);\n    else\n        result = java.lang.Integer.valueOf((-1));\n    \n} else if (data.boolean) {\n    re.java.lang.Object = 0.0;\n    for (int int = 0 ; (indexp[0]) <= (str.length()) ; count++) {\n        result = re.executeRegExp(cx, scope, reImpl, str, indexp, org.mozilla.javascript.regexp.NativeRegExp.org.mozilla.javascript.regexp.NativeRegExp.int);\n        if ((result == null) || (!(result.equals(java.lang.Boolean.java.lang.Boolean.java.lang.Boolean))))\n            break;\n        \n        if ((data.int) == (org.mozilla.javascript.RegExpProxy.org.mozilla.javascript.RegExpProxy.int)) {\n            org.mozilla.javascript.regexp.RegExpImpl.match_glob(data, cx, scope, count, reImpl);\n        } else {\n            if ((data.int) != (org.mozilla.javascript.RegExpProxy.org.mozilla.javascript.RegExpProxy.int))\n                org.mozilla.javascript.Kit.codeBug();\n            \n            org.mozilla.javascript.regexp.SubString org.mozilla.javascript.regexp.SubString = reImpl.org.mozilla.javascript.regexp.SubString;\n            int int = data.int;\n            int int = (lastMatch.int) - leftIndex;\n            data.int = (lastMatch.int) + (lastMatch.int);\n            org.mozilla.javascript.regexp.RegExpImpl.replace_glob(data, cx, scope, reImpl, leftIndex, leftlen);\n        }\n        if ((reImpl.org.mozilla.javascript.regexp.SubString.int) == 0) {\n            if ((indexp[0]) == (str.length()))\n                break;\n            \n            (indexp[0])++;\n        } \n    }\n} else {\n    result = re.executeRegExp(cx, scope, reImpl, str, indexp, ((data.int) == (org.mozilla.javascript.RegExpProxy.org.mozilla.javascript.RegExpProxy.int) ? org.mozilla.javascript.regexp.NativeRegExp.org.mozilla.javascript.regexp.NativeRegExp.int : org.mozilla.javascript.regexp.NativeRegExp.org.mozilla.javascript.regexp.NativeRegExp.int));\n}"},"status":-1},{"failures":[],"tindex":"1bb2350f-8a96-11e6-bfc0-7f5b5d49c5e2","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.regexp.NativeRegExp:1040","type":"CtInvocationImpl","sourcecode":"org.mozilla.javascript.regexp.NativeRegExp.reportError(\"msg.unterm.paren\", \"\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ScriptableObject:1298","type":"CtIfImpl","sourcecode":"if (!(method.getName().equals(\"init\")))\n    continue;\n"},"status":-1},{"failures":[],"tindex":"1bb25c20-8a96-11e6-bfc0-b727eb20734c","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.CodeGenerator:1434","type":"CtIfImpl","sourcecode":"if ((top + extraSize) <= capacity)\n    throw org.mozilla.javascript.Kit.codeBug();\n"},"variableMap":{"top":"stringBufferTop","extraSize":"c","capacity":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.TokenStream:523","type":"CtIfImpl","sourcecode":"if (c == '\\\\') {\n    int int;\n    c = getChar();\n    switch (c) {\n        case 'b' :\n            c = '\\b';\n            break;\n        case 'f' :\n            c = '\\f';\n            break;\n        case 'n' :\n            c = '\\n';\n            break;\n        case 'r' :\n            c = '\\r';\n            break;\n        case 't' :\n            c = '\\t';\n            break;\n        case 'v' :\n            c = 11;\n            break;\n        case 'u' :\n            int int = int;\n            addToString('u');\n            escapeVal = 0;\n            for (int int = 0 ; i != 4 ; ++i) {\n                c = getChar();\n                escapeVal = org.mozilla.javascript.Kit.xDigitToInt(c, escapeVal);\n                if (escapeVal < 0) {\n                    continue strLoop;\n                } \n                addToString(c);\n            }\n            int = escapeStart;\n            c = escapeVal;\n            break;\n        case 'x' :\n            c = getChar();\n            escapeVal = org.mozilla.javascript.Kit.xDigitToInt(c, 0);\n            if (escapeVal < 0) {\n                addToString('x');\n                continue strLoop;\n            } else {\n                int int = c;\n                c = getChar();\n                escapeVal = org.mozilla.javascript.Kit.xDigitToInt(c, escapeVal);\n                if (escapeVal < 0) {\n                    addToString('x');\n                    addToString(c1);\n                    continue strLoop;\n                } else {\n                    c = escapeVal;\n                }\n            }\n            break;\n        case '\\n' :\n            c = getChar();\n            continue strLoop;\n        default :\n            if (('0' <= c) && (c < '8')) {\n                int int = c - '0';\n                c = getChar();\n                if (('0' <= c) && (c < '8')) {\n                    val = ((8 * val) + c) - '0';\n                    c = getChar();\n                    if ((('0' <= c) && (c < '8')) && (val <= 31)) {\n                        val = ((8 * val) + c) - '0';\n                        c = getChar();\n                    } \n                } \n                ungetChar(c);\n                c = val;\n            } \n    }\n} "},"status":-1},{"failures":[],"tindex":"1bb25c21-8a96-11e6-bfc0-792df727f4ed","series":0,"name":"replace","transplant":{"position":"org.mozilla.classfile.ClassFileWriter:1299","type":"CtIfImpl","sourcecode":"if (pc == (-1)) {\n    throw new java.lang.RuntimeException();\n} "},"variableMap":{"pc":"left_dcp_register"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:4726","type":"CtInvocationImpl","sourcecode":"org.mozilla.classfile.ClassFileWriter.addDLoad((left_dcp_register + 1))"},"status":-1},{"failures":[],"tindex":"1bb25c22-8a96-11e6-bfc0-d3bc37c70a87","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.optimizer.Codegen:5378","type":"CtAssertImpl","sourcecode":"assert (count >= 1) && (count <= 3)"},"variableMap":{"count":"org.mozilla.javascript.regexp.NativeRegExp.JSREG_GLOB"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.regexp.NativeRegExp:207","type":"CtIfImpl","sourcecode":"if (((org.mozilla.javascript.regexp.RECompiled.int) & (org.mozilla.javascript.regexp.NativeRegExp.org.mozilla.javascript.regexp.NativeRegExp.int)) != 0)\n    buf.append('g');\n"},"status":-1}],"header":{"groupId":"r","transformationCount":10,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}