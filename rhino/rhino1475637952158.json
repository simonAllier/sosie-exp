{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"6b107481-8aab-11e6-9388-8967c40213b5","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.typedarrays.NativeDataView:89","type":"CtIfImpl","sourcecode":"if ((offset < 0) || ((offset + length) > (ab.getLength()))) {\n    throw org.mozilla.javascript.ScriptRuntime.constructError(\"RangeError\", \"offset out of range\");\n} "},"variableMap":{"ab":"org.mozilla.javascript.NativeString.STRING_TAG","offset":"arity","length":"arity"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeString:180","type":"CtInvocationImpl","sourcecode":"initPrototypeMethod(org.mozilla.javascript.NativeString.org.mozilla.javascript.NativeString.java.lang.Object, id, s, arity)"},"status":-1},{"failures":[],"tindex":"6b109b92-8aab-11e6-9388-27e82c026f8a","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.ScriptableObject:1471","type":"CtInvocationImpl","sourcecode":"names.add(propName)"},"variableMap":{"names":"skip","propName":"methodKey"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.JavaAdapter:503","type":"CtInvocationImpl","sourcecode":"skip.add(methodKey)"},"status":-2},{"failures":[],"tindex":"6b109b93-8aab-11e6-9388-85c59e98a4c7","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.IRFactory:1914","type":"CtInvocationImpl","sourcecode":"node.putIntProp(org.mozilla.javascript.Node.org.mozilla.javascript.Node.int, type)"},"variableMap":{"node":"body","org.mozilla.javascript.Node.SPECIALCALL_PROP":"pushed","type":"org.mozilla.javascript.Token.LET"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.IRFactory:694","type":"CtTryImpl","sourcecode":"try {\n    for (int int = numLoops - 1 ; i >= 0 ; i--) {\n        org.mozilla.javascript.ast.GeneratorExpressionLoop org.mozilla.javascript.ast.GeneratorExpressionLoop = loops.get(i);\n        org.mozilla.javascript.ast.Scope org.mozilla.javascript.ast.Scope = createLoopNode(null, acl.getLineno());\n        pushScope(loop);\n        pushed++;\n        body = createForIn(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int, loop, iterators[i], iteratedObjs[i], body, acl.isForEach());\n    }\n} finally {\n    for (int int = 0 ; i < pushed ; i++) {\n        popScope();\n    }\n}"},"status":-1},{"failures":[],"tindex":"6b109b94-8aab-11e6-9388-298f5b26561c","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.NativeJSON:240","type":"CtAssignmentImpl","sourcecode":"space = org.mozilla.javascript.ScriptRuntime.toString(space)"},"variableMap":{"space":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ScriptRuntime:2268","type":"CtAssignmentImpl","sourcecode":"result = x.org.mozilla.javascript.Scriptable.get(s, x.org.mozilla.javascript.Scriptable)"},"status":-1},{"failures":[],"tindex":"6b109b95-8aab-11e6-9388-9d8bee6f4a81","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.regexp.NativeRegExp:541","type":"CtAssignmentImpl","sourcecode":"headTerm = state.org.mozilla.javascript.regexp.RENode"},"variableMap":{"result":"result","headTerm":"result","state":"state"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.regexp.NativeRegExp:532","type":"CtAssignmentImpl","sourcecode":"state.org.mozilla.javascript.regexp.RENode = new org.mozilla.javascript.regexp.RENode(org.mozilla.javascript.regexp.NativeRegExp.org.mozilla.javascript.regexp.NativeRegExp.byte)"},"status":-1},{"failures":[],"tindex":"6b109b96-8aab-11e6-9388-dbd3d5efd7ad","series":0,"name":"add","transplant":{"position":"org.mozilla.classfile.ClassFileWriter:4714","type":"CtIfImpl","sourcecode":"if (((int) + howMuch) > newCapacity) {\n    newCapacity = (int) + howMuch;\n} "},"variableMap":{"newCapacity":"org.mozilla.javascript.Token.CONST","itsTop":"org.mozilla.javascript.Token.CONST","howMuch":"org.mozilla.javascript.Token.CONST"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ast.ScriptNode:284","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (java.util.List<org.mozilla.javascript.ast.Symbol>.size()) ; i++) {\n    org.mozilla.javascript.ast.Symbol org.mozilla.javascript.ast.Symbol = java.util.List<org.mozilla.javascript.ast.Symbol>.get(i);\n    java.lang.String[][i] = symbol.getName();\n    boolean[][i] = (symbol.getDeclType()) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int);\n    symbol.setIndex(i);\n}"},"status":-1},{"failures":[],"tindex":"6b109b97-8aab-11e6-9388-21a665b28f94","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeArray:1354","type":"CtIfImpl","sourcecode":"if ((thisObj instanceof org.mozilla.javascript.NativeArray) && (result instanceof org.mozilla.javascript.NativeArray)) {\n    org.mozilla.javascript.NativeArray org.mozilla.javascript.NativeArray = ((org.mozilla.javascript.NativeArray)(thisObj));\n    org.mozilla.javascript.NativeArray org.mozilla.javascript.NativeArray = ((org.mozilla.javascript.NativeArray)(result));\n    if ((denseThis.boolean) && (denseResult.boolean)) {\n        boolean boolean = true;\n        int int = ((int)(denseThis.long));\n        for (int int = 0 ; (i < (args.int)) && canUseDense ; i++) {\n            if ((args[i]) instanceof org.mozilla.javascript.NativeArray) {\n                final org.mozilla.javascript.NativeArray org.mozilla.javascript.NativeArray = ((org.mozilla.javascript.NativeArray)(args[i]));\n                canUseDense = arg.boolean;\n                length += arg.long;\n            } else {\n                length++;\n            }\n        }\n        if (canUseDense && (denseResult.ensureCapacity(length))) {\n            java.lang.System.arraycopy(denseThis.java.lang.Object[], 0, denseResult.java.lang.Object[], 0, ((int)(denseThis.long)));\n            int int = ((int)(denseThis.long));\n            for (int int = 0 ; (i < (args.int)) && canUseDense ; i++) {\n                if ((args[i]) instanceof org.mozilla.javascript.NativeArray) {\n                    org.mozilla.javascript.NativeArray org.mozilla.javascript.NativeArray = ((org.mozilla.javascript.NativeArray)(args[i]));\n                    java.lang.System.arraycopy(arg.java.lang.Object[], 0, denseResult.java.lang.Object[], cursor, ((int)(arg.long)));\n                    cursor += ((int)(arg.long));\n                } else {\n                    denseResult.java.lang.Object[][(cursor++)] = args[i];\n                }\n            }\n            denseResult.long = length;\n            return result;\n        } \n    } \n} "},"status":-1}],"header":{"groupId":"r","transformationCount":7,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}