{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"9ce5d2ab-89fc-11e6-9600-8f90db2971be","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.regexp.NativeRegExp:1060","type":"CtInvocationImpl","sourcecode":"org.mozilla.javascript.regexp.NativeRegExp.reportError(\"msg.unterm.class\", \"\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ScriptableObject:1854","type":"CtInvocationImpl","sourcecode":"checkPropertyDefinition(desc)"},"status":-1},{"failures":[],"tindex":"9ce5f9bc-89fc-11e6-9600-3fa7ef83360e","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.optimizer.Codegen:1130","type":"CtReturnImpl","sourcecode":"return \"Ljava/lang/Double;\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ast.Block:54","type":"CtReturnImpl","sourcecode":"return sb.toString()"},"status":-1},{"failures":[],"tindex":"9ce5f9bd-89fc-11e6-9600-b3a8af445403","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.NativeGlobal:640","type":"CtIfImpl","sourcecode":"if ((B & 192) == 128) {\n    throw org.mozilla.javascript.NativeGlobal.uriError();\n} else if ((B & 32) == 0) {\n    utf8Tail = 1;\n    ucs4Char = B & 31;\n    minUcs4Char = 128;\n} else if ((B & 16) == 0) {\n    utf8Tail = 2;\n    ucs4Char = B & 15;\n    minUcs4Char = 2048;\n} else if ((B & 8) == 0) {\n    utf8Tail = 3;\n    ucs4Char = B & 7;\n    minUcs4Char = 65536;\n} else if ((B & 4) == 0) {\n    utf8Tail = 4;\n    ucs4Char = B & 3;\n    minUcs4Char = 2097152;\n} else if ((B & 2) == 0) {\n    utf8Tail = 5;\n    ucs4Char = B & 1;\n    minUcs4Char = 67108864;\n} else {\n    throw org.mozilla.javascript.NativeGlobal.uriError();\n}"},"variableMap":{"B":"org.mozilla.classfile.ByteCode.GOTO","utf8Tail":"varIndex","ucs4Char":"varIndex","minUcs4Char":"org.mozilla.classfile.ByteCode.IF_ACMPEQ"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:4958","type":"CtIfImpl","sourcecode":"if (constDeclarations[varIndex]) {\n    if (!needValue) {\n        if (isNumber)\n            org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int);\n        else\n            org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int);\n        \n    } \n} else if (varIsDirectCallParameter(varIndex)) {\n    if (isNumber) {\n        if (needValue)\n            org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int);\n        \n        org.mozilla.classfile.ClassFileWriter.addALoad(reg);\n        org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, \"java/lang/Void\", \"TYPE\", \"Ljava/lang/Class;\");\n        int int = org.mozilla.classfile.ClassFileWriter.acquireLabel();\n        int int = org.mozilla.classfile.ClassFileWriter.acquireLabel();\n        org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, isNumberLabel);\n        short short = org.mozilla.classfile.ClassFileWriter.getStackTop();\n        addDoubleWrap();\n        org.mozilla.classfile.ClassFileWriter.addAStore(reg);\n        org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, beyond);\n        org.mozilla.classfile.ClassFileWriter.markLabel(isNumberLabel, stack);\n        org.mozilla.classfile.ClassFileWriter.addDStore((reg + 1));\n        org.mozilla.classfile.ClassFileWriter.markLabel(beyond);\n    } else {\n        if (needValue)\n            org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int);\n        \n        org.mozilla.classfile.ClassFileWriter.addAStore(reg);\n    }\n} else {\n    boolean boolean = org.mozilla.javascript.optimizer.OptFunctionNode.isNumberVar(varIndex);\n    if (isNumber) {\n        if (isNumberVar) {\n            org.mozilla.classfile.ClassFileWriter.addDStore(reg);\n            if (needValue)\n                org.mozilla.classfile.ClassFileWriter.addDLoad(reg);\n            \n        } else {\n            if (needValue)\n                org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int);\n            \n            addDoubleWrap();\n            org.mozilla.classfile.ClassFileWriter.addAStore(reg);\n        }\n    } else {\n        if (isNumberVar)\n            org.mozilla.javascript.Kit.codeBug();\n        \n        org.mozilla.classfile.ClassFileWriter.addAStore(reg);\n        if (needValue)\n            org.mozilla.classfile.ClassFileWriter.addALoad(reg);\n        \n    }\n}"},"status":-1}],"header":{"groupId":"r","transformationCount":3,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}