{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"fb74121f-8aaa-11e6-83a7-99b8defa1141","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.ScriptRuntime:44","type":"CtReturnImpl","sourcecode":"return org.mozilla.javascript.ScriptRuntime.typeErrorThrower(org.mozilla.javascript.Context.getCurrentContext())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ScriptableObject:1310","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"fb743830-8aaa-11e6-83a7-43825f000f5a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NodeTransformer:196","type":"CtInvocationImpl","sourcecode":"unwindBlock.addChildToFront(store)"},"status":-1},{"failures":[],"tindex":"fb743831-8aaa-11e6-83a7-91725cf0d8bb","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.Node:147","type":"CtReturnImpl","sourcecode":"return n"},"variableMap":{"n":"body"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.IRFactory:321","type":"CtReturnImpl","sourcecode":"return body"},"status":-2},{"failures":[],"tindex":"fb743832-8aaa-11e6-83a7-a72611d9e1cf","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.optimizer.Codegen:1015","type":"CtInvocationImpl","sourcecode":"cfw.addPush(1)"},"variableMap":{"cfw":"cfw"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:2681","type":"CtInvocationImpl","sourcecode":"org.mozilla.classfile.ClassFileWriter.addALoad(short)"},"status":-1},{"failures":[],"tindex":"fb743833-8aaa-11e6-83a7-1bd05d9a5ccf","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.Icode:233","type":"CtReturnImpl","sourcecode":"return ((org.mozilla.javascript.Token.org.mozilla.javascript.Token.int) <= token) && (token <= (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))"},"variableMap":{"org.mozilla.javascript.Token.FIRST_BYTECODE_TOKEN":"org.mozilla.javascript.Token.EOF","org.mozilla.javascript.Token.LAST_BYTECODE_TOKEN":"org.mozilla.javascript.Token.EOF","token":"org.mozilla.javascript.Token.EOF"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.TokenStream:79","type":"CtReturnImpl","sourcecode":"return (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int) != (org.mozilla.javascript.TokenStream.stringToKeyword(s))"},"status":-1},{"failures":[],"tindex":"fb745f44-8aaa-11e6-83a7-3f9f88e51137","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.FunctionObject:410","type":"CtAssignmentImpl","sourcecode":"thisObj = parentScope"},"variableMap":{"parentScope":"thisObj","thisObj":"thisObj"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ScriptRuntime:1874","type":"CtAssignmentImpl","sourcecode":"thisObj = xmlObj"},"status":-1},{"failures":[],"tindex":"fb74fb85-8aaa-11e6-83a7-f7881ef358bb","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.ScriptRuntime:393","type":"CtIfImpl","sourcecode":"if (org.mozilla.javascript.Context.getContext().isVersionECMA1()) {\n    return true;\n} "},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeNumber:287","type":"CtReturnImpl","sourcecode":"return d.isNaN()"},"status":-1},{"failures":[],"tindex":"fb74fb86-8aaa-11e6-83a7-bd11827d3265","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.NativeDate:1127","type":"CtIfImpl","sourcecode":"if (sec < 0)\n    sec = 0;\n"},"variableMap":{"sec":"delta"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.classfile.ClassFileWriter:2438","type":"CtIfImpl","sourcecode":"if ((j == (currentLocals.int)) && (delta == 0)) {\n    writeSameFrame(currentLocals, offsetDelta);\n} else if ((j == (currentLocals.int)) && (delta <= 3)) {\n    writeChopFrame(delta, offsetDelta);\n} else if ((j == (prevLocals.int)) && (delta <= 3)) {\n    writeAppendFrame(currentLocals, delta, offsetDelta);\n} else {\n    writeFullFrame(currentLocals, currentStack, offsetDelta);\n}"},"status":-1},{"failures":[],"tindex":"fb74fb87-8aaa-11e6-83a7-fb2307a61ab4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.TokenStream:573","type":"CtInvocationImpl","sourcecode":"addToString(c1)"},"status":-1},{"failures":[],"tindex":"fb74fb88-8aaa-11e6-83a7-6dd6a35ffe34","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.Node:486","type":"CtReturnImpl","sourcecode":"return defaultValue"},"variableMap":{"defaultValue":"org.mozilla.javascript.Token.XML"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.TokenStream:960","type":"CtIfImpl","sourcecode":"if (boolean) {\n    switch (c) {\n        case '>' :\n            addToString(c);\n            boolean = false;\n            boolean = false;\n            break;\n        case '/' :\n            addToString(c);\n            if ((peekChar()) == '>') {\n                c = getChar();\n                addToString(c);\n                boolean = false;\n                (int)--;\n            } \n            break;\n        case '{' :\n            ungetChar(c);\n            org.mozilla.javascript.TokenStream.this.java.lang.String = getStringFromBuffer();\n            return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n        case '\\'' :\n        case '\"' :\n            addToString(c);\n            if (!(readQuotedString(c)))\n                return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n            \n            break;\n        case '=' :\n            addToString(c);\n            boolean = true;\n            break;\n        case ' ' :\n        case '\\t' :\n        case '\\r' :\n        case '\\n' :\n            addToString(c);\n            break;\n        default :\n            addToString(c);\n            boolean = false;\n            break;\n    }\n    if ((!(boolean)) && ((int) == 0)) {\n        org.mozilla.javascript.TokenStream.this.java.lang.String = getStringFromBuffer();\n        return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n    } \n} else {\n    switch (c) {\n        case '<' :\n            addToString(c);\n            c = peekChar();\n            switch (c) {\n                case '!' :\n                    c = getChar();\n                    addToString(c);\n                    c = peekChar();\n                    switch (c) {\n                        case '-' :\n                            c = getChar();\n                            addToString(c);\n                            c = getChar();\n                            if (c == '-') {\n                                addToString(c);\n                                if (!(readXmlComment()))\n                                    return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n                                \n                            } else {\n                                int = 0;\n                                org.mozilla.javascript.TokenStream.this.java.lang.String = null;\n                                org.mozilla.javascript.Parser.addError(\"msg.XML.bad.form\");\n                                return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n                            }\n                            break;\n                        case '[' :\n                            c = getChar();\n                            addToString(c);\n                            if (((((((getChar()) == 'C') && ((getChar()) == 'D')) && ((getChar()) == 'A')) && ((getChar()) == 'T')) && ((getChar()) == 'A')) && ((getChar()) == '[')) {\n                                addToString('C');\n                                addToString('D');\n                                addToString('A');\n                                addToString('T');\n                                addToString('A');\n                                addToString('[');\n                                if (!(readCDATA()))\n                                    return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n                                \n                            } else {\n                                int = 0;\n                                org.mozilla.javascript.TokenStream.this.java.lang.String = null;\n                                org.mozilla.javascript.Parser.addError(\"msg.XML.bad.form\");\n                                return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n                            }\n                            break;\n                        default :\n                            if (!(readEntity()))\n                                return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n                            \n                            break;\n                    }\n                    break;\n                case '?' :\n                    c = getChar();\n                    addToString(c);\n                    if (!(readPI()))\n                        return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n                    \n                    break;\n                case '/' :\n                    c = getChar();\n                    addToString(c);\n                    if ((int) == 0) {\n                        int = 0;\n                        org.mozilla.javascript.TokenStream.this.java.lang.String = null;\n                        org.mozilla.javascript.Parser.addError(\"msg.XML.bad.form\");\n                        return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n                    } \n                    boolean = true;\n                    (int)--;\n                    break;\n                default :\n                    boolean = true;\n                    (int)++;\n                    break;\n            }\n            break;\n        case '{' :\n            ungetChar(c);\n            org.mozilla.javascript.TokenStream.this.java.lang.String = getStringFromBuffer();\n            return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n        default :\n            addToString(c);\n            break;\n    }\n}"},"status":-1}],"header":{"groupId":"r","transformationCount":10,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}