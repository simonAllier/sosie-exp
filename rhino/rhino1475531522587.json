{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"9e192d3c-89b3-11e6-9c60-ed8e09f43e6e","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.CodeGenerator:1067","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object[] java.lang.Object[] = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.IdScriptableObject:93","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object[] java.lang.Object[] = java.lang.Object[]"},"status":-1},{"failures":[],"tindex":"9e19544d-89b3-11e6-9c60-41c0a37165be","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.NativeGlobal:626","type":"CtAssignmentImpl","sourcecode":"bufTop = k"},"variableMap":{"bufTop":"rp","k":"rp"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ast.CatchClause:129","type":"CtAssignmentImpl","sourcecode":"org.mozilla.javascript.ast.CatchClause.this.int = rp"},"status":-1},{"failures":[],"tindex":"9e19544e-89b3-11e6-9c60-f14d1124ab0f","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.optimizer.Codegen:348","type":"CtInvocationImpl","sourcecode":"cfw.addALoad(1)"},"variableMap":{"cfw":"cfw"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:5060","type":"CtInvocationImpl","sourcecode":"org.mozilla.classfile.ClassFileWriter.addALoad(short)"},"status":-1},{"failures":[],"tindex":"9e197b5f-89b3-11e6-9c60-1d1959832b2c","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.optimizer.Codegen:1806","type":"CtInvocationImpl","sourcecode":"org.mozilla.classfile.ClassFileWriter.markHandler(finallyHandler)"},"variableMap":{"finallyHandler":"finallyEnd","cfw":"cfw"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:4197","type":"CtInvocationImpl","sourcecode":"org.mozilla.classfile.ClassFileWriter.markLabel(finallyEnd)"},"status":-1},{"failures":[],"tindex":"9e197b60-89b3-11e6-9c60-1571e2d142d9","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.Kit:287","type":"CtIfImpl","sourcecode":"if (!(bag instanceof java.lang.Object[]))\n    return bag;\n"},"variableMap":{"bag":"org.mozilla.javascript.Undefined.instance"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.typedarrays.NativeFloat64Array:88","type":"CtIfImpl","sourcecode":"if (checkIndex(index)) {\n    return org.mozilla.javascript.Undefined.org.mozilla.javascript.Undefined.java.lang.Object;\n} "},"status":-1},{"failures":[],"tindex":"9e197b61-89b3-11e6-9c60-b95c91951692","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.TokenStream:959","type":"CtForImpl","sourcecode":"for (int int = getChar() ; c != (org.mozilla.javascript.TokenStream.org.mozilla.javascript.TokenStream.int) ; c = getChar()) {\n    if (boolean) {\n        switch (c) {\n            case '>' :\n                addToString(c);\n                boolean = false;\n                boolean = false;\n                break;\n            case '/' :\n                addToString(c);\n                if ((peekChar()) == '>') {\n                    c = getChar();\n                    addToString(c);\n                    boolean = false;\n                    (int)--;\n                } \n                break;\n            case '{' :\n                ungetChar(c);\n                org.mozilla.javascript.TokenStream.this.java.lang.String = getStringFromBuffer();\n                return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n            case '\\'' :\n            case '\"' :\n                addToString(c);\n                if (!(readQuotedString(c)))\n                    return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n                \n                break;\n            case '=' :\n                addToString(c);\n                boolean = true;\n                break;\n            case ' ' :\n            case '\\t' :\n            case '\\r' :\n            case '\\n' :\n                addToString(c);\n                break;\n            default :\n                addToString(c);\n                boolean = false;\n                break;\n        }\n        if ((!(boolean)) && ((int) == 0)) {\n            org.mozilla.javascript.TokenStream.this.java.lang.String = getStringFromBuffer();\n            return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n        } \n    } else {\n        switch (c) {\n            case '<' :\n                addToString(c);\n                c = peekChar();\n                switch (c) {\n                    case '!' :\n                        c = getChar();\n                        addToString(c);\n                        c = peekChar();\n                        switch (c) {\n                            case '-' :\n                                c = getChar();\n                                addToString(c);\n                                c = getChar();\n                                if (c == '-') {\n                                    addToString(c);\n                                    if (!(readXmlComment()))\n                                        return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n                                    \n                                } else {\n                                    int = 0;\n                                    org.mozilla.javascript.TokenStream.this.java.lang.String = null;\n                                    org.mozilla.javascript.Parser.addError(\"msg.XML.bad.form\");\n                                    return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n                                }\n                                break;\n                            case '[' :\n                                c = getChar();\n                                addToString(c);\n                                if (((((((getChar()) == 'C') && ((getChar()) == 'D')) && ((getChar()) == 'A')) && ((getChar()) == 'T')) && ((getChar()) == 'A')) && ((getChar()) == '[')) {\n                                    addToString('C');\n                                    addToString('D');\n                                    addToString('A');\n                                    addToString('T');\n                                    addToString('A');\n                                    addToString('[');\n                                    if (!(readCDATA()))\n                                        return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n                                    \n                                } else {\n                                    int = 0;\n                                    org.mozilla.javascript.TokenStream.this.java.lang.String = null;\n                                    org.mozilla.javascript.Parser.addError(\"msg.XML.bad.form\");\n                                    return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n                                }\n                                break;\n                            default :\n                                if (!(readEntity()))\n                                    return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n                                \n                                break;\n                        }\n                        break;\n                    case '?' :\n                        c = getChar();\n                        addToString(c);\n                        if (!(readPI()))\n                            return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n                        \n                        break;\n                    case '/' :\n                        c = getChar();\n                        addToString(c);\n                        if ((int) == 0) {\n                            int = 0;\n                            org.mozilla.javascript.TokenStream.this.java.lang.String = null;\n                            org.mozilla.javascript.Parser.addError(\"msg.XML.bad.form\");\n                            return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n                        } \n                        boolean = true;\n                        (int)--;\n                        break;\n                    default :\n                        boolean = true;\n                        (int)++;\n                        break;\n                }\n                break;\n            case '{' :\n                ungetChar(c);\n                org.mozilla.javascript.TokenStream.this.java.lang.String = getStringFromBuffer();\n                return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n            default :\n                addToString(c);\n                break;\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"9e19a272-89b3-11e6-9c60-eb59c1ad092a","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.TokenStream:1462","type":"CtAssertImpl","sourcecode":"assert (linep.int) == 2"},"variableMap":{"length":"org.mozilla.javascript.ScriptableObject.PERMANENT","linep":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ScriptRuntime:3504","type":"CtInvocationImpl","sourcecode":"catchScopeObject.defineProperty(exceptionName, obj, org.mozilla.javascript.ScriptableObject.org.mozilla.javascript.ScriptableObject.int)"},"status":-1},{"failures":[],"tindex":"9e19a273-89b3-11e6-9c60-e7e60a62af18","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.jdk13.VMBridge_jdk13:88","type":"CtLocalVariableImpl","sourcecode":"java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.MemberBox:156","type":"CtLocalVariableImpl","sourcecode":"java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> = ctor()"},"status":-1},{"failures":[],"tindex":"9e19c984-89b3-11e6-9c60-15ab22d4b707","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.ScriptRuntime:3729","type":"CtUnaryOperatorImpl","sourcecode":"++j"},"variableMap":{"j":"id"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeBoolean:117","type":"CtAssignmentImpl","sourcecode":"id = org.mozilla.javascript.NativeBoolean.org.mozilla.javascript.NativeBoolean.int"},"status":-1},{"failures":[],"tindex":"9e19c985-89b3-11e6-9c60-d7713447fc00","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ScriptRuntime:1875","type":"CtAssignmentImpl","sourcecode":"result = xmlObj.get(name, xmlObj)"},"status":-1}],"header":{"groupId":"r","transformationCount":10,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}