{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"95ab12be-8b80-11e6-bf79-f9b9d7f149bd","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.NativeDate:531","type":"CtIfImpl","sourcecode":"if (org.mozilla.javascript.NativeDate.IsLeapYear(year)) {\n    if (d == 0)\n        return 29;\n    \n    --d;\n} "},"variableMap":{"d":"org.mozilla.javascript.optimizer.Optimizer.NumberType","year":"org.mozilla.javascript.Token.GETVAR"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Optimizer:151","type":"CtIfImpl","sourcecode":"if ((child.getType()) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n    if ((type == (org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int)) && (!(convertParameter(child)))) {\n        n.putIntProp(org.mozilla.javascript.Node.org.mozilla.javascript.Node.int, org.mozilla.javascript.Node.org.mozilla.javascript.Node.int);\n        markDCPNumberContext(child);\n        return org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int;\n    } \n    return org.mozilla.javascript.optimizer.Optimizer.org.mozilla.javascript.optimizer.Optimizer.int;\n} else if (((child.getType()) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) || ((child.getType()) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))) {\n    return type;\n} "},"status":-1},{"failures":[],"tindex":"95ab39cf-8b80-11e6-bf79-63e4ab4d1d37","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.IdScriptableObject:497","type":"CtAssignmentImpl","sourcecode":"result = tmp"},"variableMap":{"result":"tmp","tmp":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeArray:498","type":"CtAssignmentImpl","sourcecode":"ids = tmp"},"status":-1},{"failures":[],"tindex":"95ab39d0-8b80-11e6-bf79-33cbfd74656e","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.regexp.RegExpImpl:486","type":"CtLocalVariableImpl","sourcecode":"int int = dp - cp"},"variableMap":{"dp":"org.mozilla.javascript.Token.RESERVED","cp":"org.mozilla.javascript.Token.RESERVED"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.TokenStream:94","type":"CtLocalVariableImpl","sourcecode":"final int int = org.mozilla.javascript.Token.org.mozilla.javascript.Token.int"},"status":-1},{"failures":[],"tindex":"95ab60e1-8b80-11e6-bf79-a56cf9984e0f","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.ast.CatchClause:152","type":"CtInvocationImpl","sourcecode":"sb.append(\"catch (\")"},"variableMap":{"sb":"sb"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:1178","type":"CtInvocationImpl","sourcecode":"sb.append((\"Lorg/mozilla/javascript/Context;\" + (\"Lorg/mozilla/javascript/Scriptable;\" + \"Lorg/mozilla/javascript/Scriptable;\")))"},"status":-1},{"failures":[],"tindex":"95ab60e2-8b80-11e6-bf79-a10b06657b53","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.ScriptRuntime:296","type":"CtLocalVariableImpl","sourcecode":"org.mozilla.javascript.ScriptableObject org.mozilla.javascript.ScriptableObject"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeJSON:262","type":"CtLocalVariableImpl","sourcecode":"org.mozilla.javascript.ScriptableObject org.mozilla.javascript.ScriptableObject = new org.mozilla.javascript.NativeObject()"},"status":-1},{"failures":[],"tindex":"95ab60e3-8b80-11e6-bf79-3ff80e2d99e9","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.ScriptRuntime:768","type":"CtLocalVariableImpl","sourcecode":"int int = digit < 10 ? '0' + digit : ('a' - 10) + digit"},"variableMap":{"digit":"pc"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.regexp.NativeRegExp:2275","type":"CtLocalVariableImpl","sourcecode":"int int = org.mozilla.javascript.regexp.NativeRegExp.getIndex(program, pc)"},"status":-1},{"failures":[],"tindex":"95ab60e4-8b80-11e6-bf79-7fd495853b46","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.regexp.NativeRegExp:2158","type":"CtAssignmentImpl","sourcecode":"continuationPc = pc"},"variableMap":{"pc":"top","continuationPc":"top"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.classfile.ClassFileWriter:4581","type":"CtAssignmentImpl","sourcecode":"int = top"},"status":-1},{"failures":[],"tindex":"95ab60e5-8b80-11e6-bf79-5592257b3b00","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.BoundFunction:79","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(first, 0, args, 0, first.int)"},"variableMap":{"args":"array","length":"N","first":"array"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.CodeGenerator:203","type":"CtForImpl","sourcecode":"for (int int = 0 ; i != N ; i++) {\n    java.lang.String java.lang.String = org.mozilla.javascript.ast.ScriptNode.getRegexpString(i);\n    java.lang.String java.lang.String = org.mozilla.javascript.ast.ScriptNode.getRegexpFlags(i);\n    array[i] = rep.compileRegExp(cx, string, flags);\n}"},"status":-1},{"failures":[],"tindex":"95ab60e6-8b80-11e6-bf79-3f90db6879d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.UintMap:198","type":"CtIfImpl","sourcecode":"if (keys != null) {\n    int int = key * (org.mozilla.javascript.UintMap.org.mozilla.javascript.UintMap.int);\n    int int = fraction >>> (32 - (int));\n    int int = keys[index];\n    if (entry == key) {\n        return index;\n    } \n    if (entry != (org.mozilla.javascript.UintMap.org.mozilla.javascript.UintMap.int)) {\n        int int = (1 << (int)) - 1;\n        int int = org.mozilla.javascript.UintMap.tableLookupStep(fraction, mask, int);\n        int int = 0;\n        do {\n            if (org.mozilla.javascript.UintMap.org.mozilla.javascript.UintMap.boolean) {\n                if (n >= (int))\n                    org.mozilla.javascript.Kit.codeBug();\n                \n                ++n;\n            } \n            index = (index + step) & mask;\n            entry = keys[index];\n            if (entry == key) {\n                return index;\n            } \n        } while (entry != (org.mozilla.javascript.UintMap.org.mozilla.javascript.UintMap.int) );\n    } \n} "},"status":-1}],"header":{"groupId":"r","transformationCount":9,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}