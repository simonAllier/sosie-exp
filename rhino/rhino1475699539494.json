{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"cffa7378-8b3a-11e6-ab75-2f79500ef6de","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.regexp.NativeRegExp:1040","type":"CtInvocationImpl","sourcecode":"org.mozilla.javascript.regexp.NativeRegExp.reportError(\"msg.unterm.paren\", \"\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.Decompiler:176","type":"CtInvocationImpl","sourcecode":"append('S')"},"status":-1},{"failures":[],"tindex":"cffa9a89-8b3a-11e6-ab75-cb279608b34b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ScriptRuntime:530","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    if (bitShiftInChar == 1) {\n        if (start == end)\n            break;\n        \n        digit = s.charAt((start++));\n        if (('0' <= digit) && (digit <= '9'))\n            digit -= '0';\n        else if (('a' <= digit) && (digit <= 'z'))\n            digit -= 'a' - 10;\n        else\n            digit -= 'A' - 10;\n        \n        bitShiftInChar = radix;\n    } \n    bitShiftInChar >>= 1;\n    boolean boolean = (digit & bitShiftInChar) != 0;\n    switch (state) {\n        case SKIP_LEADING_ZEROS :\n            if (bit) {\n                --exactBitsLimit;\n                sum = 1.0;\n                state = FIRST_EXACT_53_BITS;\n            } \n            break;\n        case FIRST_EXACT_53_BITS :\n            sum *= 2.0;\n            if (bit)\n                sum += 1.0;\n            \n            --exactBitsLimit;\n            if (exactBitsLimit == 0) {\n                bit53 = bit;\n                state = AFTER_BIT_53;\n            } \n            break;\n        case AFTER_BIT_53 :\n            bit54 = bit;\n            factor = 2.0;\n            state = ZEROS_AFTER_54;\n            break;\n        case ZEROS_AFTER_54 :\n            if (bit) {\n                state = MIXED_AFTER_54;\n            } \n        case MIXED_AFTER_54 :\n            factor *= 2;\n            break;\n    }\n}"},"status":-1},{"failures":[],"tindex":"cffa9a8a-8b3a-11e6-ab75-4f6531eb555e","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.Node:561","type":"CtReturnImpl","sourcecode":"return new org.mozilla.javascript.Node(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)"},"variableMap":{"org.mozilla.javascript.Token.TARGET":"org.mozilla.javascript.Token.RP"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.IRFactory:492","type":"CtTryImpl","sourcecode":"try {\n    org.mozilla.javascript.Node org.mozilla.javascript.Node = transform(loop.getInitializer());\n    org.mozilla.javascript.Decompiler.addToken(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int);\n    org.mozilla.javascript.Node org.mozilla.javascript.Node = transform(loop.getCondition());\n    org.mozilla.javascript.Decompiler.addToken(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int);\n    org.mozilla.javascript.Node org.mozilla.javascript.Node = transform(loop.getIncrement());\n    org.mozilla.javascript.Decompiler.addToken(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int);\n    org.mozilla.javascript.Decompiler.addEOL(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int);\n    org.mozilla.javascript.Node org.mozilla.javascript.Node = transform(loop.getBody());\n    org.mozilla.javascript.Decompiler.addEOL(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int);\n    return createFor(loop, init, test, incr, body);\n} finally {\n    org.mozilla.javascript.ast.Scope = savedScope;\n}"},"status":-1},{"failures":[],"tindex":"cffac19b-8b3a-11e6-ab75-49323399fa05","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.typedarrays.ByteIo:212","type":"CtInvocationImpl","sourcecode":"org.mozilla.javascript.typedarrays.ByteIo.writeUint64(buf, offset, base, littleEndian)"},"status":-1},{"failures":[],"tindex":"cffac19c-8b3a-11e6-ab75-ad3c9920b1ff","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.optimizer.Codegen:1903","type":"CtInvocationImpl","sourcecode":"org.mozilla.classfile.ClassFileWriter.setStackTop(((short)(0)))"},"variableMap":{"cfw":"cfw"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:4406","type":"CtInvocationImpl","sourcecode":"org.mozilla.classfile.ClassFileWriter.addPush(1.0)"},"status":-1},{"failures":[],"tindex":"cffac19d-8b3a-11e6-ab75-8b8050b6f880","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.OptRuntime:236","type":"CtThrowImpl","sourcecode":"throw new org.mozilla.javascript.JavaScriptException(org.mozilla.javascript.NativeIterator.getStopIterationObject(((org.mozilla.javascript.Scriptable)(obj))) , \"\" , 0)"},"status":-1},{"failures":[],"tindex":"cffac19e-8b3a-11e6-ab75-2195cea7c812","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.Parser:2268","type":"CtReturnImpl","sourcecode":"return pn"},"variableMap":{"pn":"testExpression"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ast.ConditionalExpression:52","type":"CtReturnImpl","sourcecode":"return org.mozilla.javascript.ast.AstNode"},"status":-1},{"failures":[],"tindex":"cffac19f-8b3a-11e6-ab75-d5ea05163aec","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.JavaAdapter:184","type":"CtAssignmentImpl","sourcecode":"ctorArgs[1] = cx.getFactory()"},"variableMap":{"cx":"cx","ctorArgs":"storage"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.jdk13.VMBridge_jdk13:54","type":"CtAssignmentImpl","sourcecode":"storage[0] = cx"},"status":-1}],"header":{"groupId":"r","transformationCount":8,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}