{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"cb10a91c-89c8-11e6-9ffa-adc9318c9844","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.Context:411","type":"CtIfImpl","sourcecode":"if ((cx.int) != 0) {\n    throw new java.lang.IllegalStateException(\"can not use Context instance already associated with some thread\");\n} "},"variableMap":{"cx":"org.mozilla.javascript.Scriptable.NOT_FOUND","enterCount":"N"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeArray:487","type":"CtForImpl","sourcecode":"for (int int = 0 ; i != N ; ++i) {\n    if ((java.lang.Object[][i]) != (org.mozilla.javascript.Scriptable.org.mozilla.javascript.Scriptable.java.lang.Object)) {\n        ids[presentCount] = java.lang.Integer.valueOf(i);\n        ++presentCount;\n    } \n}"},"status":-1},{"failures":[],"tindex":"cb10d02d-89c8-11e6-9ffa-27caf3ef88b2","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.JavaMembers:330","type":"CtAssignmentImpl","sourcecode":"clazz = clazz.getSuperclass()"},"variableMap":{"clazz":"cl"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeJavaArray:46","type":"CtAssignmentImpl","sourcecode":"org.mozilla.javascript.NativeJavaArray.this.java.lang.Class<?> = cl.getComponentType()"},"status":-1},{"failures":[],"tindex":"cb10d02e-89c8-11e6-9ffa-f38bbae0f63c","series":0,"name":"replace","transplant":{"position":"org.mozilla.classfile.ClassFileWriter:4507","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.JavaMembers:54","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"cb10d02f-89c8-11e6-9ffa-fb2a47ad180f","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.UintMap:346","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (java.lang.Object[]) != null"},"variableMap":{"values":"args"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeIterator:147","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = ((args.int) > 1) && (org.mozilla.javascript.ScriptRuntime.toBoolean(args[1]))"},"status":-1},{"failures":[],"tindex":"cb10f740-89c8-11e6-9ffa-5be4d27dc7d5","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.Interpreter:277","type":"CtReturnImpl","sourcecode":"return best"},"variableMap":{"best":"org.mozilla.javascript.Token.RB"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.TokenStream:616","type":"CtSwitchImpl","sourcecode":"switch (c) {\n    case ';' :\n        return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n    case '[' :\n        return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n    case ']' :\n        return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n    case '{' :\n        return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n    case '}' :\n        return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n    case '(' :\n        return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n    case ')' :\n        return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n    case ',' :\n        return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n    case '?' :\n        return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n    case ':' :\n        if (matchChar(':')) {\n            return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n        } else {\n            return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n        }\n    case '.' :\n        if (matchChar('.')) {\n            return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n        } else if (matchChar('(')) {\n            return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n        } else {\n            return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n        }\n    case '|' :\n        if (matchChar('|')) {\n            return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n        } else if (matchChar('=')) {\n            return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n        } else {\n            return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n        }\n    case '^' :\n        if (matchChar('=')) {\n            return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n        } else {\n            return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n        }\n    case '&' :\n        if (matchChar('&')) {\n            return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n        } else if (matchChar('=')) {\n            return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n        } else {\n            return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n        }\n    case '=' :\n        if (matchChar('=')) {\n            if (matchChar('=')) {\n                return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n            } else {\n                return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n            }\n        } else {\n            return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n        }\n    case '!' :\n        if (matchChar('=')) {\n            if (matchChar('=')) {\n                return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n            } else {\n                return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n            }\n        } else {\n            return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n        }\n    case '<' :\n        if (matchChar('!')) {\n            if (matchChar('-')) {\n                if (matchChar('-')) {\n                    int = (int) - 4;\n                    skipLine();\n                    org.mozilla.javascript.Token.CommentType = org.mozilla.javascript.Token.CommentType.org.mozilla.javascript.Token.CommentType.org.mozilla.javascript.Token.CommentType;\n                    return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n                } \n                ungetCharIgnoreLineEnd('-');\n            } \n            ungetCharIgnoreLineEnd('!');\n        } \n        if (matchChar('<')) {\n            if (matchChar('=')) {\n                return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n            } else {\n                return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n            }\n        } else {\n            if (matchChar('=')) {\n                return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n            } else {\n                return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n            }\n        }\n    case '>' :\n        if (matchChar('>')) {\n            if (matchChar('>')) {\n                if (matchChar('=')) {\n                    return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n                } else {\n                    return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n                }\n            } else {\n                if (matchChar('=')) {\n                    return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n                } else {\n                    return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n                }\n            }\n        } else {\n            if (matchChar('=')) {\n                return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n            } else {\n                return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n            }\n        }\n    case '*' :\n        if (matchChar('=')) {\n            return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n        } else {\n            return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n        }\n    case '/' :\n        markCommentStart();\n        if (matchChar('/')) {\n            int = (int) - 2;\n            skipLine();\n            org.mozilla.javascript.Token.CommentType = org.mozilla.javascript.Token.CommentType.org.mozilla.javascript.Token.CommentType.org.mozilla.javascript.Token.CommentType;\n            return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n        } \n        if (matchChar('*')) {\n            boolean boolean = false;\n            int = (int) - 2;\n            if (matchChar('*')) {\n                lookForSlash = true;\n                org.mozilla.javascript.Token.CommentType = org.mozilla.javascript.Token.CommentType.org.mozilla.javascript.Token.CommentType.org.mozilla.javascript.Token.CommentType;\n            } else {\n                org.mozilla.javascript.Token.CommentType = org.mozilla.javascript.Token.CommentType.org.mozilla.javascript.Token.CommentType.org.mozilla.javascript.Token.CommentType;\n            }\n            for ( ;  ; ) {\n                c = getChar();\n                if (c == (org.mozilla.javascript.TokenStream.org.mozilla.javascript.TokenStream.int)) {\n                    int = (int) - 1;\n                    org.mozilla.javascript.Parser.addError(\"msg.unterminated.comment\");\n                    return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n                } else if (c == '*') {\n                    lookForSlash = true;\n                } else if (c == '/') {\n                    if (lookForSlash) {\n                        int = int;\n                        return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n                    } \n                } else {\n                    lookForSlash = false;\n                    int = int;\n                }\n            }\n        } \n        if (matchChar('=')) {\n            return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n        } else {\n            return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n        }\n    case '%' :\n        if (matchChar('=')) {\n            return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n        } else {\n            return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n        }\n    case '~' :\n        return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n    case '+' :\n        if (matchChar('=')) {\n            return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n        } else if (matchChar('+')) {\n            return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n        } else {\n            return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n        }\n    case '-' :\n        if (matchChar('=')) {\n            c = org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n        } else if (matchChar('-')) {\n            if (!(boolean)) {\n                if (matchChar('>')) {\n                    markCommentStart(\"--\");\n                    skipLine();\n                    org.mozilla.javascript.Token.CommentType = org.mozilla.javascript.Token.CommentType.org.mozilla.javascript.Token.CommentType.org.mozilla.javascript.Token.CommentType;\n                    return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n                } \n            } \n            c = org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n        } else {\n            c = org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n        }\n        boolean = true;\n        return c;\n    default :\n        org.mozilla.javascript.Parser.addError(\"msg.illegal.character\");\n        return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n}"},"status":-1},{"failures":[],"tindex":"cb111e51-89c8-11e6-9ffa-cb57bf362e89","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeJavaObject:278","type":"CtIfImpl","sourcecode":"if (to == (org.mozilla.javascript.ScriptRuntime.org.mozilla.javascript.ScriptRuntime.java.lang.Class<?>)) {\n    return 9;\n} else if (to == (org.mozilla.javascript.ScriptRuntime.org.mozilla.javascript.ScriptRuntime.java.lang.Class<?>)) {\n    return 10;\n} else if (org.mozilla.javascript.ScriptRuntime.org.mozilla.javascript.ScriptRuntime.java.lang.Class<?>.isAssignableFrom(to)) {\n    return 2;\n} "},"status":-1},{"failures":[],"tindex":"cb114562-89c8-11e6-9ffa-57f840e36adc","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.optimizer.Codegen:494","type":"CtInvocationImpl","sourcecode":"cfw.addALoad(4)"},"variableMap":{"cfw":"cfw"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:4987","type":"CtInvocationImpl","sourcecode":"org.mozilla.classfile.ClassFileWriter.addAStore(reg)"},"status":-1},{"failures":[],"tindex":"cb114563-89c8-11e6-9ffa-a731393e859f","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.regexp.NativeRegExp:829","type":"CtAssignmentImpl","sourcecode":"c = src[((state.int)++)]"},"variableMap":{"c":"c","src":"src","state":"state","cp":"cp"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.regexp.NativeRegExp:1147","type":"CtAssignmentImpl","sourcecode":"c = src[state.int]"},"status":-1}],"header":{"groupId":"r","transformationCount":8,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}