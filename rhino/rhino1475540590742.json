{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"bb23d13d-89c8-11e6-ba19-dfddbdefd7bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeArray:665","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(java.lang.Object[], ((int)(longVal)), java.lang.Object[].int, org.mozilla.javascript.Scriptable.org.mozilla.javascript.Scriptable.java.lang.Object)"},"status":-1},{"failures":[],"tindex":"bb241f5e-89c8-11e6-ba19-e3790f69b41b","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.NativeGlobal:118","type":"CtInvocationImpl","sourcecode":"errorProto.put(\"constructor\", errorProto, ctor)"},"variableMap":{"errorProto":"scope","ctor":"scope"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.JavaMembers:447","type":"CtForImpl","sourcecode":"for (int int = 0 ; tableCursor != 2 ; ++tableCursor) {\n    boolean boolean = tableCursor == 0;\n    java.util.Map<java.lang.String, java.lang.Object> java.util.Map<java.lang.String, java.lang.Object> = isStatic ? java.util.Map<java.lang.String, java.lang.Object> : java.util.Map<java.lang.String, java.lang.Object>;\n    for (java.util.Map.Entry<java.lang.String, java.lang.Object> java.util.Map.Entry<java.lang.String, java.lang.Object> : ht.entrySet()) {\n        org.mozilla.javascript.MemberBox[] org.mozilla.javascript.MemberBox[];\n        java.lang.Object java.lang.Object = entry.getValue();\n        if (value instanceof java.lang.reflect.Method) {\n            methodBoxes = new org.mozilla.javascript.MemberBox[1];\n            methodBoxes[0] = new org.mozilla.javascript.MemberBox(((java.lang.reflect.Method)(value)));\n        } else {\n            org.mozilla.javascript.ObjArray org.mozilla.javascript.ObjArray = ((org.mozilla.javascript.ObjArray)(value));\n            int int = overloadedMethods.size();\n            if (N < 2)\n                org.mozilla.javascript.Kit.codeBug();\n            \n            methodBoxes = new org.mozilla.javascript.MemberBox[N];\n            for (int int = 0 ; i != N ; ++i) {\n                java.lang.reflect.Method java.lang.reflect.Method = ((java.lang.reflect.Method)(overloadedMethods.get(i)));\n                methodBoxes[i] = new org.mozilla.javascript.MemberBox(method);\n            }\n        }\n        org.mozilla.javascript.NativeJavaMethod org.mozilla.javascript.NativeJavaMethod = new org.mozilla.javascript.NativeJavaMethod(methodBoxes);\n        if (scope != null) {\n            org.mozilla.javascript.ScriptRuntime.setFunctionProtoAndParent(fun, scope);\n        } \n        ht.put(entry.getKey(), fun);\n    }\n}"},"status":-1},{"failures":[],"tindex":"bb241f5f-89c8-11e6-ba19-2bacf7091ec8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:363","type":"CtInvocationImpl","sourcecode":"cfw.addALoad((4 + (i * 3)))"},"status":-1},{"failures":[],"tindex":"bb241f60-89c8-11e6-ba19-29ead27f6a47","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.NativeString:725","type":"CtThrowImpl","sourcecode":"throw org.mozilla.javascript.ScriptRuntime.rangeError(\"Invalid count value\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ScriptableObject:1935","type":"CtThrowImpl","sourcecode":"throw org.mozilla.javascript.ScriptRuntime.notFunctionError(setter)"},"status":-1}],"header":{"groupId":"r","transformationCount":4,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}