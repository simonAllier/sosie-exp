{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"cf13fc78-89b8-11e6-8933-d35c59a463aa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NodeTransformer:83","type":"CtIfImpl","sourcecode":"if ((createScopeObjects && (((type == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) || (type == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))) || (type == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)))) && (node instanceof org.mozilla.javascript.ast.Scope)) {\n    org.mozilla.javascript.ast.Scope org.mozilla.javascript.ast.Scope = ((org.mozilla.javascript.ast.Scope)(node));\n    if ((newScope.getSymbolTable()) != null) {\n        org.mozilla.javascript.Node org.mozilla.javascript.Node = new org.mozilla.javascript.Node((type == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int) ? org.mozilla.javascript.Token.org.mozilla.javascript.Token.int : org.mozilla.javascript.Token.org.mozilla.javascript.Token.int));\n        org.mozilla.javascript.Node org.mozilla.javascript.Node = new org.mozilla.javascript.Node(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int);\n        let.addChildToBack(innerLet);\n        for (java.lang.String java.lang.String : newScope.getSymbolTable().keySet()) {\n            innerLet.addChildToBack(org.mozilla.javascript.Node.newString(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int, name));\n        }\n        newScope.setSymbolTable(null);\n        org.mozilla.javascript.Node org.mozilla.javascript.Node = node;\n        node = org.mozilla.javascript.NodeTransformer.replaceCurrent(parent, previous, node, let);\n        type = node.getType();\n        let.addChildToBack(oldNode);\n    } \n} "},"status":-1},{"failures":[],"tindex":"cf142389-89b8-11e6-8933-d79bf97185d3","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.NativeGlobal:645","type":"CtAssignmentImpl","sourcecode":"minUcs4Char = 128"},"variableMap":{"minUcs4Char":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.DToA:565","type":"CtAssignmentImpl","sourcecode":"j = ((bbits[0]) - i) - 1"},"status":-1},{"failures":[],"tindex":"cf14238a-89b8-11e6-8933-1bd9f3a80faf","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.CodeGenerator:1437","type":"CtAssignmentImpl","sourcecode":"capacity = top + extraSize"},"variableMap":{"top":"childCount","extraSize":"childCount","capacity":"childCount"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.CodeGenerator:914","type":"CtUnaryOperatorImpl","sourcecode":"++childCount"},"status":-1},{"failures":[],"tindex":"cf14238b-89b8-11e6-8933-3f1e52d6052f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NodeTransformer:35","type":"CtForImpl","sourcecode":"for (int int = 0 ; i != (tree.getFunctionCount()) ; ++i) {\n    org.mozilla.javascript.ast.FunctionNode org.mozilla.javascript.ast.FunctionNode = tree.getFunctionNode(i);\n    transform(fn);\n}"},"status":-1},{"failures":[],"tindex":"cf14238c-89b8-11e6-8933-5f091d5d758d","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.TokenStream:1303","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    if (((int) == '\\r') && (c == '\\n')) {\n        int = '\\n';\n        continue;\n    } \n    int = -1;\n    int = (int) - 1;\n    (int)++;\n} "},"variableMap":{"lineEndChar":"org.mozilla.classfile.ByteCode.INVOKEINTERFACE","c":"org.mozilla.classfile.ByteCode.INVOKEINTERFACE","lineno":"org.mozilla.classfile.ByteCode.ACONST_NULL","sourceCursor":"org.mozilla.classfile.ByteCode.PUTSTATIC","lineStart":"org.mozilla.classfile.ByteCode.INVOKEINTERFACE"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:986","type":"CtForImpl","sourcecode":"for (int int = 0 ; i != (org.mozilla.javascript.ast.ScriptNode[].int) ; ++i) {\n    org.mozilla.javascript.ast.ScriptNode org.mozilla.javascript.ast.ScriptNode = org.mozilla.javascript.ast.ScriptNode[][i];\n    int int = n.getRegexpCount();\n    for (int int = 0 ; j != regCount ; ++j) {\n        java.lang.String java.lang.String = getCompiledRegexpName(n, j);\n        java.lang.String java.lang.String = \"Ljava/lang/Object;\";\n        java.lang.String java.lang.String = n.getRegexpString(j);\n        java.lang.String java.lang.String = n.getRegexpFlags(j);\n        cfw.addField(reFieldName, reFieldType, ((short)((org.mozilla.classfile.ClassFileWriter.org.mozilla.classfile.ClassFileWriter.short) | (org.mozilla.classfile.ClassFileWriter.org.mozilla.classfile.ClassFileWriter.short))));\n        cfw.addALoad(1);\n        cfw.addALoad(0);\n        cfw.addPush(reString);\n        if (reFlags == null) {\n            cfw.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int);\n        } else {\n            cfw.addPush(reFlags);\n        }\n        cfw.addInvoke(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, \"org/mozilla/javascript/RegExpProxy\", \"compileRegExp\", (\"(Lorg/mozilla/javascript/Context;\" + (\"Ljava/lang/String;Ljava/lang/String;\" + \")Ljava/lang/Object;\")));\n        cfw.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, java.lang.String, reFieldName, reFieldType);\n    }\n}"},"status":-1},{"failures":[],"tindex":"cf144a9d-89b8-11e6-8933-754e3d0fa6e4","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.CodeGenerator:1250","type":"CtIfImpl","sourcecode":"if (!(org.mozilla.javascript.Icode.validIcode(icode)))\n    throw org.mozilla.javascript.Kit.codeBug();\n"},"variableMap":{"icode":"escapeVal"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.TokenStream:528","type":"CtSwitchImpl","sourcecode":"switch (c) {\n    case 'b' :\n        c = '\\b';\n        break;\n    case 'f' :\n        c = '\\f';\n        break;\n    case 'n' :\n        c = '\\n';\n        break;\n    case 'r' :\n        c = '\\r';\n        break;\n    case 't' :\n        c = '\\t';\n        break;\n    case 'v' :\n        c = 11;\n        break;\n    case 'u' :\n        int int = int;\n        addToString('u');\n        escapeVal = 0;\n        for (int int = 0 ; i != 4 ; ++i) {\n            c = getChar();\n            escapeVal = org.mozilla.javascript.Kit.xDigitToInt(c, escapeVal);\n            if (escapeVal < 0) {\n                continue strLoop;\n            } \n            addToString(c);\n        }\n        int = escapeStart;\n        c = escapeVal;\n        break;\n    case 'x' :\n        c = getChar();\n        escapeVal = org.mozilla.javascript.Kit.xDigitToInt(c, 0);\n        if (escapeVal < 0) {\n            addToString('x');\n            continue strLoop;\n        } else {\n            int int = c;\n            c = getChar();\n            escapeVal = org.mozilla.javascript.Kit.xDigitToInt(c, escapeVal);\n            if (escapeVal < 0) {\n                addToString('x');\n                addToString(c1);\n                continue strLoop;\n            } else {\n                c = escapeVal;\n            }\n        }\n        break;\n    case '\\n' :\n        c = getChar();\n        continue strLoop;\n    default :\n        if (('0' <= c) && (c < '8')) {\n            int int = c - '0';\n            c = getChar();\n            if (('0' <= c) && (c < '8')) {\n                val = ((8 * val) + c) - '0';\n                c = getChar();\n                if ((('0' <= c) && (c < '8')) && (val <= 31)) {\n                    val = ((8 * val) + c) - '0';\n                    c = getChar();\n                } \n            } \n            ungetChar(c);\n            c = val;\n        } \n}"},"status":-1},{"failures":[],"tindex":"cf144a9e-89b8-11e6-8933-b740f94a94c5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:2605","type":"CtInvocationImpl","sourcecode":"generateExpression(child, node)"},"status":-1},{"failures":[],"tindex":"cf144a9f-89b8-11e6-8933-a9dbabff9f15","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:2497","type":"CtInvocationImpl","sourcecode":"generateExpression(child, node)"},"status":-1}],"header":{"groupId":"r","transformationCount":8,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}