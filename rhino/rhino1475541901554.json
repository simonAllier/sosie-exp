{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"c871dbc8-89cb-11e6-adbf-8b717a655261","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.NativeDate:1558","type":"CtAssignmentImpl","sourcecode":"lorutime = 0"},"variableMap":{"lorutime":"ds"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.DToA:650","type":"CtOperatorAssignmentImpl","sourcecode":"d /= ds"},"status":-1},{"failures":[],"tindex":"c87202d9-89cb-11e6-adbf-4f8c7f11f560","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:875","type":"CtInvocationImpl","sourcecode":"cfw.addILoad(1)"},"status":-1},{"failures":[],"tindex":"c87202da-89cb-11e6-adbf-c1019146e68f","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.CompilerEnvirons:220","type":"CtAssignmentImpl","sourcecode":"boolean = recover"},"variableMap":{"recoverFromErrors":"inUseStrictDirective","recover":"inUseStrictDirective"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.IRFactory:50","type":"CtAssignmentImpl","sourcecode":"org.mozilla.javascript.IRFactory.this.boolean = root.isInStrictMode()"},"status":-1},{"failures":[],"tindex":"c87202db-89cb-11e6-adbf-41f67da948c8","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.IRFactory:1764","type":"CtInvocationImpl","sourcecode":"pn.addChildToBack(finallyEnd)"},"variableMap":{"pn":"rChild","finallyEnd":"rChild"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:4779","type":"CtIfImpl","sourcecode":"if (((child.getType()) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) || ((rChild.getType()) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))) {\n    if ((child.getType()) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n        child = rChild;\n    } \n    generateExpression(child, node);\n    if ((type == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) || (type == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))) {\n        int int = type == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int) ? org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int : org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int;\n        org.mozilla.classfile.ClassFileWriter.add(testCode, trueGOTO);\n    } else {\n        if (type != (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n            if (type != (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))\n                throw org.mozilla.javascript.optimizer.Codegen.badTree();\n            \n            int int = trueGOTO;\n            trueGOTO = falseGOTO;\n            falseGOTO = tmp;\n        } \n        org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int);\n        int int = org.mozilla.classfile.ClassFileWriter.acquireLabel();\n        org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, undefCheckLabel);\n        short short = org.mozilla.classfile.ClassFileWriter.getStackTop();\n        org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int);\n        org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, trueGOTO);\n        org.mozilla.classfile.ClassFileWriter.markLabel(undefCheckLabel, stack);\n        org.mozilla.javascript.optimizer.Codegen.pushUndefined(org.mozilla.classfile.ClassFileWriter);\n        org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, trueGOTO);\n    }\n    org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, falseGOTO);\n} else {\n    int int = nodeIsDirectCallParameter(child);\n    if ((child_dcp_register != (-1)) && ((rChild.getType()) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))) {\n        org.mozilla.javascript.Node org.mozilla.javascript.Node = rChild.getFirstChild();\n        if ((convertChild.getType()) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n            org.mozilla.classfile.ClassFileWriter.addALoad(child_dcp_register);\n            org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, \"java/lang/Void\", \"TYPE\", \"Ljava/lang/Class;\");\n            int int = org.mozilla.classfile.ClassFileWriter.acquireLabel();\n            org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, notNumbersLabel);\n            org.mozilla.classfile.ClassFileWriter.addDLoad((child_dcp_register + 1));\n            org.mozilla.classfile.ClassFileWriter.addPush(convertChild.getDouble());\n            org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int);\n            if (type == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))\n                org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, trueGOTO);\n            else\n                org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, trueGOTO);\n            \n            org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, falseGOTO);\n            org.mozilla.classfile.ClassFileWriter.markLabel(notNumbersLabel);\n        } \n    } \n    generateExpression(child, node);\n    generateExpression(rChild, node);\n    java.lang.String java.lang.String;\n    int int;\n    switch (type) {\n        case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n            name = \"eq\";\n            testCode = org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int;\n            break;\n        case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n            name = \"eq\";\n            testCode = org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int;\n            break;\n        case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n            name = \"shallowEq\";\n            testCode = org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int;\n            break;\n        case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n            name = \"shallowEq\";\n            testCode = org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int;\n            break;\n        default :\n            throw org.mozilla.javascript.optimizer.Codegen.badTree();\n    }\n    addScriptRuntimeInvoke(name, (\"(Ljava/lang/Object;\" + (\"Ljava/lang/Object;\" + \")Z\")));\n    org.mozilla.classfile.ClassFileWriter.add(testCode, trueGOTO);\n    org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, falseGOTO);\n}"},"status":-1},{"failures":[],"tindex":"c87229ec-89cb-11e6-adbf-41eb078bc2bd","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.typedarrays.ByteIo:199","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Float.floatToIntBits(((float)(val)))"},"variableMap":{"val":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeMath:300","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(y))"},"status":-1},{"failures":[],"tindex":"c87229ed-89cb-11e6-adbf-3d42bfdca33f","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.Interpreter:891","type":"CtLocalVariableImpl","sourcecode":"final int int = 100"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.IRFactory:640","type":"CtLocalVariableImpl","sourcecode":"int int = loops.size()"},"status":-1},{"failures":[],"tindex":"c87250fe-89cb-11e6-adbf-c7a6f808f442","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ast.FunctionCall:94","type":"CtInvocationImpl","sourcecode":"assertNotNull(arg)"},"status":-1},{"failures":[],"tindex":"c87250ff-89cb-11e6-adbf-1157b8d96898","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.ast.AstRoot:144","type":"CtIfImpl","sourcecode":"if ((node.getParent()) == null)\n    throw new java.lang.IllegalStateException((((\"No parent for node: \" + node) + \"\\n\") + (node.toSource(0))));\n"},"variableMap":{"node":"org.mozilla.javascript.Scriptable.NOT_FOUND"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ScriptRuntime:1915","type":"CtIfImpl","sourcecode":"if (result == (org.mozilla.javascript.Scriptable.org.mozilla.javascript.Scriptable.java.lang.Object)) {\n    if ((firstXMLObject == null) || asFunctionCall) {\n        throw org.mozilla.javascript.ScriptRuntime.notFoundError(scope, name);\n    } \n    result = firstXMLObject.get(name, firstXMLObject);\n} "},"status":-1},{"failures":[],"tindex":"c8725100-89cb-11e6-adbf-7d671996ab16","series":0,"name":"replace","transplant":{"position":"org.mozilla.classfile.ClassFileWriter:2716","type":"CtIfImpl","sourcecode":"if (org.mozilla.classfile.TypeInfo.isTwoWords(typeInfo)) {\n    localsTop++;\n} "},"variableMap":{"typeInfo":"type","localsTop":"org.mozilla.javascript.SpecialRef.SPECIAL_PROTO"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.SpecialRef:93","type":"CtIfImpl","sourcecode":"if ((int) == (org.mozilla.javascript.SpecialRef.org.mozilla.javascript.SpecialRef.int)) {\n    search = search.getPrototype();\n} else {\n    search = search.getParentScope();\n}"},"status":-1},{"failures":[],"tindex":"c8725101-89cb-11e6-adbf-95384695ba47","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.NativeArray:47","type":"CtLocalVariableImpl","sourcecode":"org.mozilla.javascript.NativeArray org.mozilla.javascript.NativeArray = new org.mozilla.javascript.NativeArray(0)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeArray:1107","type":"CtLocalVariableImpl","sourcecode":"org.mozilla.javascript.NativeArray org.mozilla.javascript.NativeArray = ((org.mozilla.javascript.NativeArray)(thisObj))"},"status":-1}],"header":{"groupId":"r","transformationCount":10,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}