{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"22dbfeb8-89a9-11e6-9c31-99feb5b08f41","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.regexp.NativeRegExp:2723","type":"CtReturnImpl","sourcecode":"return java.lang.Boolean.java.lang.Boolean.java.lang.Boolean.equals(x) ? java.lang.Boolean.java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean.java.lang.Boolean"},"variableMap":{"java.lang.Boolean.FALSE":"value","x":"value","java.lang.Boolean.TRUE":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ScriptableObject:188","type":"CtReturnImpl","sourcecode":"return java.lang.Object"},"status":-1},{"failures":[],"tindex":"22dc25c9-89a9-11e6-9c31-45dac3f20cf7","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.ast.ErrorCollector:75","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.json.JsonParser:392","type":"CtThrowImpl","sourcecode":"throw new org.mozilla.javascript.json.JsonParser.ParseException(((\"Expected \" + token) + \" but reached end of stream\"))"},"status":-1},{"failures":[],"tindex":"22dc25ca-89a9-11e6-9c31-6dd258270582","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.ObjArray:170","type":"CtIfImpl","sourcecode":"if (!((0 <= index) && (index <= N)))\n    throw org.mozilla.javascript.ObjArray.onInvalidIndex(index, (N + 1));\n"},"variableMap":{"index":"newStack","N":"newStack"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.classfile.ClassFileWriter:462","type":"CtIfImpl","sourcecode":"if (newStack > (short))\n    short = ((short)(newStack));\n"},"status":-1},{"failures":[],"tindex":"22dc25cb-89a9-11e6-9c31-3b0dee271dfc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.commonjs.module.Require:286","type":"CtInvocationImpl","sourcecode":"threadLoadingModules.put(id, exports)"},"status":-1},{"failures":[],"tindex":"22dc4cdc-89a9-11e6-9c31-9fae3c3d02bb","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.Parser:1752","type":"CtInvocationImpl","sourcecode":"dxmln.setOperand(e)"},"variableMap":{"dxmln":"incr","e":"init"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.IRFactory:1487","type":"CtIfImpl","sourcecode":"if (loopType == (org.mozilla.javascript.IRFactory.org.mozilla.javascript.IRFactory.int)) {\n    int int = init.getType();\n    if (initType != (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n        if ((initType != (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) && (initType != (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))) {\n            init = new org.mozilla.javascript.Node(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int , init);\n        } \n        loop.addChildToFront(init);\n    } \n    org.mozilla.javascript.Node org.mozilla.javascript.Node = org.mozilla.javascript.Node.newTarget();\n    loop.addChildAfter(incrTarget, body);\n    if ((incr.getType()) != (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n        incr = new org.mozilla.javascript.Node(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int , incr);\n        loop.addChildAfter(incr, incrTarget);\n    } \n    continueTarget = incrTarget;\n} "},"status":-1},{"failures":[],"tindex":"22dc4cdd-89a9-11e6-9c31-6b4acf7d7c3a","series":0,"name":"replace","transplant":{"position":"org.mozilla.classfile.ClassFileWriter:1265","type":"CtIfImpl","sourcecode":"if (!(label < (int)))\n    throw new java.lang.IllegalArgumentException(\"Bad label\");\n"},"variableMap":{"itsLabelTableTop":"attributeCount","label":"attributeCount"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.classfile.ClassFileWriter:380","type":"CtIfImpl","sourcecode":"if ((org.mozilla.javascript.ObjArray) != null)\n    attributeCount++;\n"},"status":-1},{"failures":[],"tindex":"22dc4cde-89a9-11e6-9c31-5b7bf1c17645","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.regexp.NativeRegExp:2901","type":"CtAssignmentImpl","sourcecode":"org.mozilla.javascript.regexp.REProgState = gData.org.mozilla.javascript.regexp.REProgState"},"variableMap":{"stateStackTop":"stateStackTop","gData":"gData"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.regexp.NativeRegExp:1368","type":"CtAssignmentImpl","sourcecode":"gData.org.mozilla.javascript.regexp.REProgState = new org.mozilla.javascript.regexp.REProgState(gData.org.mozilla.javascript.regexp.REProgState , min , max , cp , backTrackLastToSave , continuationOp , continuationPc)"},"status":-1},{"failures":[],"tindex":"22dc4cdf-89a9-11e6-9c31-81444a312e94","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.TokenStream:193","type":"CtAssignmentImpl","sourcecode":"id = Id_yield"},"variableMap":{"Id_yield":"index","id":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeDate:1106","type":"CtOperatorAssignmentImpl","sourcecode":"index -= 12"},"status":-1},{"failures":[],"tindex":"22dc73f0-89a9-11e6-9c31-a35285398e88","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeArray:672","type":"CtAssignmentImpl","sourcecode":"long = longVal"},"status":-1},{"failures":[],"tindex":"22dc73f1-89a9-11e6-9c31-9f7aea6a790b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.UintMap:270","type":"CtIfImpl","sourcecode":"if (oldCount != 0) {\n    int = 0;\n    for (int int = 0, int int = oldCount ; remaining != 0 ; ++i) {\n        int int = old[i];\n        if ((key != (org.mozilla.javascript.UintMap.org.mozilla.javascript.UintMap.int)) && (key != (org.mozilla.javascript.UintMap.org.mozilla.javascript.UintMap.int))) {\n            int int = insertNewKey(key);\n            if (oldValues != null) {\n                java.lang.Object[][index] = oldValues[i];\n            } \n            if (oldShift != 0) {\n                int[][((int) + index)] = old[(oldShift + i)];\n            } \n            --remaining;\n        } \n    }\n} "},"status":-1}],"header":{"groupId":"r","transformationCount":10,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}