{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"5247f2b0-89c8-11e6-8ad5-259bf792e965","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.Context:2069","type":"CtIfImpl","sourcecode":"if (org.mozilla.javascript.SecurityController.hasGlobal()) {\n    throw new java.lang.SecurityException(\"Can not overwrite existing global SecurityController object\");\n} "},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.JavaMembers:372","type":"CtInvocationImpl","sourcecode":"org.mozilla.javascript.JavaMembers.discoverAccessibleMethods(superclass, map, includeProtected, includePrivate)"},"status":-1},{"failures":[],"tindex":"524819c1-89c8-11e6-8ad5-41093a0f8fa5","series":0,"name":"add","transplant":{"position":"org.mozilla.classfile.ClassFileWriter:1861","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.JavaMembers:668","type":"CtLocalVariableImpl","sourcecode":"int int = field.getModifiers()"},"status":-1},{"failures":[],"tindex":"524819c2-89c8-11e6-8ad5-eb2076073529","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.Parser:3637","type":"CtAssignmentImpl","sourcecode":"org.mozilla.javascript.Parser.this.java.util.List<org.mozilla.javascript.ast.Jump> = java.util.List<org.mozilla.javascript.ast.Jump>"},"variableMap":{"loopAndSwitchSet":"savedLoopAndSwitchSet","savedLoopAndSwitchSet":"savedLoopAndSwitchSet"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.Parser:3622","type":"CtAssignmentImpl","sourcecode":"java.util.List<org.mozilla.javascript.ast.Jump> = org.mozilla.javascript.Parser.this.java.util.List<org.mozilla.javascript.ast.Jump>"},"status":-1},{"failures":[],"tindex":"524819c3-89c8-11e6-8ad5-17664052d6e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.classfile.ClassFileWriter:4625","type":"CtInvocationImpl","sourcecode":"org.mozilla.javascript.ObjToIntMap.put(slashed, theIndex)"},"status":-1},{"failures":[],"tindex":"524819c4-89c8-11e6-8ad5-eb61becd6a21","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.CodeGenerator:1434","type":"CtIfImpl","sourcecode":"if ((top + extraSize) <= capacity)\n    throw org.mozilla.javascript.Kit.codeBug();\n"},"variableMap":{"top":"org.mozilla.classfile.ByteCode.GETSTATIC","extraSize":"org.mozilla.javascript.Token.SHEQ","capacity":"org.mozilla.classfile.ByteCode.IFEQ"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:4779","type":"CtIfImpl","sourcecode":"if (((child.getType()) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) || ((rChild.getType()) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))) {\n    if ((child.getType()) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n        child = rChild;\n    } \n    generateExpression(child, node);\n    if ((type == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) || (type == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))) {\n        int int = type == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int) ? org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int : org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int;\n        org.mozilla.classfile.ClassFileWriter.add(testCode, trueGOTO);\n    } else {\n        if (type != (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n            if (type != (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))\n                throw org.mozilla.javascript.optimizer.Codegen.badTree();\n            \n            int int = trueGOTO;\n            trueGOTO = falseGOTO;\n            falseGOTO = tmp;\n        } \n        org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int);\n        int int = org.mozilla.classfile.ClassFileWriter.acquireLabel();\n        org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, undefCheckLabel);\n        short short = org.mozilla.classfile.ClassFileWriter.getStackTop();\n        org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int);\n        org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, trueGOTO);\n        org.mozilla.classfile.ClassFileWriter.markLabel(undefCheckLabel, stack);\n        org.mozilla.javascript.optimizer.Codegen.pushUndefined(org.mozilla.classfile.ClassFileWriter);\n        org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, trueGOTO);\n    }\n    org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, falseGOTO);\n} else {\n    int int = nodeIsDirectCallParameter(child);\n    if ((child_dcp_register != (-1)) && ((rChild.getType()) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))) {\n        org.mozilla.javascript.Node org.mozilla.javascript.Node = rChild.getFirstChild();\n        if ((convertChild.getType()) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n            org.mozilla.classfile.ClassFileWriter.addALoad(child_dcp_register);\n            org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, \"java/lang/Void\", \"TYPE\", \"Ljava/lang/Class;\");\n            int int = org.mozilla.classfile.ClassFileWriter.acquireLabel();\n            org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, notNumbersLabel);\n            org.mozilla.classfile.ClassFileWriter.addDLoad((child_dcp_register + 1));\n            org.mozilla.classfile.ClassFileWriter.addPush(convertChild.getDouble());\n            org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int);\n            if (type == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))\n                org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, trueGOTO);\n            else\n                org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, trueGOTO);\n            \n            org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, falseGOTO);\n            org.mozilla.classfile.ClassFileWriter.markLabel(notNumbersLabel);\n        } \n    } \n    generateExpression(child, node);\n    generateExpression(rChild, node);\n    java.lang.String java.lang.String;\n    int int;\n    switch (type) {\n        case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n            name = \"eq\";\n            testCode = org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int;\n            break;\n        case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n            name = \"eq\";\n            testCode = org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int;\n            break;\n        case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n            name = \"shallowEq\";\n            testCode = org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int;\n            break;\n        case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n            name = \"shallowEq\";\n            testCode = org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int;\n            break;\n        default :\n            throw org.mozilla.javascript.optimizer.Codegen.badTree();\n    }\n    addScriptRuntimeInvoke(name, (\"(Ljava/lang/Object;\" + (\"Ljava/lang/Object;\" + \")Z\")));\n    org.mozilla.classfile.ClassFileWriter.add(testCode, trueGOTO);\n    org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, falseGOTO);\n}"},"status":-1},{"failures":[],"tindex":"524840d5-89c8-11e6-8ad5-d5e04d65fcca","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.optimizer.Codegen:651","type":"CtLocalVariableImpl","sourcecode":"final int int = 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.UintMap:97","type":"CtLocalVariableImpl","sourcecode":"int int = findIndex(key)"},"status":-1},{"failures":[],"tindex":"524840d6-89c8-11e6-8ad5-fdf04ff7d709","series":0,"name":"replace","transplant":{"position":"org.mozilla.classfile.ClassFileWriter:4806","type":"CtAssignmentImpl","sourcecode":"int[] = new int[0]"},"variableMap":{"stack":"locals"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.classfile.ClassFileWriter:1708","type":"CtAssignmentImpl","sourcecode":"int[] = work.getLocals()"},"status":-1},{"failures":[],"tindex":"524867e7-89c8-11e6-8ad5-c5773bc522ad","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.JavaAdapter:516","type":"CtLocalVariableImpl","sourcecode":"java.lang.Class<?> java.lang.Class<?> = org.mozilla.javascript.SecurityController.getStaticSecurityDomainClass()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeJavaPackage:127","type":"CtLocalVariableImpl","sourcecode":"java.lang.Class<?> java.lang.Class<?> = null"},"status":-1},{"failures":[],"tindex":"524867e8-89c8-11e6-8ad5-bfe5ca68bc72","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.commonjs.module.provider.ModuleSourceProviderBase:80","type":"CtIfImpl","sourcecode":"if (moduleSource != null) {\n    return moduleSource;\n} "},"variableMap":{"moduleSource":"org.mozilla.javascript.commonjs.module.provider.ModuleSourceProvider.NOT_MODIFIED"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.commonjs.module.provider.ModuleSourceProviderBase:37","type":"CtIfImpl","sourcecode":"if (!(entityNeedsRevalidation(validator))) {\n    return org.mozilla.javascript.commonjs.module.provider.ModuleSourceProvider.org.mozilla.javascript.commonjs.module.provider.ModuleSourceProvider.org.mozilla.javascript.commonjs.module.provider.ModuleSource;\n} "},"status":-1}],"header":{"groupId":"r","transformationCount":9,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}