{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"a1b11e11-89a4-11e6-9033-c1a4ac8c1370","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.JavaAdapter:640","type":"CtLocalVariableImpl","sourcecode":"java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder((\"(Lorg/mozilla/javascript/Scriptable;\" + \"Lorg/mozilla/javascript/ContextFactory;\"))"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ScriptRuntime:873","type":"CtLocalVariableImpl","sourcecode":"java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-1},{"failures":[],"tindex":"a1b14522-89a4-11e6-9033-37215887c8b7","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.ScriptableObject:1567","type":"CtIfImpl","sourcecode":"if ((propName == null) || ((propName.length()) == 0)) {\n    if (((methodName.length()) > 3) && (methodName.startsWith(\"get\"))) {\n        propName = methodName.substring(3);\n        if (java.lang.Character.isUpperCase(propName.charAt(0))) {\n            if ((propName.length()) == 1) {\n                propName = propName.toLowerCase();\n            } else if (!(java.lang.Character.isUpperCase(propName.charAt(1)))) {\n                propName = (java.lang.Character.toLowerCase(propName.charAt(0))) + (propName.substring(1));\n            } \n        } \n    } \n} "},"variableMap":{"methodName":"str","propName":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeGlobal:541","type":"CtForImpl","sourcecode":"for (int int = 0, int int = str.length() ; k != length ; ++k) {\n    char char = str.charAt(k);\n    if (org.mozilla.javascript.NativeGlobal.encodeUnescaped(C, fullUri)) {\n        if (sb != null) {\n            sb.append(C);\n        } \n    } else {\n        if (sb == null) {\n            sb = new java.lang.StringBuilder((length + 3));\n            sb.append(str);\n            sb.setLength(k);\n            utf8buf = new byte[6];\n        } \n        if ((56320 <= C) && (C <= 57343)) {\n            throw org.mozilla.javascript.NativeGlobal.uriError();\n        } \n        int int;\n        if ((C < 55296) || (56319 < C)) {\n            V = C;\n        } else {\n            k++;\n            if (k == length) {\n                throw org.mozilla.javascript.NativeGlobal.uriError();\n            } \n            char char = str.charAt(k);\n            if (!((56320 <= C2) && (C2 <= 57343))) {\n                throw org.mozilla.javascript.NativeGlobal.uriError();\n            } \n            V = (((C - 55296) << 10) + (C2 - 56320)) + 65536;\n        }\n        int int = org.mozilla.javascript.NativeGlobal.oneUcs4ToUtf8Char(utf8buf, V);\n        for (int int = 0 ; j < L ; j++) {\n            int int = 255 & (utf8buf[j]);\n            sb.append('%');\n            sb.append(org.mozilla.javascript.NativeGlobal.toHexChar((d >>> 4)));\n            sb.append(org.mozilla.javascript.NativeGlobal.toHexChar((d & 15)));\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"a1b16c33-89a4-11e6-9033-9f3291c59ba9","series":0,"name":"replace","transplant":{"position":"org.mozilla.classfile.ClassFileWriter:330","type":"CtIfImpl","sourcecode":"if (attrLength > 65536) {\n    throw new org.mozilla.classfile.ClassFileWriter.ClassFileFormatException(\"generated bytecode for method exceeds 64K limit.\");\n} "},"variableMap":{"attrLength":"org.mozilla.javascript.Node.SPECIALCALL_PROP"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.IRFactory:1914","type":"CtInvocationImpl","sourcecode":"node.putIntProp(org.mozilla.javascript.Node.org.mozilla.javascript.Node.int, type)"},"status":-1},{"failures":[],"tindex":"a1b16c34-89a4-11e6-9033-c92736f8f7c5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.CodeGenerator:1448","type":"CtOperatorAssignmentImpl","sourcecode":"int += change"},"status":-1},{"failures":[],"tindex":"a1b16c35-89a4-11e6-9033-73b14a26bbcf","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.CodeGenerator:180","type":"CtIfImpl","sourcecode":"if (functionCount == 0)\n    return ;\n"},"variableMap":{"functionCount":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.json.JsonParser:374","type":"CtWhileImpl","sourcecode":"while ((int) < (int)) {\n    char char = java.lang.String.charAt(int);\n    switch (c) {\n        case ' ' :\n        case '\\t' :\n        case '\\r' :\n        case '\\n' :\n            int += 1;\n            break;\n        default :\n            return ;\n    }\n}"},"status":-1}],"header":{"groupId":"r","transformationCount":5,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}