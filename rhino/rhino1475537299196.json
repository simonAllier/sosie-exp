{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"1139e90b-89c1-11e6-a776-d5d622686b29","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.Parser:2198","type":"CtIfImpl","sourcecode":"if (tt == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))\n    parseToken = org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\nelse if (tt == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))\n    parseToken = org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n"},"variableMap":{"tt":"org.mozilla.javascript.Token.NUMBER","org.mozilla.javascript.Token.SHEQ":"org.mozilla.javascript.Icode.Icode_SHORTNUMBER","org.mozilla.javascript.Token.NE":"org.mozilla.javascript.Icode.Icode_ZERO","org.mozilla.javascript.Token.SHNE":"org.mozilla.javascript.Icode.Icode_ONE","parseToken":"org.mozilla.javascript.Icode.Icode_INTNUMBER","org.mozilla.javascript.Token.EQ":"org.mozilla.javascript.Token.NEG"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.CodeGenerator:813","type":"CtIfImpl","sourcecode":"if (inum == num) {\n    if (inum == 0) {\n        addIcode(org.mozilla.javascript.Icode.org.mozilla.javascript.Icode.int);\n        if ((1.0 / num) < 0.0) {\n            addToken(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int);\n        } \n    } else if (inum == 1) {\n        addIcode(org.mozilla.javascript.Icode.org.mozilla.javascript.Icode.int);\n    } else if (((short)(inum)) == inum) {\n        addIcode(org.mozilla.javascript.Icode.org.mozilla.javascript.Icode.int);\n        addUint16((inum & 65535));\n    } else {\n        addIcode(org.mozilla.javascript.Icode.org.mozilla.javascript.Icode.int);\n        addInt(inum);\n    }\n} else {\n    int int = getDoubleIndex(num);\n    addIndexOp(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int, index);\n}"},"status":-1},{"failures":[],"tindex":"113a101c-89c1-11e6-a776-e5f08952e96d","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.ast.ScriptNode:255","type":"CtAssignmentImpl","sourcecode":"org.mozilla.javascript.ast.ScriptNode.this.java.util.List<org.mozilla.javascript.ast.Symbol> = symbols"},"variableMap":{"symbols":"newSymbols"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ast.ScriptNode:280","type":"CtAssignmentImpl","sourcecode":"java.util.List<org.mozilla.javascript.ast.Symbol> = newSymbols"},"status":-1},{"failures":[],"tindex":"113a101d-89c1-11e6-a776-9f3c9d8430ba","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.ast.DoLoop:72","type":"CtInvocationImpl","sourcecode":"sb.append(\"do \")"},"variableMap":{"sb":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ScriptRuntime:958","type":"CtInvocationImpl","sourcecode":"result.append(intId)"},"status":-1},{"failures":[],"tindex":"113a372e-89c1-11e6-a776-1d8028701f54","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.NativeDate:958","type":"CtIfImpl","sourcecode":"if (((c == '-') && ('0' <= si)) && (si <= '9')) {\n    prevc = c;\n} "},"variableMap":{"c":"c","si":"rangeStart","prevc":"thisCh"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.regexp.NativeRegExp:1569","type":"CtWhileImpl","sourcecode":"while (src != end) {\n    nDigits = 2;\n    switch (gData.org.mozilla.javascript.regexp.RECompiled.char[][src]) {\n        case '\\\\' :\n            ++src;\n            c = gData.org.mozilla.javascript.regexp.RECompiled.char[][(src++)];\n            switch (c) {\n                case 'b' :\n                    thisCh = 8;\n                    break;\n                case 'f' :\n                    thisCh = 12;\n                    break;\n                case 'n' :\n                    thisCh = 10;\n                    break;\n                case 'r' :\n                    thisCh = 13;\n                    break;\n                case 't' :\n                    thisCh = 9;\n                    break;\n                case 'v' :\n                    thisCh = 11;\n                    break;\n                case 'c' :\n                    if ((src < end) && (org.mozilla.javascript.regexp.NativeRegExp.isControlLetter(gData.org.mozilla.javascript.regexp.RECompiled.char[][src])))\n                        thisCh = ((char)((gData.org.mozilla.javascript.regexp.RECompiled.char[][(src++)]) & 31));\n                    else {\n                        --src;\n                        thisCh = '\\\\';\n                    }\n                    break;\n                case 'u' :\n                    nDigits += 2;\n                case 'x' :\n                    n = 0;\n                    for (i = 0 ; (i < nDigits) && (src < end) ; i++) {\n                        c = gData.org.mozilla.javascript.regexp.RECompiled.char[][(src++)];\n                        int int = org.mozilla.javascript.regexp.NativeRegExp.toASCIIHexDigit(c);\n                        if (digit < 0) {\n                            src -= i + 1;\n                            n = '\\\\';\n                            break;\n                        } \n                        n = (n << 4) | digit;\n                    }\n                    thisCh = ((char)(n));\n                    break;\n                case '0' :\n                case '1' :\n                case '2' :\n                case '3' :\n                case '4' :\n                case '5' :\n                case '6' :\n                case '7' :\n                    n = c - '0';\n                    c = gData.org.mozilla.javascript.regexp.RECompiled.char[][src];\n                    if (('0' <= c) && (c <= '7')) {\n                        src++;\n                        n = (8 * n) + (c - '0');\n                        c = gData.org.mozilla.javascript.regexp.RECompiled.char[][src];\n                        if (('0' <= c) && (c <= '7')) {\n                            src++;\n                            i = (8 * n) + (c - '0');\n                            if (i <= 255)\n                                n = i;\n                            else\n                                src--;\n                            \n                        } \n                    } \n                    thisCh = ((char)(n));\n                    break;\n                case 'd' :\n                    org.mozilla.javascript.regexp.NativeRegExp.addCharacterRangeToCharSet(charSet, '0', '9');\n                    continue;\n                case 'D' :\n                    org.mozilla.javascript.regexp.NativeRegExp.addCharacterRangeToCharSet(charSet, ((char)(0)), ((char)('0' - 1)));\n                    org.mozilla.javascript.regexp.NativeRegExp.addCharacterRangeToCharSet(charSet, ((char)('9' + 1)), ((char)((charSet.int) - 1)));\n                    continue;\n                case 's' :\n                    for (i = (charSet.int) - 1 ; i >= 0 ; i--)\n                        if (org.mozilla.javascript.regexp.NativeRegExp.isREWhiteSpace(i))\n                            org.mozilla.javascript.regexp.NativeRegExp.addCharacterToCharSet(charSet, ((char)(i)));\n                        \n                    continue;\n                case 'S' :\n                    for (i = (charSet.int) - 1 ; i >= 0 ; i--)\n                        if (!(org.mozilla.javascript.regexp.NativeRegExp.isREWhiteSpace(i)))\n                            org.mozilla.javascript.regexp.NativeRegExp.addCharacterToCharSet(charSet, ((char)(i)));\n                        \n                    continue;\n                case 'w' :\n                    for (i = (charSet.int) - 1 ; i >= 0 ; i--)\n                        if (org.mozilla.javascript.regexp.NativeRegExp.isWord(((char)(i))))\n                            org.mozilla.javascript.regexp.NativeRegExp.addCharacterToCharSet(charSet, ((char)(i)));\n                        \n                    continue;\n                case 'W' :\n                    for (i = (charSet.int) - 1 ; i >= 0 ; i--)\n                        if (!(org.mozilla.javascript.regexp.NativeRegExp.isWord(((char)(i)))))\n                            org.mozilla.javascript.regexp.NativeRegExp.addCharacterToCharSet(charSet, ((char)(i)));\n                        \n                    continue;\n                default :\n                    thisCh = c;\n                    break;\n            }\n            break;\n        default :\n            thisCh = gData.org.mozilla.javascript.regexp.RECompiled.char[][(src++)];\n            break;\n    }\n    if (inRange) {\n        if (((gData.org.mozilla.javascript.regexp.RECompiled.int) & (org.mozilla.javascript.regexp.NativeRegExp.org.mozilla.javascript.regexp.NativeRegExp.int)) != 0) {\n            assert rangeStart <= thisCh;\n            for (c = rangeStart ; c <= thisCh ; ) {\n                org.mozilla.javascript.regexp.NativeRegExp.addCharacterToCharSet(charSet, c);\n                char char = org.mozilla.javascript.regexp.NativeRegExp.upcase(c);\n                char char = org.mozilla.javascript.regexp.NativeRegExp.downcase(c);\n                if (c != uch)\n                    org.mozilla.javascript.regexp.NativeRegExp.addCharacterToCharSet(charSet, uch);\n                \n                if (c != dch)\n                    org.mozilla.javascript.regexp.NativeRegExp.addCharacterToCharSet(charSet, dch);\n                \n                if ((++c) == 0)\n                    break;\n                \n            }\n        } else {\n            org.mozilla.javascript.regexp.NativeRegExp.addCharacterRangeToCharSet(charSet, rangeStart, thisCh);\n        }\n        inRange = false;\n    } else {\n        if (((gData.org.mozilla.javascript.regexp.RECompiled.int) & (org.mozilla.javascript.regexp.NativeRegExp.org.mozilla.javascript.regexp.NativeRegExp.int)) != 0) {\n            org.mozilla.javascript.regexp.NativeRegExp.addCharacterToCharSet(charSet, org.mozilla.javascript.regexp.NativeRegExp.upcase(thisCh));\n            org.mozilla.javascript.regexp.NativeRegExp.addCharacterToCharSet(charSet, org.mozilla.javascript.regexp.NativeRegExp.downcase(thisCh));\n        } else {\n            org.mozilla.javascript.regexp.NativeRegExp.addCharacterToCharSet(charSet, thisCh);\n        }\n        if (src < (end - 1)) {\n            if ((gData.org.mozilla.javascript.regexp.RECompiled.char[][src]) == '-') {\n                ++src;\n                inRange = true;\n                rangeStart = thisCh;\n            } \n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"113a5e3f-89c1-11e6-a776-43918a87e4a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.regexp.NativeRegExp:2644","type":"CtSwitchImpl","sourcecode":"switch (id) {\n    case org.mozilla.javascript.regexp.NativeRegExp.org.mozilla.javascript.regexp.NativeRegExp.int :\n        return java.lang.Object;\n    case org.mozilla.javascript.regexp.NativeRegExp.org.mozilla.javascript.regexp.NativeRegExp.int :\n        return new java.lang.String(org.mozilla.javascript.regexp.RECompiled.char[]);\n    case org.mozilla.javascript.regexp.NativeRegExp.org.mozilla.javascript.regexp.NativeRegExp.int :\n        return org.mozilla.javascript.ScriptRuntime.wrapBoolean((((org.mozilla.javascript.regexp.RECompiled.int) & (org.mozilla.javascript.regexp.NativeRegExp.org.mozilla.javascript.regexp.NativeRegExp.int)) != 0));\n    case org.mozilla.javascript.regexp.NativeRegExp.org.mozilla.javascript.regexp.NativeRegExp.int :\n        return org.mozilla.javascript.ScriptRuntime.wrapBoolean((((org.mozilla.javascript.regexp.RECompiled.int) & (org.mozilla.javascript.regexp.NativeRegExp.org.mozilla.javascript.regexp.NativeRegExp.int)) != 0));\n    case org.mozilla.javascript.regexp.NativeRegExp.org.mozilla.javascript.regexp.NativeRegExp.int :\n        return org.mozilla.javascript.ScriptRuntime.wrapBoolean((((org.mozilla.javascript.regexp.RECompiled.int) & (org.mozilla.javascript.regexp.NativeRegExp.org.mozilla.javascript.regexp.NativeRegExp.int)) != 0));\n}"},"status":-1},{"failures":[],"tindex":"113a5e40-89c1-11e6-a776-291e91374d33","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:1835","type":"CtInvocationImpl","sourcecode":"addScriptRuntimeInvoke(\"exitActivationFunction\", \"(Lorg/mozilla/javascript/Context;)V\")"},"status":-1},{"failures":[],"tindex":"113a5e41-89c1-11e6-a776-51d54c45789a","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.typedarrays.NativeTypedArrayView:87","type":"CtReturnImpl","sourcecode":"return (index < 0) || (index >= (int))"},"variableMap":{"length":"c","index":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.TokenStream:841","type":"CtIfImpl","sourcecode":"if (c <= 'Z') {\n    return 'A' <= c;\n} else {\n    return ('a' <= c) && (c <= 'z');\n}"},"status":-1},{"failures":[],"tindex":"113a8552-89c1-11e6-a776-751f87b8c964","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.NativeJavaClass:98","type":"CtReturnImpl","sourcecode":"return nestedValue"},"variableMap":{"nestedValue":"scope"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.Context:1219","type":"CtReturnImpl","sourcecode":"return script.exec(org.mozilla.javascript.Context.this, scope)"},"status":-1},{"failures":[],"tindex":"113a8553-89c1-11e6-a776-6bc90bdcf8ae","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.DToA:133","type":"CtOperatorAssignmentImpl","sourcecode":"k += 4"},"variableMap":{"k":"id"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.regexp.NativeRegExp:2590","type":"CtAssignmentImpl","sourcecode":"id = 0"},"status":-1}],"header":{"groupId":"r","transformationCount":9,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}