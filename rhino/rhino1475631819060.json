{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"239ed94e-8a9d-11e6-a3b8-a3073ce964c4","series":0,"name":"add","transplant":{"position":"org.mozilla.classfile.ClassFileWriter:1861","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:2382","type":"CtLocalVariableImpl","sourcecode":"int int = org.mozilla.classfile.ClassFileWriter.acquireLabel()"},"status":-1},{"failures":[],"tindex":"239f005f-8a9d-11e6-a3b8-f117bd237852","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.Parser:2759","type":"CtInvocationImpl","sourcecode":"ref.setPropName(name)"},"variableMap":{"ref":"target","name":"target"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ast.FunctionCall:59","type":"CtInvocationImpl","sourcecode":"target.setParent(org.mozilla.javascript.ast.FunctionCall.this)"},"status":-1},{"failures":[],"tindex":"239f0060-8a9d-11e6-a3b8-632450dccb3e","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.NativeDate:610","type":"CtSwitchImpl","sourcecode":"switch (day) {\n    case 0 :\n        return 1984;\n    case 1 :\n        return 1996;\n    case 2 :\n        return 1980;\n    case 3 :\n        return 1992;\n    case 4 :\n        return 1976;\n    case 5 :\n        return 1988;\n    case 6 :\n        return 1972;\n}"},"variableMap":{"day":"cursor"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.TokenStream:691","type":"CtIfImpl","sourcecode":"if (matchChar('-')) {\n    if (matchChar('-')) {\n        int = (int) - 4;\n        skipLine();\n        org.mozilla.javascript.Token.CommentType = org.mozilla.javascript.Token.CommentType.org.mozilla.javascript.Token.CommentType.org.mozilla.javascript.Token.CommentType;\n        return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n    } \n    ungetCharIgnoreLineEnd('-');\n} "},"status":-1},{"failures":[],"tindex":"239f2671-8a9d-11e6-a3b8-813b333f7598","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.NativeString:735","type":"CtThrowImpl","sourcecode":"throw org.mozilla.javascript.ScriptRuntime.rangeError(\"Invalid size or count value\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeGenerator:192","type":"CtThrowImpl","sourcecode":"throw e"},"status":-1},{"failures":[],"tindex":"239f2672-8a9d-11e6-a3b8-a7a99b86896a","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.IRFactory:1876","type":"CtIfImpl","sourcecode":"if (status != 0) {\n    int int;\n    if (status == (org.mozilla.javascript.IRFactory.org.mozilla.javascript.IRFactory.int)) {\n        type = org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n    } else {\n        type = org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n    }\n    if ((childType == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) || (childType == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))) {\n        child.setType(type);\n        return child;\n    } \n    return new org.mozilla.javascript.Node(type);\n} "},"variableMap":{"childType":"org.mozilla.javascript.Token.TYPEOF","org.mozilla.javascript.Token.FALSE":"org.mozilla.javascript.Token.TYPEOFNAME","org.mozilla.javascript.Token.TRUE":"org.mozilla.javascript.Token.TRUE","org.mozilla.javascript.IRFactory.ALWAYS_TRUE_BOOLEAN":"nodeType","status":"org.mozilla.javascript.Token.BITNOT","child":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.IRFactory:1827","type":"CtSwitchImpl","sourcecode":"switch (nodeType) {\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n        {\n            org.mozilla.javascript.Node org.mozilla.javascript.Node;\n            if (childType == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n                child.setType(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int);\n                org.mozilla.javascript.Node org.mozilla.javascript.Node = child;\n                org.mozilla.javascript.Node org.mozilla.javascript.Node = org.mozilla.javascript.Node.newString(child.getString());\n                n = new org.mozilla.javascript.Node(nodeType , left , right);\n            } else if ((childType == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) || (childType == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))) {\n                org.mozilla.javascript.Node org.mozilla.javascript.Node = child.getFirstChild();\n                org.mozilla.javascript.Node org.mozilla.javascript.Node = child.getLastChild();\n                child.removeChild(left);\n                child.removeChild(right);\n                n = new org.mozilla.javascript.Node(nodeType , left , right);\n            } else if (childType == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n                org.mozilla.javascript.Node org.mozilla.javascript.Node = child.getFirstChild();\n                child.removeChild(ref);\n                n = new org.mozilla.javascript.Node(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int , ref);\n            } else {\n                n = new org.mozilla.javascript.Node(nodeType , new org.mozilla.javascript.Node(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int) , child);\n            }\n            return n;\n        }\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n        if (childType == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n            child.setType(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int);\n            return child;\n        } \n        break;\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n        if (childType == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n            int int = org.mozilla.javascript.ScriptRuntime.toInt32(child.getDouble());\n            child.setDouble((~value));\n            return child;\n        } \n        break;\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n        if (childType == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n            child.setDouble((-(child.getDouble())));\n            return child;\n        } \n        break;\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n        {\n            int int = org.mozilla.javascript.IRFactory.isAlwaysDefinedBoolean(child);\n            if (status != 0) {\n                int int;\n                if (status == (org.mozilla.javascript.IRFactory.org.mozilla.javascript.IRFactory.int)) {\n                    type = org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n                } else {\n                    type = org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n                }\n                if ((childType == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) || (childType == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))) {\n                    child.setType(type);\n                    return child;\n                } \n                return new org.mozilla.javascript.Node(type);\n            } \n            break;\n        }\n}"},"status":-1},{"failures":[],"tindex":"239f7493-8a9d-11e6-a3b8-9b68e0c0857b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.UintMap:66","type":"CtIfImpl","sourcecode":"if (0 <= index) {\n    return java.lang.Object[][index];\n} "},"status":-1},{"failures":[],"tindex":"239f7494-8a9d-11e6-a3b8-d36d32bf0739","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.optimizer.Codegen:231","type":"CtForImpl","sourcecode":"for (int int = 0, int int = scriptOrFn.getFunctionCount() ; i != N ; ++i) {\n    org.mozilla.javascript.ast.FunctionNode org.mozilla.javascript.ast.FunctionNode = scriptOrFn.getFunctionNode(i);\n    new org.mozilla.javascript.optimizer.OptFunctionNode(fn);\n    org.mozilla.javascript.optimizer.Codegen.initOptFunctions_r(fn);\n}"},"variableMap":{"scriptOrFn":"pn"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.IRFactory:1759","type":"CtInvocationImpl","sourcecode":"pn.addChildToBack(finallyTarget)"},"status":-1},{"failures":[],"tindex":"239f7495-8a9d-11e6-a3b8-8d206efb8f86","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.NativeWith:139","type":"CtThrowImpl","sourcecode":"throw org.mozilla.javascript.Context.reportRuntimeError1(\"msg.cant.call.indirect\", \"With\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.typedarrays.NativeUint8Array:97","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException()"},"status":-1},{"failures":[],"tindex":"239f7496-8a9d-11e6-a3b8-996221e0ec56","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.regexp.RegExpImpl:505","type":"CtIfImpl","sourcecode":"if (daL > cp) {\n    charBuf.append(da.substring(cp, daL));\n} "},"status":-1}],"header":{"groupId":"r","transformationCount":9,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}