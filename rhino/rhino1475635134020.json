{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"db52e075-8aa4-11e6-b17b-c9515bc6a674","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:5408","type":"CtAssignmentImpl","sourcecode":"short = ((short)(i))"},"status":-1},{"failures":[],"tindex":"db530786-8aa4-11e6-b17b-258f63d808d7","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.BaseFunction:475","type":"CtInvocationImpl","sourcecode":"obj.setPrototype(proto)"},"variableMap":{"obj":"scope","proto":"scope"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.JavaMembers:450","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.String, java.lang.Object> java.util.Map.Entry<java.lang.String, java.lang.Object> : ht.entrySet()) {\n    org.mozilla.javascript.MemberBox[] org.mozilla.javascript.MemberBox[];\n    java.lang.Object java.lang.Object = entry.getValue();\n    if (value instanceof java.lang.reflect.Method) {\n        methodBoxes = new org.mozilla.javascript.MemberBox[1];\n        methodBoxes[0] = new org.mozilla.javascript.MemberBox(((java.lang.reflect.Method)(value)));\n    } else {\n        org.mozilla.javascript.ObjArray org.mozilla.javascript.ObjArray = ((org.mozilla.javascript.ObjArray)(value));\n        int int = overloadedMethods.size();\n        if (N < 2)\n            org.mozilla.javascript.Kit.codeBug();\n        \n        methodBoxes = new org.mozilla.javascript.MemberBox[N];\n        for (int int = 0 ; i != N ; ++i) {\n            java.lang.reflect.Method java.lang.reflect.Method = ((java.lang.reflect.Method)(overloadedMethods.get(i)));\n            methodBoxes[i] = new org.mozilla.javascript.MemberBox(method);\n        }\n    }\n    org.mozilla.javascript.NativeJavaMethod org.mozilla.javascript.NativeJavaMethod = new org.mozilla.javascript.NativeJavaMethod(methodBoxes);\n    if (scope != null) {\n        org.mozilla.javascript.ScriptRuntime.setFunctionProtoAndParent(fun, scope);\n    } \n    ht.put(entry.getKey(), fun);\n}"},"status":-1},{"failures":[],"tindex":"db530787-8aa4-11e6-b17b-dd5511ea21fa","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.Kit:137","type":"CtIfImpl","sourcecode":"if ('a' <= c) {\n    c -= 'a' - 10;\n    break check;\n} "},"variableMap":{"c":"utfLen"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.classfile.ClassFileWriter:4574","type":"CtIfImpl","sourcecode":"if (utfLen > (org.mozilla.classfile.ConstantPool.org.mozilla.classfile.ConstantPool.int)) {\n    tooBigString = true;\n} else {\n    byte[][((int) + 1)] = ((byte)(utfLen >>> 8));\n    byte[][((int) + 2)] = ((byte)(utfLen));\n    int = top;\n    theIndex = (int)++;\n    org.mozilla.javascript.ObjToIntMap.put(k, theIndex);\n}"},"status":-1},{"failures":[],"tindex":"db532e98-8aa4-11e6-b17b-11010aa43965","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.v8dtoa.DiyFp:54","type":"CtAssignmentImpl","sourcecode":"org.mozilla.javascript.v8dtoa.DiyFp.this.int = e"},"variableMap":{"e":"progLength"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.regexp.NativeRegExp:1028","type":"CtOperatorAssignmentImpl","sourcecode":"state.int += 4"},"status":-1},{"failures":[],"tindex":"db532e99-8aa4-11e6-b17b-9ba9ce5a8ad2","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.Decompiler:429","type":"CtIfImpl","sourcecode":"if (toSource)\n    break;\n"},"variableMap":{"toSource":"locked"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeGenerator:194","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.mozilla.javascript.NativeGenerator.this) {\n    boolean = false;\n}"},"status":-1},{"failures":[],"tindex":"db532e9a-8aa4-11e6-b17b-a9f90d4a98ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.IRFactory:1563","type":"CtIfImpl","sourcecode":"if (destructuring != (-1)) {\n    assign = createDestructuringAssignment(declType, lvalue, id);\n    if ((!isForEach) && ((destructuring == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) || (destructuringLen != 2))) {\n        reportError(\"msg.bad.for.in.destruct\");\n    } \n} else {\n    assign = simpleAssignment(lvalue, id);\n}"},"status":-1}],"header":{"groupId":"r","transformationCount":6,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}