{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"5bd63843-89cf-11e6-a651-831cfc514e91","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.ScriptableObject:1882","type":"CtLocalVariableImpl","sourcecode":"final int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.regexp.NativeRegExp:1507","type":"CtLocalVariableImpl","sourcecode":"int int = c1 / 8"},"status":-1},{"failures":[],"tindex":"5bde4e94-89cf-11e6-a651-1bbdd5e9188b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:972","type":"CtInvocationImpl","sourcecode":"cfw.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int)"},"status":-1},{"failures":[],"tindex":"5bdeead5-89cf-11e6-a651-1b6430d4cbd8","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.NativeJavaObject:280","type":"CtReturnImpl","sourcecode":"return 9"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.DToA:960","type":"CtReturnImpl","sourcecode":"return 1"},"status":-1},{"failures":[],"tindex":"5bdf11e6-89cf-11e6-a651-cdcec3ea89a2","series":0,"name":"replace","transplant":{"position":"org.mozilla.classfile.ClassFileWriter:1307","type":"CtIfImpl","sourcecode":"if (((short)(offset)) != offset) {\n    throw new org.mozilla.classfile.ClassFileWriter.ClassFileFormatException(\"Program too complex: too big jump offset\");\n} "},"variableMap":{"offset":"z"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.DToA:191","type":"CtInvocationImpl","sourcecode":"org.mozilla.javascript.DToA.stuffBits(dbl_bits, 0, z)"},"status":-1},{"failures":[],"tindex":"5bdf11e7-89cf-11e6-a651-d7c157f095e2","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.UintMap:66","type":"CtIfImpl","sourcecode":"if (0 <= index) {\n    return java.lang.Object[][index];\n} "},"variableMap":{"values":"args","index":"org.mozilla.javascript.NativeMath.Id_imul"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeMath:108","type":"CtSwitchImpl","sourcecode":"switch (methodId) {\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        return \"Math\";\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        x = x == 0.0 ? 0.0 : x < 0.0 ? -x : x;\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        if (((x == x) && ((-1.0) <= x)) && (x <= 1.0)) {\n            x = methodId == (org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int) ? java.lang.Math.acos(x) : java.lang.Math.asin(x);\n        } else {\n            x = java.lang.Double.java.lang.Double.double;\n        }\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        x = java.lang.Math.atan(x);\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        x = java.lang.Math.atan2(x, org.mozilla.javascript.ScriptRuntime.toNumber(args, 1));\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        x = java.lang.Math.cbrt(x);\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        x = java.lang.Math.ceil(x);\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        x = (x == (java.lang.Double.java.lang.Double.double)) || (x == (java.lang.Double.java.lang.Double.double)) ? java.lang.Double.java.lang.Double.double : java.lang.Math.cos(x);\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        x = java.lang.Math.cosh(x);\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = js_hypot(args);\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        x = x == (java.lang.Double.java.lang.Double.double) ? x : x == (java.lang.Double.java.lang.Double.double) ? 0.0 : java.lang.Math.exp(x);\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        x = java.lang.Math.expm1(x);\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        x = java.lang.Math.floor(x);\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        return js_imul(args);\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        x = x < 0 ? java.lang.Double.java.lang.Double.double : java.lang.Math.log(x);\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        x = java.lang.Math.log1p(x);\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        x = java.lang.Math.log10(x);\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = methodId == (org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int) ? java.lang.Double.java.lang.Double.double : java.lang.Double.java.lang.Double.double;\n        for (int int = 0 ; i != (args.int) ; ++i) {\n            double double = org.mozilla.javascript.ScriptRuntime.toNumber(args[i]);\n            if (d != d) {\n                x = d;\n                break;\n            } \n            if (methodId == (org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int)) {\n                x = java.lang.Math.max(x, d);\n            } else {\n                x = java.lang.Math.min(x, d);\n            }\n        }\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        x = js_pow(x, org.mozilla.javascript.ScriptRuntime.toNumber(args, 1));\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = java.lang.Math.random();\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        if (((x == x) && (x != (java.lang.Double.java.lang.Double.double))) && (x != (java.lang.Double.java.lang.Double.double))) {\n            long long = java.lang.Math.round(x);\n            if (l != 0) {\n                x = l;\n            } else {\n                if (x < 0.0) {\n                    x = org.mozilla.javascript.ScriptRuntime.org.mozilla.javascript.ScriptRuntime.double;\n                } else if (x != 0.0) {\n                    x = 0.0;\n                } \n            }\n        } \n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        x = (x == (java.lang.Double.java.lang.Double.double)) || (x == (java.lang.Double.java.lang.Double.double)) ? java.lang.Double.java.lang.Double.double : java.lang.Math.sin(x);\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        x = java.lang.Math.sinh(x);\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        x = java.lang.Math.sqrt(x);\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        x = java.lang.Math.tan(x);\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        x = java.lang.Math.tanh(x);\n        break;\n    case org.mozilla.javascript.NativeMath.org.mozilla.javascript.NativeMath.int :\n        x = org.mozilla.javascript.ScriptRuntime.toNumber(args, 0);\n        x = js_trunc(x);\n        break;\n    default :\n        throw new java.lang.IllegalStateException(java.lang.String.valueOf(methodId));\n}"},"status":-1},{"failures":[],"tindex":"5bdffc48-89cf-11e6-a651-2f7071021fcb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ScriptableObject:1567","type":"CtIfImpl","sourcecode":"if ((propName == null) || ((propName.length()) == 0)) {\n    if (((methodName.length()) > 3) && (methodName.startsWith(\"get\"))) {\n        propName = methodName.substring(3);\n        if (java.lang.Character.isUpperCase(propName.charAt(0))) {\n            if ((propName.length()) == 1) {\n                propName = propName.toLowerCase();\n            } else if (!(java.lang.Character.isUpperCase(propName.charAt(1)))) {\n                propName = (java.lang.Character.toLowerCase(propName.charAt(0))) + (propName.substring(1));\n            } \n        } \n    } \n} "},"status":-1},{"failures":[],"tindex":"5bdffc49-89cf-11e6-a651-079e2645682f","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.optimizer.Codegen:3460","type":"CtInvocationImpl","sourcecode":"org.mozilla.classfile.ClassFileWriter.addAStore(thisObjLocal)"},"variableMap":{"cfw":"cfw","thisObjLocal":"contextLocal"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:3422","type":"CtInvocationImpl","sourcecode":"org.mozilla.classfile.ClassFileWriter.addALoad(short)"},"status":-1},{"failures":[],"tindex":"5be0235a-89cf-11e6-a651-c5c89ef1e21d","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.serialize.ScriptableOutputStream:178","type":"CtIfImpl","sourcecode":"if (false)\n    throw new java.io.IOException();\n"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:5409","type":"CtIfImpl","sourcecode":"if ((short) < (short))\n    short = short;\n"},"status":-1},{"failures":[],"tindex":"5be6da1b-89cf-11e6-a651-fbbc67ed20b3","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.NativeObject:123","type":"CtReturnImpl","sourcecode":"return new org.mozilla.javascript.NativeObject()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeGlobal:300","type":"CtReturnImpl","sourcecode":"return org.mozilla.javascript.ScriptRuntime.wrapNumber(d)"},"status":-1},{"failures":[],"tindex":"5beccd8c-89cf-11e6-a651-03d683256fae","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.NativeDate:150","type":"CtReturnImpl","sourcecode":"return org.mozilla.javascript.ScriptRuntime.wrapNumber(org.mozilla.javascript.NativeDate.date_parseString(dataStr))"},"variableMap":{"dataStr":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.regexp.RegExpImpl:107","type":"CtReturnImpl","sourcecode":"return data.java.lang.String"},"status":-1}],"header":{"groupId":"r","transformationCount":10,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}