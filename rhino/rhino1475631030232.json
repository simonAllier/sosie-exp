{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"4d468557-8a9b-11e6-b333-497b6d865f21","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.ast.AstNode:590","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeJavaObject:397","type":"CtReturnImpl","sourcecode":"return 6"},"status":-1},{"failures":[],"tindex":"4d46ac68-8a9b-11e6-b333-6b4050099227","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.JavaMembers:173","type":"CtIfImpl","sourcecode":"if (!(type.isArray())) {\n    return type.getName();\n} else {\n    int int = 0;\n    do {\n        ++arrayDimension;\n        type = type.getComponentType();\n    } while (type.isArray() );\n    java.lang.String java.lang.String = type.getName();\n    java.lang.String java.lang.String = \"[]\";\n    if (arrayDimension == 1) {\n        return name.concat(suffix);\n    } else {\n        int int = (name.length()) + (arrayDimension * (suffix.length()));\n        java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(length);\n        sb.append(name);\n        while (arrayDimension != 0) {\n            --arrayDimension;\n            sb.append(suffix);\n        }\n        return sb.toString();\n    }\n}"},"status":-1}],"header":{"groupId":"r","transformationCount":2,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}