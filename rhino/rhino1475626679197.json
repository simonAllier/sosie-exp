{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"2c17d8ab-8a91-11e6-a2ff-f15883526cd9","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.BaseFunction:426","type":"CtInvocationImpl","sourcecode":"sb.append(\"]\\n\")"},"variableMap":{"sb":"sb"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeGlobal:425","type":"CtInvocationImpl","sourcecode":"sb.append(((char)(hc)))"},"status":-1},{"failures":[],"tindex":"2c1c1e6c-8a91-11e6-a2ff-5d6609618136","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.ScriptableObject:2978","type":"CtAssignmentImpl","sourcecode":"prev = prev.org.mozilla.javascript.ScriptableObject.Slot"},"variableMap":{"orderedNext":"slot","prev":"firstAdded"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ScriptableObject:3114","type":"CtAssignmentImpl","sourcecode":"org.mozilla.javascript.ScriptableObject.Slot = slot"},"status":-1},{"failures":[],"tindex":"2c1c457d-8a91-11e6-a2ff-4f605683c6b4","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.Icode:143","type":"CtIfImpl","sourcecode":"if (!(org.mozilla.javascript.Icode.validBytecode(bytecode))) {\n    throw new java.lang.IllegalArgumentException(java.lang.String.valueOf(bytecode));\n} "},"variableMap":{"bytecode":"b2"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.DToA:917","type":"CtIfImpl","sourcecode":"if (i > 4) {\n    i -= 4;\n    b2 += i;\n    m2 += i;\n    s2 += i;\n} else if (i < 4) {\n    i += 28;\n    b2 += i;\n    m2 += i;\n    s2 += i;\n} "},"status":-1},{"failures":[],"tindex":"2c1c457e-8a91-11e6-a2ff-a7be6e44171c","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.Parser:2667","type":"CtReturnImpl","sourcecode":"return result"},"variableMap":{"result":"operand"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ast.UnaryExpression:94","type":"CtReturnImpl","sourcecode":"return org.mozilla.javascript.ast.AstNode"},"status":0},{"failures":[],"tindex":"2c1c457f-8a91-11e6-a2ff-cd20af20d7bf","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.NativeScript:128","type":"CtThrowImpl","sourcecode":"throw org.mozilla.javascript.Context.reportRuntimeError1(\"msg.cant.call.indirect\", \"exec\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.typedarrays.NativeDataView:90","type":"CtThrowImpl","sourcecode":"throw org.mozilla.javascript.ScriptRuntime.constructError(\"RangeError\", \"offset out of range\")"},"status":-1},{"failures":[],"tindex":"2c1c6c90-8a91-11e6-a2ff-51477bfbbe35","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeArray:1471","type":"CtAssignmentImpl","sourcecode":"result = 0"},"status":-1},{"failures":[],"tindex":"2c1c6c91-8a91-11e6-a2ff-2988c6840ead","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.NodeTransformer:512","type":"CtInvocationImpl","sourcecode":"scopeNode.addChildrenToBack(body)"},"variableMap":{"body":"rChild","scopeNode":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:4779","type":"CtIfImpl","sourcecode":"if (((child.getType()) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) || ((rChild.getType()) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))) {\n    if ((child.getType()) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n        child = rChild;\n    } \n    generateExpression(child, node);\n    if ((type == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) || (type == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))) {\n        int int = type == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int) ? org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int : org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int;\n        org.mozilla.classfile.ClassFileWriter.add(testCode, trueGOTO);\n    } else {\n        if (type != (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n            if (type != (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))\n                throw org.mozilla.javascript.optimizer.Codegen.badTree();\n            \n            int int = trueGOTO;\n            trueGOTO = falseGOTO;\n            falseGOTO = tmp;\n        } \n        org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int);\n        int int = org.mozilla.classfile.ClassFileWriter.acquireLabel();\n        org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, undefCheckLabel);\n        short short = org.mozilla.classfile.ClassFileWriter.getStackTop();\n        org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int);\n        org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, trueGOTO);\n        org.mozilla.classfile.ClassFileWriter.markLabel(undefCheckLabel, stack);\n        org.mozilla.javascript.optimizer.Codegen.pushUndefined(org.mozilla.classfile.ClassFileWriter);\n        org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, trueGOTO);\n    }\n    org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, falseGOTO);\n} else {\n    int int = nodeIsDirectCallParameter(child);\n    if ((child_dcp_register != (-1)) && ((rChild.getType()) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))) {\n        org.mozilla.javascript.Node org.mozilla.javascript.Node = rChild.getFirstChild();\n        if ((convertChild.getType()) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n            org.mozilla.classfile.ClassFileWriter.addALoad(child_dcp_register);\n            org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, \"java/lang/Void\", \"TYPE\", \"Ljava/lang/Class;\");\n            int int = org.mozilla.classfile.ClassFileWriter.acquireLabel();\n            org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, notNumbersLabel);\n            org.mozilla.classfile.ClassFileWriter.addDLoad((child_dcp_register + 1));\n            org.mozilla.classfile.ClassFileWriter.addPush(convertChild.getDouble());\n            org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int);\n            if (type == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))\n                org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, trueGOTO);\n            else\n                org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, trueGOTO);\n            \n            org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, falseGOTO);\n            org.mozilla.classfile.ClassFileWriter.markLabel(notNumbersLabel);\n        } \n    } \n    generateExpression(child, node);\n    generateExpression(rChild, node);\n    java.lang.String java.lang.String;\n    int int;\n    switch (type) {\n        case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n            name = \"eq\";\n            testCode = org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int;\n            break;\n        case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n            name = \"eq\";\n            testCode = org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int;\n            break;\n        case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n            name = \"shallowEq\";\n            testCode = org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int;\n            break;\n        case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n            name = \"shallowEq\";\n            testCode = org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int;\n            break;\n        default :\n            throw org.mozilla.javascript.optimizer.Codegen.badTree();\n    }\n    addScriptRuntimeInvoke(name, (\"(Ljava/lang/Object;\" + (\"Ljava/lang/Object;\" + \")Z\")));\n    org.mozilla.classfile.ClassFileWriter.add(testCode, trueGOTO);\n    org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, falseGOTO);\n}"},"status":-1},{"failures":[],"tindex":"2c1c93a2-8a91-11e6-a2ff-a7b0302febc5","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.IRFactory:2161","type":"CtAssignmentImpl","sourcecode":"left = ref"},"variableMap":{"ref":"cursor","left":"cursor"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NodeTransformer:285","type":"CtAssignmentImpl","sourcecode":"cursor = cursor.getNext()"},"status":-1},{"failures":[],"tindex":"2c1cbab3-8a91-11e6-a2ff-c39f4fc8326f","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.DefaultErrorReporter:49","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"SyntaxError\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeJSON:349","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = state.java.lang.String"},"status":-1},{"failures":[],"tindex":"2c1cbab4-8a91-11e6-a2ff-0d4ee051178b","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.DToA:710","type":"CtInvocationImpl","sourcecode":"buf.setLength(((buf.length()) - 1))"},"variableMap":{"buf":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeDate:1164","type":"CtIfImpl","sourcecode":"if (methodId != (org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int))\n    result.append(' ');\n"},"status":-1}],"header":{"groupId":"r","transformationCount":10,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}