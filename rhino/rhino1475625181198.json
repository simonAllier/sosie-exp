{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"aefcbf01-8a8d-11e6-a959-337b1a0efadc","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.BoundFunction:42","type":"CtInvocationImpl","sourcecode":"throwing.put(\"configurable\", throwing, false)"},"variableMap":{"throwing":"desc"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ScriptableObject:1948","type":"CtIfImpl","sourcecode":"if (org.mozilla.javascript.ScriptableObject.isTrue(org.mozilla.javascript.ScriptableObject.getProperty(desc, \"configurable\")))\n    throw org.mozilla.javascript.ScriptRuntime.typeError1(\"msg.change.configurable.false.to.true\", id);\n"},"status":-1},{"failures":[],"tindex":"aefce612-8a8d-11e6-a959-637d59a70f8a","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.ScriptableObject:2864","type":"CtAssignmentImpl","sourcecode":"prev = slot"},"variableMap":{"prev":"newSlot","slot":"newSlot"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ScriptableObject:2899","type":"CtAssignmentImpl","sourcecode":"org.mozilla.javascript.ScriptableObject.Slot = newSlot"},"status":-1},{"failures":[],"tindex":"aefce613-8a8d-11e6-a959-718091cf559e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.IRFactory:1796","type":"CtAssignmentImpl","sourcecode":"IFNE.org.mozilla.javascript.Node = ifNotTarget"},"status":-1},{"failures":[],"tindex":"aefd0d24-8a8d-11e6-a959-217e8eb443fd","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.Context:600","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException();\n"},"variableMap":{"sealed":"includePrivate"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.JavaMembers:535","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : ht.keySet()) {\n    boolean boolean = name.startsWith(\"get\");\n    boolean boolean = name.startsWith(\"set\");\n    boolean boolean = name.startsWith(\"is\");\n    if ((memberIsGetMethod || memberIsIsMethod) || memberIsSetMethod) {\n        java.lang.String java.lang.String = name.substring((memberIsIsMethod ? 2 : 3));\n        if ((nameComponent.length()) == 0)\n            continue;\n        \n        java.lang.String java.lang.String = nameComponent;\n        char char = nameComponent.charAt(0);\n        if (java.lang.Character.isUpperCase(ch0)) {\n            if ((nameComponent.length()) == 1) {\n                beanPropertyName = nameComponent.toLowerCase();\n            } else {\n                char char = nameComponent.charAt(1);\n                if (!(java.lang.Character.isUpperCase(ch1))) {\n                    beanPropertyName = (java.lang.Character.toLowerCase(ch0)) + (nameComponent.substring(1));\n                } \n            }\n        } \n        if (toAdd.containsKey(beanPropertyName))\n            continue;\n        \n        java.lang.Object java.lang.Object = ht.get(beanPropertyName);\n        if (v != null) {\n            if (((!includePrivate) || (!(v instanceof java.lang.reflect.Member))) || (!(java.lang.reflect.Modifier.isPrivate(((java.lang.reflect.Member)(v)).getModifiers())))) {\n                continue;\n            } \n        } \n        org.mozilla.javascript.MemberBox org.mozilla.javascript.MemberBox = null;\n        getter = findGetter(isStatic, ht, \"get\", nameComponent);\n        if (getter == null) {\n            getter = findGetter(isStatic, ht, \"is\", nameComponent);\n        } \n        org.mozilla.javascript.MemberBox org.mozilla.javascript.MemberBox = null;\n        org.mozilla.javascript.NativeJavaMethod org.mozilla.javascript.NativeJavaMethod = null;\n        java.lang.String java.lang.String = \"set\".concat(nameComponent);\n        if (ht.containsKey(setterName)) {\n            java.lang.Object java.lang.Object = ht.get(setterName);\n            if (member instanceof org.mozilla.javascript.NativeJavaMethod) {\n                org.mozilla.javascript.NativeJavaMethod org.mozilla.javascript.NativeJavaMethod = ((org.mozilla.javascript.NativeJavaMethod)(member));\n                if (getter != null) {\n                    java.lang.Class<?> java.lang.Class<?> = getter.method().getReturnType();\n                    setter = org.mozilla.javascript.JavaMembers.extractSetMethod(type, njmSet.org.mozilla.javascript.MemberBox[], isStatic);\n                } else {\n                    setter = org.mozilla.javascript.JavaMembers.extractSetMethod(njmSet.org.mozilla.javascript.MemberBox[], isStatic);\n                }\n                if ((njmSet.org.mozilla.javascript.MemberBox[].int) > 1) {\n                    setters = njmSet;\n                } \n            } \n        } \n        org.mozilla.javascript.BeanProperty org.mozilla.javascript.BeanProperty = new org.mozilla.javascript.BeanProperty(getter , setter , setters);\n        toAdd.put(beanPropertyName, bp);\n    } \n}"},"status":-1},{"failures":[],"tindex":"aefd3435-8a8d-11e6-a959-c9bd98f11099","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.Interpreter:2528","type":"CtReturnImpl","sourcecode":"return ldbl == rdbl"},"variableMap":{"ldbl":"d2","rdbl":"d1"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ScriptRuntime:3208","type":"CtReturnImpl","sourcecode":"return d1 < d2"},"status":-1},{"failures":[],"tindex":"aefd3436-8a8d-11e6-a959-570a3e95a7a4","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.ast.KeywordLiteral:49","type":"CtIfImpl","sourcecode":"if (!(((((nodeType == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) || (nodeType == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))) || (nodeType == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))) || (nodeType == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))) || (nodeType == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))))\n    throw new java.lang.IllegalArgumentException((\"Invalid node type: \" + nodeType));\n"},"variableMap":{"org.mozilla.javascript.Token.FALSE":"org.mozilla.classfile.ByteCode.INVOKESTATIC","org.mozilla.javascript.Token.NULL":"org.mozilla.classfile.ByteCode.INVOKESPECIAL","org.mozilla.javascript.Token.DEBUGGER":"parameterCount","nodeType":"org.mozilla.classfile.ByteCode.INVOKEINTERFACE","org.mozilla.javascript.Token.THIS":"org.mozilla.classfile.ByteCode.INVOKEVIRTUAL","org.mozilla.javascript.Token.TRUE":"org.mozilla.classfile.ByteCode.INVOKEINTERFACE"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.classfile.ClassFileWriter:830","type":"CtSwitchImpl","sourcecode":"switch (theOpCode) {\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        {\n            addToCodeBuffer(theOpCode);\n            if (theOpCode == (org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int)) {\n                short short = org.mozilla.classfile.ConstantPool.addInterfaceMethodRef(className, methodName, methodType);\n                addToCodeInt16(ifMethodRefIndex);\n                addToCodeBuffer((parameterCount + 1));\n                addToCodeBuffer(0);\n            } else {\n                short short = org.mozilla.classfile.ConstantPool.addMethodRef(className, methodName, methodType);\n                addToCodeInt16(methodRefIndex);\n            }\n        }\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException(\"bad opcode for method reference\");\n}"},"status":-1},{"failures":[],"tindex":"aefe6cb7-8a8d-11e6-a959-9feac6735d88","series":0,"name":"replace","transplant":{"position":"org.mozilla.classfile.ClassFileWriter:4521","type":"CtLocalVariableImpl","sourcecode":"int int = org.mozilla.classfile.ConstantPool.org.mozilla.classfile.ConstantPool.int"},"variableMap":{"org.mozilla.classfile.ConstantPool.MAX_UTF_ENCODING_SIZE":"power"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.UintMap:229","type":"CtLocalVariableImpl","sourcecode":"int int = fraction >>> (32 - (int))"},"status":-1},{"failures":[],"tindex":"aefe6cb8-8a8d-11e6-a959-93075ddeb977","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.regexp.RegExpImpl:707","type":"CtIfImpl","sourcecode":"if (i == length) {\n    matchlen[0] = 1;\n    return i;\n} "},"variableMap":{"matchlen":"keys","length":"index","i":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.UintMap:98","type":"CtIfImpl","sourcecode":"if (0 <= index) {\n    if ((int) != 0) {\n        return int[][((int) + index)];\n    } \n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"aefe6cb9-8a8d-11e6-a959-77360770038e","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.Interpreter:241","type":"CtIfImpl","sourcecode":"if (exceptionTable == null) {\n    return -1;\n} "},"variableMap":{"exceptionTable":"val"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ScriptRuntime:1176","type":"CtIfImpl","sourcecode":"if (val instanceof java.lang.Integer)\n    return ((java.lang.Integer)(val)).intValue();\n"},"status":-1},{"failures":[],"tindex":"aefe6cba-8a8d-11e6-a959-fde46b955be7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.DefaultErrorReporter:26","type":"CtAssignmentImpl","sourcecode":"r.boolean = true"},"status":-1}],"header":{"groupId":"r","transformationCount":10,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}