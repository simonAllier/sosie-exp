{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"7f21961a-89a7-11e6-a60f-eb0cb8476ea4","series":0,"name":"replace","transplant":{"position":"org.mozilla.classfile.ClassFileWriter:2784","type":"CtLocalVariableImpl","sourcecode":"short short = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:4800","type":"CtLocalVariableImpl","sourcecode":"short short = org.mozilla.classfile.ClassFileWriter.getStackTop()"},"status":-1},{"failures":[],"tindex":"7f21bd2b-89a7-11e6-a60f-47818c031c57","series":0,"name":"replace","transplant":{"position":"org.mozilla.classfile.ClassFileWriter:2638","type":"CtSwitchImpl","sourcecode":"switch (descriptor.charAt(0)) {\n    case 'B' :\n    case 'C' :\n    case 'D' :\n    case 'F' :\n    case 'I' :\n    case 'J' :\n    case 'S' :\n    case 'Z' :\n    case 'V' :\n    case '[' :\n        return descriptor;\n    case 'L' :\n        return org.mozilla.classfile.ClassFileWriter.classDescriptorToInternalName(descriptor);\n    default :\n        throw new java.lang.IllegalArgumentException((\"bad descriptor:\" + descriptor));\n}"},"variableMap":{"descriptor":"prefix"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ScriptableObject:1561","type":"CtIfImpl","sourcecode":"if (prefix != null) {\n    return methodName.substring(prefix.length());\n} "},"status":-1},{"failures":[],"tindex":"7f21bd2c-89a7-11e6-a60f-df51fa0d624c","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.Interpreter:256","type":"CtIfImpl","sourcecode":"if (!((start <= pc) && (pc < end))) {\n    continue;\n} "},"variableMap":{"pc":"incrDecrMask","start":"incrDecrMask","end":"org.mozilla.javascript.Node.POST_FLAG"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.IRFactory:1934","type":"CtIfImpl","sourcecode":"if (post) {\n    incrDecrMask |= org.mozilla.javascript.Node.org.mozilla.javascript.Node.int;\n} "},"status":-1},{"failures":[],"tindex":"7f21e43d-89a7-11e6-a60f-498ef7da8b49","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.regexp.NativeRegExp:792","type":"CtAssignmentImpl","sourcecode":"value = v"},"variableMap":{"v":"maximumInitialCapacity","value":"maximumInitialCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeArray:56","type":"CtAssignmentImpl","sourcecode":"org.mozilla.javascript.NativeArray.org.mozilla.javascript.NativeArray.int = maximumInitialCapacity"},"status":-1},{"failures":[],"tindex":"7f21e43e-89a7-11e6-a60f-a731daffc38d","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.commonjs.module.provider.ParsedContentType:31","type":"CtIfImpl","sourcecode":"if (mimeType != null) {\n    java.util.StringTokenizer java.util.StringTokenizer = new java.util.StringTokenizer(mimeType , \";\");\n    if (tok.hasMoreTokens()) {\n        contentType = tok.nextToken().trim();\n        while (tok.hasMoreTokens()) {\n            java.lang.String java.lang.String = tok.nextToken().trim();\n            if (param.startsWith(\"charset=\")) {\n                encoding = param.substring(8).trim();\n                int int = encoding.length();\n                if (l > 0) {\n                    if ((encoding.charAt(0)) == '\"') {\n                        encoding = encoding.substring(1);\n                    } \n                    if ((encoding.charAt((l - 1))) == '\"') {\n                        encoding = encoding.substring(0, (l - 1));\n                    } \n                } \n                break;\n            } \n        }\n    } \n} "},"variableMap":{"mimeType":"name","encoding":"name","contentType":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.DefiningClassLoader:41","type":"CtIfImpl","sourcecode":"if ((java.lang.ClassLoader) != null) {\n    cl = java.lang.ClassLoader.loadClass(name);\n} else {\n    cl = findSystemClass(name);\n}"},"status":-1},{"failures":[],"tindex":"7f21e43f-89a7-11e6-a60f-7b8c9e9ffe1d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:4779","type":"CtIfImpl","sourcecode":"if (((child.getType()) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) || ((rChild.getType()) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))) {\n    if ((child.getType()) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n        child = rChild;\n    } \n    generateExpression(child, node);\n    if ((type == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) || (type == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))) {\n        int int = type == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int) ? org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int : org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int;\n        org.mozilla.classfile.ClassFileWriter.add(testCode, trueGOTO);\n    } else {\n        if (type != (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n            if (type != (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))\n                throw org.mozilla.javascript.optimizer.Codegen.badTree();\n            \n            int int = trueGOTO;\n            trueGOTO = falseGOTO;\n            falseGOTO = tmp;\n        } \n        org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int);\n        int int = org.mozilla.classfile.ClassFileWriter.acquireLabel();\n        org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, undefCheckLabel);\n        short short = org.mozilla.classfile.ClassFileWriter.getStackTop();\n        org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int);\n        org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, trueGOTO);\n        org.mozilla.classfile.ClassFileWriter.markLabel(undefCheckLabel, stack);\n        org.mozilla.javascript.optimizer.Codegen.pushUndefined(org.mozilla.classfile.ClassFileWriter);\n        org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, trueGOTO);\n    }\n    org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, falseGOTO);\n} else {\n    int int = nodeIsDirectCallParameter(child);\n    if ((child_dcp_register != (-1)) && ((rChild.getType()) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))) {\n        org.mozilla.javascript.Node org.mozilla.javascript.Node = rChild.getFirstChild();\n        if ((convertChild.getType()) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n            org.mozilla.classfile.ClassFileWriter.addALoad(child_dcp_register);\n            org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, \"java/lang/Void\", \"TYPE\", \"Ljava/lang/Class;\");\n            int int = org.mozilla.classfile.ClassFileWriter.acquireLabel();\n            org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, notNumbersLabel);\n            org.mozilla.classfile.ClassFileWriter.addDLoad((child_dcp_register + 1));\n            org.mozilla.classfile.ClassFileWriter.addPush(convertChild.getDouble());\n            org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int);\n            if (type == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))\n                org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, trueGOTO);\n            else\n                org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, trueGOTO);\n            \n            org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, falseGOTO);\n            org.mozilla.classfile.ClassFileWriter.markLabel(notNumbersLabel);\n        } \n    } \n    generateExpression(child, node);\n    generateExpression(rChild, node);\n    java.lang.String java.lang.String;\n    int int;\n    switch (type) {\n        case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n            name = \"eq\";\n            testCode = org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int;\n            break;\n        case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n            name = \"eq\";\n            testCode = org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int;\n            break;\n        case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n            name = \"shallowEq\";\n            testCode = org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int;\n            break;\n        case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n            name = \"shallowEq\";\n            testCode = org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int;\n            break;\n        default :\n            throw org.mozilla.javascript.optimizer.Codegen.badTree();\n    }\n    addScriptRuntimeInvoke(name, (\"(Ljava/lang/Object;\" + (\"Ljava/lang/Object;\" + \")Z\")));\n    org.mozilla.classfile.ClassFileWriter.add(testCode, trueGOTO);\n    org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, falseGOTO);\n}"},"status":-1},{"failures":[],"tindex":"7f220b50-89a7-11e6-a60f-9ba49739c949","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.ast.AstNode:332","type":"CtIfImpl","sourcecode":"if (result == null)\n    throw new java.lang.IllegalArgumentException((\"Invalid operator: \" + op));\n"},"variableMap":{"result":"namespace","op":"org.mozilla.javascript.Token.REF_NS_MEMBER"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.IRFactory:1997","type":"CtIfImpl","sourcecode":"if (target == null) {\n    if (namespace == null) {\n        ref = new org.mozilla.javascript.Node(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int , elem);\n    } else {\n        ref = new org.mozilla.javascript.Node(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int , nsNode , elem);\n    }\n} else {\n    if (namespace == null) {\n        ref = new org.mozilla.javascript.Node(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int , target , elem);\n    } else {\n        ref = new org.mozilla.javascript.Node(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int , target , nsNode , elem);\n    }\n}"},"status":-1},{"failures":[],"tindex":"7f223261-89a7-11e6-a60f-c30f9516e32f","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.NativeDate:1340","type":"CtIfImpl","sourcecode":"if (i >= 10) {\n    if (i < ((1000 * 1000) * 1000)) {\n        for ( ;  ; ) {\n            int int = scale * 10;\n            if (i < newScale) {\n                break;\n            } \n            --minWidth;\n            scale = newScale;\n        }\n    } else {\n        minWidth -= 9;\n        scale = (1000 * 1000) * 1000;\n    }\n} "},"variableMap":{"i":"i","scale":"i","minWidth":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:363","type":"CtInvocationImpl","sourcecode":"cfw.addALoad((4 + (i * 3)))"},"status":-1},{"failures":[],"tindex":"7f223262-89a7-11e6-a60f-534d88b2effd","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.UintMap:277","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][index] = oldValues[i]"},"variableMap":{"values":"result","index":"index","i":"index","oldValues":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ScriptRuntime:1470","type":"CtAssignmentImpl","sourcecode":"result = org.mozilla.javascript.ScriptableObject.getProperty(obj, index)"},"status":-1},{"failures":[],"tindex":"7f223263-89a7-11e6-a60f-df445b552daa","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.v8dtoa.FastDtoa:374","type":"CtOperatorAssignmentImpl","sourcecode":"integrals %= divider"},"variableMap":{"divider":"c","integrals":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.regexp.NativeRegExp:454","type":"CtOperatorAssignmentImpl","sourcecode":"c |= 32"},"status":-1}],"header":{"groupId":"r","transformationCount":10,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}