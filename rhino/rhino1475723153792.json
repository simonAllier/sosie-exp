{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"cb33496a-8b71-11e6-92ed-7dcdfe609403","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.Interpreter:3114","type":"CtAssignmentImpl","sourcecode":"rhs = tmp"},"variableMap":{"tmp":"val","rhs":"val"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.regexp.RegExpImpl:85","type":"CtAssignmentImpl","sourcecode":"val = org.mozilla.javascript.regexp.RegExpImpl.matchOrReplace(cx, scope, thisObj, args, org.mozilla.javascript.regexp.RegExpImpl.this, data, re)"},"status":-1},{"failures":[],"tindex":"cb33707b-8b71-11e6-92ed-0b749487ea6b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ast.AstNode:110","type":"CtInvocationImpl","sourcecode":"org.mozilla.javascript.ast.AstNode.org.mozilla.javascript.ast.AstNode.java.util.Map<java.lang.Integer, java.lang.String>.put(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int, \"<<=\")"},"status":-1},{"failures":[],"tindex":"cb33707c-8b71-11e6-92ed-d90c328e75f5","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.TokenStream:859","type":"CtIfImpl","sourcecode":"if (c <= 127) {\n    return (((c == 32) || (c == 9)) || (c == 12)) || (c == 11);\n} else {\n    return ((c == 160) || (c == (org.mozilla.javascript.TokenStream.org.mozilla.javascript.TokenStream.char))) || ((java.lang.Character.getType(((char)(c)))) == (java.lang.Character.java.lang.Character.byte));\n}"},"variableMap":{"java.lang.Character.SPACE_SEPARATOR":"org.mozilla.javascript.regexp.NativeRegExp.REOP_ALNUM","c":"cp","org.mozilla.javascript.TokenStream.BYTE_ORDER_MARK":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.regexp.NativeRegExp:830","type":"CtSwitchImpl","sourcecode":"switch (c) {\n    case 'b' :\n        state.org.mozilla.javascript.regexp.RENode = new org.mozilla.javascript.regexp.RENode(org.mozilla.javascript.regexp.NativeRegExp.org.mozilla.javascript.regexp.NativeRegExp.byte);\n        (state.int)++;\n        return true;\n    case 'B' :\n        state.org.mozilla.javascript.regexp.RENode = new org.mozilla.javascript.regexp.RENode(org.mozilla.javascript.regexp.NativeRegExp.org.mozilla.javascript.regexp.NativeRegExp.byte);\n        (state.int)++;\n        return true;\n    case '0' :\n        org.mozilla.javascript.regexp.NativeRegExp.reportWarning(state.org.mozilla.javascript.Context, \"msg.bad.backref\", \"\");\n        num = 0;\n        while ((num < 32) && ((state.int) < (state.int))) {\n            c = src[state.int];\n            if ((c >= '0') && (c <= '7')) {\n                (state.int)++;\n                num = (8 * num) + (c - '0');\n            } else\n                break;\n            \n        }\n        c = ((char)(num));\n        org.mozilla.javascript.regexp.NativeRegExp.doFlat(state, c);\n        break;\n    case '1' :\n    case '2' :\n    case '3' :\n    case '4' :\n    case '5' :\n    case '6' :\n    case '7' :\n    case '8' :\n    case '9' :\n        termStart = (state.int) - 1;\n        num = org.mozilla.javascript.regexp.NativeRegExp.getDecimalValue(c, state, 65535, \"msg.overlarge.backref\");\n        if (num > (state.int))\n            org.mozilla.javascript.regexp.NativeRegExp.reportWarning(state.org.mozilla.javascript.Context, \"msg.bad.backref\", \"\");\n        \n        if (num > (state.int)) {\n            state.int = termStart;\n            if (c >= '8') {\n                c = '\\\\';\n                org.mozilla.javascript.regexp.NativeRegExp.doFlat(state, c);\n                break;\n            } \n            (state.int)++;\n            num = c - '0';\n            while ((num < 32) && ((state.int) < (state.int))) {\n                c = src[state.int];\n                if ((c >= '0') && (c <= '7')) {\n                    (state.int)++;\n                    num = (8 * num) + (c - '0');\n                } else\n                    break;\n                \n            }\n            c = ((char)(num));\n            org.mozilla.javascript.regexp.NativeRegExp.doFlat(state, c);\n            break;\n        } \n        state.org.mozilla.javascript.regexp.RENode = new org.mozilla.javascript.regexp.RENode(org.mozilla.javascript.regexp.NativeRegExp.org.mozilla.javascript.regexp.NativeRegExp.byte);\n        state.org.mozilla.javascript.regexp.RENode.int = num - 1;\n        state.int += 3;\n        if ((state.int) < num) {\n            state.int = num;\n        } \n        break;\n    case 'f' :\n        c = 12;\n        org.mozilla.javascript.regexp.NativeRegExp.doFlat(state, c);\n        break;\n    case 'n' :\n        c = 10;\n        org.mozilla.javascript.regexp.NativeRegExp.doFlat(state, c);\n        break;\n    case 'r' :\n        c = 13;\n        org.mozilla.javascript.regexp.NativeRegExp.doFlat(state, c);\n        break;\n    case 't' :\n        c = 9;\n        org.mozilla.javascript.regexp.NativeRegExp.doFlat(state, c);\n        break;\n    case 'v' :\n        c = 11;\n        org.mozilla.javascript.regexp.NativeRegExp.doFlat(state, c);\n        break;\n    case 'c' :\n        if (((state.int) < (state.int)) && (org.mozilla.javascript.regexp.NativeRegExp.isControlLetter(src[state.int])))\n            c = ((char)((src[((state.int)++)]) & 31));\n        else {\n            --(state.int);\n            c = '\\\\';\n        }\n        org.mozilla.javascript.regexp.NativeRegExp.doFlat(state, c);\n        break;\n    case 'u' :\n        nDigits += 2;\n    case 'x' :\n        {\n            int int = 0;\n            int int;\n            for (i = 0 ; (i < nDigits) && ((state.int) < (state.int)) ; i++) {\n                c = src[((state.int)++)];\n                n = org.mozilla.javascript.Kit.xDigitToInt(c, n);\n                if (n < 0) {\n                    state.int -= i + 2;\n                    n = src[((state.int)++)];\n                    break;\n                } \n            }\n            c = ((char)(n));\n        }\n        org.mozilla.javascript.regexp.NativeRegExp.doFlat(state, c);\n        break;\n    case 'd' :\n        state.org.mozilla.javascript.regexp.RENode = new org.mozilla.javascript.regexp.RENode(org.mozilla.javascript.regexp.NativeRegExp.org.mozilla.javascript.regexp.NativeRegExp.byte);\n        (state.int)++;\n        break;\n    case 'D' :\n        state.org.mozilla.javascript.regexp.RENode = new org.mozilla.javascript.regexp.RENode(org.mozilla.javascript.regexp.NativeRegExp.org.mozilla.javascript.regexp.NativeRegExp.byte);\n        (state.int)++;\n        break;\n    case 's' :\n        state.org.mozilla.javascript.regexp.RENode = new org.mozilla.javascript.regexp.RENode(org.mozilla.javascript.regexp.NativeRegExp.org.mozilla.javascript.regexp.NativeRegExp.byte);\n        (state.int)++;\n        break;\n    case 'S' :\n        state.org.mozilla.javascript.regexp.RENode = new org.mozilla.javascript.regexp.RENode(org.mozilla.javascript.regexp.NativeRegExp.org.mozilla.javascript.regexp.NativeRegExp.byte);\n        (state.int)++;\n        break;\n    case 'w' :\n        state.org.mozilla.javascript.regexp.RENode = new org.mozilla.javascript.regexp.RENode(org.mozilla.javascript.regexp.NativeRegExp.org.mozilla.javascript.regexp.NativeRegExp.byte);\n        (state.int)++;\n        break;\n    case 'W' :\n        state.org.mozilla.javascript.regexp.RENode = new org.mozilla.javascript.regexp.RENode(org.mozilla.javascript.regexp.NativeRegExp.org.mozilla.javascript.regexp.NativeRegExp.byte);\n        (state.int)++;\n        break;\n    default :\n        state.org.mozilla.javascript.regexp.RENode = new org.mozilla.javascript.regexp.RENode(org.mozilla.javascript.regexp.NativeRegExp.org.mozilla.javascript.regexp.NativeRegExp.byte);\n        state.org.mozilla.javascript.regexp.RENode.char = c;\n        state.org.mozilla.javascript.regexp.RENode.int = 1;\n        state.org.mozilla.javascript.regexp.RENode.int = (state.int) - 1;\n        state.int += 3;\n        break;\n}"},"status":-1},{"failures":[],"tindex":"cb33978d-8b71-11e6-92ed-45725a9b3027","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.DToA:286","type":"CtLocalVariableImpl","sourcecode":"int int = -((word0 >>> (org.mozilla.javascript.DToA.org.mozilla.javascript.DToA.int)) & ((org.mozilla.javascript.DToA.org.mozilla.javascript.DToA.int) >> (org.mozilla.javascript.DToA.org.mozilla.javascript.DToA.int)))"},"variableMap":{"org.mozilla.javascript.DToA.Exp_mask":"org.mozilla.javascript.Token.RESERVED","word0":"org.mozilla.javascript.Token.RESERVED","org.mozilla.javascript.DToA.Exp_shift1":"org.mozilla.javascript.Token.RESERVED"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.TokenStream:126","type":"CtLocalVariableImpl","sourcecode":"final int int = org.mozilla.javascript.Token.org.mozilla.javascript.Token.int"},"status":-1},{"failures":[],"tindex":"cb345ade-8b71-11e6-92ed-6736c77857a1","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.DToA:577","type":"CtAssignmentImpl","sourcecode":"s5 = k"},"variableMap":{"s5":"k","k":"k"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.DToA:192","type":"CtOperatorAssignmentImpl","sourcecode":"k += 32"},"status":-1},{"failures":[],"tindex":"cb345adf-8b71-11e6-92ed-37250d2fac6a","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.CodeGenerator:1257","type":"CtIfImpl","sourcecode":"if ((value & (~255)) != 0)\n    throw org.mozilla.javascript.Kit.codeBug();\n"},"variableMap":{"value":"org.mozilla.javascript.typedarrays.NativeDataView.Id_setFloat32"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.typedarrays.NativeDataView:344","type":"CtIfImpl","sourcecode":"if (c == '2') {\n    X = \"setFloat32\";\n    id = org.mozilla.javascript.typedarrays.NativeDataView.org.mozilla.javascript.typedarrays.NativeDataView.int;\n} else if (c == '4') {\n    X = \"setFloat64\";\n    id = org.mozilla.javascript.typedarrays.NativeDataView.org.mozilla.javascript.typedarrays.NativeDataView.int;\n} "},"status":-1},{"failures":[],"tindex":"cb3481f0-8b71-11e6-92ed-c7f27234c8bd","series":0,"name":"replace","transplant":{"position":"org.mozilla.classfile.ClassFileWriter:2860","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ScriptRuntime:736","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-1},{"failures":[],"tindex":"cb3481f1-8b71-11e6-92ed-9ba2c198c61e","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.Decompiler:852","type":"CtLocalVariableImpl","sourcecode":"double double = 0.0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeDate:910","type":"CtLocalVariableImpl","sourcecode":"double double = org.mozilla.javascript.NativeDate.date_msecFromDate((year * yearmod), (month - 1), day, hour, min, sec, msec)"},"status":-1},{"failures":[],"tindex":"cb3481f2-8b71-11e6-92ed-a70627cf3c36","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.v8dtoa.DiyFp:139","type":"CtReturnImpl","sourcecode":"return long"},"variableMap":{"f":"org.mozilla.javascript.typedarrays.Conversions.THIRTYTWO_BIT"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.typedarrays.Conversions:105","type":"CtReturnImpl","sourcecode":"return lv % (org.mozilla.javascript.typedarrays.Conversions.org.mozilla.javascript.typedarrays.Conversions.long)"},"status":-1},{"failures":[],"tindex":"cb34d013-8b71-11e6-92ed-5d3e4e982a22","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.NativeDate:268","type":"CtAssignmentImpl","sourcecode":"t = org.mozilla.javascript.NativeDate.DateFromTime(t)"},"variableMap":{"t":"date"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeDate:1217","type":"CtAssignmentImpl","sourcecode":"obj.double = org.mozilla.javascript.NativeDate.now()"},"status":-1}],"header":{"groupId":"r","transformationCount":10,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}