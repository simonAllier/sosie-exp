{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"cddba671-8b69-11e6-ba6d-fbaaf2738f9c","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.NativeDate:609","type":"CtIfImpl","sourcecode":"if (org.mozilla.javascript.NativeDate.IsLeapYear(year)) {\n    switch (day) {\n        case 0 :\n            return 1984;\n        case 1 :\n            return 1996;\n        case 2 :\n            return 1980;\n        case 3 :\n            return 1992;\n        case 4 :\n            return 1976;\n        case 5 :\n            return 1988;\n        case 6 :\n            return 1972;\n    }\n} else {\n    switch (day) {\n        case 0 :\n            return 1978;\n        case 1 :\n            return 1973;\n        case 2 :\n            return 1985;\n        case 3 :\n            return 1986;\n        case 4 :\n            return 1981;\n        case 5 :\n            return 1971;\n        case 6 :\n            return 1977;\n    }\n}"},"variableMap":{"year":"org.mozilla.javascript.TokenStream.EOF_CHAR","day":"sourceEnd"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.TokenStream:1339","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    int int;\n    if ((java.lang.String) != null) {\n        if ((int) == (int)) {\n            boolean = true;\n            return org.mozilla.javascript.TokenStream.org.mozilla.javascript.TokenStream.int;\n        } \n        (int)++;\n        c = java.lang.String.charAt(((int)++));\n    } else {\n        if ((int) == (int)) {\n            if (!(fillSourceBuffer())) {\n                boolean = true;\n                return org.mozilla.javascript.TokenStream.org.mozilla.javascript.TokenStream.int;\n            } \n        } \n        (int)++;\n        c = char[][((int)++)];\n    }\n    if (c <= 127) {\n        if ((c == '\\n') || (c == '\\r')) {\n            int = c;\n            c = '\\n';\n        } \n    } else {\n        if (c == (org.mozilla.javascript.TokenStream.org.mozilla.javascript.TokenStream.char))\n            return c;\n        \n        if (org.mozilla.javascript.TokenStream.isJSFormatChar(c)) {\n            continue;\n        } \n        if (org.mozilla.javascript.ScriptRuntime.isJSLineTerminator(c)) {\n            int = c;\n            c = '\\n';\n        } \n    }\n    return c;\n}"},"status":-1},{"failures":[],"tindex":"cddba672-8b69-11e6-ba6d-f33286fbc36c","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.NativeJavaMethod:419","type":"CtAssignmentImpl","sourcecode":"extraBestFitsCount = 0"},"variableMap":{"extraBestFitsCount":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.regexp.NativeRegExp:506","type":"CtAssignmentImpl","sourcecode":"result.int = result.org.mozilla.javascript.regexp.RENode.int"},"status":-1},{"failures":[],"tindex":"cddbcd83-8b69-11e6-ba6d-293872bdb8f7","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.ScriptableObject:3137","type":"CtIfImpl","sourcecode":"if ((tableSize & (tableSize - 1)) != 0) {\n    if (tableSize > (1 << 30))\n        throw new java.lang.RuntimeException(\"Property table overflow\");\n    \n    int int = org.mozilla.javascript.ScriptableObject.org.mozilla.javascript.ScriptableObject.int;\n    while (newSize < tableSize)\n        newSize <<= 1;\n    tableSize = newSize;\n} "},"variableMap":{"tableSize":"attributes","org.mozilla.javascript.ScriptableObject.INITIAL_SLOT_SIZE":"attributes"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ScriptableObject:853","type":"CtInvocationImpl","sourcecode":"gslot.setAttributes(attributes)"},"status":-1}],"header":{"groupId":"r","transformationCount":3,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}