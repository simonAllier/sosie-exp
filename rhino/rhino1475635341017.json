{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"56b443ea-8aa5-11e6-9488-110d31436349","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.optimizer.Codegen:3136","type":"CtInvocationImpl","sourcecode":"org.mozilla.classfile.ClassFileWriter.addPush(i)"},"variableMap":{"cfw":"cfw","i":"generatorSwitch"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:1723","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.util.Map<org.mozilla.javascript.Node, int[]> java.util.Map<org.mozilla.javascript.Node, int[]> = ((org.mozilla.javascript.ast.FunctionNode)(org.mozilla.javascript.ast.ScriptNode)).getLiveLocals();\n    if (liveLocals != null) {\n        java.util.List<org.mozilla.javascript.Node> java.util.List<org.mozilla.javascript.Node> = ((org.mozilla.javascript.ast.FunctionNode)(org.mozilla.javascript.ast.ScriptNode)).getResumptionPoints();\n        for (int int = 0 ; i < (nodes.size()) ; i++) {\n            org.mozilla.javascript.Node org.mozilla.javascript.Node = nodes.get(i);\n            int[] int[] = liveLocals.get(node);\n            if (live != null) {\n                org.mozilla.classfile.ClassFileWriter.markTableSwitchCase(int, getNextGeneratorState(node));\n                generateGetGeneratorLocalsState();\n                for (int int = 0 ; j < (live.int) ; j++) {\n                    org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int);\n                    org.mozilla.classfile.ClassFileWriter.addLoadConstant(j);\n                    org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int);\n                    org.mozilla.classfile.ClassFileWriter.addAStore(live[j]);\n                }\n                org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int);\n                org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, getTargetLabel(node));\n            } \n        }\n    } \n    if ((java.util.Map<org.mozilla.javascript.Node, org.mozilla.javascript.optimizer.BodyCodegen.FinallyReturnPoint>) != null) {\n        for (org.mozilla.javascript.Node org.mozilla.javascript.Node : java.util.Map<org.mozilla.javascript.Node, org.mozilla.javascript.optimizer.BodyCodegen.FinallyReturnPoint>.keySet()) {\n            if ((n.getType()) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n                org.mozilla.javascript.optimizer.BodyCodegen.FinallyReturnPoint org.mozilla.javascript.optimizer.BodyCodegen.FinallyReturnPoint = java.util.Map<org.mozilla.javascript.Node, org.mozilla.javascript.optimizer.BodyCodegen.FinallyReturnPoint>.get(n);\n                org.mozilla.classfile.ClassFileWriter.markLabel(ret.int, ((short)(1)));\n                int int = org.mozilla.classfile.ClassFileWriter.addTableSwitch(0, ((ret.java.util.List<java.lang.Integer>.size()) - 1));\n                int int = 0;\n                org.mozilla.classfile.ClassFileWriter.markTableSwitchDefault(startSwitch);\n                for (int int = 0 ; i < (ret.java.util.List<java.lang.Integer>.size()) ; i++) {\n                    org.mozilla.classfile.ClassFileWriter.markTableSwitchCase(startSwitch, c);\n                    org.mozilla.classfile.ClassFileWriter.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, ret.java.util.List<java.lang.Integer>.get(i).intValue());\n                    c++;\n                }\n            } \n        }\n    } \n} "},"status":-1},{"failures":[],"tindex":"56b4920b-8aa5-11e6-9488-95a2b6558c7b","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.SecureCaller:132","type":"CtReturnImpl","sourcecode":"return org.mozilla.javascript.SecureCaller.loadBytecodePrivileged()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeArray:1523","type":"CtReturnImpl","sourcecode":"return java.lang.Long.valueOf(i)"},"status":-1},{"failures":[],"tindex":"56b4920c-8aa5-11e6-9488-db1658d63ea9","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.NativeDate:793","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeCall:41","type":"CtLocalVariableImpl","sourcecode":"int int = function.getParamAndVarCount()"},"status":-1},{"failures":[],"tindex":"56b4920d-8aa5-11e6-9488-8b5153d50af2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:1501","type":"CtInvocationImpl","sourcecode":"org.mozilla.classfile.ClassFileWriter.addAStore(short)"},"status":-1}],"header":{"groupId":"r","transformationCount":4,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}