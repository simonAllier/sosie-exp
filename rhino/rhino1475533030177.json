{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"20b12722-89b7-11e6-9468-575f32554974","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.regexp.RegExpImpl:327","type":"CtAssignmentImpl","sourcecode":"args[(parenCount + 1)] = java.lang.Integer.valueOf(reImpl.org.mozilla.javascript.regexp.SubString.int)"},"status":-1},{"failures":[],"tindex":"20b14e33-89b7-11e6-9468-97c35afff630","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeGenerator:192","type":"CtThrowImpl","sourcecode":"throw e"},"status":-1},{"failures":[],"tindex":"20b14e34-89b7-11e6-9468-955801c9f3e0","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.JavaMembers:183","type":"CtIfImpl","sourcecode":"if (arrayDimension == 1) {\n    return name.concat(suffix);\n} else {\n    int int = (name.length()) + (arrayDimension * (suffix.length()));\n    java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(length);\n    sb.append(name);\n    while (arrayDimension != 0) {\n        --arrayDimension;\n        sb.append(suffix);\n    }\n    return sb.toString();\n}"},"variableMap":{"arrayDimension":"pos","name":"src","suffix":"src"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.json.JsonParser:198","type":"CtWhileImpl","sourcecode":"while ((int) < (int)) {\n    assert (java.lang.String.charAt(((int) - 1))) == '\\\\';\n    b.append(java.lang.String, stringStart, ((int) - 1));\n    if ((int) >= (int)) {\n        throw new org.mozilla.javascript.json.JsonParser.ParseException(\"Unterminated string\");\n    } \n    char char = java.lang.String.charAt(((int)++));\n    switch (c) {\n        case '\"' :\n            b.append('\"');\n            break;\n        case '\\\\' :\n            b.append('\\\\');\n            break;\n        case '/' :\n            b.append('/');\n            break;\n        case 'b' :\n            b.append('\\b');\n            break;\n        case 'f' :\n            b.append('\\f');\n            break;\n        case 'n' :\n            b.append('\\n');\n            break;\n        case 'r' :\n            b.append('\\r');\n            break;\n        case 't' :\n            b.append('\\t');\n            break;\n        case 'u' :\n            if (((int) - (int)) < 5) {\n                throw new org.mozilla.javascript.json.JsonParser.ParseException((\"Invalid character code: \\\\u\" + (java.lang.String.substring(int))));\n            } \n            int int = ((((fromHex(java.lang.String.charAt(((int) + 0)))) << 12) | ((fromHex(java.lang.String.charAt(((int) + 1)))) << 8)) | ((fromHex(java.lang.String.charAt(((int) + 2)))) << 4)) | (fromHex(java.lang.String.charAt(((int) + 3))));\n            if (code < 0) {\n                throw new org.mozilla.javascript.json.JsonParser.ParseException((\"Invalid character code: \" + (java.lang.String.substring(int, ((int) + 4)))));\n            } \n            int += 4;\n            b.append(((char)(code)));\n            break;\n        default :\n            throw new org.mozilla.javascript.json.JsonParser.ParseException(((\"Unexpected character in string: \\'\\\\\" + c) + \"'\"));\n    }\n    stringStart = int;\n    while ((int) < (int)) {\n        c = java.lang.String.charAt(((int)++));\n        if (c <= '\u001f') {\n            throw new org.mozilla.javascript.json.JsonParser.ParseException(\"String contains control character\");\n        } else if (c == '\\\\') {\n            break;\n        } else if (c == '\"') {\n            b.append(java.lang.String, stringStart, ((int) - 1));\n            return b.toString();\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"20b17545-89b7-11e6-9468-5340f1f30047","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.IRFactory:941","type":"CtReturnImpl","sourcecode":"return node"},"variableMap":{"node":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.IRFactory:149","type":"CtReturnImpl","sourcecode":"return transformExprStmt(((org.mozilla.javascript.ast.ExpressionStatement)(node)))"},"status":-1},{"failures":[],"tindex":"20b17546-89b7-11e6-9468-7b3374822515","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.optimizer.Codegen:4795","type":"CtAssignmentImpl","sourcecode":"falseGOTO = tmp"},"variableMap":{"falseGOTO":"index","tmp":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.classfile.ClassFileWriter:351","type":"CtAssignmentImpl","sourcecode":"index = org.mozilla.classfile.ClassFileWriter.putInt16(int, codeAttribute, index)"},"status":-1}],"header":{"groupId":"r","transformationCount":5,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}