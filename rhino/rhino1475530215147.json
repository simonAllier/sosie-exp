{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"92cda98f-89b0-11e6-ad85-efe13e1ce722","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.Parser:3302","type":"CtIfImpl","sourcecode":"if (objJsdocNode != null) {\n    pn.setJsDocNode(objJsdocNode);\n} "},"variableMap":{"objJsdocNode":"expression","pn":"expression"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ast.ExpressionStatement:92","type":"CtInvocationImpl","sourcecode":"expression.setParent(org.mozilla.javascript.ast.ExpressionStatement.this)"},"status":-1},{"failures":[],"tindex":"92cdd0a0-89b0-11e6-ad85-61c9d8637c3c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.classfile.ClassFileWriter:2927","type":"CtSwitchImpl","sourcecode":"switch (pString.charAt((rightParenthesis + 1))) {\n    default :\n        ok = false;\n        break;\n    case 'J' :\n    case 'D' :\n        ++stackDiff;\n    case 'B' :\n    case 'S' :\n    case 'C' :\n    case 'I' :\n    case 'Z' :\n    case 'F' :\n    case 'L' :\n    case '[' :\n        ++stackDiff;\n    case 'V' :\n        break;\n}"},"status":-1},{"failures":[],"tindex":"92cdd0a1-89b0-11e6-ad85-c3b4b89034bb","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.IdScriptableObject:314","type":"CtIfImpl","sourcecode":"if ((attr & (org.mozilla.javascript.ScriptableObject.org.mozilla.javascript.ScriptableObject.int)) != 0) {\n    return true;\n} "},"variableMap":{"org.mozilla.javascript.ScriptableObject.PERMANENT":"anchorCh","attr":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.regexp.NativeRegExp:2387","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    if (i == end) {\n        return false;\n    } \n    char char = input.charAt(i);\n    if ((matchCh == anchorCh) || ((((gData.org.mozilla.javascript.regexp.RECompiled.int) & (org.mozilla.javascript.regexp.NativeRegExp.org.mozilla.javascript.regexp.NativeRegExp.int)) != 0) && ((org.mozilla.javascript.regexp.NativeRegExp.upcase(matchCh)) == (org.mozilla.javascript.regexp.NativeRegExp.upcase(((char)(anchorCh))))))) {\n        break;\n    } \n    ++i;\n}"},"status":-1},{"failures":[],"tindex":"92cdd0a2-89b0-11e6-ad85-cfb5545257f6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.regexp.NativeRegExp:1483","type":"CtOperatorAssignmentImpl","sourcecode":"gData.int += len"},"status":-1}],"header":{"groupId":"r","transformationCount":4,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}