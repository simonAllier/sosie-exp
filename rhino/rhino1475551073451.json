{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"2351f83e-89e1-11e6-a1ff-d7ab6c3b76ee","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.commonjs.module.ModuleScope:28","type":"CtInvocationImpl","sourcecode":"cacheBuiltins()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.IdScriptableObject:791","type":"CtInvocationImpl","sourcecode":"activatePrototypeMap(maxPrototypeId)"},"status":-2},{"failures":[],"tindex":"23521f4f-89e1-11e6-a1ff-8f2e9eea62f3","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.ast.AstNode:84","type":"CtInvocationImpl","sourcecode":"org.mozilla.javascript.ast.AstNode.org.mozilla.javascript.ast.AstNode.java.util.Map<java.lang.Integer, java.lang.String>.put(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int, \"|\")"},"variableMap":{"org.mozilla.javascript.ast.AstNode.operatorNames":"org.mozilla.javascript.ast.AstNode.operatorNames","org.mozilla.javascript.Token.BITOR":"org.mozilla.javascript.Token.ASSIGN_BITOR"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ast.AstNode:108","type":"CtInvocationImpl","sourcecode":"org.mozilla.javascript.ast.AstNode.org.mozilla.javascript.ast.AstNode.java.util.Map<java.lang.Integer, java.lang.String>.put(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int, \"|=\")"},"status":0},{"failures":[],"tindex":"23521f50-89e1-11e6-a1ff-8956ab4fc7f5","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.NativeIterator:166","type":"CtIfImpl","sourcecode":"if (jsIterator != null) {\n    return jsIterator;\n} "},"variableMap":{"jsIterator":"scope"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.json.JsonParser:149","type":"CtSwitchImpl","sourcecode":"switch (c) {\n    case ']' :\n        if (!needsComma) {\n            throw new org.mozilla.javascript.json.JsonParser.ParseException(\"Unexpected comma in array literal\");\n        } \n        int += 1;\n        return org.mozilla.javascript.Context.newArray(org.mozilla.javascript.Scriptable, list.toArray());\n    case ',' :\n        if (!needsComma) {\n            throw new org.mozilla.javascript.json.JsonParser.ParseException(\"Unexpected comma in array literal\");\n        } \n        needsComma = false;\n        int += 1;\n        break;\n    default :\n        if (needsComma) {\n            throw new org.mozilla.javascript.json.JsonParser.ParseException(\"Missing comma in array literal\");\n        } \n        list.add(readValue());\n        needsComma = true;\n}"},"status":-1},{"failures":[],"tindex":"23521f51-89e1-11e6-a1ff-372831cc0f96","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeArray:1124","type":"CtInvocationImpl","sourcecode":"org.mozilla.javascript.NativeArray.deleteElem(thisObj, length)"},"status":0},{"failures":[],"tindex":"23521f52-89e1-11e6-a1ff-455ad6396caa","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.ScriptableObject:3137","type":"CtIfImpl","sourcecode":"if ((tableSize & (tableSize - 1)) != 0) {\n    if (tableSize > (1 << 30))\n        throw new java.lang.RuntimeException(\"Property table overflow\");\n    \n    int int = org.mozilla.javascript.ScriptableObject.org.mozilla.javascript.ScriptableObject.int;\n    while (newSize < tableSize)\n        newSize <<= 1;\n    tableSize = newSize;\n} "},"variableMap":{"tableSize":"index","org.mozilla.javascript.ScriptableObject.INITIAL_SLOT_SIZE":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ScriptableObject:2625","type":"CtDoImpl","sourcecode":"do {\n    if (obj.has(index, obj))\n        break;\n    \n    obj = obj.getPrototype();\n} while (obj != null )"},"status":-1},{"failures":[],"tindex":"23521f53-89e1-11e6-a1ff-8f43dd57cc83","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.ast.AstNode:200","type":"CtAssignmentImpl","sourcecode":"org.mozilla.javascript.ast.AstNode.this.int = length"},"variableMap":{"length":"type"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ast.Comment:47","type":"CtAssignmentImpl","sourcecode":"int = org.mozilla.javascript.Token.org.mozilla.javascript.Token.int"},"status":-1},{"failures":[],"tindex":"23524564-89e1-11e6-a1ff-3d6e0b8f9e97","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.NativeArray:1242","type":"CtLocalVariableImpl","sourcecode":"double double = org.mozilla.javascript.ScriptRuntime.toInteger(args[1])"},"variableMap":{"args":"args"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeString:574","type":"CtLocalVariableImpl","sourcecode":"double double = org.mozilla.javascript.ScriptRuntime.toNumber(args, 1)"},"status":-1},{"failures":[],"tindex":"23524565-89e1-11e6-a1ff-a76d362983bb","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.IRFactory:244","type":"CtInvocationImpl","sourcecode":"org.mozilla.javascript.Decompiler.addName(\" \")"},"variableMap":{"decompiler":"decompiler"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.IRFactory:976","type":"CtInvocationImpl","sourcecode":"org.mozilla.javascript.Decompiler.addString(node.getValue())"},"status":-1},{"failures":[],"tindex":"23524566-89e1-11e6-a1ff-f385469cd7b6","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.ObjArray:290","type":"CtAssignmentImpl","sourcecode":"alloc = (org.mozilla.javascript.ObjArray.org.mozilla.javascript.ObjArray.int) * 2"},"variableMap":{"org.mozilla.javascript.ObjArray.FIELDS_STORE_SIZE":"startLabel","alloc":"startLabel"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:3977","type":"CtAssignmentImpl","sourcecode":"top.int[][exceptionType] = startLabel"},"status":-1},{"failures":[],"tindex":"23524567-89e1-11e6-a1ff-1100c26ca3b6","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.CodeGenerator:1436","type":"CtIfImpl","sourcecode":"if ((top + extraSize) > capacity) {\n    capacity = top + extraSize;\n} "},"variableMap":{"top":"len","extraSize":"len","capacity":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeArray:1743","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < len ; i++) {\n    array[i] = get(i);\n}"},"status":-1}],"header":{"groupId":"r","transformationCount":10,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}