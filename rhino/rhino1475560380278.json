{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"ce9f5ff7-89f6-11e6-9f9a-b9af6ef16ab6","series":0,"name":"replace","transplant":{"position":"org.mozilla.classfile.ClassFileWriter:4191","type":"CtLocalVariableImpl","sourcecode":"int int = 48"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.IdScriptableObject:472","type":"CtLocalVariableImpl","sourcecode":"int int = findInstanceIdInfo(name)"},"status":-1},{"failures":[],"tindex":"ce9f8708-89f6-11e6-9f9a-6574750766d1","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.regexp.NativeRegExp:706","type":"CtIfImpl","sourcecode":"if (localMax > max)\n    max = localMax;\n"},"variableMap":{"localMax":"length","max":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.regexp.RegExpImpl:483","type":"CtIfImpl","sourcecode":"if (dp != (-1)) {\n    int[] int[] = new int[1];\n    do {\n        int int = dp - cp;\n        charBuf.append(da.substring(cp, dp));\n        cp = dp;\n        org.mozilla.javascript.regexp.SubString org.mozilla.javascript.regexp.SubString = org.mozilla.javascript.regexp.RegExpImpl.interpretDollar(cx, regExpImpl, da, dp, skip);\n        if (sub != null) {\n            len = sub.int;\n            if (len > 0) {\n                charBuf.append(sub.java.lang.String, sub.int, ((sub.int) + len));\n            } \n            cp += skip[0];\n            dp += skip[0];\n        } else {\n            ++dp;\n        }\n        dp = da.indexOf('$', dp);\n    } while (dp >= 0 );\n} "},"status":-1},{"failures":[],"tindex":"ce9fae19-89f6-11e6-9f9a-73617573162a","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.optimizer.OptFunctionNode:105","type":"CtIfImpl","sourcecode":"if (index < 0)\n    throw org.mozilla.javascript.Kit.codeBug();\n"},"variableMap":{"index":"dataTop"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.classfile.ClassFileWriter:2315","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < dataTop ; i++) {\n    if ((data[i]) == prevType) {\n        data[i] = newType;\n    } \n}"},"status":-1},{"failures":[],"tindex":"ce9fae1a-89f6-11e6-9f9a-95870929edb4","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.optimizer.Codegen:3909","type":"CtReturnImpl","sourcecode":"return \"org/mozilla/javascript/EvaluatorException\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ast.InfixExpression:172","type":"CtReturnImpl","sourcecode":"return sb.toString()"},"status":-1}],"header":{"groupId":"r","transformationCount":4,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}