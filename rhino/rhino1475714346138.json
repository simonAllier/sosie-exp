{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"496d06b3-8b5d-11e6-b47b-ffd58a8a705e","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.IdScriptableObject:489","type":"CtIfImpl","sourcecode":"if (count != 0) {\n    if (((result.int) == 0) && ((ids.int) == count)) {\n        result = ids;\n    } else {\n        java.lang.Object[] java.lang.Object[] = new java.lang.Object[(result.int) + count];\n        java.lang.System.arraycopy(result, 0, tmp, 0, result.int);\n        java.lang.System.arraycopy(ids, 0, tmp, result.int, count);\n        result = tmp;\n    }\n} "},"variableMap":{"result":"values","count":"index","length":"i","ids":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.UintMap:276","type":"CtIfImpl","sourcecode":"if (oldValues != null) {\n    java.lang.Object[][index] = oldValues[i];\n} "},"status":-1},{"failures":[],"tindex":"496d2dc4-8b5d-11e6-b47b-4f16b6dcf161","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.ContextFactory:291","type":"CtLocalVariableImpl","sourcecode":"java.lang.Class<?> java.lang.Class<?> = org.mozilla.javascript.Kit.classOrNull(\"org.w3c.dom.Node\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:130","type":"CtLocalVariableImpl","sourcecode":"java.lang.Class<?> java.lang.Class<?> = loader.defineClass(className, classBytes)"},"status":-1},{"failures":[],"tindex":"496d2dc5-8b5d-11e6-b47b-e963d00eb618","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.NativeMath:313","type":"CtIfImpl","sourcecode":"if ((x < (-1.0)) || (1.0 < x)) {\n    result = java.lang.Double.java.lang.Double.double;\n} else if (((-1.0) < x) && (x < 1.0)) {\n    result = 0;\n} "},"variableMap":{"result":"value","java.lang.Double.POSITIVE_INFINITY":"value","x":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeArray:1469","type":"CtIfImpl","sourcecode":"if (value < 0.0) {\n    if ((value + length) < 0.0) {\n        result = 0;\n    } else {\n        result = ((long)(value + length));\n    }\n} else if (value > length) {\n    result = length;\n} else {\n    result = ((long)(value));\n}"},"status":-1},{"failures":[],"tindex":"496d54d6-8b5d-11e6-b47b-d769e8db83e5","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.NativeJavaObject:400","type":"CtReturnImpl","sourcecode":"return 7"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.BaseFunction:433","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1}],"header":{"groupId":"r","transformationCount":4,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}