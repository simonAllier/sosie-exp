{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"267aa561-8b5d-11e6-a018-81f032df8ea1","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.v8dtoa.FastDtoa:465","type":"CtLocalVariableImpl","sourcecode":"org.mozilla.javascript.v8dtoa.DiyFp org.mozilla.javascript.v8dtoa.DiyFp = org.mozilla.javascript.v8dtoa.DiyFp.times(w, ten_mk)"},"variableMap":{"ten_mk":"a","w":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.v8dtoa.DiyFp:76","type":"CtLocalVariableImpl","sourcecode":"org.mozilla.javascript.v8dtoa.DiyFp org.mozilla.javascript.v8dtoa.DiyFp = new org.mozilla.javascript.v8dtoa.DiyFp(a.long , a.int)"},"status":-1},{"failures":[],"tindex":"267acc72-8b5d-11e6-a018-db2fce1e0254","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.NativeString:256","type":"CtReturnImpl","sourcecode":"return (\"(new String(\\\"\" + (org.mozilla.javascript.ScriptRuntime.escapeString(s.toString()))) + \"\\\"))\""},"variableMap":{"s":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ScriptRuntime:1661","type":"CtReturnImpl","sourcecode":"return org.mozilla.javascript.ScriptRuntime.setObjectProp(sobj, property, value, cx)"},"status":-1},{"failures":[],"tindex":"267acc73-8b5d-11e6-a018-2b60dbfbf944","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.regexp.NativeRegExp:566","type":"CtIfImpl","sourcecode":"if (index == end)\n    return true;\n"},"variableMap":{"index":"cp","end":"parenNesting"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.regexp.NativeRegExp:528","type":"CtIfImpl","sourcecode":"if ((((state.int) == (state.int)) || ((source[state.int]) == '|')) || (((state.int) != 0) && ((source[state.int]) == ')'))) {\n    if (headTerm == null) {\n        state.org.mozilla.javascript.regexp.RENode = new org.mozilla.javascript.regexp.RENode(org.mozilla.javascript.regexp.NativeRegExp.org.mozilla.javascript.regexp.NativeRegExp.byte);\n    } else\n        state.org.mozilla.javascript.regexp.RENode = headTerm;\n    \n    return true;\n} "},"status":-1},{"failures":[],"tindex":"267af384-8b5d-11e6-a018-2961fc228cfe","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.NativeDate:1440","type":"CtAssertImpl","sourcecode":"assert numNums <= 4"},"variableMap":{"numNums":"m"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeDate:461","type":"CtIfImpl","sourcecode":"if ((m >= 2) && (org.mozilla.javascript.NativeDate.IsLeapYear(year))) {\n    ++day;\n} "},"status":-1},{"failures":[],"tindex":"267af385-8b5d-11e6-a018-1ffd7d8f38e4","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.IRFactory:2264","type":"CtReturnImpl","sourcecode":"return (n instanceof org.mozilla.javascript.ast.DestructuringForm) && (((org.mozilla.javascript.ast.DestructuringForm)(n)).isDestructuring())"},"variableMap":{"n":"org.mozilla.javascript.Scriptable.NOT_FOUND"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ScriptRuntime:3086","type":"CtIfImpl","sourcecode":"if (test != (org.mozilla.javascript.Scriptable.org.mozilla.javascript.Scriptable.java.lang.Object)) {\n    return ((java.lang.Boolean)(test)).booleanValue();\n} "},"status":-1},{"failures":[],"tindex":"267af386-8b5d-11e6-a018-25be5a1db067","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.regexp.NativeRegExp:1184","type":"CtUnaryOperatorImpl","sourcecode":"++(state.int)"},"status":-1},{"failures":[],"tindex":"267af387-8b5d-11e6-a018-b783dd3648f7","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider:323","type":"CtIfImpl","sourcecode":"if (maxAgeIndex == (-1)) {\n    return -1;\n} "},"variableMap":{"maxAgeIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.typedarrays.NativeTypedArrayView:463","type":"CtReturnImpl","sourcecode":"return i"},"status":-1},{"failures":[],"tindex":"267af388-8b5d-11e6-a018-ababa732c6ec","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.NativeJavaMethod:419","type":"CtAssignmentImpl","sourcecode":"extraBestFitsCount = 0"},"variableMap":{"extraBestFitsCount":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.Decompiler:831","type":"CtUnaryOperatorImpl","sourcecode":"++offset"},"status":-1},{"failures":[],"tindex":"267b1a99-8b5d-11e6-a018-f74e33a790af","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.Interpreter:1959","type":"CtAssignmentImpl","sourcecode":"exState = EX_FINALLY_STATE"},"variableMap":{"exState":"id","EX_FINALLY_STATE":"id"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeDate:1601","type":"CtAssignmentImpl","sourcecode":"id = org.mozilla.javascript.NativeDate.org.mozilla.javascript.NativeDate.int"},"status":-1},{"failures":[],"tindex":"267b1a9a-8b5d-11e6-a018-9f55ee6ebaea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.regexp.NativeRegExp:1569","type":"CtWhileImpl","sourcecode":"while (src != end) {\n    nDigits = 2;\n    switch (gData.org.mozilla.javascript.regexp.RECompiled.char[][src]) {\n        case '\\\\' :\n            ++src;\n            c = gData.org.mozilla.javascript.regexp.RECompiled.char[][(src++)];\n            switch (c) {\n                case 'b' :\n                    thisCh = 8;\n                    break;\n                case 'f' :\n                    thisCh = 12;\n                    break;\n                case 'n' :\n                    thisCh = 10;\n                    break;\n                case 'r' :\n                    thisCh = 13;\n                    break;\n                case 't' :\n                    thisCh = 9;\n                    break;\n                case 'v' :\n                    thisCh = 11;\n                    break;\n                case 'c' :\n                    if ((src < end) && (org.mozilla.javascript.regexp.NativeRegExp.isControlLetter(gData.org.mozilla.javascript.regexp.RECompiled.char[][src])))\n                        thisCh = ((char)((gData.org.mozilla.javascript.regexp.RECompiled.char[][(src++)]) & 31));\n                    else {\n                        --src;\n                        thisCh = '\\\\';\n                    }\n                    break;\n                case 'u' :\n                    nDigits += 2;\n                case 'x' :\n                    n = 0;\n                    for (i = 0 ; (i < nDigits) && (src < end) ; i++) {\n                        c = gData.org.mozilla.javascript.regexp.RECompiled.char[][(src++)];\n                        int int = org.mozilla.javascript.regexp.NativeRegExp.toASCIIHexDigit(c);\n                        if (digit < 0) {\n                            src -= i + 1;\n                            n = '\\\\';\n                            break;\n                        } \n                        n = (n << 4) | digit;\n                    }\n                    thisCh = ((char)(n));\n                    break;\n                case '0' :\n                case '1' :\n                case '2' :\n                case '3' :\n                case '4' :\n                case '5' :\n                case '6' :\n                case '7' :\n                    n = c - '0';\n                    c = gData.org.mozilla.javascript.regexp.RECompiled.char[][src];\n                    if (('0' <= c) && (c <= '7')) {\n                        src++;\n                        n = (8 * n) + (c - '0');\n                        c = gData.org.mozilla.javascript.regexp.RECompiled.char[][src];\n                        if (('0' <= c) && (c <= '7')) {\n                            src++;\n                            i = (8 * n) + (c - '0');\n                            if (i <= 255)\n                                n = i;\n                            else\n                                src--;\n                            \n                        } \n                    } \n                    thisCh = ((char)(n));\n                    break;\n                case 'd' :\n                    org.mozilla.javascript.regexp.NativeRegExp.addCharacterRangeToCharSet(charSet, '0', '9');\n                    continue;\n                case 'D' :\n                    org.mozilla.javascript.regexp.NativeRegExp.addCharacterRangeToCharSet(charSet, ((char)(0)), ((char)('0' - 1)));\n                    org.mozilla.javascript.regexp.NativeRegExp.addCharacterRangeToCharSet(charSet, ((char)('9' + 1)), ((char)((charSet.int) - 1)));\n                    continue;\n                case 's' :\n                    for (i = (charSet.int) - 1 ; i >= 0 ; i--)\n                        if (org.mozilla.javascript.regexp.NativeRegExp.isREWhiteSpace(i))\n                            org.mozilla.javascript.regexp.NativeRegExp.addCharacterToCharSet(charSet, ((char)(i)));\n                        \n                    continue;\n                case 'S' :\n                    for (i = (charSet.int) - 1 ; i >= 0 ; i--)\n                        if (!(org.mozilla.javascript.regexp.NativeRegExp.isREWhiteSpace(i)))\n                            org.mozilla.javascript.regexp.NativeRegExp.addCharacterToCharSet(charSet, ((char)(i)));\n                        \n                    continue;\n                case 'w' :\n                    for (i = (charSet.int) - 1 ; i >= 0 ; i--)\n                        if (org.mozilla.javascript.regexp.NativeRegExp.isWord(((char)(i))))\n                            org.mozilla.javascript.regexp.NativeRegExp.addCharacterToCharSet(charSet, ((char)(i)));\n                        \n                    continue;\n                case 'W' :\n                    for (i = (charSet.int) - 1 ; i >= 0 ; i--)\n                        if (!(org.mozilla.javascript.regexp.NativeRegExp.isWord(((char)(i)))))\n                            org.mozilla.javascript.regexp.NativeRegExp.addCharacterToCharSet(charSet, ((char)(i)));\n                        \n                    continue;\n                default :\n                    thisCh = c;\n                    break;\n            }\n            break;\n        default :\n            thisCh = gData.org.mozilla.javascript.regexp.RECompiled.char[][(src++)];\n            break;\n    }\n    if (inRange) {\n        if (((gData.org.mozilla.javascript.regexp.RECompiled.int) & (org.mozilla.javascript.regexp.NativeRegExp.org.mozilla.javascript.regexp.NativeRegExp.int)) != 0) {\n            assert rangeStart <= thisCh;\n            for (c = rangeStart ; c <= thisCh ; ) {\n                org.mozilla.javascript.regexp.NativeRegExp.addCharacterToCharSet(charSet, c);\n                char char = org.mozilla.javascript.regexp.NativeRegExp.upcase(c);\n                char char = org.mozilla.javascript.regexp.NativeRegExp.downcase(c);\n                if (c != uch)\n                    org.mozilla.javascript.regexp.NativeRegExp.addCharacterToCharSet(charSet, uch);\n                \n                if (c != dch)\n                    org.mozilla.javascript.regexp.NativeRegExp.addCharacterToCharSet(charSet, dch);\n                \n                if ((++c) == 0)\n                    break;\n                \n            }\n        } else {\n            org.mozilla.javascript.regexp.NativeRegExp.addCharacterRangeToCharSet(charSet, rangeStart, thisCh);\n        }\n        inRange = false;\n    } else {\n        if (((gData.org.mozilla.javascript.regexp.RECompiled.int) & (org.mozilla.javascript.regexp.NativeRegExp.org.mozilla.javascript.regexp.NativeRegExp.int)) != 0) {\n            org.mozilla.javascript.regexp.NativeRegExp.addCharacterToCharSet(charSet, org.mozilla.javascript.regexp.NativeRegExp.upcase(thisCh));\n            org.mozilla.javascript.regexp.NativeRegExp.addCharacterToCharSet(charSet, org.mozilla.javascript.regexp.NativeRegExp.downcase(thisCh));\n        } else {\n            org.mozilla.javascript.regexp.NativeRegExp.addCharacterToCharSet(charSet, thisCh);\n        }\n        if (src < (end - 1)) {\n            if ((gData.org.mozilla.javascript.regexp.RECompiled.char[][src]) == '-') {\n                ++src;\n                inRange = true;\n                rangeStart = thisCh;\n            } \n        } \n    }\n}"},"status":-1}],"header":{"groupId":"r","transformationCount":10,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}