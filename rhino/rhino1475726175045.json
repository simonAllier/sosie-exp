{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"d4014c33-8b78-11e6-af03-d3724edbc9c9","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.ScriptableObject:1439","type":"CtIfImpl","sourcecode":"if (method.isAnnotationPresent(org.mozilla.javascript.annotations.JSFunction.org.mozilla.javascript.annotations.JSFunction.java.lang.Class)) {\n    annotation = method.getAnnotation(org.mozilla.javascript.annotations.JSFunction.org.mozilla.javascript.annotations.JSFunction.java.lang.Class);\n} else if (method.isAnnotationPresent(org.mozilla.javascript.annotations.JSStaticFunction.org.mozilla.javascript.annotations.JSStaticFunction.java.lang.Class)) {\n    annotation = method.getAnnotation(org.mozilla.javascript.annotations.JSStaticFunction.org.mozilla.javascript.annotations.JSStaticFunction.java.lang.Class);\n} else if (method.isAnnotationPresent(org.mozilla.javascript.annotations.JSGetter.org.mozilla.javascript.annotations.JSGetter.java.lang.Class)) {\n    annotation = method.getAnnotation(org.mozilla.javascript.annotations.JSGetter.org.mozilla.javascript.annotations.JSGetter.java.lang.Class);\n} else if (method.isAnnotationPresent(org.mozilla.javascript.annotations.JSSetter.org.mozilla.javascript.annotations.JSSetter.java.lang.Class)) {\n    continue;\n} "},"variableMap":{"annotation":"org.mozilla.javascript.Undefined.instance","org.mozilla.javascript.annotations.JSFunction.class":"org.mozilla.javascript.Undefined.instance","org.mozilla.javascript.annotations.JSGetter.class":"org.mozilla.javascript.Undefined.instance","org.mozilla.javascript.annotations.JSSetter.class":"org.mozilla.javascript.Undefined.instance","method":"org.mozilla.javascript.Undefined.instance","org.mozilla.javascript.annotations.JSStaticFunction.class":"org.mozilla.javascript.Undefined.instance"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeArray:1444","type":"CtIfImpl","sourcecode":"if ((args.int) == 0) {\n    begin = 0;\n    end = length;\n} else {\n    begin = org.mozilla.javascript.NativeArray.toSliceIndex(org.mozilla.javascript.ScriptRuntime.toInteger(args[0]), length);\n    if (((args.int) == 1) || ((args[1]) == (org.mozilla.javascript.Undefined.org.mozilla.javascript.Undefined.java.lang.Object))) {\n        end = length;\n    } else {\n        end = org.mozilla.javascript.NativeArray.toSliceIndex(org.mozilla.javascript.ScriptRuntime.toInteger(args[1]), length);\n    }\n}"},"status":-1},{"failures":[],"tindex":"d4017344-8b78-11e6-af03-b5a0b3ba2b6f","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.ObjArray:170","type":"CtIfImpl","sourcecode":"if (!((0 <= index) && (index <= N)))\n    throw org.mozilla.javascript.ObjArray.onInvalidIndex(index, (N + 1));\n"},"variableMap":{"index":"undefArg","N":"undefArg"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:550","type":"CtInvocationImpl","sourcecode":"cfw.add(org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int, undefArg)"},"status":-1},{"failures":[],"tindex":"d4019a55-8b78-11e6-af03-c1dad0d0c7b9","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.DToA:1198","type":"CtInvocationImpl","sourcecode":"buffer.append('e')"},"variableMap":{"buffer":"sb"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ast.ForLoop:107","type":"CtInvocationImpl","sourcecode":"sb.append(org.mozilla.javascript.ast.AstNode.toSource(0))"},"status":-1},{"failures":[],"tindex":"d4019a56-8b78-11e6-af03-956ea460c6aa","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider:323","type":"CtIfImpl","sourcecode":"if (maxAgeIndex == (-1)) {\n    return -1;\n} "},"variableMap":{"maxAgeIndex":"stringBufferTop"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.TokenStream:412","type":"CtIfImpl","sourcecode":"if ((org.mozilla.javascript.TokenStream.isDigit(c)) || ((c == '.') && (org.mozilla.javascript.TokenStream.isDigit(peekChar())))) {\n    boolean = false;\n    int = 0;\n    int int = 10;\n    boolean = boolean = false;\n    if (c == '0') {\n        c = getChar();\n        if ((c == 'x') || (c == 'X')) {\n            base = 16;\n            boolean = true;\n            c = getChar();\n        } else if (org.mozilla.javascript.TokenStream.isDigit(c)) {\n            base = 8;\n            boolean = true;\n        } else {\n            addToString('0');\n        }\n    } \n    if (base == 16) {\n        while (0 <= (org.mozilla.javascript.Kit.xDigitToInt(c, 0))) {\n            addToString(c);\n            c = getChar();\n        }\n    } else {\n        while (('0' <= c) && (c <= '9')) {\n            if ((base == 8) && (c >= '8')) {\n                org.mozilla.javascript.Parser.addWarning(\"msg.bad.octal.literal\", (c == '8' ? \"8\" : \"9\"));\n                base = 10;\n            } \n            addToString(c);\n            c = getChar();\n        }\n    }\n    boolean boolean = true;\n    if ((base == 10) && (((c == '.') || (c == 'e')) || (c == 'E'))) {\n        isInteger = false;\n        if (c == '.') {\n            do {\n                addToString(c);\n                c = getChar();\n            } while (org.mozilla.javascript.TokenStream.isDigit(c) );\n        } \n        if ((c == 'e') || (c == 'E')) {\n            addToString(c);\n            c = getChar();\n            if ((c == '+') || (c == '-')) {\n                addToString(c);\n                c = getChar();\n            } \n            if (!(org.mozilla.javascript.TokenStream.isDigit(c))) {\n                org.mozilla.javascript.Parser.addError(\"msg.missing.exponent\");\n                return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n            } \n            do {\n                addToString(c);\n                c = getChar();\n            } while (org.mozilla.javascript.TokenStream.isDigit(c) );\n        } \n    } \n    ungetChar(c);\n    java.lang.String java.lang.String = getStringFromBuffer();\n    org.mozilla.javascript.TokenStream.this.java.lang.String = numString;\n    double double;\n    if ((base == 10) && (!isInteger)) {\n        try {\n            dval = java.lang.Double.parseDouble(numString);\n        } catch (java.lang.NumberFormatException ex) {\n            org.mozilla.javascript.Parser.addError(\"msg.caught.nfe\");\n            return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n        }\n    } else {\n        dval = org.mozilla.javascript.ScriptRuntime.stringToNumber(numString, 0, base);\n    }\n    org.mozilla.javascript.TokenStream.this.double = dval;\n    return org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n} "},"status":-1},{"failures":[],"tindex":"d401c167-8b78-11e6-af03-1b1cc7f4b88e","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.JavaMembers:228","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = name.substring(0, sigStart)"},"variableMap":{"sigStart":"length","name":"source"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.Decompiler:837","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = source.substring(offset, (offset + length))"},"status":-1},{"failures":[],"tindex":"d401c168-8b78-11e6-af03-9959319a76d0","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.TokenStream:164","type":"CtAssignmentImpl","sourcecode":"id = Id_let"},"variableMap":{"Id_let":"c","id":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.TokenStream:355","type":"CtAssignmentImpl","sourcecode":"c = getChar()"},"status":-1},{"failures":[],"tindex":"d401c169-8b78-11e6-af03-6bda9d0182ca","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.IRFactory:1210","type":"CtIfImpl","sourcecode":"if (kid != null)\n    return new org.mozilla.javascript.Node(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int , kid , node.getLineno());\nelse\n    return new org.mozilla.javascript.Node(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int , node.getLineno());\n"},"variableMap":{"node":"fBlock","kid":"fBlock","org.mozilla.javascript.Token.YIELD":"org.mozilla.javascript.Token.FINALLY"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:4213","type":"CtIfImpl","sourcecode":"if ((fBlock != null) && ((fBlock.getType()) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))) {\n    return fBlock;\n} "},"status":-1}],"header":{"groupId":"r","transformationCount":7,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}