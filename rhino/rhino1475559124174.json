{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"e1eca84f-89f3-11e6-9596-952340d76dc1","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.serialize.ScriptableOutputStream:178","type":"CtIfImpl","sourcecode":"if (false)\n    throw new java.io.IOException();\n"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ast.FunctionNode:163","type":"CtIfImpl","sourcecode":"if ((java.util.List<org.mozilla.javascript.ast.AstNode>) == null) {\n    java.util.List<org.mozilla.javascript.ast.AstNode> = new java.util.ArrayList<org.mozilla.javascript.ast.AstNode>();\n} "},"status":-1},{"failures":[],"tindex":"e1eccf60-89f3-11e6-9596-736f0bd46647","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.NativeArray:476","type":"CtIfImpl","sourcecode":"if ((java.lang.Object[]) == null) {\n    return superIds;\n} "},"variableMap":{"superIds":"stackState","dense":"stackState"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.OptRuntime:254","type":"CtReturnImpl","sourcecode":"return rgs.java.lang.Object[]"},"status":-1},{"failures":[],"tindex":"e1eccf61-89f3-11e6-9596-8dac3f99ed4c","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.Context:2069","type":"CtIfImpl","sourcecode":"if (org.mozilla.javascript.SecurityController.hasGlobal()) {\n    throw new java.lang.SecurityException(\"Can not overwrite existing global SecurityController object\");\n} "},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ast.ArrayLiteral:175","type":"CtInvocationImpl","sourcecode":"printList(java.util.List<org.mozilla.javascript.ast.AstNode>, sb)"},"status":0},{"failures":[],"tindex":"e1ecf672-89f3-11e6-9596-ed737ba8b784","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:1781","type":"CtInvocationImpl","sourcecode":"org.mozilla.classfile.ClassFileWriter.markTableSwitchDefault(int)"},"status":-1},{"failures":[],"tindex":"e1ecf673-89f3-11e6-9596-c35a8811429a","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.NativeString:764","type":"CtIfImpl","sourcecode":"if (((s.charAt(0)) == 's') && ((s.charAt(1)) == 'u')) {\n    id = org.mozilla.javascript.NativeString.org.mozilla.javascript.NativeString.int;\n    break L0;\n} "},"variableMap":{"s":"className","org.mozilla.javascript.NativeString.Id_sub":"org.mozilla.classfile.ByteCode.FLOAD_3","id":"org.mozilla.classfile.ByteCode.IFLE"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.classfile.ClassFileWriter:1866","type":"CtSwitchImpl","sourcecode":"switch (bc) {\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        break;\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        pop();\n        push(org.mozilla.classfile.TypeInfo.OBJECT(getOperand((bci + 1), 2)));\n        break;\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        pop();\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        pop();\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        pop();\n        break;\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        pop2();\n        break;\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        push(org.mozilla.classfile.TypeInfo.org.mozilla.classfile.TypeInfo.int);\n        break;\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        pop();\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        pop();\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        push(org.mozilla.classfile.TypeInfo.org.mozilla.classfile.TypeInfo.int);\n        break;\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        pop();\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        pop();\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        push(org.mozilla.classfile.TypeInfo.org.mozilla.classfile.TypeInfo.int);\n        break;\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        pop();\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        pop();\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        push(org.mozilla.classfile.TypeInfo.org.mozilla.classfile.TypeInfo.int);\n        break;\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        pop();\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        pop();\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        push(org.mozilla.classfile.TypeInfo.org.mozilla.classfile.TypeInfo.int);\n        break;\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        executeStore(getOperand((bci + 1), (boolean ? 2 : 1)), org.mozilla.classfile.TypeInfo.org.mozilla.classfile.TypeInfo.int);\n        break;\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        executeStore((bc - (org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int)), org.mozilla.classfile.TypeInfo.org.mozilla.classfile.TypeInfo.int);\n        break;\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        executeStore(getOperand((bci + 1), (boolean ? 2 : 1)), org.mozilla.classfile.TypeInfo.org.mozilla.classfile.TypeInfo.int);\n        break;\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        executeStore((bc - (org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int)), org.mozilla.classfile.TypeInfo.org.mozilla.classfile.TypeInfo.int);\n        break;\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        executeStore(getOperand((bci + 1), (boolean ? 2 : 1)), org.mozilla.classfile.TypeInfo.org.mozilla.classfile.TypeInfo.int);\n        break;\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        executeStore((bc - (org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int)), org.mozilla.classfile.TypeInfo.org.mozilla.classfile.TypeInfo.int);\n        break;\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        executeStore(getOperand((bci + 1), (boolean ? 2 : 1)), org.mozilla.classfile.TypeInfo.org.mozilla.classfile.TypeInfo.int);\n        break;\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        executeStore((bc - (org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int)), org.mozilla.classfile.TypeInfo.org.mozilla.classfile.TypeInfo.int);\n        break;\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        executeALoad(getOperand((bci + 1), (boolean ? 2 : 1)));\n        break;\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        executeALoad((bc - (org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int)));\n        break;\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        executeAStore(getOperand((bci + 1), (boolean ? 2 : 1)));\n        break;\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        executeAStore((bc - (org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int)));\n        break;\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        clearStack();\n        break;\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        type = pop();\n        clearStack();\n        push(type);\n        break;\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        type = pop();\n        type2 = pop();\n        push(type);\n        push(type2);\n        break;\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        if (bc == (org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int)) {\n            index = getOperand((bci + 1));\n        } else {\n            index = getOperand((bci + 1), 2);\n        }\n        byte byte = org.mozilla.classfile.ConstantPool.getConstantType(index);\n        switch (constType) {\n            case org.mozilla.classfile.ConstantPool.org.mozilla.classfile.ConstantPool.byte :\n                push(org.mozilla.classfile.TypeInfo.org.mozilla.classfile.TypeInfo.int);\n                break;\n            case org.mozilla.classfile.ConstantPool.org.mozilla.classfile.ConstantPool.byte :\n                push(org.mozilla.classfile.TypeInfo.org.mozilla.classfile.TypeInfo.int);\n                break;\n            case org.mozilla.classfile.ConstantPool.org.mozilla.classfile.ConstantPool.byte :\n                push(org.mozilla.classfile.TypeInfo.org.mozilla.classfile.TypeInfo.int);\n                break;\n            case org.mozilla.classfile.ConstantPool.org.mozilla.classfile.ConstantPool.byte :\n                push(org.mozilla.classfile.TypeInfo.org.mozilla.classfile.TypeInfo.int);\n                break;\n            case org.mozilla.classfile.ConstantPool.org.mozilla.classfile.ConstantPool.byte :\n                push(org.mozilla.classfile.TypeInfo.OBJECT(\"java/lang/String\", org.mozilla.classfile.ConstantPool));\n                break;\n            default :\n                throw new java.lang.IllegalArgumentException((\"bad const type \" + constType));\n        }\n        break;\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        push(org.mozilla.classfile.TypeInfo.UNINITIALIZED_VARIABLE(bci));\n        break;\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        pop();\n        char char = org.mozilla.classfile.ClassFileWriter.arrayTypeToName(byte[][(bci + 1)]);\n        index = org.mozilla.classfile.ConstantPool.addClass((\"[\" + componentType));\n        push(org.mozilla.classfile.TypeInfo.OBJECT(((short)(index))));\n        break;\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        index = getOperand((bci + 1), 2);\n        className = ((java.lang.String)(org.mozilla.classfile.ConstantPool.getConstantData(index)));\n        pop();\n        push(org.mozilla.classfile.TypeInfo.OBJECT(((\"[L\" + className) + ';'), org.mozilla.classfile.ConstantPool));\n        break;\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        index = getOperand((bci + 1), 2);\n        org.mozilla.classfile.FieldOrMethodRef org.mozilla.classfile.FieldOrMethodRef = ((org.mozilla.classfile.FieldOrMethodRef)(org.mozilla.classfile.ConstantPool.getConstantData(index)));\n        java.lang.String java.lang.String = m.getType();\n        java.lang.String java.lang.String = m.getName();\n        int int = (org.mozilla.classfile.ClassFileWriter.sizeOfParameters(methodType)) >>> 16;\n        for (int int = 0 ; i < parameterCount ; i++) {\n            pop();\n        }\n        if (bc != (org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int)) {\n            int int = pop();\n            int int = org.mozilla.classfile.TypeInfo.getTag(instType);\n            if ((tag == (org.mozilla.classfile.TypeInfo.UNINITIALIZED_VARIABLE(0))) || (tag == (org.mozilla.classfile.TypeInfo.org.mozilla.classfile.TypeInfo.int))) {\n                if (\"<init>\".equals(methodName)) {\n                    int int = org.mozilla.classfile.TypeInfo.OBJECT(short);\n                    initializeTypeInfo(instType, newType);\n                } else {\n                    throw new java.lang.IllegalStateException(\"bad instance\");\n                }\n            } \n        } \n        int int = methodType.indexOf(')');\n        java.lang.String java.lang.String = methodType.substring((rParen + 1));\n        returnType = org.mozilla.classfile.ClassFileWriter.descriptorToInternalName(returnType);\n        if (!(returnType.equals(\"V\"))) {\n            push(org.mozilla.classfile.TypeInfo.fromType(returnType, org.mozilla.classfile.ConstantPool));\n        } \n        break;\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        pop();\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        index = getOperand((bci + 1), 2);\n        org.mozilla.classfile.FieldOrMethodRef org.mozilla.classfile.FieldOrMethodRef = ((org.mozilla.classfile.FieldOrMethodRef)(org.mozilla.classfile.ConstantPool.getConstantData(index)));\n        java.lang.String java.lang.String = org.mozilla.classfile.ClassFileWriter.descriptorToInternalName(f.getType());\n        push(org.mozilla.classfile.TypeInfo.fromType(fieldType, org.mozilla.classfile.ConstantPool));\n        break;\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        type = pop();\n        push(type);\n        push(type);\n        break;\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        type = pop();\n        type2 = pop();\n        push(type);\n        push(type2);\n        push(type);\n        break;\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        type = pop();\n        lType = pop2();\n        push(type);\n        push2(lType);\n        push(type);\n        break;\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        lType = pop2();\n        push2(lType);\n        push2(lType);\n        break;\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        lType = pop2();\n        type = pop();\n        push2(lType);\n        push(type);\n        push2(lType);\n        break;\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        lType = pop2();\n        lType2 = pop2();\n        push2(lType);\n        push2(lType2);\n        push2(lType);\n        break;\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        int int = (bci + 1) + (3 & (~bci));\n        int int = getOperand((switchStart + 4), 4);\n        int int = getOperand((switchStart + 8), 4);\n        length = ((4 * ((high - low) + 4)) + switchStart) - bci;\n        pop();\n        break;\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        pop();\n        int int = (pop()) >>> 8;\n        className = ((java.lang.String)(org.mozilla.classfile.ConstantPool.getConstantData(typeIndex)));\n        java.lang.String java.lang.String = className;\n        if ((arrayType.charAt(0)) != '[') {\n            throw new java.lang.IllegalStateException(\"bad array type\");\n        } \n        java.lang.String java.lang.String = arrayType.substring(1);\n        java.lang.String java.lang.String = org.mozilla.classfile.ClassFileWriter.descriptorToInternalName(elementDesc);\n        typeIndex = org.mozilla.classfile.ConstantPool.addClass(elementType);\n        push(org.mozilla.classfile.TypeInfo.OBJECT(typeIndex));\n        break;\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n        boolean = true;\n        break;\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    case org.mozilla.classfile.ByteCode.org.mozilla.classfile.ByteCode.int :\n    default :\n        throw new java.lang.IllegalArgumentException((\"bad opcode: \" + bc));\n}"},"status":-1},{"failures":[],"tindex":"e1ed6ba4-89f3-11e6-9596-c725a57e3dda","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.NativeGlobal:423","type":"CtLocalVariableImpl","sourcecode":"int int = 15 & (c >> shift)"},"variableMap":{"c":"itsStartLabel","shift":"itsStartLabel"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.classfile.ClassFileWriter:1667","type":"CtLocalVariableImpl","sourcecode":"int int = getLabelPC(ete.int)"},"status":-1},{"failures":[],"tindex":"e1ed6ba5-89f3-11e6-9596-a5ca69947cd2","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.json.JsonParser:367","type":"CtThrowImpl","sourcecode":"throw new org.mozilla.javascript.json.JsonParser.ParseException(\"Unexpected token: n\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.DefaultErrorReporter:64","type":"CtThrowImpl","sourcecode":"throw runtimeError(message, sourceURI, line, lineText, lineOffset)"},"status":-1},{"failures":[],"tindex":"e1ed6ba6-89f3-11e6-9596-1988fcc987a6","series":0,"name":"replace","transplant":{"position":"org.mozilla.classfile.ClassFileWriter:2859","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.typedarrays.NativeDataView:186","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = ((org.mozilla.javascript.typedarrays.NativeArrayBufferView.isArg(args, 2)) && (bytes > 1)) && (org.mozilla.javascript.ScriptRuntime.toBoolean(args[2]))"},"status":-1},{"failures":[],"tindex":"e1ed6ba7-89f3-11e6-9596-af45e1eccb77","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.regexp.RegExpImpl:157","type":"CtAssignmentImpl","sourcecode":"data.boolean = ((re.getFlags()) & (org.mozilla.javascript.regexp.NativeRegExp.org.mozilla.javascript.regexp.NativeRegExp.int)) != 0"},"status":-1},{"failures":[],"tindex":"e1ed6ba8-89f3-11e6-9596-49811932a129","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.ScriptRuntime:3720","type":"CtAssignmentImpl","sourcecode":"sparse = new java.lang.Object[length]"},"status":-1}],"header":{"groupId":"r","transformationCount":10,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}