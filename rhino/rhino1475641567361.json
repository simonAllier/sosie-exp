{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"d5eb10c3-8ab3-11e6-ae49-679eef361181","series":0,"name":"add","transplant":{"position":"org.mozilla.javascript.optimizer.Codegen:4271","type":"CtInvocationImpl","sourcecode":"org.mozilla.classfile.ClassFileWriter.addAStore(selector)"},"variableMap":{"cfw":"cfw","selector":"contextLocal"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:2659","type":"CtInvocationImpl","sourcecode":"org.mozilla.classfile.ClassFileWriter.addALoad(short)"},"status":-1},{"failures":[],"tindex":"d5eb5ee4-8ab3-11e6-ae49-070fc927a524","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.IRFactory:1827","type":"CtSwitchImpl","sourcecode":"switch (nodeType) {\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n        {\n            org.mozilla.javascript.Node org.mozilla.javascript.Node;\n            if (childType == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n                child.setType(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int);\n                org.mozilla.javascript.Node org.mozilla.javascript.Node = child;\n                org.mozilla.javascript.Node org.mozilla.javascript.Node = org.mozilla.javascript.Node.newString(child.getString());\n                n = new org.mozilla.javascript.Node(nodeType , left , right);\n            } else if ((childType == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) || (childType == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))) {\n                org.mozilla.javascript.Node org.mozilla.javascript.Node = child.getFirstChild();\n                org.mozilla.javascript.Node org.mozilla.javascript.Node = child.getLastChild();\n                child.removeChild(left);\n                child.removeChild(right);\n                n = new org.mozilla.javascript.Node(nodeType , left , right);\n            } else if (childType == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n                org.mozilla.javascript.Node org.mozilla.javascript.Node = child.getFirstChild();\n                child.removeChild(ref);\n                n = new org.mozilla.javascript.Node(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int , ref);\n            } else {\n                n = new org.mozilla.javascript.Node(nodeType , new org.mozilla.javascript.Node(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int) , child);\n            }\n            return n;\n        }\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n        if (childType == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n            child.setType(org.mozilla.javascript.Token.org.mozilla.javascript.Token.int);\n            return child;\n        } \n        break;\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n        if (childType == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n            int int = org.mozilla.javascript.ScriptRuntime.toInt32(child.getDouble());\n            child.setDouble((~value));\n            return child;\n        } \n        break;\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n        if (childType == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n            child.setDouble((-(child.getDouble())));\n            return child;\n        } \n        break;\n    case org.mozilla.javascript.Token.org.mozilla.javascript.Token.int :\n        {\n            int int = org.mozilla.javascript.IRFactory.isAlwaysDefinedBoolean(child);\n            if (status != 0) {\n                int int;\n                if (status == (org.mozilla.javascript.IRFactory.org.mozilla.javascript.IRFactory.int)) {\n                    type = org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n                } else {\n                    type = org.mozilla.javascript.Token.org.mozilla.javascript.Token.int;\n                }\n                if ((childType == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) || (childType == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))) {\n                    child.setType(type);\n                    return child;\n                } \n                return new org.mozilla.javascript.Node(type);\n            } \n            break;\n        }\n}"},"variableMap":{"childType":"org.mozilla.javascript.Token.FINALLY","org.mozilla.javascript.Token.GET_REF":"org.mozilla.javascript.Token.TARGET","org.mozilla.javascript.Token.NAME":"org.mozilla.javascript.Token.FINALLY","org.mozilla.javascript.Token.GETELEM":"org.mozilla.javascript.Token.TARGET","org.mozilla.javascript.Token.DEL_REF":"org.mozilla.javascript.Token.TARGET","nodeType":"org.mozilla.javascript.Token.TARGET","org.mozilla.javascript.Token.BINDNAME":"org.mozilla.javascript.Token.TARGET","org.mozilla.javascript.IRFactory.ALWAYS_TRUE_BOOLEAN":"org.mozilla.javascript.Token.FINALLY","org.mozilla.javascript.Token.NOT":"org.mozilla.javascript.Token.TARGET","org.mozilla.javascript.Token.DELPROP":"org.mozilla.javascript.Token.TARGET","org.mozilla.javascript.Token.FALSE":"org.mozilla.javascript.Token.FINALLY","org.mozilla.javascript.Token.TYPEOFNAME":"org.mozilla.javascript.Token.FINALLY","org.mozilla.javascript.Token.NEG":"org.mozilla.javascript.Token.FINALLY","org.mozilla.javascript.Token.GETPROP":"org.mozilla.javascript.Token.FINALLY","org.mozilla.javascript.Token.TRUE":"org.mozilla.javascript.Token.FINALLY","org.mozilla.javascript.Token.NUMBER":"org.mozilla.javascript.Token.TARGET","org.mozilla.javascript.Token.TYPEOF":"org.mozilla.javascript.Token.TARGET","org.mozilla.javascript.Token.BITNOT":"org.mozilla.javascript.Token.FINALLY","child":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:4207","type":"CtIfImpl","sourcecode":"if (node == null) {\n    return null;\n} else if ((node.getType()) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int)) {\n    return node;\n} else if ((node != null) && ((node.getType()) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))) {\n    org.mozilla.javascript.Node org.mozilla.javascript.Node = node.getNext();\n    if ((fBlock != null) && ((fBlock.getType()) == (org.mozilla.javascript.Token.org.mozilla.javascript.Token.int))) {\n        return fBlock;\n    } \n} "},"status":-1},{"failures":[],"tindex":"d5ece585-8ab3-11e6-ae49-4f0df1fd1f0f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.optimizer.Codegen:1447","type":"CtAssignmentImpl","sourcecode":"short[][i] = short"},"status":-1},{"failures":[],"tindex":"d5ece586-8ab3-11e6-ae49-c9309cf549e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeJavaObject:738","type":"CtIfImpl","sourcecode":"if ((type == (org.mozilla.javascript.ScriptRuntime.org.mozilla.javascript.ScriptRuntime.java.lang.Class<?>)) || (type == (java.lang.Long.java.lang.Long.java.lang.Class<java.lang.Long>))) {\n    if (valueClass == (org.mozilla.javascript.ScriptRuntime.org.mozilla.javascript.ScriptRuntime.java.lang.Class<?>)) {\n        return value;\n    } else {\n        final double double = java.lang.Double.longBitsToDouble(4890909195324358655L);\n        final double double = java.lang.Double.longBitsToDouble(-4332462841530417152L);\n        return java.lang.Long.valueOf(org.mozilla.javascript.NativeJavaObject.toInteger(value, org.mozilla.javascript.ScriptRuntime.org.mozilla.javascript.ScriptRuntime.java.lang.Class<?>, min, max));\n    }\n} "},"status":-1},{"failures":[],"tindex":"d5ece587-8ab3-11e6-ae49-875d7e7cb8d5","series":0,"name":"replace","transplant":{"position":"org.mozilla.javascript.NativeScript:117","type":"CtReturnImpl","sourcecode":"return nscript"},"variableMap":{"nscript":"org.mozilla.javascript.Scriptable.NOT_FOUND"},"type":"adrStmt","transplantationPoint":{"position":"org.mozilla.javascript.NativeArray:1586","type":"CtIfImpl","sourcecode":"if ((val != (org.mozilla.javascript.Scriptable.org.mozilla.javascript.Scriptable.java.lang.Object)) && (org.mozilla.javascript.ScriptRuntime.shallowEq(val, compareTo))) {\n    return java.lang.Long.valueOf(i);\n} "},"status":-1}],"header":{"groupId":"r","transformationCount":5,"projectType":"maven","artifactId":"r","generatorVersion":"1.0","version":"1.0-SNAPSHOT"}}