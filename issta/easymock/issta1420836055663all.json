[{"failures":[],"tindex":1,"variableMapping":{"org.easymock.internal.MocksControl.ONCE":"org.easymock.internal.MocksControl.ONCE","this":"this"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.RecordState:118","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:136","type":"CtIfImpl","sourcecode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} "},"status":-2},{"failures":[],"tindex":2,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.ReplayState:68","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:136","type":"CtIfImpl","sourcecode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} "},"status":-1},{"failures":[],"tindex":3,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.RecordState:144","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:136","type":"CtIfImpl","sourcecode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} "},"status":0},{"failures":[],"tindex":4,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.UnorderedBehavior:102","type":"CtIfImpl","sourcecode":"if ((this.boolean) != boolean) {\n    return false;\n} else if ((java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.isEmpty()) || (!(this.boolean))) {\n    return true;\n} else {\n    final org.easymock.internal.ExpectedInvocation org.easymock.internal.ExpectedInvocation = java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.get(((java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.size()) - 1)).getExpectedInvocation();\n    return org.easymock.internal.ExpectedInvocation.equals(org.easymock.internal.ExpectedInvocation);\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:136","type":"CtIfImpl","sourcecode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} "},"status":-2},{"failures":[],"tindex":5,"variableMapping":{"lastRange":"org.easymock.internal.MocksControl.ONCE"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.Results:39","type":"CtIfImpl","sourcecode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:136","type":"CtIfImpl","sourcecode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} "},"status":-2},{"failures":[],"tindex":6,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.ReplayState:105","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.ReplayState.throwWrappedIllegalStateException()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:136","type":"CtIfImpl","sourcecode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} "},"status":-2},{"failures":[],"tindex":7,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.RecordState:115","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:136","type":"CtIfImpl","sourcecode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} "},"status":0},{"failures":[],"tindex":8,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.MocksControl:239","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.makeThreadSafe(boolean);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:136","type":"CtIfImpl","sourcecode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} "},"status":-2},{"failures":[],"tindex":9,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:136","type":"CtIfImpl","sourcecode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} "},"status":0},{"failures":[],"tindex":10,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.easymock.EasyMockSupport:661","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object = null"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:118","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = this.java.lang.Object[][int]"},"status":-2},{"failures":[],"tindex":11,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:246","type":"CtLocalVariableImpl","sourcecode":"final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:118","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = this.java.lang.Object[][int]"},"status":-2},{"failures":[],"tindex":12,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.EasyMockSupport:710","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:118","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = this.java.lang.Object[][int]"},"status":-2},{"failures":[],"tindex":13,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:40","type":"CtLocalVariableImpl","sourcecode":"com.google.dexmaker.stock.ProxyBuilder<T> com.google.dexmaker.stock.ProxyBuilder<T> = com.google.dexmaker.stock.ProxyBuilder.com.google.dexmaker.stock.ProxyBuilder.forClass(java.lang.Class<T>).handler(org.easymock.internal.AndroidClassProxyFactory.MockHandler)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:118","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = this.java.lang.Object[][int]"},"status":-2},{"failures":[],"tindex":14,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.easymock.EasyMockSupport:661","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object = null"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:118","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = this.java.lang.Object[][int]"},"status":-2},{"failures":[],"tindex":15,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.EasyMockSupport:633","type":"CtLocalVariableImpl","sourcecode":"java.lang.IllegalAccessException java.lang.IllegalAccessException"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:118","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = this.java.lang.Object[][int]"},"status":-2},{"failures":[],"tindex":16,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.Invocation:119","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:118","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = this.java.lang.Object[][int]"},"status":-2},{"failures":[],"tindex":17,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.ExpectedInvocation:108","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<org.easymock.IArgumentMatcher>.hasNext()) {\n    java.lang.StringBuffer.append(\", \");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:118","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = this.java.lang.Object[][int]"},"status":-2},{"failures":[],"tindex":18,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:118","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = this.java.lang.Object[][int]"},"status":-2},{"failures":[],"tindex":19,"variableMapping":{"this":"this","mockName":"mockName"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.Invocation:199","type":"CtForEachImpl","sourcecode":"for (final char char : java.lang.String.substring(1).toCharArray()) {\n    if (!java.lang.Character.(java.lang.Character.isJavaIdentifierPart(char))) {\n        return false;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:195","type":"CtIfImpl","sourcecode":"if ((((java.lang.String.length()) == 0) || ((java.lang.String.indexOf(' ')) > (-1))) || (!java.lang.Character.(java.lang.Character.isJavaIdentifierStart(java.lang.String.charAt(0))))) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":20,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.Invocation:199","type":"CtForEachImpl","sourcecode":"for (final char char : java.lang.String.substring(1).toCharArray()) {\n    if (!java.lang.Character.(java.lang.Character.isJavaIdentifierPart(char))) {\n        return false;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:195","type":"CtIfImpl","sourcecode":"if ((((java.lang.String.length()) == 0) || ((java.lang.String.indexOf(' ')) > (-1))) || (!java.lang.Character.(java.lang.Character.isJavaIdentifierStart(java.lang.String.charAt(0))))) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":21,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.Invocation:199","type":"CtForEachImpl","sourcecode":"for (final char char : java.lang.String.substring(1).toCharArray()) {\n    if (!java.lang.Character.(java.lang.Character.isJavaIdentifierPart(char))) {\n        return false;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:195","type":"CtIfImpl","sourcecode":"if ((((java.lang.String.length()) == 0) || ((java.lang.String.indexOf(' ')) > (-1))) || (!java.lang.Character.(java.lang.Character.isJavaIdentifierStart(java.lang.String.charAt(0))))) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":22,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.EasyMock:466","type":"CtReturnImpl","sourcecode":"return org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:195","type":"CtIfImpl","sourcecode":"if ((((java.lang.String.length()) == 0) || ((java.lang.String.indexOf(' ')) > (-1))) || (!java.lang.Character.(java.lang.Character.isJavaIdentifierStart(java.lang.String.charAt(0))))) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":23,"variableMapping":{"this":"this","mockName":"mockName"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.Invocation:199","type":"CtForEachImpl","sourcecode":"for (final char char : java.lang.String.substring(1).toCharArray()) {\n    if (!java.lang.Character.(java.lang.Character.isJavaIdentifierPart(char))) {\n        return false;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:195","type":"CtIfImpl","sourcecode":"if ((((java.lang.String.length()) == 0) || ((java.lang.String.indexOf(' ')) > (-1))) || (!java.lang.Character.(java.lang.Character.isJavaIdentifierStart(java.lang.String.charAt(0))))) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":24,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.Invocation:199","type":"CtForEachImpl","sourcecode":"for (final char char : java.lang.String.substring(1).toCharArray()) {\n    if (!java.lang.Character.(java.lang.Character.isJavaIdentifierPart(char))) {\n        return false;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:195","type":"CtIfImpl","sourcecode":"if ((((java.lang.String.length()) == 0) || ((java.lang.String.indexOf(' ')) > (-1))) || (!java.lang.Character.(java.lang.Character.isJavaIdentifierStart(java.lang.String.charAt(0))))) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":25,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.Invocation:199","type":"CtForEachImpl","sourcecode":"for (final char char : java.lang.String.substring(1).toCharArray()) {\n    if (!java.lang.Character.(java.lang.Character.isJavaIdentifierPart(char))) {\n        return false;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:195","type":"CtIfImpl","sourcecode":"if ((((java.lang.String.length()) == 0) || ((java.lang.String.indexOf(' ')) > (-1))) || (!java.lang.Character.(java.lang.Character.isJavaIdentifierStart(java.lang.String.charAt(0))))) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":26,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:50","type":"CtInvocationImpl","sourcecode":"com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(java.lang.reflect.Constructor<?>.getParameterTypes()).constructorArgValues(java.lang.Object[])"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:195","type":"CtIfImpl","sourcecode":"if ((((java.lang.String.length()) == 0) || ((java.lang.String.indexOf(' ')) > (-1))) || (!java.lang.Character.(java.lang.Character.isJavaIdentifierStart(java.lang.String.charAt(0))))) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":27,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:195","type":"CtIfImpl","sourcecode":"if ((((java.lang.String.length()) == 0) || ((java.lang.String.indexOf(' ')) > (-1))) || (!java.lang.Character.(java.lang.Character.isJavaIdentifierStart(java.lang.String.charAt(0))))) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":28,"variableMapping":{"lastRange":"interval"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.Results:39","type":"CtIfImpl","sourcecode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Results:94","type":"CtIfImpl","sourcecode":"if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n    int = java.lang.Integer.int;\n} else {\n    int += org.easymock.internal.Range.getMaximum();\n}"},"status":-1},{"failures":[],"tindex":29,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.Results:55","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.Range.getMaximum()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Results:94","type":"CtIfImpl","sourcecode":"if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n    int = java.lang.Integer.int;\n} else {\n    int += org.easymock.internal.Range.getMaximum();\n}"},"status":-1},{"failures":[],"tindex":30,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.Results:39","type":"CtIfImpl","sourcecode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Results:94","type":"CtIfImpl","sourcecode":"if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n    int = java.lang.Integer.int;\n} else {\n    int += org.easymock.internal.Range.getMaximum();\n}"},"status":-2},{"failures":[],"tindex":31,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.ClassProxyFactory:168","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method[] != null) {\n    org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.setMockedMethods(java.lang.reflect.Method[]);\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Results:94","type":"CtIfImpl","sourcecode":"if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n    int = java.lang.Integer.int;\n} else {\n    int += org.easymock.internal.Range.getMaximum();\n}"},"status":-2},{"failures":[],"tindex":32,"variableMapping":{"lastRange":"interval"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.Results:39","type":"CtIfImpl","sourcecode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Results:94","type":"CtIfImpl","sourcecode":"if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n    int = java.lang.Integer.int;\n} else {\n    int += org.easymock.internal.Range.getMaximum();\n}"},"status":-1},{"failures":[],"tindex":33,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.Results:95","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Results:94","type":"CtIfImpl","sourcecode":"if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n    int = java.lang.Integer.int;\n} else {\n    int += org.easymock.internal.Range.getMaximum();\n}"},"status":-1},{"failures":[],"tindex":34,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.Results:39","type":"CtIfImpl","sourcecode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Results:94","type":"CtIfImpl","sourcecode":"if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n    int = java.lang.Integer.int;\n} else {\n    int += org.easymock.internal.Range.getMaximum();\n}"},"status":-2},{"failures":[],"tindex":35,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.EasyMock:1163","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Results:94","type":"CtIfImpl","sourcecode":"if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n    int = java.lang.Integer.int;\n} else {\n    int += org.easymock.internal.Range.getMaximum();\n}"},"status":-2},{"failures":[],"tindex":36,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Results:94","type":"CtIfImpl","sourcecode":"if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n    int = java.lang.Integer.int;\n} else {\n    int += org.easymock.internal.Range.getMaximum();\n}"},"status":-1},{"failures":[],"tindex":37,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.RecordState:86","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:199","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.AssertionErrorWrapper(new java.lang.AssertionError((((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))))"},"status":-1},{"failures":[],"tindex":38,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.EasyMock:560","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:199","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.AssertionErrorWrapper(new java.lang.AssertionError((((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))))"},"status":-1},{"failures":[],"tindex":39,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.MockBuilder:69","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:199","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.AssertionErrorWrapper(new java.lang.AssertionError((((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))))"},"status":-1},{"failures":[],"tindex":40,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.EasyMock:1332","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:199","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.AssertionErrorWrapper(new java.lang.AssertionError((((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))))"},"status":-1},{"failures":[],"tindex":41,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.ReplayState:149","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:199","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.AssertionErrorWrapper(new java.lang.AssertionError((((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))))"},"status":-2},{"failures":[],"tindex":42,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.RecordState:91","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:199","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.AssertionErrorWrapper(new java.lang.AssertionError((((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))))"},"status":-2},{"failures":[],"tindex":43,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.RecordState:246","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:199","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.AssertionErrorWrapper(new java.lang.AssertionError((((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))))"},"status":-2},{"failures":[],"tindex":44,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.MocksBehavior:89","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.Result"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:199","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.AssertionErrorWrapper(new java.lang.AssertionError((((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))))"},"status":-2},{"failures":[],"tindex":45,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:199","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.AssertionErrorWrapper(new java.lang.AssertionError((((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))))"},"status":-1},{"failures":[],"tindex":46,"variableMapping":{"each":"each"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.MocksBehavior:67","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.ExpectedInvocationAndResult.getResult()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:66","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.ExpectedInvocationAndResult.getExpectedInvocation().matches(org.easymock.internal.Invocation)) {\n    return org.easymock.internal.ExpectedInvocationAndResult.getResult();\n} "},"status":-1},{"failures":[],"tindex":47,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.MocksBehavior:67","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.ExpectedInvocationAndResult.getResult()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:66","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.ExpectedInvocationAndResult.getExpectedInvocation().matches(org.easymock.internal.Invocation)) {\n    return org.easymock.internal.ExpectedInvocationAndResult.getResult();\n} "},"status":-1},{"failures":[],"tindex":48,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.MocksBehavior:67","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.ExpectedInvocationAndResult.getResult()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:66","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.ExpectedInvocationAndResult.getExpectedInvocation().matches(org.easymock.internal.Invocation)) {\n    return org.easymock.internal.ExpectedInvocationAndResult.getResult();\n} "},"status":-1},{"failures":[],"tindex":49,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.Results:37","type":"CtIfImpl","sourcecode":"if (!(java.util.LinkedList<org.easymock.internal.Range>.isEmpty())) {\n    final org.easymock.internal.Range org.easymock.internal.Range = java.util.LinkedList<org.easymock.internal.Range>.getLast();\n    if (!(org.easymock.internal.Range.hasFixedCount())) {\n        throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n    } \n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:66","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.ExpectedInvocationAndResult.getExpectedInvocation().matches(org.easymock.internal.Invocation)) {\n    return org.easymock.internal.ExpectedInvocationAndResult.getResult();\n} "},"status":-2},{"failures":[],"tindex":50,"variableMapping":{"each":"each"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.MocksBehavior:67","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.ExpectedInvocationAndResult.getResult()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:66","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.ExpectedInvocationAndResult.getExpectedInvocation().matches(org.easymock.internal.Invocation)) {\n    return org.easymock.internal.ExpectedInvocationAndResult.getResult();\n} "},"status":-1},{"failures":[],"tindex":51,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.MocksBehavior:67","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.ExpectedInvocationAndResult.getResult()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:66","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.ExpectedInvocationAndResult.getExpectedInvocation().matches(org.easymock.internal.Invocation)) {\n    return org.easymock.internal.ExpectedInvocationAndResult.getResult();\n} "},"status":-1},{"failures":[],"tindex":52,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.MocksBehavior:67","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.ExpectedInvocationAndResult.getResult()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:66","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.ExpectedInvocationAndResult.getExpectedInvocation().matches(org.easymock.internal.Invocation)) {\n    return org.easymock.internal.ExpectedInvocationAndResult.getResult();\n} "},"status":-1},{"failures":[],"tindex":53,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.RecordState:318","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:66","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.ExpectedInvocationAndResult.getExpectedInvocation().matches(org.easymock.internal.Invocation)) {\n    return org.easymock.internal.ExpectedInvocationAndResult.getResult();\n} "},"status":-2},{"failures":[],"tindex":54,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:66","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.ExpectedInvocationAndResult.getExpectedInvocation().matches(org.easymock.internal.Invocation)) {\n    return org.easymock.internal.ExpectedInvocationAndResult.getResult();\n} "},"status":-1},{"failures":[],"tindex":55,"variableMapping":{"this":"this","mocks":"mocks"},"series":0,"name":"replace","transplant":{"position":"org.easymock.EasyMock:2052","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:2024","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}"},"status":-1},{"failures":[],"tindex":56,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.EasyMock:2079","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify();\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:2024","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}"},"status":-1},{"failures":[],"tindex":57,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.EasyMock:2052","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:2024","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}"},"status":-1},{"failures":[],"tindex":58,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.ReplayState:137","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.ReplayState.throwWrappedIllegalStateException()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:2024","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}"},"status":-2},{"failures":[],"tindex":59,"variableMapping":{"this":"this","mocks":"mocks"},"series":0,"name":"add","transplant":{"position":"org.easymock.EasyMock:2052","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:2024","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}"},"status":-1},{"failures":[],"tindex":60,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.MockBuilder:126","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:2024","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}"},"status":-2},{"failures":[],"tindex":61,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.EasyMock:2011","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:2024","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}"},"status":-1},{"failures":[],"tindex":62,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.UnorderedBehavior:60","type":"CtLocalVariableImpl","sourcecode":"final org.easymock.internal.Result org.easymock.internal.Result = org.easymock.internal.ExpectedInvocationAndResults.getResults().next()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:2024","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}"},"status":-2},{"failures":[],"tindex":63,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:2024","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset();\n}"},"status":-1},{"failures":[],"tindex":64,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","type":"CtReturnImpl","sourcecode":"return \"geq\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:148","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[],"tindex":65,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.matchers.LessThan:34","type":"CtReturnImpl","sourcecode":"return \"lt\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:148","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[],"tindex":66,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","type":"CtReturnImpl","sourcecode":"return \"leq\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:148","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[],"tindex":67,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:378","type":"CtReturnImpl","sourcecode":"return new java.lang.Class[]{ java.lang.Class<?> }"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:148","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":68,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","type":"CtReturnImpl","sourcecode":"return \"geq\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:148","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":69,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","type":"CtReturnImpl","sourcecode":"return \"gt\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:148","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":70,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","type":"CtReturnImpl","sourcecode":"return \"cmpEq\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:148","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":71,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.EasyMock:1051","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Long>(long))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:148","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":72,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:148","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[],"tindex":73,"variableMapping":{"values":"values"},"series":0,"name":"replace","transplant":{"position":"org.easymock.Capture:131","type":"CtIfImpl","sourcecode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:135","type":"CtReturnImpl","sourcecode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))"},"status":-1},{"failures":[],"tindex":74,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","type":"CtReturnImpl","sourcecode":"return \"cmpEq\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:135","type":"CtReturnImpl","sourcecode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))"},"status":-1},{"failures":[],"tindex":75,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.Capture:137","type":"CtReturnImpl","sourcecode":"return java.util.List<T>.toString()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:135","type":"CtReturnImpl","sourcecode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))"},"status":-1},{"failures":[],"tindex":76,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.Invocation:183","type":"CtLocalVariableImpl","sourcecode":"final java.lang.SecurityException java.lang.SecurityException"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:135","type":"CtReturnImpl","sourcecode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))"},"status":-1},{"failures":[],"tindex":77,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","type":"CtReturnImpl","sourcecode":"return \"gt\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:135","type":"CtReturnImpl","sourcecode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))"},"status":-2},{"failures":[],"tindex":78,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","type":"CtReturnImpl","sourcecode":"return \"gt\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:135","type":"CtReturnImpl","sourcecode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))"},"status":-2},{"failures":[],"tindex":79,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.Invocation:154","type":"CtReturnImpl","sourcecode":"return (java.lang.String + \".\") + java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:135","type":"CtReturnImpl","sourcecode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))"},"status":-2},{"failures":[],"tindex":80,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:39","type":"CtTryImpl","sourcecode":"try {\n    com.google.dexmaker.stock.ProxyBuilder<T> com.google.dexmaker.stock.ProxyBuilder<T> = com.google.dexmaker.stock.ProxyBuilder.com.google.dexmaker.stock.ProxyBuilder.forClass(java.lang.Class<T>).handler(org.easymock.internal.AndroidClassProxyFactory.MockHandler);\n    if (org.easymock.ConstructorArgs != null) {\n        com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(org.easymock.ConstructorArgs.getConstructor().getParameterTypes()).constructorArgValues(org.easymock.ConstructorArgs.getInitArgs());\n    } else {\n        try {\n            org.easymock.internal.DefaultClassInstantiator org.easymock.internal.DefaultClassInstantiator = new org.easymock.internal.DefaultClassInstantiator();\n            java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> = org.easymock.internal.DefaultClassInstantiator.getConstructorToUse(java.lang.Class<T>);\n            java.lang.Object[] java.lang.Object[] = org.easymock.internal.DefaultClassInstantiator.getArgsForTypes(java.lang.reflect.Constructor<?>.getParameterTypes());\n            com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(java.lang.reflect.Constructor<?>.getParameterTypes()).constructorArgValues(java.lang.Object[]);\n        } catch (java.lang.InstantiationException java.lang.InstantiationException) {\n            throw new java.lang.RuntimeException((\"Fail to instantiate mock for \" + java.lang.Class<T>));\n        }\n    }\n    return com.google.dexmaker.stock.ProxyBuilder<T>.build();\n} catch (java.io.IOException java.io.IOException) {\n    throw new java.lang.RuntimeException((\"Failed to mock \" + java.lang.Class<T>) , java.io.IOException);\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:135","type":"CtReturnImpl","sourcecode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))"},"status":-2},{"failures":[],"tindex":81,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:135","type":"CtReturnImpl","sourcecode":"return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0))"},"status":-1},{"failures":[],"tindex":82,"variableMapping":{"bridgeMethod":"method"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","type":"CtAssertImpl","sourcecode":"assert java.lang.reflect.Method != null : \"Method must not be null\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Method.setAccessible(boolean)"},"status":0},{"failures":[],"tindex":83,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:123","type":"CtNewClassImpl","sourcecode":"new org.easymock.internal.JavaProxyFactory()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Method.setAccessible(boolean)"},"status":0},{"failures":[],"tindex":84,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.UnorderedBehavior:89","type":"CtIfImpl","sourcecode":"if ((boolean && boolean) && (!boolean)) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Method.setAccessible(boolean)"},"status":-2},{"failures":[],"tindex":85,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:237","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Method.setAccessible(boolean)"},"status":-2},{"failures":[],"tindex":86,"variableMapping":{"result":"method","bridgeMethod":"method"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Method.setAccessible(boolean)"},"status":0},{"failures":[],"tindex":87,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.ReflectionUtils:102","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Method.setAccessible(boolean)"},"status":-2},{"failures":[],"tindex":88,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.UnorderedBehavior:89","type":"CtIfImpl","sourcecode":"if ((boolean && boolean) && (!boolean)) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Method.setAccessible(boolean)"},"status":-2},{"failures":[],"tindex":89,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.RecordState:183","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksBehavior.addExpected(org.easymock.internal.ExpectedInvocation, ((org.easymock.internal.Result) != null ? org.easymock.internal.Result : org.easymock.internal.Result.org.easymock.internal.Result.createReturnResult(null)), org.easymock.internal.Range)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Method.setAccessible(boolean)"},"status":-2},{"failures":[],"tindex":90,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:196","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Method.setAccessible(boolean)"},"status":0},{"failureDictionary":{}},{"memory":8006,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2600},{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2600},{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2600},{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2600}],"os.version":"3.2.0-4-amd64"}]
