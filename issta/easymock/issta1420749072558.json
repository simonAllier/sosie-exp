[{"failures":[],"tindex":1,"variableMapping":{"stream":"in"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.ClassProxyFactory:107","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:70","type":"CtInvocationImpl","sourcecode":"java.io.InputStream.close()"},"status":-2},{"failures":[],"tindex":2,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.EasyMockProperties:63","type":"CtAssignmentImpl","sourcecode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:70","type":"CtInvocationImpl","sourcecode":"java.io.InputStream.close()"},"status":-2},{"failures":[],"tindex":3,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.ClassProxyFactory:107","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:70","type":"CtInvocationImpl","sourcecode":"java.io.InputStream.close()"},"status":-2},{"failures":[],"tindex":4,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:225","type":"CtReturnImpl","sourcecode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:70","type":"CtInvocationImpl","sourcecode":"java.io.InputStream.close()"},"status":-2},{"failures":[],"tindex":5,"variableMapping":{"stream":"in"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.ClassProxyFactory:107","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:70","type":"CtInvocationImpl","sourcecode":"java.io.InputStream.close()"},"status":-2},{"failures":[],"tindex":6,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:123","type":"CtNewClassImpl","sourcecode":"new org.easymock.internal.JavaProxyFactory()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:70","type":"CtInvocationImpl","sourcecode":"java.io.InputStream.close()"},"status":0},{"failures":[],"tindex":7,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.ClassProxyFactory:107","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:70","type":"CtInvocationImpl","sourcecode":"java.io.InputStream.close()"},"status":-2},{"failures":[],"tindex":8,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.MocksControl:212","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksControlState.replay()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:70","type":"CtInvocationImpl","sourcecode":"java.io.InputStream.close()"},"status":-2},{"failures":[],"tindex":9,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:70","type":"CtInvocationImpl","sourcecode":"java.io.InputStream.close()"},"status":-2},{"failures":[],"tindex":10,"variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"verified"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.AndroidSupport:27","type":"CtAssignmentImpl","sourcecode":"org.easymock.internal.AndroidSupport.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:156","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":-1},{"failures":[],"tindex":11,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:123","type":"CtNewClassImpl","sourcecode":"new org.easymock.internal.JavaProxyFactory()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:156","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":-1},{"failures":[],"tindex":12,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.AndroidSupport:27","type":"CtAssignmentImpl","sourcecode":"org.easymock.internal.AndroidSupport.boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:156","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":-2},{"failures":[],"tindex":13,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.Results:74","type":"CtReturnImpl","sourcecode":"return java.util.List<org.easymock.internal.Result>.get(int)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:156","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":-2},{"failures":[],"tindex":14,"variableMapping":{"value":"verified","checkOrder":"verified"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.MocksBehavior:177","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:156","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":0},{"failures":[],"tindex":15,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:123","type":"CtNewClassImpl","sourcecode":"new org.easymock.internal.JavaProxyFactory()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:156","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":0},{"failures":[],"tindex":16,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.AndroidSupport:29","type":"CtAssignmentImpl","sourcecode":"org.easymock.internal.AndroidSupport.boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:156","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":-2},{"failures":[],"tindex":17,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.EasyMock:2039","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:156","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":-2},{"failures":[],"tindex":18,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:156","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":-1},{"failures":[],"tindex":19,"variableMapping":{"methodName":"arg"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:183","type":"CtThrowImpl","sourcecode":"throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","type":"CtThrowImpl","sourcecode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)"},"status":-1},{"failures":[],"tindex":20,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.RecordState:292","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","type":"CtThrowImpl","sourcecode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)"},"status":-1},{"failures":[],"tindex":21,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:45","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","type":"CtThrowImpl","sourcecode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)"},"status":-2},{"failures":[],"tindex":22,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.ArgumentToString:91","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\", \")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","type":"CtThrowImpl","sourcecode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)"},"status":-2},{"failures":[],"tindex":23,"variableMapping":{"e":"arg"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.MockBuilder:153","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","type":"CtThrowImpl","sourcecode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)"},"status":-2},{"failures":[],"tindex":24,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.ConstructorArgs:51","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","type":"CtThrowImpl","sourcecode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)"},"status":-2},{"failures":[],"tindex":25,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","type":"CtThrowImpl","sourcecode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)"},"status":-2},{"failures":[],"tindex":26,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.Capture:124","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","type":"CtThrowImpl","sourcecode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)"},"status":-2},{"failures":[],"tindex":27,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.ConstructorArgs:81","type":"CtThrowImpl","sourcecode":"throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object)"},"status":-1},{"failures":[],"tindex":28,"variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.MockBuilder:196","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)"},"status":-1},{"failures":[],"tindex":29,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.MockBuilder:196","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)"},"status":-1},{"failures":[],"tindex":30,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.MockBuilder:192","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)"},"status":-1},{"failures":[],"tindex":31,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.AndroidSupport:28","type":"CtLocalVariableImpl","sourcecode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)"},"status":-2},{"failures":[],"tindex":32,"variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.MockBuilder:196","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)"},"status":-2},{"failures":[],"tindex":33,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.MockBuilder:196","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)"},"status":-2},{"failures":[],"tindex":34,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.MockBuilder:192","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)"},"status":-2},{"failures":[],"tindex":35,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:149","type":"CtInvocationImpl","sourcecode":"java.io.DataOutputStream.writeByte(java.io.ObjectStreamConstants.byte)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)"},"status":-2},{"failures":[],"tindex":36,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)"},"status":-2},{"failures":[],"tindex":37,"variableMapping":{"bounds":"genericParameters"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:353","type":"CtLocalVariableImpl","sourcecode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][0]"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","type":"CtLocalVariableImpl","sourcecode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]"},"status":0},{"failures":[],"tindex":38,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.ReflectionUtils:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.reflect.Method java.lang.reflect.Method = null"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","type":"CtLocalVariableImpl","sourcecode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]"},"status":-2},{"failures":[],"tindex":39,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:353","type":"CtLocalVariableImpl","sourcecode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][0]"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","type":"CtLocalVariableImpl","sourcecode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]"},"status":-2},{"failures":[],"tindex":40,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.EasyMock:1963","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Float>(org.easymock.Capture<java.lang.Float>))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","type":"CtLocalVariableImpl","sourcecode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]"},"status":-2},{"failures":[],"tindex":41,"variableMapping":{"bounds":"genericParameters"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:353","type":"CtLocalVariableImpl","sourcecode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][0]"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","type":"CtLocalVariableImpl","sourcecode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]"},"status":-2},{"failures":[],"tindex":42,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.ConstructorArgs:71","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Exception java.lang.Exception"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","type":"CtLocalVariableImpl","sourcecode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]"},"status":-2},{"failures":[],"tindex":43,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","type":"CtLocalVariableImpl","sourcecode":"java.lang.reflect.Type java.lang.reflect.Type = null"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","type":"CtLocalVariableImpl","sourcecode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]"},"status":-2},{"failures":[],"tindex":44,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.RecordState:127","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","type":"CtLocalVariableImpl","sourcecode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]"},"status":-2},{"failures":[],"tindex":45,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","type":"CtLocalVariableImpl","sourcecode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]"},"status":-2},{"failures":[],"tindex":46,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.easymock.EasyMock:2125","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:246","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))"},"status":-1},{"failures":[],"tindex":47,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.EasyMock:560","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:246","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))"},"status":-1},{"failures":[],"tindex":48,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.MockBuilder:236","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:246","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))"},"status":-1},{"failures":[],"tindex":49,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:137","type":"CtInvocationImpl","sourcecode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:246","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))"},"status":-2},{"failures":[],"tindex":50,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.MockBuilder:236","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:246","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))"},"status":-2},{"failures":[],"tindex":51,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.RecordState:86","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:246","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))"},"status":-2},{"failures":[],"tindex":52,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.MocksControl:106","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:246","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))"},"status":-2},{"failures":[],"tindex":53,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.Invocation:97","type":"CtLocalVariableImpl","sourcecode":"final org.easymock.internal.Invocation org.easymock.internal.Invocation = ((org.easymock.internal.Invocation)(java.lang.Object))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:246","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))"},"status":-2},{"failures":[],"tindex":54,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:246","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))"},"status":-1},{"failures":[],"tindex":55,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.RecordState:195","type":"CtReturnImpl","sourcecode":"return java.lang.Number.byteValue()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","type":"CtReturnImpl","sourcecode":"return java.lang.Object"},"status":-2},{"failures":[],"tindex":56,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:390","type":"CtReturnImpl","sourcecode":"return java.util.List<java.lang.Class<?>>.toArray(new java.lang.Class[java.util.List<java.lang.Class<?>>.size()])"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","type":"CtReturnImpl","sourcecode":"return java.lang.Object"},"status":-2},{"failures":[],"tindex":57,"variableMapping":{"number":"expected"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.RecordState:207","type":"CtReturnImpl","sourcecode":"return java.lang.Number"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","type":"CtReturnImpl","sourcecode":"return java.lang.Object"},"status":-2},{"failures":[],"tindex":58,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.ClassProxyFactory:67","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isAbstract(java.lang.reflect.Method.getModifiers())) {\n    return java.lang.reflect.InvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]);\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","type":"CtReturnImpl","sourcecode":"return java.lang.Object"},"status":-2},{"failures":[],"tindex":59,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.ExpectedInvocation:94","type":"CtIfImpl","sourcecode":"if (!(java.util.List<org.easymock.IArgumentMatcher>.get(int).matches(java.lang.Object[][int]))) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","type":"CtReturnImpl","sourcecode":"return java.lang.Object"},"status":-2},{"failures":[],"tindex":60,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:48","type":"CtReturnImpl","sourcecode":"return java.lang.Object"},"status":-2},{"failures":[],"tindex":61,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.easymock.Capture:132","type":"CtReturnImpl","sourcecode":"return \"Nothing captured yet\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:1790","type":"CtReturnImpl","sourcecode":"return null"},"status":0},{"failures":[],"tindex":62,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","type":"CtReturnImpl","sourcecode":"return \"leq\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:1790","type":"CtReturnImpl","sourcecode":"return null"},"status":0},{"failures":[],"tindex":63,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.matchers.LessThan:34","type":"CtReturnImpl","sourcecode":"return \"lt\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:1790","type":"CtReturnImpl","sourcecode":"return null"},"status":0},{"failures":[],"tindex":64,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.MockBuilder:152","type":"CtLocalVariableImpl","sourcecode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:1790","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":65,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","type":"CtReturnImpl","sourcecode":"return \"geq\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:1790","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":66,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","type":"CtReturnImpl","sourcecode":"return \"leq\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:1790","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":67,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","type":"CtReturnImpl","sourcecode":"return \"cmpEq\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:1790","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":68,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Long = ((java.lang.Long)(java.lang.reflect.Method.invoke(null, new java.lang.Object[]{ java.lang.Class<?> })));\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" should have been accessible\"));\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())));\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:1790","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":69,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:1790","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":70,"variableMapping":{"clazz":"clazz"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:90","type":"CtReturnImpl","sourcecode":"return java.lang.Class<?>.getConstructor(new java.lang.Class[0])"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:89","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Class<?>.getConstructor(new java.lang.Class[0]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    if ((java.lang.Class<?>.getConstructors().int) == 0) {\n        throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n    } \n    return java.lang.Class<?>.getConstructors()[0];\n}"},"status":-2},{"failures":[],"tindex":71,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:96","type":"CtReturnImpl","sourcecode":"return java.lang.Class<?>.getConstructors()[0]"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:89","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Class<?>.getConstructor(new java.lang.Class[0]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    if ((java.lang.Class<?>.getConstructors().int) == 0) {\n        throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n    } \n    return java.lang.Class<?>.getConstructors()[0];\n}"},"status":0},{"failures":[],"tindex":72,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:90","type":"CtReturnImpl","sourcecode":"return java.lang.Class<?>.getConstructor(new java.lang.Class[0])"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:89","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Class<?>.getConstructor(new java.lang.Class[0]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    if ((java.lang.Class<?>.getConstructors().int) == 0) {\n        throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n    } \n    return java.lang.Class<?>.getConstructors()[0];\n}"},"status":-2},{"failures":[],"tindex":73,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.ErrorMessage:54","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\" (+1)\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:89","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Class<?>.getConstructor(new java.lang.Class[0]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    if ((java.lang.Class<?>.getConstructors().int) == 0) {\n        throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n    } \n    return java.lang.Class<?>.getConstructors()[0];\n}"},"status":-2},{"failures":[],"tindex":74,"variableMapping":{"clazz":"clazz"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:96","type":"CtReturnImpl","sourcecode":"return java.lang.Class<?>.getConstructors()[0]"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:89","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Class<?>.getConstructor(new java.lang.Class[0]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    if ((java.lang.Class<?>.getConstructors().int) == 0) {\n        throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n    } \n    return java.lang.Class<?>.getConstructors()[0];\n}"},"status":-2},{"failures":[],"tindex":75,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:90","type":"CtReturnImpl","sourcecode":"return java.lang.Class<?>.getConstructor(new java.lang.Class[0])"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:89","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Class<?>.getConstructor(new java.lang.Class[0]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    if ((java.lang.Class<?>.getConstructors().int) == 0) {\n        throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n    } \n    return java.lang.Class<?>.getConstructors()[0];\n}"},"status":-2},{"failures":[],"tindex":76,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:90","type":"CtReturnImpl","sourcecode":"return java.lang.Class<?>.getConstructor(new java.lang.Class[0])"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:89","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Class<?>.getConstructor(new java.lang.Class[0]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    if ((java.lang.Class<?>.getConstructors().int) == 0) {\n        throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n    } \n    return java.lang.Class<?>.getConstructors()[0];\n}"},"status":-2},{"failures":[],"tindex":77,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.EasyMock:1915","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<T>(org.easymock.Capture<T>))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:89","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Class<?>.getConstructor(new java.lang.Class[0]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    if ((java.lang.Class<?>.getConstructors().int) == 0) {\n        throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n    } \n    return java.lang.Class<?>.getConstructors()[0];\n}"},"status":-2},{"failures":[],"tindex":78,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:89","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Class<?>.getConstructor(new java.lang.Class[0]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    if ((java.lang.Class<?>.getConstructors().int) == 0) {\n        throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n    } \n    return java.lang.Class<?>.getConstructors()[0];\n}"},"status":-2},{"failures":[],"tindex":79,"variableMapping":{"result":"invocation"},"series":0,"name":"replace","transplant":{"position":"org.easymock.EasyMock:2124","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:84","type":"CtForEachImpl","sourcecode":"for (final org.easymock.internal.ExpectedInvocationAndResults org.easymock.internal.ExpectedInvocationAndResults : java.util.List<org.easymock.internal.ExpectedInvocationAndResults>) {\n    final boolean boolean = !(boolean);\n    final boolean boolean = org.easymock.internal.ExpectedInvocationAndResults.getResults().hasValidCallCount();\n    final boolean boolean = (org.easymock.internal.Invocation != null) && (org.easymock.internal.ExpectedInvocationAndResults.getExpectedInvocation().matches(org.easymock.internal.Invocation));\n    if ((boolean && boolean) && (!boolean)) {\n        continue;\n    } \n    final org.easymock.internal.ErrorMessage org.easymock.internal.ErrorMessage = new org.easymock.internal.ErrorMessage(boolean , org.easymock.internal.ExpectedInvocationAndResults.toString() , org.easymock.internal.ExpectedInvocationAndResults.getResults().getCallCount());\n    java.util.List<org.easymock.internal.ErrorMessage>.add(org.easymock.internal.ErrorMessage);\n}"},"status":-1},{"failures":[],"tindex":80,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.ExpectedInvocation:49","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.Invocation.getArguments()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:84","type":"CtForEachImpl","sourcecode":"for (final org.easymock.internal.ExpectedInvocationAndResults org.easymock.internal.ExpectedInvocationAndResults : java.util.List<org.easymock.internal.ExpectedInvocationAndResults>) {\n    final boolean boolean = !(boolean);\n    final boolean boolean = org.easymock.internal.ExpectedInvocationAndResults.getResults().hasValidCallCount();\n    final boolean boolean = (org.easymock.internal.Invocation != null) && (org.easymock.internal.ExpectedInvocationAndResults.getExpectedInvocation().matches(org.easymock.internal.Invocation));\n    if ((boolean && boolean) && (!boolean)) {\n        continue;\n    } \n    final org.easymock.internal.ErrorMessage org.easymock.internal.ErrorMessage = new org.easymock.internal.ErrorMessage(boolean , org.easymock.internal.ExpectedInvocationAndResults.toString() , org.easymock.internal.ExpectedInvocationAndResults.getResults().getCallCount());\n    java.util.List<org.easymock.internal.ErrorMessage>.add(org.easymock.internal.ErrorMessage);\n}"},"status":-1},{"failures":[],"tindex":81,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.EasyMock:2124","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:84","type":"CtForEachImpl","sourcecode":"for (final org.easymock.internal.ExpectedInvocationAndResults org.easymock.internal.ExpectedInvocationAndResults : java.util.List<org.easymock.internal.ExpectedInvocationAndResults>) {\n    final boolean boolean = !(boolean);\n    final boolean boolean = org.easymock.internal.ExpectedInvocationAndResults.getResults().hasValidCallCount();\n    final boolean boolean = (org.easymock.internal.Invocation != null) && (org.easymock.internal.ExpectedInvocationAndResults.getExpectedInvocation().matches(org.easymock.internal.Invocation));\n    if ((boolean && boolean) && (!boolean)) {\n        continue;\n    } \n    final org.easymock.internal.ErrorMessage org.easymock.internal.ErrorMessage = new org.easymock.internal.ErrorMessage(boolean , org.easymock.internal.ExpectedInvocationAndResults.toString() , org.easymock.internal.ExpectedInvocationAndResults.getResults().getCallCount());\n    java.util.List<org.easymock.internal.ErrorMessage>.add(org.easymock.internal.ErrorMessage);\n}"},"status":-2},{"failures":[],"tindex":82,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.ClassProxyFactory:107","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:84","type":"CtForEachImpl","sourcecode":"for (final org.easymock.internal.ExpectedInvocationAndResults org.easymock.internal.ExpectedInvocationAndResults : java.util.List<org.easymock.internal.ExpectedInvocationAndResults>) {\n    final boolean boolean = !(boolean);\n    final boolean boolean = org.easymock.internal.ExpectedInvocationAndResults.getResults().hasValidCallCount();\n    final boolean boolean = (org.easymock.internal.Invocation != null) && (org.easymock.internal.ExpectedInvocationAndResults.getExpectedInvocation().matches(org.easymock.internal.Invocation));\n    if ((boolean && boolean) && (!boolean)) {\n        continue;\n    } \n    final org.easymock.internal.ErrorMessage org.easymock.internal.ErrorMessage = new org.easymock.internal.ErrorMessage(boolean , org.easymock.internal.ExpectedInvocationAndResults.toString() , org.easymock.internal.ExpectedInvocationAndResults.getResults().getCallCount());\n    java.util.List<org.easymock.internal.ErrorMessage>.add(org.easymock.internal.ErrorMessage);\n}"},"status":-2},{"failures":[],"tindex":83,"variableMapping":{"result":"invocation"},"series":0,"name":"add","transplant":{"position":"org.easymock.EasyMock:2124","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.Invocation == null) {\n    throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:84","type":"CtForEachImpl","sourcecode":"for (final org.easymock.internal.ExpectedInvocationAndResults org.easymock.internal.ExpectedInvocationAndResults : java.util.List<org.easymock.internal.ExpectedInvocationAndResults>) {\n    final boolean boolean = !(boolean);\n    final boolean boolean = org.easymock.internal.ExpectedInvocationAndResults.getResults().hasValidCallCount();\n    final boolean boolean = (org.easymock.internal.Invocation != null) && (org.easymock.internal.ExpectedInvocationAndResults.getExpectedInvocation().matches(org.easymock.internal.Invocation));\n    if ((boolean && boolean) && (!boolean)) {\n        continue;\n    } \n    final org.easymock.internal.ErrorMessage org.easymock.internal.ErrorMessage = new org.easymock.internal.ErrorMessage(boolean , org.easymock.internal.ExpectedInvocationAndResults.toString() , org.easymock.internal.ExpectedInvocationAndResults.getResults().getCallCount());\n    java.util.List<org.easymock.internal.ErrorMessage>.add(org.easymock.internal.ErrorMessage);\n}"},"status":-1},{"failures":[],"tindex":84,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.ExpectedInvocation:49","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.Invocation.getArguments()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:84","type":"CtForEachImpl","sourcecode":"for (final org.easymock.internal.ExpectedInvocationAndResults org.easymock.internal.ExpectedInvocationAndResults : java.util.List<org.easymock.internal.ExpectedInvocationAndResults>) {\n    final boolean boolean = !(boolean);\n    final boolean boolean = org.easymock.internal.ExpectedInvocationAndResults.getResults().hasValidCallCount();\n    final boolean boolean = (org.easymock.internal.Invocation != null) && (org.easymock.internal.ExpectedInvocationAndResults.getExpectedInvocation().matches(org.easymock.internal.Invocation));\n    if ((boolean && boolean) && (!boolean)) {\n        continue;\n    } \n    final org.easymock.internal.ErrorMessage org.easymock.internal.ErrorMessage = new org.easymock.internal.ErrorMessage(boolean , org.easymock.internal.ExpectedInvocationAndResults.toString() , org.easymock.internal.ExpectedInvocationAndResults.getResults().getCallCount());\n    java.util.List<org.easymock.internal.ErrorMessage>.add(org.easymock.internal.ErrorMessage);\n}"},"status":-1},{"failures":[],"tindex":85,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.UnorderedBehavior:89","type":"CtIfImpl","sourcecode":"if ((boolean && boolean) && (!boolean)) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:84","type":"CtForEachImpl","sourcecode":"for (final org.easymock.internal.ExpectedInvocationAndResults org.easymock.internal.ExpectedInvocationAndResults : java.util.List<org.easymock.internal.ExpectedInvocationAndResults>) {\n    final boolean boolean = !(boolean);\n    final boolean boolean = org.easymock.internal.ExpectedInvocationAndResults.getResults().hasValidCallCount();\n    final boolean boolean = (org.easymock.internal.Invocation != null) && (org.easymock.internal.ExpectedInvocationAndResults.getExpectedInvocation().matches(org.easymock.internal.Invocation));\n    if ((boolean && boolean) && (!boolean)) {\n        continue;\n    } \n    final org.easymock.internal.ErrorMessage org.easymock.internal.ErrorMessage = new org.easymock.internal.ErrorMessage(boolean , org.easymock.internal.ExpectedInvocationAndResults.toString() , org.easymock.internal.ExpectedInvocationAndResults.getResults().getCallCount());\n    java.util.List<org.easymock.internal.ErrorMessage>.add(org.easymock.internal.ErrorMessage);\n}"},"status":-2},{"failures":[],"tindex":86,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.MocksBehavior:96","type":"CtLocalVariableImpl","sourcecode":"org.easymock.internal.Result org.easymock.internal.Result = org.easymock.internal.MocksBehavior.getStubResult(org.easymock.internal.Invocation)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:84","type":"CtForEachImpl","sourcecode":"for (final org.easymock.internal.ExpectedInvocationAndResults org.easymock.internal.ExpectedInvocationAndResults : java.util.List<org.easymock.internal.ExpectedInvocationAndResults>) {\n    final boolean boolean = !(boolean);\n    final boolean boolean = org.easymock.internal.ExpectedInvocationAndResults.getResults().hasValidCallCount();\n    final boolean boolean = (org.easymock.internal.Invocation != null) && (org.easymock.internal.ExpectedInvocationAndResults.getExpectedInvocation().matches(org.easymock.internal.Invocation));\n    if ((boolean && boolean) && (!boolean)) {\n        continue;\n    } \n    final org.easymock.internal.ErrorMessage org.easymock.internal.ErrorMessage = new org.easymock.internal.ErrorMessage(boolean , org.easymock.internal.ExpectedInvocationAndResults.toString() , org.easymock.internal.ExpectedInvocationAndResults.getResults().getCallCount());\n    java.util.List<org.easymock.internal.ErrorMessage>.add(org.easymock.internal.ErrorMessage);\n}"},"status":-2},{"failures":[],"tindex":87,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:84","type":"CtForEachImpl","sourcecode":"for (final org.easymock.internal.ExpectedInvocationAndResults org.easymock.internal.ExpectedInvocationAndResults : java.util.List<org.easymock.internal.ExpectedInvocationAndResults>) {\n    final boolean boolean = !(boolean);\n    final boolean boolean = org.easymock.internal.ExpectedInvocationAndResults.getResults().hasValidCallCount();\n    final boolean boolean = (org.easymock.internal.Invocation != null) && (org.easymock.internal.ExpectedInvocationAndResults.getExpectedInvocation().matches(org.easymock.internal.Invocation));\n    if ((boolean && boolean) && (!boolean)) {\n        continue;\n    } \n    final org.easymock.internal.ErrorMessage org.easymock.internal.ErrorMessage = new org.easymock.internal.ErrorMessage(boolean , org.easymock.internal.ExpectedInvocationAndResults.toString() , org.easymock.internal.ExpectedInvocationAndResults.getResults().getCallCount());\n    java.util.List<org.easymock.internal.ErrorMessage>.add(org.easymock.internal.ErrorMessage);\n}"},"status":-1},{"failureDictionary":{}},{"memory":16079,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":4,"vendor":"Intel","model":"Xeon","mhz":2534},{"core":4,"vendor":"Intel","model":"Xeon","mhz":2534},{"core":4,"vendor":"Intel","model":"Xeon","mhz":2534},{"core":4,"vendor":"Intel","model":"Xeon","mhz":2534}],"os.version":"3.2.0-4-amd64"}]
