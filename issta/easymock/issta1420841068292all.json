[{"failures":[],"tindex":1,"variableMapping":{"controls":"controls"},"series":0,"name":"replace","transplant":{"position":"org.easymock.EasyMockSupport:584","type":"CtForEachImpl","sourcecode":"for (final org.easymock.IMocksControl org.easymock.IMocksControl : java.util.List<org.easymock.IMocksControl>) {\n    org.easymock.IMocksControl.resetToDefault();\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:573","type":"CtForEachImpl","sourcecode":"for (final org.easymock.IMocksControl org.easymock.IMocksControl : java.util.List<org.easymock.IMocksControl>) {\n    org.easymock.IMocksControl.resetToNice();\n}"},"status":-1},{"failures":[],"tindex":2,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.EasyMockSupport:595","type":"CtForEachImpl","sourcecode":"for (final org.easymock.IMocksControl org.easymock.IMocksControl : java.util.List<org.easymock.IMocksControl>) {\n    org.easymock.IMocksControl.resetToStrict();\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:573","type":"CtForEachImpl","sourcecode":"for (final org.easymock.IMocksControl org.easymock.IMocksControl : java.util.List<org.easymock.IMocksControl>) {\n    org.easymock.IMocksControl.resetToNice();\n}"},"status":-1},{"failures":[],"tindex":3,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.EasyMockSupport:595","type":"CtForEachImpl","sourcecode":"for (final org.easymock.IMocksControl org.easymock.IMocksControl : java.util.List<org.easymock.IMocksControl>) {\n    org.easymock.IMocksControl.resetToStrict();\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:573","type":"CtForEachImpl","sourcecode":"for (final org.easymock.IMocksControl org.easymock.IMocksControl : java.util.List<org.easymock.IMocksControl>) {\n    org.easymock.IMocksControl.resetToNice();\n}"},"status":-1},{"failures":[],"tindex":4,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:377","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.isInterface()) {\n    return new java.lang.Class[]{ java.lang.Class<?> };\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:573","type":"CtForEachImpl","sourcecode":"for (final org.easymock.IMocksControl org.easymock.IMocksControl : java.util.List<org.easymock.IMocksControl>) {\n    org.easymock.IMocksControl.resetToNice();\n}"},"status":-2},{"failures":[],"tindex":5,"variableMapping":{"controls":"controls"},"series":0,"name":"add","transplant":{"position":"org.easymock.EasyMockSupport:584","type":"CtForEachImpl","sourcecode":"for (final org.easymock.IMocksControl org.easymock.IMocksControl : java.util.List<org.easymock.IMocksControl>) {\n    org.easymock.IMocksControl.resetToDefault();\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:573","type":"CtForEachImpl","sourcecode":"for (final org.easymock.IMocksControl org.easymock.IMocksControl : java.util.List<org.easymock.IMocksControl>) {\n    org.easymock.IMocksControl.resetToNice();\n}"},"status":-1},{"failures":[],"tindex":6,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.EasyMockSupport:584","type":"CtForEachImpl","sourcecode":"for (final org.easymock.IMocksControl org.easymock.IMocksControl : java.util.List<org.easymock.IMocksControl>) {\n    org.easymock.IMocksControl.resetToDefault();\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:573","type":"CtForEachImpl","sourcecode":"for (final org.easymock.IMocksControl org.easymock.IMocksControl : java.util.List<org.easymock.IMocksControl>) {\n    org.easymock.IMocksControl.resetToNice();\n}"},"status":-1},{"failures":[],"tindex":7,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.EasyMockSupport:595","type":"CtForEachImpl","sourcecode":"for (final org.easymock.IMocksControl org.easymock.IMocksControl : java.util.List<org.easymock.IMocksControl>) {\n    org.easymock.IMocksControl.resetToStrict();\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:573","type":"CtForEachImpl","sourcecode":"for (final org.easymock.IMocksControl org.easymock.IMocksControl : java.util.List<org.easymock.IMocksControl>) {\n    org.easymock.IMocksControl.resetToNice();\n}"},"status":-1},{"failures":[],"tindex":8,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.EasyMock:1939","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Integer>(org.easymock.Capture<java.lang.Integer>))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:573","type":"CtForEachImpl","sourcecode":"for (final org.easymock.IMocksControl org.easymock.IMocksControl : java.util.List<org.easymock.IMocksControl>) {\n    org.easymock.IMocksControl.resetToNice();\n}"},"status":-2},{"failures":[],"tindex":9,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:573","type":"CtForEachImpl","sourcecode":"for (final org.easymock.IMocksControl org.easymock.IMocksControl : java.util.List<org.easymock.IMocksControl>) {\n    org.easymock.IMocksControl.resetToNice();\n}"},"status":-1},{"failures":[],"tindex":10,"variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"org.easymock.EasyMock:1220","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:557","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} "},"status":-1},{"failures":[],"tindex":11,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.RecordState:151","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:557","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} "},"status":-2},{"failures":[],"tindex":12,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.EasyMock:1348","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:557","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} "},"status":-1},{"failures":[],"tindex":13,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:190","type":"CtLocalVariableImpl","sourcecode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:557","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} "},"status":-1},{"failures":[],"tindex":14,"variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"org.easymock.EasyMock:1458","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:557","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} "},"status":-1},{"failures":[],"tindex":15,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.AndroidSupport:26","type":"CtInvocationImpl","sourcecode":"java.lang.Class.java.lang.Class.forName(\"dalvik.system.PathClassLoader\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:557","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} "},"status":-2},{"failures":[],"tindex":16,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","type":"CtIfImpl","sourcecode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:557","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} "},"status":-2},{"failures":[],"tindex":17,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.RecordState:245","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:557","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} "},"status":-2},{"failures":[],"tindex":18,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:557","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.MocksControl == null) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers();\n    throw new java.lang.IllegalStateException(\"no last call on a mock available\");\n} "},"status":-1},{"failures":[],"tindex":19,"variableMapping":{"paramType":"mockClass","argType":"mockClass"},"series":0,"name":"replace","transplant":{"position":"org.easymock.ConstructorArgs:68","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","type":"CtInvocationImpl","sourcecode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })"},"status":-2},{"failures":[],"tindex":20,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.RecordState:240","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","type":"CtInvocationImpl","sourcecode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })"},"status":-2},{"failures":[],"tindex":21,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.RecordState:245","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","type":"CtInvocationImpl","sourcecode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })"},"status":-2},{"failures":[],"tindex":22,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:261","type":"CtAssignmentImpl","sourcecode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","type":"CtInvocationImpl","sourcecode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })"},"status":-2},{"failures":[],"tindex":23,"variableMapping":{"enhancer":"this","interceptor":"interceptor"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.ClassProxyFactory:171","type":"CtInvocationImpl","sourcecode":"net.sf.cglib.proxy.Enhancer.setCallbackType(org.easymock.internal.ClassProxyFactory.MockMethodInterceptor.getClass())"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","type":"CtInvocationImpl","sourcecode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })"},"status":-2},{"failures":[],"tindex":24,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.MockBuilder:223","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","type":"CtInvocationImpl","sourcecode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })"},"status":0},{"failures":[],"tindex":25,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","type":"CtAssertImpl","sourcecode":"assert java.lang.Class<?> != null : \"Class must not be null\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","type":"CtInvocationImpl","sourcecode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })"},"status":-2},{"failures":[],"tindex":26,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.Range:70","type":"CtReturnImpl","sourcecode":"return ((\"between \" + (int)) + \" and \") + (int)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","type":"CtInvocationImpl","sourcecode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })"},"status":-2},{"failures":[],"tindex":27,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:189","type":"CtInvocationImpl","sourcecode":"net.sf.cglib.proxy.Enhancer.net.sf.cglib.proxy.Enhancer.registerCallbacks(java.lang.Class<?>, new net.sf.cglib.proxy.Callback[]{ org.easymock.internal.ClassProxyFactory.MockMethodInterceptor })"},"status":-1},{"failures":[],"tindex":28,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","type":"CtReturnImpl","sourcecode":"return \"leq\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Range:75","type":"CtReturnImpl","sourcecode":"return \"expected: \" + org.easymock.internal.Range.(toString())"},"status":-1},{"failures":[],"tindex":29,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:39","type":"CtReturnImpl","sourcecode":"return java.lang.System.java.lang.System.getProperty(\"java.vm.vendor\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Range:75","type":"CtReturnImpl","sourcecode":"return \"expected: \" + org.easymock.internal.Range.(toString())"},"status":-1},{"failures":[],"tindex":30,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.matchers.LessThan:34","type":"CtReturnImpl","sourcecode":"return \"lt\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Range:75","type":"CtReturnImpl","sourcecode":"return \"expected: \" + org.easymock.internal.Range.(toString())"},"status":-1},{"failures":[],"tindex":31,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.EasyMock:560","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Range:75","type":"CtReturnImpl","sourcecode":"return \"expected: \" + org.easymock.internal.Range.(toString())"},"status":-1},{"failures":[],"tindex":32,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.easymock.Capture:132","type":"CtReturnImpl","sourcecode":"return \"Nothing captured yet\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Range:75","type":"CtReturnImpl","sourcecode":"return \"expected: \" + org.easymock.internal.Range.(toString())"},"status":-2},{"failures":[],"tindex":33,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","type":"CtReturnImpl","sourcecode":"return \"gt\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Range:75","type":"CtReturnImpl","sourcecode":"return \"expected: \" + org.easymock.internal.Range.(toString())"},"status":-2},{"failures":[],"tindex":34,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","type":"CtReturnImpl","sourcecode":"return \"geq\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Range:75","type":"CtReturnImpl","sourcecode":"return \"expected: \" + org.easymock.internal.Range.(toString())"},"status":-2},{"failures":[],"tindex":35,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.EasyMock:986","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<T>(java.lang.Comparable<T>))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Range:75","type":"CtReturnImpl","sourcecode":"return \"expected: \" + org.easymock.internal.Range.(toString())"},"status":-2},{"failures":[],"tindex":36,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Range:75","type":"CtReturnImpl","sourcecode":"return \"expected: \" + org.easymock.internal.Range.(toString())"},"status":-2},{"failures":[],"tindex":37,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.Range:45","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","type":"CtThrowImpl","sourcecode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))"},"status":-1},{"failures":[],"tindex":38,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.MockBuilder:153","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"No constructor matching arguments can be found\" , java.lang.NoSuchMethodException)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","type":"CtThrowImpl","sourcecode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))"},"status":-1},{"failures":[],"tindex":39,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.ConstructorArgs:51","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","type":"CtThrowImpl","sourcecode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))"},"status":-1},{"failures":[],"tindex":40,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:43","type":"CtInvocationImpl","sourcecode":"com.google.dexmaker.stock.ProxyBuilder<T>.constructorArgTypes(org.easymock.ConstructorArgs.getConstructor().getParameterTypes())"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","type":"CtThrowImpl","sourcecode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))"},"status":-2},{"failures":[],"tindex":41,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","type":"CtThrowImpl","sourcecode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))"},"status":-2},{"failures":[],"tindex":42,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.Range:37","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","type":"CtThrowImpl","sourcecode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))"},"status":-2},{"failures":[],"tindex":43,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.Range:45","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"maximum must be >= 1\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","type":"CtThrowImpl","sourcecode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))"},"status":-2},{"failures":[],"tindex":44,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.LastControl:117","type":"CtReturnImpl","sourcecode":"return null"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","type":"CtThrowImpl","sourcecode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))"},"status":-2},{"failures":[],"tindex":45,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:373","type":"CtThrowImpl","sourcecode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))"},"status":-2},{"failures":[],"tindex":46,"variableMapping":{"method":"bridgeMethod","paramTypes":"java.lang.Object.class","name":"java.lang.Object.class","this":"java.lang.Object.class"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:416","type":"CtIfImpl","sourcecode":"if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n    return java.lang.reflect.Method;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","type":"CtWhileImpl","sourcecode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}"},"status":-2},{"failures":[],"tindex":47,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","type":"CtIfImpl","sourcecode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","type":"CtWhileImpl","sourcecode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}"},"status":-1},{"failures":[],"tindex":48,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:415","type":"CtForEachImpl","sourcecode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","type":"CtWhileImpl","sourcecode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}"},"status":-2},{"failures":[],"tindex":49,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.matchers.Or:47","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuffer.append(\"or(\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","type":"CtWhileImpl","sourcecode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}"},"status":-2},{"failures":[],"tindex":50,"variableMapping":{"methods":"java.lang.Object.class","paramTypes":"java.lang.Object.class","name":"java.lang.Object.class","this":"java.lang.Object.class"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:415","type":"CtForEachImpl","sourcecode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n        return java.lang.reflect.Method;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","type":"CtWhileImpl","sourcecode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}"},"status":-2},{"failures":[],"tindex":51,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:72","type":"CtIfImpl","sourcecode":"if (!(java.lang.reflect.Method.isBridge())) {\n    return java.lang.reflect.Method;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","type":"CtWhileImpl","sourcecode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}"},"status":0},{"failures":[],"tindex":52,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:412","type":"CtWhileImpl","sourcecode":"while ((!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) && (java.lang.Class<?> != null)) {\n    final java.lang.reflect.Method[] java.lang.reflect.Method[] = java.lang.Class<?>.isInterface() ? java.lang.Class<?>.getMethods() : java.lang.Class<?>.getDeclaredMethods();\n    for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n        if ((java.lang.String.equals(java.lang.reflect.Method.getName())) && java.util.Arrays.(java.util.Arrays.equals(java.lang.Class<?>[], java.lang.reflect.Method.getParameterTypes()))) {\n            return java.lang.reflect.Method;\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","type":"CtWhileImpl","sourcecode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}"},"status":-2},{"failures":[],"tindex":53,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.MocksControl:360","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","type":"CtWhileImpl","sourcecode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}"},"status":-2},{"failures":[],"tindex":54,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:158","type":"CtWhileImpl","sourcecode":"while (!(java.lang.Object.java.lang.Object.equals(java.lang.Class<?>))) {\n    final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method);\n    if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n        return java.lang.reflect.Method;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}"},"status":-1},{"failures":[],"tindex":55,"variableMapping":{"data":"this"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:147","type":"CtInvocationImpl","sourcecode":"java.io.DataOutputStream.writeShort(0)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","type":"CtIfImpl","sourcecode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} "},"status":-2},{"failures":[],"tindex":56,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.EasyMockProperties:61","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.EasyMockProperties.getClassLoader()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","type":"CtIfImpl","sourcecode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} "},"status":-1},{"failures":[],"tindex":57,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.ArgumentToString:46","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(\", \");\n    } \n    org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","type":"CtIfImpl","sourcecode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} "},"status":-2},{"failures":[],"tindex":58,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:79","type":"CtAssignmentImpl","sourcecode":"org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.IClassInstantiator = new org.easymock.internal.ObjenesisClassInstantiator()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","type":"CtIfImpl","sourcecode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} "},"status":-2},{"failures":[],"tindex":59,"variableMapping":{"this":"this","mocks":"this"},"series":0,"name":"add","transplant":{"position":"org.easymock.EasyMock:2011","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","type":"CtIfImpl","sourcecode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} "},"status":-2},{"failures":[],"tindex":60,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.EasyMock:1348","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","type":"CtIfImpl","sourcecode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} "},"status":-1},{"failures":[],"tindex":61,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:144","type":"CtInvocationImpl","sourcecode":"java.io.DataOutputStream.writeLong(java.lang.Long.longValue())"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","type":"CtIfImpl","sourcecode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} "},"status":-2},{"failures":[],"tindex":62,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.matchers.StartsWith:40","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuffer.append(((\"startsWith(\\\"\" + (java.lang.String)) + \"\\\")\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","type":"CtIfImpl","sourcecode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} "},"status":-2},{"failures":[],"tindex":63,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:133","type":"CtIfImpl","sourcecode":"if (java.lang.ClassLoader == null) {\n    java.lang.ClassLoader = java.lang.Object.getClass().getClassLoader();\n} "},"status":-1},{"failures":[],"tindex":64,"variableMapping":{"result":"genericType","bound":"genericType","this":"this"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:356","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    java.lang.reflect.Type = java.lang.reflect.Type;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type)));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","type":"CtWhileImpl","sourcecode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}"},"status":0},{"failures":[],"tindex":65,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.RecordState:171","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","type":"CtWhileImpl","sourcecode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}"},"status":-2},{"failures":[],"tindex":66,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.ConstructorArgs:68","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","type":"CtWhileImpl","sourcecode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}"},"status":-2},{"failures":[],"tindex":67,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.EasyMock:520","type":"CtReturnImpl","sourcecode":"return org.easymock.EasyMock.org.easymock.EasyMock.createControl(org.easymock.MockType.org.easymock.MockType)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","type":"CtWhileImpl","sourcecode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}"},"status":-2},{"failures":[],"tindex":68,"variableMapping":{"typeVariableMap":"typeVariableMap","this":"this","genericType":"genericType"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:255","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","type":"CtWhileImpl","sourcecode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}"},"status":0},{"failures":[],"tindex":69,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.MockBuilder:223","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","type":"CtWhileImpl","sourcecode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}"},"status":0},{"failures":[],"tindex":70,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:249","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","type":"CtWhileImpl","sourcecode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}"},"status":0},{"failures":[],"tindex":71,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.EasyMock:1518","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(float))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","type":"CtWhileImpl","sourcecode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}"},"status":-2},{"failures":[],"tindex":72,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:266","type":"CtWhileImpl","sourcecode":"while (java.lang.Class<?>.isMemberClass()) {\n    java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass();\n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.populateTypeMapFromParameterizedType(java.lang.reflect.ParameterizedType, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}"},"status":0},{"failures":[],"tindex":73,"variableMapping":{"verified":"shouldBeUsedInOneThread"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.MocksBehavior:156","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:185","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-2},{"failures":[],"tindex":74,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:123","type":"CtNewClassImpl","sourcecode":"new org.easymock.internal.JavaProxyFactory()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:185","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[],"tindex":75,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.AndroidSupport:29","type":"CtAssignmentImpl","sourcecode":"org.easymock.internal.AndroidSupport.boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:185","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-2},{"failures":[],"tindex":76,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.Invocation:123","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:185","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-2},{"failures":[],"tindex":77,"variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"shouldBeUsedInOneThread"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.AndroidSupport:29","type":"CtAssignmentImpl","sourcecode":"org.easymock.internal.AndroidSupport.boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:185","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[],"tindex":78,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:123","type":"CtNewClassImpl","sourcecode":"new org.easymock.internal.JavaProxyFactory()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:185","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":0},{"failures":[],"tindex":79,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.MocksBehavior:156","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:185","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-2},{"failures":[],"tindex":80,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.matchers.Or:47","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuffer.append(\"or(\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:185","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-2},{"failures":[],"tindex":81,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:185","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[],"tindex":82,"variableMapping":{"this":"state"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.RecordState:144","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))"},"status":-2},{"failures":[],"tindex":83,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:326","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksControlState.asStub()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))"},"status":-1},{"failures":[],"tindex":84,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.RecordState:240","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))"},"status":-2},{"failures":[],"tindex":85,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.Invocation:63","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(java.lang.Object[], 0, java.lang.Object[], 0, int)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))"},"status":-2},{"failures":[],"tindex":86,"variableMapping":{"state":"state"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.MocksControl:212","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksControlState.replay()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))"},"status":0},{"failures":[],"tindex":87,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:325","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.asStub();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))"},"status":-1},{"failures":[],"tindex":88,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.RecordState:151","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))"},"status":-2},{"failures":[],"tindex":89,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.EasyMock:1332","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))"},"status":-1},{"failures":[],"tindex":90,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:334","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int))"},"status":-1},{"failureDictionary":{}},{"memory":8006,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2600},{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2600},{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2600},{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2600}],"os.version":"3.2.0-4-amd64"}]
