[{"failures":[],"tindex":1,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.LastControl:93","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:77","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()"},"status":-2},{"failures":[],"tindex":2,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:35","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = org.easymock.internal.matchers.Equals.getExpected()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:77","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()"},"status":-2},{"failures":[],"tindex":3,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:77","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()"},"status":-2},{"failures":[],"tindex":4,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.MockBuilder:206","type":"CtReturnImpl","sourcecode":"return org.easymock.IMocksControl.createMock(java.lang.String, java.lang.Class<T>, java.lang.reflect.Method[])"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:77","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()"},"status":-2},{"failures":[],"tindex":5,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.ExpectedInvocation:60","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.ArrayList<org.easymock.IArgumentMatcher>()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:77","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()"},"status":-2},{"failures":[],"tindex":6,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.ReflectionUtils:147","type":"CtLocalVariableImpl","sourcecode":"java.lang.reflect.Constructor<T> java.lang.reflect.Constructor<T> = null"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:77","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()"},"status":-2},{"failures":[],"tindex":7,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.LastControl:93","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:77","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()"},"status":-2},{"failures":[],"tindex":8,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.UnorderedBehavior:84","type":"CtForEachImpl","sourcecode":"for (final org.easymock.internal.ExpectedInvocationAndResults org.easymock.internal.ExpectedInvocationAndResults : java.util.List<org.easymock.internal.ExpectedInvocationAndResults>) {\n    final boolean boolean = !(boolean);\n    final boolean boolean = org.easymock.internal.ExpectedInvocationAndResults.getResults().hasValidCallCount();\n    final boolean boolean = (org.easymock.internal.Invocation != null) && (org.easymock.internal.ExpectedInvocationAndResults.getExpectedInvocation().matches(org.easymock.internal.Invocation));\n    if ((boolean && boolean) && (!boolean)) {\n        continue;\n    } \n    final org.easymock.internal.ErrorMessage org.easymock.internal.ErrorMessage = new org.easymock.internal.ErrorMessage(boolean , org.easymock.internal.ExpectedInvocationAndResults.toString() , org.easymock.internal.ExpectedInvocationAndResults.getResults().getCallCount());\n    java.util.List<org.easymock.internal.ErrorMessage>.add(org.easymock.internal.ErrorMessage);\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:77","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()"},"status":-2},{"failures":[],"tindex":9,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:77","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = org.easymock.internal.LastControl.org.easymock.internal.LastControl.pullMatchers()"},"status":-2},{"failures":[],"tindex":10,"variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.RecordState:289","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:297","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":11,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.RecordState:289","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:297","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":12,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.RecordState:289","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:297","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":13,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.Capture:107","type":"CtBreakImpl","sourcecode":"break"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:297","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} "},"status":-2},{"failures":[],"tindex":14,"variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.RecordState:289","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:297","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":15,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.RecordState:289","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:297","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":16,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.RecordState:289","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.RecordState.isLastResultOrVoidMethod()) {\n    return ;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:297","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":17,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.Invocation:62","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object[] java.lang.Object[] = new java.lang.Object[int + int]"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:297","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} "},"status":-2},{"failures":[],"tindex":18,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:297","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    return ;\n} "},"status":-1},{"failures":[],"tindex":19,"variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"m","equalsMethod":"m"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)"},"status":-1},{"failures":[],"tindex":20,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.matchers.Captures:52","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)"},"status":-1},{"failures":[],"tindex":21,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.ReflectionUtils:111","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Method = java.lang.reflect.Method"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)"},"status":-2},{"failures":[],"tindex":22,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:52","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.lang.Object[]) && ((java.lang.Object == null) || (java.lang.Object instanceof java.lang.Object[]))) {\n    return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)));\n} else {\n    return org.easymock.internal.matchers.Equals.matches(java.lang.Object);\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)"},"status":-2},{"failures":[],"tindex":23,"variableMapping":{"org.easymock.internal.ReflectionUtils.OBJECT_EQUALS":"m","equalsMethod":"m"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)"},"status":0},{"failures":[],"tindex":24,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.MockBuilder:223","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)"},"status":0},{"failures":[],"tindex":25,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:50","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Method = org.easymock.internal.ReflectionUtils.java.lang.reflect.Method"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)"},"status":-2},{"failures":[],"tindex":26,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.MocksBehavior:86","type":"CtWhileImpl","sourcecode":"while ((int) < (java.util.List<org.easymock.internal.UnorderedBehavior>.size())) {\n    final org.easymock.internal.Result org.easymock.internal.Result = java.util.List<org.easymock.internal.UnorderedBehavior>.get(int).addActual(org.easymock.internal.Invocation);\n    if (org.easymock.internal.Result != null) {\n        return org.easymock.internal.Result;\n    } \n    if (!(java.util.List<org.easymock.internal.UnorderedBehavior>.get(int).verify())) {\n        break;\n    } \n    (int)++;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)"},"status":-2},{"failures":[],"tindex":27,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:76","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)"},"status":-1},{"failures":[],"tindex":28,"variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"checkOrder"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.AndroidSupport:34","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.AndroidSupport.boolean"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:102","type":"CtIfImpl","sourcecode":"if ((this.boolean) != boolean) {\n    return false;\n} else if ((java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.isEmpty()) || (!(this.boolean))) {\n    return true;\n} else {\n    final org.easymock.internal.ExpectedInvocation org.easymock.internal.ExpectedInvocation = java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.get(((java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.size()) - 1)).getExpectedInvocation();\n    return org.easymock.internal.ExpectedInvocation.equals(org.easymock.internal.ExpectedInvocation);\n}"},"status":-1},{"failures":[],"tindex":29,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.matchers.And:43","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:102","type":"CtIfImpl","sourcecode":"if ((this.boolean) != boolean) {\n    return false;\n} else if ((java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.isEmpty()) || (!(this.boolean))) {\n    return true;\n} else {\n    final org.easymock.internal.ExpectedInvocation org.easymock.internal.ExpectedInvocation = java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.get(((java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.size()) - 1)).getExpectedInvocation();\n    return org.easymock.internal.ExpectedInvocation.equals(org.easymock.internal.ExpectedInvocation);\n}"},"status":-1},{"failures":[],"tindex":30,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.UnorderedBehavior:104","type":"CtIfImpl","sourcecode":"if ((java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.isEmpty()) || (!(this.boolean))) {\n    return true;\n} else {\n    final org.easymock.internal.ExpectedInvocation org.easymock.internal.ExpectedInvocation = java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.get(((java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.size()) - 1)).getExpectedInvocation();\n    return org.easymock.internal.ExpectedInvocation.equals(org.easymock.internal.ExpectedInvocation);\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:102","type":"CtIfImpl","sourcecode":"if ((this.boolean) != boolean) {\n    return false;\n} else if ((java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.isEmpty()) || (!(this.boolean))) {\n    return true;\n} else {\n    final org.easymock.internal.ExpectedInvocation org.easymock.internal.ExpectedInvocation = java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.get(((java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.size()) - 1)).getExpectedInvocation();\n    return org.easymock.internal.ExpectedInvocation.equals(org.easymock.internal.ExpectedInvocation);\n}"},"status":-1},{"failures":[],"tindex":31,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.ClassProxyFactory:210","type":"CtThrowImpl","sourcecode":"throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:102","type":"CtIfImpl","sourcecode":"if ((this.boolean) != boolean) {\n    return false;\n} else if ((java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.isEmpty()) || (!(this.boolean))) {\n    return true;\n} else {\n    final org.easymock.internal.ExpectedInvocation org.easymock.internal.ExpectedInvocation = java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.get(((java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.size()) - 1)).getExpectedInvocation();\n    return org.easymock.internal.ExpectedInvocation.equals(org.easymock.internal.ExpectedInvocation);\n}"},"status":-2},{"failures":[],"tindex":32,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.matchers.And:43","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:102","type":"CtIfImpl","sourcecode":"if ((this.boolean) != boolean) {\n    return false;\n} else if ((java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.isEmpty()) || (!(this.boolean))) {\n    return true;\n} else {\n    final org.easymock.internal.ExpectedInvocation org.easymock.internal.ExpectedInvocation = java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.get(((java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.size()) - 1)).getExpectedInvocation();\n    return org.easymock.internal.ExpectedInvocation.equals(org.easymock.internal.ExpectedInvocation);\n}"},"status":-2},{"failures":[],"tindex":33,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:102","type":"CtIfImpl","sourcecode":"if ((this.boolean) != boolean) {\n    return false;\n} else if ((java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.isEmpty()) || (!(this.boolean))) {\n    return true;\n} else {\n    final org.easymock.internal.ExpectedInvocation org.easymock.internal.ExpectedInvocation = java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.get(((java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.size()) - 1)).getExpectedInvocation();\n    return org.easymock.internal.ExpectedInvocation.equals(org.easymock.internal.ExpectedInvocation);\n}"},"status":-2},{"failures":[],"tindex":34,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.UnorderedBehavior:104","type":"CtIfImpl","sourcecode":"if ((java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.isEmpty()) || (!(this.boolean))) {\n    return true;\n} else {\n    final org.easymock.internal.ExpectedInvocation org.easymock.internal.ExpectedInvocation = java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.get(((java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.size()) - 1)).getExpectedInvocation();\n    return org.easymock.internal.ExpectedInvocation.equals(org.easymock.internal.ExpectedInvocation);\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:102","type":"CtIfImpl","sourcecode":"if ((this.boolean) != boolean) {\n    return false;\n} else if ((java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.isEmpty()) || (!(this.boolean))) {\n    return true;\n} else {\n    final org.easymock.internal.ExpectedInvocation org.easymock.internal.ExpectedInvocation = java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.get(((java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.size()) - 1)).getExpectedInvocation();\n    return org.easymock.internal.ExpectedInvocation.equals(org.easymock.internal.ExpectedInvocation);\n}"},"status":-2},{"failures":[],"tindex":35,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.Range:66","type":"CtReturnImpl","sourcecode":"return \"\" + (int)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:102","type":"CtIfImpl","sourcecode":"if ((this.boolean) != boolean) {\n    return false;\n} else if ((java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.isEmpty()) || (!(this.boolean))) {\n    return true;\n} else {\n    final org.easymock.internal.ExpectedInvocation org.easymock.internal.ExpectedInvocation = java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.get(((java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.size()) - 1)).getExpectedInvocation();\n    return org.easymock.internal.ExpectedInvocation.equals(org.easymock.internal.ExpectedInvocation);\n}"},"status":-2},{"failures":[],"tindex":36,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:102","type":"CtIfImpl","sourcecode":"if ((this.boolean) != boolean) {\n    return false;\n} else if ((java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.isEmpty()) || (!(this.boolean))) {\n    return true;\n} else {\n    final org.easymock.internal.ExpectedInvocation org.easymock.internal.ExpectedInvocation = java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.get(((java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.size()) - 1)).getExpectedInvocation();\n    return org.easymock.internal.ExpectedInvocation.equals(org.easymock.internal.ExpectedInvocation);\n}"},"status":-2},{"failures":[],"tindex":37,"variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.RecordState:115","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:84","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.closeMethod()"},"status":-1},{"failures":[],"tindex":38,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.ReplayState:68","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:84","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.closeMethod()"},"status":-1},{"failures":[],"tindex":39,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.RecordState:124","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:84","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.closeMethod()"},"status":-1},{"failures":[],"tindex":40,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.MocksControl:191","type":"CtAssignmentImpl","sourcecode":"org.easymock.internal.IMocksControlState = new org.easymock.internal.RecordState(org.easymock.internal.IMocksBehavior)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:84","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.closeMethod()"},"status":-2},{"failures":[],"tindex":41,"variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.RecordState:96","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:84","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.closeMethod()"},"status":-1},{"failures":[],"tindex":42,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.EasyMockProperties:61","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.EasyMockProperties.getClassLoader()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:84","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.closeMethod()"},"status":-2},{"failures":[],"tindex":43,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.RecordState:115","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:84","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.closeMethod()"},"status":-1},{"failures":[],"tindex":44,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:109","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object[] java.lang.Object[] = new java.lang.Object[java.lang.Class<?>[].int]"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:84","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.closeMethod()"},"status":-2},{"failures":[],"tindex":45,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:84","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.closeMethod()"},"status":-1},{"failures":[],"tindex":46,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.matchers.And:43","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Results:60","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":47,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.matchers.And:43","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Results:60","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":48,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.matchers.And:43","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Results:60","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":49,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.MocksBehavior:197","type":"CtAssignmentImpl","sourcecode":"java.lang.Thread = java.lang.Thread.java.lang.Thread.currentThread()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Results:60","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":50,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.matchers.And:43","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Results:60","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":51,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.matchers.And:43","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Results:60","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":52,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.matchers.And:43","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Results:60","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":53,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.ArgumentToString:36","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Results:60","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":54,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Results:60","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":55,"variableMapping":{"method":"expected","this":"expected"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.MockBuilder:68","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)"},"status":-2},{"failures":[],"tindex":56,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.matchers.And:47","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuffer.append(\"and(\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)"},"status":-1},{"failures":[],"tindex":57,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.EasyMock:1659","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(long[]))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)"},"status":-2},{"failures":[],"tindex":58,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.EasyMock:999","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Byte>(byte))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)"},"status":-2},{"failures":[],"tindex":59,"variableMapping":{"f":"expected","obj":"expected","o":"expected"},"series":0,"name":"add","transplant":{"position":"org.easymock.EasyMockSupport:719","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Field.set(java.lang.Object, java.lang.Object)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)"},"status":-2},{"failures":[],"tindex":60,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.ArgumentToString:52","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuffer.append(\"]\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)"},"status":-1},{"failures":[],"tindex":61,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.MocksBehavior:109","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.Invocation.clearCaptures()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)"},"status":-2},{"failures":[],"tindex":62,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.ClassProxyFactory:225","type":"CtLocalVariableImpl","sourcecode":"net.sf.cglib.proxy.Factory net.sf.cglib.proxy.Factory"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)"},"status":0},{"failures":[],"tindex":63,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.Equals:44","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.Object, java.lang.StringBuffer)"},"status":-1},{"failures":[],"tindex":64,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.easymock.EasyMock:2125","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:292","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))"},"status":-1},{"failures":[],"tindex":65,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.Capture:80","type":"CtThrowImpl","sourcecode":"throw new java.lang.AssertionError(\"Nothing captured yet\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:292","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))"},"status":-1},{"failures":[],"tindex":66,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.MockBuilder:211","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:292","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))"},"status":-1},{"failures":[],"tindex":67,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.MocksControl:267","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksControlState.andThrow(java.lang.Throwable)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:292","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))"},"status":-2},{"failures":[],"tindex":68,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.MocksControl:106","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:292","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))"},"status":-2},{"failures":[],"tindex":69,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:166","type":"CtThrowImpl","sourcecode":"throw new java.lang.RuntimeException(\"Should have been able to get serialVersionUID since it\\'s there\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:292","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))"},"status":-2},{"failures":[],"tindex":70,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.MockBuilder:69","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:292","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))"},"status":-2},{"failures":[],"tindex":71,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:249","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractTypeVariablesFromGenericInterfaces(java.lang.Class<?>.getGenericInterfaces(), java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:292","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))"},"status":-2},{"failures":[],"tindex":72,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:292","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))"},"status":-1},{"failures":[],"tindex":73,"variableMapping":{"this":"value","mocks":"value"},"series":0,"name":"replace","transplant":{"position":"org.easymock.EasyMock:2011","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay();\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}"},"status":-2},{"failures":[],"tindex":74,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:232","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksControlState.checkOrder(boolean)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}"},"status":-2},{"failures":[],"tindex":75,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.MocksControl:202","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.MocksControl.reset()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}"},"status":-1},{"failures":[],"tindex":76,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.ConstructorArgs:59","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}"},"status":-2},{"failures":[],"tindex":77,"variableMapping":{"answer":"value","state":"state"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.MocksControl:285","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}"},"status":-1},{"failures":[],"tindex":78,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:326","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksControlState.asStub()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}"},"status":-1},{"failures":[],"tindex":79,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.EasyMock:2025","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}"},"status":-2},{"failures":[],"tindex":80,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.EasyMock:666","type":"CtReturnImpl","sourcecode":"return null"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}"},"status":-2},{"failures":[],"tindex":81,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:293","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.andStubReturn(java.lang.Object);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}"},"status":-1},{"failures":[],"tindex":82,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.RecordState:281","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))"},"status":0},{"failures":[],"tindex":83,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.MockBuilder:211","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))"},"status":0},{"failures":[],"tindex":84,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.RecordState:241","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))"},"status":0},{"failures":[],"tindex":85,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.RecordState:133","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))"},"status":-2},{"failures":[],"tindex":86,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.easymock.EasyMock:2125","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))"},"status":-2},{"failures":[],"tindex":87,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.RecordState:257","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"incompatible return value type\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))"},"status":-2},{"failures":[],"tindex":88,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.RecordState:246","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))"},"status":-2},{"failures":[],"tindex":89,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.EasyMock:642","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))"},"status":-2},{"failures":[],"tindex":90,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:94","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())))"},"status":0},{"failureDictionary":{}},{"memory":8006,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2600},{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2600},{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2600},{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2600}],"os.version":"3.2.0-4-amd64"}]
