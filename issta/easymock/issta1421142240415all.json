[{"failures":[],"tindex":1,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:318","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":2,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:318","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":3,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:318","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":4,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.RecordState:76","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.closeMethod()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:318","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":5,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:318","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":6,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:318","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":7,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:318","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":8,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:75","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:318","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":9,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:318","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":10,"variableMapping":{"clazz":"returnedType"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","type":"CtAssertImpl","sourcecode":"assert java.lang.Class<?> != null : \"Class must not be null\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:252","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} "},"status":-1},{"failures":[],"tindex":11,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.RecordState:245","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:252","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} "},"status":-1},{"failures":[],"tindex":12,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.RecordState:245","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:252","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} "},"status":-1},{"failures":[],"tindex":13,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.Capture:123","type":"CtCaseImpl","sourcecode":"default :\n    throw new java.lang.IllegalArgumentException((\"Unknown capture type: \" + (org.easymock.CaptureType)));"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:252","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} "},"status":-2},{"failures":[],"tindex":14,"variableMapping":{"paramType":"returnedType","argType":"returnedType"},"series":0,"name":"add","transplant":{"position":"org.easymock.ConstructorArgs:68","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:252","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} "},"status":-2},{"failures":[],"tindex":15,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.RecordState:253","type":"CtAssignmentImpl","sourcecode":"java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:252","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} "},"status":-2},{"failures":[],"tindex":16,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:376","type":"CtAssertImpl","sourcecode":"assert java.lang.Class<?> != null : \"Class must not be null\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:252","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} "},"status":-2},{"failures":[],"tindex":17,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:56","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Method = org.easymock.internal.ObjectMethodsFilter.org.easymock.internal.ObjectMethodsFilter.extractMethod(java.lang.Class<?>, \"equals\", java.lang.Object.java.lang.Object)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:252","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} "},"status":-2},{"failures":[],"tindex":18,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:252","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.isPrimitive()) {\n    java.lang.Class<?> = org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.get(java.lang.Class<?>);\n} "},"status":-2},{"failures":[],"tindex":19,"variableMapping":{"values":"values"},"series":0,"name":"replace","transplant":{"position":"org.easymock.Capture:60","type":"CtInvocationImpl","sourcecode":"java.util.List<T>.clear()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:79","type":"CtIfImpl","sourcecode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} "},"status":-2},{"failures":[],"tindex":20,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.Capture:60","type":"CtInvocationImpl","sourcecode":"java.util.List<T>.clear()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:79","type":"CtIfImpl","sourcecode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} "},"status":-2},{"failures":[],"tindex":21,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.Capture:60","type":"CtInvocationImpl","sourcecode":"java.util.List<T>.clear()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:79","type":"CtIfImpl","sourcecode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} "},"status":-2},{"failures":[],"tindex":22,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:193","type":"CtThrowImpl","sourcecode":"throw new java.lang.InternalError((((\"ObjectStreamClass.\" + java.lang.String) + \" failled to be called: \") + (java.lang.reflect.InvocationTargetException.getMessage())))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:79","type":"CtIfImpl","sourcecode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} "},"status":-2},{"failures":[],"tindex":23,"variableMapping":{"values":"values"},"series":0,"name":"add","transplant":{"position":"org.easymock.Capture:60","type":"CtInvocationImpl","sourcecode":"java.util.List<T>.clear()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:79","type":"CtIfImpl","sourcecode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} "},"status":-2},{"failures":[],"tindex":24,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.Capture:60","type":"CtInvocationImpl","sourcecode":"java.util.List<T>.clear()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:79","type":"CtIfImpl","sourcecode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} "},"status":-2},{"failures":[],"tindex":25,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.Capture:60","type":"CtInvocationImpl","sourcecode":"java.util.List<T>.clear()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:79","type":"CtIfImpl","sourcecode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} "},"status":-2},{"failures":[],"tindex":26,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:55","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.matchers.Equals.matches(java.lang.Object)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:79","type":"CtIfImpl","sourcecode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} "},"status":-2},{"failures":[],"tindex":27,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:79","type":"CtIfImpl","sourcecode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} "},"status":-2},{"failures":[],"tindex":28,"variableMapping":{"throwable":"actual"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.RecordState:314","type":"CtIfImpl","sourcecode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":29,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.matchers.Compare:52","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":30,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.Results:52","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.Range.hasOpenCount()) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":31,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.MockBuilder:231","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":32,"variableMapping":{"this":"actual","mockName":"actual"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.Invocation:195","type":"CtIfImpl","sourcecode":"if ((((java.lang.String.length()) == 0) || ((java.lang.String.indexOf(' ')) > (-1))) || (!java.lang.Character.(java.lang.Character.isJavaIdentifierStart(java.lang.String.charAt(0))))) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":33,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.matchers.Compare:52","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":34,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.Results:52","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.Range.hasOpenCount()) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":35,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:435","type":"CtForEachImpl","sourcecode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":36,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.CompareTo:41","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":37,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.RecordState:275","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"answer object must not be null\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","type":"CtThrowImpl","sourcecode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))"},"status":-2},{"failures":[],"tindex":38,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.Result:89","type":"CtThrowImpl","sourcecode":"throw java.lang.reflect.InvocationTargetException.getCause()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","type":"CtThrowImpl","sourcecode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))"},"status":-2},{"failures":[],"tindex":39,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.MockBuilder:236","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","type":"CtThrowImpl","sourcecode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))"},"status":-2},{"failures":[],"tindex":40,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:441","type":"CtReturnImpl","sourcecode":"return java.util.List<java.lang.reflect.Method>.toArray(new java.lang.reflect.Method[java.util.List<java.lang.reflect.Method>.size()])"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","type":"CtThrowImpl","sourcecode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))"},"status":-2},{"failures":[],"tindex":41,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.RecordState:246","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","type":"CtThrowImpl","sourcecode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))"},"status":-2},{"failures":[],"tindex":42,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.MockBuilder:164","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","type":"CtThrowImpl","sourcecode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))"},"status":-2},{"failures":[],"tindex":43,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.MockBuilder:69","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","type":"CtThrowImpl","sourcecode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))"},"status":-2},{"failures":[],"tindex":44,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:381","type":"CtWhileImpl","sourcecode":"while (java.lang.Class<?> != null) {\n    for (int int = 0 ; int < (java.lang.Class<?>.getInterfaces().int) ; int++) {\n        final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getInterfaces()[int];\n        if (!(java.util.List<java.lang.Class<?>>.contains(java.lang.Class<?>))) {\n            java.util.List<java.lang.Class<?>>.add(java.lang.Class<?>);\n        } \n    }\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","type":"CtThrowImpl","sourcecode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))"},"status":-2},{"failures":[],"tindex":45,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:328","type":"CtThrowImpl","sourcecode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))"},"status":-2},{"failures":[],"tindex":46,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.MockBuilder:160","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))"},"status":-2},{"failures":[],"tindex":47,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.MockBuilder:164","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))"},"status":-2},{"failures":[],"tindex":48,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.EasyMock:2125","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))"},"status":-2},{"failures":[],"tindex":49,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.MockBuilder:98","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.MockBuilder<T>.addMockedMethod(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))"},"status":-2},{"failures":[],"tindex":50,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.RecordState:91","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))"},"status":-2},{"failures":[],"tindex":51,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.RecordState:281","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))"},"status":-2},{"failures":[],"tindex":52,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.MockBuilder:164","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))"},"status":-2},{"failures":[],"tindex":53,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.UnorderedBehavior:87","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = (org.easymock.internal.Invocation != null) && (org.easymock.internal.ExpectedInvocationAndResults.getExpectedInvocation().matches(org.easymock.internal.Invocation))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))"},"status":-2},{"failures":[],"tindex":54,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:116","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"))"},"status":-2},{"failures":[],"tindex":55,"variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.MockBuilder:192","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)"},"status":-2},{"failures":[],"tindex":56,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.MockBuilder:196","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)"},"status":-2},{"failures":[],"tindex":57,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.MockBuilder:192","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)"},"status":-2},{"failures":[],"tindex":58,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.ReflectionUtils:92","type":"CtLocalVariableImpl","sourcecode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)"},"status":-2},{"failures":[],"tindex":59,"variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.MockBuilder:192","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)"},"status":-2},{"failures":[],"tindex":60,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.MockBuilder:196","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)"},"status":-2},{"failures":[],"tindex":61,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.MockBuilder:192","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)"},"status":-2},{"failures":[],"tindex":62,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.RecordState:164","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)"},"status":-2},{"failures":[],"tindex":63,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:225","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createMock(java.lang.String, org.easymock.IMocksControl)"},"status":-2},{"failures":[],"tindex":64,"variableMapping":{"lastRange":"count"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.Results:39","type":"CtIfImpl","sourcecode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:40","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.ExpectedInvocationAndResults.getResults().add(org.easymock.internal.Result, org.easymock.internal.Range)"},"status":-2},{"failures":[],"tindex":65,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.ArgumentToString:91","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\", \")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:40","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.ExpectedInvocationAndResults.getResults().add(org.easymock.internal.Result, org.easymock.internal.Range)"},"status":-2},{"failures":[],"tindex":66,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.UnorderedBehavior:53","type":"CtIfImpl","sourcecode":"if (!(org.easymock.internal.ExpectedInvocationAndResults.getResults().hasResults())) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:40","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.ExpectedInvocationAndResults.getResults().add(org.easymock.internal.Result, org.easymock.internal.Range)"},"status":-2},{"failures":[],"tindex":67,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.EasyMock:1531","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:40","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.ExpectedInvocationAndResults.getResults().add(org.easymock.internal.Result, org.easymock.internal.Range)"},"status":-2},{"failures":[],"tindex":68,"variableMapping":{"lastRange":"count"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.Results:39","type":"CtIfImpl","sourcecode":"if (!(org.easymock.internal.Range.hasFixedCount())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock already has a non-fixed count set.\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:40","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.ExpectedInvocationAndResults.getResults().add(org.easymock.internal.Result, org.easymock.internal.Range)"},"status":-2},{"failures":[],"tindex":69,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.ExpectedInvocation:105","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuffer.append(\"(\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:40","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.ExpectedInvocationAndResults.getResults().add(org.easymock.internal.Result, org.easymock.internal.Range)"},"status":-2},{"failures":[],"tindex":70,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.UnorderedBehavior:53","type":"CtIfImpl","sourcecode":"if (!(org.easymock.internal.ExpectedInvocationAndResults.getResults().hasResults())) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:40","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.ExpectedInvocationAndResults.getResults().add(org.easymock.internal.Result, org.easymock.internal.Range)"},"status":-2},{"failures":[],"tindex":71,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:59","type":"CtLocalVariableImpl","sourcecode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:40","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.ExpectedInvocationAndResults.getResults().add(org.easymock.internal.Result, org.easymock.internal.Range)"},"status":-2},{"failures":[],"tindex":72,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:40","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.ExpectedInvocationAndResults.getResults().add(org.easymock.internal.Result, org.easymock.internal.Range)"},"status":-2},{"failures":[],"tindex":73,"variableMapping":{"number":"number"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.RecordState:205","type":"CtReturnImpl","sourcecode":"return java.lang.Number.doubleValue()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:207","type":"CtReturnImpl","sourcecode":"return java.lang.Number"},"status":-2},{"failures":[],"tindex":74,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.RecordState:195","type":"CtReturnImpl","sourcecode":"return java.lang.Number.byteValue()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:207","type":"CtReturnImpl","sourcecode":"return java.lang.Number"},"status":-2},{"failures":[],"tindex":75,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.RecordState:203","type":"CtReturnImpl","sourcecode":"return java.lang.Number.floatValue()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:207","type":"CtReturnImpl","sourcecode":"return java.lang.Number"},"status":-2},{"failures":[],"tindex":76,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.RecordState:136","type":"CtIfImpl","sourcecode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:207","type":"CtReturnImpl","sourcecode":"return java.lang.Number"},"status":-2},{"failures":[],"tindex":77,"variableMapping":{"number":"number"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.RecordState:197","type":"CtReturnImpl","sourcecode":"return java.lang.Number.shortValue()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:207","type":"CtReturnImpl","sourcecode":"return java.lang.Number"},"status":-2},{"failures":[],"tindex":78,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.RecordState:201","type":"CtReturnImpl","sourcecode":"return java.lang.Number.longValue()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:207","type":"CtReturnImpl","sourcecode":"return java.lang.Number"},"status":-2},{"failures":[],"tindex":79,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.RecordState:199","type":"CtReturnImpl","sourcecode":"return java.lang.Number.intValue()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:207","type":"CtReturnImpl","sourcecode":"return java.lang.Number"},"status":-2},{"failures":[],"tindex":80,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.Results:71","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.Range.getMaximum()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:207","type":"CtReturnImpl","sourcecode":"return java.lang.Number"},"status":-2},{"failures":[],"tindex":81,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:207","type":"CtReturnImpl","sourcecode":"return java.lang.Number"},"status":-2},{"failures":[],"tindex":82,"variableMapping":{"result":"m","name":"methodName"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.ReflectionUtils:107","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} "},"status":-2},{"failures":[],"tindex":83,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:123","type":"CtNewClassImpl","sourcecode":"new org.easymock.internal.JavaProxyFactory()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} "},"status":-2},{"failures":[],"tindex":84,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Method.setAccessible(true)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} "},"status":-2},{"failures":[],"tindex":85,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.LastControl:116","type":"CtIfImpl","sourcecode":"if ((java.util.Stack<org.easymock.internal.Invocation> == null) || (java.util.Stack<org.easymock.internal.Invocation>.empty())) {\n    return null;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} "},"status":-2},{"failures":[],"tindex":86,"variableMapping":{"method":"m"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.ReflectionUtils:102","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} "},"status":-2},{"failures":[],"tindex":87,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:123","type":"CtNewClassImpl","sourcecode":"new org.easymock.internal.JavaProxyFactory()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} "},"status":-2},{"failures":[],"tindex":88,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.ReflectionUtils:107","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} "},"status":-2},{"failures":[],"tindex":89,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.MockInvocationHandler:42","type":"CtThrowImpl","sourcecode":"throw org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} "},"status":-2},{"failures":[],"tindex":90,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} "},"status":-2},{"failureDictionary":{}},{"memory":24157,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":16,"vendor":"Intel","model":"Xeon","mhz":2933},{"core":16,"vendor":"Intel","model":"Xeon","mhz":2933},{"core":16,"vendor":"Intel","model":"Xeon","mhz":2933},{"core":16,"vendor":"Intel","model":"Xeon","mhz":2933},{"core":16,"vendor":"Intel","model":"Xeon","mhz":2933},{"core":16,"vendor":"Intel","model":"Xeon","mhz":2933},{"core":16,"vendor":"Intel","model":"Xeon","mhz":2933},{"core":16,"vendor":"Intel","model":"Xeon","mhz":2933}],"os.version":"3.2.0-4-amd64"}]
