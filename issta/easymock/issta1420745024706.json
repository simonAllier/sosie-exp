[{"failures":[],"tindex":1,"variableMapping":{"method":"m"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Method.setAccessible(true)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} "},"status":-1},{"failures":[],"tindex":2,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:123","type":"CtNewClassImpl","sourcecode":"new org.easymock.internal.JavaProxyFactory()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} "},"status":-1},{"failures":[],"tindex":3,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","type":"CtAssertImpl","sourcecode":"assert java.lang.String != null : \"Method name must not be null\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} "},"status":-2},{"failures":[],"tindex":4,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.EasyMockSupport:207","type":"CtReturnImpl","sourcecode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} "},"status":-2},{"failures":[],"tindex":5,"variableMapping":{"result":"m","bridgeMethod":"m"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} "},"status":0},{"failures":[],"tindex":6,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:123","type":"CtNewClassImpl","sourcecode":"new org.easymock.internal.JavaProxyFactory()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} "},"status":0},{"failures":[],"tindex":7,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Method.setAccessible(true)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} "},"status":-2},{"failures":[],"tindex":8,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.MockInvocationHandler:37","type":"CtIfImpl","sourcecode":"if ((org.easymock.internal.MocksControl.getState()) instanceof org.easymock.internal.RecordState) {\n    org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(org.easymock.internal.MocksControl);\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} "},"status":-2},{"failures":[],"tindex":9,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} "},"status":-1},{"failures":[],"tindex":10,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.matchers.And:43","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:75","type":"CtIfImpl","sourcecode":"if (!(org.easymock.internal.ExpectedInvocationAndResults.getResults().hasValidCallCount())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":11,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.matchers.And:43","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:75","type":"CtIfImpl","sourcecode":"if (!(org.easymock.internal.ExpectedInvocationAndResults.getResults().hasValidCallCount())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":12,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.matchers.And:43","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:75","type":"CtIfImpl","sourcecode":"if (!(org.easymock.internal.ExpectedInvocationAndResults.getResults().hasValidCallCount())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":13,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.ClassProxyFactory:193","type":"CtLocalVariableImpl","sourcecode":"java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:75","type":"CtIfImpl","sourcecode":"if (!(org.easymock.internal.ExpectedInvocationAndResults.getResults().hasValidCallCount())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":14,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:75","type":"CtIfImpl","sourcecode":"if (!(org.easymock.internal.ExpectedInvocationAndResults.getResults().hasValidCallCount())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":15,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.matchers.And:43","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:75","type":"CtIfImpl","sourcecode":"if (!(org.easymock.internal.ExpectedInvocationAndResults.getResults().hasValidCallCount())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":16,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.matchers.And:43","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:75","type":"CtIfImpl","sourcecode":"if (!(org.easymock.internal.ExpectedInvocationAndResults.getResults().hasValidCallCount())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":17,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.ReplayState:73","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksBehavior.verify()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:75","type":"CtIfImpl","sourcecode":"if (!(org.easymock.internal.ExpectedInvocationAndResults.getResults().hasValidCallCount())) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":18,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:75","type":"CtIfImpl","sourcecode":"if (!(org.easymock.internal.ExpectedInvocationAndResults.getResults().hasValidCallCount())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":19,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.matchers.And:43","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:108","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.ExpectedInvocation.equals(org.easymock.internal.ExpectedInvocation)"},"status":-1},{"failures":[],"tindex":20,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.matchers.And:43","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:108","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.ExpectedInvocation.equals(org.easymock.internal.ExpectedInvocation)"},"status":-1},{"failures":[],"tindex":21,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.matchers.And:43","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:108","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.ExpectedInvocation.equals(org.easymock.internal.ExpectedInvocation)"},"status":-1},{"failures":[],"tindex":22,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.MocksBehavior:110","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.Result"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:108","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.ExpectedInvocation.equals(org.easymock.internal.ExpectedInvocation)"},"status":-2},{"failures":[],"tindex":23,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.matchers.And:43","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:108","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.ExpectedInvocation.equals(org.easymock.internal.ExpectedInvocation)"},"status":-2},{"failures":[],"tindex":24,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:108","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.ExpectedInvocation.equals(org.easymock.internal.ExpectedInvocation)"},"status":-2},{"failures":[],"tindex":25,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.matchers.And:43","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:108","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.ExpectedInvocation.equals(org.easymock.internal.ExpectedInvocation)"},"status":-2},{"failures":[],"tindex":26,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.MocksBehavior:122","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<org.easymock.internal.ErrorMessage> java.util.List<org.easymock.internal.ErrorMessage> = new java.util.ArrayList<org.easymock.internal.ErrorMessage>()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:108","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.ExpectedInvocation.equals(org.easymock.internal.ExpectedInvocation)"},"status":-2},{"failures":[],"tindex":27,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:108","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.ExpectedInvocation.equals(org.easymock.internal.ExpectedInvocation)"},"status":-2},{"failures":[],"tindex":28,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.RecordState:86","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")"},"status":-1},{"failures":[],"tindex":29,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.EasyMock:560","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")"},"status":-1},{"failures":[],"tindex":30,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.Range:37","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")"},"status":-1},{"failures":[],"tindex":31,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:170","type":"CtIfImpl","sourcecode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")"},"status":-2},{"failures":[],"tindex":32,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.Range:41","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")"},"status":-2},{"failures":[],"tindex":33,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.RecordState:91","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")"},"status":-2},{"failures":[],"tindex":34,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.MockBuilder:236","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")"},"status":-2},{"failures":[],"tindex":35,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.Invocation:150","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.Object.toString()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")"},"status":-2},{"failures":[],"tindex":36,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:106","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")"},"status":-1},{"failures":[],"tindex":37,"variableMapping":{"arguments":"initArgs"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.ArgumentToString:83","type":"CtIfImpl","sourcecode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}"},"status":-2},{"failures":[],"tindex":38,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.MockBuilder:218","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}"},"status":-1},{"failures":[],"tindex":39,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.ConstructorArgs:50","type":"CtIfImpl","sourcecode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}"},"status":-1},{"failures":[],"tindex":40,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.matchers.Compare:53","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}"},"status":-2},{"failures":[],"tindex":41,"variableMapping":{"arguments":"initArgs"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.ArgumentToString:83","type":"CtIfImpl","sourcecode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}"},"status":-2},{"failures":[],"tindex":42,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.RecordState:161","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}"},"status":-2},{"failures":[],"tindex":43,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.MockBuilder:163","type":"CtIfImpl","sourcecode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}"},"status":-2},{"failures":[],"tindex":44,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.ReflectionUtils:181","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}"},"status":-2},{"failures":[],"tindex":45,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.ConstructorArgs:54","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}"},"status":-1},{"failures":[],"tindex":46,"variableMapping":{"shouldBeUsedInOneThread":"verified"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.MocksBehavior:193","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:160","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return ;\n} "},"status":-1},{"failures":[],"tindex":47,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.MocksBehavior:193","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:160","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return ;\n} "},"status":-1},{"failures":[],"tindex":48,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.MocksBehavior:110","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.Result"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:160","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return ;\n} "},"status":-2},{"failures":[],"tindex":49,"variableMapping":{"shouldBeUsedInOneThread":"verified"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.MocksBehavior:193","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:160","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return ;\n} "},"status":-1},{"failures":[],"tindex":50,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.MocksBehavior:193","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    return ;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:160","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return ;\n} "},"status":-1},{"failures":[],"tindex":51,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.EasyMock:1940","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:160","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return ;\n} "},"status":-2},{"failures":[],"tindex":52,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:160","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return ;\n} "},"status":-1},{"failures":[],"tindex":53,"variableMapping":{"this":"state"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.RecordState:161","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))"},"status":-2},{"failures":[],"tindex":54,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:212","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksControlState.replay()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))"},"status":-1},{"failures":[],"tindex":55,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.RecordState:151","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))"},"status":-2},{"failures":[],"tindex":56,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.Invocation:118","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = this.java.lang.Object[][int]"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))"},"status":-2},{"failures":[],"tindex":57,"variableMapping":{"state":"state"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.MocksControl:222","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksControlState.verify()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))"},"status":-1},{"failures":[],"tindex":58,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:222","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksControlState.verify()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))"},"status":-1},{"failures":[],"tindex":59,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.RecordState:144","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))"},"status":-2},{"failures":[],"tindex":60,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.EasyMockSupport:640","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocksOnClass(java.lang.Class<?>, java.lang.Object, java.util.List<java.lang.Object>)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))"},"status":-2},{"failures":[],"tindex":61,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:343","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksControlState.times(new org.easymock.internal.Range(int , int))"},"status":-1},{"failures":[],"tindex":62,"variableMapping":{"result":"stubOrNice"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.MocksBehavior:88","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.Result != null) {\n    return org.easymock.internal.Result;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:110","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.Result"},"status":0},{"failures":[],"tindex":63,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.MocksBehavior:88","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.Result != null) {\n    return org.easymock.internal.Result;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:110","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.Result"},"status":-2},{"failures":[],"tindex":64,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.LastControl:80","type":"CtInvocationImpl","sourcecode":"java.util.Stack<org.easymock.IArgumentMatcher>.push(new org.easymock.internal.matchers.And(org.easymock.internal.LastControl.org.easymock.internal.LastControl.popLastArgumentMatchers(int)))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:110","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.Result"},"status":-2},{"failures":[],"tindex":65,"variableMapping":{"result":"stubOrNice"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.MocksBehavior:88","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.Result != null) {\n    return org.easymock.internal.Result;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:110","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.Result"},"status":-2},{"failures":[],"tindex":66,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.MocksBehavior:88","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.Result != null) {\n    return org.easymock.internal.Result;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:110","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.Result"},"status":-2},{"failures":[],"tindex":67,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.EasyMock:1506","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(double))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:110","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.Result"},"status":-2},{"failures":[],"tindex":68,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:110","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.Result"},"status":-1},{"failures":[],"tindex":69,"variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.MockBuilder:229","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()"},"status":-1},{"failures":[],"tindex":70,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.RecordState:161","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()"},"status":-2},{"failures":[],"tindex":71,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.MockBuilder:229","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()"},"status":-1},{"failures":[],"tindex":72,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.EasyMock:1927","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Boolean>(org.easymock.Capture<java.lang.Boolean>))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()"},"status":-2},{"failures":[],"tindex":73,"variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.MockBuilder:229","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()"},"status":0},{"failures":[],"tindex":74,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.RecordState:124","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()"},"status":0},{"failures":[],"tindex":75,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.MockBuilder:223","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()"},"status":0},{"failures":[],"tindex":76,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.MocksBehavior:56","type":"CtInvocationImpl","sourcecode":"java.util.List<org.easymock.internal.ExpectedInvocationAndResult>.add(new org.easymock.internal.ExpectedInvocationAndResult(org.easymock.internal.ExpectedInvocation , org.easymock.internal.Result))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()"},"status":0},{"failures":[],"tindex":77,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:218","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.createControl()"},"status":0},{"failures":[],"tindex":78,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.MockBuilder:164","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:263","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))"},"status":-1},{"failures":[],"tindex":79,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.MockBuilder:211","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:263","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))"},"status":-1},{"failures":[],"tindex":80,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.MockBuilder:69","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:263","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))"},"status":-1},{"failures":[],"tindex":81,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.UnorderedBehavior:46","type":"CtInvocationImpl","sourcecode":"java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.add(new org.easymock.internal.ExpectedInvocationAndResults(org.easymock.internal.ExpectedInvocation , org.easymock.internal.Results))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:263","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))"},"status":-2},{"failures":[],"tindex":82,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.easymock.Capture:80","type":"CtThrowImpl","sourcecode":"throw new java.lang.AssertionError(\"Nothing captured yet\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:263","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))"},"status":-2},{"failures":[],"tindex":83,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.ConstructorArgs:51","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:263","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))"},"status":-2},{"failures":[],"tindex":84,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.MockBuilder:211","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:263","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))"},"status":-2},{"failures":[],"tindex":85,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.MocksBehavior:67","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.ExpectedInvocationAndResult.getResult()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:263","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))"},"status":-2},{"failures":[],"tindex":86,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:263","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))"},"status":-1},{"failureDictionary":{}},{"memory":16079,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":4,"vendor":"Intel","model":"Xeon","mhz":2534},{"core":4,"vendor":"Intel","model":"Xeon","mhz":2534},{"core":4,"vendor":"Intel","model":"Xeon","mhz":2534},{"core":4,"vendor":"Intel","model":"Xeon","mhz":2534}],"os.version":"3.2.0-4-amd64"}]
