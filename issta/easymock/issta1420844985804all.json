[{"failures":[],"tindex":1,"variableMapping":{"otherArgument":"expected","myArgument":"actual"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.Invocation:122","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","type":"CtReturnImpl","sourcecode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))"},"status":-2},{"failures":[],"tindex":2,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","type":"CtReturnImpl","sourcecode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))"},"status":-1},{"failures":[],"tindex":3,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.matchers.Equals:40","type":"CtReturnImpl","sourcecode":"return java.lang.Object.equals(java.lang.Object)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","type":"CtReturnImpl","sourcecode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))"},"status":-1},{"failures":[],"tindex":4,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.ErrorMessage:54","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\" (+1)\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","type":"CtReturnImpl","sourcecode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))"},"status":-2},{"failures":[],"tindex":5,"variableMapping":{"otherArgument":"actual","myArgument":"actual"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.Invocation:126","type":"CtIfImpl","sourcecode":"if (java.lang.Object != java.lang.Object) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","type":"CtReturnImpl","sourcecode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))"},"status":-2},{"failures":[],"tindex":6,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.matchers.Equals:38","type":"CtReturnImpl","sourcecode":"return java.lang.Object == null"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","type":"CtReturnImpl","sourcecode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))"},"status":-2},{"failures":[],"tindex":7,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.matchers.Compare:52","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","type":"CtReturnImpl","sourcecode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))"},"status":-2},{"failures":[],"tindex":8,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.EasyMock:2066","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToStrict();\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","type":"CtReturnImpl","sourcecode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))"},"status":-2},{"failures":[],"tindex":9,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.ArrayEquals:45","type":"CtReturnImpl","sourcecode":"return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)))"},"status":-2},{"failures":[],"tindex":10,"variableMapping":{"f":"f","this":"this"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:160","type":"CtReturnImpl","sourcecode":"return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","type":"CtIfImpl","sourcecode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} "},"status":-1},{"failures":[],"tindex":11,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:160","type":"CtReturnImpl","sourcecode":"return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","type":"CtIfImpl","sourcecode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} "},"status":-1},{"failures":[],"tindex":12,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:198","type":"CtReturnImpl","sourcecode":"return java.lang.Long"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","type":"CtIfImpl","sourcecode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} "},"status":-2},{"failures":[],"tindex":13,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:45","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(java.lang.String.java.lang.String.format(\"\\'%s\\' is not a valid Java identifier.\", java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","type":"CtIfImpl","sourcecode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} "},"status":-2},{"failures":[],"tindex":14,"variableMapping":{"f":"f","this":"this"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:160","type":"CtReturnImpl","sourcecode":"return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","type":"CtIfImpl","sourcecode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} "},"status":-1},{"failures":[],"tindex":15,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:160","type":"CtReturnImpl","sourcecode":"return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","type":"CtIfImpl","sourcecode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} "},"status":-1},{"failures":[],"tindex":16,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:160","type":"CtReturnImpl","sourcecode":"return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","type":"CtIfImpl","sourcecode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} "},"status":-1},{"failures":[],"tindex":17,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.RecordState:58","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Boolean.java.lang.Class<java.lang.Boolean>, java.lang.Boolean.java.lang.Boolean)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","type":"CtIfImpl","sourcecode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} "},"status":-2},{"failures":[],"tindex":18,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:158","type":"CtIfImpl","sourcecode":"if (((java.lang.reflect.Field.getModifiers()) & int) == int) {\n    java.lang.reflect.Field.setAccessible(true);\n    return java.lang.Long.java.lang.Long.valueOf(java.lang.reflect.Field.getLong(null));\n} "},"status":-2},{"failures":[],"tindex":19,"variableMapping":{"arguments":"methodArgs"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.ArgumentToString:83","type":"CtIfImpl","sourcecode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:111","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n    if (java.lang.Class<?>[][int].isPrimitive()) {\n        java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n    } else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n        java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n    } else {\n        final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n        org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n        java.lang.Object[][int] = java.lang.Object;\n    }\n}"},"status":-2},{"failures":[],"tindex":20,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.Capture:117","type":"CtIfImpl","sourcecode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:111","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n    if (java.lang.Class<?>[][int].isPrimitive()) {\n        java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n    } else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n        java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n    } else {\n        final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n        org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n        java.lang.Object[][int] = java.lang.Object;\n    }\n}"},"status":-2},{"failures":[],"tindex":21,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.EasyMock:1530","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(int))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:111","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n    if (java.lang.Class<?>[][int].isPrimitive()) {\n        java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n    } else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n        java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n    } else {\n        final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n        org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n        java.lang.Object[][int] = java.lang.Object;\n    }\n}"},"status":-2},{"failures":[],"tindex":22,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.MocksControl:309","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.andStubAnswer(org.easymock.IAnswer<?>);\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:111","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n    if (java.lang.Class<?>[][int].isPrimitive()) {\n        java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n    } else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n        java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n    } else {\n        final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n        org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n        java.lang.Object[][int] = java.lang.Object;\n    }\n}"},"status":-2},{"failures":[],"tindex":23,"variableMapping":{"this":"this","mocks":"methodArgs"},"series":0,"name":"add","transplant":{"position":"org.easymock.EasyMock:2038","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:111","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n    if (java.lang.Class<?>[][int].isPrimitive()) {\n        java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n    } else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n        java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n    } else {\n        final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n        org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n        java.lang.Object[][int] = java.lang.Object;\n    }\n}"},"status":-2},{"failures":[],"tindex":24,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.RecordState:240","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:111","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n    if (java.lang.Class<?>[][int].isPrimitive()) {\n        java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n    } else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n        java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n    } else {\n        final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n        org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n        java.lang.Object[][int] = java.lang.Object;\n    }\n}"},"status":-2},{"failures":[],"tindex":25,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:117","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n    java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n} else {\n    final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n    org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n    java.lang.Object[][int] = java.lang.Object;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:111","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n    if (java.lang.Class<?>[][int].isPrimitive()) {\n        java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n    } else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n        java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n    } else {\n        final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n        org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n        java.lang.Object[][int] = java.lang.Object;\n    }\n}"},"status":-2},{"failures":[],"tindex":26,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:124","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:111","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n    if (java.lang.Class<?>[][int].isPrimitive()) {\n        java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n    } else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n        java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n    } else {\n        final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n        org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n        java.lang.Object[][int] = java.lang.Object;\n    }\n}"},"status":-2},{"failures":[],"tindex":27,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:111","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n    if (java.lang.Class<?>[][int].isPrimitive()) {\n        java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n    } else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n        java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n    } else {\n        final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n        org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n        java.lang.Object[][int] = java.lang.Object;\n    }\n}"},"status":-1},{"failures":[],"tindex":28,"variableMapping":{"f":"o","obj":"o","o":"o"},"series":0,"name":"replace","transplant":{"position":"org.easymock.EasyMockSupport:632","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = java.lang.reflect.Field.get(java.lang.Object)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:715","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createMock(java.lang.String, org.easymock.MockType, java.lang.Class<?>)"},"status":-2},{"failures":[],"tindex":29,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:202","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.MocksControl.reset()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:715","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createMock(java.lang.String, org.easymock.MockType, java.lang.Class<?>)"},"status":-2},{"failures":[],"tindex":30,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.EasyMockSupport:667","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = java.lang.Object"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:715","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createMock(java.lang.String, org.easymock.MockType, java.lang.Class<?>)"},"status":-2},{"failures":[],"tindex":31,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.Invocation:209","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:715","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createMock(java.lang.String, org.easymock.MockType, java.lang.Class<?>)"},"status":-2},{"failures":[],"tindex":32,"variableMapping":{"mock":"o","toAssign":"o"},"series":0,"name":"add","transplant":{"position":"org.easymock.EasyMockSupport:667","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = java.lang.Object"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:715","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createMock(java.lang.String, org.easymock.MockType, java.lang.Class<?>)"},"status":0},{"failures":[],"tindex":33,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.Capture:117","type":"CtIfImpl","sourcecode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:715","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createMock(java.lang.String, org.easymock.MockType, java.lang.Class<?>)"},"status":-2},{"failures":[],"tindex":34,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.EasyMockSupport:712","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = ((org.easymock.EasyMockSupport)(java.lang.Object)).createMock(java.lang.String, org.easymock.MockType, java.lang.Class<?>)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:715","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createMock(java.lang.String, org.easymock.MockType, java.lang.Class<?>)"},"status":-1},{"failures":[],"tindex":35,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.EasyMock:602","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:715","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createMock(java.lang.String, org.easymock.MockType, java.lang.Class<?>)"},"status":-1},{"failures":[],"tindex":36,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:715","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createMock(java.lang.String, org.easymock.MockType, java.lang.Class<?>)"},"status":-2},{"failures":[],"tindex":37,"variableMapping":{"constructor":"constructor"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.MockBuilder:113","type":"CtAssignmentImpl","sourcecode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])"},"status":-2},{"failures":[],"tindex":38,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.MockBuilder:235","type":"CtIfImpl","sourcecode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])"},"status":-2},{"failures":[],"tindex":39,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.MockBuilder:113","type":"CtAssignmentImpl","sourcecode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])"},"status":-2},{"failures":[],"tindex":40,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.ExpectedInvocation:109","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuffer.append(\", \")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])"},"status":-2},{"failures":[],"tindex":41,"variableMapping":{"constructor":"constructor"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.MockBuilder:113","type":"CtAssignmentImpl","sourcecode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])"},"status":0},{"failures":[],"tindex":42,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:123","type":"CtNewClassImpl","sourcecode":"new org.easymock.internal.JavaProxyFactory()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])"},"status":0},{"failures":[],"tindex":43,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.MockBuilder:113","type":"CtAssignmentImpl","sourcecode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])"},"status":0},{"failures":[],"tindex":44,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:59","type":"CtLocalVariableImpl","sourcecode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])"},"status":0},{"failures":[],"tindex":45,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:151","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor(java.lang.Class<?>[])"},"status":-2},{"failures":[],"tindex":46,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","type":"CtReturnImpl","sourcecode":"return \"geq\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:1790","type":"CtReturnImpl","sourcecode":"return null"},"status":0},{"failures":[],"tindex":47,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","type":"CtReturnImpl","sourcecode":"return \"gt\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:1790","type":"CtReturnImpl","sourcecode":"return null"},"status":0},{"failures":[],"tindex":48,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","type":"CtReturnImpl","sourcecode":"return \"leq\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:1790","type":"CtReturnImpl","sourcecode":"return null"},"status":0},{"failures":[],"tindex":49,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.MocksControl:242","type":"CtThrowImpl","sourcecode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:1790","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":50,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.easymock.Capture:132","type":"CtReturnImpl","sourcecode":"return \"Nothing captured yet\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:1790","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":51,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","type":"CtReturnImpl","sourcecode":"return \"leq\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:1790","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":52,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.matchers.LessThan:34","type":"CtReturnImpl","sourcecode":"return \"lt\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:1790","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":53,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.EasyMock:999","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.LessThan<java.lang.Byte>(byte))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:1790","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":54,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:1790","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":55,"variableMapping":{"name":"methodName"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.ReflectionUtils:108","type":"CtThrowImpl","sourcecode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))"},"status":-1},{"failures":[],"tindex":56,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.RecordState:281","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))"},"status":-1},{"failures":[],"tindex":57,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.RecordState:246","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))"},"status":-1},{"failures":[],"tindex":58,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:80","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))"},"status":-2},{"failures":[],"tindex":59,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.easymock.EasyMock:2125","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))"},"status":-2},{"failures":[],"tindex":60,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.Range:41","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))"},"status":-2},{"failures":[],"tindex":61,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.RecordState:281","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))"},"status":-2},{"failures":[],"tindex":62,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.ClassProxyFactory:197","type":"CtLocalVariableImpl","sourcecode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))"},"status":-2},{"failures":[],"tindex":63,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:81","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))"},"status":-1},{"failures":[],"tindex":64,"variableMapping":{"cls":"type","type":"type"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","type":"CtAssignmentImpl","sourcecode":"java.lang.Class<?> = java.lang.Class<?>"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","type":"CtAssignmentImpl","sourcecode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()"},"status":-2},{"failures":[],"tindex":65,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:123","type":"CtNewClassImpl","sourcecode":"new org.easymock.internal.JavaProxyFactory()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","type":"CtAssignmentImpl","sourcecode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()"},"status":-2},{"failures":[],"tindex":66,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","type":"CtAssignmentImpl","sourcecode":"java.lang.Class<?> = java.lang.Class<?>"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","type":"CtAssignmentImpl","sourcecode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()"},"status":-2},{"failures":[],"tindex":67,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.MethodSerializationWrapper:63","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Class.java.lang.Class.forName(java.lang.String, true, java.lang.Thread.java.lang.Thread.currentThread().getContextClassLoader())"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","type":"CtAssignmentImpl","sourcecode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()"},"status":-2},{"failures":[],"tindex":68,"variableMapping":{"clazz":"type"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","type":"CtAssignmentImpl","sourcecode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","type":"CtAssignmentImpl","sourcecode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()"},"status":0},{"failures":[],"tindex":69,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:123","type":"CtNewClassImpl","sourcecode":"new org.easymock.internal.JavaProxyFactory()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","type":"CtAssignmentImpl","sourcecode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()"},"status":0},{"failures":[],"tindex":70,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:388","type":"CtAssignmentImpl","sourcecode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","type":"CtAssignmentImpl","sourcecode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()"},"status":-2},{"failures":[],"tindex":71,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.Invocation:93","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == null) || (!(java.lang.Object.getClass().equals(java.lang.Object.getClass())))) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","type":"CtAssignmentImpl","sourcecode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()"},"status":-2},{"failures":[],"tindex":72,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:272","type":"CtAssignmentImpl","sourcecode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()"},"status":-2},{"failures":[],"tindex":73,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.MocksBehavior:152","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:86","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = org.easymock.internal.ExpectedInvocationAndResults.getResults().hasValidCallCount()"},"status":-2},{"failures":[],"tindex":74,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.EasyMockSupport:633","type":"CtLocalVariableImpl","sourcecode":"java.lang.IllegalAccessException java.lang.IllegalAccessException"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:86","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = org.easymock.internal.ExpectedInvocationAndResults.getResults().hasValidCallCount()"},"status":-2},{"failures":[],"tindex":75,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.MocksBehavior:152","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:86","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = org.easymock.internal.ExpectedInvocationAndResults.getResults().hasValidCallCount()"},"status":-2},{"failures":[],"tindex":76,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.ClassProxyFactory:225","type":"CtLocalVariableImpl","sourcecode":"net.sf.cglib.proxy.Factory net.sf.cglib.proxy.Factory"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:86","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = org.easymock.internal.ExpectedInvocationAndResults.getResults().hasValidCallCount()"},"status":-2},{"failures":[],"tindex":77,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.MocksBehavior:152","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:86","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = org.easymock.internal.ExpectedInvocationAndResults.getResults().hasValidCallCount()"},"status":-2},{"failures":[],"tindex":78,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:57","type":"CtLocalVariableImpl","sourcecode":"java.io.IOException java.io.IOException"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:86","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = org.easymock.internal.ExpectedInvocationAndResults.getResults().hasValidCallCount()"},"status":-2},{"failures":[],"tindex":79,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.MocksBehavior:152","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:86","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = org.easymock.internal.ExpectedInvocationAndResults.getResults().hasValidCallCount()"},"status":-2},{"failures":[],"tindex":80,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.ReflectionUtils:118","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Method"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:86","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = org.easymock.internal.ExpectedInvocationAndResults.getResults().hasValidCallCount()"},"status":-2},{"failures":[],"tindex":81,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:86","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = org.easymock.internal.ExpectedInvocationAndResults.getResults().hasValidCallCount()"},"status":-2},{"failures":[],"tindex":82,"variableMapping":{"number":"number"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.RecordState:199","type":"CtReturnImpl","sourcecode":"return java.lang.Number.intValue()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:207","type":"CtReturnImpl","sourcecode":"return java.lang.Number"},"status":-1},{"failures":[],"tindex":83,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.RecordState:201","type":"CtReturnImpl","sourcecode":"return java.lang.Number.longValue()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:207","type":"CtReturnImpl","sourcecode":"return java.lang.Number"},"status":-1},{"failures":[],"tindex":84,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.RecordState:197","type":"CtReturnImpl","sourcecode":"return java.lang.Number.shortValue()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:207","type":"CtReturnImpl","sourcecode":"return java.lang.Number"},"status":-1},{"failures":[],"tindex":85,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.ClassProxyFactory:110","type":"CtIfImpl","sourcecode":"if (java.util.Set<org.easymock.internal.MethodSerializationWrapper> == null) {\n    return ;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:207","type":"CtReturnImpl","sourcecode":"return java.lang.Number"},"status":-2},{"failures":[],"tindex":86,"variableMapping":{"number":"number"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.RecordState:201","type":"CtReturnImpl","sourcecode":"return java.lang.Number.longValue()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:207","type":"CtReturnImpl","sourcecode":"return java.lang.Number"},"status":-2},{"failures":[],"tindex":87,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.RecordState:205","type":"CtReturnImpl","sourcecode":"return java.lang.Number.doubleValue()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:207","type":"CtReturnImpl","sourcecode":"return java.lang.Number"},"status":-2},{"failures":[],"tindex":88,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.RecordState:199","type":"CtReturnImpl","sourcecode":"return java.lang.Number.intValue()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:207","type":"CtReturnImpl","sourcecode":"return java.lang.Number"},"status":-2},{"failures":[],"tindex":89,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.Invocation:80","type":"CtReturnImpl","sourcecode":"return java.lang.Object"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:207","type":"CtReturnImpl","sourcecode":"return java.lang.Number"},"status":-2},{"failures":[],"tindex":90,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:207","type":"CtReturnImpl","sourcecode":"return java.lang.Number"},"status":-2},{"failureDictionary":{}},{"memory":8006,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2613},{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2613},{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2613},{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2613}],"os.version":"3.2.0-4-amd64"}]
