[{"failures":[],"tindex":1,"variableMapping":{"this":"mock","org.easymock.EasyMock.DISABLE_CLASS_MOCKING":"mock"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.MocksControl:128","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(org.easymock.EasyMock.java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:150","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.Object.toString()"},"status":-2},{"failures":[],"tindex":2,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:430","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<java.lang.reflect.Method> java.util.List<java.lang.reflect.Method> = new java.util.LinkedList<java.lang.reflect.Method>()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:150","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.Object.toString()"},"status":-2},{"failures":[],"tindex":3,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.Invocation:143","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.reflect.Method.getName()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:150","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.Object.toString()"},"status":-2},{"failures":[],"tindex":4,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:180","type":"CtTryImpl","sourcecode":"try {\n    java.lang.reflect.Method = java.io.ObjectStreamClass.java.io.ObjectStreamClass.getDeclaredMethod(java.lang.String, new java.lang.Class[]{ java.lang.Class.java.lang.Class });\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"));\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:150","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.Object.toString()"},"status":-2},{"failures":[],"tindex":5,"variableMapping":{"method":"mock"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.Invocation:143","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.reflect.Method.getName()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:150","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.Object.toString()"},"status":-2},{"failures":[],"tindex":6,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.LastControl:93","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:150","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.Object.toString()"},"status":-2},{"failures":[],"tindex":7,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.MocksControl:128","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(org.easymock.EasyMock.java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:150","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.Object.toString()"},"status":-2},{"failures":[],"tindex":8,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.MocksBehavior:124","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:150","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.Object.toString()"},"status":-2},{"failures":[],"tindex":9,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:150","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.Object.toString()"},"status":-2},{"failures":[],"tindex":10,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Results:53","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":11,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Results:53","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":12,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Results:53","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":13,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:49","type":"CtReturnImpl","sourcecode":"return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Results:53","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":14,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Results:53","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":15,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Results:53","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":16,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Results:53","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":17,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.EasyMockSupport:366","type":"CtReturnImpl","sourcecode":"return org.easymock.EasyMockSupport.createControl(org.easymock.MockType).createMock(java.lang.String, java.lang.Class<T>)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Results:53","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":18,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Results:53","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":19,"variableMapping":{"values":"values"},"series":0,"name":"replace","transplant":{"position":"org.easymock.Capture:79","type":"CtIfImpl","sourcecode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:60","type":"CtInvocationImpl","sourcecode":"java.util.List<T>.clear()"},"status":-1},{"failures":[],"tindex":20,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.Capture:79","type":"CtIfImpl","sourcecode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:60","type":"CtInvocationImpl","sourcecode":"java.util.List<T>.clear()"},"status":-1},{"failures":[],"tindex":21,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.Capture:79","type":"CtIfImpl","sourcecode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:60","type":"CtInvocationImpl","sourcecode":"java.util.List<T>.clear()"},"status":-1},{"failures":[],"tindex":22,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.EasyMockSupport:326","type":"CtReturnImpl","sourcecode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:60","type":"CtInvocationImpl","sourcecode":"java.util.List<T>.clear()"},"status":-2},{"failures":[],"tindex":23,"variableMapping":{"values":"values"},"series":0,"name":"add","transplant":{"position":"org.easymock.Capture:79","type":"CtIfImpl","sourcecode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:60","type":"CtInvocationImpl","sourcecode":"java.util.List<T>.clear()"},"status":-1},{"failures":[],"tindex":24,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.Capture:79","type":"CtIfImpl","sourcecode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:60","type":"CtInvocationImpl","sourcecode":"java.util.List<T>.clear()"},"status":-1},{"failures":[],"tindex":25,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.Capture:79","type":"CtIfImpl","sourcecode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:60","type":"CtInvocationImpl","sourcecode":"java.util.List<T>.clear()"},"status":-1},{"failures":[],"tindex":26,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.EasyMock:2170","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.EasyMockProperties.org.easymock.internal.EasyMockProperties.getInstance().getProperty(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:60","type":"CtInvocationImpl","sourcecode":"java.util.List<T>.clear()"},"status":-2},{"failures":[],"tindex":27,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:60","type":"CtInvocationImpl","sourcecode":"java.util.List<T>.clear()"},"status":-1},{"failures":[],"tindex":28,"variableMapping":{"stack":"stack"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.LastControl:133","type":"CtInvocationImpl","sourcecode":"java.util.Stack<org.easymock.internal.Invocation>.pop()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.LastControl:128","type":"CtInvocationImpl","sourcecode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)"},"status":-1},{"failures":[],"tindex":29,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.ExpectedInvocation:49","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.Invocation.getArguments()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.LastControl:128","type":"CtInvocationImpl","sourcecode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)"},"status":-1},{"failures":[],"tindex":30,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.LastControl:133","type":"CtInvocationImpl","sourcecode":"java.util.Stack<org.easymock.internal.Invocation>.pop()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.LastControl:128","type":"CtInvocationImpl","sourcecode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)"},"status":-1},{"failures":[],"tindex":31,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.ConstructorArgs:54","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>[][int];\n    final java.lang.Object java.lang.Object = java.lang.Object[][int];\n    if (java.lang.Class<?>.isPrimitive()) {\n        if (java.lang.Object == null) {\n            throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n        } \n        try {\n            final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n            final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n            if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n                continue;\n            } \n        } catch (final java.lang.Exception java.lang.Exception) {\n            throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n        }\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n    if (java.lang.Object == null) {\n        continue;\n    } \n    if (!(java.lang.Class<?>.isAssignableFrom(java.lang.Object.getClass()))) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.LastControl:128","type":"CtInvocationImpl","sourcecode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)"},"status":-2},{"failures":[],"tindex":32,"variableMapping":{"stack":"stack"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.LastControl:133","type":"CtInvocationImpl","sourcecode":"java.util.Stack<org.easymock.internal.Invocation>.pop()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.LastControl:128","type":"CtInvocationImpl","sourcecode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)"},"status":-1},{"failures":[],"tindex":33,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.LastControl:62","type":"CtAssignmentImpl","sourcecode":"java.util.Stack<org.easymock.IArgumentMatcher> = new java.util.Stack<org.easymock.IArgumentMatcher>()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.LastControl:128","type":"CtInvocationImpl","sourcecode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)"},"status":-2},{"failures":[],"tindex":34,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.LastControl:133","type":"CtInvocationImpl","sourcecode":"java.util.Stack<org.easymock.internal.Invocation>.pop()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.LastControl:128","type":"CtInvocationImpl","sourcecode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)"},"status":-1},{"failures":[],"tindex":35,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.MocksBehavior:130","type":"CtForEachImpl","sourcecode":"for (final org.easymock.internal.ErrorMessage org.easymock.internal.ErrorMessage : java.util.List<org.easymock.internal.ErrorMessage>) {\n    if (org.easymock.internal.ErrorMessage.isMatching()) {\n        int++;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.LastControl:128","type":"CtInvocationImpl","sourcecode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)"},"status":-2},{"failures":[],"tindex":36,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.LastControl:128","type":"CtInvocationImpl","sourcecode":"java.util.Stack<org.easymock.internal.Invocation>.push(org.easymock.internal.Invocation)"},"status":-1},{"failures":[],"tindex":37,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:318","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":38,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:318","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":39,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:318","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":40,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.matchers.CompareTo:41","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:318","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":41,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:318","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":42,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:318","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":43,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:318","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":44,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.EasyMockSupport:657","type":"CtIfImpl","sourcecode":"if (((java.lang.reflect.Field.getModifiers()) & ((java.lang.reflect.Modifier.int) + (java.lang.reflect.Modifier.int))) != 0) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:318","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":45,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:318","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":46,"variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"org.easymock.Capture:118","type":"CtInvocationImpl","sourcecode":"org.easymock.Capture<T>.reset()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:112","type":"CtIfImpl","sourcecode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} "},"status":-1},{"failures":[],"tindex":47,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.ReplayState:105","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.ReplayState.throwWrappedIllegalStateException()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:112","type":"CtIfImpl","sourcecode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} "},"status":-2},{"failures":[],"tindex":48,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.Capture:60","type":"CtInvocationImpl","sourcecode":"java.util.List<T>.clear()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:112","type":"CtIfImpl","sourcecode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} "},"status":-1},{"failures":[],"tindex":49,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.ExpectedInvocation:94","type":"CtIfImpl","sourcecode":"if (!(java.util.List<org.easymock.IArgumentMatcher>.get(int).matches(java.lang.Object[][int]))) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:112","type":"CtIfImpl","sourcecode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} "},"status":-2},{"failures":[],"tindex":50,"variableMapping":{"values":"values"},"series":0,"name":"add","transplant":{"position":"org.easymock.Capture:60","type":"CtInvocationImpl","sourcecode":"java.util.List<T>.clear()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:112","type":"CtIfImpl","sourcecode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} "},"status":-1},{"failures":[],"tindex":51,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.EasyMock:707","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.GreaterOrEqual<T>(java.lang.Comparable<T>))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:112","type":"CtIfImpl","sourcecode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} "},"status":-2},{"failures":[],"tindex":52,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.Capture:60","type":"CtInvocationImpl","sourcecode":"java.util.List<T>.clear()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:112","type":"CtIfImpl","sourcecode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} "},"status":-1},{"failures":[],"tindex":53,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.RecordState:91","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"calling verify is not allowed in record state\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:112","type":"CtIfImpl","sourcecode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} "},"status":-1},{"failures":[],"tindex":54,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:112","type":"CtIfImpl","sourcecode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} "},"status":-1},{"failures":[],"tindex":55,"variableMapping":{"result":"result"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:39","type":"CtReturnImpl","sourcecode":"return int <= 0"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","type":"CtReturnImpl","sourcecode":"return int >= 0"},"status":-1},{"failures":[],"tindex":56,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.matchers.LessThan:39","type":"CtReturnImpl","sourcecode":"return int < 0"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","type":"CtReturnImpl","sourcecode":"return int >= 0"},"status":-1},{"failures":[],"tindex":57,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","type":"CtReturnImpl","sourcecode":"return int >= 0"},"status":-1},{"failures":[],"tindex":58,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.RecordState:176","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksBehavior.addStub(org.easymock.internal.ExpectedInvocation, org.easymock.internal.Result.org.easymock.internal.Result.createDelegatingResult(java.lang.Object))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","type":"CtReturnImpl","sourcecode":"return int >= 0"},"status":-2},{"failures":[],"tindex":59,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.matchers.And:43","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","type":"CtReturnImpl","sourcecode":"return int >= 0"},"status":-2},{"failures":[],"tindex":60,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.matchers.GreaterThan:39","type":"CtReturnImpl","sourcecode":"return int > 0"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","type":"CtReturnImpl","sourcecode":"return int >= 0"},"status":-2},{"failures":[],"tindex":61,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.matchers.And:43","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","type":"CtReturnImpl","sourcecode":"return int >= 0"},"status":-2},{"failures":[],"tindex":62,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.RecordState:107","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireValidThrowable(java.lang.Throwable)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","type":"CtReturnImpl","sourcecode":"return int >= 0"},"status":-2},{"failures":[],"tindex":63,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","type":"CtReturnImpl","sourcecode":"return int >= 0"},"status":-2},{"failures":[],"tindex":64,"variableMapping":{"constructorArgs":"args"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.MockBuilder:163","type":"CtIfImpl","sourcecode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:204","type":"CtTryImpl","sourcecode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}"},"status":-2},{"failures":[],"tindex":65,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.ClassProxyFactory:207","type":"CtAssignmentImpl","sourcecode":"T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:204","type":"CtTryImpl","sourcecode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}"},"status":-2},{"failures":[],"tindex":66,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.MockBuilder:210","type":"CtIfImpl","sourcecode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:204","type":"CtTryImpl","sourcecode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}"},"status":-2},{"failures":[],"tindex":67,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.LastControl:79","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.assertState((java.util.Stack<org.easymock.IArgumentMatcher> != null), org.easymock.internal.LastControl.java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:204","type":"CtTryImpl","sourcecode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}"},"status":-2},{"failures":[],"tindex":68,"variableMapping":{"constructorArgs":"args"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.MockBuilder:210","type":"CtIfImpl","sourcecode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:204","type":"CtTryImpl","sourcecode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}"},"status":0},{"failures":[],"tindex":69,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.ClassProxyFactory:207","type":"CtAssignmentImpl","sourcecode":"T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:204","type":"CtTryImpl","sourcecode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}"},"status":-2},{"failures":[],"tindex":70,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.MockBuilder:210","type":"CtIfImpl","sourcecode":"if ((org.easymock.ConstructorArgs) == null) {\n    throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:204","type":"CtTryImpl","sourcecode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}"},"status":-2},{"failures":[],"tindex":71,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.matchers.Not:36","type":"CtReturnImpl","sourcecode":"return !(org.easymock.IArgumentMatcher.matches(java.lang.Object))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:204","type":"CtTryImpl","sourcecode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}"},"status":-2},{"failures":[],"tindex":72,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:204","type":"CtTryImpl","sourcecode":"try {\n    java.lang.reflect.Constructor<?>.setAccessible(true);\n    T = ((T)(java.lang.reflect.Constructor<?>.newInstance(org.easymock.ConstructorArgs.getInitArgs())));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new java.lang.RuntimeException(\"Failed to instantiate mock calling constructor: Exception in constructor\" , java.lang.reflect.InvocationTargetException.getTargetException());\n}"},"status":-2},{"failures":[],"tindex":73,"variableMapping":{"position":"endPosition","behaviorLists":"behaviorLists"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.MocksBehavior:91","type":"CtIfImpl","sourcecode":"if (!(java.util.List<org.easymock.internal.UnorderedBehavior>.get(int).verify())) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:114","type":"CtIfImpl","sourcecode":"if (int == (java.util.List<org.easymock.internal.UnorderedBehavior>.size())) {\n    int--;\n} "},"status":-2},{"failures":[],"tindex":74,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:123","type":"CtNewClassImpl","sourcecode":"new org.easymock.internal.JavaProxyFactory()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:114","type":"CtIfImpl","sourcecode":"if (int == (java.util.List<org.easymock.internal.UnorderedBehavior>.size())) {\n    int--;\n} "},"status":-1},{"failures":[],"tindex":75,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.MocksBehavior:91","type":"CtIfImpl","sourcecode":"if (!(java.util.List<org.easymock.internal.UnorderedBehavior>.get(int).verify())) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:114","type":"CtIfImpl","sourcecode":"if (int == (java.util.List<org.easymock.internal.UnorderedBehavior>.size())) {\n    int--;\n} "},"status":-2},{"failures":[],"tindex":76,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.ReflectionUtils:34","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.ReflectionUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(byte.byte, java.lang.Byte.java.lang.Byte)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:114","type":"CtIfImpl","sourcecode":"if (int == (java.util.List<org.easymock.internal.UnorderedBehavior>.size())) {\n    int--;\n} "},"status":-2},{"failures":[],"tindex":77,"variableMapping":{"position":"endPosition","behaviorLists":"behaviorLists"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.MocksBehavior:91","type":"CtIfImpl","sourcecode":"if (!(java.util.List<org.easymock.internal.UnorderedBehavior>.get(int).verify())) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:114","type":"CtIfImpl","sourcecode":"if (int == (java.util.List<org.easymock.internal.UnorderedBehavior>.size())) {\n    int--;\n} "},"status":-2},{"failures":[],"tindex":78,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.MocksBehavior:115","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:114","type":"CtIfImpl","sourcecode":"if (int == (java.util.List<org.easymock.internal.UnorderedBehavior>.size())) {\n    int--;\n} "},"status":-1},{"failures":[],"tindex":79,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.MocksBehavior:91","type":"CtIfImpl","sourcecode":"if (!(java.util.List<org.easymock.internal.UnorderedBehavior>.get(int).verify())) {\n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:114","type":"CtIfImpl","sourcecode":"if (int == (java.util.List<org.easymock.internal.UnorderedBehavior>.size())) {\n    int--;\n} "},"status":-2},{"failures":[],"tindex":80,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:322","type":"CtLocalVariableImpl","sourcecode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:114","type":"CtIfImpl","sourcecode":"if (int == (java.util.List<org.easymock.internal.UnorderedBehavior>.size())) {\n    int--;\n} "},"status":-2},{"failures":[],"tindex":81,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:114","type":"CtIfImpl","sourcecode":"if (int == (java.util.List<org.easymock.internal.UnorderedBehavior>.size())) {\n    int--;\n} "},"status":-1},{"failures":[],"tindex":82,"variableMapping":{"paramType":"mockClass","argType":"mockClass"},"series":0,"name":"replace","transplant":{"position":"org.easymock.ConstructorArgs:68","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:226","type":"CtTryImpl","sourcecode":"try {\n    net.sf.cglib.proxy.Factory = ((net.sf.cglib.proxy.Factory)(org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getInstantiator().newInstance(java.lang.Class<?>)));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"));\n}"},"status":-2},{"failures":[],"tindex":83,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.EasyMock:1220","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:226","type":"CtTryImpl","sourcecode":"try {\n    net.sf.cglib.proxy.Factory = ((net.sf.cglib.proxy.Factory)(org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getInstantiator().newInstance(java.lang.Class<?>)));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"));\n}"},"status":-2},{"failures":[],"tindex":84,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.ConstructorArgs:68","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:226","type":"CtTryImpl","sourcecode":"try {\n    net.sf.cglib.proxy.Factory = ((net.sf.cglib.proxy.Factory)(org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getInstantiator().newInstance(java.lang.Class<?>)));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"));\n}"},"status":-2},{"failures":[],"tindex":85,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:111","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n    if (java.lang.Class<?>[][int].isPrimitive()) {\n        java.lang.Object[][int] = org.easymock.internal.RecordState.org.easymock.internal.RecordState.emptyReturnValueFor(java.lang.Class<?>[][int]);\n    } else if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.Class<?>[][int].getModifiers())) {\n        java.lang.Object[][int] = org.easymock.internal.DefaultClassInstantiator.newInstance(java.lang.Class<?>[][int]);\n    } else {\n        final java.lang.Object java.lang.Object = org.easymock.EasyMock.org.easymock.EasyMock.createNiceMock(java.lang.Class<?>[][int]);\n        org.easymock.EasyMock.org.easymock.EasyMock.replay(java.lang.Object);\n        java.lang.Object[][int] = java.lang.Object;\n    }\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:226","type":"CtTryImpl","sourcecode":"try {\n    net.sf.cglib.proxy.Factory = ((net.sf.cglib.proxy.Factory)(org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getInstantiator().newInstance(java.lang.Class<?>)));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"));\n}"},"status":-2},{"failures":[],"tindex":86,"variableMapping":{"paramType":"mockClass","argType":"mockClass"},"series":0,"name":"add","transplant":{"position":"org.easymock.ConstructorArgs:68","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:226","type":"CtTryImpl","sourcecode":"try {\n    net.sf.cglib.proxy.Factory = ((net.sf.cglib.proxy.Factory)(org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getInstantiator().newInstance(java.lang.Class<?>)));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"));\n}"},"status":-2},{"failures":[],"tindex":87,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.EasyMock:1458","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:226","type":"CtTryImpl","sourcecode":"try {\n    net.sf.cglib.proxy.Factory = ((net.sf.cglib.proxy.Factory)(org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getInstantiator().newInstance(java.lang.Class<?>)));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"));\n}"},"status":-1},{"failures":[],"tindex":88,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.RecordState:245","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.isPrimitive()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:226","type":"CtTryImpl","sourcecode":"try {\n    net.sf.cglib.proxy.Factory = ((net.sf.cglib.proxy.Factory)(org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getInstantiator().newInstance(java.lang.Class<?>)));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"));\n}"},"status":-2},{"failures":[],"tindex":89,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.UnorderedBehavior:54","type":"CtContinueImpl","sourcecode":"continue"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:226","type":"CtTryImpl","sourcecode":"try {\n    net.sf.cglib.proxy.Factory = ((net.sf.cglib.proxy.Factory)(org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getInstantiator().newInstance(java.lang.Class<?>)));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"));\n}"},"status":-2},{"failures":[],"tindex":90,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:226","type":"CtTryImpl","sourcecode":"try {\n    net.sf.cglib.proxy.Factory = ((net.sf.cglib.proxy.Factory)(org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getInstantiator().newInstance(java.lang.Class<?>)));\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new java.lang.RuntimeException(((((\"Fail to instantiate mock for \" + java.lang.Class<T>) + \" on \") + org.easymock.internal.ClassInstantiatorFactory.(org.easymock.internal.ClassInstantiatorFactory.getJVM())) + \" JVM\"));\n}"},"status":-2},{"failureDictionary":{}},{"memory":8006,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2600},{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2600},{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2600},{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2600}],"os.version":"3.2.0-4-amd64"}]
