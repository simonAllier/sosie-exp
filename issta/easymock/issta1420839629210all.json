[{"failures":[],"tindex":1,"variableMapping":{"paramTypes":"varArgs","length":"nonVarArgsCount","initArgs":"newArgs"},"series":0,"name":"replace","transplant":{"position":"org.easymock.ConstructorArgs:50","type":"CtIfImpl","sourcecode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:64","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(java.lang.Object[], 0, java.lang.Object[], int, int)"},"status":-1},{"failures":[],"tindex":2,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.RecordState:171","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:64","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(java.lang.Object[], 0, java.lang.Object[], int, int)"},"status":-2},{"failures":[],"tindex":3,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.ArgumentToString:83","type":"CtIfImpl","sourcecode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:64","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(java.lang.Object[], 0, java.lang.Object[], int, int)"},"status":-2},{"failures":[],"tindex":4,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.EasyMock:1646","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.ArrayEquals(int[]))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:64","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(java.lang.Object[], 0, java.lang.Object[], int, int)"},"status":-2},{"failures":[],"tindex":5,"variableMapping":{"paramTypes":"newArgs","length":"nonVarArgsCount","initArgs":"varArgs"},"series":0,"name":"add","transplant":{"position":"org.easymock.ConstructorArgs:50","type":"CtIfImpl","sourcecode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:64","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(java.lang.Object[], 0, java.lang.Object[], int, int)"},"status":0},{"failures":[],"tindex":6,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.EasyMock:1458","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:64","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(java.lang.Object[], 0, java.lang.Object[], int, int)"},"status":-1},{"failures":[],"tindex":7,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.ArgumentToString:83","type":"CtIfImpl","sourcecode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:64","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(java.lang.Object[], 0, java.lang.Object[], int, int)"},"status":-2},{"failures":[],"tindex":8,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.RuntimeExceptionWrapper:32","type":"CtReturnImpl","sourcecode":"return java.lang.RuntimeException"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:64","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(java.lang.Object[], 0, java.lang.Object[], int, int)"},"status":-2},{"failures":[],"tindex":9,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:64","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(java.lang.Object[], 0, java.lang.Object[], int, int)"},"status":-1},{"failures":[],"tindex":10,"variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.RecordState:181","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:126","type":"CtIfImpl","sourcecode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} "},"status":-1},{"failures":[],"tindex":11,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.ReplayState:105","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.ReplayState.throwWrappedIllegalStateException()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:126","type":"CtIfImpl","sourcecode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} "},"status":-2},{"failures":[],"tindex":12,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.RecordState:133","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:126","type":"CtIfImpl","sourcecode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} "},"status":-1},{"failures":[],"tindex":13,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.MocksControl:336","type":"CtLocalVariableImpl","sourcecode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:126","type":"CtIfImpl","sourcecode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} "},"status":-1},{"failures":[],"tindex":14,"variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.RecordState:240","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:126","type":"CtIfImpl","sourcecode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} "},"status":0},{"failures":[],"tindex":15,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.RecordState:118","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:126","type":"CtIfImpl","sourcecode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} "},"status":-1},{"failures":[],"tindex":16,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.RecordState:96","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:126","type":"CtIfImpl","sourcecode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} "},"status":0},{"failures":[],"tindex":17,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.EasyMock:1433","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:126","type":"CtIfImpl","sourcecode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} "},"status":-2},{"failures":[],"tindex":18,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:126","type":"CtIfImpl","sourcecode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} "},"status":-1},{"failures":[],"tindex":19,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.easymock.EasyMock:2125","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:241","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))"},"status":-1},{"failures":[],"tindex":20,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.ConstructorArgs:51","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:241","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))"},"status":-1},{"failures":[],"tindex":21,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.EasyMock:2125","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:241","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))"},"status":-1},{"failures":[],"tindex":22,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.EasyMockSupport:702","type":"CtContinueImpl","sourcecode":"continue"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:241","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))"},"status":-2},{"failures":[],"tindex":23,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.MockBuilder:236","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:241","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))"},"status":-2},{"failures":[],"tindex":24,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.MockBuilder:236","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:241","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))"},"status":-2},{"failures":[],"tindex":25,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.matchers.Equals:63","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not supported\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:241","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))"},"status":-2},{"failures":[],"tindex":26,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.Results:105","type":"CtReturnImpl","sourcecode":"return int"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:241","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))"},"status":-2},{"failures":[],"tindex":27,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:241","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"))"},"status":-1},{"failures":[],"tindex":28,"variableMapping":{"bridgeMethod":"method"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","type":"CtAssertImpl","sourcecode":"assert java.lang.reflect.Method != null : \"Method must not be null\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:180","type":"CtTryImpl","sourcecode":"try {\n    java.lang.reflect.Method = java.io.ObjectStreamClass.java.io.ObjectStreamClass.getDeclaredMethod(java.lang.String, new java.lang.Class[]{ java.lang.Class.java.lang.Class });\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"));\n}"},"status":-2},{"failures":[],"tindex":29,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:123","type":"CtNewClassImpl","sourcecode":"new org.easymock.internal.JavaProxyFactory()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:180","type":"CtTryImpl","sourcecode":"try {\n    java.lang.reflect.Method = java.io.ObjectStreamClass.java.io.ObjectStreamClass.getDeclaredMethod(java.lang.String, new java.lang.Class[]{ java.lang.Class.java.lang.Class });\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"));\n}"},"status":-2},{"failures":[],"tindex":30,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.ReflectionUtils:107","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:180","type":"CtTryImpl","sourcecode":"try {\n    java.lang.reflect.Method = java.io.ObjectStreamClass.java.io.ObjectStreamClass.getDeclaredMethod(java.lang.String, new java.lang.Class[]{ java.lang.Class.java.lang.Class });\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"));\n}"},"status":-2},{"failures":[],"tindex":31,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.Invocation:185","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:180","type":"CtTryImpl","sourcecode":"try {\n    java.lang.reflect.Method = java.io.ObjectStreamClass.java.io.ObjectStreamClass.getDeclaredMethod(java.lang.String, new java.lang.Class[]{ java.lang.Class.java.lang.Class });\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"));\n}"},"status":-2},{"failures":[],"tindex":32,"variableMapping":{"bridgeMethod":"method"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","type":"CtAssertImpl","sourcecode":"assert java.lang.reflect.Method != null : \"Method must not be null\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:180","type":"CtTryImpl","sourcecode":"try {\n    java.lang.reflect.Method = java.io.ObjectStreamClass.java.io.ObjectStreamClass.getDeclaredMethod(java.lang.String, new java.lang.Class[]{ java.lang.Class.java.lang.Class });\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"));\n}"},"status":0},{"failures":[],"tindex":33,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Method.setAccessible(true)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:180","type":"CtTryImpl","sourcecode":"try {\n    java.lang.reflect.Method = java.io.ObjectStreamClass.java.io.ObjectStreamClass.getDeclaredMethod(java.lang.String, new java.lang.Class[]{ java.lang.Class.java.lang.Class });\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"));\n}"},"status":0},{"failures":[],"tindex":34,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:180","type":"CtTryImpl","sourcecode":"try {\n    java.lang.reflect.Method = java.io.ObjectStreamClass.java.io.ObjectStreamClass.getDeclaredMethod(java.lang.String, new java.lang.Class[]{ java.lang.Class.java.lang.Class });\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"));\n}"},"status":-2},{"failures":[],"tindex":35,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:339","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:180","type":"CtTryImpl","sourcecode":"try {\n    java.lang.reflect.Method = java.io.ObjectStreamClass.java.io.ObjectStreamClass.getDeclaredMethod(java.lang.String, new java.lang.Class[]{ java.lang.Class.java.lang.Class });\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"));\n}"},"status":-2},{"failures":[],"tindex":36,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:180","type":"CtTryImpl","sourcecode":"try {\n    java.lang.reflect.Method = java.io.ObjectStreamClass.java.io.ObjectStreamClass.getDeclaredMethod(java.lang.String, new java.lang.Class[]{ java.lang.Class.java.lang.Class });\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.InternalError(((\"ObjectStreamClass.\" + java.lang.String) + \" seems to have vanished\"));\n}"},"status":-2},{"failures":[],"tindex":37,"variableMapping":{"properties":"properties","key":"key"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.EasyMockProperties:120","type":"CtReturnImpl","sourcecode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","type":"CtReturnImpl","sourcecode":"return java.util.Properties.getProperty(java.lang.String)"},"status":0},{"failures":[],"tindex":38,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.EasyMockProperties:120","type":"CtReturnImpl","sourcecode":"return ((java.lang.String)(java.util.Properties.remove(java.lang.String)))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","type":"CtReturnImpl","sourcecode":"return java.util.Properties.getProperty(java.lang.String)"},"status":0},{"failures":[],"tindex":39,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.EasyMockProperties:119","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return ((java.lang.String)(java.util.Properties.remove(java.lang.String)));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","type":"CtReturnImpl","sourcecode":"return java.util.Properties.getProperty(java.lang.String)"},"status":-2},{"failures":[],"tindex":40,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:131","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Method.getParameterTypes()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","type":"CtReturnImpl","sourcecode":"return java.util.Properties.getProperty(java.lang.String)"},"status":-2},{"failures":[],"tindex":41,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.matchers.LessThan:34","type":"CtReturnImpl","sourcecode":"return \"lt\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","type":"CtReturnImpl","sourcecode":"return java.util.Properties.getProperty(java.lang.String)"},"status":-2},{"failures":[],"tindex":42,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","type":"CtReturnImpl","sourcecode":"return \"geq\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","type":"CtReturnImpl","sourcecode":"return java.util.Properties.getProperty(java.lang.String)"},"status":-2},{"failures":[],"tindex":43,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.EasyMockProperties:122","type":"CtReturnImpl","sourcecode":"return ((java.lang.String)(java.util.Properties.setProperty(java.lang.String, java.lang.String)))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","type":"CtReturnImpl","sourcecode":"return java.util.Properties.getProperty(java.lang.String)"},"status":-2},{"failures":[],"tindex":44,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.MocksControl:117","type":"CtThrowImpl","sourcecode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","type":"CtReturnImpl","sourcecode":"return java.util.Properties.getProperty(java.lang.String)"},"status":-2},{"failures":[],"tindex":45,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:101","type":"CtReturnImpl","sourcecode":"return java.util.Properties.getProperty(java.lang.String)"},"status":-2},{"failures":[],"tindex":46,"variableMapping":{"length":"length","arguments":"arguments"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.Invocation:114","type":"CtIfImpl","sourcecode":"if ((this.java.lang.Object[].int) != (java.lang.Object[].int)) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:93","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (!(java.util.List<org.easymock.IArgumentMatcher>.get(int).matches(java.lang.Object[][int]))) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":47,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.ExpectedInvocation:90","type":"CtIfImpl","sourcecode":"if ((java.lang.Object[].int) != (java.util.List<org.easymock.IArgumentMatcher>.size())) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:93","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (!(java.util.List<org.easymock.IArgumentMatcher>.get(int).matches(java.lang.Object[][int]))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":48,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.ExpectedInvocation:94","type":"CtIfImpl","sourcecode":"if (!(java.util.List<org.easymock.IArgumentMatcher>.get(int).matches(java.lang.Object[][int]))) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:93","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (!(java.util.List<org.easymock.IArgumentMatcher>.get(int).matches(java.lang.Object[][int]))) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":49,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.Capture:106","type":"CtCaseImpl","sourcecode":"case NONE :\n    break;"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:93","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (!(java.util.List<org.easymock.IArgumentMatcher>.get(int).matches(java.lang.Object[][int]))) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":50,"variableMapping":{"parameterTypes":"arguments","length":"length","objs":"arguments"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.ReflectionUtils:180","type":"CtIfImpl","sourcecode":"if ((java.lang.Class<?>[].int) != (java.lang.Object[].int)) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:93","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (!(java.util.List<org.easymock.IArgumentMatcher>.get(int).matches(java.lang.Object[][int]))) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":51,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.ExpectedInvocation:90","type":"CtIfImpl","sourcecode":"if ((java.lang.Object[].int) != (java.util.List<org.easymock.IArgumentMatcher>.size())) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:93","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (!(java.util.List<org.easymock.IArgumentMatcher>.get(int).matches(java.lang.Object[][int]))) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":52,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.Invocation:114","type":"CtIfImpl","sourcecode":"if ((this.java.lang.Object[].int) != (java.lang.Object[].int)) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:93","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (!(java.util.List<org.easymock.IArgumentMatcher>.get(int).matches(java.lang.Object[][int]))) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":53,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:89","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.ObjectMethodsFilter.mockToString(java.lang.Object)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:93","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (!(java.util.List<org.easymock.IArgumentMatcher>.get(int).matches(java.lang.Object[][int]))) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":54,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ExpectedInvocation:93","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    if (!(java.util.List<org.easymock.IArgumentMatcher>.get(int).matches(java.lang.Object[][int]))) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":55,"variableMapping":{"thisListMessages":"messages","messages":"messages"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.MocksBehavior:129","type":"CtInvocationImpl","sourcecode":"java.util.List<org.easymock.internal.ErrorMessage>.addAll(java.util.List<org.easymock.internal.ErrorMessage>)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:95","type":"CtInvocationImpl","sourcecode":"java.util.List<org.easymock.internal.ErrorMessage>.add(org.easymock.internal.ErrorMessage)"},"status":-2},{"failures":[],"tindex":56,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:123","type":"CtNewClassImpl","sourcecode":"new org.easymock.internal.JavaProxyFactory()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:95","type":"CtInvocationImpl","sourcecode":"java.util.List<org.easymock.internal.ErrorMessage>.add(org.easymock.internal.ErrorMessage)"},"status":-2},{"failures":[],"tindex":57,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.MocksBehavior:129","type":"CtInvocationImpl","sourcecode":"java.util.List<org.easymock.internal.ErrorMessage>.addAll(java.util.List<org.easymock.internal.ErrorMessage>)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:95","type":"CtInvocationImpl","sourcecode":"java.util.List<org.easymock.internal.ErrorMessage>.add(org.easymock.internal.ErrorMessage)"},"status":-2},{"failures":[],"tindex":58,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.MockBuilder:201","type":"CtLocalVariableImpl","sourcecode":"final java.lang.reflect.Method[] java.lang.reflect.Method[] = (java.util.Set<java.lang.reflect.Method>) == null ? new java.lang.reflect.Method[0] : java.util.Set<java.lang.reflect.Method>.toArray(new java.lang.reflect.Method[java.util.Set<java.lang.reflect.Method>.size()])"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:95","type":"CtInvocationImpl","sourcecode":"java.util.List<org.easymock.internal.ErrorMessage>.add(org.easymock.internal.ErrorMessage)"},"status":-2},{"failures":[],"tindex":59,"variableMapping":{"thisListMessages":"messages","messages":"messages"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.MocksBehavior:129","type":"CtInvocationImpl","sourcecode":"java.util.List<org.easymock.internal.ErrorMessage>.addAll(java.util.List<org.easymock.internal.ErrorMessage>)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:95","type":"CtInvocationImpl","sourcecode":"java.util.List<org.easymock.internal.ErrorMessage>.add(org.easymock.internal.ErrorMessage)"},"status":-2},{"failures":[],"tindex":60,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:123","type":"CtNewClassImpl","sourcecode":"new org.easymock.internal.JavaProxyFactory()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:95","type":"CtInvocationImpl","sourcecode":"java.util.List<org.easymock.internal.ErrorMessage>.add(org.easymock.internal.ErrorMessage)"},"status":-2},{"failures":[],"tindex":61,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.MocksBehavior:129","type":"CtInvocationImpl","sourcecode":"java.util.List<org.easymock.internal.ErrorMessage>.addAll(java.util.List<org.easymock.internal.ErrorMessage>)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:95","type":"CtInvocationImpl","sourcecode":"java.util.List<org.easymock.internal.ErrorMessage>.add(org.easymock.internal.ErrorMessage)"},"status":-2},{"failures":[],"tindex":62,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.RecordState:162","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:95","type":"CtInvocationImpl","sourcecode":"java.util.List<org.easymock.internal.ErrorMessage>.add(org.easymock.internal.ErrorMessage)"},"status":-2},{"failures":[],"tindex":63,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:95","type":"CtInvocationImpl","sourcecode":"java.util.List<org.easymock.internal.ErrorMessage>.add(org.easymock.internal.ErrorMessage)"},"status":-2},{"failures":[],"tindex":64,"variableMapping":{"stream":"stream"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.ClassProxyFactory:127","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))"},"status":-2},{"failures":[],"tindex":65,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.ClassProxyFactory:107","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))"},"status":-2},{"failures":[],"tindex":66,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))"},"status":-2},{"failures":[],"tindex":67,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.Invocation:143","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.reflect.Method.getName()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))"},"status":-2},{"failures":[],"tindex":68,"variableMapping":{"result":"finalizeMethod","bridgeMethod":"finalizeMethod"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))"},"status":-2},{"failures":[],"tindex":69,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:123","type":"CtNewClassImpl","sourcecode":"new org.easymock.internal.JavaProxyFactory()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))"},"status":-2},{"failures":[],"tindex":70,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.ReflectionUtils:102","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))"},"status":-2},{"failures":[],"tindex":71,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.ArgumentToString:45","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuffer.append(\"[\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))"},"status":-2},{"failures":[],"tindex":72,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:125","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))"},"status":-2},{"failures":[],"tindex":73,"variableMapping":{"constructor":"constructor"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.MockBuilder:159","type":"CtIfImpl","sourcecode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","type":"CtIfImpl","sourcecode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} "},"status":-2},{"failures":[],"tindex":74,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.MockBuilder:113","type":"CtAssignmentImpl","sourcecode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","type":"CtIfImpl","sourcecode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} "},"status":-2},{"failures":[],"tindex":75,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.MockBuilder:159","type":"CtIfImpl","sourcecode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","type":"CtIfImpl","sourcecode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} "},"status":-2},{"failures":[],"tindex":76,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.EasyMock:666","type":"CtReturnImpl","sourcecode":"return null"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","type":"CtIfImpl","sourcecode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} "},"status":-2},{"failures":[],"tindex":77,"variableMapping":{"constructor":"constructor"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.MockBuilder:159","type":"CtIfImpl","sourcecode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","type":"CtIfImpl","sourcecode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} "},"status":-2},{"failures":[],"tindex":78,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:123","type":"CtNewClassImpl","sourcecode":"new org.easymock.internal.JavaProxyFactory()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","type":"CtIfImpl","sourcecode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} "},"status":-2},{"failures":[],"tindex":79,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.MockBuilder:159","type":"CtIfImpl","sourcecode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","type":"CtIfImpl","sourcecode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} "},"status":-2},{"failures":[],"tindex":80,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.ReplayState:63","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.ThrowableWrapper(java.lang.Throwable)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","type":"CtIfImpl","sourcecode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} "},"status":-2},{"failures":[],"tindex":81,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:235","type":"CtIfImpl","sourcecode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} "},"status":-2},{"failures":[],"tindex":82,"variableMapping":{"result":"bridgeMethod"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.ReflectionUtils:117","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method != null) {\n    return java.lang.reflect.Method;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())"},"status":-2},{"failures":[],"tindex":83,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:73","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Method"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())"},"status":-2},{"failures":[],"tindex":84,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:160","type":"CtIfImpl","sourcecode":"if ((java.lang.reflect.Method != null) && (!(java.lang.reflect.Method.isBridge()))) {\n    return java.lang.reflect.Method;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())"},"status":-2},{"failures":[],"tindex":85,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.ArgumentToString:45","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuffer.append(\"[\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())"},"status":-2},{"failures":[],"tindex":86,"variableMapping":{"bridgeMethod":"bridgeMethod"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:73","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Method"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())"},"status":-2},{"failures":[],"tindex":87,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","type":"CtReturnImpl","sourcecode":"return null"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())"},"status":-2},{"failures":[],"tindex":88,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:175","type":"CtReturnImpl","sourcecode":"return null"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())"},"status":-2},{"failures":[],"tindex":89,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.ReplayState:65","type":"CtThrowImpl","sourcecode":"throw java.lang.Throwable"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())"},"status":-2},{"failures":[],"tindex":90,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:237","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.reflect.Method.getParameterTypes())"},"status":-2},{"failureDictionary":{}},{"memory":8006,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2600},{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2600},{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2600},{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2600}],"os.version":"3.2.0-4-amd64"}]
