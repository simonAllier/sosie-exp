[{"failures":[],"tindex":1,"variableMapping":{"stream":"stream"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.ClassProxyFactory:130","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(null)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:220","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-1},{"failures":[],"tindex":2,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.ClassProxyFactory:130","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(null)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:220","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-1},{"failures":[],"tindex":3,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.ClassProxyFactory:130","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(null)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:220","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-1},{"failures":[],"tindex":4,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.EasyMock:1862","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Same(T))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:220","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[],"tindex":5,"variableMapping":{"stream":"stream"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.ClassProxyFactory:130","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(null)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:220","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-1},{"failures":[],"tindex":6,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.ClassProxyFactory:130","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(null)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:220","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-1},{"failures":[],"tindex":7,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.ClassProxyFactory:130","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(null)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:220","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-1},{"failures":[],"tindex":8,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.MockBuilder:112","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:220","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[],"tindex":9,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:220","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-1},{"failures":[],"tindex":10,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:105","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":11,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:105","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":12,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:105","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":13,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.Results:55","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.Range.getMaximum()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:105","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":14,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:105","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":15,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:105","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":16,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:105","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":17,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.MocksControl:284","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:105","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":18,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:105","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":19,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.MockBuilder:164","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:292","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))"},"status":-1},{"failures":[],"tindex":20,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.MockBuilder:160","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:292","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))"},"status":-1},{"failures":[],"tindex":21,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.MockBuilder:211","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Picked a constructor but didn\\'t pass arguments to it\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:292","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))"},"status":-1},{"failures":[],"tindex":22,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.EasyMock:1569","type":"CtReturnImpl","sourcecode":"return null"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:292","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))"},"status":-2},{"failures":[],"tindex":23,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.easymock.ConstructorArgs:51","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:292","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))"},"status":-2},{"failures":[],"tindex":24,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.ConstructorArgs:51","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:292","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))"},"status":-2},{"failures":[],"tindex":25,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.EasyMock:560","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"no last call on a mock available\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:292","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))"},"status":-2},{"failures":[],"tindex":26,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.EasyMock:1542","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Equals(long))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:292","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))"},"status":-2},{"failures":[],"tindex":27,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:292","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))"},"status":-1},{"failures":[],"tindex":28,"variableMapping":{"result":"errorMessage","i":"matches"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.ArgumentToString:90","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:137","type":"CtIfImpl","sourcecode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}"},"status":-1},{"failures":[],"tindex":29,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.MocksBehavior:166","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n  Expectation failure on verify:\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:137","type":"CtIfImpl","sourcecode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}"},"status":-1},{"failures":[],"tindex":30,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.ArgumentToString:90","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:137","type":"CtIfImpl","sourcecode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}"},"status":-2},{"failures":[],"tindex":31,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:159","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Field.setAccessible(true)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:137","type":"CtIfImpl","sourcecode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}"},"status":-2},{"failures":[],"tindex":32,"variableMapping":{"result":"errorMessage","i":"matches"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.ArgumentToString:90","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:137","type":"CtIfImpl","sourcecode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}"},"status":-1},{"failures":[],"tindex":33,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.MocksBehavior:138","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:137","type":"CtIfImpl","sourcecode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}"},"status":-1},{"failures":[],"tindex":34,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.ArgumentToString:90","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.StringBuilder.append(\", \");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:137","type":"CtIfImpl","sourcecode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}"},"status":-2},{"failures":[],"tindex":35,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.ExpectedInvocationAndResult:37","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.ExpectedInvocation"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:137","type":"CtIfImpl","sourcecode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}"},"status":-2},{"failures":[],"tindex":36,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:137","type":"CtIfImpl","sourcecode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}"},"status":-1},{"failures":[],"tindex":37,"variableMapping":{"this":"mock","mock":"mock"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.MocksControl:165","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory().getInvocationHandler(java.lang.Object)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.JavaProxyFactory:34","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Proxy.java.lang.reflect.Proxy.getInvocationHandler(java.lang.Object)"},"status":-2},{"failures":[],"tindex":38,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:165","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory().getInvocationHandler(java.lang.Object)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.JavaProxyFactory:34","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Proxy.java.lang.reflect.Proxy.getInvocationHandler(java.lang.Object)"},"status":-2},{"failures":[],"tindex":39,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.ClassProxyFactory:283","type":"CtReturnImpl","sourcecode":"return ((org.easymock.internal.ClassProxyFactory.MockMethodInterceptor)(net.sf.cglib.proxy.Factory.getCallback(0))).java.lang.reflect.InvocationHandler"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.JavaProxyFactory:34","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Proxy.java.lang.reflect.Proxy.getInvocationHandler(java.lang.Object)"},"status":-2},{"failures":[],"tindex":40,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.Results:94","type":"CtIfImpl","sourcecode":"if ((org.easymock.internal.Range.hasOpenCount()) || (int == (java.lang.Integer.int))) {\n    int = java.lang.Integer.int;\n} else {\n    int += org.easymock.internal.Range.getMaximum();\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.JavaProxyFactory:34","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Proxy.java.lang.reflect.Proxy.getInvocationHandler(java.lang.Object)"},"status":-2},{"failures":[],"tindex":41,"variableMapping":{"mockHandler":"mock","delegate":"mock"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:64","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.AndroidClassProxyFactory.MockHandler.java.lang.reflect.InvocationHandler"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.JavaProxyFactory:34","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Proxy.java.lang.reflect.Proxy.getInvocationHandler(java.lang.Object)"},"status":-2},{"failures":[],"tindex":42,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:165","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory().getInvocationHandler(java.lang.Object)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.JavaProxyFactory:34","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Proxy.java.lang.reflect.Proxy.getInvocationHandler(java.lang.Object)"},"status":-2},{"failures":[],"tindex":43,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.MocksControl:165","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory().getInvocationHandler(java.lang.Object)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.JavaProxyFactory:34","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Proxy.java.lang.reflect.Proxy.getInvocationHandler(java.lang.Object)"},"status":-2},{"failures":[],"tindex":44,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.EasyMock:2000","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.JavaProxyFactory:34","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Proxy.java.lang.reflect.Proxy.getInvocationHandler(java.lang.Object)"},"status":-2},{"failures":[],"tindex":45,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.JavaProxyFactory:34","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Proxy.java.lang.reflect.Proxy.getInvocationHandler(java.lang.Object)"},"status":-2},{"failures":[],"tindex":46,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.matchers.And:43","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:305","type":"CtReturnImpl","sourcecode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())"},"status":-1},{"failures":[],"tindex":47,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:305","type":"CtReturnImpl","sourcecode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())"},"status":-1},{"failures":[],"tindex":48,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:305","type":"CtReturnImpl","sourcecode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())"},"status":-1},{"failures":[],"tindex":49,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.LastControl:51","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:305","type":"CtReturnImpl","sourcecode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())"},"status":-2},{"failures":[],"tindex":50,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.matchers.And:43","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:305","type":"CtReturnImpl","sourcecode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())"},"status":-2},{"failures":[],"tindex":51,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.ClassInstantiatorFactory:52","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.ClassInstantiatorFactory.org.easymock.internal.ClassInstantiatorFactory.getJVMSpecificationVersion().equals(\"1.3\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:305","type":"CtReturnImpl","sourcecode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())"},"status":-2},{"failures":[],"tindex":52,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:305","type":"CtReturnImpl","sourcecode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())"},"status":-2},{"failures":[],"tindex":53,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.EasyMock:104","type":"CtReturnImpl","sourcecode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.Class<T>)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:305","type":"CtReturnImpl","sourcecode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())"},"status":-2},{"failures":[],"tindex":54,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:305","type":"CtReturnImpl","sourcecode":"return ((org.easymock.internal.Result) != null) || org.easymock.internal.RecordState.(lastMethodIsVoidMethod())"},"status":-2},{"failures":[],"tindex":55,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.easymock.EasyMockSupport:661","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object = null"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:119","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]"},"status":-2},{"failures":[],"tindex":56,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:134","type":"CtLocalVariableImpl","sourcecode":"final java.io.ByteArrayOutputStream java.io.ByteArrayOutputStream = new java.io.ByteArrayOutputStream()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:119","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]"},"status":-2},{"failures":[],"tindex":57,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.EasyMockSupport:710","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:119","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]"},"status":-2},{"failures":[],"tindex":58,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:113","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.List<java.lang.reflect.Method>.size()) ; int++) {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(int);\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgeMethodFor(java.lang.reflect.Method, java.lang.reflect.Method, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)) {\n        return java.lang.reflect.Method;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:119","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]"},"status":-2},{"failures":[],"tindex":59,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.easymock.EasyMockSupport:710","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:119","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]"},"status":-2},{"failures":[],"tindex":60,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.ClassProxyFactory:193","type":"CtLocalVariableImpl","sourcecode":"java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?>"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:119","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]"},"status":-2},{"failures":[],"tindex":61,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.EasyMockSupport:710","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:119","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]"},"status":-2},{"failures":[],"tindex":62,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.EasyMock:2052","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToDefault();\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:119","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]"},"status":-2},{"failures":[],"tindex":63,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:119","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = java.lang.Object[][int]"},"status":-2},{"failures":[],"tindex":64,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.MockBuilder:164","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Range:41","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))"},"status":-1},{"failures":[],"tindex":65,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.ConstructorArgs:51","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Range:41","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))"},"status":-1},{"failures":[],"tindex":66,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.MockBuilder:164","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Range:41","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))"},"status":-1},{"failures":[],"tindex":67,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.MocksControl:279","type":"CtThrowImpl","sourcecode":"throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Range:41","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))"},"status":-2},{"failures":[],"tindex":68,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.easymock.ConstructorArgs:51","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Range:41","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))"},"status":-2},{"failures":[],"tindex":69,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.MockBuilder:236","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Range:41","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))"},"status":-2},{"failures":[],"tindex":70,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.Capture:80","type":"CtThrowImpl","sourcecode":"throw new java.lang.AssertionError(\"Nothing captured yet\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Range:41","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))"},"status":-2},{"failures":[],"tindex":71,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.MocksControl:345","type":"CtLocalVariableImpl","sourcecode":"final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Range:41","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))"},"status":-2},{"failures":[],"tindex":72,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Range:41","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))"},"status":-1},{"failures":[],"tindex":73,"variableMapping":{"constructor":"constructor"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.MockBuilder:235","type":"CtIfImpl","sourcecode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","type":"CtIfImpl","sourcecode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} "},"status":-1},{"failures":[],"tindex":74,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.MockBuilder:235","type":"CtIfImpl","sourcecode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","type":"CtIfImpl","sourcecode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} "},"status":-1},{"failures":[],"tindex":75,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.MockBuilder:235","type":"CtIfImpl","sourcecode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","type":"CtIfImpl","sourcecode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} "},"status":-1},{"failures":[],"tindex":76,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:46","type":"CtLocalVariableImpl","sourcecode":"final java.lang.ClassNotFoundException java.lang.ClassNotFoundException"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","type":"CtIfImpl","sourcecode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} "},"status":-1},{"failures":[],"tindex":77,"variableMapping":{"constructor":"constructor"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.MockBuilder:235","type":"CtIfImpl","sourcecode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","type":"CtIfImpl","sourcecode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} "},"status":-1},{"failures":[],"tindex":78,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.MockBuilder:113","type":"CtAssignmentImpl","sourcecode":"this.java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","type":"CtIfImpl","sourcecode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} "},"status":0},{"failures":[],"tindex":79,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.MockBuilder:235","type":"CtIfImpl","sourcecode":"if ((java.lang.reflect.Constructor<T>) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","type":"CtIfImpl","sourcecode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} "},"status":-1},{"failures":[],"tindex":80,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.RecordState:243","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType();\n    if (java.lang.Class<?>.isPrimitive()) {\n        throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"));\n    } \n    return ;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","type":"CtIfImpl","sourcecode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} "},"status":-2},{"failures":[],"tindex":81,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:159","type":"CtIfImpl","sourcecode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\");\n} "},"status":-1},{"failures":[],"tindex":82,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.MockBuilder:164","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))"},"status":-1},{"failures":[],"tindex":83,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.RecordState:263","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))"},"status":-1},{"failures":[],"tindex":84,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.Range:41","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be >= 0\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))"},"status":-1},{"failures":[],"tindex":85,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:116","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Method"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))"},"status":-2},{"failures":[],"tindex":86,"variableMapping":{"name":"methodName"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.ReflectionUtils:108","type":"CtThrowImpl","sourcecode":"throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))"},"status":-2},{"failures":[],"tindex":87,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.RecordState:281","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))"},"status":-2},{"failures":[],"tindex":88,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.ReplayState:149","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"This method must not be called in replay state.\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))"},"status":-2},{"failures":[],"tindex":89,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.RecordState:251","type":"CtLocalVariableImpl","sourcecode":"java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))"},"status":-2},{"failures":[],"tindex":90,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:90","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String))"},"status":-1},{"failureDictionary":{}},{"memory":8005,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2600},{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2600},{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2600},{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2600}],"os.version":"3.2.0-4-amd64"}]
