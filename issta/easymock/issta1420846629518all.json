[{"failures":[],"tindex":1,"variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.MockBuilder:196","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)"},"status":-1},{"failures":[],"tindex":2,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.MockBuilder:188","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)"},"status":-1},{"failures":[],"tindex":3,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.MockBuilder:196","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)"},"status":-1},{"failures":[],"tindex":4,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:113","type":"CtLocalVariableImpl","sourcecode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)"},"status":-2},{"failures":[],"tindex":5,"variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.MockBuilder:188","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)"},"status":-2},{"failures":[],"tindex":6,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.MockBuilder:196","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createStrictMock(null)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)"},"status":-2},{"failures":[],"tindex":7,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.MockBuilder:188","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createMock(((java.lang.String)(null)))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)"},"status":-2},{"failures":[],"tindex":8,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.MockBuilder:152","type":"CtLocalVariableImpl","sourcecode":"final java.lang.NoSuchMethodException java.lang.NoSuchMethodException"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)"},"status":-2},{"failures":[],"tindex":9,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:192","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockBuilder<T>.createNiceMock(null)"},"status":-2},{"failures":[],"tindex":10,"variableMapping":{"this":"answer"},"series":0,"name":"replace","transplant":{"position":"org.easymock.EasyMock:538","type":"CtReturnImpl","sourcecode":"return org.easymock.EasyMock.org.easymock.EasyMock.getControlForLastCall()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}"},"status":-2},{"failures":[],"tindex":11,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:275","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}"},"status":-2},{"failures":[],"tindex":12,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.EasyMock:562","type":"CtReturnImpl","sourcecode":"return ((org.easymock.IExpectationSetters<T>)(org.easymock.internal.MocksControl))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}"},"status":-2},{"failures":[],"tindex":13,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:380","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<java.lang.Class<?>> java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>>()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}"},"status":-2},{"failures":[],"tindex":14,"variableMapping":{"lastControl":"answer"},"series":0,"name":"add","transplant":{"position":"org.easymock.EasyMock:562","type":"CtReturnImpl","sourcecode":"return ((org.easymock.IExpectationSetters<T>)(org.easymock.internal.MocksControl))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}"},"status":-2},{"failures":[],"tindex":15,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:275","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}"},"status":-2},{"failures":[],"tindex":16,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.EasyMock:538","type":"CtReturnImpl","sourcecode":"return org.easymock.EasyMock.org.easymock.EasyMock.getControlForLastCall()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}"},"status":-2},{"failures":[],"tindex":17,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.Capture:112","type":"CtIfImpl","sourcecode":"if (!org.easymock.Capture<T>.(hasCaptured())) {\n    java.util.List<T>.add(T);\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}"},"status":-2},{"failures":[],"tindex":18,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}"},"status":-2},{"failures":[],"tindex":19,"variableMapping":{"values":"values"},"series":0,"name":"replace","transplant":{"position":"org.easymock.Capture:79","type":"CtIfImpl","sourcecode":"if (java.util.List<T>.isEmpty()) {\n    throw new java.lang.AssertionError(\"Nothing captured yet\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:82","type":"CtIfImpl","sourcecode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} "},"status":-1},{"failures":[],"tindex":20,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.RecordState:145","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireVoidMethod()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:82","type":"CtIfImpl","sourcecode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} "},"status":-2},{"failures":[],"tindex":21,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.Capture:117","type":"CtIfImpl","sourcecode":"if (org.easymock.Capture<T>.hasCaptured()) {\n    org.easymock.Capture<T>.reset();\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:82","type":"CtIfImpl","sourcecode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} "},"status":-1},{"failures":[],"tindex":22,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.EasyMock:1421","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:82","type":"CtIfImpl","sourcecode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} "},"status":-2},{"failures":[],"tindex":23,"variableMapping":{"values":"values"},"series":0,"name":"add","transplant":{"position":"org.easymock.Capture:60","type":"CtInvocationImpl","sourcecode":"java.util.List<T>.clear()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:82","type":"CtIfImpl","sourcecode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} "},"status":-1},{"failures":[],"tindex":24,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:123","type":"CtNewClassImpl","sourcecode":"new org.easymock.internal.JavaProxyFactory()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:82","type":"CtIfImpl","sourcecode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} "},"status":0},{"failures":[],"tindex":25,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.Capture:118","type":"CtInvocationImpl","sourcecode":"org.easymock.Capture<T>.reset()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:82","type":"CtIfImpl","sourcecode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} "},"status":-1},{"failures":[],"tindex":26,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.MocksControl:111","type":"CtLocalVariableImpl","sourcecode":"final org.easymock.internal.IProxyFactory org.easymock.internal.IProxyFactory = java.lang.Class<T>.isInterface() ? org.easymock.internal.MocksControl.org.easymock.internal.IProxyFactory : org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getClassProxyFactory()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:82","type":"CtIfImpl","sourcecode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} "},"status":-2},{"failures":[],"tindex":27,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:82","type":"CtIfImpl","sourcecode":"if ((java.util.List<T>.size()) > 1) {\n    throw new java.lang.AssertionError((\"More than one value captured: \" + org.easymock.Capture<T>.(getValues())));\n} "},"status":-1},{"failures":[],"tindex":28,"variableMapping":{"number":"number"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.RecordState:201","type":"CtReturnImpl","sourcecode":"return java.lang.Number.longValue()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:207","type":"CtReturnImpl","sourcecode":"return java.lang.Number"},"status":-1},{"failures":[],"tindex":29,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.RecordState:197","type":"CtReturnImpl","sourcecode":"return java.lang.Number.shortValue()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:207","type":"CtReturnImpl","sourcecode":"return java.lang.Number"},"status":-1},{"failures":[],"tindex":30,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.RecordState:201","type":"CtReturnImpl","sourcecode":"return java.lang.Number.longValue()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:207","type":"CtReturnImpl","sourcecode":"return java.lang.Number"},"status":-1},{"failures":[],"tindex":31,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.MocksBehavior:198","type":"CtIfImpl","sourcecode":"if ((java.lang.Thread) != java.lang.Thread.(java.lang.Thread.currentThread())) {\n    throw new org.easymock.internal.AssertionErrorWrapper(new java.lang.AssertionError((((\"\\n Mock isn\\'t supposed to be called from multiple threads. Last: \" + (java.lang.Thread)) + \" Current: \") + java.lang.Thread.(java.lang.Thread.currentThread()))));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:207","type":"CtReturnImpl","sourcecode":"return java.lang.Number"},"status":-2},{"failures":[],"tindex":32,"variableMapping":{"number":"number"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.RecordState:205","type":"CtReturnImpl","sourcecode":"return java.lang.Number.doubleValue()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:207","type":"CtReturnImpl","sourcecode":"return java.lang.Number"},"status":-2},{"failures":[],"tindex":33,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.RecordState:205","type":"CtReturnImpl","sourcecode":"return java.lang.Number.doubleValue()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:207","type":"CtReturnImpl","sourcecode":"return java.lang.Number"},"status":-2},{"failures":[],"tindex":34,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.RecordState:203","type":"CtReturnImpl","sourcecode":"return java.lang.Number.floatValue()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:207","type":"CtReturnImpl","sourcecode":"return java.lang.Number"},"status":-2},{"failures":[],"tindex":35,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.EasyMock:1831","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.EqualsWithDelta(double , double))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:207","type":"CtReturnImpl","sourcecode":"return java.lang.Number"},"status":-2},{"failures":[],"tindex":36,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:207","type":"CtReturnImpl","sourcecode":"return java.lang.Number"},"status":-2},{"failures":[],"tindex":37,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.easymock.ConstructorArgs:51","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")"},"status":-1},{"failures":[],"tindex":38,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.RecordState:292","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")"},"status":-1},{"failures":[],"tindex":39,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.RecordState:246","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"can\\'t return null for a method returning a primitive type\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")"},"status":-1},{"failures":[],"tindex":40,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.ErrorMessage:44","type":"CtReturnImpl","sourcecode":"return int"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")"},"status":-2},{"failures":[],"tindex":41,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.RecordState:263","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")"},"status":-2},{"failures":[],"tindex":42,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.ExpectedInvocation:81","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"hashCode() is not implemented\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")"},"status":-2},{"failures":[],"tindex":43,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.RecordState:281","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"delegated to object must not be null\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")"},"status":-2},{"failures":[],"tindex":44,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.LastControl:48","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.MocksControl != null) {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.set(org.easymock.internal.MocksControl);\n} else {\n    org.easymock.internal.LastControl.java.lang.ThreadLocal<org.easymock.internal.MocksControl>.remove();\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")"},"status":-2},{"failures":[],"tindex":45,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:236","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor call more than once.\")"},"status":-1},{"failures":[],"tindex":46,"variableMapping":{"cls":"c","type":"c"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:265","type":"CtAssignmentImpl","sourcecode":"java.lang.Class<?> = java.lang.Class<?>"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:625","type":"CtAssignmentImpl","sourcecode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()"},"status":-2},{"failures":[],"tindex":47,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.EasyMockSupport:543","type":"CtInvocationImpl","sourcecode":"org.easymock.IMocksControl.replay()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:625","type":"CtAssignmentImpl","sourcecode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()"},"status":-2},{"failures":[],"tindex":48,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","type":"CtAssignmentImpl","sourcecode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:625","type":"CtAssignmentImpl","sourcecode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()"},"status":-2},{"failures":[],"tindex":49,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.EasyMockSupport:628","type":"CtForEachImpl","sourcecode":"for (java.lang.reflect.Field java.lang.reflect.Field : java.util.List<java.lang.reflect.Field>) {\n    java.lang.reflect.Field.setAccessible(true);\n    java.lang.Object java.lang.Object;\n    try {\n        java.lang.Object = java.lang.reflect.Field.get(java.lang.Object);\n    } catch (java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n        throw new java.lang.RuntimeException(java.lang.IllegalAccessException);\n    }\n    java.lang.Class<?> = java.lang.Object.getClass();\n    while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n        org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocksOnClass(java.lang.Class<?>, java.lang.Object, java.util.List<java.lang.Object>);\n        java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n    }\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:625","type":"CtAssignmentImpl","sourcecode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()"},"status":-2},{"failures":[],"tindex":50,"variableMapping":{"type":"c"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","type":"CtAssignmentImpl","sourcecode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:625","type":"CtAssignmentImpl","sourcecode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()"},"status":-1},{"failures":[],"tindex":51,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.EasyMockSupport:553","type":"CtInvocationImpl","sourcecode":"org.easymock.IMocksControl.reset()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:625","type":"CtAssignmentImpl","sourcecode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()"},"status":-2},{"failures":[],"tindex":52,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:272","type":"CtAssignmentImpl","sourcecode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:625","type":"CtAssignmentImpl","sourcecode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()"},"status":-2},{"failures":[],"tindex":53,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.Invocation:154","type":"CtReturnImpl","sourcecode":"return (java.lang.String + \".\") + java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:625","type":"CtAssignmentImpl","sourcecode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()"},"status":-2},{"failures":[],"tindex":54,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:625","type":"CtAssignmentImpl","sourcecode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()"},"status":-2},{"failures":[],"tindex":55,"variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.RecordState:181","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:240","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} "},"status":-1},{"failures":[],"tindex":56,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.EasyMock:1220","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:240","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} "},"status":-1},{"failures":[],"tindex":57,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.RecordState:115","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:240","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} "},"status":-1},{"failures":[],"tindex":58,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:87","type":"CtIfImpl","sourcecode":"if ((java.util.List<java.lang.reflect.Method>.size()) == 1) {\n    java.lang.reflect.Method = java.util.List<java.lang.reflect.Method>.get(0);\n} else {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchCandidates(java.util.List<java.lang.reflect.Method>, java.lang.reflect.Method);\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:240","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} "},"status":-2},{"failures":[],"tindex":59,"variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.RecordState:161","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:240","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} "},"status":0},{"failures":[],"tindex":60,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.RecordState:106","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:240","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} "},"status":-1},{"failures":[],"tindex":61,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.RecordState:76","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.closeMethod()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:240","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} "},"status":-1},{"failures":[],"tindex":62,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.ClassProxyFactory:194","type":"CtTryImpl","sourcecode":"try {\n    java.lang.reflect.Constructor<?> = java.lang.Class<?>.getDeclaredConstructor(org.easymock.ConstructorArgs.getConstructor().getParameterTypes());\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.RuntimeException(\"Fail to find constructor for param types\" , java.lang.NoSuchMethodException);\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:240","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} "},"status":-2},{"failures":[],"tindex":63,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:240","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} "},"status":-1},{"failures":[],"tindex":64,"variableMapping":{"currentCaptures":"currentCaptures"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.Invocation:167","type":"CtForEachImpl","sourcecode":"for (final org.easymock.internal.matchers.Captures<?> org.easymock.internal.matchers.Captures<?> : java.util.Collection<org.easymock.internal.matchers.Captures<?>>) {\n    org.easymock.internal.matchers.Captures<?>.validateCapture();\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:173","type":"CtForEachImpl","sourcecode":"for (final org.easymock.internal.matchers.Captures<?> org.easymock.internal.matchers.Captures<?> : java.util.Collection<org.easymock.internal.matchers.Captures<?>>) {\n    org.easymock.internal.matchers.Captures<?>.setPotentialValue(null);\n}"},"status":-1},{"failures":[],"tindex":65,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:123","type":"CtNewClassImpl","sourcecode":"new org.easymock.internal.JavaProxyFactory()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:173","type":"CtForEachImpl","sourcecode":"for (final org.easymock.internal.matchers.Captures<?> org.easymock.internal.matchers.Captures<?> : java.util.Collection<org.easymock.internal.matchers.Captures<?>>) {\n    org.easymock.internal.matchers.Captures<?>.setPotentialValue(null);\n}"},"status":0},{"failures":[],"tindex":66,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.Invocation:167","type":"CtForEachImpl","sourcecode":"for (final org.easymock.internal.matchers.Captures<?> org.easymock.internal.matchers.Captures<?> : java.util.Collection<org.easymock.internal.matchers.Captures<?>>) {\n    org.easymock.internal.matchers.Captures<?>.validateCapture();\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:173","type":"CtForEachImpl","sourcecode":"for (final org.easymock.internal.matchers.Captures<?> org.easymock.internal.matchers.Captures<?> : java.util.Collection<org.easymock.internal.matchers.Captures<?>>) {\n    org.easymock.internal.matchers.Captures<?>.setPotentialValue(null);\n}"},"status":-1},{"failures":[],"tindex":67,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:328","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == null) {\n        java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n    } \n    if (java.lang.reflect.Type != null) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } \n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:173","type":"CtForEachImpl","sourcecode":"for (final org.easymock.internal.matchers.Captures<?> org.easymock.internal.matchers.Captures<?> : java.util.Collection<org.easymock.internal.matchers.Captures<?>>) {\n    org.easymock.internal.matchers.Captures<?>.setPotentialValue(null);\n}"},"status":-2},{"failures":[],"tindex":68,"variableMapping":{"currentCaptures":"currentCaptures"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.Invocation:176","type":"CtInvocationImpl","sourcecode":"java.util.Collection<org.easymock.internal.matchers.Captures<?>>.clear()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:173","type":"CtForEachImpl","sourcecode":"for (final org.easymock.internal.matchers.Captures<?> org.easymock.internal.matchers.Captures<?> : java.util.Collection<org.easymock.internal.matchers.Captures<?>>) {\n    org.easymock.internal.matchers.Captures<?>.setPotentialValue(null);\n}"},"status":0},{"failures":[],"tindex":69,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:123","type":"CtNewClassImpl","sourcecode":"new org.easymock.internal.JavaProxyFactory()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:173","type":"CtForEachImpl","sourcecode":"for (final org.easymock.internal.matchers.Captures<?> org.easymock.internal.matchers.Captures<?> : java.util.Collection<org.easymock.internal.matchers.Captures<?>>) {\n    org.easymock.internal.matchers.Captures<?>.setPotentialValue(null);\n}"},"status":0},{"failures":[],"tindex":70,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.Invocation:167","type":"CtForEachImpl","sourcecode":"for (final org.easymock.internal.matchers.Captures<?> org.easymock.internal.matchers.Captures<?> : java.util.Collection<org.easymock.internal.matchers.Captures<?>>) {\n    org.easymock.internal.matchers.Captures<?>.validateCapture();\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:173","type":"CtForEachImpl","sourcecode":"for (final org.easymock.internal.matchers.Captures<?> org.easymock.internal.matchers.Captures<?> : java.util.Collection<org.easymock.internal.matchers.Captures<?>>) {\n    org.easymock.internal.matchers.Captures<?>.setPotentialValue(null);\n}"},"status":-1},{"failures":[],"tindex":71,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.EasyMockProperties:62","type":"CtIfImpl","sourcecode":"if (java.io.InputStream != null) {\n    java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream);\n    try {\n        java.util.Properties.load(java.io.InputStream);\n    } catch (final java.io.IOException java.io.IOException) {\n        throw new java.lang.RuntimeException(((\"Failed to read \" + java.lang.String) + \" file\"));\n    } finally {\n        try {\n            java.io.InputStream.close();\n        } catch (final java.io.IOException java.io.IOException) {\n        }\n    }\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:173","type":"CtForEachImpl","sourcecode":"for (final org.easymock.internal.matchers.Captures<?> org.easymock.internal.matchers.Captures<?> : java.util.Collection<org.easymock.internal.matchers.Captures<?>>) {\n    org.easymock.internal.matchers.Captures<?>.setPotentialValue(null);\n}"},"status":-2},{"failures":[],"tindex":72,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:173","type":"CtForEachImpl","sourcecode":"for (final org.easymock.internal.matchers.Captures<?> org.easymock.internal.matchers.Captures<?> : java.util.Collection<org.easymock.internal.matchers.Captures<?>>) {\n    org.easymock.internal.matchers.Captures<?>.setPotentialValue(null);\n}"},"status":0},{"failures":[],"tindex":73,"variableMapping":{"errorMessage":"errorMessage","matches":"matches"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.MocksBehavior:137","type":"CtIfImpl","sourcecode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:144","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, int)"},"status":-1},{"failures":[],"tindex":74,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.MocksBehavior:137","type":"CtIfImpl","sourcecode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:144","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, int)"},"status":-1},{"failures":[],"tindex":75,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.MocksBehavior:137","type":"CtIfImpl","sourcecode":"if (int > 1) {\n    java.lang.StringBuilder.append(\". Possible matches are marked with (+1):\");\n} else {\n    java.lang.StringBuilder.append(\":\");\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:144","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, int)"},"status":-1},{"failures":[],"tindex":76,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.MocksControl:136","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.IProxyFactory != null) {\n    return org.easymock.internal.IProxyFactory;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:144","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, int)"},"status":-2},{"failures":[],"tindex":77,"variableMapping":{"m":"m","matches":"matches"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.MocksBehavior:131","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.ErrorMessage.isMatching()) {\n    int++;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:144","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, int)"},"status":0},{"failures":[],"tindex":78,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.MocksBehavior:120","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n  Unexpected method call \")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:144","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, int)"},"status":-1},{"failures":[],"tindex":79,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.MocksBehavior:131","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.ErrorMessage.isMatching()) {\n    int++;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:144","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, int)"},"status":0},{"failures":[],"tindex":80,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.RecordState:64","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Float.java.lang.Class<java.lang.Float>, java.lang.Float.java.lang.Float)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:144","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, int)"},"status":-2},{"failures":[],"tindex":81,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:144","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, int)"},"status":-1},{"failures":[],"tindex":82,"variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.RecordState:106","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:154","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)"},"status":0},{"failures":[],"tindex":83,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.RecordState:85","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:154","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)"},"status":0},{"failures":[],"tindex":84,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.RecordState:76","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.closeMethod()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:154","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)"},"status":0},{"failures":[],"tindex":85,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.RecordState:318","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:154","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)"},"status":-2},{"failures":[],"tindex":86,"variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.RecordState:151","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:154","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)"},"status":0},{"failures":[],"tindex":87,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.RecordState:240","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.RecordState.lastMethodIsVoidMethod()) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"void method cannot return a value\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:154","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)"},"status":0},{"failures":[],"tindex":88,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.RecordState:151","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireMethodCall(\"stub Throwable\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:154","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)"},"status":0},{"failures":[],"tindex":89,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.EasyMock:1149","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:154","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)"},"status":-2},{"failures":[],"tindex":90,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:154","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)"},"status":0},{"failureDictionary":{}},{"memory":8006,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2600},{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2600},{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2600},{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2600}],"os.version":"3.2.0-4-amd64"}]
