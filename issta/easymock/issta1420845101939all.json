[{"failures":[],"tindex":1,"variableMapping":{"f":"mock"},"series":0,"name":"replace","transplant":{"position":"org.easymock.EasyMockSupport:704","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Field.getType()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:157","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getMockedType(java.lang.Object)"},"status":-2},{"failures":[],"tindex":2,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:162","type":"CtLocalVariableImpl","sourcecode":"final java.lang.NoSuchFieldException java.lang.NoSuchFieldException"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:157","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getMockedType(java.lang.Object)"},"status":-2},{"failures":[],"tindex":3,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","type":"CtLocalVariableImpl","sourcecode":"java.lang.Class<?> java.lang.Class<?>"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:157","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getMockedType(java.lang.Object)"},"status":-2},{"failures":[],"tindex":4,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.EasyMock:1291","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:157","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getMockedType(java.lang.Object)"},"status":-2},{"failures":[],"tindex":5,"variableMapping":{"lastInvocation":"mock"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.RecordState:309","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.ExpectedInvocation.getMethod().getReturnType()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:157","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getMockedType(java.lang.Object)"},"status":-2},{"failures":[],"tindex":6,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.EasyMockSupport:620","type":"CtLocalVariableImpl","sourcecode":"java.util.List<java.lang.Object> java.util.List<java.lang.Object> = new java.util.ArrayList<java.lang.Object>(5)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:157","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getMockedType(java.lang.Object)"},"status":-2},{"failures":[],"tindex":7,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","type":"CtLocalVariableImpl","sourcecode":"java.lang.Class<?> java.lang.Class<?>"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:157","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getMockedType(java.lang.Object)"},"status":-2},{"failures":[],"tindex":8,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.matchers.ArrayEquals:36","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof boolean[]) && ((java.lang.Object == null) || (java.lang.Object instanceof boolean[]))) {\n    return java.util.Arrays.java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)));\n} else if ((java.lang.Object instanceof byte[]) && ((java.lang.Object == null) || (java.lang.Object instanceof byte[]))) {\n    return java.util.Arrays.java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)));\n} else if ((java.lang.Object instanceof char[]) && ((java.lang.Object == null) || (java.lang.Object instanceof char[]))) {\n    return java.util.Arrays.java.util.Arrays.equals(((char[])(java.lang.Object)), ((char[])(java.lang.Object)));\n} else if ((java.lang.Object instanceof double[]) && ((java.lang.Object == null) || (java.lang.Object instanceof double[]))) {\n    return java.util.Arrays.java.util.Arrays.equals(((double[])(java.lang.Object)), ((double[])(java.lang.Object)));\n} else if ((java.lang.Object instanceof float[]) && ((java.lang.Object == null) || (java.lang.Object instanceof float[]))) {\n    return java.util.Arrays.java.util.Arrays.equals(((float[])(java.lang.Object)), ((float[])(java.lang.Object)));\n} else if ((java.lang.Object instanceof int[]) && ((java.lang.Object == null) || (java.lang.Object instanceof int[]))) {\n    return java.util.Arrays.java.util.Arrays.equals(((int[])(java.lang.Object)), ((int[])(java.lang.Object)));\n} else if ((java.lang.Object instanceof long[]) && ((java.lang.Object == null) || (java.lang.Object instanceof long[]))) {\n    return java.util.Arrays.java.util.Arrays.equals(((long[])(java.lang.Object)), ((long[])(java.lang.Object)));\n} else if ((java.lang.Object instanceof short[]) && ((java.lang.Object == null) || (java.lang.Object instanceof short[]))) {\n    return java.util.Arrays.java.util.Arrays.equals(((short[])(java.lang.Object)), ((short[])(java.lang.Object)));\n} else if ((java.lang.Object instanceof java.lang.Object[]) && ((java.lang.Object == null) || (java.lang.Object instanceof java.lang.Object[]))) {\n    return java.util.Arrays.java.util.Arrays.equals(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)));\n} else {\n    return org.easymock.internal.matchers.Equals.matches(java.lang.Object);\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:157","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getMockedType(java.lang.Object)"},"status":-2},{"failures":[],"tindex":9,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:157","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Class<?> java.lang.Class<?> = org.easymock.internal.MocksControl.org.easymock.internal.MocksControl.getMockedType(java.lang.Object)"},"status":-2},{"failures":[],"tindex":10,"variableMapping":{"actual":"actual","invocation":"actual","this":"expected"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.ExpectedInvocation:85","type":"CtReturnImpl","sourcecode":"return ((this.org.easymock.internal.Invocation.getMock().equals(org.easymock.internal.Invocation.getMock())) && (this.org.easymock.internal.Invocation.getMethod().equals(org.easymock.internal.Invocation.getMethod()))) && org.easymock.internal.ExpectedInvocation.(matches(org.easymock.internal.Invocation.getArguments()))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","type":"CtReturnImpl","sourcecode":"return (java.lang.Object) == java.lang.Object"},"status":-2},{"failures":[],"tindex":11,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.matchers.Compare:52","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","type":"CtReturnImpl","sourcecode":"return (java.lang.Object) == java.lang.Object"},"status":-2},{"failures":[],"tindex":12,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.matchers.Equals:38","type":"CtReturnImpl","sourcecode":"return java.lang.Object == null"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","type":"CtReturnImpl","sourcecode":"return (java.lang.Object) == java.lang.Object"},"status":-1},{"failures":[],"tindex":13,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.EasyMock:1927","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.Captures<java.lang.Boolean>(org.easymock.Capture<java.lang.Boolean>))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","type":"CtReturnImpl","sourcecode":"return (java.lang.Object) == java.lang.Object"},"status":-2},{"failures":[],"tindex":14,"variableMapping":{"actual":"expected","regex":"expected"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.matchers.Matches:36","type":"CtReturnImpl","sourcecode":"return (java.lang.Object instanceof java.lang.String) && (((java.lang.String)(java.lang.Object)).matches(java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","type":"CtReturnImpl","sourcecode":"return (java.lang.Object) == java.lang.Object"},"status":-2},{"failures":[],"tindex":15,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.matchers.NotNull:36","type":"CtReturnImpl","sourcecode":"return java.lang.Object != null"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","type":"CtReturnImpl","sourcecode":"return (java.lang.Object) == java.lang.Object"},"status":-2},{"failures":[],"tindex":16,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.Invocation:195","type":"CtIfImpl","sourcecode":"if ((((java.lang.String.length()) == 0) || ((java.lang.String.indexOf(' ')) > (-1))) || (!java.lang.Character.(java.lang.Character.isJavaIdentifierStart(java.lang.String.charAt(0))))) {\n    return false;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","type":"CtReturnImpl","sourcecode":"return (java.lang.Object) == java.lang.Object"},"status":-2},{"failures":[],"tindex":17,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.MocksBehavior:56","type":"CtInvocationImpl","sourcecode":"java.util.List<org.easymock.internal.ExpectedInvocationAndResult>.add(new org.easymock.internal.ExpectedInvocationAndResult(org.easymock.internal.ExpectedInvocation , org.easymock.internal.Result))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","type":"CtReturnImpl","sourcecode":"return (java.lang.Object) == java.lang.Object"},"status":-2},{"failures":[],"tindex":18,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.matchers.Same:37","type":"CtReturnImpl","sourcecode":"return (java.lang.Object) == java.lang.Object"},"status":-2},{"failures":[],"tindex":19,"variableMapping":{"state":"state","org.easymock.internal.MocksControl.ZERO_OR_MORE":"answer"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.MocksControl:369","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}"},"status":-2},{"failures":[],"tindex":20,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:275","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}"},"status":-2},{"failures":[],"tindex":21,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.MocksControl:257","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}"},"status":-2},{"failures":[],"tindex":22,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.EasyMock:122","type":"CtReturnImpl","sourcecode":"return org.easymock.EasyMock.org.easymock.EasyMock.createStrictControl().createMock(java.lang.String, java.lang.Class<T>)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}"},"status":-2},{"failures":[],"tindex":23,"variableMapping":{"state":"state","value":"answer"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.MocksControl:257","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.andReturn(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}"},"status":-2},{"failures":[],"tindex":24,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:275","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.andAnswer(org.easymock.IAnswer<?>);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}"},"status":-2},{"failures":[],"tindex":25,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.MocksControl:369","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}"},"status":-2},{"failures":[],"tindex":26,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.MocksBehavior:161","type":"CtReturnImpl","sourcecode":"return "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}"},"status":-2},{"failures":[],"tindex":27,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:284","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.andDelegateTo(java.lang.Object);\n    return this;\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n}"},"status":-2},{"failures":[],"tindex":28,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:34","type":"CtReturnImpl","sourcecode":"return \"geq\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:1777","type":"CtReturnImpl","sourcecode":"return null"},"status":0},{"failures":[],"tindex":29,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","type":"CtReturnImpl","sourcecode":"return \"leq\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:1777","type":"CtReturnImpl","sourcecode":"return null"},"status":0},{"failures":[],"tindex":30,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.matchers.GreaterThan:34","type":"CtReturnImpl","sourcecode":"return \"gt\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:1777","type":"CtReturnImpl","sourcecode":"return null"},"status":0},{"failures":[],"tindex":31,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:380","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<java.lang.Class<?>> java.util.List<java.lang.Class<?>> = new java.util.ArrayList<java.lang.Class<?>>()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:1777","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":32,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:34","type":"CtReturnImpl","sourcecode":"return \"leq\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:1777","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":33,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.matchers.LessThan:34","type":"CtReturnImpl","sourcecode":"return \"lt\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:1777","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":34,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.matchers.CompareEqual:34","type":"CtReturnImpl","sourcecode":"return \"cmpEq\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:1777","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":35,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.Range:66","type":"CtReturnImpl","sourcecode":"return \"\" + (int)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:1777","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":36,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:1777","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":37,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","type":"CtLocalVariableImpl","sourcecode":"java.lang.reflect.Type java.lang.reflect.Type = null"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","type":"CtLocalVariableImpl","sourcecode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]"},"status":-2},{"failures":[],"tindex":38,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.LastControl:93","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","type":"CtLocalVariableImpl","sourcecode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]"},"status":-2},{"failures":[],"tindex":39,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:353","type":"CtLocalVariableImpl","sourcecode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][0]"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","type":"CtLocalVariableImpl","sourcecode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]"},"status":-2},{"failures":[],"tindex":40,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.ArgumentToString:36","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.StringBuffer.append(\"\\\"\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\\"\");\n} else if (java.lang.Object instanceof java.lang.Character) {\n    java.lang.StringBuffer.append(\"\\'\");\n    java.lang.StringBuffer.append(java.lang.Object);\n    java.lang.StringBuffer.append(\"\\'\");\n} else if (java.lang.Object.getClass().isArray()) {\n    java.lang.StringBuffer.append(\"[\");\n    for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n        if (int > 0) {\n            java.lang.StringBuffer.append(\", \");\n        } \n        org.easymock.internal.ArgumentToString.org.easymock.internal.ArgumentToString.appendArgument(java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int), java.lang.StringBuffer);\n    }\n    java.lang.StringBuffer.append(\"]\");\n} else {\n    java.lang.StringBuffer.append(java.lang.Object);\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","type":"CtLocalVariableImpl","sourcecode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]"},"status":-2},{"failures":[],"tindex":41,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","type":"CtLocalVariableImpl","sourcecode":"java.lang.reflect.Type java.lang.reflect.Type = null"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","type":"CtLocalVariableImpl","sourcecode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]"},"status":-2},{"failures":[],"tindex":42,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.EasyMockSupport:633","type":"CtLocalVariableImpl","sourcecode":"java.lang.IllegalAccessException java.lang.IllegalAccessException"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","type":"CtLocalVariableImpl","sourcecode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]"},"status":-2},{"failures":[],"tindex":43,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:351","type":"CtLocalVariableImpl","sourcecode":"java.lang.reflect.Type java.lang.reflect.Type = null"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","type":"CtLocalVariableImpl","sourcecode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]"},"status":-2},{"failures":[],"tindex":44,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:222","type":"CtLocalVariableImpl","sourcecode":"final java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","type":"CtLocalVariableImpl","sourcecode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]"},"status":-2},{"failures":[],"tindex":45,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:194","type":"CtLocalVariableImpl","sourcecode":"final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int]"},"status":-2},{"failures":[],"tindex":46,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:315","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":47,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:315","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":48,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:315","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":49,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.EasyMock:583","type":"CtReturnImpl","sourcecode":"return 0"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:315","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":50,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:315","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":51,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:315","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":52,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:315","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":53,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.EasyMockSupport:207","type":"CtReturnImpl","sourcecode":"return org.easymock.EasyMockSupport.createControl().createMock(java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:315","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":54,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:315","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":55,"variableMapping":{"state":"state"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.MocksControl:326","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksControlState.asStub()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksControlState.replay()"},"status":-1},{"failures":[],"tindex":56,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:123","type":"CtNewClassImpl","sourcecode":"new org.easymock.internal.JavaProxyFactory()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksControlState.replay()"},"status":-1},{"failures":[],"tindex":57,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.RecordState:182","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksControlState.replay()"},"status":-2},{"failures":[],"tindex":58,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:164","type":"CtLocalVariableImpl","sourcecode":"final java.lang.IllegalAccessException java.lang.IllegalAccessException"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksControlState.replay()"},"status":-1},{"failures":[],"tindex":59,"variableMapping":{"state":"state"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.MocksControl:221","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksControlState.replay()"},"status":-1},{"failures":[],"tindex":60,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:123","type":"CtNewClassImpl","sourcecode":"new org.easymock.internal.JavaProxyFactory()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksControlState.replay()"},"status":0},{"failures":[],"tindex":61,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.RecordState:133","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksControlState.replay()"},"status":-2},{"failures":[],"tindex":62,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.RecordState:181","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireMethodCall(\"times\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksControlState.replay()"},"status":-2},{"failures":[],"tindex":63,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:212","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksControlState.replay()"},"status":-1},{"failures":[],"tindex":64,"variableMapping":{"values":"values"},"series":0,"name":"replace","transplant":{"position":"org.easymock.Capture:131","type":"CtIfImpl","sourcecode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:134","type":"CtIfImpl","sourcecode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} "},"status":-1},{"failures":[],"tindex":65,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.Capture:131","type":"CtIfImpl","sourcecode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:134","type":"CtIfImpl","sourcecode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} "},"status":-1},{"failures":[],"tindex":66,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.Capture:131","type":"CtIfImpl","sourcecode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:134","type":"CtIfImpl","sourcecode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} "},"status":-1},{"failures":[],"tindex":67,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:58","type":"CtThrowImpl","sourcecode":"throw new java.lang.RuntimeException(((\"Failed to instantiate \" + (java.lang.Class<?>.getName())) + \"\\'s mock: \") , java.lang.IllegalArgumentException)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:134","type":"CtIfImpl","sourcecode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} "},"status":-2},{"failures":[],"tindex":68,"variableMapping":{"values":"values"},"series":0,"name":"add","transplant":{"position":"org.easymock.Capture:131","type":"CtIfImpl","sourcecode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:134","type":"CtIfImpl","sourcecode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} "},"status":0},{"failures":[],"tindex":69,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.Capture:131","type":"CtIfImpl","sourcecode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:134","type":"CtIfImpl","sourcecode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} "},"status":0},{"failures":[],"tindex":70,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.Capture:131","type":"CtIfImpl","sourcecode":"if (java.util.List<T>.isEmpty()) {\n    return \"Nothing captured yet\";\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:134","type":"CtIfImpl","sourcecode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} "},"status":0},{"failures":[],"tindex":71,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.EasyMockSupport:693","type":"CtLocalVariableImpl","sourcecode":"final java.lang.reflect.Field[] java.lang.reflect.Field[] = java.lang.Class<?>.getDeclaredFields()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:134","type":"CtIfImpl","sourcecode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} "},"status":-2},{"failures":[],"tindex":72,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.Capture:134","type":"CtIfImpl","sourcecode":"if ((java.util.List<T>.size()) == 1) {\n    return java.lang.String.java.lang.String.valueOf(java.util.List<T>.get(0));\n} "},"status":-1},{"failures":[],"tindex":73,"variableMapping":{"result":"method","bridgeMethod":"method"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} "},"status":-1},{"failures":[],"tindex":74,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.matchers.Captures:52","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.getCurrentInvocation()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} "},"status":-1},{"failures":[],"tindex":75,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Method.setAccessible(true)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} "},"status":-1},{"failures":[],"tindex":76,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:261","type":"CtAssignmentImpl","sourcecode":"java.lang.Class<?> = java.lang.Class<?>.getSuperclass()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} "},"status":-2},{"failures":[],"tindex":77,"variableMapping":{"bridgeMethod":"method"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","type":"CtAssertImpl","sourcecode":"assert java.lang.reflect.Method != null : \"Method must not be null\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} "},"status":0},{"failures":[],"tindex":78,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.Results:81","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.Results.getMainInterval()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} "},"status":-2},{"failures":[],"tindex":79,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.ReflectionUtils:102","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} "},"status":-2},{"failures":[],"tindex":80,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.ArgumentToString:95","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} "},"status":-2},{"failures":[],"tindex":81,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:68","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Modifier.java.lang.reflect.Modifier.isFinal(java.lang.reflect.Method.getModifiers())) {\n    throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\");\n} "},"status":-1},{"failures":[],"tindex":82,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.matchers.And:43","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:104","type":"CtIfImpl","sourcecode":"if ((java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.isEmpty()) || (!(this.boolean))) {\n    return true;\n} else {\n    final org.easymock.internal.ExpectedInvocation org.easymock.internal.ExpectedInvocation = java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.get(((java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.size()) - 1)).getExpectedInvocation();\n    return org.easymock.internal.ExpectedInvocation.equals(org.easymock.internal.ExpectedInvocation);\n}"},"status":-1},{"failures":[],"tindex":83,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.UnorderedBehavior:74","type":"CtForEachImpl","sourcecode":"for (final org.easymock.internal.ExpectedInvocationAndResults org.easymock.internal.ExpectedInvocationAndResults : java.util.List<org.easymock.internal.ExpectedInvocationAndResults>) {\n    if (!(org.easymock.internal.ExpectedInvocationAndResults.getResults().hasValidCallCount())) {\n        return false;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:104","type":"CtIfImpl","sourcecode":"if ((java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.isEmpty()) || (!(this.boolean))) {\n    return true;\n} else {\n    final org.easymock.internal.ExpectedInvocation org.easymock.internal.ExpectedInvocation = java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.get(((java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.size()) - 1)).getExpectedInvocation();\n    return org.easymock.internal.ExpectedInvocation.equals(org.easymock.internal.ExpectedInvocation);\n}"},"status":-2},{"failures":[],"tindex":84,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.ErrorMessage:36","type":"CtReturnImpl","sourcecode":"return boolean"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:104","type":"CtIfImpl","sourcecode":"if ((java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.isEmpty()) || (!(this.boolean))) {\n    return true;\n} else {\n    final org.easymock.internal.ExpectedInvocation org.easymock.internal.ExpectedInvocation = java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.get(((java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.size()) - 1)).getExpectedInvocation();\n    return org.easymock.internal.ExpectedInvocation.equals(org.easymock.internal.ExpectedInvocation);\n}"},"status":-2},{"failures":[],"tindex":85,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:89","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Class<?>.getConstructor(new java.lang.Class[0]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    if ((java.lang.Class<?>.getConstructors().int) == 0) {\n        throw new java.lang.IllegalArgumentException((\"No visible constructors in class \" + (java.lang.Class<?>.getName())));\n    } \n    return java.lang.Class<?>.getConstructors()[0];\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:104","type":"CtIfImpl","sourcecode":"if ((java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.isEmpty()) || (!(this.boolean))) {\n    return true;\n} else {\n    final org.easymock.internal.ExpectedInvocation org.easymock.internal.ExpectedInvocation = java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.get(((java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.size()) - 1)).getExpectedInvocation();\n    return org.easymock.internal.ExpectedInvocation.equals(org.easymock.internal.ExpectedInvocation);\n}"},"status":-2},{"failures":[],"tindex":86,"variableMapping":{"org.easymock.internal.AndroidSupport.isAndroid":"checkOrder"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.AndroidSupport:34","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.AndroidSupport.boolean"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:104","type":"CtIfImpl","sourcecode":"if ((java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.isEmpty()) || (!(this.boolean))) {\n    return true;\n} else {\n    final org.easymock.internal.ExpectedInvocation org.easymock.internal.ExpectedInvocation = java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.get(((java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.size()) - 1)).getExpectedInvocation();\n    return org.easymock.internal.ExpectedInvocation.equals(org.easymock.internal.ExpectedInvocation);\n}"},"status":-2},{"failures":[],"tindex":87,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.matchers.And:43","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:104","type":"CtIfImpl","sourcecode":"if ((java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.isEmpty()) || (!(this.boolean))) {\n    return true;\n} else {\n    final org.easymock.internal.ExpectedInvocation org.easymock.internal.ExpectedInvocation = java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.get(((java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.size()) - 1)).getExpectedInvocation();\n    return org.easymock.internal.ExpectedInvocation.equals(org.easymock.internal.ExpectedInvocation);\n}"},"status":-2},{"failures":[],"tindex":88,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.UnorderedBehavior:74","type":"CtForEachImpl","sourcecode":"for (final org.easymock.internal.ExpectedInvocationAndResults org.easymock.internal.ExpectedInvocationAndResults : java.util.List<org.easymock.internal.ExpectedInvocationAndResults>) {\n    if (!(org.easymock.internal.ExpectedInvocationAndResults.getResults().hasValidCallCount())) {\n        return false;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:104","type":"CtIfImpl","sourcecode":"if ((java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.isEmpty()) || (!(this.boolean))) {\n    return true;\n} else {\n    final org.easymock.internal.ExpectedInvocation org.easymock.internal.ExpectedInvocation = java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.get(((java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.size()) - 1)).getExpectedInvocation();\n    return org.easymock.internal.ExpectedInvocation.equals(org.easymock.internal.ExpectedInvocation);\n}"},"status":-2},{"failures":[],"tindex":89,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.matchers.Or:40","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:104","type":"CtIfImpl","sourcecode":"if ((java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.isEmpty()) || (!(this.boolean))) {\n    return true;\n} else {\n    final org.easymock.internal.ExpectedInvocation org.easymock.internal.ExpectedInvocation = java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.get(((java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.size()) - 1)).getExpectedInvocation();\n    return org.easymock.internal.ExpectedInvocation.equals(org.easymock.internal.ExpectedInvocation);\n}"},"status":-2},{"failures":[],"tindex":90,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.UnorderedBehavior:104","type":"CtIfImpl","sourcecode":"if ((java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.isEmpty()) || (!(this.boolean))) {\n    return true;\n} else {\n    final org.easymock.internal.ExpectedInvocation org.easymock.internal.ExpectedInvocation = java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.get(((java.util.List<org.easymock.internal.ExpectedInvocationAndResults>.size()) - 1)).getExpectedInvocation();\n    return org.easymock.internal.ExpectedInvocation.equals(org.easymock.internal.ExpectedInvocation);\n}"},"status":-2},{"failureDictionary":{}},{"memory":8006,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2600},{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2600},{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2600},{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2600}],"os.version":"3.2.0-4-amd64"}]
