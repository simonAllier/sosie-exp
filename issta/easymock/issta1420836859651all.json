[{"failures":[],"tindex":1,"variableMapping":{"bridgeMethod":"hashCodeMethod"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","type":"CtAssertImpl","sourcecode":"assert java.lang.reflect.Method != null : \"Method must not be null\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))"},"status":-1},{"failures":[],"tindex":2,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.ClassProxyFactory:127","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))"},"status":-1},{"failures":[],"tindex":3,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","type":"CtAssertImpl","sourcecode":"assert java.lang.reflect.Method != null : \"Method must not be null\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))"},"status":-2},{"failures":[],"tindex":4,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.ExpectedInvocation:106","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<org.easymock.IArgumentMatcher> java.util.Iterator<org.easymock.IArgumentMatcher> = java.util.List<org.easymock.IArgumentMatcher>.iterator() ; java.util.Iterator<org.easymock.IArgumentMatcher>.hasNext() ; ) {\n    java.util.Iterator<org.easymock.IArgumentMatcher>.next().appendTo(java.lang.StringBuffer);\n    if (java.util.Iterator<org.easymock.IArgumentMatcher>.hasNext()) {\n        java.lang.StringBuffer.append(\", \");\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))"},"status":-2},{"failures":[],"tindex":5,"variableMapping":{"result":"hashCodeMethod","bridgeMethod":"hashCodeMethod"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))"},"status":0},{"failures":[],"tindex":6,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.ClassProxyFactory:107","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))"},"status":-2},{"failures":[],"tindex":7,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.ReflectionUtils:102","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))"},"status":-2},{"failures":[],"tindex":8,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.ArgumentToString:45","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuffer.append(\"[\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))"},"status":-2},{"failures":[],"tindex":9,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:124","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(new org.easymock.internal.MethodSerializationWrapper(java.lang.reflect.Method))"},"status":-1},{"failures":[],"tindex":10,"variableMapping":{"stream":"in"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.ClassProxyFactory:107","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:70","type":"CtInvocationImpl","sourcecode":"java.io.InputStream.close()"},"status":-2},{"failures":[],"tindex":11,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:123","type":"CtNewClassImpl","sourcecode":"new org.easymock.internal.JavaProxyFactory()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:70","type":"CtInvocationImpl","sourcecode":"java.io.InputStream.close()"},"status":-2},{"failures":[],"tindex":12,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.ClassProxyFactory:107","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:70","type":"CtInvocationImpl","sourcecode":"java.io.InputStream.close()"},"status":-2},{"failures":[],"tindex":13,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.ConstructorArgs:59","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.isPrimitive()) {\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalArgumentException((\"Null argument for primitive param \" + int));\n    } \n    try {\n        final java.lang.reflect.Field java.lang.reflect.Field = java.lang.Object.getClass().getDeclaredField(\"TYPE\");\n        final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)));\n        if (java.lang.Class<?>.equals(java.lang.Class<?>)) {\n            continue;\n        } \n    } catch (final java.lang.Exception java.lang.Exception) {\n        throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n    }\n    throw org.easymock.ConstructorArgs.throwException(java.lang.Class<?>, java.lang.Object);\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:70","type":"CtInvocationImpl","sourcecode":"java.io.InputStream.close()"},"status":-2},{"failures":[],"tindex":14,"variableMapping":{"stream":"in"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.ClassProxyFactory:107","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:70","type":"CtInvocationImpl","sourcecode":"java.io.InputStream.close()"},"status":-2},{"failures":[],"tindex":15,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:123","type":"CtNewClassImpl","sourcecode":"new org.easymock.internal.JavaProxyFactory()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:70","type":"CtInvocationImpl","sourcecode":"java.io.InputStream.close()"},"status":0},{"failures":[],"tindex":16,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.ClassProxyFactory:107","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:70","type":"CtInvocationImpl","sourcecode":"java.io.InputStream.close()"},"status":-2},{"failures":[],"tindex":17,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.RecordState:116","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireValidAnswer(org.easymock.IAnswer<?>)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:70","type":"CtInvocationImpl","sourcecode":"java.io.InputStream.close()"},"status":-2},{"failures":[],"tindex":18,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.EasyMockProperties:70","type":"CtInvocationImpl","sourcecode":"java.io.InputStream.close()"},"status":-2},{"failures":[],"tindex":19,"variableMapping":{"currentPosition":"length","callCount":"length"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.Results:56","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:157","type":"CtReturnImpl","sourcecode":"return (((java.lang.StackTraceElement[].int) > 2) && (java.lang.StackTraceElement[][2].getClassName().equals(org.easymock.internal.MockInvocationHandler.org.easymock.internal.MockInvocationHandler.getName()))) && (java.lang.StackTraceElement[][2].getMethodName().equals(\"invoke\"))"},"status":-2},{"failures":[],"tindex":20,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:157","type":"CtReturnImpl","sourcecode":"return (((java.lang.StackTraceElement[].int) > 2) && (java.lang.StackTraceElement[][2].getClassName().equals(org.easymock.internal.MockInvocationHandler.org.easymock.internal.MockInvocationHandler.getName()))) && (java.lang.StackTraceElement[][2].getMethodName().equals(\"invoke\"))"},"status":-1},{"failures":[],"tindex":21,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.matchers.GreaterOrEqual:39","type":"CtReturnImpl","sourcecode":"return int >= 0"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:157","type":"CtReturnImpl","sourcecode":"return (((java.lang.StackTraceElement[].int) > 2) && (java.lang.StackTraceElement[][2].getClassName().equals(org.easymock.internal.MockInvocationHandler.org.easymock.internal.MockInvocationHandler.getName()))) && (java.lang.StackTraceElement[][2].getMethodName().equals(\"invoke\"))"},"status":-2},{"failures":[],"tindex":22,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:159","type":"CtLocalVariableImpl","sourcecode":"final java.lang.reflect.Method java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.searchForMatch(java.lang.Class<?>, java.lang.reflect.Method)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:157","type":"CtReturnImpl","sourcecode":"return (((java.lang.StackTraceElement[].int) > 2) && (java.lang.StackTraceElement[][2].getClassName().equals(org.easymock.internal.MockInvocationHandler.org.easymock.internal.MockInvocationHandler.getName()))) && (java.lang.StackTraceElement[][2].getMethodName().equals(\"invoke\"))"},"status":-2},{"failures":[],"tindex":23,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.matchers.And:43","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:157","type":"CtReturnImpl","sourcecode":"return (((java.lang.StackTraceElement[].int) > 2) && (java.lang.StackTraceElement[][2].getClassName().equals(org.easymock.internal.MockInvocationHandler.org.easymock.internal.MockInvocationHandler.getName()))) && (java.lang.StackTraceElement[][2].getMethodName().equals(\"invoke\"))"},"status":-2},{"failures":[],"tindex":24,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.matchers.And:40","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:157","type":"CtReturnImpl","sourcecode":"return (((java.lang.StackTraceElement[].int) > 2) && (java.lang.StackTraceElement[][2].getClassName().equals(org.easymock.internal.MockInvocationHandler.org.easymock.internal.MockInvocationHandler.getName()))) && (java.lang.StackTraceElement[][2].getMethodName().equals(\"invoke\"))"},"status":-2},{"failures":[],"tindex":25,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.matchers.LessOrEqual:39","type":"CtReturnImpl","sourcecode":"return int <= 0"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:157","type":"CtReturnImpl","sourcecode":"return (((java.lang.StackTraceElement[].int) > 2) && (java.lang.StackTraceElement[][2].getClassName().equals(org.easymock.internal.MockInvocationHandler.org.easymock.internal.MockInvocationHandler.getName()))) && (java.lang.StackTraceElement[][2].getMethodName().equals(\"invoke\"))"},"status":-2},{"failures":[],"tindex":26,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.EasyMock:2080","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).verify()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:157","type":"CtReturnImpl","sourcecode":"return (((java.lang.StackTraceElement[].int) > 2) && (java.lang.StackTraceElement[][2].getClassName().equals(org.easymock.internal.MockInvocationHandler.org.easymock.internal.MockInvocationHandler.getName()))) && (java.lang.StackTraceElement[][2].getMethodName().equals(\"invoke\"))"},"status":-2},{"failures":[],"tindex":27,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ClassProxyFactory:157","type":"CtReturnImpl","sourcecode":"return (((java.lang.StackTraceElement[].int) > 2) && (java.lang.StackTraceElement[][2].getClassName().equals(org.easymock.internal.MockInvocationHandler.org.easymock.internal.MockInvocationHandler.getName()))) && (java.lang.StackTraceElement[][2].getMethodName().equals(\"invoke\"))"},"status":-2},{"failures":[],"tindex":28,"variableMapping":{"this":"state"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.RecordState:96","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}"},"status":-2},{"failures":[],"tindex":29,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:110","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksControlState.assertRecordState()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}"},"status":-1},{"failures":[],"tindex":30,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.MocksControl:110","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksControlState.assertRecordState()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}"},"status":-1},{"failures":[],"tindex":31,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.RecordState:109","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}"},"status":-2},{"failures":[],"tindex":32,"variableMapping":{"this":"state"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.RecordState:145","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireVoidMethod()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}"},"status":-2},{"failures":[],"tindex":33,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:222","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksControlState.verify()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}"},"status":0},{"failures":[],"tindex":34,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.RecordState:96","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireMethodCall(\"return value\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}"},"status":-2},{"failures":[],"tindex":35,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.MocksControl:185","type":"CtReturnImpl","sourcecode":"return ((java.lang.Class<T>)(V.getClass().getSuperclass()))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}"},"status":-2},{"failures":[],"tindex":36,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:221","type":"CtTryImpl","sourcecode":"try {\n    org.easymock.internal.IMocksControlState.verify();\n} catch (final org.easymock.internal.RuntimeExceptionWrapper org.easymock.internal.RuntimeExceptionWrapper) {\n    throw ((java.lang.RuntimeException)(org.easymock.internal.RuntimeExceptionWrapper.getRuntimeException().fillInStackTrace()));\n} catch (final org.easymock.internal.AssertionErrorWrapper org.easymock.internal.AssertionErrorWrapper) {\n    throw ((java.lang.AssertionError)(org.easymock.internal.AssertionErrorWrapper.getAssertionError().fillInStackTrace()));\n}"},"status":-1},{"failures":[],"tindex":37,"variableMapping":{"data":"data"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","type":"CtInvocationImpl","sourcecode":"java.io.DataOutputStream.writeByte(2)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","type":"CtInvocationImpl","sourcecode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)"},"status":-1},{"failures":[],"tindex":38,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:123","type":"CtNewClassImpl","sourcecode":"new org.easymock.internal.JavaProxyFactory()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","type":"CtInvocationImpl","sourcecode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)"},"status":-1},{"failures":[],"tindex":39,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","type":"CtInvocationImpl","sourcecode":"java.io.DataOutputStream.writeByte(2)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","type":"CtInvocationImpl","sourcecode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)"},"status":-1},{"failures":[],"tindex":40,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.ReplayState:65","type":"CtThrowImpl","sourcecode":"throw java.lang.Throwable"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","type":"CtInvocationImpl","sourcecode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)"},"status":-2},{"failures":[],"tindex":41,"variableMapping":{"data":"data"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","type":"CtInvocationImpl","sourcecode":"java.io.DataOutputStream.writeByte(2)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","type":"CtInvocationImpl","sourcecode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)"},"status":-1},{"failures":[],"tindex":42,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","type":"CtInvocationImpl","sourcecode":"java.io.DataOutputStream.writeByte(2)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","type":"CtInvocationImpl","sourcecode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)"},"status":-1},{"failures":[],"tindex":43,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:146","type":"CtInvocationImpl","sourcecode":"java.io.DataOutputStream.writeByte(2)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","type":"CtInvocationImpl","sourcecode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)"},"status":-1},{"failures":[],"tindex":44,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.RecordState:292","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(\"last method called on mock is not a void method\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","type":"CtInvocationImpl","sourcecode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)"},"status":-1},{"failures":[],"tindex":45,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.DefaultClassInstantiator:137","type":"CtInvocationImpl","sourcecode":"java.io.DataOutputStream.writeShort(java.io.ObjectStreamConstants.short)"},"status":-1},{"failures":[],"tindex":46,"variableMapping":{"this":"java.lang.Object.class","mock":"o"},"series":0,"name":"replace","transplant":{"position":"org.easymock.EasyMock:2012","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).replay()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:639","type":"CtWhileImpl","sourcecode":"while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n    org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocksOnClass(java.lang.Class<?>, java.lang.Object, java.util.List<java.lang.Object>);\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}"},"status":-2},{"failures":[],"tindex":47,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.EasyMock:1458","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:639","type":"CtWhileImpl","sourcecode":"while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n    org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocksOnClass(java.lang.Class<?>, java.lang.Object, java.util.List<java.lang.Object>);\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}"},"status":-1},{"failures":[],"tindex":48,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.EasyMock:2038","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).resetToNice();\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:639","type":"CtWhileImpl","sourcecode":"while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n    org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocksOnClass(java.lang.Class<?>, java.lang.Object, java.util.List<java.lang.Object>);\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}"},"status":-2},{"failures":[],"tindex":49,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.MockBuilder:148","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.MockBuilder<T>.checkConstructorNotInitialized()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:639","type":"CtWhileImpl","sourcecode":"while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n    org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocksOnClass(java.lang.Class<?>, java.lang.Object, java.util.List<java.lang.Object>);\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}"},"status":-2},{"failures":[],"tindex":50,"variableMapping":{"result":"java.lang.Object.class","array":"o","this":"java.lang.Object.class"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.Invocation:73","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    java.lang.Object[][int] = java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int);\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:639","type":"CtWhileImpl","sourcecode":"while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n    org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocksOnClass(java.lang.Class<?>, java.lang.Object, java.util.List<java.lang.Object>);\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}"},"status":-2},{"failures":[],"tindex":51,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.Invocation:168","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.matchers.Captures<?>.validateCapture()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:639","type":"CtWhileImpl","sourcecode":"while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n    org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocksOnClass(java.lang.Class<?>, java.lang.Object, java.util.List<java.lang.Object>);\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}"},"status":-2},{"failures":[],"tindex":52,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.RecordState:117","type":"CtIfImpl","sourcecode":"if ((org.easymock.internal.Result) != null) {\n    org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range);\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:639","type":"CtWhileImpl","sourcecode":"while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n    org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocksOnClass(java.lang.Class<?>, java.lang.Object, java.util.List<java.lang.Object>);\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}"},"status":-2},{"failures":[],"tindex":53,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.ReflectionUtils:103","type":"CtContinueImpl","sourcecode":"continue"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:639","type":"CtWhileImpl","sourcecode":"while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n    org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocksOnClass(java.lang.Class<?>, java.lang.Object, java.util.List<java.lang.Object>);\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}"},"status":0},{"failures":[],"tindex":54,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:639","type":"CtWhileImpl","sourcecode":"while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n    org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.injectMocksOnClass(java.lang.Class<?>, java.lang.Object, java.util.List<java.lang.Object>);\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}"},"status":-1},{"failures":[],"tindex":55,"variableMapping":{"constructorArgs":"mock"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.MockBuilder:163","type":"CtIfImpl","sourcecode":"if ((org.easymock.ConstructorArgs) != null) {\n    throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:2025","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()"},"status":-1},{"failures":[],"tindex":56,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.AndroidSupport:26","type":"CtInvocationImpl","sourcecode":"java.lang.Class.java.lang.Class.forName(\"dalvik.system.PathClassLoader\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:2025","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()"},"status":-2},{"failures":[],"tindex":57,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.MocksBehavior:169","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.ErrorMessage.appendTo(java.lang.StringBuilder, 0)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:2025","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()"},"status":-2},{"failures":[],"tindex":58,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:382","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Class<?>.getInterfaces().int) ; int++) {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getInterfaces()[int];\n    if (!(java.util.List<java.lang.Class<?>>.contains(java.lang.Class<?>))) {\n        java.util.List<java.lang.Class<?>>.add(java.lang.Class<?>);\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:2025","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()"},"status":-2},{"failures":[],"tindex":59,"variableMapping":{"stream":"mock"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.ClassProxyFactory:127","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:2025","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()"},"status":-2},{"failures":[],"tindex":60,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.MockBuilder:223","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.createNiceControl()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:2025","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()"},"status":0},{"failures":[],"tindex":61,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.EasyMock:665","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(org.easymock.internal.matchers.Any.org.easymock.internal.matchers.Any)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:2025","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()"},"status":-1},{"failures":[],"tindex":62,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.ReflectionUtils:107","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:2025","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()"},"status":-2},{"failures":[],"tindex":63,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMock:2025","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.getControl(java.lang.Object).reset()"},"status":-1},{"failures":[],"tindex":64,"variableMapping":{"number":"proxy"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.RecordState:197","type":"CtReturnImpl","sourcecode":"return java.lang.Number.shortValue()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])"},"status":-2},{"failures":[],"tindex":65,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.ReplayState:46","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.ReplayState.invokeInner(org.easymock.internal.Invocation)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])"},"status":-2},{"failures":[],"tindex":66,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.Range:37","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalArgumentException(\"minimum must be <= maximum\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])"},"status":-1},{"failures":[],"tindex":67,"variableMapping":{"value":"proxy"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.RecordState:190","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.lang.Number)) {\n    return java.lang.Object;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])"},"status":-2},{"failures":[],"tindex":68,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:86","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])"},"status":-2},{"failures":[],"tindex":69,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.ReplayState:154","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.ReplayState.throwWrappedIllegalStateException()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])"},"status":-2},{"failures":[],"tindex":70,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.ObjectMethodsFilter:94","type":"CtReturnImpl","sourcecode":"return org.easymock.internal.MockInvocationHandler.invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])"},"status":-2},{"failures":[],"tindex":71,"variableMapping":{"method":"bridgeMethod"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.ReflectionUtils:102","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","type":"CtForEachImpl","sourcecode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}"},"status":-2},{"failures":[],"tindex":72,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.RecordState:161","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireMethodCall(\"stub answer\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","type":"CtForEachImpl","sourcecode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}"},"status":-2},{"failures":[],"tindex":73,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:186","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Method.setAccessible(true)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","type":"CtForEachImpl","sourcecode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}"},"status":-2},{"failures":[],"tindex":74,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.Invocation:80","type":"CtReturnImpl","sourcecode":"return java.lang.Object"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","type":"CtForEachImpl","sourcecode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}"},"status":-2},{"failures":[],"tindex":75,"variableMapping":{"bridgeMethod":"bridgeMethod"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","type":"CtAssertImpl","sourcecode":"assert java.lang.reflect.Method != null : \"Method must not be null\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","type":"CtForEachImpl","sourcecode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}"},"status":0},{"failures":[],"tindex":76,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.ReplayState:68","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","type":"CtForEachImpl","sourcecode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}"},"status":-1},{"failures":[],"tindex":77,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:79","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method.isBridge()) {\n    java.lang.reflect.Method = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.findBridgedMethod(java.lang.reflect.Method);\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","type":"CtForEachImpl","sourcecode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}"},"status":-2},{"failures":[],"tindex":78,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:86","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.java.lang.Integer.valueOf(java.lang.System.java.lang.System.identityHashCode(java.lang.Object))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","type":"CtForEachImpl","sourcecode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}"},"status":-2},{"failures":[],"tindex":79,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.BridgeMethodResolver:79","type":"CtForEachImpl","sourcecode":"for (final java.lang.reflect.Method java.lang.reflect.Method : java.lang.reflect.Method[]) {\n    if (org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.isBridgedCandidateFor(java.lang.reflect.Method, java.lang.reflect.Method)) {\n        java.util.List<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n    } \n}"},"status":-1},{"failures":[],"tindex":80,"variableMapping":{"method":"m"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.ReflectionUtils:102","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method.isBridge()) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} "},"status":-2},{"failures":[],"tindex":81,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:123","type":"CtNewClassImpl","sourcecode":"new org.easymock.internal.JavaProxyFactory()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} "},"status":-1},{"failures":[],"tindex":82,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.EasyMockProperties:115","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.startsWith(org.easymock.internal.EasyMockProperties.java.lang.String))) {\n    throw new java.lang.IllegalArgumentException(((((\"Invalid key (\" + java.lang.String) + \"), an easymock property starts with \\\"\") + (org.easymock.internal.EasyMockProperties.java.lang.String)) + \"\\\"\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} "},"status":-2},{"failures":[],"tindex":83,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:275","type":"CtReturnImpl","sourcecode":"return java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} "},"status":-2},{"failures":[],"tindex":84,"variableMapping":{"result":"m","bridgeMethod":"m"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:93","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalStateException(((\"Unable to locate bridged method for bridge method \\'\" + java.lang.reflect.Method) + \"\\'\"));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} "},"status":0},{"failures":[],"tindex":85,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:123","type":"CtNewClassImpl","sourcecode":"new org.easymock.internal.JavaProxyFactory()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} "},"status":0},{"failures":[],"tindex":86,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.ReflectionUtils:107","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method != null) {\n    throw new java.lang.RuntimeException((\"Ambiguous name: More than one method are named \" + java.lang.String));\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} "},"status":-2},{"failures":[],"tindex":87,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.MockBuilder:223","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMockSupport.createNiceControl()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} "},"status":-1},{"failures":[],"tindex":88,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:89","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} "},"status":-1},{"failureDictionary":{}},{"memory":8006,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2600},{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2600},{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2600},{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2600}],"os.version":"3.2.0-4-amd64"}]
