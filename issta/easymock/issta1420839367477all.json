[{"failures":[],"tindex":1,"variableMapping":{"number":"number"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.RecordState:197","type":"CtReturnImpl","sourcecode":"return java.lang.Number.shortValue()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:200","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}"},"status":-1},{"failures":[],"tindex":2,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.RecordState:197","type":"CtReturnImpl","sourcecode":"return java.lang.Number.shortValue()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:200","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}"},"status":-1},{"failures":[],"tindex":3,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.RecordState:204","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:200","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}"},"status":0},{"failures":[],"tindex":4,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.MocksControl:131","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((\"Class mocking is currently disabled. Change \" + (org.easymock.EasyMock.java.lang.String)) + \" to true do modify this behavior\"))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:200","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}"},"status":-1},{"failures":[],"tindex":5,"variableMapping":{"number":"number"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.RecordState:201","type":"CtReturnImpl","sourcecode":"return java.lang.Number.longValue()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:200","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}"},"status":-2},{"failures":[],"tindex":6,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.RecordState:207","type":"CtReturnImpl","sourcecode":"return java.lang.Number"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:200","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}"},"status":-2},{"failures":[],"tindex":7,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.RecordState:199","type":"CtReturnImpl","sourcecode":"return java.lang.Number.intValue()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:200","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}"},"status":-2},{"failures":[],"tindex":8,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.ConstructorArgs:94","type":"CtReturnImpl","sourcecode":"return java.lang.Object[]"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:200","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}"},"status":-2},{"failures":[],"tindex":9,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:200","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.equals(java.lang.Long.java.lang.Class<java.lang.Long>)) {\n    return java.lang.Number.longValue();\n} else if (java.lang.Class<?>.equals(java.lang.Float.java.lang.Class<java.lang.Float>)) {\n    return java.lang.Number.floatValue();\n} else if (java.lang.Class<?>.equals(java.lang.Double.java.lang.Class<java.lang.Double>)) {\n    return java.lang.Number.doubleValue();\n} else {\n    return java.lang.Number;\n}"},"status":-2},{"failures":[],"tindex":10,"variableMapping":{"paramTypes":"newArgs","length":"nonVarArgsCount","initArgs":"args"},"series":0,"name":"replace","transplant":{"position":"org.easymock.ConstructorArgs:50","type":"CtIfImpl","sourcecode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:63","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(java.lang.Object[], 0, java.lang.Object[], 0, int)"},"status":-1},{"failures":[],"tindex":11,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:123","type":"CtNewClassImpl","sourcecode":"new org.easymock.internal.JavaProxyFactory()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:63","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(java.lang.Object[], 0, java.lang.Object[], 0, int)"},"status":-1},{"failures":[],"tindex":12,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.ArgumentToString:83","type":"CtIfImpl","sourcecode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:63","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(java.lang.Object[], 0, java.lang.Object[], 0, int)"},"status":-2},{"failures":[],"tindex":13,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.EasyMockSupport:326","type":"CtReturnImpl","sourcecode":"return org.easymock.EasyMockSupport.createNiceControl().createMock(java.lang.String, java.lang.Class<T>, org.easymock.ConstructorArgs, java.lang.reflect.Method[])"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:63","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(java.lang.Object[], 0, java.lang.Object[], 0, int)"},"status":-2},{"failures":[],"tindex":14,"variableMapping":{"paramTypes":"newArgs","length":"nonVarArgsCount","initArgs":"args"},"series":0,"name":"add","transplant":{"position":"org.easymock.ConstructorArgs:50","type":"CtIfImpl","sourcecode":"if ((java.lang.Object[].int) != (java.lang.Class<?>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"Number of provided arguments doesn\\'t match constructor ones\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:63","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(java.lang.Object[], 0, java.lang.Object[], 0, int)"},"status":0},{"failures":[],"tindex":15,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.ReplayState:105","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.ReplayState.throwWrappedIllegalStateException()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:63","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(java.lang.Object[], 0, java.lang.Object[], 0, int)"},"status":-2},{"failures":[],"tindex":16,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.ArgumentToString:83","type":"CtIfImpl","sourcecode":"if (java.lang.Object[] == null) {\n    java.lang.Object[] = new java.lang.Object[0];\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:63","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(java.lang.Object[], 0, java.lang.Object[], 0, int)"},"status":-2},{"failures":[],"tindex":17,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.Result:83","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Method.setAccessible(true)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:63","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(java.lang.Object[], 0, java.lang.Object[], 0, int)"},"status":-2},{"failures":[],"tindex":18,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Invocation:63","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(java.lang.Object[], 0, java.lang.Object[], 0, int)"},"status":-1},{"failures":[],"tindex":19,"variableMapping":{"max":"callCount","java.lang.Integer.MAX_VALUE":"callCount"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.Results:95","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Results:73","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-1},{"failures":[],"tindex":20,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:123","type":"CtNewClassImpl","sourcecode":"new org.easymock.internal.JavaProxyFactory()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Results:73","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-1},{"failures":[],"tindex":21,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.MocksBehavior:94","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Results:73","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-2},{"failures":[],"tindex":22,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.EasyMock:1802","type":"CtInvocationImpl","sourcecode":"org.easymock.EasyMock.org.easymock.EasyMock.reportMatcher(new org.easymock.internal.matchers.StartsWith(java.lang.String))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Results:73","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-2},{"failures":[],"tindex":23,"variableMapping":{"initialPosition":"callCount","position":"callCount"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.MocksBehavior:105","type":"CtAssignmentImpl","sourcecode":"int = int"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Results:73","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":0},{"failures":[],"tindex":24,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:123","type":"CtNewClassImpl","sourcecode":"new org.easymock.internal.JavaProxyFactory()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Results:73","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":0},{"failures":[],"tindex":25,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.Results:95","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.int"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Results:73","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-2},{"failures":[],"tindex":26,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.ReflectionUtils:148","type":"CtForEachImpl","sourcecode":"for (final java.lang.reflect.Constructor<?> java.lang.reflect.Constructor<?> : java.lang.Class<T>.getDeclaredConstructors()) {\n    if (org.easymock.internal.ReflectionUtils.org.easymock.internal.ReflectionUtils.isMatchingConstructor(java.lang.reflect.Constructor<?>, java.lang.Object[])) {\n        if (java.lang.reflect.Constructor<T> != null) {\n            throw new java.lang.IllegalArgumentException(((\"Ambiguity in the constructors for \" + (java.lang.Class<T>.getName())) + \".\"));\n        } \n        java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Results:73","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-2},{"failures":[],"tindex":27,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.Results:73","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-1},{"failures":[],"tindex":28,"variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.RecordState:124","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireMethodCall(\"delegate\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:100","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)"},"status":-1},{"failures":[],"tindex":29,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.RecordState:145","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireVoidMethod()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:100","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)"},"status":-1},{"failures":[],"tindex":30,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.RecordState:144","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:100","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)"},"status":-1},{"failures":[],"tindex":31,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.Result:83","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Method.setAccessible(true)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:100","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)"},"status":-2},{"failures":[],"tindex":32,"variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.RecordState:182","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:100","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)"},"status":-1},{"failures":[],"tindex":33,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.RecordState:133","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:100","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)"},"status":0},{"failures":[],"tindex":34,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.RecordState:182","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireLastResultOrVoidMethod()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:100","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)"},"status":-1},{"failures":[],"tindex":35,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.EasyMockSupport:623","type":"CtWhileImpl","sourcecode":"while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n    org.easymock.EasyMockSupport.org.easymock.EasyMockSupport.createMocksForAnnotations(java.lang.Class<?>, java.lang.Object, java.util.List<java.lang.Object>, java.util.List<java.lang.reflect.Field>);\n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:100","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)"},"status":-2},{"failures":[],"tindex":36,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:100","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.times(org.easymock.internal.MocksControl.org.easymock.internal.Range)"},"status":-1},{"failures":[],"tindex":37,"variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.RecordState:106","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireMethodCall(\"Throwable\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:220","type":"CtIfImpl","sourcecode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} "},"status":-1},{"failures":[],"tindex":38,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.RecordState:85","type":"CtIfImpl","sourcecode":"if (org.easymock.internal.LastControl.(org.easymock.internal.LastControl.pullMatchers()) != null) {\n    throw new java.lang.IllegalStateException(\"matcher calls were used outside expectations\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:220","type":"CtIfImpl","sourcecode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} "},"status":-1},{"failures":[],"tindex":39,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.RecordState:115","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireMethodCall(\"answer\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:220","type":"CtIfImpl","sourcecode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} "},"status":-1},{"failures":[],"tindex":40,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.UnorderedBehavior:38","type":"CtForEachImpl","sourcecode":"for (final org.easymock.internal.ExpectedInvocationAndResults org.easymock.internal.ExpectedInvocationAndResults : java.util.List<org.easymock.internal.ExpectedInvocationAndResults>) {\n    if (org.easymock.internal.ExpectedInvocationAndResults.getExpectedInvocation().equals(org.easymock.internal.ExpectedInvocation)) {\n        org.easymock.internal.ExpectedInvocationAndResults.getResults().add(org.easymock.internal.Result, org.easymock.internal.Range);\n        return ;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:220","type":"CtIfImpl","sourcecode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} "},"status":-2},{"failures":[],"tindex":41,"variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.RecordState:144","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireMethodCall(\"stub behavior\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:220","type":"CtIfImpl","sourcecode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} "},"status":0},{"failures":[],"tindex":42,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.EasyMock:1220","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportAnd(2)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:220","type":"CtIfImpl","sourcecode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} "},"status":-1},{"failures":[],"tindex":43,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.RecordState:171","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireMethodCall(\"stub delegate\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:220","type":"CtIfImpl","sourcecode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} "},"status":0},{"failures":[],"tindex":44,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.MockBuilder:160","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Trying to define constructor arguments without first setting their type.\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:220","type":"CtIfImpl","sourcecode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} "},"status":-1},{"failures":[],"tindex":45,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:220","type":"CtIfImpl","sourcecode":"if (!org.easymock.internal.RecordState.(isLastResultOrVoidMethod())) {\n    throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.IllegalStateException(((\"missing behavior definition for the preceding method call:\\n\" + (org.easymock.internal.ExpectedInvocation.toString())) + \"\\nUsage is: expect(a.foo()).andXXX()\")));\n} "},"status":-1},{"failures":[],"tindex":46,"variableMapping":{"field":"f"},"series":0,"name":"replace","transplant":{"position":"org.easymock.ConstructorArgs:66","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:660","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Field.getType()"},"status":-2},{"failures":[],"tindex":47,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.MocksBehavior:152","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:660","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Field.getType()"},"status":-2},{"failures":[],"tindex":48,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","type":"CtLocalVariableImpl","sourcecode":"java.lang.Class<?> java.lang.Class<?>"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:660","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Field.getType()"},"status":-2},{"failures":[],"tindex":49,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.Capture:95","type":"CtReturnImpl","sourcecode":"return java.util.List<T>"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:660","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Field.getType()"},"status":-2},{"failures":[],"tindex":50,"variableMapping":{"field":"f"},"series":0,"name":"add","transplant":{"position":"org.easymock.ConstructorArgs:66","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Field.get(null)))"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:660","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Field.getType()"},"status":-2},{"failures":[],"tindex":51,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:187","type":"CtLocalVariableImpl","sourcecode":"java.lang.Long java.lang.Long"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:660","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Field.getType()"},"status":-2},{"failures":[],"tindex":52,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.ClassProxyFactory:173","type":"CtLocalVariableImpl","sourcecode":"java.lang.Class<?> java.lang.Class<?>"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:660","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Field.getType()"},"status":-2},{"failures":[],"tindex":53,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.ObjectMethodsFilter:109","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Method = ((org.easymock.internal.MethodSerializationWrapper)(java.io.ObjectInputStream.readObject())).getMethod()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:660","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Field.getType()"},"status":-2},{"failures":[],"tindex":54,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.EasyMockSupport:660","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.reflect.Field.getType()"},"status":-2},{"failures":[],"tindex":55,"variableMapping":{"this":"this"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.ReplayState:68","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)"},"status":-1},{"failures":[],"tindex":56,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.ReplayState:105","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.ReplayState.throwWrappedIllegalStateException()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)"},"status":-2},{"failures":[],"tindex":57,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.EasyMock:1458","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)"},"status":-1},{"failures":[],"tindex":58,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.RecordState:314","type":"CtIfImpl","sourcecode":"if (java.lang.Throwable instanceof java.lang.RuntimeException) {\n    return true;\n} "},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)"},"status":-2},{"failures":[],"tindex":59,"variableMapping":{"this":"this"},"series":0,"name":"add","transplant":{"position":"org.easymock.EasyMock:1348","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportOr(2)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)"},"status":-1},{"failures":[],"tindex":60,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.RecordState:133","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.RecordState.requireMethodCall(\"stub return value\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)"},"status":-2},{"failures":[],"tindex":61,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.ReplayState:68","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.popCurrentInvocation()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)"},"status":-1},{"failures":[],"tindex":62,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.MocksControl:318","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.IMocksControlState.andStubDelegateTo(java.lang.Object)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)"},"status":-2},{"failures":[],"tindex":63,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksControl:192","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportLastControl(null)"},"status":-1},{"failures":[],"tindex":64,"variableMapping":{"name":"methodName"},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","type":"CtAssertImpl","sourcecode":"assert java.lang.String != null : \"Method name must not be null\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} "},"status":-1},{"failures":[],"tindex":65,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:123","type":"CtNewClassImpl","sourcecode":"new org.easymock.internal.JavaProxyFactory()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} "},"status":-1},{"failures":[],"tindex":66,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:410","type":"CtAssertImpl","sourcecode":"assert java.lang.String != null : \"Method name must not be null\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} "},"status":-2},{"failures":[],"tindex":67,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:321","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    final java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n    final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n    if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getRawType());\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n        final java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n        java.lang.reflect.Type java.lang.reflect.Type = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>);\n        if (java.lang.reflect.Type == null) {\n            java.lang.reflect.Type = org.easymock.internal.BridgeMethodResolver.org.easymock.internal.BridgeMethodResolver.extractClassForTypeVariable(java.lang.reflect.TypeVariable<?>);\n        } \n        if (java.lang.reflect.Type != null) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type);\n        } \n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} "},"status":-2},{"failures":[],"tindex":68,"variableMapping":{"bridgeMethod":"m"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","type":"CtAssertImpl","sourcecode":"assert java.lang.reflect.Method != null : \"Method must not be null\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} "},"status":0},{"failures":[],"tindex":69,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:123","type":"CtNewClassImpl","sourcecode":"new org.easymock.internal.JavaProxyFactory()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} "},"status":0},{"failures":[],"tindex":70,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.BridgeMethodResolver:70","type":"CtAssertImpl","sourcecode":"assert java.lang.reflect.Method != null : \"Method must not be null\""},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} "},"status":-2},{"failures":[],"tindex":71,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.EasyMock:1420","type":"CtInvocationImpl","sourcecode":"org.easymock.internal.LastControl.org.easymock.internal.LastControl.reportNot()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} "},"status":-1},{"failures":[],"tindex":72,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MockBuilder:80","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Method == null) {\n    throw new java.lang.IllegalArgumentException((\"Method not found (or private): \" + java.lang.String));\n} "},"status":-1},{"failures":[],"tindex":73,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.MockBuilder:164","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Trying to define the constructor arguments more than once.\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:263","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))"},"status":-1},{"failures":[],"tindex":74,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.MocksControl:106","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:263","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))"},"status":-1},{"failures":[],"tindex":75,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.MocksControl:106","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Partial mocking doesn\\'t make sense for interface\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:263","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))"},"status":-1},{"failures":[],"tindex":76,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.Invocation:73","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) ; int++) {\n    java.lang.Object[][int] = java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int);\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:263","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))"},"status":-2},{"failures":[],"tindex":77,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"org.easymock.EasyMock:2125","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"current arguments are only available when executing callback methods\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:263","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))"},"status":-2},{"failures":[],"tindex":78,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.MockBuilder:69","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Final methods can\\'t be mocked\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:263","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))"},"status":-2},{"failures":[],"tindex":79,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.Capture:80","type":"CtThrowImpl","sourcecode":"throw new java.lang.AssertionError(\"Nothing captured yet\")"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:263","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))"},"status":-2},{"failures":[],"tindex":80,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.Results:50","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.LinkedList<org.easymock.internal.Range>.size()) ; int++) {\n    final org.easymock.internal.Range org.easymock.internal.Range = java.util.LinkedList<org.easymock.internal.Range>.get(int);\n    if (org.easymock.internal.Range.hasOpenCount()) {\n        return true;\n    } \n    int += org.easymock.internal.Range.getMaximum();\n    if (int > (int)) {\n        return true;\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:263","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))"},"status":-2},{"failures":[],"tindex":81,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.RecordState:263","type":"CtThrowImpl","sourcecode":"throw new org.easymock.internal.RuntimeExceptionWrapper(new java.lang.NullPointerException(\"null cannot be thrown\"))"},"status":-1},{"failures":[],"tindex":82,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"org.easymock.internal.MocksBehavior:124","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:84","type":"CtLocalVariableImpl","sourcecode":"final int int = int"},"status":-2},{"failures":[],"tindex":83,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"org.easymock.internal.LastControl:93","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<org.easymock.IArgumentMatcher> java.util.List<org.easymock.IArgumentMatcher> = new java.util.LinkedList<org.easymock.IArgumentMatcher>()"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:84","type":"CtLocalVariableImpl","sourcecode":"final int int = int"},"status":-2},{"failures":[],"tindex":84,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"org.easymock.internal.MocksBehavior:124","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:84","type":"CtLocalVariableImpl","sourcecode":"final int int = int"},"status":-2},{"failures":[],"tindex":85,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"org.easymock.internal.UnorderedBehavior:84","type":"CtForEachImpl","sourcecode":"for (final org.easymock.internal.ExpectedInvocationAndResults org.easymock.internal.ExpectedInvocationAndResults : java.util.List<org.easymock.internal.ExpectedInvocationAndResults>) {\n    final boolean boolean = !(boolean);\n    final boolean boolean = org.easymock.internal.ExpectedInvocationAndResults.getResults().hasValidCallCount();\n    final boolean boolean = (org.easymock.internal.Invocation != null) && (org.easymock.internal.ExpectedInvocationAndResults.getExpectedInvocation().matches(org.easymock.internal.Invocation));\n    if ((boolean && boolean) && (!boolean)) {\n        continue;\n    } \n    final org.easymock.internal.ErrorMessage org.easymock.internal.ErrorMessage = new org.easymock.internal.ErrorMessage(boolean , org.easymock.internal.ExpectedInvocationAndResults.toString() , org.easymock.internal.ExpectedInvocationAndResults.getResults().getCallCount());\n    java.util.List<org.easymock.internal.ErrorMessage>.add(org.easymock.internal.ErrorMessage);\n}"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:84","type":"CtLocalVariableImpl","sourcecode":"final int int = int"},"status":-2},{"failures":[],"tindex":86,"variableMapping":{"position":"position"},"series":0,"name":"add","transplant":{"position":"org.easymock.internal.MocksBehavior:102","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:84","type":"CtLocalVariableImpl","sourcecode":"final int int = int"},"status":-2},{"failures":[],"tindex":87,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"org.easymock.internal.AndroidClassProxyFactory:57","type":"CtLocalVariableImpl","sourcecode":"java.io.IOException java.io.IOException"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:84","type":"CtLocalVariableImpl","sourcecode":"final int int = int"},"status":-2},{"failures":[],"tindex":88,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"org.easymock.internal.DefaultClassInstantiator:157","type":"CtLocalVariableImpl","sourcecode":"final int int = (java.lang.reflect.Modifier.int) | (java.lang.reflect.Modifier.int)"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:84","type":"CtLocalVariableImpl","sourcecode":"final int int = int"},"status":-2},{"failures":[],"tindex":89,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"org.easymock.internal.MocksControl:259","type":"CtReturnImpl","sourcecode":"return this"},"type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:84","type":"CtLocalVariableImpl","sourcecode":"final int int = int"},"status":-2},{"failures":[],"tindex":90,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.easymock.internal.MocksBehavior:84","type":"CtLocalVariableImpl","sourcecode":"final int int = int"},"status":-2},{"failureDictionary":{}},{"memory":8006,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2600},{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2600},{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2600},{"core":4,"vendor":"AMD","model":"Dual-Core AMD Opteron(tm) Processor 2218","mhz":2600}],"os.version":"3.2.0-4-amd64"}]
