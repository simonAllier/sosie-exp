[{"failures":[],"tindex":1,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"dagger.internal.ArrayQueue:416","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.SetBinding:108","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object = dagger.internal.Binding<?>.get()"},"status":-2},{"failures":[],"tindex":2,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:146","type":"CtLocalVariableImpl","sourcecode":"java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.SetBinding:108","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object = dagger.internal.Binding<?>.get()"},"status":-2},{"failures":[],"tindex":3,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"dagger.internal.ArrayQueue:416","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.SetBinding:108","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object = dagger.internal.Binding<?>.get()"},"status":-2},{"failures":[],"tindex":4,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"dagger.internal.SetBinding:39","type":"CtLocalVariableImpl","sourcecode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.BindingsGroup.get(java.lang.String)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.SetBinding:108","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object = dagger.internal.Binding<?>.get()"},"status":-2},{"failures":[],"tindex":5,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"dagger.internal.ArrayQueue:416","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.SetBinding:108","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object = dagger.internal.Binding<?>.get()"},"status":-2},{"failures":[],"tindex":6,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"dagger.internal.Linker:164","type":"CtLocalVariableImpl","sourcecode":"java.lang.Exception java.lang.Exception"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.SetBinding:108","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object = dagger.internal.Binding<?>.get()"},"status":-2},{"failures":[],"tindex":7,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"dagger.internal.ArrayQueue:416","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.SetBinding:108","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object = dagger.internal.Binding<?>.get()"},"status":-2},{"failures":[],"tindex":8,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"dagger.ObjectGraph:198","type":"CtReturnImpl","sourcecode":"return new dagger.ObjectGraph.DaggerObjectGraph(dagger.ObjectGraph.DaggerObjectGraph , dagger.internal.Linker , dagger.internal.Loader , java.util.Map<java.lang.Class<?>, dagger.internal.StaticInjection> , java.util.Map<java.lang.String, java.lang.Class<?>> , dagger.ObjectGraph.StandardBindings.java.util.List<dagger.internal.SetBinding<?>>)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.SetBinding:108","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object = dagger.internal.Binding<?>.get()"},"status":-2},{"failures":[],"tindex":9,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"dagger.internal.SetBinding:108","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object = dagger.internal.Binding<?>.get()"},"status":-2},{"failures":[],"tindex":10,"variableMapping":{"injectedConstructor":"injectedConstructor","constructor":"injectedConstructor"},"series":0,"name":"replace","transplant":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:175","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Constructor<T> = java.lang.reflect.Constructor<T>"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:180","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor()"},"status":-2},{"failures":[],"tindex":11,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:172","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has too many injectable constructors\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:180","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor()"},"status":-2},{"failures":[],"tindex":12,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:175","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Constructor<T> = java.lang.reflect.Constructor<T>"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:180","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor()"},"status":-2},{"failures":[],"tindex":13,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"dagger.internal.ArrayQueue:536","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.lang.System.arraycopy(java.lang.Object[], int, T[], 0, int)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:180","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor()"},"status":-2},{"failures":[],"tindex":14,"variableMapping":{"injectedConstructor":"injectedConstructor","constructor":"injectedConstructor"},"series":0,"name":"add","transplant":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:175","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Constructor<T> = java.lang.reflect.Constructor<T>"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:180","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor()"},"status":0},{"failures":[],"tindex":15,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"dagger.ObjectGraph:227","type":"CtNewClassImpl","sourcecode":"new dagger.internal.ProblemDetector()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:180","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor()"},"status":0},{"failures":[],"tindex":16,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:175","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Constructor<T> = java.lang.reflect.Constructor<T>"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:180","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor()"},"status":-2},{"failures":[],"tindex":17,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"dagger.ObjectGraph:163","type":"CtReturnImpl","sourcecode":"return T"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:180","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor()"},"status":-2},{"failures":[],"tindex":18,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:180","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor()"},"status":-2},{"failures":[],"tindex":19,"variableMapping":{"cursor":"java.lang.reflect.Modifier.PRIVATE","fence":"java.lang.reflect.Modifier.PRIVATE"},"series":0,"name":"replace","transplant":{"position":"dagger.internal.ArrayQueue:378","type":"CtIfImpl","sourcecode":"if ((int) == (int))\n    throw new java.util.NoSuchElementException();\n"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:151","type":"CtForEachImpl","sourcecode":"for (java.lang.reflect.Field java.lang.reflect.Field : java.lang.Class<?>.getDeclaredFields()) {\n    if ((!(java.lang.reflect.Field.isAnnotationPresent(javax.inject.Inject.javax.inject.Inject))) || java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isStatic(java.lang.reflect.Field.getModifiers()))) {\n        continue;\n    } \n    if (((java.lang.reflect.Field.getModifiers()) & (java.lang.reflect.Modifier.int)) != 0) {\n        throw new java.lang.IllegalStateException((\"Can\\'t inject private field: \" + java.lang.reflect.Field));\n    } \n    java.lang.reflect.Field.setAccessible(true);\n    java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field);\n    java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Field.getGenericType(), java.lang.reflect.Field.getAnnotations(), java.lang.reflect.Field));\n}"},"status":-2},{"failures":[],"tindex":20,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"dagger.ObjectGraph:242","type":"CtInvocationImpl","sourcecode":"dagger.ObjectGraph.DaggerObjectGraph.linkStaticInjections()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:151","type":"CtForEachImpl","sourcecode":"for (java.lang.reflect.Field java.lang.reflect.Field : java.lang.Class<?>.getDeclaredFields()) {\n    if ((!(java.lang.reflect.Field.isAnnotationPresent(javax.inject.Inject.javax.inject.Inject))) || java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isStatic(java.lang.reflect.Field.getModifiers()))) {\n        continue;\n    } \n    if (((java.lang.reflect.Field.getModifiers()) & (java.lang.reflect.Modifier.int)) != 0) {\n        throw new java.lang.IllegalStateException((\"Can\\'t inject private field: \" + java.lang.reflect.Field));\n    } \n    java.lang.reflect.Field.setAccessible(true);\n    java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field);\n    java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Field.getGenericType(), java.lang.reflect.Field.getAnnotations(), java.lang.reflect.Field));\n}"},"status":-2},{"failures":[],"tindex":21,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:216","type":"CtIfImpl","sourcecode":"if (java.lang.Class<? super T> != null) {\n    if (dagger.internal.Keys.dagger.internal.Keys.isPlatformType(java.lang.Class<? super T>.getName())) {\n        java.lang.Class<? super T> = null;\n    } else {\n        java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.getMembersKey(java.lang.Class<? super T>));\n    }\n} "},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:151","type":"CtForEachImpl","sourcecode":"for (java.lang.reflect.Field java.lang.reflect.Field : java.lang.Class<?>.getDeclaredFields()) {\n    if ((!(java.lang.reflect.Field.isAnnotationPresent(javax.inject.Inject.javax.inject.Inject))) || java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isStatic(java.lang.reflect.Field.getModifiers()))) {\n        continue;\n    } \n    if (((java.lang.reflect.Field.getModifiers()) & (java.lang.reflect.Modifier.int)) != 0) {\n        throw new java.lang.IllegalStateException((\"Can\\'t inject private field: \" + java.lang.reflect.Field));\n    } \n    java.lang.reflect.Field.setAccessible(true);\n    java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field);\n    java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Field.getGenericType(), java.lang.reflect.Field.getAnnotations(), java.lang.reflect.Field));\n}"},"status":-2},{"failures":[],"tindex":22,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"dagger.internal.BuiltInBinding:39","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:151","type":"CtForEachImpl","sourcecode":"for (java.lang.reflect.Field java.lang.reflect.Field : java.lang.Class<?>.getDeclaredFields()) {\n    if ((!(java.lang.reflect.Field.isAnnotationPresent(javax.inject.Inject.javax.inject.Inject))) || java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isStatic(java.lang.reflect.Field.getModifiers()))) {\n        continue;\n    } \n    if (((java.lang.reflect.Field.getModifiers()) & (java.lang.reflect.Modifier.int)) != 0) {\n        throw new java.lang.IllegalStateException((\"Can\\'t inject private field: \" + java.lang.reflect.Field));\n    } \n    java.lang.reflect.Field.setAccessible(true);\n    java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field);\n    java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Field.getGenericType(), java.lang.reflect.Field.getAnnotations(), java.lang.reflect.Field));\n}"},"status":0},{"failures":[],"tindex":23,"variableMapping":{"errors":"keys"},"series":0,"name":"add","transplant":{"position":"dagger.internal.Linker:184","type":"CtInvocationImpl","sourcecode":"java.util.List<java.lang.String>.clear()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:151","type":"CtForEachImpl","sourcecode":"for (java.lang.reflect.Field java.lang.reflect.Field : java.lang.Class<?>.getDeclaredFields()) {\n    if ((!(java.lang.reflect.Field.isAnnotationPresent(javax.inject.Inject.javax.inject.Inject))) || java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isStatic(java.lang.reflect.Field.getModifiers()))) {\n        continue;\n    } \n    if (((java.lang.reflect.Field.getModifiers()) & (java.lang.reflect.Modifier.int)) != 0) {\n        throw new java.lang.IllegalStateException((\"Can\\'t inject private field: \" + java.lang.reflect.Field));\n    } \n    java.lang.reflect.Field.setAccessible(true);\n    java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field);\n    java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Field.getGenericType(), java.lang.reflect.Field.getAnnotations(), java.lang.reflect.Field));\n}"},"status":0},{"failures":[],"tindex":24,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"dagger.internal.Linker:194","type":"CtIfImpl","sourcecode":"if (!java.lang.Thread.(java.lang.Thread.holdsLock(this)))\n    throw new java.lang.AssertionError();\n"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:151","type":"CtForEachImpl","sourcecode":"for (java.lang.reflect.Field java.lang.reflect.Field : java.lang.Class<?>.getDeclaredFields()) {\n    if ((!(java.lang.reflect.Field.isAnnotationPresent(javax.inject.Inject.javax.inject.Inject))) || java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isStatic(java.lang.reflect.Field.getModifiers()))) {\n        continue;\n    } \n    if (((java.lang.reflect.Field.getModifiers()) & (java.lang.reflect.Modifier.int)) != 0) {\n        throw new java.lang.IllegalStateException((\"Can\\'t inject private field: \" + java.lang.reflect.Field));\n    } \n    java.lang.reflect.Field.setAccessible(true);\n    java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field);\n    java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Field.getGenericType(), java.lang.reflect.Field.getAnnotations(), java.lang.reflect.Field));\n}"},"status":-2},{"failures":[],"tindex":25,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"dagger.ObjectGraph:299","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?> != null)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:151","type":"CtForEachImpl","sourcecode":"for (java.lang.reflect.Field java.lang.reflect.Field : java.lang.Class<?>.getDeclaredFields()) {\n    if ((!(java.lang.reflect.Field.isAnnotationPresent(javax.inject.Inject.javax.inject.Inject))) || java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isStatic(java.lang.reflect.Field.getModifiers()))) {\n        continue;\n    } \n    if (((java.lang.reflect.Field.getModifiers()) & (java.lang.reflect.Modifier.int)) != 0) {\n        throw new java.lang.IllegalStateException((\"Can\\'t inject private field: \" + java.lang.reflect.Field));\n    } \n    java.lang.reflect.Field.setAccessible(true);\n    java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field);\n    java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Field.getGenericType(), java.lang.reflect.Field.getAnnotations(), java.lang.reflect.Field));\n}"},"status":-2},{"failures":[],"tindex":26,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:100","type":"CtLocalVariableImpl","sourcecode":"T T"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:151","type":"CtForEachImpl","sourcecode":"for (java.lang.reflect.Field java.lang.reflect.Field : java.lang.Class<?>.getDeclaredFields()) {\n    if ((!(java.lang.reflect.Field.isAnnotationPresent(javax.inject.Inject.javax.inject.Inject))) || java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isStatic(java.lang.reflect.Field.getModifiers()))) {\n        continue;\n    } \n    if (((java.lang.reflect.Field.getModifiers()) & (java.lang.reflect.Modifier.int)) != 0) {\n        throw new java.lang.IllegalStateException((\"Can\\'t inject private field: \" + java.lang.reflect.Field));\n    } \n    java.lang.reflect.Field.setAccessible(true);\n    java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field);\n    java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Field.getGenericType(), java.lang.reflect.Field.getAnnotations(), java.lang.reflect.Field));\n}"},"status":0},{"failures":[],"tindex":27,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:151","type":"CtForEachImpl","sourcecode":"for (java.lang.reflect.Field java.lang.reflect.Field : java.lang.Class<?>.getDeclaredFields()) {\n    if ((!(java.lang.reflect.Field.isAnnotationPresent(javax.inject.Inject.javax.inject.Inject))) || java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isStatic(java.lang.reflect.Field.getModifiers()))) {\n        continue;\n    } \n    if (((java.lang.reflect.Field.getModifiers()) & (java.lang.reflect.Modifier.int)) != 0) {\n        throw new java.lang.IllegalStateException((\"Can\\'t inject private field: \" + java.lang.reflect.Field));\n    } \n    java.lang.reflect.Field.setAccessible(true);\n    java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field);\n    java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Field.getGenericType(), java.lang.reflect.Field.getAnnotations(), java.lang.reflect.Field));\n}"},"status":0},{"failures":[],"tindex":28,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"dagger.internal.ArrayQueue:413","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ModuleAdapter:67","type":"CtReturnImpl","sourcecode":"return this.java.lang.Class<T>.equals(dagger.internal.ModuleAdapter<?>.java.lang.Class<?>)"},"status":0},{"failures":[],"tindex":29,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"dagger.internal.ArrayQueue:413","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ModuleAdapter:67","type":"CtReturnImpl","sourcecode":"return this.java.lang.Class<T>.equals(dagger.internal.ModuleAdapter<?>.java.lang.Class<?>)"},"status":0},{"failures":[],"tindex":30,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"dagger.internal.ArrayQueue:186","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ModuleAdapter:67","type":"CtReturnImpl","sourcecode":"return this.java.lang.Class<T>.equals(dagger.internal.ModuleAdapter<?>.java.lang.Class<?>)"},"status":0},{"failures":[],"tindex":31,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"dagger.internal.loaders.ReflectiveStaticInjection:56","type":"CtThrowImpl","sourcecode":"throw new java.lang.AssertionError(java.lang.IllegalAccessException)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ModuleAdapter:67","type":"CtReturnImpl","sourcecode":"return this.java.lang.Class<T>.equals(dagger.internal.ModuleAdapter<?>.java.lang.Class<?>)"},"status":-2},{"failures":[],"tindex":32,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"dagger.internal.ArrayQueue:186","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ModuleAdapter:67","type":"CtReturnImpl","sourcecode":"return this.java.lang.Class<T>.equals(dagger.internal.ModuleAdapter<?>.java.lang.Class<?>)"},"status":-2},{"failures":[],"tindex":33,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"dagger.internal.ArrayQueue:413","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ModuleAdapter:67","type":"CtReturnImpl","sourcecode":"return this.java.lang.Class<T>.equals(dagger.internal.ModuleAdapter<?>.java.lang.Class<?>)"},"status":-2},{"failures":[],"tindex":34,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"dagger.internal.ArrayQueue:413","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ModuleAdapter:67","type":"CtReturnImpl","sourcecode":"return this.java.lang.Class<T>.equals(dagger.internal.ModuleAdapter<?>.java.lang.Class<?>)"},"status":-2},{"failures":[],"tindex":35,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"dagger.ObjectGraph:211","type":"CtAssignmentImpl","sourcecode":"dagger.internal.StaticInjection = dagger.internal.Loader.getStaticInjection(java.util.Map.Entry<java.lang.Class<?>, dagger.internal.StaticInjection>.getKey())"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ModuleAdapter:67","type":"CtReturnImpl","sourcecode":"return this.java.lang.Class<T>.equals(dagger.internal.ModuleAdapter<?>.java.lang.Class<?>)"},"status":-2},{"failures":[],"tindex":36,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ModuleAdapter:67","type":"CtReturnImpl","sourcecode":"return this.java.lang.Class<T>.equals(dagger.internal.ModuleAdapter<?>.java.lang.Class<?>)"},"status":-2},{"failures":[],"tindex":37,"variableMapping":{"dagger.internal.Binding.DEPENDED_ON":"offset","bits":"offset"},"series":0,"name":"replace","transplant":{"position":"dagger.internal.Binding:146","type":"CtReturnImpl","sourcecode":"return ((int) & (dagger.internal.Binding.int)) != 0"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:233","type":"CtReturnImpl","sourcecode":"return java.lang.String.regionMatches(int, java.lang.String, 0, java.lang.String.length())"},"status":0},{"failures":[],"tindex":38,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"dagger.internal.ArrayQueue:413","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:233","type":"CtReturnImpl","sourcecode":"return java.lang.String.regionMatches(int, java.lang.String, 0, java.lang.String.length())"},"status":0},{"failures":[],"tindex":39,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"dagger.internal.Keys:258","type":"CtReturnImpl","sourcecode":"return ((java.lang.String.startsWith(\"java.\")) || (java.lang.String.startsWith(\"javax.\"))) || (java.lang.String.startsWith(\"android.\"))"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:233","type":"CtReturnImpl","sourcecode":"return java.lang.String.regionMatches(int, java.lang.String, 0, java.lang.String.length())"},"status":-2},{"failures":[],"tindex":40,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"dagger.internal.ArrayQueue:441","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:233","type":"CtReturnImpl","sourcecode":"return java.lang.String.regionMatches(int, java.lang.String, 0, java.lang.String.length())"},"status":-2},{"failures":[],"tindex":41,"variableMapping":{"dagger.internal.Binding.DEPENDED_ON":"offset","bits":"offset"},"series":0,"name":"add","transplant":{"position":"dagger.internal.Binding:146","type":"CtReturnImpl","sourcecode":"return ((int) & (dagger.internal.Binding.int)) != 0"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:233","type":"CtReturnImpl","sourcecode":"return java.lang.String.regionMatches(int, java.lang.String, 0, java.lang.String.length())"},"status":-2},{"failures":[],"tindex":42,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"dagger.internal.ArrayQueue:413","type":"CtReturnImpl","sourcecode":"return false"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:233","type":"CtReturnImpl","sourcecode":"return java.lang.String.regionMatches(int, java.lang.String, 0, java.lang.String.length())"},"status":-2},{"failures":[],"tindex":43,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"dagger.internal.ArrayQueue:336","type":"CtReturnImpl","sourcecode":"return (int) == (int)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:233","type":"CtReturnImpl","sourcecode":"return java.lang.String.regionMatches(int, java.lang.String, 0, java.lang.String.length())"},"status":-2},{"failures":[],"tindex":44,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"dagger.internal.SetBinding:136","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\",\")"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:233","type":"CtReturnImpl","sourcecode":"return java.lang.String.regionMatches(int, java.lang.String, 0, java.lang.String.length())"},"status":-2},{"failures":[],"tindex":45,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:233","type":"CtReturnImpl","sourcecode":"return java.lang.String.regionMatches(int, java.lang.String, 0, java.lang.String.length())"},"status":-2},{"failures":[],"tindex":46,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:71","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:181","type":"CtLocalVariableImpl","sourcecode":"int int = dagger.internal.Keys.dagger.internal.Keys.startOfType(java.lang.String)"},"status":-2},{"failures":[],"tindex":47,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"dagger.internal.Linker:271","type":"CtLocalVariableImpl","sourcecode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = null"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:181","type":"CtLocalVariableImpl","sourcecode":"int int = dagger.internal.Keys.dagger.internal.Keys.startOfType(java.lang.String)"},"status":-2},{"failures":[],"tindex":48,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:71","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:181","type":"CtLocalVariableImpl","sourcecode":"int int = dagger.internal.Keys.dagger.internal.Keys.startOfType(java.lang.String)"},"status":-2},{"failures":[],"tindex":49,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"dagger.internal.Keys:262","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type == (byte.byte))\n    return java.lang.Byte.java.lang.Byte;\n"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:181","type":"CtLocalVariableImpl","sourcecode":"int int = dagger.internal.Keys.dagger.internal.Keys.startOfType(java.lang.String)"},"status":-2},{"failures":[],"tindex":50,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:71","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:181","type":"CtLocalVariableImpl","sourcecode":"int int = dagger.internal.Keys.dagger.internal.Keys.startOfType(java.lang.String)"},"status":-2},{"failures":[],"tindex":51,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"dagger.internal.Linker:156","type":"CtLocalVariableImpl","sourcecode":"java.lang.UnsupportedOperationException java.lang.UnsupportedOperationException"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:181","type":"CtLocalVariableImpl","sourcecode":"int int = dagger.internal.Keys.dagger.internal.Keys.startOfType(java.lang.String)"},"status":-2},{"failures":[],"tindex":52,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:71","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:181","type":"CtLocalVariableImpl","sourcecode":"int int = dagger.internal.Keys.dagger.internal.Keys.startOfType(java.lang.String)"},"status":-2},{"failures":[],"tindex":53,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"dagger.internal.Keys:94","type":"CtLocalVariableImpl","sourcecode":"java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:181","type":"CtLocalVariableImpl","sourcecode":"int int = dagger.internal.Keys.dagger.internal.Keys.startOfType(java.lang.String)"},"status":-2},{"failures":[],"tindex":54,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:181","type":"CtLocalVariableImpl","sourcecode":"int int = dagger.internal.Keys.dagger.internal.Keys.startOfType(java.lang.String)"},"status":-2},{"failures":[],"tindex":55,"variableMapping":{"bindings":"bindings","this":"this"},"series":0,"name":"replace","transplant":{"position":"dagger.internal.ProblemDetector:29","type":"CtInvocationImpl","sourcecode":"dagger.internal.ProblemDetector.dagger.internal.ProblemDetector.detectCircularDependencies(java.util.Collection<dagger.internal.Binding<?>>, new java.util.ArrayList<dagger.internal.Binding<?>>())"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:53","type":"CtForEachImpl","sourcecode":"for (dagger.internal.Binding<?> dagger.internal.Binding<?> : java.util.Collection<dagger.internal.Binding<?>>) {\n    if (dagger.internal.Binding<?>.isCycleFree()) {\n        continue;\n    } \n    if (dagger.internal.Binding<?>.isVisiting()) {\n        int int = java.util.List<dagger.internal.Binding<?>>.indexOf(dagger.internal.Binding<?>);\n        java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append(\"Dependency cycle:\");\n        for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n            java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n        }\n        java.lang.StringBuilder.append(\"\\n    \").append(0).append(\". \").append(dagger.internal.Binding<?>.java.lang.String);\n        throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString());\n    } \n    dagger.internal.Binding<?>.setVisiting(true);\n    java.util.List<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n    try {\n        dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> = new dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>();\n        dagger.internal.Binding<?>.getDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>);\n        dagger.internal.ProblemDetector.dagger.internal.ProblemDetector.detectCircularDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, java.util.List<dagger.internal.Binding<?>>);\n        dagger.internal.Binding<?>.setCycleFree(true);\n    } finally {\n        java.util.List<dagger.internal.Binding<?>>.remove(((java.util.List<dagger.internal.Binding<?>>.size()) - 1));\n        dagger.internal.Binding<?>.setVisiting(false);\n    }\n}"},"status":0},{"failures":[],"tindex":56,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"dagger.internal.ProblemDetector:78","type":"CtInvocationImpl","sourcecode":"java.util.List<dagger.internal.Binding<?>>.remove(((java.util.List<dagger.internal.Binding<?>>.size()) - 1))"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:53","type":"CtForEachImpl","sourcecode":"for (dagger.internal.Binding<?> dagger.internal.Binding<?> : java.util.Collection<dagger.internal.Binding<?>>) {\n    if (dagger.internal.Binding<?>.isCycleFree()) {\n        continue;\n    } \n    if (dagger.internal.Binding<?>.isVisiting()) {\n        int int = java.util.List<dagger.internal.Binding<?>>.indexOf(dagger.internal.Binding<?>);\n        java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append(\"Dependency cycle:\");\n        for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n            java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n        }\n        java.lang.StringBuilder.append(\"\\n    \").append(0).append(\". \").append(dagger.internal.Binding<?>.java.lang.String);\n        throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString());\n    } \n    dagger.internal.Binding<?>.setVisiting(true);\n    java.util.List<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n    try {\n        dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> = new dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>();\n        dagger.internal.Binding<?>.getDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>);\n        dagger.internal.ProblemDetector.dagger.internal.ProblemDetector.detectCircularDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, java.util.List<dagger.internal.Binding<?>>);\n        dagger.internal.Binding<?>.setCycleFree(true);\n    } finally {\n        java.util.List<dagger.internal.Binding<?>>.remove(((java.util.List<dagger.internal.Binding<?>>.size()) - 1));\n        dagger.internal.Binding<?>.setVisiting(false);\n    }\n}"},"status":0},{"failures":[],"tindex":57,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"dagger.internal.ProblemDetector:75","type":"CtInvocationImpl","sourcecode":"dagger.internal.ProblemDetector.dagger.internal.ProblemDetector.detectCircularDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, java.util.List<dagger.internal.Binding<?>>)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:53","type":"CtForEachImpl","sourcecode":"for (dagger.internal.Binding<?> dagger.internal.Binding<?> : java.util.Collection<dagger.internal.Binding<?>>) {\n    if (dagger.internal.Binding<?>.isCycleFree()) {\n        continue;\n    } \n    if (dagger.internal.Binding<?>.isVisiting()) {\n        int int = java.util.List<dagger.internal.Binding<?>>.indexOf(dagger.internal.Binding<?>);\n        java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append(\"Dependency cycle:\");\n        for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n            java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n        }\n        java.lang.StringBuilder.append(\"\\n    \").append(0).append(\". \").append(dagger.internal.Binding<?>.java.lang.String);\n        throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString());\n    } \n    dagger.internal.Binding<?>.setVisiting(true);\n    java.util.List<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n    try {\n        dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> = new dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>();\n        dagger.internal.Binding<?>.getDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>);\n        dagger.internal.ProblemDetector.dagger.internal.ProblemDetector.detectCircularDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, java.util.List<dagger.internal.Binding<?>>);\n        dagger.internal.Binding<?>.setCycleFree(true);\n    } finally {\n        java.util.List<dagger.internal.Binding<?>>.remove(((java.util.List<dagger.internal.Binding<?>>.size()) - 1));\n        dagger.internal.Binding<?>.setVisiting(false);\n    }\n}"},"status":-2},{"failures":[],"tindex":58,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"dagger.ObjectGraph:299","type":"CtBreakImpl","sourcecode":"break"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:53","type":"CtForEachImpl","sourcecode":"for (dagger.internal.Binding<?> dagger.internal.Binding<?> : java.util.Collection<dagger.internal.Binding<?>>) {\n    if (dagger.internal.Binding<?>.isCycleFree()) {\n        continue;\n    } \n    if (dagger.internal.Binding<?>.isVisiting()) {\n        int int = java.util.List<dagger.internal.Binding<?>>.indexOf(dagger.internal.Binding<?>);\n        java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append(\"Dependency cycle:\");\n        for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n            java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n        }\n        java.lang.StringBuilder.append(\"\\n    \").append(0).append(\". \").append(dagger.internal.Binding<?>.java.lang.String);\n        throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString());\n    } \n    dagger.internal.Binding<?>.setVisiting(true);\n    java.util.List<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n    try {\n        dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> = new dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>();\n        dagger.internal.Binding<?>.getDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>);\n        dagger.internal.ProblemDetector.dagger.internal.ProblemDetector.detectCircularDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, java.util.List<dagger.internal.Binding<?>>);\n        dagger.internal.Binding<?>.setCycleFree(true);\n    } finally {\n        java.util.List<dagger.internal.Binding<?>>.remove(((java.util.List<dagger.internal.Binding<?>>.size()) - 1));\n        dagger.internal.Binding<?>.setVisiting(false);\n    }\n}"},"status":-2},{"failures":[],"tindex":59,"variableMapping":{"values":"bindings","this":"this"},"series":0,"name":"add","transplant":{"position":"dagger.internal.ProblemDetector:86","type":"CtInvocationImpl","sourcecode":"dagger.internal.ProblemDetector.detectUnusedBinding(java.util.Collection<dagger.internal.Binding<?>>)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:53","type":"CtForEachImpl","sourcecode":"for (dagger.internal.Binding<?> dagger.internal.Binding<?> : java.util.Collection<dagger.internal.Binding<?>>) {\n    if (dagger.internal.Binding<?>.isCycleFree()) {\n        continue;\n    } \n    if (dagger.internal.Binding<?>.isVisiting()) {\n        int int = java.util.List<dagger.internal.Binding<?>>.indexOf(dagger.internal.Binding<?>);\n        java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append(\"Dependency cycle:\");\n        for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n            java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n        }\n        java.lang.StringBuilder.append(\"\\n    \").append(0).append(\". \").append(dagger.internal.Binding<?>.java.lang.String);\n        throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString());\n    } \n    dagger.internal.Binding<?>.setVisiting(true);\n    java.util.List<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n    try {\n        dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> = new dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>();\n        dagger.internal.Binding<?>.getDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>);\n        dagger.internal.ProblemDetector.dagger.internal.ProblemDetector.detectCircularDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, java.util.List<dagger.internal.Binding<?>>);\n        dagger.internal.Binding<?>.setCycleFree(true);\n    } finally {\n        java.util.List<dagger.internal.Binding<?>>.remove(((java.util.List<dagger.internal.Binding<?>>.size()) - 1));\n        dagger.internal.Binding<?>.setVisiting(false);\n    }\n}"},"status":-2},{"failures":[],"tindex":60,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"dagger.internal.Linker:109","type":"CtInvocationImpl","sourcecode":"dagger.internal.Linker.linkRequested()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:53","type":"CtForEachImpl","sourcecode":"for (dagger.internal.Binding<?> dagger.internal.Binding<?> : java.util.Collection<dagger.internal.Binding<?>>) {\n    if (dagger.internal.Binding<?>.isCycleFree()) {\n        continue;\n    } \n    if (dagger.internal.Binding<?>.isVisiting()) {\n        int int = java.util.List<dagger.internal.Binding<?>>.indexOf(dagger.internal.Binding<?>);\n        java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append(\"Dependency cycle:\");\n        for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n            java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n        }\n        java.lang.StringBuilder.append(\"\\n    \").append(0).append(\". \").append(dagger.internal.Binding<?>.java.lang.String);\n        throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString());\n    } \n    dagger.internal.Binding<?>.setVisiting(true);\n    java.util.List<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n    try {\n        dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> = new dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>();\n        dagger.internal.Binding<?>.getDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>);\n        dagger.internal.ProblemDetector.dagger.internal.ProblemDetector.detectCircularDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, java.util.List<dagger.internal.Binding<?>>);\n        dagger.internal.Binding<?>.setCycleFree(true);\n    } finally {\n        java.util.List<dagger.internal.Binding<?>>.remove(((java.util.List<dagger.internal.Binding<?>>.size()) - 1));\n        dagger.internal.Binding<?>.setVisiting(false);\n    }\n}"},"status":-2},{"failures":[],"tindex":61,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"dagger.internal.ProblemDetector:75","type":"CtInvocationImpl","sourcecode":"dagger.internal.ProblemDetector.dagger.internal.ProblemDetector.detectCircularDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, java.util.List<dagger.internal.Binding<?>>)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:53","type":"CtForEachImpl","sourcecode":"for (dagger.internal.Binding<?> dagger.internal.Binding<?> : java.util.Collection<dagger.internal.Binding<?>>) {\n    if (dagger.internal.Binding<?>.isCycleFree()) {\n        continue;\n    } \n    if (dagger.internal.Binding<?>.isVisiting()) {\n        int int = java.util.List<dagger.internal.Binding<?>>.indexOf(dagger.internal.Binding<?>);\n        java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append(\"Dependency cycle:\");\n        for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n            java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n        }\n        java.lang.StringBuilder.append(\"\\n    \").append(0).append(\". \").append(dagger.internal.Binding<?>.java.lang.String);\n        throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString());\n    } \n    dagger.internal.Binding<?>.setVisiting(true);\n    java.util.List<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n    try {\n        dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> = new dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>();\n        dagger.internal.Binding<?>.getDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>);\n        dagger.internal.ProblemDetector.dagger.internal.ProblemDetector.detectCircularDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, java.util.List<dagger.internal.Binding<?>>);\n        dagger.internal.Binding<?>.setCycleFree(true);\n    } finally {\n        java.util.List<dagger.internal.Binding<?>>.remove(((java.util.List<dagger.internal.Binding<?>>.size()) - 1));\n        dagger.internal.Binding<?>.setVisiting(false);\n    }\n}"},"status":-2},{"failures":[],"tindex":62,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:199","type":"CtAssignmentImpl","sourcecode":"int = java.lang.reflect.Type[].int"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:53","type":"CtForEachImpl","sourcecode":"for (dagger.internal.Binding<?> dagger.internal.Binding<?> : java.util.Collection<dagger.internal.Binding<?>>) {\n    if (dagger.internal.Binding<?>.isCycleFree()) {\n        continue;\n    } \n    if (dagger.internal.Binding<?>.isVisiting()) {\n        int int = java.util.List<dagger.internal.Binding<?>>.indexOf(dagger.internal.Binding<?>);\n        java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append(\"Dependency cycle:\");\n        for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n            java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n        }\n        java.lang.StringBuilder.append(\"\\n    \").append(0).append(\". \").append(dagger.internal.Binding<?>.java.lang.String);\n        throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString());\n    } \n    dagger.internal.Binding<?>.setVisiting(true);\n    java.util.List<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n    try {\n        dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> = new dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>();\n        dagger.internal.Binding<?>.getDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>);\n        dagger.internal.ProblemDetector.dagger.internal.ProblemDetector.detectCircularDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, java.util.List<dagger.internal.Binding<?>>);\n        dagger.internal.Binding<?>.setCycleFree(true);\n    } finally {\n        java.util.List<dagger.internal.Binding<?>>.remove(((java.util.List<dagger.internal.Binding<?>>.size()) - 1));\n        dagger.internal.Binding<?>.setVisiting(false);\n    }\n}"},"status":-2},{"failures":[],"tindex":63,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:53","type":"CtForEachImpl","sourcecode":"for (dagger.internal.Binding<?> dagger.internal.Binding<?> : java.util.Collection<dagger.internal.Binding<?>>) {\n    if (dagger.internal.Binding<?>.isCycleFree()) {\n        continue;\n    } \n    if (dagger.internal.Binding<?>.isVisiting()) {\n        int int = java.util.List<dagger.internal.Binding<?>>.indexOf(dagger.internal.Binding<?>);\n        java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append(\"Dependency cycle:\");\n        for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n            java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n        }\n        java.lang.StringBuilder.append(\"\\n    \").append(0).append(\". \").append(dagger.internal.Binding<?>.java.lang.String);\n        throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString());\n    } \n    dagger.internal.Binding<?>.setVisiting(true);\n    java.util.List<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n    try {\n        dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> = new dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>();\n        dagger.internal.Binding<?>.getDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>);\n        dagger.internal.ProblemDetector.dagger.internal.ProblemDetector.detectCircularDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, java.util.List<dagger.internal.Binding<?>>);\n        dagger.internal.Binding<?>.setCycleFree(true);\n    } finally {\n        java.util.List<dagger.internal.Binding<?>>.remove(((java.util.List<dagger.internal.Binding<?>>.size()) - 1));\n        dagger.internal.Binding<?>.setVisiting(false);\n    }\n}"},"status":0},{"failures":[],"tindex":64,"variableMapping":{"type":"type"},"series":0,"name":"replace","transplant":{"position":"dagger.internal.Keys:74","type":"CtReturnImpl","sourcecode":"return ((java.lang.Class<?>)(java.lang.reflect.Type)).getName()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:112","type":"CtReturnImpl","sourcecode":"return dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Type, dagger.internal.Keys.dagger.internal.Keys.extractQualifier(java.lang.annotation.Annotation[], java.lang.Object))"},"status":0},{"failures":[],"tindex":65,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"dagger.internal.Keys:74","type":"CtReturnImpl","sourcecode":"return ((java.lang.Class<?>)(java.lang.reflect.Type)).getName()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:112","type":"CtReturnImpl","sourcecode":"return dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Type, dagger.internal.Keys.dagger.internal.Keys.extractQualifier(java.lang.annotation.Annotation[], java.lang.Object))"},"status":0},{"failures":[],"tindex":66,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:141","type":"CtReturnImpl","sourcecode":"return (java.lang.String) != null ? java.lang.String : java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:112","type":"CtReturnImpl","sourcecode":"return dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Type, dagger.internal.Keys.dagger.internal.Keys.extractQualifier(java.lang.annotation.Annotation[], java.lang.Object))"},"status":-2},{"failures":[],"tindex":67,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"dagger.internal.Binding:28","type":"CtThrowImpl","sourcecode":"throw new java.lang.AssertionError(\"Unresolved binding should never be called to inject.\")"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:112","type":"CtReturnImpl","sourcecode":"return dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Type, dagger.internal.Keys.dagger.internal.Keys.extractQualifier(java.lang.annotation.Annotation[], java.lang.Object))"},"status":0},{"failures":[],"tindex":68,"variableMapping":{"deferredKey":"subject"},"series":0,"name":"add","transplant":{"position":"dagger.internal.Linker:464","type":"CtReturnImpl","sourcecode":"return (\"DeferredBinding[deferredKey=\" + (java.lang.String)) + \"]\""},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:112","type":"CtReturnImpl","sourcecode":"return dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Type, dagger.internal.Keys.dagger.internal.Keys.extractQualifier(java.lang.annotation.Annotation[], java.lang.Object))"},"status":-2},{"failures":[],"tindex":69,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"dagger.internal.Keys:74","type":"CtReturnImpl","sourcecode":"return ((java.lang.Class<?>)(java.lang.reflect.Type)).getName()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:112","type":"CtReturnImpl","sourcecode":"return dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Type, dagger.internal.Keys.dagger.internal.Keys.extractQualifier(java.lang.annotation.Annotation[], java.lang.Object))"},"status":-2},{"failures":[],"tindex":70,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"dagger.internal.Binding:150","type":"CtReturnImpl","sourcecode":"return (((((java.lang.Object.getClass().getSimpleName()) + \"[provideKey=\\\"\") + (java.lang.String)) + \"\\\", memberskey=\\\"\") + (java.lang.String)) + \"\\\"]\""},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:112","type":"CtReturnImpl","sourcecode":"return dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Type, dagger.internal.Keys.dagger.internal.Keys.extractQualifier(java.lang.annotation.Annotation[], java.lang.Object))"},"status":-2},{"failures":[],"tindex":71,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"dagger.internal.Keys:112","type":"CtReturnImpl","sourcecode":"return dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Type, dagger.internal.Keys.dagger.internal.Keys.extractQualifier(java.lang.annotation.Annotation[], java.lang.Object))"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:112","type":"CtReturnImpl","sourcecode":"return dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Type, dagger.internal.Keys.dagger.internal.Keys.extractQualifier(java.lang.annotation.Annotation[], java.lang.Object))"},"status":-2},{"failures":[],"tindex":72,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:112","type":"CtReturnImpl","sourcecode":"return dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Type, dagger.internal.Keys.dagger.internal.Keys.extractQualifier(java.lang.annotation.Annotation[], java.lang.Object))"},"status":-2},{"failures":[],"tindex":73,"variableMapping":{"lastRet":"i"},"series":0,"name":"replace","transplant":{"position":"dagger.internal.ArrayQueue:392","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException();\n"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:73","type":"CtIfImpl","sourcecode":"if ((dagger.internal.Binding<?>[][int]) == null) {\n    dagger.internal.Binding<?>[][int] = dagger.internal.Linker.requestBinding(java.lang.String[][int], java.lang.reflect.Field[][int], java.lang.ClassLoader);\n} "},"status":0},{"failures":[],"tindex":74,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:76","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:73","type":"CtIfImpl","sourcecode":"if ((dagger.internal.Binding<?>[][int]) == null) {\n    dagger.internal.Binding<?>[][int] = dagger.internal.Linker.requestBinding(java.lang.String[][int], java.lang.reflect.Field[][int], java.lang.ClassLoader);\n} "},"status":0},{"failures":[],"tindex":75,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"dagger.internal.loaders.ReflectiveStaticInjection:52","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.reflect.Field[].int) ; int++) {\n    java.lang.reflect.Field[][int].set(null, dagger.internal.Binding<?>[][int].get());\n}"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:73","type":"CtIfImpl","sourcecode":"if ((dagger.internal.Binding<?>[][int]) == null) {\n    dagger.internal.Binding<?>[][int] = dagger.internal.Linker.requestBinding(java.lang.String[][int], java.lang.reflect.Field[][int], java.lang.ClassLoader);\n} "},"status":-2},{"failures":[],"tindex":76,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"dagger.internal.Linker:280","type":"CtIfImpl","sourcecode":"if (dagger.internal.Binding<?> == null) {\n    dagger.internal.Binding<?> dagger.internal.Binding<?> = new dagger.internal.Linker.DeferredBinding(java.lang.String , java.lang.ClassLoader , java.lang.Object , boolean);\n    dagger.internal.Binding<?>.setLibrary(boolean);\n    dagger.internal.Binding<?>.setDependedOn(true);\n    java.util.Queue<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n    boolean = false;\n    return null;\n} "},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:73","type":"CtIfImpl","sourcecode":"if ((dagger.internal.Binding<?>[][int]) == null) {\n    dagger.internal.Binding<?>[][int] = dagger.internal.Linker.requestBinding(java.lang.String[][int], java.lang.reflect.Field[][int], java.lang.ClassLoader);\n} "},"status":-2},{"failures":[],"tindex":77,"variableMapping":{"initialCapacity":"i"},"series":0,"name":"add","transplant":{"position":"dagger.internal.ArrayQueue:111","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int >>>= 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:73","type":"CtIfImpl","sourcecode":"if ((dagger.internal.Binding<?>[][int]) == null) {\n    dagger.internal.Binding<?>[][int] = dagger.internal.Linker.requestBinding(java.lang.String[][int], java.lang.reflect.Field[][int], java.lang.ClassLoader);\n} "},"status":0},{"failures":[],"tindex":78,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"dagger.ObjectGraph:227","type":"CtNewClassImpl","sourcecode":"new dagger.internal.ProblemDetector()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:73","type":"CtIfImpl","sourcecode":"if ((dagger.internal.Binding<?>[][int]) == null) {\n    dagger.internal.Binding<?>[][int] = dagger.internal.Linker.requestBinding(java.lang.String[][int], java.lang.reflect.Field[][int], java.lang.ClassLoader);\n} "},"status":0},{"failures":[],"tindex":79,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"dagger.internal.ArrayQueue:378","type":"CtIfImpl","sourcecode":"if ((int) == (int))\n    throw new java.util.NoSuchElementException();\n"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:73","type":"CtIfImpl","sourcecode":"if ((dagger.internal.Binding<?>[][int]) == null) {\n    dagger.internal.Binding<?>[][int] = dagger.internal.Linker.requestBinding(java.lang.String[][int], java.lang.reflect.Field[][int], java.lang.ClassLoader);\n} "},"status":-2},{"failures":[],"tindex":80,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"dagger.internal.Keys:77","type":"CtIfImpl","sourcecode":"if (java.lang.annotation.Annotation != null) {\n    java.lang.StringBuilder.append(java.lang.annotation.Annotation).append(\"/\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:73","type":"CtIfImpl","sourcecode":"if ((dagger.internal.Binding<?>[][int]) == null) {\n    dagger.internal.Binding<?>[][int] = dagger.internal.Linker.requestBinding(java.lang.String[][int], java.lang.reflect.Field[][int], java.lang.ClassLoader);\n} "},"status":-2},{"failures":[],"tindex":81,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:73","type":"CtIfImpl","sourcecode":"if ((dagger.internal.Binding<?>[][int]) == null) {\n    dagger.internal.Binding<?>[][int] = dagger.internal.Linker.requestBinding(java.lang.String[][int], java.lang.reflect.Field[][int], java.lang.ClassLoader);\n} "},"status":0},{"failures":[],"tindex":82,"variableMapping":{"cursor":"length","fence":"length"},"series":0,"name":"replace","transplant":{"position":"dagger.internal.ArrayQueue:378","type":"CtIfImpl","sourcecode":"if ((int) == (int))\n    throw new java.util.NoSuchElementException();\n"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:158","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    if (int != 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true);\n}"},"status":-2},{"failures":[],"tindex":83,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"dagger.internal.ArrayQueue:249","type":"CtIfImpl","sourcecode":"if (E == null)\n    throw new java.util.NoSuchElementException();\n"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:158","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    if (int != 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true);\n}"},"status":0},{"failures":[],"tindex":84,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"dagger.internal.ArrayQueue:111","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int >>>= 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:158","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    if (int != 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true);\n}"},"status":-2},{"failures":[],"tindex":85,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"dagger.internal.ProblemDetector:98","type":"CtReturnImpl","sourcecode":"return java.util.ArrayList<T>.iterator()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:158","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    if (int != 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true);\n}"},"status":-2},{"failures":[],"tindex":86,"variableMapping":{"result":"result","this":"this","i":"length","arguments":"arguments"},"series":0,"name":"add","transplant":{"position":"dagger.internal.Keys:162","type":"CtInvocationImpl","sourcecode":"dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:158","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    if (int != 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true);\n}"},"status":-2},{"failures":[],"tindex":87,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"dagger.internal.Keys:160","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\", \")"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:158","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    if (int != 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true);\n}"},"status":0},{"failures":[],"tindex":88,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"dagger.internal.ArrayQueue:111","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int >>>= 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:158","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    if (int != 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true);\n}"},"status":-2},{"failures":[],"tindex":89,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"dagger.internal.ProblemDetector:42","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.List<dagger.internal.Binding>.size()) ; int++) {\n    java.lang.StringBuilder.append(\"\\n    \").append((int + 1)).append(\". \").append(java.util.List<dagger.internal.Binding>.get(int).java.lang.Object);\n}"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:158","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    if (int != 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true);\n}"},"status":-2},{"failures":[],"tindex":90,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:158","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    if (int != 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true);\n}"},"status":0},{"failureDictionary":{}},{"memory":2012,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":2,"vendor":"AMD","model":"Opteron","mhz":2390},{"core":2,"vendor":"AMD","model":"Opteron","mhz":2390}],"os.version":"3.2.0-4-amd64"}]
