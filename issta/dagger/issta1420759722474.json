[{"failures":[],"tindex":1,"variableMapping":{"result":"result","provideKey":"provideKey","setBinding":"parent","contributors":"contributors"},"series":0,"name":"replace","transplant":{"position":"dagger.internal.SetBinding:106","type":"CtForImpl","sourcecode":"for (int int = 0, int int = dagger.internal.SetBinding<T>.java.util.List<dagger.internal.Binding<?>>.size() ; int < int ; int++) {\n    dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.SetBinding<T>.java.util.List<dagger.internal.Binding<?>>.get(int);\n    java.lang.Object java.lang.Object = dagger.internal.Binding<?>.get();\n    if (dagger.internal.Binding<?>.java.lang.String.equals(java.lang.String)) {\n        java.util.List<T>.addAll(((java.util.Set<T>)(java.lang.Object)));\n    } else {\n        java.util.List<T>.add(((T)(java.lang.Object)));\n    }\n}"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.SetBinding:105","type":"CtForImpl","sourcecode":"for (dagger.internal.SetBinding<T> dagger.internal.SetBinding<T> = this ; dagger.internal.SetBinding<T> != null ; dagger.internal.SetBinding<T> = dagger.internal.SetBinding<T>.dagger.internal.SetBinding<T>) {\n    for (int int = 0, int int = dagger.internal.SetBinding<T>.java.util.List<dagger.internal.Binding<?>>.size() ; int < int ; int++) {\n        dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.SetBinding<T>.java.util.List<dagger.internal.Binding<?>>.get(int);\n        java.lang.Object java.lang.Object = dagger.internal.Binding<?>.get();\n        if (dagger.internal.Binding<?>.java.lang.String.equals(java.lang.String)) {\n            java.util.List<T>.addAll(((java.util.Set<T>)(java.lang.Object)));\n        } else {\n            java.util.List<T>.add(((T)(java.lang.Object)));\n        }\n    }\n}"},"status":0},{"failures":[],"tindex":2,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"dagger.internal.Keys:157","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\")"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.SetBinding:105","type":"CtForImpl","sourcecode":"for (dagger.internal.SetBinding<T> dagger.internal.SetBinding<T> = this ; dagger.internal.SetBinding<T> != null ; dagger.internal.SetBinding<T> = dagger.internal.SetBinding<T>.dagger.internal.SetBinding<T>) {\n    for (int int = 0, int int = dagger.internal.SetBinding<T>.java.util.List<dagger.internal.Binding<?>>.size() ; int < int ; int++) {\n        dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.SetBinding<T>.java.util.List<dagger.internal.Binding<?>>.get(int);\n        java.lang.Object java.lang.Object = dagger.internal.Binding<?>.get();\n        if (dagger.internal.Binding<?>.java.lang.String.equals(java.lang.String)) {\n            java.util.List<T>.addAll(((java.util.Set<T>)(java.lang.Object)));\n        } else {\n            java.util.List<T>.add(((T)(java.lang.Object)));\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":3,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"dagger.internal.SetBinding:106","type":"CtForImpl","sourcecode":"for (int int = 0, int int = dagger.internal.SetBinding<T>.java.util.List<dagger.internal.Binding<?>>.size() ; int < int ; int++) {\n    dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.SetBinding<T>.java.util.List<dagger.internal.Binding<?>>.get(int);\n    java.lang.Object java.lang.Object = dagger.internal.Binding<?>.get();\n    if (dagger.internal.Binding<?>.java.lang.String.equals(java.lang.String)) {\n        java.util.List<T>.addAll(((java.util.Set<T>)(java.lang.Object)));\n    } else {\n        java.util.List<T>.add(((T)(java.lang.Object)));\n    }\n}"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.SetBinding:105","type":"CtForImpl","sourcecode":"for (dagger.internal.SetBinding<T> dagger.internal.SetBinding<T> = this ; dagger.internal.SetBinding<T> != null ; dagger.internal.SetBinding<T> = dagger.internal.SetBinding<T>.dagger.internal.SetBinding<T>) {\n    for (int int = 0, int int = dagger.internal.SetBinding<T>.java.util.List<dagger.internal.Binding<?>>.size() ; int < int ; int++) {\n        dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.SetBinding<T>.java.util.List<dagger.internal.Binding<?>>.get(int);\n        java.lang.Object java.lang.Object = dagger.internal.Binding<?>.get();\n        if (dagger.internal.Binding<?>.java.lang.String.equals(java.lang.String)) {\n            java.util.List<T>.addAll(((java.util.Set<T>)(java.lang.Object)));\n        } else {\n            java.util.List<T>.add(((T)(java.lang.Object)));\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":4,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"dagger.internal.SetBinding:97","type":"CtOperatorAssignmentImpl","sourcecode":"int += dagger.internal.SetBinding<T>.java.util.List<dagger.internal.Binding<?>>.size()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.SetBinding:105","type":"CtForImpl","sourcecode":"for (dagger.internal.SetBinding<T> dagger.internal.SetBinding<T> = this ; dagger.internal.SetBinding<T> != null ; dagger.internal.SetBinding<T> = dagger.internal.SetBinding<T>.dagger.internal.SetBinding<T>) {\n    for (int int = 0, int int = dagger.internal.SetBinding<T>.java.util.List<dagger.internal.Binding<?>>.size() ; int < int ; int++) {\n        dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.SetBinding<T>.java.util.List<dagger.internal.Binding<?>>.get(int);\n        java.lang.Object java.lang.Object = dagger.internal.Binding<?>.get();\n        if (dagger.internal.Binding<?>.java.lang.String.equals(java.lang.String)) {\n            java.util.List<T>.addAll(((java.util.Set<T>)(java.lang.Object)));\n        } else {\n            java.util.List<T>.add(((T)(java.lang.Object)));\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":5,"variableMapping":{"result":"result","provideKey":"provideKey","setBinding":"parent","contributors":"contributors"},"series":0,"name":"add","transplant":{"position":"dagger.internal.SetBinding:106","type":"CtForImpl","sourcecode":"for (int int = 0, int int = dagger.internal.SetBinding<T>.java.util.List<dagger.internal.Binding<?>>.size() ; int < int ; int++) {\n    dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.SetBinding<T>.java.util.List<dagger.internal.Binding<?>>.get(int);\n    java.lang.Object java.lang.Object = dagger.internal.Binding<?>.get();\n    if (dagger.internal.Binding<?>.java.lang.String.equals(java.lang.String)) {\n        java.util.List<T>.addAll(((java.util.Set<T>)(java.lang.Object)));\n    } else {\n        java.util.List<T>.add(((T)(java.lang.Object)));\n    }\n}"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.SetBinding:105","type":"CtForImpl","sourcecode":"for (dagger.internal.SetBinding<T> dagger.internal.SetBinding<T> = this ; dagger.internal.SetBinding<T> != null ; dagger.internal.SetBinding<T> = dagger.internal.SetBinding<T>.dagger.internal.SetBinding<T>) {\n    for (int int = 0, int int = dagger.internal.SetBinding<T>.java.util.List<dagger.internal.Binding<?>>.size() ; int < int ; int++) {\n        dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.SetBinding<T>.java.util.List<dagger.internal.Binding<?>>.get(int);\n        java.lang.Object java.lang.Object = dagger.internal.Binding<?>.get();\n        if (dagger.internal.Binding<?>.java.lang.String.equals(java.lang.String)) {\n            java.util.List<T>.addAll(((java.util.Set<T>)(java.lang.Object)));\n        } else {\n            java.util.List<T>.add(((T)(java.lang.Object)));\n        }\n    }\n}"},"status":0},{"failures":[],"tindex":6,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"dagger.internal.Keys:144","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"[]\")"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.SetBinding:105","type":"CtForImpl","sourcecode":"for (dagger.internal.SetBinding<T> dagger.internal.SetBinding<T> = this ; dagger.internal.SetBinding<T> != null ; dagger.internal.SetBinding<T> = dagger.internal.SetBinding<T>.dagger.internal.SetBinding<T>) {\n    for (int int = 0, int int = dagger.internal.SetBinding<T>.java.util.List<dagger.internal.Binding<?>>.size() ; int < int ; int++) {\n        dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.SetBinding<T>.java.util.List<dagger.internal.Binding<?>>.get(int);\n        java.lang.Object java.lang.Object = dagger.internal.Binding<?>.get();\n        if (dagger.internal.Binding<?>.java.lang.String.equals(java.lang.String)) {\n            java.util.List<T>.addAll(((java.util.Set<T>)(java.lang.Object)));\n        } else {\n            java.util.List<T>.add(((T)(java.lang.Object)));\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":7,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"dagger.internal.SetBinding:106","type":"CtForImpl","sourcecode":"for (int int = 0, int int = dagger.internal.SetBinding<T>.java.util.List<dagger.internal.Binding<?>>.size() ; int < int ; int++) {\n    dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.SetBinding<T>.java.util.List<dagger.internal.Binding<?>>.get(int);\n    java.lang.Object java.lang.Object = dagger.internal.Binding<?>.get();\n    if (dagger.internal.Binding<?>.java.lang.String.equals(java.lang.String)) {\n        java.util.List<T>.addAll(((java.util.Set<T>)(java.lang.Object)));\n    } else {\n        java.util.List<T>.add(((T)(java.lang.Object)));\n    }\n}"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.SetBinding:105","type":"CtForImpl","sourcecode":"for (dagger.internal.SetBinding<T> dagger.internal.SetBinding<T> = this ; dagger.internal.SetBinding<T> != null ; dagger.internal.SetBinding<T> = dagger.internal.SetBinding<T>.dagger.internal.SetBinding<T>) {\n    for (int int = 0, int int = dagger.internal.SetBinding<T>.java.util.List<dagger.internal.Binding<?>>.size() ; int < int ; int++) {\n        dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.SetBinding<T>.java.util.List<dagger.internal.Binding<?>>.get(int);\n        java.lang.Object java.lang.Object = dagger.internal.Binding<?>.get();\n        if (dagger.internal.Binding<?>.java.lang.String.equals(java.lang.String)) {\n            java.util.List<T>.addAll(((java.util.Set<T>)(java.lang.Object)));\n        } else {\n            java.util.List<T>.add(((T)(java.lang.Object)));\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":8,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"dagger.internal.SetBinding:116","type":"CtReturnImpl","sourcecode":"return java.util.Collections.java.util.Collections.unmodifiableSet(new java.util.LinkedHashSet<T>(java.util.List<T>))"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.SetBinding:105","type":"CtForImpl","sourcecode":"for (dagger.internal.SetBinding<T> dagger.internal.SetBinding<T> = this ; dagger.internal.SetBinding<T> != null ; dagger.internal.SetBinding<T> = dagger.internal.SetBinding<T>.dagger.internal.SetBinding<T>) {\n    for (int int = 0, int int = dagger.internal.SetBinding<T>.java.util.List<dagger.internal.Binding<?>>.size() ; int < int ; int++) {\n        dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.SetBinding<T>.java.util.List<dagger.internal.Binding<?>>.get(int);\n        java.lang.Object java.lang.Object = dagger.internal.Binding<?>.get();\n        if (dagger.internal.Binding<?>.java.lang.String.equals(java.lang.String)) {\n            java.util.List<T>.addAll(((java.util.Set<T>)(java.lang.Object)));\n        } else {\n            java.util.List<T>.add(((T)(java.lang.Object)));\n        }\n    }\n}"},"status":0},{"failures":[],"tindex":9,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"dagger.internal.SetBinding:105","type":"CtForImpl","sourcecode":"for (dagger.internal.SetBinding<T> dagger.internal.SetBinding<T> = this ; dagger.internal.SetBinding<T> != null ; dagger.internal.SetBinding<T> = dagger.internal.SetBinding<T>.dagger.internal.SetBinding<T>) {\n    for (int int = 0, int int = dagger.internal.SetBinding<T>.java.util.List<dagger.internal.Binding<?>>.size() ; int < int ; int++) {\n        dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.SetBinding<T>.java.util.List<dagger.internal.Binding<?>>.get(int);\n        java.lang.Object java.lang.Object = dagger.internal.Binding<?>.get();\n        if (dagger.internal.Binding<?>.java.lang.String.equals(java.lang.String)) {\n            java.util.List<T>.addAll(((java.util.Set<T>)(java.lang.Object)));\n        } else {\n            java.util.List<T>.add(((T)(java.lang.Object)));\n        }\n    }\n}"},"status":0},{"failures":[],"tindex":10,"variableMapping":{"t":"length","h":"length","front":"length","mask":"length"},"series":0,"name":"replace","transplant":{"position":"dagger.internal.ArrayQueue:288","type":"CtIfImpl","sourcecode":"if (int >= ((int - int) & int))\n    throw new java.util.ConcurrentModificationException();\n"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:140","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.Class) {\n    java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type));\n    if (java.lang.Class<?>.isArray()) {\n        dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.Class<?>.getComponentType(), java.lang.StringBuilder, false);\n        java.lang.StringBuilder.append(\"[]\");\n    } else if (java.lang.Class<?>.isPrimitive()) {\n        if (boolean) {\n            throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + (java.lang.Class<?>.getName())));\n        } \n        java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n    } else {\n        java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n    }\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.ParameterizedType.getRawType(), java.lang.StringBuilder, true);\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    java.lang.StringBuilder.append(\"<\");\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        if (int != 0) {\n            java.lang.StringBuilder.append(\", \");\n        } \n        dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true);\n    }\n    java.lang.StringBuilder.append(\">\");\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.StringBuilder, false);\n    java.lang.StringBuilder.append(\"[]\");\n} else {\n    throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type));\n}"},"status":-2},{"failures":[],"tindex":11,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"dagger.internal.ArrayQueue:185","type":"CtInvocationImpl","sourcecode":"dagger.internal.ArrayQueue<E>.doubleCapacity()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:140","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.Class) {\n    java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type));\n    if (java.lang.Class<?>.isArray()) {\n        dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.Class<?>.getComponentType(), java.lang.StringBuilder, false);\n        java.lang.StringBuilder.append(\"[]\");\n    } else if (java.lang.Class<?>.isPrimitive()) {\n        if (boolean) {\n            throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + (java.lang.Class<?>.getName())));\n        } \n        java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n    } else {\n        java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n    }\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.ParameterizedType.getRawType(), java.lang.StringBuilder, true);\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    java.lang.StringBuilder.append(\"<\");\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        if (int != 0) {\n            java.lang.StringBuilder.append(\", \");\n        } \n        dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true);\n    }\n    java.lang.StringBuilder.append(\">\");\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.StringBuilder, false);\n    java.lang.StringBuilder.append(\"[]\");\n} else {\n    throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type));\n}"},"status":-2},{"failures":[],"tindex":12,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"dagger.internal.ArrayQueue:127","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Sorry, queue too big\");\n"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:140","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.Class) {\n    java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type));\n    if (java.lang.Class<?>.isArray()) {\n        dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.Class<?>.getComponentType(), java.lang.StringBuilder, false);\n        java.lang.StringBuilder.append(\"[]\");\n    } else if (java.lang.Class<?>.isPrimitive()) {\n        if (boolean) {\n            throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + (java.lang.Class<?>.getName())));\n        } \n        java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n    } else {\n        java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n    }\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.ParameterizedType.getRawType(), java.lang.StringBuilder, true);\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    java.lang.StringBuilder.append(\"<\");\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        if (int != 0) {\n            java.lang.StringBuilder.append(\", \");\n        } \n        dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true);\n    }\n    java.lang.StringBuilder.append(\">\");\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.StringBuilder, false);\n    java.lang.StringBuilder.append(\"[]\");\n} else {\n    throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type));\n}"},"status":-2},{"failures":[],"tindex":13,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"dagger.internal.ArrayQueue:234","type":"CtAssignmentImpl","sourcecode":"int = (int + 1) & ((java.lang.Object[].int) - 1)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:140","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.Class) {\n    java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type));\n    if (java.lang.Class<?>.isArray()) {\n        dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.Class<?>.getComponentType(), java.lang.StringBuilder, false);\n        java.lang.StringBuilder.append(\"[]\");\n    } else if (java.lang.Class<?>.isPrimitive()) {\n        if (boolean) {\n            throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + (java.lang.Class<?>.getName())));\n        } \n        java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n    } else {\n        java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n    }\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.ParameterizedType.getRawType(), java.lang.StringBuilder, true);\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    java.lang.StringBuilder.append(\"<\");\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        if (int != 0) {\n            java.lang.StringBuilder.append(\", \");\n        } \n        dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true);\n    }\n    java.lang.StringBuilder.append(\">\");\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.StringBuilder, false);\n    java.lang.StringBuilder.append(\"[]\");\n} else {\n    throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type));\n}"},"status":-2},{"failures":[],"tindex":14,"variableMapping":{"result":"result","this":"this","genericArrayType":"type"},"series":0,"name":"add","transplant":{"position":"dagger.internal.Keys:167","type":"CtInvocationImpl","sourcecode":"dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.StringBuilder, false)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:140","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.Class) {\n    java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type));\n    if (java.lang.Class<?>.isArray()) {\n        dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.Class<?>.getComponentType(), java.lang.StringBuilder, false);\n        java.lang.StringBuilder.append(\"[]\");\n    } else if (java.lang.Class<?>.isPrimitive()) {\n        if (boolean) {\n            throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + (java.lang.Class<?>.getName())));\n        } \n        java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n    } else {\n        java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n    }\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.ParameterizedType.getRawType(), java.lang.StringBuilder, true);\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    java.lang.StringBuilder.append(\"<\");\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        if (int != 0) {\n            java.lang.StringBuilder.append(\", \");\n        } \n        dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true);\n    }\n    java.lang.StringBuilder.append(\">\");\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.StringBuilder, false);\n    java.lang.StringBuilder.append(\"[]\");\n} else {\n    throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type));\n}"},"status":-2},{"failures":[],"tindex":15,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"dagger.ObjectGraph:203","type":"CtInvocationImpl","sourcecode":"dagger.ObjectGraph.DaggerObjectGraph.linkEverything()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:140","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.Class) {\n    java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type));\n    if (java.lang.Class<?>.isArray()) {\n        dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.Class<?>.getComponentType(), java.lang.StringBuilder, false);\n        java.lang.StringBuilder.append(\"[]\");\n    } else if (java.lang.Class<?>.isPrimitive()) {\n        if (boolean) {\n            throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + (java.lang.Class<?>.getName())));\n        } \n        java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n    } else {\n        java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n    }\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.ParameterizedType.getRawType(), java.lang.StringBuilder, true);\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    java.lang.StringBuilder.append(\"<\");\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        if (int != 0) {\n            java.lang.StringBuilder.append(\", \");\n        } \n        dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true);\n    }\n    java.lang.StringBuilder.append(\">\");\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.StringBuilder, false);\n    java.lang.StringBuilder.append(\"[]\");\n} else {\n    throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type));\n}"},"status":-2},{"failures":[],"tindex":16,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"dagger.internal.Keys:80","type":"CtInvocationImpl","sourcecode":"dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type, java.lang.StringBuilder, true)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:140","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.Class) {\n    java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type));\n    if (java.lang.Class<?>.isArray()) {\n        dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.Class<?>.getComponentType(), java.lang.StringBuilder, false);\n        java.lang.StringBuilder.append(\"[]\");\n    } else if (java.lang.Class<?>.isPrimitive()) {\n        if (boolean) {\n            throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + (java.lang.Class<?>.getName())));\n        } \n        java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n    } else {\n        java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n    }\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.ParameterizedType.getRawType(), java.lang.StringBuilder, true);\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    java.lang.StringBuilder.append(\"<\");\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        if (int != 0) {\n            java.lang.StringBuilder.append(\", \");\n        } \n        dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true);\n    }\n    java.lang.StringBuilder.append(\">\");\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.StringBuilder, false);\n    java.lang.StringBuilder.append(\"[]\");\n} else {\n    throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type));\n}"},"status":0},{"failures":[],"tindex":17,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"dagger.internal.Loader:35","type":"CtLocalVariableImpl","sourcecode":"java.lang.ClassNotFoundException java.lang.ClassNotFoundException"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:140","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.Class) {\n    java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type));\n    if (java.lang.Class<?>.isArray()) {\n        dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.Class<?>.getComponentType(), java.lang.StringBuilder, false);\n        java.lang.StringBuilder.append(\"[]\");\n    } else if (java.lang.Class<?>.isPrimitive()) {\n        if (boolean) {\n            throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + (java.lang.Class<?>.getName())));\n        } \n        java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n    } else {\n        java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n    }\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.ParameterizedType.getRawType(), java.lang.StringBuilder, true);\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    java.lang.StringBuilder.append(\"<\");\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        if (int != 0) {\n            java.lang.StringBuilder.append(\", \");\n        } \n        dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true);\n    }\n    java.lang.StringBuilder.append(\">\");\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.StringBuilder, false);\n    java.lang.StringBuilder.append(\"[]\");\n} else {\n    throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type));\n}"},"status":0},{"failures":[],"tindex":18,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:140","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.Class) {\n    java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type));\n    if (java.lang.Class<?>.isArray()) {\n        dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.Class<?>.getComponentType(), java.lang.StringBuilder, false);\n        java.lang.StringBuilder.append(\"[]\");\n    } else if (java.lang.Class<?>.isPrimitive()) {\n        if (boolean) {\n            throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + (java.lang.Class<?>.getName())));\n        } \n        java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n    } else {\n        java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n    }\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.ParameterizedType.getRawType(), java.lang.StringBuilder, true);\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    java.lang.StringBuilder.append(\"<\");\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        if (int != 0) {\n            java.lang.StringBuilder.append(\", \");\n        } \n        dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true);\n    }\n    java.lang.StringBuilder.append(\">\");\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.StringBuilder, false);\n    java.lang.StringBuilder.append(\"[]\");\n} else {\n    throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type));\n}"},"status":0},{"failures":[],"tindex":19,"variableMapping":{"result":"result","this":"this","i":"length","arguments":"arguments"},"series":0,"name":"replace","transplant":{"position":"dagger.internal.Keys:162","type":"CtInvocationImpl","sourcecode":"dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:158","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    if (int != 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true);\n}"},"status":-2},{"failures":[],"tindex":20,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"dagger.internal.Linker:269","type":"CtInvocationImpl","sourcecode":"dagger.internal.Linker.assertLockHeld()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:158","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    if (int != 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true);\n}"},"status":-2},{"failures":[],"tindex":21,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"dagger.internal.ArrayQueue:102","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    int = int;\n    int |= int >>> 1;\n    int |= int >>> 2;\n    int |= int >>> 4;\n    int |= int >>> 8;\n    int |= int >>> 16;\n    int++;\n    if (int < 0)\n        int >>>= 1;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:158","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    if (int != 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true);\n}"},"status":-2},{"failures":[],"tindex":22,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"dagger.internal.ArrayQueue:215","type":"CtReturnImpl","sourcecode":"return E"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:158","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    if (int != 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true);\n}"},"status":-2},{"failures":[],"tindex":23,"variableMapping":{"result":"result","this":"this","i":"length","arguments":"arguments"},"series":0,"name":"add","transplant":{"position":"dagger.internal.Keys:162","type":"CtInvocationImpl","sourcecode":"dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:158","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    if (int != 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true);\n}"},"status":-2},{"failures":[],"tindex":24,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"dagger.ObjectGraph:242","type":"CtInvocationImpl","sourcecode":"dagger.ObjectGraph.DaggerObjectGraph.linkStaticInjections()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:158","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    if (int != 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true);\n}"},"status":-2},{"failures":[],"tindex":25,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"dagger.internal.ArrayQueue:111","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int >>>= 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:158","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    if (int != 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true);\n}"},"status":-2},{"failures":[],"tindex":26,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"dagger.internal.Linker:224","type":"CtLocalVariableImpl","sourcecode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.Loader.getAtInjectBinding(java.lang.String, java.lang.String, java.lang.ClassLoader, boolean)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:158","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    if (int != 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true);\n}"},"status":-2},{"failures":[],"tindex":27,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:158","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n    if (int != 0) {\n        java.lang.StringBuilder.append(\", \");\n    } \n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true);\n}"},"status":0},{"failures":[],"tindex":28,"variableMapping":{"newCapacity":"java.lang.reflect.Modifier.PRIVATE"},"series":0,"name":"replace","transplant":{"position":"dagger.internal.ArrayQueue:127","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Sorry, queue too big\");\n"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:191","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Constructor<T> != null) {\n    if (((java.lang.reflect.Constructor<T>.getModifiers()) & (java.lang.reflect.Modifier.int)) != 0) {\n        throw new java.lang.IllegalStateException((\"Can\\'t inject private constructor: \" + java.lang.reflect.Constructor<T>));\n    } \n    java.lang.String = dagger.internal.Keys.dagger.internal.Keys.get(java.lang.Class<T>);\n    java.lang.reflect.Constructor<T>.setAccessible(true);\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.Constructor<T>.getGenericParameterTypes();\n    int = java.lang.reflect.Type[].int;\n    if (int != 0) {\n        java.lang.annotation.Annotation[][] java.lang.annotation.Annotation[][] = java.lang.reflect.Constructor<T>.getParameterAnnotations();\n        for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n            java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Type[][int], java.lang.annotation.Annotation[][][int], java.lang.reflect.Constructor<T>));\n        }\n    } \n} else {\n    java.lang.String = null;\n    int = 0;\n    if (boolean) {\n        throw new java.lang.IllegalArgumentException((\"No injectable constructor on @Singleton \" + (java.lang.Class<T>.getName())));\n    } \n}"},"status":-2},{"failures":[],"tindex":29,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"dagger.internal.ArrayQueue:185","type":"CtInvocationImpl","sourcecode":"dagger.internal.ArrayQueue<E>.doubleCapacity()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:191","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Constructor<T> != null) {\n    if (((java.lang.reflect.Constructor<T>.getModifiers()) & (java.lang.reflect.Modifier.int)) != 0) {\n        throw new java.lang.IllegalStateException((\"Can\\'t inject private constructor: \" + java.lang.reflect.Constructor<T>));\n    } \n    java.lang.String = dagger.internal.Keys.dagger.internal.Keys.get(java.lang.Class<T>);\n    java.lang.reflect.Constructor<T>.setAccessible(true);\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.Constructor<T>.getGenericParameterTypes();\n    int = java.lang.reflect.Type[].int;\n    if (int != 0) {\n        java.lang.annotation.Annotation[][] java.lang.annotation.Annotation[][] = java.lang.reflect.Constructor<T>.getParameterAnnotations();\n        for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n            java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Type[][int], java.lang.annotation.Annotation[][][int], java.lang.reflect.Constructor<T>));\n        }\n    } \n} else {\n    java.lang.String = null;\n    int = 0;\n    if (boolean) {\n        throw new java.lang.IllegalArgumentException((\"No injectable constructor on @Singleton \" + (java.lang.Class<T>.getName())));\n    } \n}"},"status":-2},{"failures":[],"tindex":30,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"dagger.internal.ArrayQueue:111","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int >>>= 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:191","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Constructor<T> != null) {\n    if (((java.lang.reflect.Constructor<T>.getModifiers()) & (java.lang.reflect.Modifier.int)) != 0) {\n        throw new java.lang.IllegalStateException((\"Can\\'t inject private constructor: \" + java.lang.reflect.Constructor<T>));\n    } \n    java.lang.String = dagger.internal.Keys.dagger.internal.Keys.get(java.lang.Class<T>);\n    java.lang.reflect.Constructor<T>.setAccessible(true);\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.Constructor<T>.getGenericParameterTypes();\n    int = java.lang.reflect.Type[].int;\n    if (int != 0) {\n        java.lang.annotation.Annotation[][] java.lang.annotation.Annotation[][] = java.lang.reflect.Constructor<T>.getParameterAnnotations();\n        for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n            java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Type[][int], java.lang.annotation.Annotation[][][int], java.lang.reflect.Constructor<T>));\n        }\n    } \n} else {\n    java.lang.String = null;\n    int = 0;\n    if (boolean) {\n        throw new java.lang.IllegalArgumentException((\"No injectable constructor on @Singleton \" + (java.lang.Class<T>.getName())));\n    } \n}"},"status":-2},{"failures":[],"tindex":31,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"dagger.internal.loaders.ReflectiveStaticInjection:46","type":"CtAssignmentImpl","sourcecode":"dagger.internal.Binding<?>[][int] = dagger.internal.Linker.requestBinding(java.lang.String, java.lang.reflect.Field, java.lang.ClassLoader)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:191","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Constructor<T> != null) {\n    if (((java.lang.reflect.Constructor<T>.getModifiers()) & (java.lang.reflect.Modifier.int)) != 0) {\n        throw new java.lang.IllegalStateException((\"Can\\'t inject private constructor: \" + java.lang.reflect.Constructor<T>));\n    } \n    java.lang.String = dagger.internal.Keys.dagger.internal.Keys.get(java.lang.Class<T>);\n    java.lang.reflect.Constructor<T>.setAccessible(true);\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.Constructor<T>.getGenericParameterTypes();\n    int = java.lang.reflect.Type[].int;\n    if (int != 0) {\n        java.lang.annotation.Annotation[][] java.lang.annotation.Annotation[][] = java.lang.reflect.Constructor<T>.getParameterAnnotations();\n        for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n            java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Type[][int], java.lang.annotation.Annotation[][][int], java.lang.reflect.Constructor<T>));\n        }\n    } \n} else {\n    java.lang.String = null;\n    int = 0;\n    if (boolean) {\n        throw new java.lang.IllegalArgumentException((\"No injectable constructor on @Singleton \" + (java.lang.Class<T>.getName())));\n    } \n}"},"status":-2},{"failures":[],"tindex":32,"variableMapping":{"initialCapacity":"length"},"series":0,"name":"add","transplant":{"position":"dagger.internal.ArrayQueue:111","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int >>>= 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:191","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Constructor<T> != null) {\n    if (((java.lang.reflect.Constructor<T>.getModifiers()) & (java.lang.reflect.Modifier.int)) != 0) {\n        throw new java.lang.IllegalStateException((\"Can\\'t inject private constructor: \" + java.lang.reflect.Constructor<T>));\n    } \n    java.lang.String = dagger.internal.Keys.dagger.internal.Keys.get(java.lang.Class<T>);\n    java.lang.reflect.Constructor<T>.setAccessible(true);\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.Constructor<T>.getGenericParameterTypes();\n    int = java.lang.reflect.Type[].int;\n    if (int != 0) {\n        java.lang.annotation.Annotation[][] java.lang.annotation.Annotation[][] = java.lang.reflect.Constructor<T>.getParameterAnnotations();\n        for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n            java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Type[][int], java.lang.annotation.Annotation[][][int], java.lang.reflect.Constructor<T>));\n        }\n    } \n} else {\n    java.lang.String = null;\n    int = 0;\n    if (boolean) {\n        throw new java.lang.IllegalArgumentException((\"No injectable constructor on @Singleton \" + (java.lang.Class<T>.getName())));\n    } \n}"},"status":-2},{"failures":[],"tindex":33,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:207","type":"CtAssignmentImpl","sourcecode":"java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:191","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Constructor<T> != null) {\n    if (((java.lang.reflect.Constructor<T>.getModifiers()) & (java.lang.reflect.Modifier.int)) != 0) {\n        throw new java.lang.IllegalStateException((\"Can\\'t inject private constructor: \" + java.lang.reflect.Constructor<T>));\n    } \n    java.lang.String = dagger.internal.Keys.dagger.internal.Keys.get(java.lang.Class<T>);\n    java.lang.reflect.Constructor<T>.setAccessible(true);\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.Constructor<T>.getGenericParameterTypes();\n    int = java.lang.reflect.Type[].int;\n    if (int != 0) {\n        java.lang.annotation.Annotation[][] java.lang.annotation.Annotation[][] = java.lang.reflect.Constructor<T>.getParameterAnnotations();\n        for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n            java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Type[][int], java.lang.annotation.Annotation[][][int], java.lang.reflect.Constructor<T>));\n        }\n    } \n} else {\n    java.lang.String = null;\n    int = 0;\n    if (boolean) {\n        throw new java.lang.IllegalArgumentException((\"No injectable constructor on @Singleton \" + (java.lang.Class<T>.getName())));\n    } \n}"},"status":0},{"failures":[],"tindex":34,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"dagger.internal.ArrayQueue:102","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    int = int;\n    int |= int >>> 1;\n    int |= int >>> 2;\n    int |= int >>> 4;\n    int |= int >>> 8;\n    int |= int >>> 16;\n    int++;\n    if (int < 0)\n        int >>>= 1;\n    \n} "},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:191","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Constructor<T> != null) {\n    if (((java.lang.reflect.Constructor<T>.getModifiers()) & (java.lang.reflect.Modifier.int)) != 0) {\n        throw new java.lang.IllegalStateException((\"Can\\'t inject private constructor: \" + java.lang.reflect.Constructor<T>));\n    } \n    java.lang.String = dagger.internal.Keys.dagger.internal.Keys.get(java.lang.Class<T>);\n    java.lang.reflect.Constructor<T>.setAccessible(true);\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.Constructor<T>.getGenericParameterTypes();\n    int = java.lang.reflect.Type[].int;\n    if (int != 0) {\n        java.lang.annotation.Annotation[][] java.lang.annotation.Annotation[][] = java.lang.reflect.Constructor<T>.getParameterAnnotations();\n        for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n            java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Type[][int], java.lang.annotation.Annotation[][][int], java.lang.reflect.Constructor<T>));\n        }\n    } \n} else {\n    java.lang.String = null;\n    int = 0;\n    if (boolean) {\n        throw new java.lang.IllegalArgumentException((\"No injectable constructor on @Singleton \" + (java.lang.Class<T>.getName())));\n    } \n}"},"status":-2},{"failures":[],"tindex":35,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"dagger.internal.Linker:364","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = dagger.internal.Binding<T>.get()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:191","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Constructor<T> != null) {\n    if (((java.lang.reflect.Constructor<T>.getModifiers()) & (java.lang.reflect.Modifier.int)) != 0) {\n        throw new java.lang.IllegalStateException((\"Can\\'t inject private constructor: \" + java.lang.reflect.Constructor<T>));\n    } \n    java.lang.String = dagger.internal.Keys.dagger.internal.Keys.get(java.lang.Class<T>);\n    java.lang.reflect.Constructor<T>.setAccessible(true);\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.Constructor<T>.getGenericParameterTypes();\n    int = java.lang.reflect.Type[].int;\n    if (int != 0) {\n        java.lang.annotation.Annotation[][] java.lang.annotation.Annotation[][] = java.lang.reflect.Constructor<T>.getParameterAnnotations();\n        for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n            java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Type[][int], java.lang.annotation.Annotation[][][int], java.lang.reflect.Constructor<T>));\n        }\n    } \n} else {\n    java.lang.String = null;\n    int = 0;\n    if (boolean) {\n        throw new java.lang.IllegalArgumentException((\"No injectable constructor on @Singleton \" + (java.lang.Class<T>.getName())));\n    } \n}"},"status":-2},{"failures":[],"tindex":36,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:191","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Constructor<T> != null) {\n    if (((java.lang.reflect.Constructor<T>.getModifiers()) & (java.lang.reflect.Modifier.int)) != 0) {\n        throw new java.lang.IllegalStateException((\"Can\\'t inject private constructor: \" + java.lang.reflect.Constructor<T>));\n    } \n    java.lang.String = dagger.internal.Keys.dagger.internal.Keys.get(java.lang.Class<T>);\n    java.lang.reflect.Constructor<T>.setAccessible(true);\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.Constructor<T>.getGenericParameterTypes();\n    int = java.lang.reflect.Type[].int;\n    if (int != 0) {\n        java.lang.annotation.Annotation[][] java.lang.annotation.Annotation[][] = java.lang.reflect.Constructor<T>.getParameterAnnotations();\n        for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n            java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Type[][int], java.lang.annotation.Annotation[][][int], java.lang.reflect.Constructor<T>));\n        }\n    } \n} else {\n    java.lang.String = null;\n    int = 0;\n    if (boolean) {\n        throw new java.lang.IllegalArgumentException((\"No injectable constructor on @Singleton \" + (java.lang.Class<T>.getName())));\n    } \n}"},"status":-2},{"failures":[],"tindex":37,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"dagger.internal.ArrayQueue:393","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:170","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type))"},"status":0},{"failures":[],"tindex":38,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:184","type":"CtThrowImpl","sourcecode":"throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has no injectable members. Do you want to add an injectable constructor?\")"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:170","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type))"},"status":-2},{"failures":[],"tindex":39,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"dagger.internal.ArrayQueue:379","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:170","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type))"},"status":0},{"failures":[],"tindex":40,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"dagger.internal.Modules:41","type":"CtInvocationImpl","sourcecode":"java.util.Map<dagger.internal.ModuleAdapter<?>, java.lang.Object>.put(dagger.internal.ModuleAdapter<?>, dagger.internal.ModuleAdapter<?>.newModule())"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:170","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type))"},"status":-2},{"failures":[],"tindex":41,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"dagger.internal.ArrayQueue:384","type":"CtThrowImpl","sourcecode":"throw new java.util.ConcurrentModificationException()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:170","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type))"},"status":-2},{"failures":[],"tindex":42,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"dagger.internal.Memoizer:41","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"key == null\")"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:170","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type))"},"status":-2},{"failures":[],"tindex":43,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"dagger.internal.ArrayQueue:393","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:170","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type))"},"status":-2},{"failures":[],"tindex":44,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"dagger.internal.Loader:69","type":"CtInvocationImpl","sourcecode":"java.lang.ClassLoader.java.lang.ClassLoader.getSystemClassLoader()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:170","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type))"},"status":-2},{"failures":[],"tindex":45,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:170","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type))"},"status":0},{"failures":[],"tindex":46,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"dagger.internal.Linker:271","type":"CtLocalVariableImpl","sourcecode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = null"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.BindingsGroup:38","type":"CtLocalVariableImpl","sourcecode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = java.util.Map<java.lang.String, dagger.internal.Binding<?>>.put(java.lang.String, dagger.internal.Binding<?>)"},"status":-2},{"failures":[],"tindex":47,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"dagger.internal.Keys:76","type":"CtLocalVariableImpl","sourcecode":"java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.BindingsGroup:38","type":"CtLocalVariableImpl","sourcecode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = java.util.Map<java.lang.String, dagger.internal.Binding<?>>.put(java.lang.String, dagger.internal.Binding<?>)"},"status":-2},{"failures":[],"tindex":48,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"dagger.internal.Linker:271","type":"CtLocalVariableImpl","sourcecode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = null"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.BindingsGroup:38","type":"CtLocalVariableImpl","sourcecode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = java.util.Map<java.lang.String, dagger.internal.Binding<?>>.put(java.lang.String, dagger.internal.Binding<?>)"},"status":-2},{"failures":[],"tindex":49,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"dagger.internal.Keys:165","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.StringBuilder, false);\n    java.lang.StringBuilder.append(\"[]\");\n} else {\n    throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type));\n}"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.BindingsGroup:38","type":"CtLocalVariableImpl","sourcecode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = java.util.Map<java.lang.String, dagger.internal.Binding<?>>.put(java.lang.String, dagger.internal.Binding<?>)"},"status":-2},{"failures":[],"tindex":50,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"dagger.internal.Linker:271","type":"CtLocalVariableImpl","sourcecode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = null"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.BindingsGroup:38","type":"CtLocalVariableImpl","sourcecode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = java.util.Map<java.lang.String, dagger.internal.Binding<?>>.put(java.lang.String, dagger.internal.Binding<?>)"},"status":-2},{"failures":[],"tindex":51,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:146","type":"CtLocalVariableImpl","sourcecode":"java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.BindingsGroup:38","type":"CtLocalVariableImpl","sourcecode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = java.util.Map<java.lang.String, dagger.internal.Binding<?>>.put(java.lang.String, dagger.internal.Binding<?>)"},"status":-2},{"failures":[],"tindex":52,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"dagger.internal.Linker:271","type":"CtLocalVariableImpl","sourcecode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = null"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.BindingsGroup:38","type":"CtLocalVariableImpl","sourcecode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = java.util.Map<java.lang.String, dagger.internal.Binding<?>>.put(java.lang.String, dagger.internal.Binding<?>)"},"status":-2},{"failures":[],"tindex":53,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"dagger.internal.Linker:318","type":"CtReturnImpl","sourcecode":"return dagger.internal.Binding<T>"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.BindingsGroup:38","type":"CtLocalVariableImpl","sourcecode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = java.util.Map<java.lang.String, dagger.internal.Binding<?>>.put(java.lang.String, dagger.internal.Binding<?>)"},"status":-2},{"failures":[],"tindex":54,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"dagger.internal.BindingsGroup:38","type":"CtLocalVariableImpl","sourcecode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = java.util.Map<java.lang.String, dagger.internal.Binding<?>>.put(java.lang.String, dagger.internal.Binding<?>)"},"status":-2},{"failures":[],"tindex":55,"variableMapping":{"injectedConstructor":"injectedConstructor"},"series":0,"name":"replace","transplant":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:197","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Constructor<T>.setAccessible(true)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:178","type":"CtIfImpl","sourcecode":"if (!(java.util.List<java.lang.reflect.Field>.isEmpty())) {\n    try {\n        java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor();\n    } catch (java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    }\n} else if (boolean) {\n    throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has no injectable members. Do you want to add an injectable constructor?\");\n} "},"status":0},{"failures":[],"tindex":56,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:180","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:178","type":"CtIfImpl","sourcecode":"if (!(java.util.List<java.lang.reflect.Field>.isEmpty())) {\n    try {\n        java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor();\n    } catch (java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    }\n} else if (boolean) {\n    throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has no injectable members. Do you want to add an injectable constructor?\");\n} "},"status":-2},{"failures":[],"tindex":57,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:93","type":"CtIfImpl","sourcecode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.UnsupportedOperationException();\n} "},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:178","type":"CtIfImpl","sourcecode":"if (!(java.util.List<java.lang.reflect.Field>.isEmpty())) {\n    try {\n        java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor();\n    } catch (java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    }\n} else if (boolean) {\n    throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has no injectable members. Do you want to add an injectable constructor?\");\n} "},"status":-2},{"failures":[],"tindex":58,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"dagger.internal.FailoverLoader:72","type":"CtReturnImpl","sourcecode":"return null"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:178","type":"CtIfImpl","sourcecode":"if (!(java.util.List<java.lang.reflect.Field>.isEmpty())) {\n    try {\n        java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor();\n    } catch (java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    }\n} else if (boolean) {\n    throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has no injectable members. Do you want to add an injectable constructor?\");\n} "},"status":0},{"failures":[],"tindex":59,"variableMapping":{"injectedConstructor":"injectedConstructor","type":"type"},"series":0,"name":"add","transplant":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:172","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has too many injectable constructors\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:178","type":"CtIfImpl","sourcecode":"if (!(java.util.List<java.lang.reflect.Field>.isEmpty())) {\n    try {\n        java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor();\n    } catch (java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    }\n} else if (boolean) {\n    throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has no injectable members. Do you want to add an injectable constructor?\");\n} "},"status":0},{"failures":[],"tindex":60,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:197","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Constructor<T>.setAccessible(true)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:178","type":"CtIfImpl","sourcecode":"if (!(java.util.List<java.lang.reflect.Field>.isEmpty())) {\n    try {\n        java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor();\n    } catch (java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    }\n} else if (boolean) {\n    throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has no injectable members. Do you want to add an injectable constructor?\");\n} "},"status":0},{"failures":[],"tindex":61,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:172","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has too many injectable constructors\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:178","type":"CtIfImpl","sourcecode":"if (!(java.util.List<java.lang.reflect.Field>.isEmpty())) {\n    try {\n        java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor();\n    } catch (java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    }\n} else if (boolean) {\n    throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has no injectable members. Do you want to add an injectable constructor?\");\n} "},"status":0},{"failures":[],"tindex":62,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:141","type":"CtReturnImpl","sourcecode":"return (java.lang.String) != null ? java.lang.String : java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:178","type":"CtIfImpl","sourcecode":"if (!(java.util.List<java.lang.reflect.Field>.isEmpty())) {\n    try {\n        java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor();\n    } catch (java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    }\n} else if (boolean) {\n    throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has no injectable members. Do you want to add an injectable constructor?\");\n} "},"status":-2},{"failures":[],"tindex":63,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:178","type":"CtIfImpl","sourcecode":"if (!(java.util.List<java.lang.reflect.Field>.isEmpty())) {\n    try {\n        java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor();\n    } catch (java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    }\n} else if (boolean) {\n    throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has no injectable members. Do you want to add an injectable constructor?\");\n} "},"status":0},{"failures":[],"tindex":64,"variableMapping":{"requiredBy":"requiredBy","previous":"binding","bindings":"bindings","setBinding":"setBinding","binding":"binding","setKey":"setKey"},"series":0,"name":"replace","transplant":{"position":"dagger.internal.SetBinding:45","type":"CtIfImpl","sourcecode":"if (dagger.internal.Binding<?> != null) {\n    throw new java.lang.IllegalArgumentException((((\"Duplicate:\\n    \" + dagger.internal.Binding<?>) + \"\\n    \") + dagger.internal.Binding<?>));\n} else {\n    dagger.internal.SetBinding<T> = new dagger.internal.SetBinding<T>(java.lang.String , dagger.internal.Binding<?>.java.lang.Object);\n    dagger.internal.SetBinding<T>.setLibrary(dagger.internal.Binding<?>.library());\n    dagger.internal.BindingsGroup.contributeSetBinding(java.lang.String, dagger.internal.SetBinding<T>);\n    return ((dagger.internal.SetBinding<T>)(dagger.internal.BindingsGroup.get(java.lang.String)));\n}"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.SetBinding:41","type":"CtIfImpl","sourcecode":"if (dagger.internal.Binding<?> instanceof dagger.internal.SetBinding) {\n    dagger.internal.SetBinding<T> = ((dagger.internal.SetBinding<T>)(dagger.internal.Binding<?>));\n    dagger.internal.SetBinding<T>.setLibrary(((dagger.internal.SetBinding<T>.library()) && (dagger.internal.Binding<?>.library())));\n    return dagger.internal.SetBinding<T>;\n} else if (dagger.internal.Binding<?> != null) {\n    throw new java.lang.IllegalArgumentException((((\"Duplicate:\\n    \" + dagger.internal.Binding<?>) + \"\\n    \") + dagger.internal.Binding<?>));\n} else {\n    dagger.internal.SetBinding<T> = new dagger.internal.SetBinding<T>(java.lang.String , dagger.internal.Binding<?>.java.lang.Object);\n    dagger.internal.SetBinding<T>.setLibrary(dagger.internal.Binding<?>.library());\n    dagger.internal.BindingsGroup.contributeSetBinding(java.lang.String, dagger.internal.SetBinding<T>);\n    return ((dagger.internal.SetBinding<T>)(dagger.internal.BindingsGroup.get(java.lang.String)));\n}"},"status":-2},{"failures":[],"tindex":65,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"dagger.internal.SetBinding:51","type":"CtReturnImpl","sourcecode":"return ((dagger.internal.SetBinding<T>)(dagger.internal.BindingsGroup.get(java.lang.String)))"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.SetBinding:41","type":"CtIfImpl","sourcecode":"if (dagger.internal.Binding<?> instanceof dagger.internal.SetBinding) {\n    dagger.internal.SetBinding<T> = ((dagger.internal.SetBinding<T>)(dagger.internal.Binding<?>));\n    dagger.internal.SetBinding<T>.setLibrary(((dagger.internal.SetBinding<T>.library()) && (dagger.internal.Binding<?>.library())));\n    return dagger.internal.SetBinding<T>;\n} else if (dagger.internal.Binding<?> != null) {\n    throw new java.lang.IllegalArgumentException((((\"Duplicate:\\n    \" + dagger.internal.Binding<?>) + \"\\n    \") + dagger.internal.Binding<?>));\n} else {\n    dagger.internal.SetBinding<T> = new dagger.internal.SetBinding<T>(java.lang.String , dagger.internal.Binding<?>.java.lang.Object);\n    dagger.internal.SetBinding<T>.setLibrary(dagger.internal.Binding<?>.library());\n    dagger.internal.BindingsGroup.contributeSetBinding(java.lang.String, dagger.internal.SetBinding<T>);\n    return ((dagger.internal.SetBinding<T>)(dagger.internal.BindingsGroup.get(java.lang.String)));\n}"},"status":0},{"failures":[],"tindex":66,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"dagger.internal.SetBinding:44","type":"CtReturnImpl","sourcecode":"return dagger.internal.SetBinding<T>"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.SetBinding:41","type":"CtIfImpl","sourcecode":"if (dagger.internal.Binding<?> instanceof dagger.internal.SetBinding) {\n    dagger.internal.SetBinding<T> = ((dagger.internal.SetBinding<T>)(dagger.internal.Binding<?>));\n    dagger.internal.SetBinding<T>.setLibrary(((dagger.internal.SetBinding<T>.library()) && (dagger.internal.Binding<?>.library())));\n    return dagger.internal.SetBinding<T>;\n} else if (dagger.internal.Binding<?> != null) {\n    throw new java.lang.IllegalArgumentException((((\"Duplicate:\\n    \" + dagger.internal.Binding<?>) + \"\\n    \") + dagger.internal.Binding<?>));\n} else {\n    dagger.internal.SetBinding<T> = new dagger.internal.SetBinding<T>(java.lang.String , dagger.internal.Binding<?>.java.lang.Object);\n    dagger.internal.SetBinding<T>.setLibrary(dagger.internal.Binding<?>.library());\n    dagger.internal.BindingsGroup.contributeSetBinding(java.lang.String, dagger.internal.SetBinding<T>);\n    return ((dagger.internal.SetBinding<T>)(dagger.internal.BindingsGroup.get(java.lang.String)));\n}"},"status":-2},{"failures":[],"tindex":67,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"dagger.internal.ModuleAdapter:67","type":"CtReturnImpl","sourcecode":"return this.java.lang.Class<T>.equals(dagger.internal.ModuleAdapter<?>.java.lang.Class<?>)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.SetBinding:41","type":"CtIfImpl","sourcecode":"if (dagger.internal.Binding<?> instanceof dagger.internal.SetBinding) {\n    dagger.internal.SetBinding<T> = ((dagger.internal.SetBinding<T>)(dagger.internal.Binding<?>));\n    dagger.internal.SetBinding<T>.setLibrary(((dagger.internal.SetBinding<T>.library()) && (dagger.internal.Binding<?>.library())));\n    return dagger.internal.SetBinding<T>;\n} else if (dagger.internal.Binding<?> != null) {\n    throw new java.lang.IllegalArgumentException((((\"Duplicate:\\n    \" + dagger.internal.Binding<?>) + \"\\n    \") + dagger.internal.Binding<?>));\n} else {\n    dagger.internal.SetBinding<T> = new dagger.internal.SetBinding<T>(java.lang.String , dagger.internal.Binding<?>.java.lang.Object);\n    dagger.internal.SetBinding<T>.setLibrary(dagger.internal.Binding<?>.library());\n    dagger.internal.BindingsGroup.contributeSetBinding(java.lang.String, dagger.internal.SetBinding<T>);\n    return ((dagger.internal.SetBinding<T>)(dagger.internal.BindingsGroup.get(java.lang.String)));\n}"},"status":-2},{"failures":[],"tindex":68,"variableMapping":{"bindings":"bindings","setKey":"setKey"},"series":0,"name":"add","transplant":{"position":"dagger.internal.SetBinding:51","type":"CtReturnImpl","sourcecode":"return ((dagger.internal.SetBinding<T>)(dagger.internal.BindingsGroup.get(java.lang.String)))"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.SetBinding:41","type":"CtIfImpl","sourcecode":"if (dagger.internal.Binding<?> instanceof dagger.internal.SetBinding) {\n    dagger.internal.SetBinding<T> = ((dagger.internal.SetBinding<T>)(dagger.internal.Binding<?>));\n    dagger.internal.SetBinding<T>.setLibrary(((dagger.internal.SetBinding<T>.library()) && (dagger.internal.Binding<?>.library())));\n    return dagger.internal.SetBinding<T>;\n} else if (dagger.internal.Binding<?> != null) {\n    throw new java.lang.IllegalArgumentException((((\"Duplicate:\\n    \" + dagger.internal.Binding<?>) + \"\\n    \") + dagger.internal.Binding<?>));\n} else {\n    dagger.internal.SetBinding<T> = new dagger.internal.SetBinding<T>(java.lang.String , dagger.internal.Binding<?>.java.lang.Object);\n    dagger.internal.SetBinding<T>.setLibrary(dagger.internal.Binding<?>.library());\n    dagger.internal.BindingsGroup.contributeSetBinding(java.lang.String, dagger.internal.SetBinding<T>);\n    return ((dagger.internal.SetBinding<T>)(dagger.internal.BindingsGroup.get(java.lang.String)));\n}"},"status":-2},{"failures":[],"tindex":69,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"dagger.internal.SetBinding:44","type":"CtReturnImpl","sourcecode":"return dagger.internal.SetBinding<T>"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.SetBinding:41","type":"CtIfImpl","sourcecode":"if (dagger.internal.Binding<?> instanceof dagger.internal.SetBinding) {\n    dagger.internal.SetBinding<T> = ((dagger.internal.SetBinding<T>)(dagger.internal.Binding<?>));\n    dagger.internal.SetBinding<T>.setLibrary(((dagger.internal.SetBinding<T>.library()) && (dagger.internal.Binding<?>.library())));\n    return dagger.internal.SetBinding<T>;\n} else if (dagger.internal.Binding<?> != null) {\n    throw new java.lang.IllegalArgumentException((((\"Duplicate:\\n    \" + dagger.internal.Binding<?>) + \"\\n    \") + dagger.internal.Binding<?>));\n} else {\n    dagger.internal.SetBinding<T> = new dagger.internal.SetBinding<T>(java.lang.String , dagger.internal.Binding<?>.java.lang.Object);\n    dagger.internal.SetBinding<T>.setLibrary(dagger.internal.Binding<?>.library());\n    dagger.internal.BindingsGroup.contributeSetBinding(java.lang.String, dagger.internal.SetBinding<T>);\n    return ((dagger.internal.SetBinding<T>)(dagger.internal.BindingsGroup.get(java.lang.String)));\n}"},"status":-2},{"failures":[],"tindex":70,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"dagger.internal.SetBinding:44","type":"CtReturnImpl","sourcecode":"return dagger.internal.SetBinding<T>"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.SetBinding:41","type":"CtIfImpl","sourcecode":"if (dagger.internal.Binding<?> instanceof dagger.internal.SetBinding) {\n    dagger.internal.SetBinding<T> = ((dagger.internal.SetBinding<T>)(dagger.internal.Binding<?>));\n    dagger.internal.SetBinding<T>.setLibrary(((dagger.internal.SetBinding<T>.library()) && (dagger.internal.Binding<?>.library())));\n    return dagger.internal.SetBinding<T>;\n} else if (dagger.internal.Binding<?> != null) {\n    throw new java.lang.IllegalArgumentException((((\"Duplicate:\\n    \" + dagger.internal.Binding<?>) + \"\\n    \") + dagger.internal.Binding<?>));\n} else {\n    dagger.internal.SetBinding<T> = new dagger.internal.SetBinding<T>(java.lang.String , dagger.internal.Binding<?>.java.lang.Object);\n    dagger.internal.SetBinding<T>.setLibrary(dagger.internal.Binding<?>.library());\n    dagger.internal.BindingsGroup.contributeSetBinding(java.lang.String, dagger.internal.SetBinding<T>);\n    return ((dagger.internal.SetBinding<T>)(dagger.internal.BindingsGroup.get(java.lang.String)));\n}"},"status":-2},{"failures":[],"tindex":71,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"dagger.internal.Keys:271","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Type"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.SetBinding:41","type":"CtIfImpl","sourcecode":"if (dagger.internal.Binding<?> instanceof dagger.internal.SetBinding) {\n    dagger.internal.SetBinding<T> = ((dagger.internal.SetBinding<T>)(dagger.internal.Binding<?>));\n    dagger.internal.SetBinding<T>.setLibrary(((dagger.internal.SetBinding<T>.library()) && (dagger.internal.Binding<?>.library())));\n    return dagger.internal.SetBinding<T>;\n} else if (dagger.internal.Binding<?> != null) {\n    throw new java.lang.IllegalArgumentException((((\"Duplicate:\\n    \" + dagger.internal.Binding<?>) + \"\\n    \") + dagger.internal.Binding<?>));\n} else {\n    dagger.internal.SetBinding<T> = new dagger.internal.SetBinding<T>(java.lang.String , dagger.internal.Binding<?>.java.lang.Object);\n    dagger.internal.SetBinding<T>.setLibrary(dagger.internal.Binding<?>.library());\n    dagger.internal.BindingsGroup.contributeSetBinding(java.lang.String, dagger.internal.SetBinding<T>);\n    return ((dagger.internal.SetBinding<T>)(dagger.internal.BindingsGroup.get(java.lang.String)));\n}"},"status":-2},{"failures":[],"tindex":72,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"dagger.internal.SetBinding:41","type":"CtIfImpl","sourcecode":"if (dagger.internal.Binding<?> instanceof dagger.internal.SetBinding) {\n    dagger.internal.SetBinding<T> = ((dagger.internal.SetBinding<T>)(dagger.internal.Binding<?>));\n    dagger.internal.SetBinding<T>.setLibrary(((dagger.internal.SetBinding<T>.library()) && (dagger.internal.Binding<?>.library())));\n    return dagger.internal.SetBinding<T>;\n} else if (dagger.internal.Binding<?> != null) {\n    throw new java.lang.IllegalArgumentException((((\"Duplicate:\\n    \" + dagger.internal.Binding<?>) + \"\\n    \") + dagger.internal.Binding<?>));\n} else {\n    dagger.internal.SetBinding<T> = new dagger.internal.SetBinding<T>(java.lang.String , dagger.internal.Binding<?>.java.lang.Object);\n    dagger.internal.SetBinding<T>.setLibrary(dagger.internal.Binding<?>.library());\n    dagger.internal.BindingsGroup.contributeSetBinding(java.lang.String, dagger.internal.SetBinding<T>);\n    return ((dagger.internal.SetBinding<T>)(dagger.internal.BindingsGroup.get(java.lang.String)));\n}"},"status":-2},{"failures":[],"tindex":73,"variableMapping":{"type":"type"},"series":0,"name":"replace","transplant":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:210","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"No injectable constructor on @Singleton \" + (java.lang.Class<T>.getName())))"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:184","type":"CtThrowImpl","sourcecode":"throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has no injectable members. Do you want to add an injectable constructor?\")"},"status":0},{"failures":[],"tindex":74,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"dagger.internal.ArrayQueue:128","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Sorry, queue too big\")"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:184","type":"CtThrowImpl","sourcecode":"throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has no injectable members. Do you want to add an injectable constructor?\")"},"status":0},{"failures":[],"tindex":75,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"dagger.internal.ArrayQueue:128","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Sorry, queue too big\")"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:184","type":"CtThrowImpl","sourcecode":"throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has no injectable members. Do you want to add an injectable constructor?\")"},"status":0},{"failures":[],"tindex":76,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"dagger.internal.Memoizer:46","type":"CtTryImpl","sourcecode":"try {\n    V V = java.util.Map<K, V>.get(K);\n    if (V != null) {\n        return V;\n    } \n} finally {\n    java.util.concurrent.locks.Lock.unlock();\n}"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:184","type":"CtThrowImpl","sourcecode":"throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has no injectable members. Do you want to add an injectable constructor?\")"},"status":-2},{"failures":[],"tindex":77,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"dagger.internal.Memoizer:58","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"create returned null\")"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:184","type":"CtThrowImpl","sourcecode":"throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has no injectable members. Do you want to add an injectable constructor?\")"},"status":-2},{"failures":[],"tindex":78,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"dagger.internal.ArrayQueue:182","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"e == null\")"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:184","type":"CtThrowImpl","sourcecode":"throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has no injectable members. Do you want to add an injectable constructor?\")"},"status":-2},{"failures":[],"tindex":79,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"dagger.internal.ArrayQueue:128","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Sorry, queue too big\")"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:184","type":"CtThrowImpl","sourcecode":"throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has no injectable members. Do you want to add an injectable constructor?\")"},"status":-2},{"failures":[],"tindex":80,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"dagger.internal.ArrayQueue:600","type":"CtAssignmentImpl","sourcecode":"int = 0"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:184","type":"CtThrowImpl","sourcecode":"throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has no injectable members. Do you want to add an injectable constructor?\")"},"status":-2},{"failures":[],"tindex":81,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:184","type":"CtThrowImpl","sourcecode":"throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has no injectable members. Do you want to add an injectable constructor?\")"},"status":0},{"failures":[],"tindex":82,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"dagger.internal.Linker:83","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Cannot install further bindings after calling linkAll().\")"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:184","type":"CtThrowImpl","sourcecode":"throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has no injectable members. Do you want to add an injectable constructor?\")"},"status":0},{"failures":[],"tindex":83,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"dagger.internal.Binding:28","type":"CtThrowImpl","sourcecode":"throw new java.lang.AssertionError(\"Unresolved binding should never be called to inject.\")"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:184","type":"CtThrowImpl","sourcecode":"throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has no injectable members. Do you want to add an injectable constructor?\")"},"status":0},{"failures":[],"tindex":84,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"dagger.internal.ArrayQueue:182","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"e == null\")"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:184","type":"CtThrowImpl","sourcecode":"throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has no injectable members. Do you want to add an injectable constructor?\")"},"status":0},{"failures":[],"tindex":85,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"dagger.internal.ArrayQueue:232","type":"CtReturnImpl","sourcecode":"return null"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:184","type":"CtThrowImpl","sourcecode":"throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has no injectable members. Do you want to add an injectable constructor?\")"},"status":0},{"failures":[],"tindex":86,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"dagger.internal.ArrayQueue:393","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:184","type":"CtThrowImpl","sourcecode":"throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has no injectable members. Do you want to add an injectable constructor?\")"},"status":-2},{"failures":[],"tindex":87,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"dagger.internal.SetBinding:127","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Cannot inject members on a contributed Set<T>.\")"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:184","type":"CtThrowImpl","sourcecode":"throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has no injectable members. Do you want to add an injectable constructor?\")"},"status":-2},{"failures":[],"tindex":88,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:210","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"No injectable constructor on @Singleton \" + (java.lang.Class<T>.getName())))"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:184","type":"CtThrowImpl","sourcecode":"throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has no injectable members. Do you want to add an injectable constructor?\")"},"status":-2},{"failures":[],"tindex":89,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"dagger.internal.Linker:176","type":"CtInvocationImpl","sourcecode":"java.util.Queue<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:184","type":"CtThrowImpl","sourcecode":"throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has no injectable members. Do you want to add an injectable constructor?\")"},"status":-2},{"failures":[],"tindex":90,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:184","type":"CtThrowImpl","sourcecode":"throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has no injectable members. Do you want to add an injectable constructor?\")"},"status":0},{"failureDictionary":{}},{"memory":2012,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":2,"vendor":"AMD","model":"Opteron","mhz":2392},{"core":2,"vendor":"AMD","model":"Opteron","mhz":2392}],"os.version":"3.2.0-4-amd64"}]
