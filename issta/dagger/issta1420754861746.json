[{"failures":[],"tindex":1,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"dagger.internal.Linker:271","type":"CtLocalVariableImpl","sourcecode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = null"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.FailoverLoader:62","type":"CtLocalVariableImpl","sourcecode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.Loader.instantiate(java.lang.String.concat(dagger.internal.loaders.GeneratedAdapters.java.lang.String), java.lang.ClassLoader)"},"status":-2},{"failures":[],"tindex":2,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"dagger.internal.Linker:271","type":"CtLocalVariableImpl","sourcecode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = null"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.FailoverLoader:62","type":"CtLocalVariableImpl","sourcecode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.Loader.instantiate(java.lang.String.concat(dagger.internal.loaders.GeneratedAdapters.java.lang.String), java.lang.ClassLoader)"},"status":-2},{"failures":[],"tindex":3,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"dagger.internal.Linker:271","type":"CtLocalVariableImpl","sourcecode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = null"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.FailoverLoader:62","type":"CtLocalVariableImpl","sourcecode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.Loader.instantiate(java.lang.String.concat(dagger.internal.loaders.GeneratedAdapters.java.lang.String), java.lang.ClassLoader)"},"status":-2},{"failures":[],"tindex":4,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"dagger.internal.SetBinding:106","type":"CtForImpl","sourcecode":"for (int int = 0, int int = dagger.internal.SetBinding<T>.java.util.List<dagger.internal.Binding<?>>.size() ; int < int ; int++) {\n    dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.SetBinding<T>.java.util.List<dagger.internal.Binding<?>>.get(int);\n    java.lang.Object java.lang.Object = dagger.internal.Binding<?>.get();\n    if (dagger.internal.Binding<?>.java.lang.String.equals(java.lang.String)) {\n        java.util.List<T>.addAll(((java.util.Set<T>)(java.lang.Object)));\n    } else {\n        java.util.List<T>.add(((T)(java.lang.Object)));\n    }\n}"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.FailoverLoader:62","type":"CtLocalVariableImpl","sourcecode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.Loader.instantiate(java.lang.String.concat(dagger.internal.loaders.GeneratedAdapters.java.lang.String), java.lang.ClassLoader)"},"status":-2},{"failures":[],"tindex":5,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"dagger.internal.Linker:271","type":"CtLocalVariableImpl","sourcecode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = null"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.FailoverLoader:62","type":"CtLocalVariableImpl","sourcecode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.Loader.instantiate(java.lang.String.concat(dagger.internal.loaders.GeneratedAdapters.java.lang.String), java.lang.ClassLoader)"},"status":-2},{"failures":[],"tindex":6,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"dagger.internal.ProblemDetector:73","type":"CtLocalVariableImpl","sourcecode":"dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> = new dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.FailoverLoader:62","type":"CtLocalVariableImpl","sourcecode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.Loader.instantiate(java.lang.String.concat(dagger.internal.loaders.GeneratedAdapters.java.lang.String), java.lang.ClassLoader)"},"status":-2},{"failures":[],"tindex":7,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"dagger.internal.Linker:271","type":"CtLocalVariableImpl","sourcecode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = null"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.FailoverLoader:62","type":"CtLocalVariableImpl","sourcecode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.Loader.instantiate(java.lang.String.concat(dagger.internal.loaders.GeneratedAdapters.java.lang.String), java.lang.ClassLoader)"},"status":-2},{"failures":[],"tindex":8,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"dagger.ObjectGraph:167","type":"CtLocalVariableImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Class<?>> java.util.Map<java.lang.String, java.lang.Class<?>> = new java.util.LinkedHashMap<java.lang.String, java.lang.Class<?>>()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.FailoverLoader:62","type":"CtLocalVariableImpl","sourcecode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.Loader.instantiate(java.lang.String.concat(dagger.internal.loaders.GeneratedAdapters.java.lang.String), java.lang.ClassLoader)"},"status":-2},{"failures":[],"tindex":9,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"dagger.internal.FailoverLoader:62","type":"CtLocalVariableImpl","sourcecode":"dagger.internal.Binding<?> dagger.internal.Binding<?> = dagger.internal.Loader.instantiate(java.lang.String.concat(dagger.internal.loaders.GeneratedAdapters.java.lang.String), java.lang.ClassLoader)"},"status":-2},{"failures":[],"tindex":10,"variableMapping":{},"series":0,"name":"replace","transplant":{"position":"dagger.internal.Memoizer:58","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"create returned null\")"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:67","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString())"},"status":0},{"failures":[],"tindex":11,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"dagger.internal.SetBinding:127","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Cannot inject members on a contributed Set<T>.\")"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:67","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString())"},"status":0},{"failures":[],"tindex":12,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"dagger.ObjectGraph:354","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Module overrides cannot contribute set bindings.\")"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:67","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString())"},"status":0},{"failures":[],"tindex":13,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"dagger.internal.Linker:162","type":"CtLocalVariableImpl","sourcecode":"java.lang.RuntimeException java.lang.RuntimeException"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:67","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString())"},"status":0},{"failures":[],"tindex":14,"variableMapping":{},"series":0,"name":"add","transplant":{"position":"dagger.ObjectGraph:354","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Module overrides cannot contribute set bindings.\")"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:67","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString())"},"status":-2},{"failures":[],"tindex":15,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"dagger.internal.Memoizer:41","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"key == null\")"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:67","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString())"},"status":-2},{"failures":[],"tindex":16,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"dagger.internal.ArrayQueue:182","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"e == null\")"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:67","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString())"},"status":-2},{"failures":[],"tindex":17,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"dagger.internal.Linker:287","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:67","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString())"},"status":-2},{"failures":[],"tindex":18,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:67","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString())"},"status":0},{"failures":[],"tindex":19,"variableMapping":{"errors":"keys"},"series":0,"name":"replace","transplant":{"position":"dagger.internal.Linker:184","type":"CtInvocationImpl","sourcecode":"java.util.List<java.lang.String>.clear()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:150","type":"CtForImpl","sourcecode":"for (java.lang.Class<?> java.lang.Class<?> = java.lang.Class<T> ; java.lang.Class<?> != (java.lang.Object.java.lang.Object) ; java.lang.Class<?> = java.lang.Class<?>.getSuperclass()) {\n    for (java.lang.reflect.Field java.lang.reflect.Field : java.lang.Class<?>.getDeclaredFields()) {\n        if ((!(java.lang.reflect.Field.isAnnotationPresent(javax.inject.Inject.javax.inject.Inject))) || java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isStatic(java.lang.reflect.Field.getModifiers()))) {\n            continue;\n        } \n        if (((java.lang.reflect.Field.getModifiers()) & (java.lang.reflect.Modifier.int)) != 0) {\n            throw new java.lang.IllegalStateException((\"Can\\'t inject private field: \" + java.lang.reflect.Field));\n        } \n        java.lang.reflect.Field.setAccessible(true);\n        java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field);\n        java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Field.getGenericType(), java.lang.reflect.Field.getAnnotations(), java.lang.reflect.Field));\n    }\n}"},"status":0},{"failures":[],"tindex":20,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"dagger.internal.Linker:269","type":"CtInvocationImpl","sourcecode":"dagger.internal.Linker.assertLockHeld()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:150","type":"CtForImpl","sourcecode":"for (java.lang.Class<?> java.lang.Class<?> = java.lang.Class<T> ; java.lang.Class<?> != (java.lang.Object.java.lang.Object) ; java.lang.Class<?> = java.lang.Class<?>.getSuperclass()) {\n    for (java.lang.reflect.Field java.lang.reflect.Field : java.lang.Class<?>.getDeclaredFields()) {\n        if ((!(java.lang.reflect.Field.isAnnotationPresent(javax.inject.Inject.javax.inject.Inject))) || java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isStatic(java.lang.reflect.Field.getModifiers()))) {\n            continue;\n        } \n        if (((java.lang.reflect.Field.getModifiers()) & (java.lang.reflect.Modifier.int)) != 0) {\n            throw new java.lang.IllegalStateException((\"Can\\'t inject private field: \" + java.lang.reflect.Field));\n        } \n        java.lang.reflect.Field.setAccessible(true);\n        java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field);\n        java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Field.getGenericType(), java.lang.reflect.Field.getAnnotations(), java.lang.reflect.Field));\n    }\n}"},"status":-2},{"failures":[],"tindex":21,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"dagger.internal.Keys:155","type":"CtInvocationImpl","sourcecode":"dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.ParameterizedType.getRawType(), java.lang.StringBuilder, true)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:150","type":"CtForImpl","sourcecode":"for (java.lang.Class<?> java.lang.Class<?> = java.lang.Class<T> ; java.lang.Class<?> != (java.lang.Object.java.lang.Object) ; java.lang.Class<?> = java.lang.Class<?>.getSuperclass()) {\n    for (java.lang.reflect.Field java.lang.reflect.Field : java.lang.Class<?>.getDeclaredFields()) {\n        if ((!(java.lang.reflect.Field.isAnnotationPresent(javax.inject.Inject.javax.inject.Inject))) || java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isStatic(java.lang.reflect.Field.getModifiers()))) {\n            continue;\n        } \n        if (((java.lang.reflect.Field.getModifiers()) & (java.lang.reflect.Modifier.int)) != 0) {\n            throw new java.lang.IllegalStateException((\"Can\\'t inject private field: \" + java.lang.reflect.Field));\n        } \n        java.lang.reflect.Field.setAccessible(true);\n        java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field);\n        java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Field.getGenericType(), java.lang.reflect.Field.getAnnotations(), java.lang.reflect.Field));\n    }\n}"},"status":-2},{"failures":[],"tindex":22,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"dagger.internal.Keys:184","type":"CtIfImpl","sourcecode":"if (dagger.internal.Keys.dagger.internal.Keys.substringStartsWith(java.lang.String, int, dagger.internal.Keys.java.lang.String)) {\n    return dagger.internal.Keys.dagger.internal.Keys.extractKey(java.lang.String, int, \"members/\", dagger.internal.Keys.java.lang.String);\n} else {\n    return null;\n}"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:150","type":"CtForImpl","sourcecode":"for (java.lang.Class<?> java.lang.Class<?> = java.lang.Class<T> ; java.lang.Class<?> != (java.lang.Object.java.lang.Object) ; java.lang.Class<?> = java.lang.Class<?>.getSuperclass()) {\n    for (java.lang.reflect.Field java.lang.reflect.Field : java.lang.Class<?>.getDeclaredFields()) {\n        if ((!(java.lang.reflect.Field.isAnnotationPresent(javax.inject.Inject.javax.inject.Inject))) || java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isStatic(java.lang.reflect.Field.getModifiers()))) {\n            continue;\n        } \n        if (((java.lang.reflect.Field.getModifiers()) & (java.lang.reflect.Modifier.int)) != 0) {\n            throw new java.lang.IllegalStateException((\"Can\\'t inject private field: \" + java.lang.reflect.Field));\n        } \n        java.lang.reflect.Field.setAccessible(true);\n        java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field);\n        java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Field.getGenericType(), java.lang.reflect.Field.getAnnotations(), java.lang.reflect.Field));\n    }\n}"},"status":-2},{"failures":[],"tindex":23,"variableMapping":{"field":"java.lang.Object.class"},"series":0,"name":"add","transplant":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:158","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Field.setAccessible(true)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:150","type":"CtForImpl","sourcecode":"for (java.lang.Class<?> java.lang.Class<?> = java.lang.Class<T> ; java.lang.Class<?> != (java.lang.Object.java.lang.Object) ; java.lang.Class<?> = java.lang.Class<?>.getSuperclass()) {\n    for (java.lang.reflect.Field java.lang.reflect.Field : java.lang.Class<?>.getDeclaredFields()) {\n        if ((!(java.lang.reflect.Field.isAnnotationPresent(javax.inject.Inject.javax.inject.Inject))) || java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isStatic(java.lang.reflect.Field.getModifiers()))) {\n            continue;\n        } \n        if (((java.lang.reflect.Field.getModifiers()) & (java.lang.reflect.Modifier.int)) != 0) {\n            throw new java.lang.IllegalStateException((\"Can\\'t inject private field: \" + java.lang.reflect.Field));\n        } \n        java.lang.reflect.Field.setAccessible(true);\n        java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field);\n        java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Field.getGenericType(), java.lang.reflect.Field.getAnnotations(), java.lang.reflect.Field));\n    }\n}"},"status":-2},{"failures":[],"tindex":24,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"dagger.internal.ArrayQueue:185","type":"CtInvocationImpl","sourcecode":"dagger.internal.ArrayQueue<E>.doubleCapacity()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:150","type":"CtForImpl","sourcecode":"for (java.lang.Class<?> java.lang.Class<?> = java.lang.Class<T> ; java.lang.Class<?> != (java.lang.Object.java.lang.Object) ; java.lang.Class<?> = java.lang.Class<?>.getSuperclass()) {\n    for (java.lang.reflect.Field java.lang.reflect.Field : java.lang.Class<?>.getDeclaredFields()) {\n        if ((!(java.lang.reflect.Field.isAnnotationPresent(javax.inject.Inject.javax.inject.Inject))) || java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isStatic(java.lang.reflect.Field.getModifiers()))) {\n            continue;\n        } \n        if (((java.lang.reflect.Field.getModifiers()) & (java.lang.reflect.Modifier.int)) != 0) {\n            throw new java.lang.IllegalStateException((\"Can\\'t inject private field: \" + java.lang.reflect.Field));\n        } \n        java.lang.reflect.Field.setAccessible(true);\n        java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field);\n        java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Field.getGenericType(), java.lang.reflect.Field.getAnnotations(), java.lang.reflect.Field));\n    }\n}"},"status":-2},{"failures":[],"tindex":25,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"dagger.internal.ArrayQueue:288","type":"CtIfImpl","sourcecode":"if (int >= ((int - int) & int))\n    throw new java.util.ConcurrentModificationException();\n"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:150","type":"CtForImpl","sourcecode":"for (java.lang.Class<?> java.lang.Class<?> = java.lang.Class<T> ; java.lang.Class<?> != (java.lang.Object.java.lang.Object) ; java.lang.Class<?> = java.lang.Class<?>.getSuperclass()) {\n    for (java.lang.reflect.Field java.lang.reflect.Field : java.lang.Class<?>.getDeclaredFields()) {\n        if ((!(java.lang.reflect.Field.isAnnotationPresent(javax.inject.Inject.javax.inject.Inject))) || java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isStatic(java.lang.reflect.Field.getModifiers()))) {\n            continue;\n        } \n        if (((java.lang.reflect.Field.getModifiers()) & (java.lang.reflect.Modifier.int)) != 0) {\n            throw new java.lang.IllegalStateException((\"Can\\'t inject private field: \" + java.lang.reflect.Field));\n        } \n        java.lang.reflect.Field.setAccessible(true);\n        java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field);\n        java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Field.getGenericType(), java.lang.reflect.Field.getAnnotations(), java.lang.reflect.Field));\n    }\n}"},"status":-2},{"failures":[],"tindex":26,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"dagger.internal.ArrayQueue:186","type":"CtReturnImpl","sourcecode":"return true"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:150","type":"CtForImpl","sourcecode":"for (java.lang.Class<?> java.lang.Class<?> = java.lang.Class<T> ; java.lang.Class<?> != (java.lang.Object.java.lang.Object) ; java.lang.Class<?> = java.lang.Class<?>.getSuperclass()) {\n    for (java.lang.reflect.Field java.lang.reflect.Field : java.lang.Class<?>.getDeclaredFields()) {\n        if ((!(java.lang.reflect.Field.isAnnotationPresent(javax.inject.Inject.javax.inject.Inject))) || java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isStatic(java.lang.reflect.Field.getModifiers()))) {\n            continue;\n        } \n        if (((java.lang.reflect.Field.getModifiers()) & (java.lang.reflect.Modifier.int)) != 0) {\n            throw new java.lang.IllegalStateException((\"Can\\'t inject private field: \" + java.lang.reflect.Field));\n        } \n        java.lang.reflect.Field.setAccessible(true);\n        java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field);\n        java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Field.getGenericType(), java.lang.reflect.Field.getAnnotations(), java.lang.reflect.Field));\n    }\n}"},"status":-2},{"failures":[],"tindex":27,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:150","type":"CtForImpl","sourcecode":"for (java.lang.Class<?> java.lang.Class<?> = java.lang.Class<T> ; java.lang.Class<?> != (java.lang.Object.java.lang.Object) ; java.lang.Class<?> = java.lang.Class<?>.getSuperclass()) {\n    for (java.lang.reflect.Field java.lang.reflect.Field : java.lang.Class<?>.getDeclaredFields()) {\n        if ((!(java.lang.reflect.Field.isAnnotationPresent(javax.inject.Inject.javax.inject.Inject))) || java.lang.reflect.Modifier.(java.lang.reflect.Modifier.isStatic(java.lang.reflect.Field.getModifiers()))) {\n            continue;\n        } \n        if (((java.lang.reflect.Field.getModifiers()) & (java.lang.reflect.Modifier.int)) != 0) {\n            throw new java.lang.IllegalStateException((\"Can\\'t inject private field: \" + java.lang.reflect.Field));\n        } \n        java.lang.reflect.Field.setAccessible(true);\n        java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field);\n        java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.get(java.lang.reflect.Field.getGenericType(), java.lang.reflect.Field.getAnnotations(), java.lang.reflect.Field));\n    }\n}"},"status":0},{"failures":[],"tindex":28,"variableMapping":{"result":"result","this":"this","genericArrayType":"type"},"series":0,"name":"replace","transplant":{"position":"dagger.internal.Keys:167","type":"CtInvocationImpl","sourcecode":"dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.StringBuilder, false)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:165","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.StringBuilder, false);\n    java.lang.StringBuilder.append(\"[]\");\n} else {\n    throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type));\n}"},"status":-2},{"failures":[],"tindex":29,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"dagger.internal.Keys:160","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\", \")"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:165","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.StringBuilder, false);\n    java.lang.StringBuilder.append(\"[]\");\n} else {\n    throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type));\n}"},"status":0},{"failures":[],"tindex":30,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"dagger.internal.Keys:167","type":"CtInvocationImpl","sourcecode":"dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.StringBuilder, false)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:165","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.StringBuilder, false);\n    java.lang.StringBuilder.append(\"[]\");\n} else {\n    throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type));\n}"},"status":-2},{"failures":[],"tindex":31,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"dagger.internal.ArrayQueue:579","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:165","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.StringBuilder, false);\n    java.lang.StringBuilder.append(\"[]\");\n} else {\n    throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type));\n}"},"status":-2},{"failures":[],"tindex":32,"variableMapping":{"result":"result","this":"this","genericArrayType":"type"},"series":0,"name":"add","transplant":{"position":"dagger.internal.Keys:167","type":"CtInvocationImpl","sourcecode":"dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.StringBuilder, false)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:165","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.StringBuilder, false);\n    java.lang.StringBuilder.append(\"[]\");\n} else {\n    throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type));\n}"},"status":-2},{"failures":[],"tindex":33,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"dagger.internal.Keys:160","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\", \")"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:165","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.StringBuilder, false);\n    java.lang.StringBuilder.append(\"[]\");\n} else {\n    throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type));\n}"},"status":0},{"failures":[],"tindex":34,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"dagger.internal.Keys:155","type":"CtInvocationImpl","sourcecode":"dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.ParameterizedType.getRawType(), java.lang.StringBuilder, true)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:165","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.StringBuilder, false);\n    java.lang.StringBuilder.append(\"[]\");\n} else {\n    throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type));\n}"},"status":-2},{"failures":[],"tindex":35,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"dagger.internal.ProblemDetector:33","type":"CtLocalVariableImpl","sourcecode":"java.util.List<dagger.internal.Binding> java.util.List<dagger.internal.Binding> = new java.util.ArrayList<dagger.internal.Binding>()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:165","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.StringBuilder, false);\n    java.lang.StringBuilder.append(\"[]\");\n} else {\n    throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type));\n}"},"status":0},{"failures":[],"tindex":36,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:165","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.StringBuilder, false);\n    java.lang.StringBuilder.append(\"[]\");\n} else {\n    throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type));\n}"},"status":0},{"failures":[],"tindex":37,"variableMapping":{"readLock":"writeLock"},"series":0,"name":"replace","transplant":{"position":"dagger.internal.Memoizer:52","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.locks.Lock.unlock()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Memoizer:62","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.locks.Lock.lock()"},"status":0},{"failures":[],"tindex":38,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"dagger.ObjectGraph:227","type":"CtNewClassImpl","sourcecode":"new dagger.internal.ProblemDetector()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Memoizer:62","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.locks.Lock.lock()"},"status":0},{"failures":[],"tindex":39,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"dagger.internal.Memoizer:52","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.locks.Lock.unlock()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Memoizer:62","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.locks.Lock.lock()"},"status":0},{"failures":[],"tindex":40,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"dagger.internal.Memoizer:57","type":"CtIfImpl","sourcecode":"if (V == null) {\n    throw new java.lang.NullPointerException(\"create returned null\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Memoizer:62","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.locks.Lock.lock()"},"status":0},{"failures":[],"tindex":41,"variableMapping":{"readLock":"writeLock"},"series":0,"name":"add","transplant":{"position":"dagger.internal.Memoizer:52","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.locks.Lock.unlock()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Memoizer:62","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.locks.Lock.lock()"},"status":0},{"failures":[],"tindex":42,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"dagger.ObjectGraph:227","type":"CtNewClassImpl","sourcecode":"new dagger.internal.ProblemDetector()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Memoizer:62","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.locks.Lock.lock()"},"status":0},{"failures":[],"tindex":43,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"dagger.internal.Memoizer:52","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.locks.Lock.unlock()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Memoizer:62","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.locks.Lock.lock()"},"status":0},{"failures":[],"tindex":44,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"dagger.internal.SetBinding:133","type":"CtForImpl","sourcecode":"for (dagger.internal.SetBinding<T> dagger.internal.SetBinding<T> = this ; dagger.internal.SetBinding<T> != null ; dagger.internal.SetBinding<T> = dagger.internal.SetBinding<T>.dagger.internal.SetBinding<T>) {\n    for (int int = 0, int int = dagger.internal.SetBinding<T>.java.util.List<dagger.internal.Binding<?>>.size() ; int < int ; int++) {\n        if (!boolean) {\n            java.lang.StringBuilder.append(\",\");\n        } \n        java.lang.StringBuilder.append(dagger.internal.SetBinding<T>.java.util.List<dagger.internal.Binding<?>>.get(int));\n        boolean = false;\n    }\n}"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Memoizer:62","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.locks.Lock.lock()"},"status":-2},{"failures":[],"tindex":45,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Memoizer:62","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.locks.Lock.lock()"},"status":0},{"failures":[],"tindex":46,"variableMapping":{"provideKey":"key","membersKey":"key"},"series":0,"name":"replace","transplant":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:141","type":"CtReturnImpl","sourcecode":"return (java.lang.String) != null ? java.lang.String : java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:251","type":"CtReturnImpl","sourcecode":"return ((java.lang.String.indexOf('<', int)) == (-1)) && ((java.lang.String.indexOf('[', int)) == (-1)) ? java.lang.String.substring(int) : null"},"status":0},{"failures":[],"tindex":47,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"dagger.internal.Keys:67","type":"CtReturnImpl","sourcecode":"return \"members/\".concat(java.lang.Class<?>.getName())"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:251","type":"CtReturnImpl","sourcecode":"return ((java.lang.String.indexOf('<', int)) == (-1)) && ((java.lang.String.indexOf('[', int)) == (-1)) ? java.lang.String.substring(int) : null"},"status":-2},{"failures":[],"tindex":48,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"dagger.internal.Linker:464","type":"CtReturnImpl","sourcecode":"return (\"DeferredBinding[deferredKey=\" + (java.lang.String)) + \"]\""},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:251","type":"CtReturnImpl","sourcecode":"return ((java.lang.String.indexOf('<', int)) == (-1)) && ((java.lang.String.indexOf('[', int)) == (-1)) ? java.lang.String.substring(int) : null"},"status":-2},{"failures":[],"tindex":49,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"dagger.ObjectGraph:238","type":"CtSynchronizedImpl","sourcecode":"synchronized(dagger.internal.Linker) {\n    if ((java.util.Map<java.lang.String, dagger.internal.Binding<?>> = dagger.internal.Linker.fullyLinkedBindings()) != null) {\n        return java.util.Map<java.lang.String, dagger.internal.Binding<?>>;\n    } \n    dagger.ObjectGraph.DaggerObjectGraph.linkStaticInjections();\n    dagger.ObjectGraph.DaggerObjectGraph.linkInjectableTypes();\n    return dagger.internal.Linker.linkAll();\n}"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:251","type":"CtReturnImpl","sourcecode":"return ((java.lang.String.indexOf('<', int)) == (-1)) && ((java.lang.String.indexOf('[', int)) == (-1)) ? java.lang.String.substring(int) : null"},"status":-2},{"failures":[],"tindex":50,"variableMapping":{"provideKey":"key","membersKey":"key"},"series":0,"name":"add","transplant":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:141","type":"CtReturnImpl","sourcecode":"return (java.lang.String) != null ? java.lang.String : java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:251","type":"CtReturnImpl","sourcecode":"return ((java.lang.String.indexOf('<', int)) == (-1)) && ((java.lang.String.indexOf('[', int)) == (-1)) ? java.lang.String.substring(int) : null"},"status":-2},{"failures":[],"tindex":51,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"dagger.internal.Keys:67","type":"CtReturnImpl","sourcecode":"return \"members/\".concat(java.lang.Class<?>.getName())"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:251","type":"CtReturnImpl","sourcecode":"return ((java.lang.String.indexOf('<', int)) == (-1)) && ((java.lang.String.indexOf('[', int)) == (-1)) ? java.lang.String.substring(int) : null"},"status":-2},{"failures":[],"tindex":52,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"dagger.internal.Keys:228","type":"CtReturnImpl","sourcecode":"return java.lang.String + (java.lang.String.substring((int + (java.lang.String.length())), ((java.lang.String.length()) - 1)))"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:251","type":"CtReturnImpl","sourcecode":"return ((java.lang.String.indexOf('<', int)) == (-1)) && ((java.lang.String.indexOf('[', int)) == (-1)) ? java.lang.String.substring(int) : null"},"status":-2},{"failures":[],"tindex":53,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"dagger.ObjectGraph:204","type":"CtReturnImpl","sourcecode":"return dagger.ObjectGraph.DaggerObjectGraph.dagger.ObjectGraph.DaggerObjectGraph.makeGraph(this, dagger.internal.Loader, java.lang.Object[])"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:251","type":"CtReturnImpl","sourcecode":"return ((java.lang.String.indexOf('<', int)) == (-1)) && ((java.lang.String.indexOf('[', int)) == (-1)) ? java.lang.String.substring(int) : null"},"status":-2},{"failures":[],"tindex":54,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:251","type":"CtReturnImpl","sourcecode":"return ((java.lang.String.indexOf('<', int)) == (-1)) && ((java.lang.String.indexOf('[', int)) == (-1)) ? java.lang.String.substring(int) : null"},"status":-2},{"failures":[],"tindex":55,"variableMapping":{"values":"bindings","this":"this"},"series":0,"name":"replace","transplant":{"position":"dagger.internal.ProblemDetector:86","type":"CtInvocationImpl","sourcecode":"dagger.internal.ProblemDetector.detectUnusedBinding(java.util.Collection<dagger.internal.Binding<?>>)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:53","type":"CtForEachImpl","sourcecode":"for (dagger.internal.Binding<?> dagger.internal.Binding<?> : java.util.Collection<dagger.internal.Binding<?>>) {\n    if (dagger.internal.Binding<?>.isCycleFree()) {\n        continue;\n    } \n    if (dagger.internal.Binding<?>.isVisiting()) {\n        int int = java.util.List<dagger.internal.Binding<?>>.indexOf(dagger.internal.Binding<?>);\n        java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append(\"Dependency cycle:\");\n        for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n            java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n        }\n        java.lang.StringBuilder.append(\"\\n    \").append(0).append(\". \").append(dagger.internal.Binding<?>.java.lang.String);\n        throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString());\n    } \n    dagger.internal.Binding<?>.setVisiting(true);\n    java.util.List<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n    try {\n        dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> = new dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>();\n        dagger.internal.Binding<?>.getDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>);\n        dagger.internal.ProblemDetector.dagger.internal.ProblemDetector.detectCircularDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, java.util.List<dagger.internal.Binding<?>>);\n        dagger.internal.Binding<?>.setCycleFree(true);\n    } finally {\n        java.util.List<dagger.internal.Binding<?>>.remove(((java.util.List<dagger.internal.Binding<?>>.size()) - 1));\n        dagger.internal.Binding<?>.setVisiting(false);\n    }\n}"},"status":-2},{"failures":[],"tindex":56,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"dagger.ObjectGraph:227","type":"CtNewClassImpl","sourcecode":"new dagger.internal.ProblemDetector()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:53","type":"CtForEachImpl","sourcecode":"for (dagger.internal.Binding<?> dagger.internal.Binding<?> : java.util.Collection<dagger.internal.Binding<?>>) {\n    if (dagger.internal.Binding<?>.isCycleFree()) {\n        continue;\n    } \n    if (dagger.internal.Binding<?>.isVisiting()) {\n        int int = java.util.List<dagger.internal.Binding<?>>.indexOf(dagger.internal.Binding<?>);\n        java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append(\"Dependency cycle:\");\n        for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n            java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n        }\n        java.lang.StringBuilder.append(\"\\n    \").append(0).append(\". \").append(dagger.internal.Binding<?>.java.lang.String);\n        throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString());\n    } \n    dagger.internal.Binding<?>.setVisiting(true);\n    java.util.List<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n    try {\n        dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> = new dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>();\n        dagger.internal.Binding<?>.getDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>);\n        dagger.internal.ProblemDetector.dagger.internal.ProblemDetector.detectCircularDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, java.util.List<dagger.internal.Binding<?>>);\n        dagger.internal.Binding<?>.setCycleFree(true);\n    } finally {\n        java.util.List<dagger.internal.Binding<?>>.remove(((java.util.List<dagger.internal.Binding<?>>.size()) - 1));\n        dagger.internal.Binding<?>.setVisiting(false);\n    }\n}"},"status":0},{"failures":[],"tindex":57,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"dagger.internal.ProblemDetector:85","type":"CtInvocationImpl","sourcecode":"dagger.internal.ProblemDetector.detectCircularDependencies(java.util.Collection<dagger.internal.Binding<?>>)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:53","type":"CtForEachImpl","sourcecode":"for (dagger.internal.Binding<?> dagger.internal.Binding<?> : java.util.Collection<dagger.internal.Binding<?>>) {\n    if (dagger.internal.Binding<?>.isCycleFree()) {\n        continue;\n    } \n    if (dagger.internal.Binding<?>.isVisiting()) {\n        int int = java.util.List<dagger.internal.Binding<?>>.indexOf(dagger.internal.Binding<?>);\n        java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append(\"Dependency cycle:\");\n        for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n            java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n        }\n        java.lang.StringBuilder.append(\"\\n    \").append(0).append(\". \").append(dagger.internal.Binding<?>.java.lang.String);\n        throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString());\n    } \n    dagger.internal.Binding<?>.setVisiting(true);\n    java.util.List<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n    try {\n        dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> = new dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>();\n        dagger.internal.Binding<?>.getDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>);\n        dagger.internal.ProblemDetector.dagger.internal.ProblemDetector.detectCircularDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, java.util.List<dagger.internal.Binding<?>>);\n        dagger.internal.Binding<?>.setCycleFree(true);\n    } finally {\n        java.util.List<dagger.internal.Binding<?>>.remove(((java.util.List<dagger.internal.Binding<?>>.size()) - 1));\n        dagger.internal.Binding<?>.setVisiting(false);\n    }\n}"},"status":-2},{"failures":[],"tindex":58,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"dagger.internal.Linker:144","type":"CtInvocationImpl","sourcecode":"dagger.internal.Binding<?>.setDependedOn(dagger.internal.Binding<?>.dependedOn())"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:53","type":"CtForEachImpl","sourcecode":"for (dagger.internal.Binding<?> dagger.internal.Binding<?> : java.util.Collection<dagger.internal.Binding<?>>) {\n    if (dagger.internal.Binding<?>.isCycleFree()) {\n        continue;\n    } \n    if (dagger.internal.Binding<?>.isVisiting()) {\n        int int = java.util.List<dagger.internal.Binding<?>>.indexOf(dagger.internal.Binding<?>);\n        java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append(\"Dependency cycle:\");\n        for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n            java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n        }\n        java.lang.StringBuilder.append(\"\\n    \").append(0).append(\". \").append(dagger.internal.Binding<?>.java.lang.String);\n        throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString());\n    } \n    dagger.internal.Binding<?>.setVisiting(true);\n    java.util.List<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n    try {\n        dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> = new dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>();\n        dagger.internal.Binding<?>.getDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>);\n        dagger.internal.ProblemDetector.dagger.internal.ProblemDetector.detectCircularDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, java.util.List<dagger.internal.Binding<?>>);\n        dagger.internal.Binding<?>.setCycleFree(true);\n    } finally {\n        java.util.List<dagger.internal.Binding<?>>.remove(((java.util.List<dagger.internal.Binding<?>>.size()) - 1));\n        dagger.internal.Binding<?>.setVisiting(false);\n    }\n}"},"status":-2},{"failures":[],"tindex":59,"variableMapping":{"path":"bindings","this":"this","dependencies":"bindings"},"series":0,"name":"add","transplant":{"position":"dagger.internal.ProblemDetector:75","type":"CtInvocationImpl","sourcecode":"dagger.internal.ProblemDetector.dagger.internal.ProblemDetector.detectCircularDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, java.util.List<dagger.internal.Binding<?>>)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:53","type":"CtForEachImpl","sourcecode":"for (dagger.internal.Binding<?> dagger.internal.Binding<?> : java.util.Collection<dagger.internal.Binding<?>>) {\n    if (dagger.internal.Binding<?>.isCycleFree()) {\n        continue;\n    } \n    if (dagger.internal.Binding<?>.isVisiting()) {\n        int int = java.util.List<dagger.internal.Binding<?>>.indexOf(dagger.internal.Binding<?>);\n        java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append(\"Dependency cycle:\");\n        for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n            java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n        }\n        java.lang.StringBuilder.append(\"\\n    \").append(0).append(\". \").append(dagger.internal.Binding<?>.java.lang.String);\n        throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString());\n    } \n    dagger.internal.Binding<?>.setVisiting(true);\n    java.util.List<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n    try {\n        dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> = new dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>();\n        dagger.internal.Binding<?>.getDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>);\n        dagger.internal.ProblemDetector.dagger.internal.ProblemDetector.detectCircularDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, java.util.List<dagger.internal.Binding<?>>);\n        dagger.internal.Binding<?>.setCycleFree(true);\n    } finally {\n        java.util.List<dagger.internal.Binding<?>>.remove(((java.util.List<dagger.internal.Binding<?>>.size()) - 1));\n        dagger.internal.Binding<?>.setVisiting(false);\n    }\n}"},"status":-2},{"failures":[],"tindex":60,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"dagger.internal.ArrayQueue:185","type":"CtInvocationImpl","sourcecode":"dagger.internal.ArrayQueue<E>.doubleCapacity()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:53","type":"CtForEachImpl","sourcecode":"for (dagger.internal.Binding<?> dagger.internal.Binding<?> : java.util.Collection<dagger.internal.Binding<?>>) {\n    if (dagger.internal.Binding<?>.isCycleFree()) {\n        continue;\n    } \n    if (dagger.internal.Binding<?>.isVisiting()) {\n        int int = java.util.List<dagger.internal.Binding<?>>.indexOf(dagger.internal.Binding<?>);\n        java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append(\"Dependency cycle:\");\n        for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n            java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n        }\n        java.lang.StringBuilder.append(\"\\n    \").append(0).append(\". \").append(dagger.internal.Binding<?>.java.lang.String);\n        throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString());\n    } \n    dagger.internal.Binding<?>.setVisiting(true);\n    java.util.List<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n    try {\n        dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> = new dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>();\n        dagger.internal.Binding<?>.getDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>);\n        dagger.internal.ProblemDetector.dagger.internal.ProblemDetector.detectCircularDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, java.util.List<dagger.internal.Binding<?>>);\n        dagger.internal.Binding<?>.setCycleFree(true);\n    } finally {\n        java.util.List<dagger.internal.Binding<?>>.remove(((java.util.List<dagger.internal.Binding<?>>.size()) - 1));\n        dagger.internal.Binding<?>.setVisiting(false);\n    }\n}"},"status":-2},{"failures":[],"tindex":61,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"dagger.internal.ProblemDetector:34","type":"CtForEachImpl","sourcecode":"for (dagger.internal.Binding<?> dagger.internal.Binding<?> : java.util.Collection<dagger.internal.Binding<?>>) {\n    if ((!(dagger.internal.Binding<?>.library())) && (!(dagger.internal.Binding<?>.dependedOn()))) {\n        java.util.List<dagger.internal.Binding>.add(dagger.internal.Binding<?>);\n    } \n}"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:53","type":"CtForEachImpl","sourcecode":"for (dagger.internal.Binding<?> dagger.internal.Binding<?> : java.util.Collection<dagger.internal.Binding<?>>) {\n    if (dagger.internal.Binding<?>.isCycleFree()) {\n        continue;\n    } \n    if (dagger.internal.Binding<?>.isVisiting()) {\n        int int = java.util.List<dagger.internal.Binding<?>>.indexOf(dagger.internal.Binding<?>);\n        java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append(\"Dependency cycle:\");\n        for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n            java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n        }\n        java.lang.StringBuilder.append(\"\\n    \").append(0).append(\". \").append(dagger.internal.Binding<?>.java.lang.String);\n        throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString());\n    } \n    dagger.internal.Binding<?>.setVisiting(true);\n    java.util.List<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n    try {\n        dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> = new dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>();\n        dagger.internal.Binding<?>.getDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>);\n        dagger.internal.ProblemDetector.dagger.internal.ProblemDetector.detectCircularDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, java.util.List<dagger.internal.Binding<?>>);\n        dagger.internal.Binding<?>.setCycleFree(true);\n    } finally {\n        java.util.List<dagger.internal.Binding<?>>.remove(((java.util.List<dagger.internal.Binding<?>>.size()) - 1));\n        dagger.internal.Binding<?>.setVisiting(false);\n    }\n}"},"status":-2},{"failures":[],"tindex":62,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"dagger.internal.ArrayQueue:460","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:53","type":"CtForEachImpl","sourcecode":"for (dagger.internal.Binding<?> dagger.internal.Binding<?> : java.util.Collection<dagger.internal.Binding<?>>) {\n    if (dagger.internal.Binding<?>.isCycleFree()) {\n        continue;\n    } \n    if (dagger.internal.Binding<?>.isVisiting()) {\n        int int = java.util.List<dagger.internal.Binding<?>>.indexOf(dagger.internal.Binding<?>);\n        java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append(\"Dependency cycle:\");\n        for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n            java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n        }\n        java.lang.StringBuilder.append(\"\\n    \").append(0).append(\". \").append(dagger.internal.Binding<?>.java.lang.String);\n        throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString());\n    } \n    dagger.internal.Binding<?>.setVisiting(true);\n    java.util.List<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n    try {\n        dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> = new dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>();\n        dagger.internal.Binding<?>.getDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>);\n        dagger.internal.ProblemDetector.dagger.internal.ProblemDetector.detectCircularDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, java.util.List<dagger.internal.Binding<?>>);\n        dagger.internal.Binding<?>.setCycleFree(true);\n    } finally {\n        java.util.List<dagger.internal.Binding<?>>.remove(((java.util.List<dagger.internal.Binding<?>>.size()) - 1));\n        dagger.internal.Binding<?>.setVisiting(false);\n    }\n}"},"status":-2},{"failures":[],"tindex":63,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:53","type":"CtForEachImpl","sourcecode":"for (dagger.internal.Binding<?> dagger.internal.Binding<?> : java.util.Collection<dagger.internal.Binding<?>>) {\n    if (dagger.internal.Binding<?>.isCycleFree()) {\n        continue;\n    } \n    if (dagger.internal.Binding<?>.isVisiting()) {\n        int int = java.util.List<dagger.internal.Binding<?>>.indexOf(dagger.internal.Binding<?>);\n        java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append(\"Dependency cycle:\");\n        for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n            java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n        }\n        java.lang.StringBuilder.append(\"\\n    \").append(0).append(\". \").append(dagger.internal.Binding<?>.java.lang.String);\n        throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString());\n    } \n    dagger.internal.Binding<?>.setVisiting(true);\n    java.util.List<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n    try {\n        dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> = new dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>();\n        dagger.internal.Binding<?>.getDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>);\n        dagger.internal.ProblemDetector.dagger.internal.ProblemDetector.detectCircularDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, java.util.List<dagger.internal.Binding<?>>);\n        dagger.internal.Binding<?>.setCycleFree(true);\n    } finally {\n        java.util.List<dagger.internal.Binding<?>>.remove(((java.util.List<dagger.internal.Binding<?>>.size()) - 1));\n        dagger.internal.Binding<?>.setVisiting(false);\n    }\n}"},"status":0},{"failures":[],"tindex":64,"variableMapping":{"binding":"binding"},"series":0,"name":"replace","transplant":{"position":"dagger.internal.ProblemDetector:76","type":"CtInvocationImpl","sourcecode":"dagger.internal.Binding<?>.setCycleFree(true)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:74","type":"CtInvocationImpl","sourcecode":"dagger.internal.Binding<?>.getDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>)"},"status":0},{"failures":[],"tindex":65,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"dagger.internal.ProblemDetector:70","type":"CtInvocationImpl","sourcecode":"dagger.internal.Binding<?>.setVisiting(true)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:74","type":"CtInvocationImpl","sourcecode":"dagger.internal.Binding<?>.getDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>)"},"status":0},{"failures":[],"tindex":66,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"dagger.internal.ProblemDetector:70","type":"CtInvocationImpl","sourcecode":"dagger.internal.Binding<?>.setVisiting(true)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:74","type":"CtInvocationImpl","sourcecode":"dagger.internal.Binding<?>.getDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>)"},"status":0},{"failures":[],"tindex":67,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"dagger.internal.LazyBinding:45","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:74","type":"CtInvocationImpl","sourcecode":"dagger.internal.Binding<?>.getDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>)"},"status":-2},{"failures":[],"tindex":68,"variableMapping":{"binding":"binding"},"series":0,"name":"add","transplant":{"position":"dagger.internal.Linker:174","type":"CtInvocationImpl","sourcecode":"dagger.internal.Binding<?>.setLinked()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:74","type":"CtInvocationImpl","sourcecode":"dagger.internal.Binding<?>.getDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>)"},"status":0},{"failures":[],"tindex":69,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"dagger.internal.Linker:172","type":"CtInvocationImpl","sourcecode":"dagger.internal.Binding<?>.attach(this)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:74","type":"CtInvocationImpl","sourcecode":"dagger.internal.Binding<?>.getDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>)"},"status":-2},{"failures":[],"tindex":70,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"dagger.internal.Linker:144","type":"CtInvocationImpl","sourcecode":"dagger.internal.Binding<?>.setDependedOn(dagger.internal.Binding<?>.dependedOn())"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:74","type":"CtInvocationImpl","sourcecode":"dagger.internal.Binding<?>.getDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>)"},"status":-2},{"failures":[],"tindex":71,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"dagger.internal.ArrayQueue:127","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Sorry, queue too big\");\n"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:74","type":"CtInvocationImpl","sourcecode":"dagger.internal.Binding<?>.getDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>)"},"status":-2},{"failures":[],"tindex":72,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:74","type":"CtInvocationImpl","sourcecode":"dagger.internal.Binding<?>.getDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>)"},"status":0},{"failures":[],"tindex":73,"variableMapping":{"type":"type"},"series":0,"name":"replace","transplant":{"position":"dagger.internal.FailoverLoader:71","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.isInterface()) {\n    return null;\n} "},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.FailoverLoader:74","type":"CtReturnImpl","sourcecode":"return dagger.internal.loaders.ReflectiveAtInjectBinding.dagger.internal.loaders.ReflectiveAtInjectBinding.create(java.lang.Class<?>, boolean)"},"status":-2},{"failures":[],"tindex":74,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"dagger.internal.FailoverLoader:71","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.isInterface()) {\n    return null;\n} "},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.FailoverLoader:74","type":"CtReturnImpl","sourcecode":"return dagger.internal.loaders.ReflectiveAtInjectBinding.dagger.internal.loaders.ReflectiveAtInjectBinding.create(java.lang.Class<?>, boolean)"},"status":-2},{"failures":[],"tindex":75,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"dagger.internal.FailoverLoader:71","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.isInterface()) {\n    return null;\n} "},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.FailoverLoader:74","type":"CtReturnImpl","sourcecode":"return dagger.internal.loaders.ReflectiveAtInjectBinding.dagger.internal.loaders.ReflectiveAtInjectBinding.create(java.lang.Class<?>, boolean)"},"status":-2},{"failures":[],"tindex":76,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"dagger.ObjectGraph:129","type":"CtReturnImpl","sourcecode":"return dagger.ObjectGraph.DaggerObjectGraph.dagger.ObjectGraph.DaggerObjectGraph.makeGraph(null, new dagger.internal.FailoverLoader(), java.lang.Object[])"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.FailoverLoader:74","type":"CtReturnImpl","sourcecode":"return dagger.internal.loaders.ReflectiveAtInjectBinding.dagger.internal.loaders.ReflectiveAtInjectBinding.create(java.lang.Class<?>, boolean)"},"status":-2},{"failures":[],"tindex":77,"variableMapping":{"type":"type"},"series":0,"name":"add","transplant":{"position":"dagger.internal.FailoverLoader:71","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.isInterface()) {\n    return null;\n} "},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.FailoverLoader:74","type":"CtReturnImpl","sourcecode":"return dagger.internal.loaders.ReflectiveAtInjectBinding.dagger.internal.loaders.ReflectiveAtInjectBinding.create(java.lang.Class<?>, boolean)"},"status":-2},{"failures":[],"tindex":78,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"dagger.internal.FailoverLoader:71","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.isInterface()) {\n    return null;\n} "},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.FailoverLoader:74","type":"CtReturnImpl","sourcecode":"return dagger.internal.loaders.ReflectiveAtInjectBinding.dagger.internal.loaders.ReflectiveAtInjectBinding.create(java.lang.Class<?>, boolean)"},"status":-2},{"failures":[],"tindex":79,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"dagger.internal.FailoverLoader:71","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.isInterface()) {\n    return null;\n} "},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.FailoverLoader:74","type":"CtReturnImpl","sourcecode":"return dagger.internal.loaders.ReflectiveAtInjectBinding.dagger.internal.loaders.ReflectiveAtInjectBinding.create(java.lang.Class<?>, boolean)"},"status":-2},{"failures":[],"tindex":80,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"dagger.internal.Linker:194","type":"CtThrowImpl","sourcecode":"throw new java.lang.AssertionError()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.FailoverLoader:74","type":"CtReturnImpl","sourcecode":"return dagger.internal.loaders.ReflectiveAtInjectBinding.dagger.internal.loaders.ReflectiveAtInjectBinding.create(java.lang.Class<?>, boolean)"},"status":-2},{"failures":[],"tindex":81,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"dagger.internal.FailoverLoader:74","type":"CtReturnImpl","sourcecode":"return dagger.internal.loaders.ReflectiveAtInjectBinding.dagger.internal.loaders.ReflectiveAtInjectBinding.create(java.lang.Class<?>, boolean)"},"status":-2},{"failures":[],"tindex":82,"variableMapping":{"start":"start","key":"key"},"series":0,"name":"replace","transplant":{"position":"dagger.internal.Keys:251","type":"CtReturnImpl","sourcecode":"return ((java.lang.String.indexOf('<', int)) == (-1)) && ((java.lang.String.indexOf('[', int)) == (-1)) ? java.lang.String.substring(int) : null"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:198","type":"CtIfImpl","sourcecode":"if (dagger.internal.Keys.dagger.internal.Keys.substringStartsWith(java.lang.String, int, dagger.internal.Keys.java.lang.String)) {\n    return dagger.internal.Keys.dagger.internal.Keys.extractKey(java.lang.String, int, java.lang.String.substring(0, int), dagger.internal.Keys.java.lang.String);\n} else {\n    return null;\n}"},"status":0},{"failures":[],"tindex":83,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"dagger.internal.Keys:251","type":"CtReturnImpl","sourcecode":"return ((java.lang.String.indexOf('<', int)) == (-1)) && ((java.lang.String.indexOf('[', int)) == (-1)) ? java.lang.String.substring(int) : null"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:198","type":"CtIfImpl","sourcecode":"if (dagger.internal.Keys.dagger.internal.Keys.substringStartsWith(java.lang.String, int, dagger.internal.Keys.java.lang.String)) {\n    return dagger.internal.Keys.dagger.internal.Keys.extractKey(java.lang.String, int, java.lang.String.substring(0, int), dagger.internal.Keys.java.lang.String);\n} else {\n    return null;\n}"},"status":0},{"failures":[],"tindex":84,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"dagger.internal.Keys:251","type":"CtReturnImpl","sourcecode":"return ((java.lang.String.indexOf('<', int)) == (-1)) && ((java.lang.String.indexOf('[', int)) == (-1)) ? java.lang.String.substring(int) : null"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:198","type":"CtIfImpl","sourcecode":"if (dagger.internal.Keys.dagger.internal.Keys.substringStartsWith(java.lang.String, int, dagger.internal.Keys.java.lang.String)) {\n    return dagger.internal.Keys.dagger.internal.Keys.extractKey(java.lang.String, int, java.lang.String.substring(0, int), dagger.internal.Keys.java.lang.String);\n} else {\n    return null;\n}"},"status":0},{"failures":[],"tindex":85,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"dagger.ObjectGraph:134","type":"CtReturnImpl","sourcecode":"return dagger.ObjectGraph.DaggerObjectGraph.dagger.ObjectGraph.DaggerObjectGraph.makeGraph(null, dagger.internal.Loader, java.lang.Object[])"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:198","type":"CtIfImpl","sourcecode":"if (dagger.internal.Keys.dagger.internal.Keys.substringStartsWith(java.lang.String, int, dagger.internal.Keys.java.lang.String)) {\n    return dagger.internal.Keys.dagger.internal.Keys.extractKey(java.lang.String, int, java.lang.String.substring(0, int), dagger.internal.Keys.java.lang.String);\n} else {\n    return null;\n}"},"status":-2},{"failures":[],"tindex":86,"variableMapping":{"delegatePrefix":"key","prefix":"key","start":"start","key":"key"},"series":0,"name":"add","transplant":{"position":"dagger.internal.Keys:228","type":"CtReturnImpl","sourcecode":"return java.lang.String + (java.lang.String.substring((int + (java.lang.String.length())), ((java.lang.String.length()) - 1)))"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:198","type":"CtIfImpl","sourcecode":"if (dagger.internal.Keys.dagger.internal.Keys.substringStartsWith(java.lang.String, int, dagger.internal.Keys.java.lang.String)) {\n    return dagger.internal.Keys.dagger.internal.Keys.extractKey(java.lang.String, int, java.lang.String.substring(0, int), dagger.internal.Keys.java.lang.String);\n} else {\n    return null;\n}"},"status":-2},{"failures":[],"tindex":87,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"dagger.internal.Keys:251","type":"CtReturnImpl","sourcecode":"return ((java.lang.String.indexOf('<', int)) == (-1)) && ((java.lang.String.indexOf('[', int)) == (-1)) ? java.lang.String.substring(int) : null"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:198","type":"CtIfImpl","sourcecode":"if (dagger.internal.Keys.dagger.internal.Keys.substringStartsWith(java.lang.String, int, dagger.internal.Keys.java.lang.String)) {\n    return dagger.internal.Keys.dagger.internal.Keys.extractKey(java.lang.String, int, java.lang.String.substring(0, int), dagger.internal.Keys.java.lang.String);\n} else {\n    return null;\n}"},"status":-2},{"failures":[],"tindex":88,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:141","type":"CtReturnImpl","sourcecode":"return (java.lang.String) != null ? java.lang.String : java.lang.String"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:198","type":"CtIfImpl","sourcecode":"if (dagger.internal.Keys.dagger.internal.Keys.substringStartsWith(java.lang.String, int, dagger.internal.Keys.java.lang.String)) {\n    return dagger.internal.Keys.dagger.internal.Keys.extractKey(java.lang.String, int, java.lang.String.substring(0, int), dagger.internal.Keys.java.lang.String);\n} else {\n    return null;\n}"},"status":-2},{"failures":[],"tindex":89,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"dagger.internal.ThrowingErrorHandler:29","type":"CtLocalVariableImpl","sourcecode":"java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:198","type":"CtIfImpl","sourcecode":"if (dagger.internal.Keys.dagger.internal.Keys.substringStartsWith(java.lang.String, int, dagger.internal.Keys.java.lang.String)) {\n    return dagger.internal.Keys.dagger.internal.Keys.extractKey(java.lang.String, int, java.lang.String.substring(0, int), dagger.internal.Keys.java.lang.String);\n} else {\n    return null;\n}"},"status":-2},{"failures":[],"tindex":90,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:198","type":"CtIfImpl","sourcecode":"if (dagger.internal.Keys.dagger.internal.Keys.substringStartsWith(java.lang.String, int, dagger.internal.Keys.java.lang.String)) {\n    return dagger.internal.Keys.dagger.internal.Keys.extractKey(java.lang.String, int, java.lang.String.substring(0, int), dagger.internal.Keys.java.lang.String);\n} else {\n    return null;\n}"},"status":-2},{"failureDictionary":{}},{"memory":2012,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":2,"vendor":"AMD","model":"Opteron","mhz":2390},{"core":2,"vendor":"AMD","model":"Opteron","mhz":2390}],"os.version":"3.2.0-4-amd64"}]
