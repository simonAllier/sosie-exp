[{"failures":[],"tindex":1,"variableMapping":{"bindings":"fieldBindings","length":"i","fields":"fields"},"series":0,"name":"replace","transplant":{"position":"dagger.internal.loaders.ReflectiveStaticInjection:51","type":"CtTryImpl","sourcecode":"try {\n    for (int int = 0 ; int < (java.lang.reflect.Field[].int) ; int++) {\n        java.lang.reflect.Field[][int].set(null, dagger.internal.Binding<?>[][int].get());\n    }\n} catch (java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.AssertionError(java.lang.IllegalAccessException);\n}"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:73","type":"CtIfImpl","sourcecode":"if ((dagger.internal.Binding<?>[][int]) == null) {\n    dagger.internal.Binding<?>[][int] = dagger.internal.Linker.requestBinding(java.lang.String[][int], java.lang.reflect.Field[][int], java.lang.ClassLoader);\n} "},"status":0},{"failures":[],"tindex":2,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:76","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:73","type":"CtIfImpl","sourcecode":"if ((dagger.internal.Binding<?>[][int]) == null) {\n    dagger.internal.Binding<?>[][int] = dagger.internal.Linker.requestBinding(java.lang.String[][int], java.lang.reflect.Field[][int], java.lang.ClassLoader);\n} "},"status":0},{"failures":[],"tindex":3,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"dagger.internal.loaders.ReflectiveStaticInjection:51","type":"CtTryImpl","sourcecode":"try {\n    for (int int = 0 ; int < (java.lang.reflect.Field[].int) ; int++) {\n        java.lang.reflect.Field[][int].set(null, dagger.internal.Binding<?>[][int].get());\n    }\n} catch (java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.AssertionError(java.lang.IllegalAccessException);\n}"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:73","type":"CtIfImpl","sourcecode":"if ((dagger.internal.Binding<?>[][int]) == null) {\n    dagger.internal.Binding<?>[][int] = dagger.internal.Linker.requestBinding(java.lang.String[][int], java.lang.reflect.Field[][int], java.lang.ClassLoader);\n} "},"status":-2},{"failures":[],"tindex":4,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"dagger.internal.ProblemDetector:55","type":"CtContinueImpl","sourcecode":"continue"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:73","type":"CtIfImpl","sourcecode":"if ((dagger.internal.Binding<?>[][int]) == null) {\n    dagger.internal.Binding<?>[][int] = dagger.internal.Linker.requestBinding(java.lang.String[][int], java.lang.reflect.Field[][int], java.lang.ClassLoader);\n} "},"status":-2},{"failures":[],"tindex":5,"variableMapping":{"this":"linker"},"series":0,"name":"add","transplant":{"position":"dagger.internal.Linker:109","type":"CtInvocationImpl","sourcecode":"dagger.internal.Linker.linkRequested()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:73","type":"CtIfImpl","sourcecode":"if ((dagger.internal.Binding<?>[][int]) == null) {\n    dagger.internal.Binding<?>[][int] = dagger.internal.Linker.requestBinding(java.lang.String[][int], java.lang.reflect.Field[][int], java.lang.ClassLoader);\n} "},"status":0},{"failures":[],"tindex":6,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"dagger.ObjectGraph:227","type":"CtNewClassImpl","sourcecode":"new dagger.internal.ProblemDetector()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:73","type":"CtIfImpl","sourcecode":"if ((dagger.internal.Binding<?>[][int]) == null) {\n    dagger.internal.Binding<?>[][int] = dagger.internal.Linker.requestBinding(java.lang.String[][int], java.lang.reflect.Field[][int], java.lang.ClassLoader);\n} "},"status":0},{"failures":[],"tindex":7,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"dagger.internal.ArrayQueue:127","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Sorry, queue too big\");\n"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:73","type":"CtIfImpl","sourcecode":"if ((dagger.internal.Binding<?>[][int]) == null) {\n    dagger.internal.Binding<?>[][int] = dagger.internal.Linker.requestBinding(java.lang.String[][int], java.lang.reflect.Field[][int], java.lang.ClassLoader);\n} "},"status":-2},{"failures":[],"tindex":8,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"dagger.internal.Keys:168","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"[]\")"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:73","type":"CtIfImpl","sourcecode":"if ((dagger.internal.Binding<?>[][int]) == null) {\n    dagger.internal.Binding<?>[][int] = dagger.internal.Linker.requestBinding(java.lang.String[][int], java.lang.reflect.Field[][int], java.lang.ClassLoader);\n} "},"status":-2},{"failures":[],"tindex":9,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:73","type":"CtIfImpl","sourcecode":"if ((dagger.internal.Binding<?>[][int]) == null) {\n    dagger.internal.Binding<?>[][int] = dagger.internal.Linker.requestBinding(java.lang.String[][int], java.lang.reflect.Field[][int], java.lang.ClassLoader);\n} "},"status":0},{"failures":[],"tindex":10,"variableMapping":{"linker":"contribution","staticInjection":"contribution"},"series":0,"name":"replace","transplant":{"position":"dagger.ObjectGraph:214","type":"CtInvocationImpl","sourcecode":"dagger.internal.StaticInjection.attach(dagger.internal.Linker)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.SetBinding:109","type":"CtIfImpl","sourcecode":"if (dagger.internal.Binding<?>.java.lang.String.equals(java.lang.String)) {\n    java.util.List<T>.addAll(((java.util.Set<T>)(java.lang.Object)));\n} else {\n    java.util.List<T>.add(((T)(java.lang.Object)));\n}"},"status":-2},{"failures":[],"tindex":11,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:207","type":"CtAssignmentImpl","sourcecode":"java.lang.String = null"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.SetBinding:109","type":"CtIfImpl","sourcecode":"if (dagger.internal.Binding<?>.java.lang.String.equals(java.lang.String)) {\n    java.util.List<T>.addAll(((java.util.Set<T>)(java.lang.Object)));\n} else {\n    java.util.List<T>.add(((T)(java.lang.Object)));\n}"},"status":-2},{"failures":[],"tindex":12,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"dagger.internal.Keys:155","type":"CtInvocationImpl","sourcecode":"dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.ParameterizedType.getRawType(), java.lang.StringBuilder, true)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.SetBinding:109","type":"CtIfImpl","sourcecode":"if (dagger.internal.Binding<?>.java.lang.String.equals(java.lang.String)) {\n    java.util.List<T>.addAll(((java.util.Set<T>)(java.lang.Object)));\n} else {\n    java.util.List<T>.add(((T)(java.lang.Object)));\n}"},"status":-2},{"failures":[],"tindex":13,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"dagger.ObjectGraph:257","type":"CtInvocationImpl","sourcecode":"dagger.ObjectGraph.DaggerObjectGraph.linkStaticInjections()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.SetBinding:109","type":"CtIfImpl","sourcecode":"if (dagger.internal.Binding<?>.java.lang.String.equals(java.lang.String)) {\n    java.util.List<T>.addAll(((java.util.Set<T>)(java.lang.Object)));\n} else {\n    java.util.List<T>.add(((T)(java.lang.Object)));\n}"},"status":-2},{"failures":[],"tindex":14,"variableMapping":{"resolvedBinding":"contributor","binding":"contributor"},"series":0,"name":"add","transplant":{"position":"dagger.internal.Linker:144","type":"CtInvocationImpl","sourcecode":"dagger.internal.Binding<?>.setDependedOn(dagger.internal.Binding<?>.dependedOn())"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.SetBinding:109","type":"CtIfImpl","sourcecode":"if (dagger.internal.Binding<?>.java.lang.String.equals(java.lang.String)) {\n    java.util.List<T>.addAll(((java.util.Set<T>)(java.lang.Object)));\n} else {\n    java.util.List<T>.add(((T)(java.lang.Object)));\n}"},"status":0},{"failures":[],"tindex":15,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"dagger.internal.Keys:157","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\")"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.SetBinding:109","type":"CtIfImpl","sourcecode":"if (dagger.internal.Binding<?>.java.lang.String.equals(java.lang.String)) {\n    java.util.List<T>.addAll(((java.util.Set<T>)(java.lang.Object)));\n} else {\n    java.util.List<T>.add(((T)(java.lang.Object)));\n}"},"status":-2},{"failures":[],"tindex":16,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"dagger.internal.ProblemDetector:79","type":"CtInvocationImpl","sourcecode":"dagger.internal.Binding<?>.setVisiting(false)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.SetBinding:109","type":"CtIfImpl","sourcecode":"if (dagger.internal.Binding<?>.java.lang.String.equals(java.lang.String)) {\n    java.util.List<T>.addAll(((java.util.Set<T>)(java.lang.Object)));\n} else {\n    java.util.List<T>.add(((T)(java.lang.Object)));\n}"},"status":-2},{"failures":[],"tindex":17,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"dagger.internal.Linker:157","type":"CtInvocationImpl","sourcecode":"dagger.internal.Linker.addError((((\"Unsupported: \" + (java.lang.UnsupportedOperationException.getMessage())) + \" required by \") + (dagger.internal.Binding<?>.java.lang.Object)))"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.SetBinding:109","type":"CtIfImpl","sourcecode":"if (dagger.internal.Binding<?>.java.lang.String.equals(java.lang.String)) {\n    java.util.List<T>.addAll(((java.util.Set<T>)(java.lang.Object)));\n} else {\n    java.util.List<T>.add(((T)(java.lang.Object)));\n}"},"status":-2},{"failures":[],"tindex":18,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"dagger.internal.SetBinding:109","type":"CtIfImpl","sourcecode":"if (dagger.internal.Binding<?>.java.lang.String.equals(java.lang.String)) {\n    java.util.List<T>.addAll(((java.util.Set<T>)(java.lang.Object)));\n} else {\n    java.util.List<T>.add(((T)(java.lang.Object)));\n}"},"status":0},{"failures":[],"tindex":19,"variableMapping":{"constructor":"injectedConstructor"},"series":0,"name":"replace","transplant":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:93","type":"CtIfImpl","sourcecode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.UnsupportedOperationException();\n} "},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:172","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has too many injectable constructors\");\n} "},"status":0},{"failures":[],"tindex":20,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:179","type":"CtTryImpl","sourcecode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getDeclaredConstructor();\n} catch (java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n}"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:172","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has too many injectable constructors\");\n} "},"status":0},{"failures":[],"tindex":21,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:197","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Constructor<T>.setAccessible(true)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:172","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has too many injectable constructors\");\n} "},"status":0},{"failures":[],"tindex":22,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"dagger.internal.Keys:81","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:172","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has too many injectable constructors\");\n} "},"status":-2},{"failures":[],"tindex":23,"variableMapping":{"injectedConstructor":"injectedConstructor"},"series":0,"name":"add","transplant":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:197","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Constructor<T>.setAccessible(true)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:172","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has too many injectable constructors\");\n} "},"status":0},{"failures":[],"tindex":24,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:197","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Constructor<T>.setAccessible(true)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:172","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has too many injectable constructors\");\n} "},"status":0},{"failures":[],"tindex":25,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:93","type":"CtIfImpl","sourcecode":"if ((java.lang.reflect.Constructor<T>) == null) {\n    throw new java.lang.UnsupportedOperationException();\n} "},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:172","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has too many injectable constructors\");\n} "},"status":0},{"failures":[],"tindex":26,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"dagger.internal.SetBinding:96","type":"CtForImpl","sourcecode":"for (dagger.internal.SetBinding<T> dagger.internal.SetBinding<T> = this ; dagger.internal.SetBinding<T> != null ; dagger.internal.SetBinding<T> = dagger.internal.SetBinding<T>.dagger.internal.SetBinding<T>) {\n    int += dagger.internal.SetBinding<T>.java.util.List<dagger.internal.Binding<?>>.size();\n}"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:172","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has too many injectable constructors\");\n} "},"status":-2},{"failures":[],"tindex":27,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:172","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Constructor<T> != null) {\n    throw new dagger.internal.Binding.InvalidBindingException(java.lang.Class<T>.getName() , \"has too many injectable constructors\");\n} "},"status":0},{"failures":[],"tindex":28,"variableMapping":{"initialCapacity":"length"},"series":0,"name":"replace","transplant":{"position":"dagger.internal.ArrayQueue:111","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int >>>= 1;\n"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:140","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.Class) {\n    java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type));\n    if (java.lang.Class<?>.isArray()) {\n        dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.Class<?>.getComponentType(), java.lang.StringBuilder, false);\n        java.lang.StringBuilder.append(\"[]\");\n    } else if (java.lang.Class<?>.isPrimitive()) {\n        if (boolean) {\n            throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + (java.lang.Class<?>.getName())));\n        } \n        java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n    } else {\n        java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n    }\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.ParameterizedType.getRawType(), java.lang.StringBuilder, true);\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    java.lang.StringBuilder.append(\"<\");\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        if (int != 0) {\n            java.lang.StringBuilder.append(\", \");\n        } \n        dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true);\n    }\n    java.lang.StringBuilder.append(\">\");\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.StringBuilder, false);\n    java.lang.StringBuilder.append(\"[]\");\n} else {\n    throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type));\n}"},"status":-2},{"failures":[],"tindex":29,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"dagger.internal.Keys:100","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\">\")"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:140","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.Class) {\n    java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type));\n    if (java.lang.Class<?>.isArray()) {\n        dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.Class<?>.getComponentType(), java.lang.StringBuilder, false);\n        java.lang.StringBuilder.append(\"[]\");\n    } else if (java.lang.Class<?>.isPrimitive()) {\n        if (boolean) {\n            throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + (java.lang.Class<?>.getName())));\n        } \n        java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n    } else {\n        java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n    }\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.ParameterizedType.getRawType(), java.lang.StringBuilder, true);\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    java.lang.StringBuilder.append(\"<\");\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        if (int != 0) {\n            java.lang.StringBuilder.append(\", \");\n        } \n        dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true);\n    }\n    java.lang.StringBuilder.append(\">\");\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.StringBuilder, false);\n    java.lang.StringBuilder.append(\"[]\");\n} else {\n    throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type));\n}"},"status":0},{"failures":[],"tindex":30,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"dagger.internal.SetBinding:135","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    java.lang.StringBuilder.append(\",\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:140","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.Class) {\n    java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type));\n    if (java.lang.Class<?>.isArray()) {\n        dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.Class<?>.getComponentType(), java.lang.StringBuilder, false);\n        java.lang.StringBuilder.append(\"[]\");\n    } else if (java.lang.Class<?>.isPrimitive()) {\n        if (boolean) {\n            throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + (java.lang.Class<?>.getName())));\n        } \n        java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n    } else {\n        java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n    }\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.ParameterizedType.getRawType(), java.lang.StringBuilder, true);\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    java.lang.StringBuilder.append(\"<\");\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        if (int != 0) {\n            java.lang.StringBuilder.append(\", \");\n        } \n        dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true);\n    }\n    java.lang.StringBuilder.append(\">\");\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.StringBuilder, false);\n    java.lang.StringBuilder.append(\"[]\");\n} else {\n    throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type));\n}"},"status":-2},{"failures":[],"tindex":31,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"dagger.internal.Linker:82","type":"CtIfImpl","sourcecode":"if ((java.util.Map<java.lang.String, dagger.internal.Binding<?>>) != null) {\n    throw new java.lang.IllegalStateException(\"Cannot install further bindings after calling linkAll().\");\n} "},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:140","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.Class) {\n    java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type));\n    if (java.lang.Class<?>.isArray()) {\n        dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.Class<?>.getComponentType(), java.lang.StringBuilder, false);\n        java.lang.StringBuilder.append(\"[]\");\n    } else if (java.lang.Class<?>.isPrimitive()) {\n        if (boolean) {\n            throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + (java.lang.Class<?>.getName())));\n        } \n        java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n    } else {\n        java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n    }\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.ParameterizedType.getRawType(), java.lang.StringBuilder, true);\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    java.lang.StringBuilder.append(\"<\");\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        if (int != 0) {\n            java.lang.StringBuilder.append(\", \");\n        } \n        dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true);\n    }\n    java.lang.StringBuilder.append(\">\");\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.StringBuilder, false);\n    java.lang.StringBuilder.append(\"[]\");\n} else {\n    throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type));\n}"},"status":-2},{"failures":[],"tindex":32,"variableMapping":{"result":"result","i":"length"},"series":0,"name":"add","transplant":{"position":"dagger.internal.Keys:159","type":"CtIfImpl","sourcecode":"if (int != 0) {\n    java.lang.StringBuilder.append(\", \");\n} "},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:140","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.Class) {\n    java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type));\n    if (java.lang.Class<?>.isArray()) {\n        dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.Class<?>.getComponentType(), java.lang.StringBuilder, false);\n        java.lang.StringBuilder.append(\"[]\");\n    } else if (java.lang.Class<?>.isPrimitive()) {\n        if (boolean) {\n            throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + (java.lang.Class<?>.getName())));\n        } \n        java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n    } else {\n        java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n    }\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.ParameterizedType.getRawType(), java.lang.StringBuilder, true);\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    java.lang.StringBuilder.append(\"<\");\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        if (int != 0) {\n            java.lang.StringBuilder.append(\", \");\n        } \n        dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true);\n    }\n    java.lang.StringBuilder.append(\">\");\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.StringBuilder, false);\n    java.lang.StringBuilder.append(\"[]\");\n} else {\n    throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type));\n}"},"status":-2},{"failures":[],"tindex":33,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"dagger.internal.Keys:80","type":"CtInvocationImpl","sourcecode":"dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type, java.lang.StringBuilder, true)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:140","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.Class) {\n    java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type));\n    if (java.lang.Class<?>.isArray()) {\n        dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.Class<?>.getComponentType(), java.lang.StringBuilder, false);\n        java.lang.StringBuilder.append(\"[]\");\n    } else if (java.lang.Class<?>.isPrimitive()) {\n        if (boolean) {\n            throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + (java.lang.Class<?>.getName())));\n        } \n        java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n    } else {\n        java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n    }\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.ParameterizedType.getRawType(), java.lang.StringBuilder, true);\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    java.lang.StringBuilder.append(\"<\");\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        if (int != 0) {\n            java.lang.StringBuilder.append(\", \");\n        } \n        dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true);\n    }\n    java.lang.StringBuilder.append(\">\");\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.StringBuilder, false);\n    java.lang.StringBuilder.append(\"[]\");\n} else {\n    throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type));\n}"},"status":0},{"failures":[],"tindex":34,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"dagger.internal.Keys:165","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.StringBuilder, false);\n    java.lang.StringBuilder.append(\"[]\");\n} else {\n    throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type));\n}"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:140","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.Class) {\n    java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type));\n    if (java.lang.Class<?>.isArray()) {\n        dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.Class<?>.getComponentType(), java.lang.StringBuilder, false);\n        java.lang.StringBuilder.append(\"[]\");\n    } else if (java.lang.Class<?>.isPrimitive()) {\n        if (boolean) {\n            throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + (java.lang.Class<?>.getName())));\n        } \n        java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n    } else {\n        java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n    }\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.ParameterizedType.getRawType(), java.lang.StringBuilder, true);\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    java.lang.StringBuilder.append(\"<\");\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        if (int != 0) {\n            java.lang.StringBuilder.append(\", \");\n        } \n        dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true);\n    }\n    java.lang.StringBuilder.append(\">\");\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.StringBuilder, false);\n    java.lang.StringBuilder.append(\"[]\");\n} else {\n    throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type));\n}"},"status":0},{"failures":[],"tindex":35,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"dagger.internal.loaders.ReflectiveStaticInjection:61","type":"CtLocalVariableImpl","sourcecode":"java.util.List<java.lang.reflect.Field> java.util.List<java.lang.reflect.Field> = new java.util.ArrayList<java.lang.reflect.Field>()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:140","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.Class) {\n    java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type));\n    if (java.lang.Class<?>.isArray()) {\n        dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.Class<?>.getComponentType(), java.lang.StringBuilder, false);\n        java.lang.StringBuilder.append(\"[]\");\n    } else if (java.lang.Class<?>.isPrimitive()) {\n        if (boolean) {\n            throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + (java.lang.Class<?>.getName())));\n        } \n        java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n    } else {\n        java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n    }\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.ParameterizedType.getRawType(), java.lang.StringBuilder, true);\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    java.lang.StringBuilder.append(\"<\");\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        if (int != 0) {\n            java.lang.StringBuilder.append(\", \");\n        } \n        dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true);\n    }\n    java.lang.StringBuilder.append(\">\");\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.StringBuilder, false);\n    java.lang.StringBuilder.append(\"[]\");\n} else {\n    throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type));\n}"},"status":0},{"failures":[],"tindex":36,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Keys:140","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.Class) {\n    java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type));\n    if (java.lang.Class<?>.isArray()) {\n        dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.Class<?>.getComponentType(), java.lang.StringBuilder, false);\n        java.lang.StringBuilder.append(\"[]\");\n    } else if (java.lang.Class<?>.isPrimitive()) {\n        if (boolean) {\n            throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + (java.lang.Class<?>.getName())));\n        } \n        java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n    } else {\n        java.lang.StringBuilder.append(java.lang.Class<?>.getName());\n    }\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.ParameterizedType.getRawType(), java.lang.StringBuilder, true);\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    java.lang.StringBuilder.append(\"<\");\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        if (int != 0) {\n            java.lang.StringBuilder.append(\", \");\n        } \n        dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.Type[][int], java.lang.StringBuilder, true);\n    }\n    java.lang.StringBuilder.append(\">\");\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    dagger.internal.Keys.dagger.internal.Keys.typeToString(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.StringBuilder, false);\n    java.lang.StringBuilder.append(\"[]\");\n} else {\n    throw new java.lang.UnsupportedOperationException((\"Uninjectable type \" + java.lang.reflect.Type));\n}"},"status":0},{"failures":[],"tindex":37,"variableMapping":{"errors":"keys"},"series":0,"name":"replace","transplant":{"position":"dagger.internal.Linker:184","type":"CtInvocationImpl","sourcecode":"java.util.List<java.lang.String>.clear()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:217","type":"CtIfImpl","sourcecode":"if (dagger.internal.Keys.dagger.internal.Keys.isPlatformType(java.lang.Class<? super T>.getName())) {\n    java.lang.Class<? super T> = null;\n} else {\n    java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.getMembersKey(java.lang.Class<? super T>));\n}"},"status":0},{"failures":[],"tindex":38,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"dagger.internal.Linker:194","type":"CtIfImpl","sourcecode":"if (!java.lang.Thread.(java.lang.Thread.holdsLock(this)))\n    throw new java.lang.AssertionError();\n"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:217","type":"CtIfImpl","sourcecode":"if (dagger.internal.Keys.dagger.internal.Keys.isPlatformType(java.lang.Class<? super T>.getName())) {\n    java.lang.Class<? super T> = null;\n} else {\n    java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.getMembersKey(java.lang.Class<? super T>));\n}"},"status":-2},{"failures":[],"tindex":39,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"dagger.ObjectGraph:299","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?> != null)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:217","type":"CtIfImpl","sourcecode":"if (dagger.internal.Keys.dagger.internal.Keys.isPlatformType(java.lang.Class<? super T>.getName())) {\n    java.lang.Class<? super T> = null;\n} else {\n    java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.getMembersKey(java.lang.Class<? super T>));\n}"},"status":-2},{"failures":[],"tindex":40,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"dagger.internal.ArrayQueue:112","type":"CtOperatorAssignmentImpl","sourcecode":"int >>>= 1"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:217","type":"CtIfImpl","sourcecode":"if (dagger.internal.Keys.dagger.internal.Keys.isPlatformType(java.lang.Class<? super T>.getName())) {\n    java.lang.Class<? super T> = null;\n} else {\n    java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.getMembersKey(java.lang.Class<? super T>));\n}"},"status":-2},{"failures":[],"tindex":41,"variableMapping":{"moduleClass":"supertype"},"series":0,"name":"add","transplant":{"position":"dagger.ObjectGraph:299","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?> != null)\n    break;\n"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:217","type":"CtIfImpl","sourcecode":"if (dagger.internal.Keys.dagger.internal.Keys.isPlatformType(java.lang.Class<? super T>.getName())) {\n    java.lang.Class<? super T> = null;\n} else {\n    java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.getMembersKey(java.lang.Class<? super T>));\n}"},"status":-2},{"failures":[],"tindex":42,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"dagger.internal.Linker:194","type":"CtIfImpl","sourcecode":"if (!java.lang.Thread.(java.lang.Thread.holdsLock(this)))\n    throw new java.lang.AssertionError();\n"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:217","type":"CtIfImpl","sourcecode":"if (dagger.internal.Keys.dagger.internal.Keys.isPlatformType(java.lang.Class<? super T>.getName())) {\n    java.lang.Class<? super T> = null;\n} else {\n    java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.getMembersKey(java.lang.Class<? super T>));\n}"},"status":-2},{"failures":[],"tindex":43,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"dagger.internal.Linker:184","type":"CtInvocationImpl","sourcecode":"java.util.List<java.lang.String>.clear()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:217","type":"CtIfImpl","sourcecode":"if (dagger.internal.Keys.dagger.internal.Keys.isPlatformType(java.lang.Class<? super T>.getName())) {\n    java.lang.Class<? super T> = null;\n} else {\n    java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.getMembersKey(java.lang.Class<? super T>));\n}"},"status":-2},{"failures":[],"tindex":44,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"dagger.internal.SetBinding:108","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object = dagger.internal.Binding<?>.get()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:217","type":"CtIfImpl","sourcecode":"if (dagger.internal.Keys.dagger.internal.Keys.isPlatformType(java.lang.Class<? super T>.getName())) {\n    java.lang.Class<? super T> = null;\n} else {\n    java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.getMembersKey(java.lang.Class<? super T>));\n}"},"status":-2},{"failures":[],"tindex":45,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:217","type":"CtIfImpl","sourcecode":"if (dagger.internal.Keys.dagger.internal.Keys.isPlatformType(java.lang.Class<? super T>.getName())) {\n    java.lang.Class<? super T> = null;\n} else {\n    java.util.List<java.lang.String>.add(dagger.internal.Keys.dagger.internal.Keys.getMembersKey(java.lang.Class<? super T>));\n}"},"status":0},{"failures":[],"tindex":46,"variableMapping":{"values":"bindings","this":"this"},"series":0,"name":"replace","transplant":{"position":"dagger.internal.ProblemDetector:86","type":"CtInvocationImpl","sourcecode":"dagger.internal.ProblemDetector.detectUnusedBinding(java.util.Collection<dagger.internal.Binding<?>>)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:53","type":"CtForEachImpl","sourcecode":"for (dagger.internal.Binding<?> dagger.internal.Binding<?> : java.util.Collection<dagger.internal.Binding<?>>) {\n    if (dagger.internal.Binding<?>.isCycleFree()) {\n        continue;\n    } \n    if (dagger.internal.Binding<?>.isVisiting()) {\n        int int = java.util.List<dagger.internal.Binding<?>>.indexOf(dagger.internal.Binding<?>);\n        java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append(\"Dependency cycle:\");\n        for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n            java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n        }\n        java.lang.StringBuilder.append(\"\\n    \").append(0).append(\". \").append(dagger.internal.Binding<?>.java.lang.String);\n        throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString());\n    } \n    dagger.internal.Binding<?>.setVisiting(true);\n    java.util.List<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n    try {\n        dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> = new dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>();\n        dagger.internal.Binding<?>.getDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>);\n        dagger.internal.ProblemDetector.dagger.internal.ProblemDetector.detectCircularDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, java.util.List<dagger.internal.Binding<?>>);\n        dagger.internal.Binding<?>.setCycleFree(true);\n    } finally {\n        java.util.List<dagger.internal.Binding<?>>.remove(((java.util.List<dagger.internal.Binding<?>>.size()) - 1));\n        dagger.internal.Binding<?>.setVisiting(false);\n    }\n}"},"status":-2},{"failures":[],"tindex":47,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"dagger.ObjectGraph:227","type":"CtNewClassImpl","sourcecode":"new dagger.internal.ProblemDetector()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:53","type":"CtForEachImpl","sourcecode":"for (dagger.internal.Binding<?> dagger.internal.Binding<?> : java.util.Collection<dagger.internal.Binding<?>>) {\n    if (dagger.internal.Binding<?>.isCycleFree()) {\n        continue;\n    } \n    if (dagger.internal.Binding<?>.isVisiting()) {\n        int int = java.util.List<dagger.internal.Binding<?>>.indexOf(dagger.internal.Binding<?>);\n        java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append(\"Dependency cycle:\");\n        for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n            java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n        }\n        java.lang.StringBuilder.append(\"\\n    \").append(0).append(\". \").append(dagger.internal.Binding<?>.java.lang.String);\n        throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString());\n    } \n    dagger.internal.Binding<?>.setVisiting(true);\n    java.util.List<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n    try {\n        dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> = new dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>();\n        dagger.internal.Binding<?>.getDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>);\n        dagger.internal.ProblemDetector.dagger.internal.ProblemDetector.detectCircularDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, java.util.List<dagger.internal.Binding<?>>);\n        dagger.internal.Binding<?>.setCycleFree(true);\n    } finally {\n        java.util.List<dagger.internal.Binding<?>>.remove(((java.util.List<dagger.internal.Binding<?>>.size()) - 1));\n        dagger.internal.Binding<?>.setVisiting(false);\n    }\n}"},"status":0},{"failures":[],"tindex":48,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"dagger.internal.ProblemDetector:75","type":"CtInvocationImpl","sourcecode":"dagger.internal.ProblemDetector.dagger.internal.ProblemDetector.detectCircularDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, java.util.List<dagger.internal.Binding<?>>)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:53","type":"CtForEachImpl","sourcecode":"for (dagger.internal.Binding<?> dagger.internal.Binding<?> : java.util.Collection<dagger.internal.Binding<?>>) {\n    if (dagger.internal.Binding<?>.isCycleFree()) {\n        continue;\n    } \n    if (dagger.internal.Binding<?>.isVisiting()) {\n        int int = java.util.List<dagger.internal.Binding<?>>.indexOf(dagger.internal.Binding<?>);\n        java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append(\"Dependency cycle:\");\n        for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n            java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n        }\n        java.lang.StringBuilder.append(\"\\n    \").append(0).append(\". \").append(dagger.internal.Binding<?>.java.lang.String);\n        throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString());\n    } \n    dagger.internal.Binding<?>.setVisiting(true);\n    java.util.List<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n    try {\n        dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> = new dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>();\n        dagger.internal.Binding<?>.getDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>);\n        dagger.internal.ProblemDetector.dagger.internal.ProblemDetector.detectCircularDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, java.util.List<dagger.internal.Binding<?>>);\n        dagger.internal.Binding<?>.setCycleFree(true);\n    } finally {\n        java.util.List<dagger.internal.Binding<?>>.remove(((java.util.List<dagger.internal.Binding<?>>.size()) - 1));\n        dagger.internal.Binding<?>.setVisiting(false);\n    }\n}"},"status":-2},{"failures":[],"tindex":49,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"dagger.internal.Linker:143","type":"CtInvocationImpl","sourcecode":"dagger.internal.Binding<?>.setLibrary(dagger.internal.Binding<?>.library())"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:53","type":"CtForEachImpl","sourcecode":"for (dagger.internal.Binding<?> dagger.internal.Binding<?> : java.util.Collection<dagger.internal.Binding<?>>) {\n    if (dagger.internal.Binding<?>.isCycleFree()) {\n        continue;\n    } \n    if (dagger.internal.Binding<?>.isVisiting()) {\n        int int = java.util.List<dagger.internal.Binding<?>>.indexOf(dagger.internal.Binding<?>);\n        java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append(\"Dependency cycle:\");\n        for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n            java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n        }\n        java.lang.StringBuilder.append(\"\\n    \").append(0).append(\". \").append(dagger.internal.Binding<?>.java.lang.String);\n        throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString());\n    } \n    dagger.internal.Binding<?>.setVisiting(true);\n    java.util.List<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n    try {\n        dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> = new dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>();\n        dagger.internal.Binding<?>.getDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>);\n        dagger.internal.ProblemDetector.dagger.internal.ProblemDetector.detectCircularDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, java.util.List<dagger.internal.Binding<?>>);\n        dagger.internal.Binding<?>.setCycleFree(true);\n    } finally {\n        java.util.List<dagger.internal.Binding<?>>.remove(((java.util.List<dagger.internal.Binding<?>>.size()) - 1));\n        dagger.internal.Binding<?>.setVisiting(false);\n    }\n}"},"status":-2},{"failures":[],"tindex":50,"variableMapping":{"values":"bindings","this":"this"},"series":0,"name":"add","transplant":{"position":"dagger.internal.ProblemDetector:86","type":"CtInvocationImpl","sourcecode":"dagger.internal.ProblemDetector.detectUnusedBinding(java.util.Collection<dagger.internal.Binding<?>>)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:53","type":"CtForEachImpl","sourcecode":"for (dagger.internal.Binding<?> dagger.internal.Binding<?> : java.util.Collection<dagger.internal.Binding<?>>) {\n    if (dagger.internal.Binding<?>.isCycleFree()) {\n        continue;\n    } \n    if (dagger.internal.Binding<?>.isVisiting()) {\n        int int = java.util.List<dagger.internal.Binding<?>>.indexOf(dagger.internal.Binding<?>);\n        java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append(\"Dependency cycle:\");\n        for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n            java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n        }\n        java.lang.StringBuilder.append(\"\\n    \").append(0).append(\". \").append(dagger.internal.Binding<?>.java.lang.String);\n        throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString());\n    } \n    dagger.internal.Binding<?>.setVisiting(true);\n    java.util.List<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n    try {\n        dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> = new dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>();\n        dagger.internal.Binding<?>.getDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>);\n        dagger.internal.ProblemDetector.dagger.internal.ProblemDetector.detectCircularDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, java.util.List<dagger.internal.Binding<?>>);\n        dagger.internal.Binding<?>.setCycleFree(true);\n    } finally {\n        java.util.List<dagger.internal.Binding<?>>.remove(((java.util.List<dagger.internal.Binding<?>>.size()) - 1));\n        dagger.internal.Binding<?>.setVisiting(false);\n    }\n}"},"status":-2},{"failures":[],"tindex":51,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"dagger.internal.ProblemDetector:78","type":"CtInvocationImpl","sourcecode":"java.util.List<dagger.internal.Binding<?>>.remove(((java.util.List<dagger.internal.Binding<?>>.size()) - 1))"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:53","type":"CtForEachImpl","sourcecode":"for (dagger.internal.Binding<?> dagger.internal.Binding<?> : java.util.Collection<dagger.internal.Binding<?>>) {\n    if (dagger.internal.Binding<?>.isCycleFree()) {\n        continue;\n    } \n    if (dagger.internal.Binding<?>.isVisiting()) {\n        int int = java.util.List<dagger.internal.Binding<?>>.indexOf(dagger.internal.Binding<?>);\n        java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append(\"Dependency cycle:\");\n        for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n            java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n        }\n        java.lang.StringBuilder.append(\"\\n    \").append(0).append(\". \").append(dagger.internal.Binding<?>.java.lang.String);\n        throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString());\n    } \n    dagger.internal.Binding<?>.setVisiting(true);\n    java.util.List<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n    try {\n        dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> = new dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>();\n        dagger.internal.Binding<?>.getDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>);\n        dagger.internal.ProblemDetector.dagger.internal.ProblemDetector.detectCircularDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, java.util.List<dagger.internal.Binding<?>>);\n        dagger.internal.Binding<?>.setCycleFree(true);\n    } finally {\n        java.util.List<dagger.internal.Binding<?>>.remove(((java.util.List<dagger.internal.Binding<?>>.size()) - 1));\n        dagger.internal.Binding<?>.setVisiting(false);\n    }\n}"},"status":0},{"failures":[],"tindex":52,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"dagger.internal.ProblemDetector:85","type":"CtInvocationImpl","sourcecode":"dagger.internal.ProblemDetector.detectCircularDependencies(java.util.Collection<dagger.internal.Binding<?>>)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:53","type":"CtForEachImpl","sourcecode":"for (dagger.internal.Binding<?> dagger.internal.Binding<?> : java.util.Collection<dagger.internal.Binding<?>>) {\n    if (dagger.internal.Binding<?>.isCycleFree()) {\n        continue;\n    } \n    if (dagger.internal.Binding<?>.isVisiting()) {\n        int int = java.util.List<dagger.internal.Binding<?>>.indexOf(dagger.internal.Binding<?>);\n        java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append(\"Dependency cycle:\");\n        for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n            java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n        }\n        java.lang.StringBuilder.append(\"\\n    \").append(0).append(\". \").append(dagger.internal.Binding<?>.java.lang.String);\n        throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString());\n    } \n    dagger.internal.Binding<?>.setVisiting(true);\n    java.util.List<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n    try {\n        dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> = new dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>();\n        dagger.internal.Binding<?>.getDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>);\n        dagger.internal.ProblemDetector.dagger.internal.ProblemDetector.detectCircularDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, java.util.List<dagger.internal.Binding<?>>);\n        dagger.internal.Binding<?>.setCycleFree(true);\n    } finally {\n        java.util.List<dagger.internal.Binding<?>>.remove(((java.util.List<dagger.internal.Binding<?>>.size()) - 1));\n        dagger.internal.Binding<?>.setVisiting(false);\n    }\n}"},"status":-2},{"failures":[],"tindex":53,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"dagger.internal.Linker:328","type":"CtLocalVariableImpl","sourcecode":"V V = java.util.Map<K, V>.put(K, V)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:53","type":"CtForEachImpl","sourcecode":"for (dagger.internal.Binding<?> dagger.internal.Binding<?> : java.util.Collection<dagger.internal.Binding<?>>) {\n    if (dagger.internal.Binding<?>.isCycleFree()) {\n        continue;\n    } \n    if (dagger.internal.Binding<?>.isVisiting()) {\n        int int = java.util.List<dagger.internal.Binding<?>>.indexOf(dagger.internal.Binding<?>);\n        java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append(\"Dependency cycle:\");\n        for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n            java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n        }\n        java.lang.StringBuilder.append(\"\\n    \").append(0).append(\". \").append(dagger.internal.Binding<?>.java.lang.String);\n        throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString());\n    } \n    dagger.internal.Binding<?>.setVisiting(true);\n    java.util.List<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n    try {\n        dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> = new dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>();\n        dagger.internal.Binding<?>.getDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>);\n        dagger.internal.ProblemDetector.dagger.internal.ProblemDetector.detectCircularDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, java.util.List<dagger.internal.Binding<?>>);\n        dagger.internal.Binding<?>.setCycleFree(true);\n    } finally {\n        java.util.List<dagger.internal.Binding<?>>.remove(((java.util.List<dagger.internal.Binding<?>>.size()) - 1));\n        dagger.internal.Binding<?>.setVisiting(false);\n    }\n}"},"status":-2},{"failures":[],"tindex":54,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:53","type":"CtForEachImpl","sourcecode":"for (dagger.internal.Binding<?> dagger.internal.Binding<?> : java.util.Collection<dagger.internal.Binding<?>>) {\n    if (dagger.internal.Binding<?>.isCycleFree()) {\n        continue;\n    } \n    if (dagger.internal.Binding<?>.isVisiting()) {\n        int int = java.util.List<dagger.internal.Binding<?>>.indexOf(dagger.internal.Binding<?>);\n        java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append(\"Dependency cycle:\");\n        for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n            java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n        }\n        java.lang.StringBuilder.append(\"\\n    \").append(0).append(\". \").append(dagger.internal.Binding<?>.java.lang.String);\n        throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString());\n    } \n    dagger.internal.Binding<?>.setVisiting(true);\n    java.util.List<dagger.internal.Binding<?>>.add(dagger.internal.Binding<?>);\n    try {\n        dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>> = new dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>();\n        dagger.internal.Binding<?>.getDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>);\n        dagger.internal.ProblemDetector.dagger.internal.ProblemDetector.detectCircularDependencies(dagger.internal.ProblemDetector.ArraySet<dagger.internal.Binding<?>>, java.util.List<dagger.internal.Binding<?>>);\n        dagger.internal.Binding<?>.setCycleFree(true);\n    } finally {\n        java.util.List<dagger.internal.Binding<?>>.remove(((java.util.List<dagger.internal.Binding<?>>.size()) - 1));\n        dagger.internal.Binding<?>.setVisiting(false);\n    }\n}"},"status":0},{"failures":[],"tindex":55,"variableMapping":{"t":"parameterCount","tail":"parameterCount","mask":"parameterCount"},"series":0,"name":"replace","transplant":{"position":"dagger.internal.ArrayQueue:311","type":"CtAssignmentImpl","sourcecode":"int = (int - 1) & int"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:208","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-2},{"failures":[],"tindex":56,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"dagger.ObjectGraph:227","type":"CtNewClassImpl","sourcecode":"new dagger.internal.ProblemDetector()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:208","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-2},{"failures":[],"tindex":57,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"dagger.internal.ArrayQueue:104","type":"CtOperatorAssignmentImpl","sourcecode":"int |= int >>> 1"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:208","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-2},{"failures":[],"tindex":58,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"dagger.internal.loaders.ReflectiveStaticInjection:46","type":"CtAssignmentImpl","sourcecode":"dagger.internal.Binding<?>[][int] = dagger.internal.Linker.requestBinding(java.lang.String, java.lang.reflect.Field, java.lang.ClassLoader)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:208","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-2},{"failures":[],"tindex":59,"variableMapping":{"initialCapacity":"parameterCount"},"series":0,"name":"add","transplant":{"position":"dagger.internal.ArrayQueue:108","type":"CtOperatorAssignmentImpl","sourcecode":"int |= int >>> 16"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:208","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":0},{"failures":[],"tindex":60,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"dagger.ObjectGraph:227","type":"CtNewClassImpl","sourcecode":"new dagger.internal.ProblemDetector()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:208","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":0},{"failures":[],"tindex":61,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"dagger.internal.ArrayQueue:106","type":"CtOperatorAssignmentImpl","sourcecode":"int |= int >>> 4"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:208","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-2},{"failures":[],"tindex":62,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"dagger.internal.Keys:265","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type == (long.long))\n    return java.lang.Long.java.lang.Long;\n"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:208","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-2},{"failures":[],"tindex":63,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"dagger.internal.loaders.ReflectiveAtInjectBinding:208","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-2},{"failures":[],"tindex":64,"variableMapping":{"bindings":"seedModulesOrClasses","length":"i","fields":"seedModulesOrClasses"},"series":0,"name":"replace","transplant":{"position":"dagger.internal.loaders.ReflectiveStaticInjection:51","type":"CtTryImpl","sourcecode":"try {\n    for (int int = 0 ; int < (java.lang.reflect.Field[].int) ; int++) {\n        java.lang.reflect.Field[][int].set(null, dagger.internal.Binding<?>[][int].get());\n    }\n} catch (java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new java.lang.AssertionError(java.lang.IllegalAccessException);\n}"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Modules:39","type":"CtIfImpl","sourcecode":"if ((java.lang.Object[][int]) instanceof java.lang.Class<?>) {\n    dagger.internal.ModuleAdapter<?> dagger.internal.ModuleAdapter<?> = dagger.internal.Loader.getModuleAdapter(((java.lang.Class<?>)(java.lang.Object[][int])));\n    java.util.Map<dagger.internal.ModuleAdapter<?>, java.lang.Object>.put(dagger.internal.ModuleAdapter<?>, dagger.internal.ModuleAdapter<?>.newModule());\n} else {\n    dagger.internal.ModuleAdapter<?> dagger.internal.ModuleAdapter<?> = dagger.internal.Loader.getModuleAdapter(java.lang.Object[][int].getClass());\n    java.util.Map<dagger.internal.ModuleAdapter<?>, java.lang.Object>.put(dagger.internal.ModuleAdapter<?>, java.lang.Object[][int]);\n}"},"status":-2},{"failures":[],"tindex":65,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"dagger.ObjectGraph:227","type":"CtNewClassImpl","sourcecode":"new dagger.internal.ProblemDetector()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Modules:39","type":"CtIfImpl","sourcecode":"if ((java.lang.Object[][int]) instanceof java.lang.Class<?>) {\n    dagger.internal.ModuleAdapter<?> dagger.internal.ModuleAdapter<?> = dagger.internal.Loader.getModuleAdapter(((java.lang.Class<?>)(java.lang.Object[][int])));\n    java.util.Map<dagger.internal.ModuleAdapter<?>, java.lang.Object>.put(dagger.internal.ModuleAdapter<?>, dagger.internal.ModuleAdapter<?>.newModule());\n} else {\n    dagger.internal.ModuleAdapter<?> dagger.internal.ModuleAdapter<?> = dagger.internal.Loader.getModuleAdapter(java.lang.Object[][int].getClass());\n    java.util.Map<dagger.internal.ModuleAdapter<?>, java.lang.Object>.put(dagger.internal.ModuleAdapter<?>, java.lang.Object[][int]);\n}"},"status":0},{"failures":[],"tindex":66,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"dagger.internal.ArrayQueue:288","type":"CtIfImpl","sourcecode":"if (int >= ((int - int) & int))\n    throw new java.util.ConcurrentModificationException();\n"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Modules:39","type":"CtIfImpl","sourcecode":"if ((java.lang.Object[][int]) instanceof java.lang.Class<?>) {\n    dagger.internal.ModuleAdapter<?> dagger.internal.ModuleAdapter<?> = dagger.internal.Loader.getModuleAdapter(((java.lang.Class<?>)(java.lang.Object[][int])));\n    java.util.Map<dagger.internal.ModuleAdapter<?>, java.lang.Object>.put(dagger.internal.ModuleAdapter<?>, dagger.internal.ModuleAdapter<?>.newModule());\n} else {\n    dagger.internal.ModuleAdapter<?> dagger.internal.ModuleAdapter<?> = dagger.internal.Loader.getModuleAdapter(java.lang.Object[][int].getClass());\n    java.util.Map<dagger.internal.ModuleAdapter<?>, java.lang.Object>.put(dagger.internal.ModuleAdapter<?>, java.lang.Object[][int]);\n}"},"status":-2},{"failures":[],"tindex":67,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"dagger.ObjectGraph:214","type":"CtInvocationImpl","sourcecode":"dagger.internal.StaticInjection.attach(dagger.internal.Linker)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Modules:39","type":"CtIfImpl","sourcecode":"if ((java.lang.Object[][int]) instanceof java.lang.Class<?>) {\n    dagger.internal.ModuleAdapter<?> dagger.internal.ModuleAdapter<?> = dagger.internal.Loader.getModuleAdapter(((java.lang.Class<?>)(java.lang.Object[][int])));\n    java.util.Map<dagger.internal.ModuleAdapter<?>, java.lang.Object>.put(dagger.internal.ModuleAdapter<?>, dagger.internal.ModuleAdapter<?>.newModule());\n} else {\n    dagger.internal.ModuleAdapter<?> dagger.internal.ModuleAdapter<?> = dagger.internal.Loader.getModuleAdapter(java.lang.Object[][int].getClass());\n    java.util.Map<dagger.internal.ModuleAdapter<?>, java.lang.Object>.put(dagger.internal.ModuleAdapter<?>, java.lang.Object[][int]);\n}"},"status":-2},{"failures":[],"tindex":68,"variableMapping":{"f":"i","bindings":"seedModulesOrClasses","fields":"seedModulesOrClasses"},"series":0,"name":"add","transplant":{"position":"dagger.internal.loaders.ReflectiveStaticInjection:53","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Field[][int].set(null, dagger.internal.Binding<?>[][int].get())"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Modules:39","type":"CtIfImpl","sourcecode":"if ((java.lang.Object[][int]) instanceof java.lang.Class<?>) {\n    dagger.internal.ModuleAdapter<?> dagger.internal.ModuleAdapter<?> = dagger.internal.Loader.getModuleAdapter(((java.lang.Class<?>)(java.lang.Object[][int])));\n    java.util.Map<dagger.internal.ModuleAdapter<?>, java.lang.Object>.put(dagger.internal.ModuleAdapter<?>, dagger.internal.ModuleAdapter<?>.newModule());\n} else {\n    dagger.internal.ModuleAdapter<?> dagger.internal.ModuleAdapter<?> = dagger.internal.Loader.getModuleAdapter(java.lang.Object[][int].getClass());\n    java.util.Map<dagger.internal.ModuleAdapter<?>, java.lang.Object>.put(dagger.internal.ModuleAdapter<?>, java.lang.Object[][int]);\n}"},"status":-2},{"failures":[],"tindex":69,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"dagger.ObjectGraph:227","type":"CtNewClassImpl","sourcecode":"new dagger.internal.ProblemDetector()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Modules:39","type":"CtIfImpl","sourcecode":"if ((java.lang.Object[][int]) instanceof java.lang.Class<?>) {\n    dagger.internal.ModuleAdapter<?> dagger.internal.ModuleAdapter<?> = dagger.internal.Loader.getModuleAdapter(((java.lang.Class<?>)(java.lang.Object[][int])));\n    java.util.Map<dagger.internal.ModuleAdapter<?>, java.lang.Object>.put(dagger.internal.ModuleAdapter<?>, dagger.internal.ModuleAdapter<?>.newModule());\n} else {\n    dagger.internal.ModuleAdapter<?> dagger.internal.ModuleAdapter<?> = dagger.internal.Loader.getModuleAdapter(java.lang.Object[][int].getClass());\n    java.util.Map<dagger.internal.ModuleAdapter<?>, java.lang.Object>.put(dagger.internal.ModuleAdapter<?>, java.lang.Object[][int]);\n}"},"status":0},{"failures":[],"tindex":70,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"dagger.internal.loaders.ReflectiveStaticInjection:53","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Field[][int].set(null, dagger.internal.Binding<?>[][int].get())"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Modules:39","type":"CtIfImpl","sourcecode":"if ((java.lang.Object[][int]) instanceof java.lang.Class<?>) {\n    dagger.internal.ModuleAdapter<?> dagger.internal.ModuleAdapter<?> = dagger.internal.Loader.getModuleAdapter(((java.lang.Class<?>)(java.lang.Object[][int])));\n    java.util.Map<dagger.internal.ModuleAdapter<?>, java.lang.Object>.put(dagger.internal.ModuleAdapter<?>, dagger.internal.ModuleAdapter<?>.newModule());\n} else {\n    dagger.internal.ModuleAdapter<?> dagger.internal.ModuleAdapter<?> = dagger.internal.Loader.getModuleAdapter(java.lang.Object[][int].getClass());\n    java.util.Map<dagger.internal.ModuleAdapter<?>, java.lang.Object>.put(dagger.internal.ModuleAdapter<?>, java.lang.Object[][int]);\n}"},"status":-2},{"failures":[],"tindex":71,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"dagger.internal.ArrayQueue:384","type":"CtThrowImpl","sourcecode":"throw new java.util.ConcurrentModificationException()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Modules:39","type":"CtIfImpl","sourcecode":"if ((java.lang.Object[][int]) instanceof java.lang.Class<?>) {\n    dagger.internal.ModuleAdapter<?> dagger.internal.ModuleAdapter<?> = dagger.internal.Loader.getModuleAdapter(((java.lang.Class<?>)(java.lang.Object[][int])));\n    java.util.Map<dagger.internal.ModuleAdapter<?>, java.lang.Object>.put(dagger.internal.ModuleAdapter<?>, dagger.internal.ModuleAdapter<?>.newModule());\n} else {\n    dagger.internal.ModuleAdapter<?> dagger.internal.ModuleAdapter<?> = dagger.internal.Loader.getModuleAdapter(java.lang.Object[][int].getClass());\n    java.util.Map<dagger.internal.ModuleAdapter<?>, java.lang.Object>.put(dagger.internal.ModuleAdapter<?>, java.lang.Object[][int]);\n}"},"status":0},{"failures":[],"tindex":72,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Modules:39","type":"CtIfImpl","sourcecode":"if ((java.lang.Object[][int]) instanceof java.lang.Class<?>) {\n    dagger.internal.ModuleAdapter<?> dagger.internal.ModuleAdapter<?> = dagger.internal.Loader.getModuleAdapter(((java.lang.Class<?>)(java.lang.Object[][int])));\n    java.util.Map<dagger.internal.ModuleAdapter<?>, java.lang.Object>.put(dagger.internal.ModuleAdapter<?>, dagger.internal.ModuleAdapter<?>.newModule());\n} else {\n    dagger.internal.ModuleAdapter<?> dagger.internal.ModuleAdapter<?> = dagger.internal.Loader.getModuleAdapter(java.lang.Object[][int].getClass());\n    java.util.Map<dagger.internal.ModuleAdapter<?>, java.lang.Object>.put(dagger.internal.ModuleAdapter<?>, java.lang.Object[][int]);\n}"},"status":0},{"failures":[],"tindex":73,"variableMapping":{"readLock":"readLock"},"series":0,"name":"replace","transplant":{"position":"dagger.internal.Memoizer:52","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.locks.Lock.unlock()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Memoizer:45","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.locks.Lock.lock()"},"status":0},{"failures":[],"tindex":74,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"dagger.internal.Memoizer:52","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.locks.Lock.unlock()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Memoizer:45","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.locks.Lock.lock()"},"status":0},{"failures":[],"tindex":75,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"dagger.internal.Memoizer:52","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.locks.Lock.unlock()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Memoizer:45","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.locks.Lock.lock()"},"status":0},{"failures":[],"tindex":76,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"dagger.internal.ArrayQueue:387","type":"CtReturnImpl","sourcecode":"return E"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Memoizer:45","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.locks.Lock.lock()"},"status":-2},{"failures":[],"tindex":77,"variableMapping":{"readLock":"readLock"},"series":0,"name":"add","transplant":{"position":"dagger.internal.Memoizer:52","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.locks.Lock.unlock()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Memoizer:45","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.locks.Lock.lock()"},"status":0},{"failures":[],"tindex":78,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"dagger.ObjectGraph:227","type":"CtNewClassImpl","sourcecode":"new dagger.internal.ProblemDetector()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Memoizer:45","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.locks.Lock.lock()"},"status":0},{"failures":[],"tindex":79,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"dagger.internal.Memoizer:52","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.locks.Lock.unlock()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Memoizer:45","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.locks.Lock.lock()"},"status":0},{"failures":[],"tindex":80,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"dagger.internal.ArrayQueue:228","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Memoizer:45","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.locks.Lock.lock()"},"status":-2},{"failures":[],"tindex":81,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"dagger.internal.Memoizer:45","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.locks.Lock.lock()"},"status":0},{"failures":[],"tindex":82,"variableMapping":{"binding":"binding"},"series":0,"name":"replace","transplant":{"position":"dagger.internal.ProblemDetector:54","type":"CtIfImpl","sourcecode":"if (dagger.internal.Binding<?>.isCycleFree()) {\n    continue;\n} "},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:58","type":"CtIfImpl","sourcecode":"if (dagger.internal.Binding<?>.isVisiting()) {\n    int int = java.util.List<dagger.internal.Binding<?>>.indexOf(dagger.internal.Binding<?>);\n    java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append(\"Dependency cycle:\");\n    for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n        java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n    }\n    java.lang.StringBuilder.append(\"\\n    \").append(0).append(\". \").append(dagger.internal.Binding<?>.java.lang.String);\n    throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString());\n} "},"status":0},{"failures":[],"tindex":83,"variableMapping":{},"series":0,"name":"replaceWittgenstein","transplant":{"position":"dagger.internal.Linker:416","type":"CtInvocationImpl","sourcecode":"dagger.internal.Binding<T>.setLinked()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:58","type":"CtIfImpl","sourcecode":"if (dagger.internal.Binding<?>.isVisiting()) {\n    int int = java.util.List<dagger.internal.Binding<?>>.indexOf(dagger.internal.Binding<?>);\n    java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append(\"Dependency cycle:\");\n    for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n        java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n    }\n    java.lang.StringBuilder.append(\"\\n    \").append(0).append(\". \").append(dagger.internal.Binding<?>.java.lang.String);\n    throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString());\n} "},"status":0},{"failures":[],"tindex":84,"variableMapping":{},"series":0,"name":"replaceReaction","transplant":{"position":"dagger.internal.Linker:143","type":"CtInvocationImpl","sourcecode":"dagger.internal.Binding<?>.setLibrary(dagger.internal.Binding<?>.library())"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:58","type":"CtIfImpl","sourcecode":"if (dagger.internal.Binding<?>.isVisiting()) {\n    int int = java.util.List<dagger.internal.Binding<?>>.indexOf(dagger.internal.Binding<?>);\n    java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append(\"Dependency cycle:\");\n    for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n        java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n    }\n    java.lang.StringBuilder.append(\"\\n    \").append(0).append(\". \").append(dagger.internal.Binding<?>.java.lang.String);\n    throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString());\n} "},"status":-2},{"failures":[],"tindex":85,"variableMapping":{},"series":0,"name":"replaceRandom","transplant":{"position":"dagger.internal.Linker:274","type":"CtIfImpl","sourcecode":"if (dagger.internal.Binding<?> != null) {\n    if ((dagger.internal.Linker != this) && (!(dagger.internal.Binding<?>.isLinked())))\n        throw new java.lang.AssertionError();\n    \n    break;\n} "},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:58","type":"CtIfImpl","sourcecode":"if (dagger.internal.Binding<?>.isVisiting()) {\n    int int = java.util.List<dagger.internal.Binding<?>>.indexOf(dagger.internal.Binding<?>);\n    java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append(\"Dependency cycle:\");\n    for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n        java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n    }\n    java.lang.StringBuilder.append(\"\\n    \").append(0).append(\". \").append(dagger.internal.Binding<?>.java.lang.String);\n    throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString());\n} "},"status":-2},{"failures":[],"tindex":86,"variableMapping":{"deferredBinding":"binding"},"series":0,"name":"add","transplant":{"position":"dagger.internal.Linker:285","type":"CtInvocationImpl","sourcecode":"dagger.internal.Binding<?>.setDependedOn(true)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:58","type":"CtIfImpl","sourcecode":"if (dagger.internal.Binding<?>.isVisiting()) {\n    int int = java.util.List<dagger.internal.Binding<?>>.indexOf(dagger.internal.Binding<?>);\n    java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append(\"Dependency cycle:\");\n    for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n        java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n    }\n    java.lang.StringBuilder.append(\"\\n    \").append(0).append(\". \").append(dagger.internal.Binding<?>.java.lang.String);\n    throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString());\n} "},"status":0},{"failures":[],"tindex":87,"variableMapping":{},"series":0,"name":"addWittgenstein","transplant":{"position":"dagger.internal.Linker:404","type":"CtInvocationImpl","sourcecode":"dagger.internal.Binding<T>.setLibrary(true)"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:58","type":"CtIfImpl","sourcecode":"if (dagger.internal.Binding<?>.isVisiting()) {\n    int int = java.util.List<dagger.internal.Binding<?>>.indexOf(dagger.internal.Binding<?>);\n    java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append(\"Dependency cycle:\");\n    for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n        java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n    }\n    java.lang.StringBuilder.append(\"\\n    \").append(0).append(\". \").append(dagger.internal.Binding<?>.java.lang.String);\n    throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString());\n} "},"status":0},{"failures":[],"tindex":88,"variableMapping":{},"series":0,"name":"addReaction","transplant":{"position":"dagger.internal.Linker:174","type":"CtInvocationImpl","sourcecode":"dagger.internal.Binding<?>.setLinked()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:58","type":"CtIfImpl","sourcecode":"if (dagger.internal.Binding<?>.isVisiting()) {\n    int int = java.util.List<dagger.internal.Binding<?>>.indexOf(dagger.internal.Binding<?>);\n    java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append(\"Dependency cycle:\");\n    for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n        java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n    }\n    java.lang.StringBuilder.append(\"\\n    \").append(0).append(\". \").append(dagger.internal.Binding<?>.java.lang.String);\n    throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString());\n} "},"status":0},{"failures":[],"tindex":89,"variableMapping":{},"series":0,"name":"addRandom","transplant":{"position":"dagger.internal.ArrayQueue:250","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:58","type":"CtIfImpl","sourcecode":"if (dagger.internal.Binding<?>.isVisiting()) {\n    int int = java.util.List<dagger.internal.Binding<?>>.indexOf(dagger.internal.Binding<?>);\n    java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append(\"Dependency cycle:\");\n    for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n        java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n    }\n    java.lang.StringBuilder.append(\"\\n    \").append(0).append(\". \").append(dagger.internal.Binding<?>.java.lang.String);\n    throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString());\n} "},"status":0},{"failures":[],"tindex":90,"series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"dagger.internal.ProblemDetector:58","type":"CtIfImpl","sourcecode":"if (dagger.internal.Binding<?>.isVisiting()) {\n    int int = java.util.List<dagger.internal.Binding<?>>.indexOf(dagger.internal.Binding<?>);\n    java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder().append(\"Dependency cycle:\");\n    for (int int = int ; int < (java.util.List<dagger.internal.Binding<?>>.size()) ; int++) {\n        java.lang.StringBuilder.append(\"\\n    \").append((int - int)).append(\". \").append(java.util.List<dagger.internal.Binding<?>>.get(int).java.lang.String).append(\" bound by \").append(java.util.List<dagger.internal.Binding<?>>.get(int));\n    }\n    java.lang.StringBuilder.append(\"\\n    \").append(0).append(\". \").append(dagger.internal.Binding<?>.java.lang.String);\n    throw new java.lang.IllegalStateException(java.lang.StringBuilder.toString());\n} "},"status":0},{"failureDictionary":{}},{"memory":2012,"os.arch":"amd64","os.name":"Linux","cpu":[{"core":2,"vendor":"AMD","model":"Opteron","mhz":2391},{"core":2,"vendor":"AMD","model":"Opteron","mhz":2391}],"os.version":"3.2.0-4-amd64"}]
