{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":92,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched":188,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize":89,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched":193,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray":151,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched":185,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan":29,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":68,"org.apache.commons.codec.language.ColognePhoneticTest.testEncodeEmpty":102,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":90,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":5,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis":28,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":162,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":20,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":19,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":179,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":98,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":197,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":100,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":45,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":99,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":44,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":113,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":114,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot":94,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":64,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":43,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched":198,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":115,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":116,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":47,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength":158,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":16,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":174,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":79,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":141,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":122,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":15,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":50,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":108,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":61,"org.apache.commons.codec.binary.Base64Test.testEmptyBase64":120,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":88,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":4,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected":97,"org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8":180,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched":190,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":56,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":178,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched":186,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched":200,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":82,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":26,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":161,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":119,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected":184,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched":201,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":48,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":60,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":13,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":175,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch":93,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":36,"org.apache.commons.codec.binary.Base64Test.testUUID":110,"org.apache.commons.codec.binary.Base64Test.testSingletons":121,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":124,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize":80,"org.apache.commons.codec.binary.Base64Test.testPairs":109,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":31,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched":182,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111":176,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":3,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":138,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":173,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":84,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":46,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":146,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched":183,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":39,"org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray":154,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":133,"org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals":101,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2":27,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":12,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":9,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize":87,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":157,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":69,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":2,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":75,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray":143,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":112,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":1,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched":204,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched":194,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":148,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":78,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched":195,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch":199,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":6,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":86,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":145,"org.apache.commons.codec.binary.HexTest.testCustomCharset":136,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched":191,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch":202,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":21,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":59,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":58,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":104,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":144,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":149,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":170,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY":30,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":169,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":22,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":8,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":76,"org.apache.commons.codec.binary.Base64Test.testTriplets":107,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":14,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":7,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":17,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":70,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":72,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":73,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":117,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":127,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples":52,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString":152,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":171,"org.apache.commons.codec.language.Caverphone2Test.testEndMb":51,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":85,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":164,"org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX":42,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":142,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":147,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":35,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":91,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":159,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":49,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":155,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":140,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":77,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":34,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4":192,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":71,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":57,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":40,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch":96,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":105,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":10,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":128,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt":205,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":41,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched":196,"org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex":137,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":25,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":130,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0":181,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":37,"org.apache.commons.codec.language.ColognePhoneticTest.testLocaleIndependence":103,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength":153,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":0,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize":81,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":67,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":126,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":63,"org.apache.commons.codec.binary.Base64Test.testBase64":125,"org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull":65,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":168,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":33,"org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString":163,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":11,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":118,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":24,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":53,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":167,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":156,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":166,"org.apache.commons.codec.binary.HexTest.testEncodeZeroes":139,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":160,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":23,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":66,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched":203,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":177,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected":95,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":129,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":83,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":38,"org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex":135,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":74,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":131,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched":187,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":55,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":18,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":172,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":106,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":54,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":150,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":123,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":62,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla":134,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":132,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":165,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":32,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched":189,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":111},"transformations":[{"failures":[],"tindex":"24d70b25-3db0-11e6-963b-012d904a6d5a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:614","type":"CtAssignmentImpl","sourcecode":"str = str.substring(1)"},"variableMap":{"str":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:80","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"x\", \"k\")"},"status":-2},{"failures":[],"tindex":"24d73236-3db0-11e6-963b-956834bf7772","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:801","type":"CtReturnImpl","sourcecode":"return digest"},"variableMap":{"digest":"messageDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:777","type":"CtReturnImpl","sourcecode":"return messageDigest"},"status":-2},{"failures":[],"tindex":"24d73237-3db0-11e6-963b-8500aab92dc4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:215","type":"CtReturnImpl","sourcecode":"return l_raw"},"variableMap":{"l_raw":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:96","type":"CtReturnImpl","sourcecode":"return out"},"status":-2},{"failures":[],"tindex":"24d73238-3db0-11e6-963b-bb6b39e673c1","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:206","type":"CtAssignmentImpl","sourcecode":"this.int = unencodedBlockSize"},"variableMap":{"unencodedBlockSize":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:707","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-2},{"failures":[],"tindex":"24d73239-3db0-11e6-963b-bbb5ba48f6f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:521","type":"CtAssignmentImpl","sourcecode":"context.int = 0"},"variableMap":{"currentLinePos":"pos","context":"context"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:394","type":"CtOperatorAssignmentImpl","sourcecode":"context.int += byte[].int"},"status":-2},{"failures":[],"tindex":"24d7323a-3db0-11e6-963b-99728cf0063b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:368","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha1(key, valueToDigest))"},"variableMap":{"valueToDigest":"keyBytes","key":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:72","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(keyBytes, ((org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8))))"},"status":-2},{"failures":[],"tindex":"24d7323b-3db0-11e6-963b-c3da4c44c04b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"24d7594c-3db0-11e6-963b-f3cea4d72f3e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:474","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[47], altResult[5], altResult[26], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:457","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[0], altResult[10], altResult[20], 4, buffer)"},"status":-1},{"failures":[6,7],"tindex":"24d7594d-3db0-11e6-963b-2195377644a0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:347","type":"CtAssignmentImpl","sourcecode":"d = org.apache.commons.codec.digest.UnixCrypt.hPermOp(d, (-2), -859045888)"},"variableMap":{"d":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:363","type":"CtAssignmentImpl","sourcecode":"d = (d >>> 2) | (d << 26)"},"status":-1},{"failures":[8,9,10,11,12,13,14],"tindex":"24d7594e-3db0-11e6-963b-bf8622bbff53","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:768","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(bigBytes, startSrc, resizedBytes, startDst, len)"},"variableMap":{"resizedBytes":"b","bigBytes":"b","len":"len","startSrc":"offset","startDst":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:85","type":"CtIfImpl","sourcecode":"if (b == null) {\n    throw new java.lang.NullPointerException();\n} else if ((offset < 0) || (len < 0)) {\n    throw new java.lang.IndexOutOfBoundsException();\n} else if ((offset > (b.int)) || ((offset + len) > (b.int))) {\n    throw new java.lang.IndexOutOfBoundsException();\n} else if (len > 0) {\n    if (boolean) {\n        org.apache.commons.codec.binary.BaseNCodec.encode(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context);\n    } else {\n        org.apache.commons.codec.binary.BaseNCodec.decode(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context);\n    }\n    flush(false);\n} "},"status":-1},{"failures":[6,15,16,7],"tindex":"24d7594f-3db0-11e6-963b-f5c1d858aedb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"u","len":"u"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:239","type":"CtIfImpl","sourcecode":"if (((b[y]) & u) != 0) {\n    c |= 1;\n} "},"status":-1},{"failures":[],"tindex":"24d75950-3db0-11e6-963b-9d9933861a05","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:289","type":"CtAssignmentImpl","sourcecode":"this.byte[] = null"},"status":-2},{"failures":[],"tindex":"24d75951-3db0-11e6-963b-f1a17a1204f7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:154","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"status":0},{"failures":[17],"tindex":"24d78062-3db0-11e6-963b-25b87be5ca4a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:436","type":"CtIfImpl","sourcecode":"if (incl.contains(\" \")) {\n    throw new java.lang.IllegalArgumentException((((\"Malformed import statement '\" + rawLine) + \"' in \") + location));\n} else {\n    lines.putAll(org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(incl), ((location + \"->\") + incl)));\n}"},"status":-1},{"failures":[18,19,20,21,22,23,24,25,12,26,13,14],"tindex":"24d78063-3db0-11e6-963b-7b2c1090ad82","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:509","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 35))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))]"},"status":-1},{"failures":[],"tindex":"24d78064-3db0-11e6-963b-d58979061217","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:176","type":"CtAssignmentImpl","sourcecode":"hasUnderscores = true"},"variableMap":{"hasUnderscores":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:356","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.net.QCodec.this.boolean = b"},"status":-2},{"failures":[6,7],"tindex":"24d78065-3db0-11e6-963b-a3b8a80d017a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:351","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(c, d, 8, 16711935, results)"},"variableMap":{"c":"d","d":"d","results":"results"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:348","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(d, c, 1, 1431655765, results)"},"status":-1},{"failures":[27,28,29,30],"tindex":"24d78066-3db0-11e6-963b-2b6e2e5764f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:211","type":"CtInvocationImpl","sourcecode":"code.append('T')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:185","type":"CtInvocationImpl","sourcecode":"code.append('S')"},"status":-1},{"failures":[31],"tindex":"24d78067-3db0-11e6-963b-ad8e2239371f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:159","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (data.int) ; i++) {\n    if ((data[i]) == (org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte)) {\n        data[i] = org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte;\n    } \n}"},"status":-1},{"failures":[6,15,16,7],"tindex":"24d78068-3db0-11e6-963b-05acb422ccaf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:211","type":"CtInvocationImpl","sourcecode":"buffer.setCharAt(0, charZero)"},"status":-1},{"failures":[32,33,34],"tindex":"24d78069-3db0-11e6-963b-171324e1f9af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:878","type":"CtAssignmentImpl","sourcecode":"result = true"},"status":-1},{"failures":[],"tindex":"24d7a77a-3db0-11e6-963b-771abc661b2a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:255","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(context.byte[], 0, b, 0, context.byte[].int)"},"status":-2},{"failures":[35,36,37,38,39,40,41],"tindex":"24d7a77b-3db0-11e6-963b-7b36b085512f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:217","type":"CtInvocationImpl","sourcecode":"ctx1.update(keyBytes)"},"status":-1},{"failures":[],"tindex":"24d7a77c-3db0-11e6-963b-633ff3c7f3ba","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:285","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[2], finalb[8], finalb[14], 4, passwd)"},"variableMap":{"finalb":"altResult","passwd":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:470","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[22], altResult[43], altResult[1], 4, buffer)"},"status":-2},{"failures":[],"tindex":"24d7a77d-3db0-11e6-963b-41aaa3a03ee3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:415","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"U\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"name":"txt","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:99","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"s+\", \"S\")"},"status":-2},{"failures":[0,1,2,4,5],"tindex":"24d7a77e-3db0-11e6-963b-47b9df8ff19b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:230","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(finalb, ((byte)(0)))"},"variableMap":{"finalb":"altResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:467","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(((byte)(0)), altResult[31], altResult[30], 3, buffer)"},"status":-1},{"failures":[],"tindex":"24d7a77f-3db0-11e6-963b-4540e5ef990b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:222","type":"CtAssignmentImpl","sourcecode":"key[i] = ((byte)(iChar << 1))"},"variableMap":{"iChar":"pos","i":"pos","key":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:365","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte"},"status":-2},{"failures":[],"tindex":"24d7a780-3db0-11e6-963b-158e799b5f1d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:215","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[8]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:462","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = ensureBufferSize(int, context)"},"status":-2},{"failures":[6,7],"tindex":"24d7a781-3db0-11e6-963b-05004b3f38a5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:358","type":"CtOperatorAssignmentImpl","sourcecode":"c &= 268435455"},"variableMap":{"c":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:244","type":"CtUnaryOperatorImpl","sourcecode":"y++"},"status":-1},{"failures":[42],"tindex":"24d7ce92-3db0-11e6-963b-3336ed42b15c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:190","type":"CtInvocationImpl","sourcecode":"code.append('K')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:295","type":"CtInvocationImpl","sourcecode":"code.append('X')"},"status":-1},{"failures":[],"tindex":"24d7ce93-3db0-11e6-963b-051984a81f8d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:369","type":"CtOperatorAssignmentImpl","sourcecode":"d &= 268435455"},"status":0},{"failures":[43,44,45,46,47,48,49,50],"tindex":"24d7ce94-3db0-11e6-963b-133abc892279","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:350","type":"CtIfImpl","sourcecode":"if (lastCode == '/') {\n    continue;\n} "},"variableMap":{"lastCode":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:394","type":"CtIfImpl","sourcecode":"if ((code != '-') && ((((lastCode != code) && ((code != '0') || (lastCode == '/'))) || (code < '0')) || (code > '8'))) {\n    output.addRight(code);\n} "},"status":-1},{"failures":[51,52,53,54],"tindex":"24d7ce95-3db0-11e6-963b-b9836698840c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:108","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"w$\", \"3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:101","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"p+\", \"P\")"},"status":-1},{"failures":[55,56,57,58,59,60,61,62,63],"tindex":"24d7ce96-3db0-11e6-963b-350ff418fa8b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:290","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = parts[0]"},"variableMap":{"parts":"parts"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:311","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[3])"},"status":-1},{"failures":[64],"tindex":"24d7ce97-3db0-11e6-963b-cb776c432de3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:78","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('-')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:88","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set('.')"},"status":-1},{"failures":[],"tindex":"24d7ce98-3db0-11e6-963b-31eb54d15dce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:116","type":"CtIfImpl","sourcecode":"if (other == (org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet)) {\n    return other;\n} else if (other == (org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet)) {\n    return org.apache.commons.codec.language.bm.Languages.SomeLanguages.this;\n} else {\n    final org.apache.commons.codec.language.bm.Languages.SomeLanguages org.apache.commons.codec.language.bm.Languages.SomeLanguages = ((org.apache.commons.codec.language.bm.Languages.SomeLanguages)(other));\n    final java.util.Set<java.lang.String> java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>(java.lang.Math.min(java.util.Set<java.lang.String>.size(), sl.java.util.Set<java.lang.String>.size()));\n    for (java.lang.String java.lang.String : java.util.Set<java.lang.String>) {\n        if (sl.java.util.Set<java.lang.String>.contains(lang)) {\n            ls.add(lang);\n        } \n    }\n    return org.apache.commons.codec.language.bm.Languages.LanguageSet.from(ls);\n}"},"status":-2},{"failures":[],"tindex":"24d7ce99-3db0-11e6-963b-7d73f407bd70","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:88","type":"CtAssignmentImpl","sourcecode":"upperName = upperName.replaceAll(str, org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"str":"txt","upperName":"txt","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:61","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^tough\", \"tou2f\")"},"status":-2},{"failures":[],"tindex":"24d7f5aa-3db0-11e6-963b-c31baea8b709","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:338","type":"CtReturnImpl","sourcecode":"return encode(((byte[])(obj)))"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:377","type":"CtIfImpl","sourcecode":"if (obj instanceof byte[]) {\n    return decode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(\"Parameter supplied to Base-N decode is not a byte[] or a String\");\n}"},"status":-2},{"failures":[],"tindex":"24d7f5ab-3db0-11e6-963b-41ed10b4ba29","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:266","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":"24d7f5ac-3db0-11e6-963b-1dc315974fd4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:532","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha256(data))"},"variableMap":{"data":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:724","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha512(key, valueToDigest))"},"status":-2},{"failures":[],"tindex":"24d7f5ad-3db0-11e6-963b-6bc43230e9a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:90","type":"CtAssignmentImpl","sourcecode":"salt = (org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + salt"},"variableMap":{"salt":"name1LtREnd","org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX":"name1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:313","type":"CtAssignmentImpl","sourcecode":"name1LtREnd = name1.substring((name1Size - i), ((name1Size - i) + 1))"},"status":-2},{"failures":[],"tindex":"24d7f5ae-3db0-11e6-963b-973f3353fe3a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:159","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (data.int) ; i++) {\n    if ((data[i]) == (org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte)) {\n        data[i] = org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte;\n    } \n}"},"variableMap":{"org.apache.commons.codec.net.QCodec.BLANK":"b","data":"tmp","length":"i","org.apache.commons.codec.net.QCodec.UNDERSCORE":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:184","type":"CtIfImpl","sourcecode":"if (b != (org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte)) {\n    tmp[i] = b;\n} else {\n    tmp[i] = org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte;\n}"},"status":-2},{"failures":[],"tindex":"24d7f5af-3db0-11e6-963b-0dde9bc03d68","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:320","type":"CtAssignmentImpl","sourcecode":"name1Char[i] = ' '"},"variableMap":{"name1Char":"name2Char","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:327","type":"CtAssignmentImpl","sourcecode":"name2Char[(name2Size - i)] = ' '"},"status":0},{"failures":[65],"tindex":"24d7f5b0-3db0-11e6-963b-c98a59d3d80b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:290","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"24d7f5b1-3db0-11e6-963b-33fd9923a94e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.RefinedSoundex:135","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to RefinedSoundex encode is not of type java.lang.String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:205","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt))"},"status":-2},{"failures":[66,67,68,69,70,71,17,72],"tindex":"24d7f5b2-3db0-11e6-963b-435a86b611ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:412","type":"CtIfImpl","sourcecode":"if (inMultilineComment) {\n    if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n        inMultilineComment = false;\n    } \n} else {\n    if (line.startsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n        inMultilineComment = true;\n    } else {\n        final int int = line.indexOf(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String);\n        if (cmtI >= 0) {\n            line = line.substring(0, cmtI);\n        } \n        line = line.trim();\n        if ((line.length()) == 0) {\n            continue;\n        } \n        if (line.startsWith(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n            final java.lang.String java.lang.String = line.substring(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.lang.String.length()).trim();\n            if (incl.contains(\" \")) {\n                throw new java.lang.IllegalArgumentException((((\"Malformed import statement '\" + rawLine) + \"' in \") + location));\n            } else {\n                lines.putAll(org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(incl), ((location + \"->\") + incl)));\n            }\n        } else {\n            final java.lang.String[] java.lang.String[] = line.split(\"\\\\s+\");\n            if ((parts.int) != 4) {\n                throw new java.lang.IllegalArgumentException((((((\"Malformed rule statement split into \" + (parts.int)) + \" parts: \") + rawLine) + \" in \") + location));\n            } else {\n                try {\n                    final java.lang.String java.lang.String = org.apache.commons.codec.language.bm.Rule.stripQuotes(parts[0]);\n                    final java.lang.String java.lang.String = org.apache.commons.codec.language.bm.Rule.stripQuotes(parts[1]);\n                    final java.lang.String java.lang.String = org.apache.commons.codec.language.bm.Rule.stripQuotes(parts[2]);\n                    final org.apache.commons.codec.language.bm.Rule.PhonemeExpr org.apache.commons.codec.language.bm.Rule.PhonemeExpr = org.apache.commons.codec.language.bm.Rule.parsePhonemeExpr(org.apache.commons.codec.language.bm.Rule.stripQuotes(parts[3]));\n                    final int int = currentLine;\n                    final org.apache.commons.codec.language.bm.Rule org.apache.commons.codec.language.bm.Rule = new org.apache.commons.codec.language.bm.Rule(pat, lCon, rCon, ph) {\n                        private final int myLine = cLine;\n\n                        private final java.lang.String loc = location;\n\n                        @java.lang.Override\n                        public java.lang.String toString() {\n                            final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n                            sb.append(\"Rule\");\n                            sb.append(\"{line=\").append(int);\n                            sb.append(\", loc='\").append(java.lang.String).append('\\'');\n                            sb.append(\", pat='\").append(pat).append('\\'');\n                            sb.append(\", lcon='\").append(lCon).append('\\'');\n                            sb.append(\", rcon='\").append(rCon).append('\\'');\n                            sb.append('}');\n                            return sb.toString();\n                        }\n                    };\n                    final java.lang.String java.lang.String = r.java.lang.String.substring(0, 1);\n                    java.util.List<org.apache.commons.codec.language.bm.Rule> java.util.List<org.apache.commons.codec.language.bm.Rule> = lines.get(patternKey);\n                    if (rules == null) {\n                        rules = new java.util.ArrayList<org.apache.commons.codec.language.bm.Rule>();\n                        lines.put(patternKey, rules);\n                    } \n                    rules.add(r);\n                } catch (final java.lang.IllegalArgumentException e) {\n                    throw new java.lang.IllegalStateException((((\"Problem parsing line '\" + currentLine) + \"' in \") + location) , e);\n                }\n            }\n        }\n    }\n}"},"status":-1},{"failures":[73,74,75,76,77,78,8,79,80,81,82,83,84,25,85,86,87,12,88,89,90,91,26],"tindex":"24d81cc3-3db0-11e6-963b-25149191dfc4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:162","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.decode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-1},{"failures":[],"tindex":"24d81cc4-3db0-11e6-963b-59e646d4a53c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:411","type":"CtAssignmentImpl","sourcecode":"index = handleGH(value, result, index)"},"status":-2},{"failures":[],"tindex":"24d81cc5-3db0-11e6-963b-f774ab37d9cc","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:922","type":"CtIfImpl","sourcecode":"if (target.equals(element)) {\n    result = true;\n    break;\n} "},"variableMap":{"result":"branching","target":"inputContext","element":"inputContext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:514","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule : rules) {\n    if (rule.matches(inputContext)) {\n        if (branching) {\n            nextBranches.clear();\n        } \n        final java.lang.String[] java.lang.String[] = rule.getReplacements(inputContext, (lastChar == '\u0000'));\n        final boolean boolean = ((replacements.int) > 1) && branching;\n        for (final org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch : currentBranches) {\n            for (final java.lang.String java.lang.String : replacements) {\n                final org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch = branchingRequired ? branch.createBranch() : branch;\n                final boolean boolean = ((lastChar == 'm') && (ch == 'n')) || ((lastChar == 'n') && (ch == 'm'));\n                nextBranch.processNextReplacement(nextReplacement, force);\n                if (branching) {\n                    nextBranches.add(nextBranch);\n                } else {\n                    break;\n                }\n            }\n        }\n        if (branching) {\n            currentBranches.clear();\n            currentBranches.addAll(nextBranches);\n        } \n        index += (rule.getPatternLength()) - 1;\n        break;\n    } \n}"},"status":-2},{"failures":[],"tindex":"24d81cc6-3db0-11e6-963b-ff756e9a85a8","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:271","type":"CtLocalVariableImpl","sourcecode":"final int int = line.indexOf(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)"},"variableMap":{"line":"name2","org.apache.commons.codec.language.DaitchMokotoffSoundex.COMMENT":"name2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:299","type":"CtLocalVariableImpl","sourcecode":"final int int = (name2.length()) - 1"},"status":-2},{"failures":[6,7],"tindex":"24d81cc7-3db0-11e6-963b-c34d3db8a1cc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:347","type":"CtAssignmentImpl","sourcecode":"d = org.apache.commons.codec.digest.UnixCrypt.hPermOp(d, (-2), -859045888)"},"variableMap":{"d":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:352","type":"CtAssignmentImpl","sourcecode":"c = results[0]"},"status":-1},{"failures":[],"tindex":"24d81cc8-3db0-11e6-963b-f53c24a25568","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:85","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(';')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:84","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(':')"},"status":0},{"failures":[],"tindex":"24d81cc9-3db0-11e6-963b-a164fe79e63e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:314","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getHmacSha1(key).doFinal(valueToDigest)"},"variableMap":{"valueToDigest":"array","key":"array"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:232","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.decodeHex(new java.lang.String(array , getCharset()).toCharArray())"},"status":-2},{"failures":[32,33,92],"tindex":"24d81cca-3db0-11e6-963b-09be6f273051","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:414","type":"CtInvocationImpl","sourcecode":"result.append(\"KN\", \"N\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:589","type":"CtInvocationImpl","sourcecode":"result.append('R')"},"status":-1},{"failures":[],"tindex":"24d843db-3db0-11e6-963b-074655b3dbd3","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:352","type":"CtIfImpl","sourcecode":"if (accentedWord == null) {\n    return null;\n} "},"variableMap":{"accentedWord":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:447","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"24d843dc-3db0-11e6-963b-73759dfc1385","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:192","type":"CtIfImpl","sourcecode":"if (((firstCode == mappedChar) || ('H' == preHWChar)) || ('W' == preHWChar)) {\n    return 0;\n} "},"variableMap":{"mappedChar":"c","preHWChar":"c","firstCode":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:165","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.RefinedSoundex.this.char[][((java.lang.Character.toUpperCase(c)) - 'A')]"},"status":-2},{"failures":[55,56,57,58,59,63],"tindex":"24d843dd-3db0-11e6-963b-65a67c520d0b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:469","type":"CtInvocationImpl","sourcecode":"sb.append('|')"},"variableMap":{"sb":"sb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:467","type":"CtInvocationImpl","sourcecode":"sb.append(branch)"},"status":-1},{"failures":[],"tindex":"24d843de-3db0-11e6-963b-a3a6b09f1043","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:376","type":"CtAssignmentImpl","sourcecode":"s = (s >>> 16) | (t & -65536)"},"variableMap":{"s":"index","t":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:763","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-2},{"failures":[],"tindex":"24d843df-3db0-11e6-963b-c1eebf244e33","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:216","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (key.int) ; i++) {\n    key[i] = 0;\n}"},"variableMap":{"length":"i","key":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:359","type":"CtIfImpl","sourcecode":"if (b == (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)) {\n    try {\n        if ((bytes[(++i)]) == (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)) {\n            continue;\n        } \n        final int int = org.apache.commons.codec.net.Utils.digit16(bytes[i]);\n        final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)]);\n        buffer.write(((char)((u << 4) + l)));\n    } catch (final java.lang.ArrayIndexOutOfBoundsException e) {\n        throw new org.apache.commons.codec.DecoderException(\"Invalid quoted-printable encoding\" , e);\n    }\n} else if ((b != (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)) && (b != (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte))) {\n    buffer.write(b);\n} "},"status":-2},{"failures":[],"tindex":"24d843e0-3db0-11e6-963b-8dc1da97397e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:55","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"[^a-z]\", \"\")"},"variableMap":{"txt":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:273","type":"CtAssignmentImpl","sourcecode":"line = line.substring(0, cmtI)"},"status":-2},{"failures":[],"tindex":"24d843e1-3db0-11e6-963b-3373bb6adae9","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:83","type":"CtAssignmentImpl","sourcecode":"java.lang.StringBuilder = new java.lang.StringBuilder()"},"variableMap":{"builder":"builder"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:117","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"status":-2},{"failures":[32,33,92],"tindex":"24d843e2-3db0-11e6-963b-bbeecfb5a634","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:423","type":"CtInvocationImpl","sourcecode":"result.append(\"KL\", \"L\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:589","type":"CtInvocationImpl","sourcecode":"result.append('R')"},"status":-1},{"failures":[93,94,95,96,97],"tindex":"24d843e3-3db0-11e6-963b-cdeb52a7c100","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:252","type":"CtAssignmentImpl","sourcecode":"minRating = getMinRating(sumLength)"},"status":-1},{"failures":[98,99,100],"tindex":"24d843e4-3db0-11e6-963b-d718a07c86fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:905","type":"CtIfImpl","sourcecode":"if ((index < 0) || (index >= (value.length()))) {\n    return java.lang.Character.java.lang.Character.char;\n} "},"variableMap":{"index":"index","java.lang.Character.MIN_VALUE":"mappedChar","value":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:187","type":"CtIfImpl","sourcecode":"if ((index > 1) && (mappedChar != '0')) {\n    final char char = str.charAt((index - 1));\n    if (('H' == hwChar) || ('W' == hwChar)) {\n        final char char = str.charAt((index - 2));\n        final char char = org.apache.commons.codec.language.Soundex.this.map(preHWChar);\n        if (((firstCode == mappedChar) || ('H' == preHWChar)) || ('W' == preHWChar)) {\n            return 0;\n        } \n    } \n} "},"status":-1},{"failures":[43,44,45,46,47,48,49,50],"tindex":"24d86af5-3db0-11e6-963b-bbf792c97104","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.CharSequenceUtils:62","type":"CtIfImpl","sourcecode":"if (c1 == c2) {\n    continue;\n} "},"variableMap":{"c1":"lastCode","c2":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:394","type":"CtIfImpl","sourcecode":"if ((code != '-') && ((((lastCode != code) && ((code != '0') || (lastCode == '/'))) || (code < '0')) || (code > '8'))) {\n    output.addRight(code);\n} "},"status":-1},{"failures":[],"tindex":"24d86af6-3db0-11e6-963b-893fe1fdeb6e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:113","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"y3\", \"Y3\")"},"variableMap":{"txt":"salt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:202","type":"CtAssignmentImpl","sourcecode":"salt = (\"\" + (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.char[][randomGenerator.nextInt(numSaltChars)])) + (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.char[][randomGenerator.nextInt(numSaltChars)])"},"status":-2},{"failures":[],"tindex":"24d86af7-3db0-11e6-963b-0f473bfc47f5","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.URLCodec:210","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.decodeUrl(bytes)"},"variableMap":{"bytes":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:200","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":-2},{"failures":[],"tindex":"24d86af8-3db0-11e6-963b-954eff1b2099","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:589","type":"CtInvocationImpl","sourcecode":"result.append('R')"},"variableMap":{"result":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:948","type":"CtInvocationImpl","sourcecode":"appendAlternate(value)"},"status":-2},{"failures":[],"tindex":"24d86af9-3db0-11e6-963b-bfdabf012fb2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:196","type":"CtLocalVariableImpl","sourcecode":"final java.security.MessageDigest java.security.MessageDigest = org.apache.commons.codec.digest.DigestUtils.getMd5Digest()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:216","type":"CtLocalVariableImpl","sourcecode":"java.security.MessageDigest java.security.MessageDigest = org.apache.commons.codec.digest.DigestUtils.getMd5Digest()"},"status":-2},{"failures":[43,44,45,46,47,101,48,49,50,102,103],"tindex":"24d86afa-3db0-11e6-963b-cb7158ef5330","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:82","type":"CtAssignmentImpl","sourcecode":"this.char[] = org.apache.commons.codec.language.Soundex.org.apache.commons.codec.language.Soundex.char[]"},"variableMap":{"org.apache.commons.codec.language.Soundex.US_ENGLISH_MAPPING":"data","soundexMapping":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:212","type":"CtAssignmentImpl","sourcecode":"this.char[] = new char[buffSize]"},"status":-1},{"failures":[0,1,2,4,5,104,105,106],"tindex":"24d86afb-3db0-11e6-963b-95e46f700ee7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:356","type":"CtForImpl","sourcecode":"for (int int = 0 ; i <= (rounds - 1) ; i++) {\n    ctx = org.apache.commons.codec.digest.DigestUtils.getDigest(algorithm);\n    if ((i & 1) != 0) {\n        ctx.update(pBytes, 0, keyLen);\n    } else {\n        ctx.update(altResult, 0, blocksize);\n    }\n    if ((i % 3) != 0) {\n        ctx.update(sBytes, 0, saltLen);\n    } \n    if ((i % 7) != 0) {\n        ctx.update(pBytes, 0, keyLen);\n    } \n    if ((i & 1) != 0) {\n        ctx.update(altResult, 0, blocksize);\n    } else {\n        ctx.update(pBytes, 0, keyLen);\n    }\n    altResult = ctx.digest();\n}"},"status":-1},{"failures":[32,33],"tindex":"24d86afc-3db0-11e6-963b-77fa7740453e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:502","type":"CtInvocationImpl","sourcecode":"result.append('H')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:587","type":"CtInvocationImpl","sourcecode":"result.appendAlternate('R')"},"status":-1},{"failures":[],"tindex":"24d86afd-3db0-11e6-963b-6fd0eef52591","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:339","type":"CtLocalVariableImpl","sourcecode":"final int[] int[] = new int[32]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:298","type":"CtLocalVariableImpl","sourcecode":"final int[] int[] = new int[2]"},"status":-2},{"failures":[6,7],"tindex":"24d86afe-3db0-11e6-963b-a72ae11bebb5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:290","type":"CtAssignmentImpl","sourcecode":"t = left"},"variableMap":{"t":"t","left":"t"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:331","type":"CtAssignmentImpl","sourcecode":"t = (t >>> 4) | (t << 28)"},"status":-1},{"failures":[],"tindex":"24d86aff-3db0-11e6-963b-75e8f583c22d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:162","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.decode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-2},{"failures":[],"tindex":"24d86b00-3db0-11e6-963b-9b86c5499b80","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:320","type":"CtIfImpl","sourcecode":"if (text == null) {\n    return null;\n} "},"variableMap":{"text":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:225","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"24d89211-3db0-11e6-963b-af2c5dbf0644","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:78","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"dg\", \"2g\")"},"variableMap":{"txt":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:265","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(str).replaceFirst(\"SSS\")"},"status":-2},{"failures":[],"tindex":"24d89212-3db0-11e6-963b-add29510a766","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:94","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"p+\", \"P\")"},"variableMap":{"txt":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:142","type":"CtAssignmentImpl","sourcecode":"name = getFirst3Last3(name)"},"status":-2},{"failures":[],"tindex":"24d89213-3db0-11e6-963b-9980e67cacc8","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:450","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.bm.Rule.stripQuotes(parts[0])"},"variableMap":{"parts":"parts"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:309","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[1])"},"status":-2},{"failures":[],"tindex":"24d89214-3db0-11e6-963b-dfd43b645f66","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:340","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(tempResult, 0, sBytes, cp, blocksize)"},"variableMap":{"sBytes":"buffer","blocksize":"org.apache.commons.codec.binary.BaseNCodec.DEFAULT_BUFFER_RESIZE_FACTOR","tempResult":"buffer","cp":"readPos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:249","type":"CtIfImpl","sourcecode":"if ((context.byte[]) == null) {\n    context.byte[] = new byte[getDefaultBufferSize()];\n    context.int = 0;\n    context.int = 0;\n} else {\n    final byte[] byte[] = new byte[(context.byte[].int) * (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)];\n    java.lang.System.arraycopy(context.byte[], 0, b, 0, context.byte[].int);\n    context.byte[] = b;\n}"},"status":-2},{"failures":[],"tindex":"24d89215-3db0-11e6-963b-abc61511d94b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:66","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"mb$\", \"m2\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:75","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"q\", \"k\")"},"status":0},{"failures":[107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,76,84,129,130,10,11,131,132,133],"tindex":"24d89216-3db0-11e6-963b-9f3ec868d2e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:528","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getHmacSha384(key).doFinal(valueToDigest)"},"variableMap":{"valueToDigest":"binaryData","key":"binaryData"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:621","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, isChunked, false)"},"status":-1},{"failures":[33,34],"tindex":"24d89217-3db0-11e6-963b-8b2588981bc3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:527","type":"CtInvocationImpl","sourcecode":"result.append('J', 'A')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:450","type":"CtInvocationImpl","sourcecode":"result.append('J', 'K')"},"status":-1},{"failures":[32,33,134,34,92],"tindex":"24d89218-3db0-11e6-963b-cf094d733fa3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:639","type":"CtAssignmentImpl","sourcecode":"index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"S\", \"Z\") ? index + 2 : index + 1"},"status":-1},{"failures":[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163],"tindex":"24d89219-3db0-11e6-963b-457f2c5b474c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:260","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[length]"},"variableMap":{"length":"l"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:142","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[l << 1]"},"status":-1},{"failures":[],"tindex":"24d8921a-3db0-11e6-963b-c5302d58c464","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:751","type":"CtAssignmentImpl","sourcecode":"bitlen = ((bitlen + 7) >> 3) << 3"},"variableMap":{"bitlen":"minRating"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:188","type":"CtAssignmentImpl","sourcecode":"minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int"},"status":-2},{"failures":[],"tindex":"24d8b92b-3db0-11e6-963b-7ddb7ceedf46","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:529","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return org.apache.commons.codec.language.bm.Rule.startsWith(input, content);\n    }\n}"},"variableMap":{"input":"input","content":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:537","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return org.apache.commons.codec.language.bm.Rule.endsWith(input, content);\n    }\n}"},"status":-2},{"failures":[],"tindex":"24d8b92c-3db0-11e6-963b-8fe0cf12e6e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:239","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"out","raw":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:96","type":"CtReturnImpl","sourcecode":"return out"},"status":-2},{"failures":[],"tindex":"24d8b92d-3db0-11e6-963b-d595505e58d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:436","type":"CtIfImpl","sourcecode":"if (incl.contains(\" \")) {\n    throw new java.lang.IllegalArgumentException((((\"Malformed import statement '\" + rawLine) + \"' in \") + location));\n} else {\n    lines.putAll(org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(incl), ((location + \"->\") + incl)));\n}"},"variableMap":{"rawLine":"patternKey","location":"patternKey","lines":"lines","incl":"patternKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:474","type":"CtIfImpl","sourcecode":"if (rules == null) {\n    rules = new java.util.ArrayList<org.apache.commons.codec.language.bm.Rule>();\n    lines.put(patternKey, rules);\n} "},"status":-2},{"failures":[32,33,34],"tindex":"24d8b92e-3db0-11e6-963b-4769bfe200f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:604","type":"CtInvocationImpl","sourcecode":"result.append('X', 'S')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:471","type":"CtIfImpl","sourcecode":"if ((charAt(value, (index + 2))) == 'I') {\n    result.append('J');\n} else {\n    result.append('K');\n}"},"status":-1},{"failures":[],"tindex":"24d8b92f-3db0-11e6-963b-8ba438745b51","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:185","type":"CtAssignmentImpl","sourcecode":"inExtendedComment = false"},"variableMap":{"inExtendedComment":"strict"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:150","type":"CtAssignmentImpl","sourcecode":"this.boolean = strict"},"status":-2},{"failures":[164,66,165,67,68,166,167,69,168,169,170,171,172,173,70,71,17,72],"tindex":"24d8b930-3db0-11e6-963b-310eca4a12e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:618","type":"CtAssignmentImpl","sourcecode":"str = str.substring(0, ((str.length()) - 1))"},"status":-1},{"failures":[34],"tindex":"24d8b931-3db0-11e6-963b-77c9f4653074","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:414","type":"CtInvocationImpl","sourcecode":"result.append(\"KN\", \"N\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:307","type":"CtInvocationImpl","sourcecode":"result.append('S', 'X')"},"status":-1},{"failures":[32,33,92],"tindex":"24d8b932-3db0-11e6-963b-3b925a4a24c6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:503","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[174,175,176,52,53,54],"tindex":"24d8b933-3db0-11e6-963b-ef5c70945c9a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:147","type":"CtAssignmentImpl","sourcecode":"java.lang.String = replacement"},"variableMap":{"lastReplacement":"txt","replacement":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:100","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"t+\", \"T\")"},"status":-1},{"failures":[32,33,34,92],"tindex":"24d8b934-3db0-11e6-963b-9f46639fa8da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:785","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[177,178,123,125,179,126,127,128,180,75,8,18,19,23,24,9,12],"tindex":"24d8b935-3db0-11e6-963b-e5ebf9f11f07","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:182","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.UnixCrypt.crypt(original, null)"},"variableMap":{"original":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:257","type":"CtReturnImpl","sourcecode":"return bytes == null ? null : new java.lang.String(bytes , charset)"},"status":-1},{"failures":[],"tindex":"24d8b936-3db0-11e6-963b-a98f60be0d23","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:384","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Phoneme starts with '(' so must end with ')'\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:291","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be encoded using Q codec\"))"},"status":-2},{"failures":[181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204],"tindex":"24d8b937-3db0-11e6-963b-e1d9936d9408","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:283","type":"CtAssignmentImpl","sourcecode":"l_ascii[(jj - bits)] = '1'"},"variableMap":{"jj":"i","l_ascii":"name2Char","bits":"name2Size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:327","type":"CtAssignmentImpl","sourcecode":"name2Char[(name2Size - i)] = ' '"},"status":-1},{"failures":[35,36,37,38,205,39,40,41],"tindex":"24d8e048-3db0-11e6-963b-4b08bef9c6af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:297","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(saltBytes, ((byte)(0)))"},"variableMap":{"saltBytes":"finalb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:287","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[4], finalb[10], finalb[5], 4, passwd)"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}