{"failureDictionary":{"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":23,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":146,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":182,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":163,"org.apache.commons.codec.language.NysiisTest.testSnat":80,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize":174,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":19,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":52,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":55,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":45,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":86,"org.apache.commons.codec.language.DoubleMetaphone2Test.testEncodeEmpty":9,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":32,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":31,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects":63,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":68,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":165,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":3,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":114,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":28,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":113,"org.apache.commons.codec.language.DoubleMetaphone2Test.testEncodeNull":8,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":155,"org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde":183,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":148,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":37,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":175,"org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation":157,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":35,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":38,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":119,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":187,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":162,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":110,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary":41,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":99,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":57,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":161,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":13,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":12,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples":141,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1":150,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":94,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":33,"org.apache.commons.codec.language.NysiisTest.testCap":69,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":90,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":95,"org.apache.commons.codec.language.Caverphone2Test.testEndMb":10,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":145,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":98,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":24,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":11,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":96,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":97,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":15,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":169,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":21,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":133,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":149,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":17,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":56,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode":65,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":115,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":132,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":135,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":101,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":62,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":20,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":18,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":36,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":44,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":47,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":87,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":124,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":147,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":179,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall":170,"org.apache.commons.codec.language.DoubleMetaphoneTest.testEncodeNull":6,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":108,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone":185,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":43,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":0,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":53,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid":66,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":151,"org.apache.commons.codec.language.NysiisTest.testTranan":84,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3":181,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":109,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":54,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":116,"org.apache.commons.codec.language.NysiisTest.testFal":72,"org.apache.commons.codec.language.NysiisTest.testSnad":79,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":153,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":176,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":105,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":168,"org.apache.commons.codec.language.MetaphoneTest.testPHTOF":1,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize":172,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":27,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":159,"org.apache.commons.codec.language.NysiisTest.testDropBy":82,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":49,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":16,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":46,"org.apache.commons.codec.binary.Base64Test.testBase64":104,"org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull":138,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":51,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":30,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":154,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":134,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":40,"org.apache.commons.codec.binary.Base64Test.testUUID":91,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":144,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":100,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":125,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":50,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":167,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":121,"org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty":4,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":130,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":136,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":129,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize":171,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":58,"org.apache.commons.codec.language.NysiisTest.testRule2":74,"org.apache.commons.codec.language.NysiisTest.testRule1":73,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":120,"org.apache.commons.codec.language.NysiisTest.testRule7":77,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":106,"org.apache.commons.codec.language.MetaphoneTest.testExceedLength":158,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":166,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":59,"org.apache.commons.codec.language.NysiisTest.testRule6":76,"org.apache.commons.codec.language.NysiisTest.testRule5":75,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":186,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":2,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111":140,"org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals":139,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":25,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":128,"org.apache.commons.codec.language.DoubleMetaphoneTest.testEncodeEmpty":7,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":81,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":89,"org.apache.commons.codec.language.NysiisTest.testBran":78,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":85,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":117,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput":143,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":64,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":34,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":118,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":14,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184":5,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":111,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":107,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull":142,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":126,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":102,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":61,"org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding":164,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":42,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":152,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":123,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":160,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize":173,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":131,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":29,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":88,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":122,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":178,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":137,"org.apache.commons.codec.language.NysiisTest.testDad":70,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":112,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le":180,"org.apache.commons.codec.language.NysiisTest.testOthers":83,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":93,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":103,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":177,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":48,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":67,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":156,"org.apache.commons.codec.language.NysiisTest.testDan":71,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":60,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":127,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":26,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":39,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":92,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail":22,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual":184},"transformations":[{"failures":[],"tindex":"1f2bf8d6-3ffd-11e6-90ac-b1ae820d55fa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:152","type":"CtIfImpl","sourcecode":"if ((symb != 'C') && (isPreviousChar(local, n, symb))) {\n    n++;\n} else {\n    switch (symb) {\n        case 'A' :\n        case 'E' :\n        case 'I' :\n        case 'O' :\n        case 'U' :\n            if (n == 0) {\n                code.append(symb);\n            } \n            break;\n        case 'B' :\n            if ((isPreviousChar(local, n, 'M')) && (isLastChar(wdsz, n))) {\n                break;\n            } \n            code.append(symb);\n            break;\n        case 'C' :\n            if (((isPreviousChar(local, n, 'S')) && (!(isLastChar(wdsz, n)))) && ((org.apache.commons.codec.language.Metaphone.org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(local.charAt((n + 1)))) >= 0)) {\n                break;\n            } \n            if (regionMatch(local, n, \"CIA\")) {\n                code.append('X');\n                break;\n            } \n            if ((!(isLastChar(wdsz, n))) && ((org.apache.commons.codec.language.Metaphone.org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(local.charAt((n + 1)))) >= 0)) {\n                code.append('S');\n                break;\n            } \n            if ((isPreviousChar(local, n, 'S')) && (isNextChar(local, n, 'H'))) {\n                code.append('K');\n                break;\n            } \n            if (isNextChar(local, n, 'H')) {\n                if (((n == 0) && (wdsz >= 3)) && (isVowel(local, 2))) {\n                    code.append('K');\n                } else {\n                    code.append('X');\n                }\n            } else {\n                code.append('K');\n            }\n            break;\n        case 'D' :\n            if (((!(isLastChar(wdsz, (n + 1)))) && (isNextChar(local, n, 'G'))) && ((org.apache.commons.codec.language.Metaphone.org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(local.charAt((n + 2)))) >= 0)) {\n                code.append('J');\n                n += 2;\n            } else {\n                code.append('T');\n            }\n            break;\n        case 'G' :\n            if ((isLastChar(wdsz, (n + 1))) && (isNextChar(local, n, 'H'))) {\n                break;\n            } \n            if (((!(isLastChar(wdsz, (n + 1)))) && (isNextChar(local, n, 'H'))) && (!(isVowel(local, (n + 2))))) {\n                break;\n            } \n            if ((n > 0) && ((regionMatch(local, n, \"GN\")) || (regionMatch(local, n, \"GNED\")))) {\n                break;\n            } \n            if (isPreviousChar(local, n, 'G')) {\n                hard = true;\n            } else {\n                hard = false;\n            }\n            if (((!(isLastChar(wdsz, n))) && ((org.apache.commons.codec.language.Metaphone.org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(local.charAt((n + 1)))) >= 0)) && (!hard)) {\n                code.append('J');\n            } else {\n                code.append('K');\n            }\n            break;\n        case 'H' :\n            if (isLastChar(wdsz, n)) {\n                break;\n            } \n            if ((n > 0) && ((org.apache.commons.codec.language.Metaphone.org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(local.charAt((n - 1)))) >= 0)) {\n                break;\n            } \n            if (isVowel(local, (n + 1))) {\n                code.append('H');\n            } \n            break;\n        case 'F' :\n        case 'J' :\n        case 'L' :\n        case 'M' :\n        case 'N' :\n        case 'R' :\n            code.append(symb);\n            break;\n        case 'K' :\n            if (n > 0) {\n                if (!(isPreviousChar(local, n, 'C'))) {\n                    code.append(symb);\n                } \n            } else {\n                code.append(symb);\n            }\n            break;\n        case 'P' :\n            if (isNextChar(local, n, 'H')) {\n                code.append('F');\n            } else {\n                code.append(symb);\n            }\n            break;\n        case 'Q' :\n            code.append('K');\n            break;\n        case 'S' :\n            if (((regionMatch(local, n, \"SH\")) || (regionMatch(local, n, \"SIO\"))) || (regionMatch(local, n, \"SIA\"))) {\n                code.append('X');\n            } else {\n                code.append('S');\n            }\n            break;\n        case 'T' :\n            if ((regionMatch(local, n, \"TIA\")) || (regionMatch(local, n, \"TIO\"))) {\n                code.append('X');\n                break;\n            } \n            if (regionMatch(local, n, \"TCH\")) {\n                break;\n            } \n            if (regionMatch(local, n, \"TH\")) {\n                code.append('0');\n            } else {\n                code.append('T');\n            }\n            break;\n        case 'V' :\n            code.append('F');\n            break;\n        case 'W' :\n        case 'Y' :\n            if ((!(isLastChar(wdsz, n))) && (isVowel(local, (n + 1)))) {\n                code.append(symb);\n            } \n            break;\n        case 'X' :\n            code.append('K');\n            code.append('S');\n            break;\n        case 'Z' :\n            code.append('S');\n            break;\n        default :\n            break;\n    }\n    n++;\n}"},"status":-2},{"failures":[],"tindex":"1f2f2d27-3ffd-11e6-90ac-5175318f400d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:377","type":"CtAssignmentImpl","sourcecode":"s = (s << 4) | (s >>> 28)"},"variableMap":{"s":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:287","type":"CtAssignmentImpl","sourcecode":"left = org.apache.commons.codec.digest.UnixCrypt.dEncrypt(left, right, i, eSwap0, eSwap1, schedule)"},"status":-2},{"failures":[0],"tindex":"1f2f2d28-3ffd-11e6-90ac-4147d100a7da","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:314","type":"CtInvocationImpl","sourcecode":"buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":-1},{"failures":[],"tindex":"1f2f2d29-3ffd-11e6-90ac-a7339889acfa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:79","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"tio\", \"sio\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:108","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"w$\", \"3\")"},"status":0},{"failures":[],"tindex":"1f2f543a-3ffd-11e6-90ac-a96f476ac211","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:88","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('@')"},"status":0},{"failures":[],"tindex":"1f2f543b-3ffd-11e6-90ac-7d21381d3b3f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; (i < (key.int)) && (i < (original.int)) ; i++) {\n    final int int = original[i];\n    key[i] = ((byte)(iChar << 1));\n}"},"variableMap":{"original":"raw","length":"bits","key":"raw"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:280","type":"CtIfImpl","sourcecode":"if (((raw[ii]) & (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits])) == 0) {\n    l_ascii[(jj - bits)] = '0';\n} else {\n    l_ascii[(jj - bits)] = '1';\n}"},"status":-2},{"failures":[],"tindex":"1f30178c-3ffd-11e6-90ac-6ffccb616af1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:621","type":"CtReturnImpl","sourcecode":"return str"},"variableMap":{"str":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:423","type":"CtReturnImpl","sourcecode":"return name"},"status":-2},{"failures":[1,2],"tindex":"1f30178d-3ffd-11e6-90ac-3594df3a9d2c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:117","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"variableMap":{"builder":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:287","type":"CtInvocationImpl","sourcecode":"code.append('X')"},"status":-1},{"failures":[],"tindex":"1f303e9e-3ffd-11e6-90ac-df1d4b683412","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:328","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QCodec.this.java.nio.charset.Charset"},"variableMap":{"charset":"charset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:312","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.this.java.nio.charset.Charset"},"status":-2},{"failures":[],"tindex":"1f303e9f-3ffd-11e6-90ac-513aef551f08","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:451","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)))"},"variableMap":{"ibitWorkArea":"pos","pos":"pos","org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS":"pos","context":"context","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:365","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte"},"status":-2},{"failures":[],"tindex":"1f303ea0-3ffd-11e6-90ac-f5bf4c53ceac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:94","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^y\", \"A\")"},"status":0},{"failures":[],"tindex":"1f303ea1-3ffd-11e6-90ac-4520ce0aff03","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:225","type":"CtReturnImpl","sourcecode":"return decode(((java.lang.String)(value)))"},"variableMap":{"this":"obj","value":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:531","type":"CtReturnImpl","sourcecode":"return decode(((byte[])(obj)))"},"status":-2},{"failures":[],"tindex":"1f3065b2-3ffd-11e6-90ac-a1e4bf47ba83","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:208","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(\"             \")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.B64:73","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-2},{"failures":[3,4,5,6,7,8,9],"tindex":"1f3065b3-3ffd-11e6-90ac-d5fc62423fc8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:88","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} "},"status":-1},{"failures":[10],"tindex":"1f3065b4-3ffd-11e6-90ac-23996bdfb861","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:70","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"mb$\", \"m2\")"},"status":-1},{"failures":[11,12,13,14,15,16,17,18],"tindex":"1f3065b5-3ffd-11e6-90ac-0338faed403e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:350","type":"CtIfImpl","sourcecode":"if (lastCode == '/') {\n    continue;\n} "},"variableMap":{"lastCode":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:395","type":"CtInvocationImpl","sourcecode":"output.addRight(code)"},"status":-1},{"failures":[],"tindex":"1f308cc6-3ffd-11e6-90ac-3d5c3f32630e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:464","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[27], altResult[7], altResult[17], 4, buffer)"},"variableMap":{"altResult":"finalb","buffer":"passwd"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:288","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(((byte)(0)), ((byte)(0)), finalb[11], 2, passwd)"},"status":-2},{"failures":[19],"tindex":"1f308cc7-3ffd-11e6-90ac-c50d9cf45ecc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:252","type":"CtInvocationImpl","sourcecode":"code.append('H')"},"variableMap":{"code":"builder"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:142","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.delete(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.int, java.lang.StringBuilder.length())"},"status":-1},{"failures":[],"tindex":"1f308cc8-3ffd-11e6-90ac-118e62ab7992","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:298","type":"CtLocalVariableImpl","sourcecode":"final int[] int[] = new int[2]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:225","type":"CtLocalVariableImpl","sourcecode":"final int[] int[] = org.apache.commons.codec.digest.UnixCrypt.desSetKey(key)"},"status":-2},{"failures":[20],"tindex":"1f30b3d9-3ffd-11e6-90ac-6783ff69c158","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:616","type":"CtIfImpl","sourcecode":"if (slavoGermanic) {\n    result.append('S');\n} else {\n    result.append('S', 'X');\n}"},"status":-1},{"failures":[],"tindex":"1f30b3da-3ffd-11e6-90ac-ef99a4f78153","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:176","type":"CtAssignmentImpl","sourcecode":"hasUnderscores = true"},"variableMap":{"hasUnderscores":"inMultilineComment"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:268","type":"CtAssignmentImpl","sourcecode":"inMultilineComment = true"},"status":-2},{"failures":[21,22,23],"tindex":"1f30b3db-3ffd-11e6-90ac-abe62c22f45b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:554","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, false)"},"variableMap":{"binaryData":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:313","type":"CtTryImpl","sourcecode":"try {\n    return org.apache.commons.codec.digest.HmacUtils.getHmacSha1(key).doFinal(valueToDigest);\n} catch (final java.lang.IllegalStateException e) {\n    throw new java.lang.IllegalArgumentException(e);\n}"},"status":-1},{"failures":[],"tindex":"1f30b3dc-3ffd-11e6-90ac-3d465707f328","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:291","type":"CtIfImpl","sourcecode":"if (lineSeparator == null) {\n    throw new java.lang.IllegalArgumentException(((\"lineLength \" + lineLength) + \" > 0, but lineSeparator is null\"));\n} "},"variableMap":{"lineSeparator":"sBytes","lineLength":"saltLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:343","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(tempResult, 0, sBytes, cp, (saltLen - cp))"},"status":0},{"failures":[],"tindex":"1f30daed-3ffd-11e6-90ac-4557ae43b271","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:84","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"tia\", \"sia\")"},"status":0},{"failures":[],"tindex":"1f30daee-3ffd-11e6-90ac-213fa4535cc7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:150","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.close()"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:112","type":"CtIfImpl","sourcecode":"if (avail > 0) {\n    final byte[] byte[] = new byte[avail];\n    final int int = org.apache.commons.codec.binary.BaseNCodec.readResults(buf, 0, avail, org.apache.commons.codec.binary.BaseNCodec.Context);\n    if (c > 0) {\n        java.io.OutputStream.write(buf, 0, c);\n    } \n} "},"status":-2},{"failures":[],"tindex":"1f30daef-3ffd-11e6-90ac-9f275c6a872c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:86","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"BeiderMorseEncoder encode parameter is not of type String\")"},"status":0},{"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"tindex":"1f30daf0-3ffd-11e6-90ac-e7eae2ce8359","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:605","type":"CtIfImpl","sourcecode":"if ((input.charAt(i)) != (prefix.charAt(i))) {\n    return false;\n} "},"variableMap":{"input":"input","prefix":"input","i":"ipl"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:706","type":"CtIfImpl","sourcecode":"if (ipl > (input.length())) {\n    return false;\n} "},"status":-1},{"failures":[39,40],"tindex":"1f310201-3ffd-11e6-90ac-0b175fcd601e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:281","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-1},{"failures":[11,12,13,14,15,16,17,18],"tindex":"1f310202-3ffd-11e6-90ac-e37786e4e9e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:429","type":"CtAssignmentImpl","sourcecode":"text = text.toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale)"},"status":-1},{"failures":[41],"tindex":"1f3324e3-3ffd-11e6-90ac-dd5eeb9f235a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:462","type":"CtInvocationImpl","sourcecode":"sb.append(\"Rule\")"},"variableMap":{"sb":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:269","type":"CtInvocationImpl","sourcecode":"code.append(symb)"},"status":-1},{"failures":[],"tindex":"1f3324e4-3ffd-11e6-90ac-317086555b04","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:953","type":"CtInvocationImpl","sourcecode":"appendAlternate(alternate)"},"variableMap":{"this":"this","alternate":"primary"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:952","type":"CtInvocationImpl","sourcecode":"appendPrimary(primary)"},"status":-2},{"failures":[],"tindex":"1f339a15-3ffd-11e6-90ac-750d03f491e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:282","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"variableMap":{"index":"maxPhonemes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:188","type":"CtAssignmentImpl","sourcecode":"this.int = maxPhonemes"},"status":-2},{"failures":[],"tindex":"1f33c126-3ffd-11e6-90ac-b11c439f6f07","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:495","type":"CtLocalVariableImpl","sourcecode":"char char = '\u0000'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:497","type":"CtLocalVariableImpl","sourcecode":"final char char = input.charAt(index)"},"status":-2},{"failures":[],"tindex":"1f33c127-3ffd-11e6-90ac-276bcfc571f1","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:199","type":"CtReturnImpl","sourcecode":"return context.startsWith(java.lang.String)"},"variableMap":{"context":"cs2","pattern":"cs1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:78","type":"CtReturnImpl","sourcecode":"return cs1.equals(cs2)"},"status":-2},{"failures":[],"tindex":"1f33c128-3ffd-11e6-90ac-dbefe4879e7c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:436","type":"CtIfImpl","sourcecode":"if ((chrs[index]) == (element[0])) {\n    chrs[index] = element[1];\n    break;\n} "},"variableMap":{"chrs":"out","index":"count","element":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:274","type":"CtIfImpl","sourcecode":"if (mapped != 0) {\n    if ((mapped != '0') && (mapped != last)) {\n        out[(count++)] = mapped;\n    } \n    last = mapped;\n} "},"status":-2},{"failures":[],"tindex":"1f33c129-3ffd-11e6-90ac-bde3678d5dd5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:238","type":"CtIfImpl","sourcecode":"if ((ii & 1) == 1) {\n    ctx.update(finalb[j]);\n} else {\n    ctx.update(keyBytes[j]);\n}"},"variableMap":{"ii":"read","keyBytes":"buffer","finalb":"buffer","ctx":"digest","j":"read"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:797","type":"CtInvocationImpl","sourcecode":"digest.update(buffer, 0, read)"},"status":-2},{"failures":[],"tindex":"1f33e83a-3ffd-11e6-90ac-c3129ee87a61","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:212","type":"CtAssignmentImpl","sourcecode":"this.byte = pad"},"status":-2},{"failures":[42,43,44,45,19,46,47,48,49],"tindex":"1f33e83b-3ffd-11e6-90ac-ab9b240eb498","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:166","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String[] java.lang.String[] = line.split(\"\\\\s+\")"},"variableMap":{"line":"inputContext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:519","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String[] java.lang.String[] = rule.getReplacements(inputContext, (lastChar == '\u0000'))"},"status":-1},{"failures":[50,51,52,53,54,55,56,57,58,59,60,61],"tindex":"1f33e83c-3ffd-11e6-90ac-2bec4d7db8ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:362","type":"CtIfImpl","sourcecode":"if ((bytes[(++i)]) == (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)) {\n    continue;\n} "},"status":-1},{"failures":[55,56,59,0,62,63,64],"tindex":"1f33e83d-3ffd-11e6-90ac-29d2adabeafc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:67","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('\"')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:107","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet.set(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":-1},{"failures":[54,55,56,65,66,57,58,59,60,61],"tindex":"1f33e83e-3ffd-11e6-90ac-5b579f0569b5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:547","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha384Digest().digest(data)"},"variableMap":{"data":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:410","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(bytes)"},"status":-1},{"failures":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85],"tindex":"1f33e83f-3ffd-11e6-90ac-d12e41aa8df4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:142","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[l << 1]"},"variableMap":{"l":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:283","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = org.apache.commons.codec.language.Nysiis.transcodeRemaining(chars[(i - 1)], chars[i], next, aNext)"},"status":-1},{"failures":[],"tindex":"1f340f50-3ffd-11e6-90ac-f12ea4788fd7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:68","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('#')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:87","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('>')"},"status":0},{"failures":[],"tindex":"1f340f51-3ffd-11e6-90ac-ada608eedd04","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:277","type":"CtReturnImpl","sourcecode":"return ((((letter.equalsIgnoreCase(\"E\")) || (letter.equalsIgnoreCase(\"A\"))) || (letter.equalsIgnoreCase(\"O\"))) || (letter.equalsIgnoreCase(\"I\"))) || (letter.equalsIgnoreCase(\"U\"))"},"variableMap":{"letter":"base64"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:524","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.isBase64(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(base64))"},"status":-2},{"failures":[39,40],"tindex":"1f340f52-3ffd-11e6-90ac-9bd4808d10b5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:711","type":"CtIfImpl","sourcecode":"if (isVowel(charAt(value, (index + 1)))) {\n    result.append('A', 'F');\n} else {\n    result.append('A');\n}"},"status":-1},{"failures":[86,87,88],"tindex":"1f340f53-3ffd-11e6-90ac-25c0b19077f6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:481","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[12], altResult[33], altResult[54], 4, buffer)"},"status":-1},{"failures":[89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128],"tindex":"1f340f54-3ffd-11e6-90ac-e1c11101a816","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:432","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[(context.int) - (context.int)]"},"variableMap":{"pos":"decodeSize","context":"context","readPos":"decodeSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:436","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = ensureBufferSize(int, context)"},"status":-1},{"failures":[],"tindex":"1f340f55-3ffd-11e6-90ac-5918208cb989","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:477","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[50], altResult[8], altResult[29], 4, buffer)"},"variableMap":{"altResult":"b","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:234","type":"CtForImpl","sourcecode":"for ( ; i < 13 ; i++) {\n    int int = 0;\n    int int = 0;\n    for ( ; j < 6 ; j++) {\n        c <<= 1;\n        if (((b[y]) & u) != 0) {\n            c |= 1;\n        } \n        u >>>= 1;\n        if (u == 0) {\n            y++;\n            u = 128;\n        } \n        buffer.setCharAt(i, ((char)(org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][c])));\n    }\n}"},"status":-2},{"failures":[],"tindex":"1f343666-3ffd-11e6-90ac-652b0e6ab6d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.RefinedSoundex:196","type":"CtInvocationImpl","sourcecode":"sBuf.append(current)"},"variableMap":{"current":"symb","sBuf":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:266","type":"CtInvocationImpl","sourcecode":"code.append(symb)"},"status":-2},{"failures":[],"tindex":"1f343667-3ffd-11e6-90ac-af97f35bc988","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:102","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    salt = (org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8));\n} "},"variableMap":{"salt":"salt","org.apache.commons.codec.digest.Sha2Crypt.SHA256_PREFIX":"salt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:189","type":"CtIfImpl","sourcecode":"if ((m == null) || (!(m.find()))) {\n    throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n} "},"status":-2},{"failures":[],"tindex":"1f343668-3ffd-11e6-90ac-b97b9c93f723","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:450","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = ((byte)(((context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)))"},"variableMap":{"ibitWorkArea":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS","pos":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS","org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS","context":"context","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:364","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-2},{"failures":[],"tindex":"1f343669-3ffd-11e6-90ac-c1ae75588d12","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:367","type":"CtInvocationImpl","sourcecode":"buffer.write(((char)((u << 4) + l)))"},"variableMap":{"u":"avail","buffer":"out","l":"avail"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:112","type":"CtIfImpl","sourcecode":"if (avail > 0) {\n    final byte[] byte[] = new byte[avail];\n    final int int = org.apache.commons.codec.binary.BaseNCodec.readResults(buf, 0, avail, org.apache.commons.codec.binary.BaseNCodec.Context);\n    if (c > 0) {\n        java.io.OutputStream.write(buf, 0, c);\n    } \n} "},"status":-2},{"failures":[24,25,26,27,28,129,130,29,30,31,32,33,131,34,35,36,37,38],"tindex":"1f34366a-3ffd-11e6-90ac-cd71aa1adbf6","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:413","type":"CtIfImpl","sourcecode":"if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n    inMultilineComment = false;\n} "},"variableMap":{"org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_END":"line","line":"org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_START","inMultilineComment":"inExtendedComment"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:188","type":"CtIfImpl","sourcecode":"if (line.startsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n    inExtendedComment = true;\n} else if ((line.length()) > 0) {\n    ls.add(line);\n} "},"status":-1},{"failures":[],"tindex":"1f34366b-3ffd-11e6-90ac-cf267de87878","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:86","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"BeiderMorseEncoder encode parameter is not of type String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:149","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(((\"This codec cannot decode \" + encoding) + \" encoded content\"))"},"status":-2},{"failures":[132],"tindex":"1f345d7c-3ffd-11e6-90ac-67adf1000560","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String"},"variableMap":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:249","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md2(data))"},"status":-1},{"failures":[],"tindex":"1f345d7d-3ffd-11e6-90ac-a9c95e3fa3f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:254","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"variableMap":{"length":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:321","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-2},{"failures":[],"tindex":"1f345d7e-3ffd-11e6-90ac-f75e4bc0d036","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:102","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    salt = (org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8));\n} "},"variableMap":{"salt":"value","org.apache.commons.codec.digest.Sha2Crypt.SHA256_PREFIX":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:684","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, \"OM\", \"AM\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, \"VAN \", \"VON \"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) {\n    result.append('T');\n} else {\n    result.append('0', 'T');\n}"},"status":-2},{"failures":[42,43,44,45,19,49],"tindex":"1f345d7f-3ffd-11e6-90ac-671b8edffa40","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:532","type":"CtIfImpl","sourcecode":"if (branching) {\n    nextBranches.add(nextBranch);\n} else {\n    break;\n}"},"status":-1},{"failures":[],"tindex":"1f345d80-3ffd-11e6-90ac-57453b76f95a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:231","type":"CtLocalVariableImpl","sourcecode":"int int = 2"},"status":-2},{"failures":[],"tindex":"1f345d81-3ffd-11e6-90ac-6b795332f087","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:70","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ci\", \"si\")"},"status":0},{"failures":[],"tindex":"1f345d82-3ffd-11e6-90ac-0d9fa5167f89","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:549","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = content.substring(1, ((content.length()) - 1))"},"variableMap":{"content":"pattern"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:472","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = r.java.lang.String.substring(0, 1)"},"status":-2},{"failures":[133,134,135,136,137],"tindex":"1f348493-3ffd-11e6-90ac-918cc8fe2864","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:58","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"e$\", \"\")"},"status":-1},{"failures":[138],"tindex":"1f348494-3ffd-11e6-90ac-8f19bbea8f84","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:245","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[39,40],"tindex":"1f348495-3ffd-11e6-90ac-9532428f9f3e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:392","type":"CtInvocationImpl","sourcecode":"result.append(\"TK\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:656","type":"CtInvocationImpl","sourcecode":"result.append(\"SK\")"},"status":-1},{"failures":[42,43,44,45,19,48,49],"tindex":"1f348496-3ffd-11e6-90ac-714ead32f53f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:275","type":"CtInvocationImpl","sourcecode":"code.append('F')"},"variableMap":{"code":"builder"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:117","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"status":-1},{"failures":[133,134,135,139,140,141,136,137],"tindex":"1f348497-3ffd-11e6-90ac-f5b864cc2127","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:91","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"[aeiou]\", \"3\")"},"status":-1},{"failures":[],"tindex":"1f348498-3ffd-11e6-90ac-592d5e16e0ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:93","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('\\\\')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:80","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('/')"},"status":0},{"failures":[142],"tindex":"1f34aba9-3ffd-11e6-90ac-954415f754d8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:248","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[143],"tindex":"1f34abaa-3ffd-11e6-90ac-45cb9a3b11d8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:204","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"DoubleMetaphone encode parameter is not of type String\")"},"status":-1},{"failures":[144],"tindex":"1f34abab-3ffd-11e6-90ac-ff8030efedc0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:153","type":"CtUnaryOperatorImpl","sourcecode":"n++"},"variableMap":{"n":"ii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:224","type":"CtOperatorAssignmentImpl","sourcecode":"ii -= 16"},"status":-1},{"failures":[110,111,115,116,117,145,146,147,148,149,150],"tindex":"1f36806c-3ffd-11e6-90ac-153b46748658","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:246","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.hmacMd5(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"variableMap":{"valueToDigest":"string","key":"string"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:114","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.getBytes(string, org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-1},{"failures":[],"tindex":"1f36a77d-3ffd-11e6-90ac-e96573fe11c0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:340","type":"CtReturnImpl","sourcecode":"return decode(((java.lang.String)(obj)))"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:310","type":"CtIfImpl","sourcecode":"if (obj == null) {\n    return null;\n} else if (obj instanceof byte[]) {\n    return encode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return encode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be URL encoded\"));\n}"},"status":-2},{"failures":[],"tindex":"1f36a77e-3ffd-11e6-90ac-8f7c1e14211d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:362","type":"CtReturnImpl","sourcecode":"return rules"},"variableMap":{"rules":"lines"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:489","type":"CtReturnImpl","sourcecode":"return lines"},"status":-2},{"failures":[151,152,153,154,155],"tindex":"1f36a77f-3ffd-11e6-90ac-311ad78b5dab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:113","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[avail]"},"variableMap":{"avail":"decodeSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:352","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = ensureBufferSize(int, context)"},"status":-1},{"failures":[],"tindex":"1f36a780-3ffd-11e6-90ac-73fe119608d5","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:231","type":"CtLocalVariableImpl","sourcecode":"int int = 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.B64:57","type":"CtLocalVariableImpl","sourcecode":"int int = (((b2 << 16) & 16777215) | ((b1 << 8) & 65535)) | (b0 & 255)"},"status":-2},{"failures":[],"tindex":"1f36a781-3ffd-11e6-90ac-f9a71d50692e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:268","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"status":-2},{"failures":[156,157,158],"tindex":"1f36a782-3ffd-11e6-90ac-b567509f9ef1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:252","type":"CtInvocationImpl","sourcecode":"code.append('H')"},"variableMap":{"code":"local"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:122","type":"CtInvocationImpl","sourcecode":"local.append(inwd)"},"status":-1},{"failures":[159,160,161,162,163,164,165,166,167,151,153,154,155,168,169],"tindex":"1f36ce93-3ffd-11e6-90ac-1d24e175be8f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:453","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha256Digest().digest(data)"},"variableMap":{"data":"pArray"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:427","type":"CtReturnImpl","sourcecode":"return pArray"},"status":-1},{"failures":[],"tindex":"1f36ce94-3ffd-11e6-90ac-3df96c2b47f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:253","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.SoundexUtils.clean(str)"},"variableMap":{"str":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:109","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"w\", \"2\")"},"status":-2},{"failures":[],"tindex":"1f36ce95-3ffd-11e6-90ac-ed75728531c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:110","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ly\", \"Ly\")"},"variableMap":{"txt":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:270","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(str).replaceFirst(\"D\")"},"status":-2},{"failures":[89,91,98],"tindex":"1f36ce96-3ffd-11e6-90ac-3ddff516f30e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:433","type":"CtAssignmentImpl","sourcecode":"context.boolean = true"},"status":-2},{"failures":[133,134,135,10,139,140,141,136,137],"tindex":"1f36ce97-3ffd-11e6-90ac-11864393b552","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.RuleType:47","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.RuleType.this.java.lang.String"},"variableMap":{"name":"org.apache.commons.codec.language.Caverphone2.TEN_1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:128","type":"CtReturnImpl","sourcecode":"return txt.substring(0, org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String.length())"},"status":-1},{"failures":[72,73,82],"tindex":"1f36ce98-3ffd-11e6-90ac-e706e1c16dff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:264","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(str).replaceFirst(\"FF\")"},"status":-1},{"failures":[170],"tindex":"1f36ce99-3ffd-11e6-90ac-dfdefd4ee257","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:521","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(keyBytes, null)"},"variableMap":{"keyBytes":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:141","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Md5Crypt.md5Crypt(keyBytes, ((org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8))))"},"status":-1},{"failures":[],"tindex":"1f36f5aa-3ffd-11e6-90ac-796bd546fff5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:90","type":"CtReturnImpl","sourcecode":"return +1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:492","type":"CtReturnImpl","sourcecode":"return index"},"status":-2},{"failures":[110,111,113,115,171,172,116,117,118,151,145,146,173,147,174,148,149,153],"tindex":"1f36f5ab-3ffd-11e6-90ac-2fb75fe035c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:358","type":"CtReturnImpl","sourcecode":"return index + 2"},"variableMap":{"index":"org.apache.commons.codec.binary.BaseNCodec.EOF"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:105","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int"},"status":-1},{"failures":[80,82,85],"tindex":"1f36f5ac-3ffd-11e6-90ac-e7b924941dc0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:158","type":"CtIfImpl","sourcecode":"if ((curr == 'H') && ((!(org.apache.commons.codec.language.Nysiis.isVowel(prev))) || (!(org.apache.commons.codec.language.Nysiis.isVowel(next))))) {\n    return new char[]{ prev };\n} "},"status":-1},{"failures":[],"tindex":"1f36f5ad-3ffd-11e6-90ac-476dcdb05bbf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:450","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.bm.Rule.stripQuotes(parts[0])"},"variableMap":{"parts":"parts"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:290","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = parts[0]"},"status":-2},{"failures":[],"tindex":"1f36f5ae-3ffd-11e6-90ac-69626fc5fd88","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:289","type":"CtReturnImpl","sourcecode":"return encode(((java.lang.String)(obj)))"},"variableMap":{"obj":"ascii","this":"ascii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:120","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((byte[])(ascii)))"},"status":-2},{"failures":[],"tindex":"1f36f5af-3ffd-11e6-90ac-ab4f070a94cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:176","type":"CtAssignmentImpl","sourcecode":"hasUnderscores = true"},"variableMap":{"hasUnderscores":"doEncode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:46","type":"CtAssignmentImpl","sourcecode":"this.boolean = doEncode"},"status":-2},{"failures":[175,86,87,88,176,177,178,179],"tindex":"1f36f5b0-3ffd-11e6-90ac-19fac269a043","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:368","type":"CtIfImpl","sourcecode":"if ((i & 1) != 0) {\n    ctx.update(pBytes, 0, keyLen);\n} else {\n    ctx.update(altResult, 0, blocksize);\n}"},"status":-1},{"failures":[180],"tindex":"1f371cc1-3ffd-11e6-90ac-c96c10b684a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:579","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha384(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"variableMap":{"data":"string"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:217","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.getBytes(string, org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-1},{"failures":[],"tindex":"1f371cc2-3ffd-11e6-90ac-6f724d4b8a31","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:604","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (prefix.length()) ; i++) {\n    if ((input.charAt(i)) != (prefix.charAt(i))) {\n        return false;\n    } \n}"},"variableMap":{"input":"suffix","prefix":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:276","type":"CtIfImpl","sourcecode":"if ((suffix.length()) > (input.length())) {\n    return false;\n} "},"status":-2},{"failures":[3,181,20,182,183,184,39,40,185],"tindex":"1f371cc3-3ffd-11e6-90ac-a32f31902ad1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:905","type":"CtIfImpl","sourcecode":"if ((index < 0) || (index >= (value.length()))) {\n    return java.lang.Character.java.lang.Character.char;\n} "},"status":-1},{"failures":[],"tindex":"1f3743d4-3ffd-11e6-90ac-370134a5389c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:618","type":"CtAssignmentImpl","sourcecode":"str = str.substring(0, ((str.length()) - 1))"},"variableMap":{"str":"name2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:240","type":"CtAssignmentImpl","sourcecode":"name2 = getFirst3Last3(name2)"},"status":-2},{"failures":[],"tindex":"1f3743d5-3ffd-11e6-90ac-bb0bc7969505","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:255","type":"CtIfImpl","sourcecode":"if ((str.length()) == 0) {\n    return str;\n} "},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:403","type":"CtReturnImpl","sourcecode":"return metaphone(str)"},"status":-2},{"failures":[],"tindex":"1f376ae6-3ffd-11e6-90ac-b30a2d5dbde1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:88","type":"CtAssignmentImpl","sourcecode":"upperName = upperName.replaceAll(str, org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"str":"cachedString","upperName":"cachedString","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"cachedString"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:85","type":"CtAssignmentImpl","sourcecode":"java.lang.String = null"},"status":-2},{"failures":[],"tindex":"1f376ae7-3ffd-11e6-90ac-9f3b6ad55139","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:284","type":"CtAssignmentImpl","sourcecode":"this.byte[] = org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.byte[]"},"variableMap":{"encodeTable":"buffer","org.apache.commons.codec.binary.Base32.HEX_ENCODE_TABLE":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:250","type":"CtAssignmentImpl","sourcecode":"context.byte[] = new byte[getDefaultBufferSize()]"},"status":-2},{"failures":[50,186,51,187,53,54,55,56,65,58,63,61],"tindex":"1f376ae8-3ffd-11e6-90ac-7d6c09a90bab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:324","type":"CtForEachImpl","sourcecode":"for (final byte byte : bytes) {\n    int int = c;\n    if (b < 0) {\n        b = 256 + b;\n    } \n    if (printable.get(b)) {\n        buffer.write(b);\n    } else {\n        org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer);\n    }\n}"},"status":-1},{"failures":[133,135,140],"tindex":"1f376ae9-3ffd-11e6-90ac-179ea7c25919","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:117","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"l\", \"2\")"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}