{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":14,"org.apache.commons.codec.binary.HexTest.testCustomCharset":72,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":46,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":130,"org.apache.commons.codec.language.NysiisTest.testSnat":90,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":24,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":23,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":80,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":131,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":77,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR":110,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":61,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":137,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":16,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":26,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":66,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":68,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":97,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":129,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray":119,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":128,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":54,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":102,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples":35,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":101,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes":118,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":17,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":18,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":25,"org.apache.commons.codec.language.NysiisTest.testCap":81,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":59,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":124,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":100,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":99,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":104,"org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean":28,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":126,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":30,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":50,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull":116,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":5,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode":6,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":32,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":58,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":106,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":75,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":9,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":13,"org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString":96,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":107,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":125,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":67,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":41,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":2,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected":112,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":47,"org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals":53,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt":57,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":3,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":123,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":8,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":49,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3":78,"org.apache.commons.codec.language.NysiisTest.testTranan":94,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":44,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":4,"org.apache.commons.codec.language.NysiisTest.testFal":84,"org.apache.commons.codec.language.NysiisTest.testSnad":89,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":52,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":55,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":135,"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":56,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray":98,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":60,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":71,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter":40,"org.apache.commons.codec.language.NysiisTest.testDropBy":92,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail":108,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":105,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":22,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":136,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":31,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":12,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":51,"org.apache.commons.codec.binary.Base64Test.testUUID":70,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":133,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":36,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":63,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":62,"org.apache.commons.codec.language.NysiisTest.testRule2":86,"org.apache.commons.codec.language.NysiisTest.testRule1":85,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":132,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":7,"org.apache.commons.codec.language.NysiisTest.testRule6":87,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111":34,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":45,"org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals":33,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":19,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":76,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":42,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":69,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":91,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":73,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected":111,"org.apache.commons.codec.language.NysiisTest.testBran":88,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":95,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":0,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":10,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":65,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":38,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":48,"org.apache.commons.codec.language.SoundexTest.testEncodeEmpty":122,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":103,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184":29,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":1,"org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour":120,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":43,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":134,"org.apache.commons.codec.binary.HexTest.testEncodeEmpty":117,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":127,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":64,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":21,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":37,"org.apache.commons.codec.language.NysiisTest.testDad":82,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":109,"org.apache.commons.codec.language.NysiisTest.testOthers":93,"org.apache.commons.codec.language.SoundexTest.testDifference":121,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":79,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":39,"org.apache.commons.codec.language.NysiisTest.testDan":83,"org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1":74,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":20,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":11,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH":115,"org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString":27,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH":113,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN":114,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":15},"transformations":[{"failures":[],"tindex":"f9bb7622-3d57-11e6-9226-611c70467e24","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:83","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"b\", \"p\")"},"variableMap":{"txt":"cachedString"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:85","type":"CtAssignmentImpl","sourcecode":"java.lang.String = null"},"status":-2},{"failures":[],"tindex":"f9bbc443-3d57-11e6-9226-0b060b6903e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:243","type":"CtOperatorAssignmentImpl","sourcecode":"ii >>= 1"},"variableMap":{"ii":"org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:391","type":"CtOperatorAssignmentImpl","sourcecode":"context.int += org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int"},"status":-2},{"failures":[],"tindex":"f9bbc444-3d57-11e6-9226-213d72a87bd9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:384","type":"CtAssignmentImpl","sourcecode":"ch = java.lang.Character.toLowerCase(ch)"},"variableMap":{"ch":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:379","type":"CtAssignmentImpl","sourcecode":"code = '4'"},"status":-2},{"failures":[],"tindex":"f9bbc445-3d57-11e6-9226-6f65bf87e105","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:330","type":"CtLocalVariableImpl","sourcecode":"int int = ((v ^ (v << 16)) ^ r) ^ (sArr[(s + 1)])"},"status":-2},{"failures":[0,1,2,3],"tindex":"f9bbc446-3d57-11e6-9226-0f5c1dc17f38","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:337","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QCodec.this.java.nio.charset.Charset.name()"},"variableMap":{"charset":"org.apache.commons.codec.Charsets.UTF_8"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:126","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(keyBytes.getBytes(org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset), salt)"},"status":-1},{"failures":[4,5,6,7,8,9,10],"tindex":"f9bc8797-3d57-11e6-9226-6f4523c59267","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:101","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('|')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:104","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet.set(i)"},"status":-1},{"failures":[],"tindex":"f9bc8798-3d57-11e6-9226-bf988044d697","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:489","type":"CtReturnImpl","sourcecode":"return lines"},"variableMap":{"lines":"rules"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:362","type":"CtReturnImpl","sourcecode":"return rules"},"status":-2},{"failures":[],"tindex":"f9bc8799-3d57-11e6-9226-ff14928ea03d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:406","type":"CtIfImpl","sourcecode":"if ((pArray == null) || ((pArray.int) == 0)) {\n    return pArray;\n} "},"variableMap":{"pArray":"bytes","length":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:180","type":"CtIfImpl","sourcecode":"if (hasUnderscores) {\n    final byte[] byte[] = new byte[bytes.int];\n    for (int int = 0 ; i < (bytes.int) ; i++) {\n        final byte byte = bytes[i];\n        if (b != (org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte)) {\n            tmp[i] = b;\n        } else {\n            tmp[i] = org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte;\n        }\n    }\n    return org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(tmp);\n} "},"status":-2},{"failures":[11,12,13,14],"tindex":"f9bcaeaa-3d57-11e6-9226-274da6aa6319","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:769","type":"CtInvocationImpl","sourcecode":"result.append('S')"},"status":-1},{"failures":[15,16],"tindex":"f9bcd5bb-3d57-11e6-9226-ab76dd5b0867","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.B64:62","type":"CtOperatorAssignmentImpl","sourcecode":"w >>= 6"},"variableMap":{"w":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:345","type":"CtAssignmentImpl","sourcecode":"c = results[1]"},"status":-1},{"failures":[17,18],"tindex":"f9bcfccc-3d57-11e6-9226-d9c8da95846a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:751","type":"CtAssignmentImpl","sourcecode":"bitlen = ((bitlen + 7) >> 3) << 3"},"variableMap":{"bitlen":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:764","type":"CtUnaryOperatorImpl","sourcecode":"len--"},"status":-1},{"failures":[19,20,21,22,23,24,25,26],"tindex":"f9bcfccd-3d57-11e6-9226-0797ceed2a91","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:123","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.Set<java.lang.String>) {\n    if (sl.java.util.Set<java.lang.String>.contains(lang)) {\n        ls.add(lang);\n    } \n}"},"variableMap":{"languages":"languages","ls":"languages","sl":"sl"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:141","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : sl.java.util.Set<java.lang.String>) {\n    ls.add(lang);\n}"},"status":-1},{"failures":[],"tindex":"f9bcfcce-3d57-11e6-9226-41cb0a83d780","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:231","type":"CtLocalVariableImpl","sourcecode":"int int = 2"},"status":-2},{"failures":[],"tindex":"f9bcfccf-3d57-11e6-9226-270bcab27abd","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:214","type":"CtIfImpl","sourcecode":"if (((name1 == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name1))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name1))) {\n    return false;\n} else if (((name2 == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name2))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name2))) {\n    return false;\n} else if (((name1.length()) == 1) || ((name2.length()) == 1)) {\n    return false;\n} else if (name1.equalsIgnoreCase(name2)) {\n    return true;\n} "},"variableMap":{"org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"str2","name2":"str2","name1":"str2","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"str1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:415","type":"CtReturnImpl","sourcecode":"return metaphone(str1).equals(metaphone(str2))"},"status":-2},{"failures":[27,28],"tindex":"f9bcfcd0-3d57-11e6-9226-f119b3d2c849","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:470","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"f9bd7201-3d57-11e6-9226-5b97ee88e043","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:206","type":"CtReturnImpl","sourcecode":"return b"},"variableMap":{"b":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:752","type":"CtReturnImpl","sourcecode":"return index"},"status":-2},{"failures":[],"tindex":"f9bd7202-3d57-11e6-9226-177cb7109386","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:222","type":"CtWhileImpl","sourcecode":"while (ii > 0) {\n    ctx.update(finalb, 0, (ii > 16 ? 16 : ii));\n    ii -= 16;\n}"},"variableMap":{"ii":"cnt","finalb":"altResult","ctx":"ctx"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:223","type":"CtWhileImpl","sourcecode":"while (cnt > blocksize) {\n    ctx.update(altResult, 0, blocksize);\n    cnt -= blocksize;\n}"},"status":-2},{"failures":[29],"tindex":"f9bd7203-3d57-11e6-9226-6f43ec21c195","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:601","type":"CtIfImpl","sourcecode":"if ((prefix.length()) > (input.length())) {\n    return false;\n} "},"variableMap":{"input":"cs1","prefix":"cs2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:74","type":"CtIfImpl","sourcecode":"if ((cs1 == null) || (cs2 == null)) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"f9bd7204-3d57-11e6-9226-fb7332f18986","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:217","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Soundex.this.char[]"},"variableMap":{"soundexMapping":"org.apache.commons.codec.language.Nysiis.CHARS_NN"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:141","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[]"},"status":-2},{"failures":[],"tindex":"f9bd9915-3d57-11e6-9226-c961276a445a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:210","type":"CtAssignmentImpl","sourcecode":"this.int = chunkSeparatorLength"},"variableMap":{"chunkSeparatorLength":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:358","type":"CtOperatorAssignmentImpl","sourcecode":"c &= 268435455"},"status":-2},{"failures":[],"tindex":"f9bd9916-3d57-11e6-9226-c3b4ad1f76f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:184","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    saltString = org.apache.commons.codec.digest.B64.getRandomSalt(8);\n} else {\n    final java.util.regex.Pattern java.util.regex.Pattern = java.util.regex.Pattern.compile(((\"^\" + (prefix.replace(\"$\", \"\\\\$\"))) + \"([\\\\.\\\\/a-zA-Z0-9]{1,8}).*\"));\n    final java.util.regex.Matcher java.util.regex.Matcher = p.matcher(salt);\n    if ((m == null) || (!(m.find()))) {\n        throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n    } \n    saltString = m.group(1);\n}"},"variableMap":{"saltString":"str","salt":"org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE","prefix":"org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:613","type":"CtIfImpl","sourcecode":"if (str.startsWith(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n    str = str.substring(1);\n} "},"status":-2},{"failures":[30,31,32,33,34,35,36,37],"tindex":"f9bd9917-3d57-11e6-9226-05a3aef8bb91","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:91","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"[aeiou]\", \"3\")"},"status":-1},{"failures":[38,39,40,41,42,43,44,45,46,47],"tindex":"f9bd9918-3d57-11e6-9226-4d153350fffa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:306","type":"CtInvocationImpl","sourcecode":"code.append('T')"},"status":-1},{"failures":[],"tindex":"f9bd9919-3d57-11e6-9226-0f5988863822","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:139","type":"CtIfImpl","sourcecode":"if (charset.equals(\"\")) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\");\n} "},"variableMap":{"charset":"location"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:440","type":"CtInvocationImpl","sourcecode":"lines.putAll(org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(incl), ((location + \"->\") + incl)))"},"status":-2},{"failures":[],"tindex":"f9bd991a-3d57-11e6-9226-fd67c4380b5a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:82","type":"CtForImpl","sourcecode":"for (int int = '0' ; i <= '9' ; i++) {\n    org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(i);\n}"},"variableMap":{"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:92","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('[')"},"status":0},{"failures":[38],"tindex":"f9bd991b-3d57-11e6-9226-39479a13726e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:469","type":"CtInvocationImpl","sourcecode":"sb.append('|')"},"variableMap":{"sb":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:197","type":"CtInvocationImpl","sourcecode":"code.append('K')"},"status":-1},{"failures":[48,49],"tindex":"f9bd991c-3d57-11e6-9226-efca96090f86","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:90","type":"CtReturnImpl","sourcecode":"return +1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:103","type":"CtReturnImpl","sourcecode":"return b < 0 ? 256 + b : b"},"status":-1},{"failures":[50,51,52,0,1,2,3],"tindex":"f9bd991d-3d57-11e6-9226-fd0ab15ff5f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:500","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(sBytes, ((byte)(0)))"},"variableMap":{"sBytes":"finalb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:261","type":"CtInvocationImpl","sourcecode":"ctx1.update(finalb, 0, org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.int)"},"status":-1},{"failures":[15,16],"tindex":"f9bdc02e-3d57-11e6-9226-4f095321a110","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:353","type":"CtAssignmentImpl","sourcecode":"d = results[1]"},"status":-1},{"failures":[],"tindex":"f9bdc02f-3d57-11e6-9226-29082b1a6f7b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:120","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.flush()"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:119","type":"CtIfImpl","sourcecode":"if (propagate) {\n    java.io.OutputStream.flush();\n} "},"status":-2},{"failures":[50,51,52,0,1,2,3],"tindex":"f9bde740-3d57-11e6-9226-07e77c19717b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:230","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(finalb, ((byte)(0)))"},"variableMap":{"finalb":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:269","type":"CtInvocationImpl","sourcecode":"ctx1.update(keyBytes)"},"status":-1},{"failures":[],"tindex":"f9bde741-3d57-11e6-9226-9526e1675591","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:199","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"bytes","ascii":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:353","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"f9bde742-3d57-11e6-9226-1d5de9e237bd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:140","type":"CtIfImpl","sourcecode":"if (next == 'N') {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n} else {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n}"},"variableMap":{"next":"curr","org.apache.commons.codec.language.Nysiis.CHARS_NN":"org.apache.commons.codec.language.Nysiis.CHARS_FF","org.apache.commons.codec.language.Nysiis.CHARS_C":"org.apache.commons.codec.language.Nysiis.CHARS_FF"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:153","type":"CtIfImpl","sourcecode":"if ((curr == 'P') && (next == 'H')) {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n} "},"status":-2},{"failures":[53,54,55,56],"tindex":"f9bde743-3d57-11e6-9226-a162571bca07","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:118","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"3\", \"\")"},"status":-1},{"failures":[],"tindex":"f9bde744-3d57-11e6-9226-d91da34e7dd9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:255","type":"CtIfImpl","sourcecode":"if ((str.length()) == 0) {\n    return str;\n} "},"variableMap":{"str":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:100","type":"CtReturnImpl","sourcecode":"return txt.toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale)"},"status":-2},{"failures":[],"tindex":"f9be0e55-3d57-11e6-9226-7519f5c9fb8d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:118","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"3\", \"\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:78","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"dg\", \"2g\")"},"status":0},{"failures":[50,51,52,0,57,1,2,3],"tindex":"f9be0e56-3d57-11e6-9226-9b26f969f332","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:288","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(((byte)(0)), ((byte)(0)), finalb[11], 2, passwd)"},"status":-1},{"failures":[],"tindex":"f9be0e57-3d57-11e6-9226-512093aea88e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:140","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:92","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = isSlavoGermanic(value)"},"status":-2},{"failures":[],"tindex":"f9be0e58-3d57-11e6-9226-9b95a5c87220","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:199","type":"CtReturnImpl","sourcecode":"return context.startsWith(java.lang.String)"},"variableMap":{"context":"input","pattern":"suffix"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:280","type":"CtIfImpl","sourcecode":"if ((input.charAt(i)) != (suffix.charAt(j))) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"f9be0e59-3d57-11e6-9226-5bee12be0b18","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:284","type":"CtAssignmentImpl","sourcecode":"this.byte[] = org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.byte[]"},"variableMap":{"encodeTable":"lineSeparator","org.apache.commons.codec.binary.Base32.HEX_ENCODE_TABLE":"lineSeparator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:293","type":"CtAssignmentImpl","sourcecode":"this.byte[] = null"},"status":0},{"failures":[58],"tindex":"f9be0e5a-3d57-11e6-9226-4dba958fda79","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:579","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha384(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:211","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.md2(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"status":-1},{"failures":[59,19,20,60,61,62,63,21,22,23,24,25,64,65,66,67,26,68],"tindex":"f9be0e5b-3d57-11e6-9226-df292e1f3584","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:383","type":"CtIfImpl","sourcecode":"if (!(ph.endsWith(\")\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme starts with '(' so must end with ')'\");\n} "},"variableMap":{"ph":"incl"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:440","type":"CtInvocationImpl","sourcecode":"lines.putAll(org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(incl), ((location + \"->\") + incl)))"},"status":-1},{"failures":[],"tindex":"f9be0e5c-3d57-11e6-9226-2d1d0af5fbb3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:47","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String;\n} "},"variableMap":{"txt":"str","org.apache.commons.codec.language.Caverphone1.SIX_1":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:259","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"f9be0e5d-3d57-11e6-9226-4b5196a1038d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:193","type":"CtAssignmentImpl","sourcecode":"this.boolean = strict"},"variableMap":{"strict":"folding"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:364","type":"CtAssignmentImpl","sourcecode":"this.boolean = folding"},"status":-2},{"failures":[],"tindex":"f9be0e5e-3d57-11e6-9226-bb94cb0e4b88","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:155","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(algorithm.toString(), key)"},"variableMap":{"key":"key","algorithm":"org.apache.commons.codec.digest.HmacAlgorithms.HMAC_SHA_384"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:117","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(org.apache.commons.codec.digest.HmacAlgorithms.org.apache.commons.codec.digest.HmacAlgorithms.org.apache.commons.codec.digest.HmacAlgorithms, key)"},"status":-2},{"failures":[],"tindex":"f9be356f-3d57-11e6-9226-7ffc9513c990","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:114","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"y\", \"2\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:60","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^rough\", \"rou2f\")"},"status":0},{"failures":[],"tindex":"f9be3570-3d57-11e6-9226-235d9e1fa65d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:165","type":"CtReturnImpl","sourcecode":"return firstThree + lastThree"},"variableMap":{"firstThree":"str","lastThree":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:54","type":"CtReturnImpl","sourcecode":"return str.toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale)"},"status":-2},{"failures":[],"tindex":"f9be3571-3d57-11e6-9226-b52c64081b03","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:296","type":"CtAssignmentImpl","sourcecode":"right = (left >>> 1) | (left << 31)"},"variableMap":{"left":"sumLength","right":"sumLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:252","type":"CtAssignmentImpl","sourcecode":"minRating = getMinRating(sumLength)"},"status":-2},{"failures":[],"tindex":"f9be3572-3d57-11e6-9226-d93f815b387e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:248","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"variableMap":{"str":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:128","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String"},"status":-2},{"failures":[],"tindex":"f9be3573-3d57-11e6-9226-29f742f201b4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:342","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be URL decoded\"))"},"status":-2},{"failures":[69,70,71,72,73,74,75],"tindex":"f9be3574-3d57-11e6-9226-5d134f1a5223","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:505","type":"CtOperatorAssignmentImpl","sourcecode":"b += 256"},"variableMap":{"b":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:90","type":"CtUnaryOperatorImpl","sourcecode":"j++"},"status":-1},{"failures":[76],"tindex":"f9be5c85-3d57-11e6-9226-031ddcb12371","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:102","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    salt = (org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8));\n} "},"status":-1},{"failures":[],"tindex":"f9be5c86-3d57-11e6-9226-1bcb883350fe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:148","type":"CtReturnImpl","sourcecode":"return out"},"variableMap":{"out":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_CHAR_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:270","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.char[]"},"status":-2},{"failures":[],"tindex":"f9be8397-3d57-11e6-9226-e33e4dddf74e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:83","type":"CtAssignmentImpl","sourcecode":"java.lang.StringBuilder = new java.lang.StringBuilder()"},"variableMap":{"builder":"local"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:134","type":"CtInvocationImpl","sourcecode":"local.append(inwd)"},"status":-2},{"failures":[],"tindex":"f9be8398-3d57-11e6-9226-d9bf7afa1d72","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"name2Size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"status":-2},{"failures":[66,67,26,68],"tindex":"f9be8399-3d57-11e6-9226-db57ef221261","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:304","type":"CtInvocationImpl","sourcecode":"code.append('0')"},"variableMap":{"code":"phonemeText"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:121","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.bm.Rule.Phoneme.this.java.lang.StringBuilder.append(phonemeRight.java.lang.StringBuilder)"},"status":-1},{"failures":[11,12,77,78,13,14],"tindex":"f9be839a-3d57-11e6-9226-95388df8f338","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:383","type":"CtIfImpl","sourcecode":"if (!(ph.endsWith(\")\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme starts with '(' so must end with ')'\");\n} "},"variableMap":{"ph":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:704","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"WR\")) {\n    result.append('R');\n    index += 2;\n} else {\n    if ((index == 0) && ((isVowel(charAt(value, (index + 1)))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"WH\")))) {\n        if (isVowel(charAt(value, (index + 1)))) {\n            result.append('A', 'F');\n        } else {\n            result.append('A');\n        }\n        index++;\n    } else if ((((index == ((value.length()) - 1)) && (isVowel(charAt(value, (index - 1))))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, \"EWSKI\", \"EWSKY\", \"OWSKI\", \"OWSKY\"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) {\n        result.appendAlternate('F');\n        index++;\n    } else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"WICZ\", \"WITZ\")) {\n        result.append(\"TS\", \"FX\");\n        index += 4;\n    } else {\n        index++;\n    }\n}"},"status":-1},{"failures":[31,32,35,37],"tindex":"f9be839b-3d57-11e6-9226-c97954e293bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:105","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"n+\", \"N\")"},"status":-1},{"failures":[],"tindex":"f9be839c-3d57-11e6-9226-2f1138f3dcb3","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:359","type":"CtIfImpl","sourcecode":"if (b == (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)) {\n    try {\n        if ((bytes[(++i)]) == (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)) {\n            continue;\n        } \n        final int int = org.apache.commons.codec.net.Utils.digit16(bytes[i]);\n        final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)]);\n        buffer.write(((char)((u << 4) + l)));\n    } catch (final java.lang.ArrayIndexOutOfBoundsException e) {\n        throw new org.apache.commons.codec.DecoderException(\"Invalid quoted-printable encoding\" , e);\n    }\n} else if ((b != (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)) && (b != (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte))) {\n    buffer.write(b);\n} "},"variableMap":{"b":"length","org.apache.commons.codec.net.QuotedPrintableCodec.LF":"org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR","e":"e","bytes":"bytes","org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR":"org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR","i":"length","buffer":"buffer","org.apache.commons.codec.net.QuotedPrintableCodec.CR":"org.apache.commons.codec.net.QuotedPrintableCodec.CR"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:357","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (bytes.int) ; i++) {\n    final int int = bytes[i];\n    if (b == (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)) {\n        try {\n            if ((bytes[(++i)]) == (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)) {\n                continue;\n            } \n            final int int = org.apache.commons.codec.net.Utils.digit16(bytes[i]);\n            final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)]);\n            buffer.write(((char)((u << 4) + l)));\n        } catch (final java.lang.ArrayIndexOutOfBoundsException e) {\n            throw new org.apache.commons.codec.DecoderException(\"Invalid quoted-printable encoding\" , e);\n        }\n    } else if ((b != (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)) && (b != (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte))) {\n        buffer.write(b);\n    } \n}"},"status":-2},{"failures":[79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],"tindex":"f9be839d-3d57-11e6-9226-4bdee18b686b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:310","type":"CtIfImpl","sourcecode":"if (lastChar == 'A') {\n    key.deleteCharAt(((key.length()) - 1));\n} "},"variableMap":{"lastChar":"org.apache.commons.codec.language.Nysiis.SPACE","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:280","type":"CtForImpl","sourcecode":"for (int int = 1 ; i < len ; i++) {\n    final char char = i < (len - 1) ? chars[(i + 1)] : org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char;\n    final char char = i < (len - 2) ? chars[(i + 2)] : org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char;\n    final char[] char[] = org.apache.commons.codec.language.Nysiis.transcodeRemaining(chars[(i - 1)], chars[i], next, aNext);\n    java.lang.System.arraycopy(transcoded, 0, chars, i, transcoded.int);\n    if ((chars[i]) != (chars[(i - 1)])) {\n        key.append(chars[i]);\n    } \n}"},"status":-1},{"failures":[],"tindex":"f9be839e-3d57-11e6-9226-63bca4f36a42","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"variableMap":{"terminator":"len","to":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:762","type":"CtIfImpl","sourcecode":"if (((bigInt.bitLength()) % 8) == 0) {\n    startSrc = 1;\n    len--;\n} "},"status":-2},{"failures":[],"tindex":"f9be839f-3d57-11e6-9226-7349c45455f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:331","type":"CtLocalVariableImpl","sourcecode":"char char = '-'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:209","type":"CtLocalVariableImpl","sourcecode":"final char char = salt.charAt(0)"},"status":-2},{"failures":[96,97,98],"tindex":"f9be83a0-3d57-11e6-9226-27ec33057bdd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:181","type":"CtForImpl","sourcecode":"for (int int = 0, int int = (ascii.int) - 1 ; ii < (l_raw.int) ; ii++ , jj -= 8) {\n    for (int int = 0 ; bits < (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[].int) ; ++bits) {\n        if ((ascii[(jj - bits)]) == '1') {\n            l_raw[ii] |= org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits];\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"f9be83a1-3d57-11e6-9226-0d5fd6f744d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:404","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"f9bf1fe2-3d57-11e6-9226-998bc3221e5a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:217","type":"CtAssignmentImpl","sourcecode":"key[i] = 0"},"variableMap":{"i":"pos","key":"encodeTable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:513","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 15))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))]"},"status":-2},{"failures":[],"tindex":"f9bf46f3-3d57-11e6-9226-f9cfc3043019","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:266","type":"CtLocalVariableImpl","sourcecode":"final java.io.InputStream java.io.InputStream = org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.java.lang.Class.getClassLoader().getResourceAsStream(resName)"},"variableMap":{"resName":"languagesResourceName","org.apache.commons.codec.language.bm.Languages.class":"org.apache.commons.codec.language.bm.Languages.class"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:172","type":"CtLocalVariableImpl","sourcecode":"final java.io.InputStream java.io.InputStream = org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.java.lang.Class.getClassLoader().getResourceAsStream(languagesResourceName)"},"status":-2},{"failures":[],"tindex":"f9bf46f4-3d57-11e6-9226-ddf990db35b0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:250","type":"CtReturnImpl","sourcecode":"return buffer.toString()"},"status":-2},{"failures":[79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],"tindex":"f9bf46f5-3d57-11e6-9226-1922f82b04ba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:288","type":"CtInvocationImpl","sourcecode":"key.append(chars[i])"},"status":-1},{"failures":[99,42],"tindex":"f9bf46f6-3d57-11e6-9226-7b705c4ca55e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:113","type":"CtInvocationImpl","sourcecode":"local.append(inwd, 1, ((inwd.int) - 1))"},"status":-1},{"failures":[100,101,102,103,104,105,106,107],"tindex":"f9bf46f7-3d57-11e6-9226-351f63903fa1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:242","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(char[], start, newData, 0, length)"},"status":-1},{"failures":[108,109],"tindex":"f9bf46f8-3d57-11e6-9226-112095db8b50","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:83","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(raw)"},"variableMap":{"raw":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:635","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getHmacSha512(key).doFinal(valueToDigest)"},"status":-1},{"failures":[15,16],"tindex":"f9bf9519-3d57-11e6-9226-01c141915bc6","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:305","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(right, left, 2, 858993459, results)"},"variableMap":{"left":"d","right":"c","results":"results"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:354","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(d, c, 1, 1431655765, results)"},"status":-1},{"failures":[110,111,112,113,114,115],"tindex":"f9bfbc2a-3d57-11e6-9226-4737b081ebde","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Crypt:92","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Crypt.crypt(key, null)"},"variableMap":{"key":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:423","type":"CtReturnImpl","sourcecode":"return name"},"status":-1},{"failures":[],"tindex":"f9bfbc2b-3d57-11e6-9226-91b188fb0a85","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:69","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"cq\", \"2q\")"},"variableMap":{"txt":"salt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:90","type":"CtAssignmentImpl","sourcecode":"salt = (org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + salt"},"status":-2},{"failures":[],"tindex":"f9bfbc2c-3d57-11e6-9226-bd6171d8ea74","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:55","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"[^a-z]\", \"\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:76","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"x\", \"k\")"},"status":0},{"failures":[116],"tindex":"f9bfbc2d-3d57-11e6-9226-9f76fb9e0e6e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:575","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-1},{"failures":[73,117],"tindex":"f9bfbc2e-3d57-11e6-9226-11210c5cfbbc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:117","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"byteArray"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:299","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHex(byteArray)"},"status":-1},{"failures":[],"tindex":"f9bfe33f-3d57-11e6-9226-036e4e8ba8ac","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:419","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = input.substring(((l.length()) + 1))"},"variableMap":{"input":"lang","l":"lang"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:265","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String.format(\"org/apache/commons/codec/language/bm/%s.txt\", lang)"},"status":-2},{"failures":[118,119],"tindex":"f9bfe340-3d57-11e6-9226-533db2793060","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:399","type":"CtAssignmentImpl","sourcecode":"b[(offset++)] = ((byte)(iValue & 255))"},"variableMap":{"b":"l_ascii","offset":"jj","iValue":"bits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:251","type":"CtAssignmentImpl","sourcecode":"l_ascii[(jj - bits)] = '0'"},"status":-1},{"failures":[11,12,13],"tindex":"f9bfe341-3d57-11e6-9226-cbd7a5c271e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:727","type":"CtInvocationImpl","sourcecode":"result.append(\"TS\", \"FX\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:713","type":"CtInvocationImpl","sourcecode":"result.append('A', 'F')"},"status":-1},{"failures":[],"tindex":"f9bfe342-3d57-11e6-9226-bfd33eb3c6d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:245","type":"CtAssignmentImpl","sourcecode":"u = 128"},"variableMap":{"u":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:389","type":"CtOperatorAssignmentImpl","sourcecode":"index += 3"},"status":0},{"failures":[],"tindex":"f9bfe343-3d57-11e6-9226-a350585fc570","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:764","type":"CtUnaryOperatorImpl","sourcecode":"len--"},"variableMap":{"len":"org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:299","type":"CtAssignmentImpl","sourcecode":"this.int = (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int) + (lineSeparator.int)"},"status":-2},{"failures":[120,121,122,123],"tindex":"f9c05874-3d57-11e6-9226-b7fe34e2db12","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:43","type":"CtReturnImpl","sourcecode":"return str"},"status":-1},{"failures":[124],"tindex":"f9c05875-3d57-11e6-9226-7d26e52ce8ae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:88","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set('.')"},"status":-1},{"failures":[59,19,20,60,61,62,63,21,22,23,24,25,64,65,66,67,26,68],"tindex":"f9c05876-3d57-11e6-9226-952596e99316","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:618","type":"CtAssignmentImpl","sourcecode":"str = str.substring(0, ((str.length()) - 1))"},"status":-1},{"failures":[],"tindex":"f9c05877-3d57-11e6-9226-1344c50e750b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:71","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ce\", \"se\")"},"variableMap":{"txt":"boxContent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:554","type":"CtAssignmentImpl","sourcecode":"boxContent = boxContent.substring(1)"},"status":-2},{"failures":[15,125,126,16],"tindex":"f9c05878-3d57-11e6-9226-cf33a113aef1","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:290","type":"CtAssignmentImpl","sourcecode":"t = left"},"variableMap":{"t":"j","left":"s"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:378","type":"CtAssignmentImpl","sourcecode":"schedule[(j++)] = s"},"status":-1},{"failures":[],"tindex":"f9c05879-3d57-11e6-9226-cd05878d0079","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:201","type":"CtInvocationImpl","sourcecode":"ctx.update(keyBytes)"},"variableMap":{"keyBytes":"saltBytes","ctx":"ctx"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:211","type":"CtInvocationImpl","sourcecode":"ctx.update(saltBytes)"},"status":-2},{"failures":[127,128,129,130,131,132,133,49,134,135,136,137],"tindex":"f9c0587a-3d57-11e6-9226-25dc0b26fe4c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:513","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 15))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))]"},"status":-1},{"failures":[14],"tindex":"f9c0587b-3d57-11e6-9226-f13098e40ef0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:291","type":"CtInvocationImpl","sourcecode":"result.append('S', 'X')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:741","type":"CtInvocationImpl","sourcecode":"result.append('S')"},"status":-1},{"failures":[59,19,20,60,61,62,63,21,22,23,24,25,64,65,66,67,26,68],"tindex":"f9c0587c-3d57-11e6-9226-47db2efc2519","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.RuleType:47","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.RuleType.this.java.lang.String"},"status":-1},{"failures":[50,51,52,0,1,2,3],"tindex":"f9c0587d-3d57-11e6-9226-151b7b7e7b05","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:294","type":"CtInvocationImpl","sourcecode":"ctx.reset()"},"variableMap":{"ctx":"ctx"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:237","type":"CtWhileImpl","sourcecode":"while (ii > 0) {\n    if ((ii & 1) == 1) {\n        ctx.update(finalb[j]);\n    } else {\n        ctx.update(keyBytes[j]);\n    }\n    ii >>= 1;\n}"},"status":-1},{"failures":[],"tindex":"f9c0587e-3d57-11e6-9226-81bf2405b835","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:299","type":"CtAssignmentImpl","sourcecode":"pos = 1"},"variableMap":{"pos":"s"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:329","type":"CtAssignmentImpl","sourcecode":"u = ((u ^ (u << 16)) ^ r) ^ (sArr[s])"},"status":-2},{"failures":[],"tindex":"f9c0587f-3d57-11e6-9226-4b02bf382324","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:559","type":"CtReturnImpl","sourcecode":"return result"},"variableMap":{"result":"replacementAtStart"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:182","type":"CtReturnImpl","sourcecode":"return java.lang.String[]"},"status":0},{"failures":[],"tindex":"f9c05880-3d57-11e6-9226-8f65c7083c44","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:46","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[len]"},"variableMap":{"len":"l"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:142","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[l << 1]"},"status":-2},{"failures":[],"tindex":"f9c07e91-3d57-11e6-9226-bb3c2d1666d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:150","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.close()"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:112","type":"CtIfImpl","sourcecode":"if (avail > 0) {\n    final byte[] byte[] = new byte[avail];\n    final int int = org.apache.commons.codec.binary.BaseNCodec.readResults(buf, 0, avail, org.apache.commons.codec.binary.BaseNCodec.Context);\n    if (c > 0) {\n        java.io.OutputStream.write(buf, 0, c);\n    } \n} "},"status":-2},{"failures":[],"tindex":"f9c07e92-3d57-11e6-9226-8b5fdb3534e5","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Soundex:82","type":"CtAssignmentImpl","sourcecode":"this.char[] = org.apache.commons.codec.language.Soundex.org.apache.commons.codec.language.Soundex.char[]"},"variableMap":{"org.apache.commons.codec.language.Soundex.US_ENGLISH_MAPPING":"soundexMapping","soundexMapping":"soundexMapping"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:90","type":"CtAssignmentImpl","sourcecode":"this.char[] = mapping.toCharArray()"},"status":-2},{"failures":[],"tindex":"f9c07e93-3d57-11e6-9226-7d67fe1a0566","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:106","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"r3\", \"R3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:71","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ce\", \"se\")"},"status":0},{"failures":[],"tindex":"f9c07e94-3d57-11e6-9226-ebe565f306fe","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:77","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"v\", \"f\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:70","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"mb$\", \"m2\")"},"status":0},{"failures":[],"tindex":"f9c07e95-3d57-11e6-9226-bf030e969305","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"index","to":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:436","type":"CtIfImpl","sourcecode":"if ((chrs[index]) == (element[0])) {\n    chrs[index] = element[1];\n    break;\n} "},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}