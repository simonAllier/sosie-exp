{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":89,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":86,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":139,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":137,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":138,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":113,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":140,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray":165,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":179,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":191,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":0,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":91,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":76,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":32,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":31,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":150,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":152,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":151,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":58,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":59,"org.apache.commons.codec.language.NysiisTest.testCap":114,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":62,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":60,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":61,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":105,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":14,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":48,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":8,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding":102,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":110,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":111,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":104,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":190,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":7,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull":164,"org.apache.commons.codec.language.SoundexTest.testB650":136,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":87,"org.apache.commons.codec.language.SoundexTest.testNewInstance":144,"org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16":169,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3":162,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":75,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":49,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":101,"org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid":170,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":38,"org.apache.commons.codec.binary.Base64Test.testIsStringBase64":155,"org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding":159,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":71,"org.apache.commons.codec.language.NysiisTest.testDropBy":127,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":85,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":27,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":15,"org.apache.commons.codec.binary.Base64Test.testUUID":55,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":93,"org.apache.commons.codec.binary.Base64Test.testSingletons":68,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":83,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":78,"org.apache.commons.codec.binary.Base64Test.testPairs":54,"org.apache.commons.codec.language.NysiisTest.testRule2":119,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":77,"org.apache.commons.codec.language.NysiisTest.testRule1":118,"org.apache.commons.codec.language.NysiisTest.testRule7":122,"org.apache.commons.codec.language.NysiisTest.testRule6":121,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":84,"org.apache.commons.codec.language.NysiisTest.testRule5":120,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111":18,"org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals":17,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":145,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":11,"org.apache.commons.codec.language.NysiisTest.testBran":123,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":130,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":186,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":51,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":66,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":98,"org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray":167,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":67,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":26,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":22,"org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute":146,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":132,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":90,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":180,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":6,"org.apache.commons.codec.language.NysiisTest.testDad":115,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":44,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":57,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":5,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":112,"org.apache.commons.codec.language.NysiisTest.testDan":116,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":47,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":103,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":189,"org.apache.commons.codec.binary.HexTest.testCustomCharset":10,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":33,"org.apache.commons.codec.language.NysiisTest.testSnat":125,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":82,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":1,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":183,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":182,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":34,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":25,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":45,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":28,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":106,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":173,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":171,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":174,"org.apache.commons.codec.binary.Base64Test.testIsUrlSafe":153,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":42,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":63,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples":19,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString":166,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":53,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":184,"org.apache.commons.codec.language.Caverphone2Test.testEndMb":187,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":188,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":175,"org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis":149,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":147,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":148,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":9,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":92,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":192,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":16,"org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64":154,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":12,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":65,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":46,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":160,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":88,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":172,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable":141,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":99,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":2,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":23,"org.apache.commons.codec.CharsetsTest.testToCharset":156,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall":94,"org.apache.commons.codec.language.SoundexTest.testBadCharacters":131,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":74,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt":97,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":100,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":107,"org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters":13,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":37,"org.apache.commons.codec.language.NysiisTest.testTranan":129,"org.apache.commons.codec.language.NysiisTest.testFal":117,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":157,"org.apache.commons.codec.language.NysiisTest.testSnad":124,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":95,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":4,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer1":133,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":134,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":135,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":178,"org.apache.commons.codec.binary.Base64Test.testBase64":70,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":181,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":81,"org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString":168,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":24,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":64,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":36,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":20,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":29,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":35,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":72,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData":161,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":176,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":41,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":52,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":126,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":50,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":109,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":96,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":142,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":43,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":108,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":73,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":39,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":163,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":30,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":185,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":3,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":79,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":21,"org.apache.commons.codec.language.NysiisTest.testOthers":128,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":69,"org.apache.commons.codec.language.SoundexTest.testDifference":143,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":158,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":40,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":177,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":80,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":56},"transformations":[{"failures":[],"tindex":"ac32a8c9-3fcf-11e6-9015-3104310d2724","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:227","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[9]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:295","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[keyLen]"},"status":-2},{"failures":[],"tindex":"ac33450a-3fcf-11e6-9015-55b0352aed32","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:187","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int = i"},"variableMap":{"i":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:343","type":"CtOperatorAssignmentImpl","sourcecode":"index += 3"},"status":-2},{"failures":[],"tindex":"ac33450b-3fcf-11e6-9015-736b6e63be18","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:229","type":"CtReturnImpl","sourcecode":"return ls.equals(org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet) ? org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet : ls"},"variableMap":{"ls":"org.apache.commons.codec.language.bm.Languages.NO_LANGUAGES","org.apache.commons.codec.language.bm.Languages.ANY_LANGUAGE":"org.apache.commons.codec.language.bm.Languages.ANY_LANGUAGE","org.apache.commons.codec.language.bm.Languages.NO_LANGUAGES":"org.apache.commons.codec.language.bm.Languages.NO_LANGUAGES"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:134","type":"CtIfImpl","sourcecode":"if (other == (org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet)) {\n    return org.apache.commons.codec.language.bm.Languages.SomeLanguages.this;\n} else if (other == (org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet)) {\n    return other;\n} else {\n    final org.apache.commons.codec.language.bm.Languages.SomeLanguages org.apache.commons.codec.language.bm.Languages.SomeLanguages = ((org.apache.commons.codec.language.bm.Languages.SomeLanguages)(other));\n    final java.util.Set<java.lang.String> java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>(java.util.Set<java.lang.String>);\n    for (java.lang.String java.lang.String : sl.java.util.Set<java.lang.String>) {\n        ls.add(lang);\n    }\n    return org.apache.commons.codec.language.bm.Languages.LanguageSet.from(ls);\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7],"tindex":"ac336c1c-3fcf-11e6-9015-8192ee2042ee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:396","type":"CtInvocationImpl","sourcecode":"ctx.update(altResult, 0, blocksize)"},"status":-1},{"failures":[8,9],"tindex":"ac336c1d-3fcf-11e6-9015-81ef6da2a92c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:285","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.md5(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"variableMap":{"data":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:246","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.hmacMd5(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"status":-1},{"failures":[],"tindex":"ac33932e-3fcf-11e6-9015-6f81b8cb3c64","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:253","type":"CtOperatorAssignmentImpl","sourcecode":"cnt >>= 1"},"status":-2},{"failures":[],"tindex":"ac33932f-3fcf-11e6-9015-0f7fb62d8028","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN","y":"org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:187","type":"CtIfImpl","sourcecode":"if (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (sumLength == (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"status":-2},{"failures":[10,11,12,13],"tindex":"ac33ba40-3fcf-11e6-9015-0fd95320cbe7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:769","type":"CtReturnImpl","sourcecode":"return resizedBytes"},"variableMap":{"resizedBytes":"array"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:232","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.decodeHex(new java.lang.String(array , getCharset()).toCharArray())"},"status":-1},{"failures":[14,15,16,17,18,19,20,21],"tindex":"ac33ba41-3fcf-11e6-9015-230d3439a030","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:122","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"3\", \"\")"},"status":-1},{"failures":[],"tindex":"ac33ba42-3fcf-11e6-9015-99966f6a28fe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:186","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(e)"},"status":-2},{"failures":[],"tindex":"ac33ba43-3fcf-11e6-9015-a7d209c30b14","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:155","type":"CtWhileImpl","sourcecode":"while (readLen == 0) {\n    if (!(org.apache.commons.codec.binary.BaseNCodec.hasData(org.apache.commons.codec.binary.BaseNCodec.Context))) {\n        final byte[] byte[] = new byte[boolean ? 4096 : 8192];\n        final int int = java.io.InputStream.read(buf);\n        if (boolean) {\n            org.apache.commons.codec.binary.BaseNCodec.encode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context);\n        } else {\n            org.apache.commons.codec.binary.BaseNCodec.decode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context);\n        }\n    } \n    readLen = org.apache.commons.codec.binary.BaseNCodec.readResults(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context);\n}"},"status":-2},{"failures":[22,23,24,25,26,27,28],"tindex":"ac33e154-3fcf-11e6-9015-dfb999e27fba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:144","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.codec.binary.BaseNCodec.encode(byte[], 0, org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int, org.apache.commons.codec.binary.BaseNCodec.Context);\n} else {\n    org.apache.commons.codec.binary.BaseNCodec.decode(byte[], 0, org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int, org.apache.commons.codec.binary.BaseNCodec.Context);\n}"},"status":-1},{"failures":[29],"tindex":"ac33e155-3fcf-11e6-9015-fd0bdd4bea1e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:237","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md2(data))"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:310","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md5(data))"},"status":-1},{"failures":[],"tindex":"ac33e156-3fcf-11e6-9015-3b15292c6931","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacAlgorithms:78","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = algorithm"},"variableMap":{"algorithm":"name1LtRStart"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:312","type":"CtAssignmentImpl","sourcecode":"name1LtRStart = name1.substring(i, (i + 1))"},"status":-2},{"failures":[30,31,32,33,34,35,36,37,26,38,27,28],"tindex":"ac340867-3fcf-11e6-9015-152f038dd2d2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:512","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 20))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))]"},"status":-1},{"failures":[],"tindex":"ac340868-3fcf-11e6-9015-ff034646b164","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:320","type":"CtAssignmentImpl","sourcecode":"name1Char[i] = ' '"},"variableMap":{"name1Char":"name2Char","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:327","type":"CtAssignmentImpl","sourcecode":"name2Char[(name2Size - i)] = ' '"},"status":0},{"failures":[],"tindex":"ac340869-3fcf-11e6-9015-417a8759a481","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.RefinedSoundex:185","type":"CtInvocationImpl","sourcecode":"sBuf.append(str.charAt(0))"},"variableMap":{"str":"org.apache.commons.codec.digest.B64.B64T","sBuf":"saltString"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.B64:75","type":"CtInvocationImpl","sourcecode":"saltString.append(org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.java.lang.String.charAt(new java.util.Random().nextInt(org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.java.lang.String.length())))"},"status":0},{"failures":[],"tindex":"ac342f7a-3fcf-11e6-9015-73886067f8ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:107","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ry\", \"Ry\")"},"status":0},{"failures":[39,40,41,22,23,24,42,43,44,45,46,47,25,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79],"tindex":"ac342f7b-3fcf-11e6-9015-f3667c721773","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:435","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < inAvail ; i++) {\n    final byte[] byte[] = ensureBufferSize(int, context);\n    final byte byte = in[(inPos++)];\n    if (b == (byte)) {\n        context.boolean = true;\n        break;\n    } else {\n        if ((b >= 0) && (b < (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[].int))) {\n            final int int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[][b];\n            if (result >= 0) {\n                context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int);\n                context.int = ((context.int) << (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int)) + result;\n                if ((context.int) == 0) {\n                    buffer[((context.int)++)] = ((byte)(((context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n                    buffer[((context.int)++)] = ((byte)(((context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n                    buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n                } \n            } \n        } \n    }\n}"},"status":-1},{"failures":[80,81],"tindex":"ac342f7c-3fcf-11e6-9015-1b440ddc976a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:573","type":"CtInvocationImpl","sourcecode":"result.append('P')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:587","type":"CtInvocationImpl","sourcecode":"result.appendAlternate('R')"},"status":-1},{"failures":[],"tindex":"ac34568d-3fcf-11e6-9015-997a6c84d252","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:255","type":"CtIfImpl","sourcecode":"if ((str.length()) == 0) {\n    return str;\n} "},"variableMap":{"str":"source"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:96","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.BeiderMorseEncoder.this.org.apache.commons.codec.language.bm.PhoneticEngine.encode(source)"},"status":-2},{"failures":[37,26,38,27,28],"tindex":"ac34568e-3fcf-11e6-9015-07537d4797f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:364","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-1},{"failures":[],"tindex":"ac347d9f-3fcf-11e6-9015-ef59ed20ffa4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:470","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.digest(org.apache.commons.codec.digest.DigestUtils.getSha256Digest(), data)"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:199","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.digest(org.apache.commons.codec.digest.DigestUtils.getMd2Digest(), data)"},"status":-2},{"failures":[82],"tindex":"ac347da0-3fcf-11e6-9015-a3df6424bcaa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:67","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('\"')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:277","type":"CtIfImpl","sourcecode":"if (printable == null) {\n    printable = org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet;\n} "},"status":-1},{"failures":[],"tindex":"ac347da1-3fcf-11e6-9015-25b56376338e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:216","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (key.int) ; i++) {\n    key[i] = 0;\n}"},"variableMap":{"length":"pos","key":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:519","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int)"},"status":-2},{"failures":[],"tindex":"ac347da2-3fcf-11e6-9015-49a79db339b1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:350","type":"CtIfImpl","sourcecode":"if (lastCode == '/') {\n    continue;\n} "},"variableMap":{"lastCode":"hex2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:187","type":"CtInvocationImpl","sourcecode":"buffer.write(hex2)"},"status":-2},{"failures":[],"tindex":"ac347da3-3fcf-11e6-9015-71248f513b35","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:262","type":"CtReturnImpl","sourcecode":"return newData"},"variableMap":{"newData":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_CHAR_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:270","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.char[]"},"status":-2},{"failures":[83,84,85,86,87],"tindex":"ac34a4b4-3fcf-11e6-9015-f5d4542d8ca2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:635","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getHmacSha512(key).doFinal(valueToDigest)"},"variableMap":{"valueToDigest":"bytes","key":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:192","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(bytes)"},"status":-1},{"failures":[88,89,80,81],"tindex":"ac34a4b5-3fcf-11e6-9015-5331a6ef9f16","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:419","type":"CtInvocationImpl","sourcecode":"result.append(\"KN\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:704","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"WR\")) {\n    result.append('R');\n    index += 2;\n} else {\n    if ((index == 0) && ((isVowel(charAt(value, (index + 1)))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"WH\")))) {\n        if (isVowel(charAt(value, (index + 1)))) {\n            result.append('A', 'F');\n        } else {\n            result.append('A');\n        }\n        index++;\n    } else if ((((index == ((value.length()) - 1)) && (isVowel(charAt(value, (index - 1))))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, \"EWSKI\", \"EWSKY\", \"OWSKI\", \"OWSKY\"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) {\n        result.appendAlternate('F');\n        index++;\n    } else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"WICZ\", \"WITZ\")) {\n        result.append(\"TS\", \"FX\");\n        index += 4;\n    } else {\n        index++;\n    }\n}"},"status":-1},{"failures":[0,1,2,3,4,5,6,7],"tindex":"ac34cbc6-3fcf-11e6-9015-534d3c19ddff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:379","type":"CtInvocationImpl","sourcecode":"ctx.update(sBytes, 0, saltLen)"},"status":-1},{"failures":[],"tindex":"ac34cbc7-3fcf-11e6-9015-f753d5394907","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:111","type":"CtAssignmentImpl","sourcecode":"this.org.apache.commons.codec.language.bm.Languages.LanguageSet = languages"},"status":-2},{"failures":[90,91],"tindex":"ac34cbc8-3fcf-11e6-9015-617e55ed03b7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:199","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.digest(org.apache.commons.codec.digest.DigestUtils.getMd2Digest(), data)"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:389","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.digest(org.apache.commons.codec.digest.DigestUtils.getSha1Digest(), data)"},"status":-1},{"failures":[92,93,94,95,96,97,98,99,100],"tindex":"ac34cbc9-3fcf-11e6-9015-03607547f5b3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:300","type":"CtReturnImpl","sourcecode":"return passwd.toString()"},"status":-1},{"failures":[101,102,83],"tindex":"ac34f2da-3fcf-11e6-9015-8b5072bf84e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:326","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"status":-1},{"failures":[103,104,105,106],"tindex":"ac34f2db-3fcf-11e6-9015-5d4540e8cac6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:230","type":"CtAssignmentImpl","sourcecode":"b[8] = 0"},"variableMap":{"b":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:222","type":"CtAssignmentImpl","sourcecode":"key[i] = ((byte)(iChar << 1))"},"status":-1},{"failures":[107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152],"tindex":"ac34f2dc-3fcf-11e6-9015-0d8d382d72c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:48","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < len ; i++) {\n    if (java.lang.Character.isLetter(str.charAt(i))) {\n        chars[(count++)] = str.charAt(i);\n    } \n}"},"status":-1},{"failures":[],"tindex":"ac3519ed-3fcf-11e6-9015-3978a143d8dc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:704","type":"CtLocalVariableImpl","sourcecode":"final int int = i + patternLength"},"variableMap":{"patternLength":"c","i":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:370","type":"CtLocalVariableImpl","sourcecode":"int int = (((org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][0][(c & 63)]) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][1][(((c >>> 6) & 3) | ((c >>> 7) & 60))])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][2][(((c >>> 13) & 15) | ((c >>> 14) & 48))])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][3][((((c >>> 20) & 1) | ((c >>> 21) & 6)) | ((c >>> 22) & 56))])"},"status":-2},{"failures":[],"tindex":"ac3519ee-3fcf-11e6-9015-e7859d229846","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:239","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"bytes","raw":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:154","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"status":-2},{"failures":[80,81],"tindex":"ac3519ef-3fcf-11e6-9015-c5b50ef3cea3","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:713","type":"CtInvocationImpl","sourcecode":"result.append('A', 'F')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:419","type":"CtInvocationImpl","sourcecode":"result.append(\"KN\")"},"status":-1},{"failures":[56,63,153,154,155],"tindex":"ac354100-3fcf-11e6-9015-239fcc14145a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:539","type":"CtIfImpl","sourcecode":"if ((!(org.apache.commons.codec.binary.Base64.isBase64(arrayOctet[i]))) && (!(org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(arrayOctet[i])))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"ac354101-3fcf-11e6-9015-231a92395169","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:485","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[37], altResult[58], altResult[16], 4, buffer)"},"variableMap":{"altResult":"finalb","buffer":"passwd"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:283","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[0], finalb[6], finalb[12], 4, passwd)"},"status":-2},{"failures":[],"tindex":"ac354102-3fcf-11e6-9015-3140bf9164e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:552","type":"CtIfImpl","sourcecode":"if (conditionL0(value, index)) {\n    result.appendPrimary('L');\n} else {\n    result.append('L');\n}"},"status":-2},{"failures":[],"tindex":"ac354103-3fcf-11e6-9015-9d01cb439476","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:208","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(\"             \")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:249","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(((prefix + saltString) + \"$\"))"},"status":-2},{"failures":[],"tindex":"ac354104-3fcf-11e6-9015-f924a2623bd3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:283","type":"CtIfImpl","sourcecode":"if (lineLength > 0) {\n    this.int = (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int) + (lineSeparator.int);\n    this.byte[] = new byte[lineSeparator.int];\n    java.lang.System.arraycopy(lineSeparator, 0, org.apache.commons.codec.binary.Base64.this.byte[], 0, lineSeparator.int);\n} else {\n    this.int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int;\n    this.byte[] = null;\n}"},"variableMap":{"org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK":"c","encodeSize":"c","length":"c","lineSeparator":"buf","lineLength":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:115","type":"CtIfImpl","sourcecode":"if (c > 0) {\n    java.io.OutputStream.write(buf, 0, c);\n} "},"status":-2},{"failures":[30,31,32,33,34,35,36,37,26,38,27,28],"tindex":"ac354105-3fcf-11e6-9015-07d34352f9b2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:512","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 20))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))]"},"status":-1},{"failures":[156],"tindex":"ac356816-3fcf-11e6-9015-cfdc4c38c32b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:328","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QCodec.this.java.nio.charset.Charset"},"variableMap":{"charset":"charset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.Charsets:74","type":"CtReturnImpl","sourcecode":"return charset == null ? java.nio.charset.Charset.defaultCharset() : charset"},"status":-1},{"failures":[],"tindex":"ac356817-3fcf-11e6-9015-b9b9d66f05bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:305","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(((bytes.int) - 3), bytes)"},"variableMap":{"bytes":"data","length":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:141","type":"CtLocalVariableImpl","sourcecode":"final int int = data.int"},"status":-2},{"failures":[157],"tindex":"ac356818-3fcf-11e6-9015-cff5608c065b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:126","type":"CtAssignmentImpl","sourcecode":"urlsafe = org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet"},"status":-1},{"failures":[0,4,5,6,7],"tindex":"ac356819-3fcf-11e6-9015-c3ad913e3735","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"altResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:462","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[15], altResult[25], altResult[5], 4, buffer)"},"status":-1},{"failures":[],"tindex":"ac35681a-3fcf-11e6-9015-99eda866f6c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:187","type":"CtIfImpl","sourcecode":"if (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (sumLength == (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"pos","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"currentLinePos","org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN":"pos","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"pos","org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"pos","minRating":"pos","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"lineLength","org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"currentLinePos","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"lineLength","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"lineLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:373","type":"CtIfImpl","sourcecode":"if (((int) > 0) && ((context.int) > 0)) {\n    java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int);\n    context.int += byte[].int;\n} "},"status":-2},{"failures":[],"tindex":"ac358f2b-3fcf-11e6-9015-83da7fa0ff37","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:72","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"cy\", \"sy\")"},"variableMap":{"txt":"pattern"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:170","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = pattern"},"status":-2},{"failures":[158,159],"tindex":"ac358f2c-3fcf-11e6-9015-c77dab473d33","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:132","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"status":-1},{"failures":[92,93,95,96,98,99,100],"tindex":"ac358f2d-3fcf-11e6-9015-1569c531c2ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:268","type":"CtIfImpl","sourcecode":"if ((i % 7) != 0) {\n    ctx1.update(keyBytes);\n} "},"status":-1},{"failures":[157,160],"tindex":"ac358f2e-3fcf-11e6-9015-a9389f711e03","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:68","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('#')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"urlsafe"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:125","type":"CtIfImpl","sourcecode":"if (urlsafe == null) {\n    urlsafe = org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet;\n} "},"status":-1},{"failures":[],"tindex":"ac35b63f-3fcf-11e6-9015-318fbab44c50","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:223","type":"CtWhileImpl","sourcecode":"while (cnt > blocksize) {\n    ctx.update(altResult, 0, blocksize);\n    cnt -= blocksize;\n}"},"variableMap":{"blocksize":"blocksize","altResult":"keyBytes","ctx":"ctx","cnt":"blocksize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:247","type":"CtWhileImpl","sourcecode":"while (cnt > 0) {\n    if ((cnt & 1) != 0) {\n        ctx.update(altResult, 0, blocksize);\n    } else {\n        ctx.update(keyBytes);\n    }\n    cnt >>= 1;\n}"},"status":0},{"failures":[96,161,97,99],"tindex":"ac35b640-3fcf-11e6-9015-f76309e2eb9b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:128","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String"},"variableMap":{"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:72","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(keyBytes, ((org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8))))"},"status":-1},{"failures":[114,116,122,127,130],"tindex":"ac35b641-3fcf-11e6-9015-e5c47aaf14f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:310","type":"CtIfImpl","sourcecode":"if (lastChar == 'A') {\n    key.deleteCharAt(((key.length()) - 1));\n} "},"status":-1},{"failures":[107,143],"tindex":"ac35b642-3fcf-11e6-9015-c936ffc4bb26","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:117","type":"CtIfImpl","sourcecode":"if ((es1.charAt(i)) == (es2.charAt(i))) {\n    diff++;\n} "},"status":-1},{"failures":[80,81],"tindex":"ac35b643-3fcf-11e6-9015-25f6400c06b9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:604","type":"CtInvocationImpl","sourcecode":"result.append('X', 'S')"},"status":-1},{"failures":[112,127,130],"tindex":"ac35dd54-3fcf-11e6-9015-d5a9f9b5aa94","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:142","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit(((b >> 4) & 15), org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.int))"},"variableMap":{"b":"len","org.apache.commons.codec.net.URLCodec.RADIX":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:281","type":"CtLocalVariableImpl","sourcecode":"final char char = i < (len - 1) ? chars[(i + 1)] : org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char"},"status":-1},{"failures":[162,88,80,81],"tindex":"ac35dd55-3fcf-11e6-9015-6f86abc52562","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:275","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"variableMap":{"length":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:476","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[],"tindex":"ac35dd56-3fcf-11e6-9015-27f7d1cb1b12","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:279","type":"CtForImpl","sourcecode":"for (int int = (input.length()) - 1, int int = (suffix.length()) - 1 ; j >= 0 ; i-- , j--) {\n    if ((input.charAt(i)) != (suffix.charAt(j))) {\n        return false;\n    } \n}"},"variableMap":{"input":"cs2","suffix":"cs1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:71","type":"CtIfImpl","sourcecode":"if (cs1 == cs2) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"ac35dd57-3fcf-11e6-9015-ed26555b3d02","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:893","type":"CtIfImpl","sourcecode":"if ((input.length()) == 0) {\n    return null;\n} "},"variableMap":{"input":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:270","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":0},{"failures":[163],"tindex":"ac35dd58-3fcf-11e6-9015-61a8c60381e8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:187","type":"CtIfImpl","sourcecode":"if (nextCharIsVowel) {\n    return java.lang.String[];\n} "},"status":-1},{"failures":[164],"tindex":"ac360469-3fcf-11e6-9015-859d78f0c8f4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:274","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"ac36046a-3fcf-11e6-9015-09c14e9bb3eb","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:448","type":"CtIfImpl","sourcecode":"if ((context.int) == 0) {\n    buffer[((context.int)++)] = ((byte)(((context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n    buffer[((context.int)++)] = ((byte)(((context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n    buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n} "},"variableMap":{"ibitWorkArea":"offset","pos":"len","org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS":"len","context":"context","buffer":"b","modulus":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:155","type":"CtWhileImpl","sourcecode":"while (readLen == 0) {\n    if (!(org.apache.commons.codec.binary.BaseNCodec.hasData(org.apache.commons.codec.binary.BaseNCodec.Context))) {\n        final byte[] byte[] = new byte[boolean ? 4096 : 8192];\n        final int int = java.io.InputStream.read(buf);\n        if (boolean) {\n            org.apache.commons.codec.binary.BaseNCodec.encode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context);\n        } else {\n            org.apache.commons.codec.binary.BaseNCodec.decode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context);\n        }\n    } \n    readLen = org.apache.commons.codec.binary.BaseNCodec.readResults(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context);\n}"},"status":-2},{"failures":[],"tindex":"ac36046b-3fcf-11e6-9015-254c08fe4cd4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:190","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(tmp)"},"variableMap":{"tmp":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:453","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha256Digest().digest(data)"},"status":-2},{"failures":[80,81],"tindex":"ac36046c-3fcf-11e6-9015-9b09324168a5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:718","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-1},{"failures":[165,166,167,90,91,168],"tindex":"ac36046d-3fcf-11e6-9015-131dc30926ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha1Digest()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:112","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getDigest(org.apache.commons.codec.digest.MessageDigestAlgorithms.org.apache.commons.codec.digest.MessageDigestAlgorithms.java.lang.String)"},"status":-1},{"failures":[],"tindex":"ac362b7e-3fcf-11e6-9015-390921e73bf4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:406","type":"CtLocalVariableImpl","sourcecode":"final int int = ((a >>> n) ^ b) & m"},"status":-2},{"failures":[],"tindex":"ac362b7f-3fcf-11e6-9015-4bcc0bb015e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:215","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[8]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:227","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[9]"},"status":-2},{"failures":[],"tindex":"ac362b80-3fcf-11e6-9015-4f02f49492ce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:413","type":"CtIfImpl","sourcecode":"if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n    inMultilineComment = false;\n} "},"variableMap":{"org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_END":"input","line":"input","inMultilineComment":"found"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:211","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.codec.language.bm.Rule org.apache.commons.codec.language.bm.Rule : rules) {\n    final java.lang.String java.lang.String = rule.getPattern();\n    patternLength = pattern.length();\n    if (rule.patternAndContextMatches(org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.java.lang.CharSequence, org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int)) {\n        org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.apply(rule.getPhoneme(), int);\n        org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.boolean = true;\n        break;\n    } \n}"},"status":-2},{"failures":[169],"tindex":"ac362b81-3fcf-11e6-9015-f74b7eeb9170","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:368","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha1(key, valueToDigest))"},"variableMap":{"valueToDigest":"bytes","key":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:335","type":"CtReturnImpl","sourcecode":"return new java.lang.String(bytes , org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-1},{"failures":[],"tindex":"ac362b82-3fcf-11e6-9015-c995775724c1","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Hex:85","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[len >> 1]"},"variableMap":{"len":"decodeSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:375","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = ensureBufferSize(int, context)"},"status":-2},{"failures":[170],"tindex":"ac365293-3fcf-11e6-9015-51e9d6f52d8e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:309","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"pad must not be in alphabet or whitespace\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:140","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\")"},"status":-1},{"failures":[],"tindex":"ac365294-3fcf-11e6-9015-51257816a2b5","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"rightLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:347","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], chr)) {\n    code = '0';\n} else if (((chr == 'H') || (chr < 'A')) || (chr > 'Z')) {\n    if (lastCode == '/') {\n        continue;\n    } \n    code = '-';\n} else if ((chr == 'B') || ((chr == 'P') && (nextChar != 'H'))) {\n    code = '1';\n} else if (((chr == 'D') || (chr == 'T')) && (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)))) {\n    code = '2';\n} else if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], chr)) {\n    code = '3';\n} else if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], chr)) {\n    code = '4';\n} else if ((chr == 'X') && (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], lastChar)))) {\n    code = '4';\n    input.addLeft('S');\n    rightLength++;\n} else if ((chr == 'S') || (chr == 'Z')) {\n    code = '8';\n} else if (chr == 'C') {\n    if (lastCode == '/') {\n        if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)) {\n            code = '4';\n        } else {\n            code = '8';\n        }\n    } else {\n        if ((org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], lastChar)) || (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)))) {\n            code = '8';\n        } else {\n            code = '4';\n        }\n    }\n} else if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], chr)) {\n    code = '8';\n} else if (chr == 'R') {\n    code = '7';\n} else if (chr == 'L') {\n    code = '5';\n} else if ((chr == 'M') || (chr == 'N')) {\n    code = '6';\n} else {\n    code = chr;\n}"},"status":0},{"failures":[80,81],"tindex":"ac365295-3fcf-11e6-9015-0b7763217685","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:656","type":"CtInvocationImpl","sourcecode":"result.append(\"SK\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:488","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-1},{"failures":[],"tindex":"ac365296-3fcf-11e6-9015-9146648b839a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:481","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-2},{"failures":[103,106],"tindex":"ac3679a7-3fcf-11e6-9015-b1449081dfbd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:240","type":"CtOperatorAssignmentImpl","sourcecode":"c |= 1"},"variableMap":{"c":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:355","type":"CtAssignmentImpl","sourcecode":"d = results[0]"},"status":-1},{"failures":[127],"tindex":"ac3679a8-3fcf-11e6-9015-adfbf5613e97","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:130","type":"CtIfImpl","sourcecode":"if (curr == 'Q') {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n} else if (curr == 'Z') {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n} else if (curr == 'M') {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n} "},"variableMap":{"org.apache.commons.codec.language.Nysiis.CHARS_S":"org.apache.commons.codec.language.Nysiis.CHARS_NN","org.apache.commons.codec.language.Nysiis.CHARS_G":"org.apache.commons.codec.language.Nysiis.CHARS_NN","org.apache.commons.codec.language.Nysiis.CHARS_N":"org.apache.commons.codec.language.Nysiis.CHARS_NN","curr":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:139","type":"CtIfImpl","sourcecode":"if (curr == 'K') {\n    if (next == 'N') {\n        return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n    } else {\n        return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n    }\n} "},"status":-1},{"failures":[131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,150,151,152],"tindex":"ac3679a9-3fcf-11e6-9015-ff2ce8cf1b6c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:275","type":"CtIfImpl","sourcecode":"if ((mapped != '0') && (mapped != last)) {\n    out[(count++)] = mapped;\n} "},"status":-1},{"failures":[],"tindex":"ac3679aa-3fcf-11e6-9015-891d3400c496","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:210","type":"CtAssignmentImpl","sourcecode":"this.int = chunkSeparatorLength"},"variableMap":{"chunkSeparatorLength":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:307","type":"CtOperatorAssignmentImpl","sourcecode":"pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer)"},"status":-2},{"failures":[171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186],"tindex":"ac3679ab-3fcf-11e6-9015-67c4b8903ee0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:922","type":"CtIfImpl","sourcecode":"if (target.equals(element)) {\n    result = true;\n    break;\n} "},"variableMap":{"result":"inExtendedComment","target":"org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_END","element":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:183","type":"CtIfImpl","sourcecode":"if (inExtendedComment) {\n    if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n        inExtendedComment = false;\n    } \n} else {\n    if (line.startsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n        inExtendedComment = true;\n    } else if ((line.length()) > 0) {\n        ls.add(line);\n    } \n}"},"status":-1},{"failures":[14,15,16,187,18,20,21],"tindex":"ac36a0bc-3fcf-11e6-9015-d97b2f5b2b87","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:109","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"l3\", \"L3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:120","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"2\", \"\")"},"status":-1},{"failures":[],"tindex":"ac36c7cd-3fcf-11e6-9015-2dd4354b6366","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:311","type":"CtIfImpl","sourcecode":"if (ruleType == (org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType)) {\n    throw new java.lang.IllegalArgumentException((\"ruleType must not be \" + (org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType)));\n} "},"variableMap":{"org.apache.commons.codec.language.bm.RuleType.RULES":"org.apache.commons.codec.language.bm.RuleType.RULES","ruleType":"org.apache.commons.codec.language.bm.RuleType.RULES"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:217","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.codec.language.bm.RuleType org.apache.commons.codec.language.bm.RuleType : org.apache.commons.codec.language.bm.RuleType.values()) {\n    final java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>> java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>> = new java.util.HashMap<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>>();\n    final org.apache.commons.codec.language.bm.Languages org.apache.commons.codec.language.bm.Languages = org.apache.commons.codec.language.bm.Languages.getInstance(s);\n    for (final java.lang.String java.lang.String : ls.getLanguages()) {\n        try {\n            rs.put(l, org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(s, rt, l), org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l)));\n        } catch (final java.lang.IllegalStateException e) {\n            throw new java.lang.IllegalStateException((\"Problem processing \" + (org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l))) , e);\n        }\n    }\n    if (!(rt.equals(org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType))) {\n        rs.put(\"common\", org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(s, rt, \"common\"), org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, \"common\")));\n    } \n    rts.put(rt, java.util.Collections.unmodifiableMap(rs));\n}"},"status":-2},{"failures":[23,28],"tindex":"ac36c7ce-3fcf-11e6-9015-0f8131b66b0c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:498","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(tempResult, ((byte)(0)))"},"variableMap":{"tempResult":"singleByte"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:62","type":"CtInvocationImpl","sourcecode":"write(byte[], 0, 1)"},"status":-1},{"failures":[89,80,81],"tindex":"ac36c7cf-3fcf-11e6-9015-c59f152f4ec2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:767","type":"CtInvocationImpl","sourcecode":"result.append(\"S\", \"TS\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:551","type":"CtIfImpl","sourcecode":"if ((charAt(value, (index + 1))) == 'L') {\n    if (conditionL0(value, index)) {\n        result.appendPrimary('L');\n    } else {\n        result.append('L');\n    }\n    index += 2;\n} else {\n    index++;\n    result.append('L');\n}"},"status":-1},{"failures":[104,105],"tindex":"ac36eee0-3fcf-11e6-9015-21cb855235e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:202","type":"CtAssignmentImpl","sourcecode":"salt = (\"\" + (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.char[][randomGenerator.nextInt(numSaltChars)])) + (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.char[][randomGenerator.nextInt(numSaltChars)])"},"status":-1},{"failures":[150,151,152],"tindex":"ac36eee1-3fcf-11e6-9015-9b9afe9edbc4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:189","type":"CtIfImpl","sourcecode":"if (('H' == hwChar) || ('W' == hwChar)) {\n    final char char = str.charAt((index - 2));\n    final char char = org.apache.commons.codec.language.Soundex.this.map(preHWChar);\n    if (((firstCode == mappedChar) || ('H' == preHWChar)) || ('W' == preHWChar)) {\n        return 0;\n    } \n} "},"status":-1},{"failures":[80,81],"tindex":"ac36eee2-3fcf-11e6-9015-0ba47f9dde41","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:261","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.this.int = maxCodeLen"},"variableMap":{"maxCodeLen":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:292","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[37,188,189,26,190,191,192,38,27,28],"tindex":"ac36eee3-3fcf-11e6-9015-c5a5e1cf0c1c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:355","type":"CtIfImpl","sourcecode":"if (result >= 0) {\n    context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int);\n    context.long = ((context.long) << (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int)) + result;\n    if ((context.int) == 0) {\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 32) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 24) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n    } \n} "},"status":-1},{"failures":[89,80,81],"tindex":"ac36eee4-3fcf-11e6-9015-5d3ccd894615","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:727","type":"CtInvocationImpl","sourcecode":"result.append(\"TS\", \"FX\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:291","type":"CtInvocationImpl","sourcecode":"result.append('S', 'X')"},"status":-1},{"failures":[103,106],"tindex":"ac36eee5-3fcf-11e6-9015-8f3fa4a71af9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:229","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.intToFourBytes(out[1], b, 4)"},"status":-1},{"failures":[],"tindex":"ac3715f6-3fcf-11e6-9015-83f7acfb2f3a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:377","type":"CtIfImpl","sourcecode":"if (obj instanceof byte[]) {\n    return decode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(\"Parameter supplied to Base-N decode is not a byte[] or a String\");\n}"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:315","type":"CtReturnImpl","sourcecode":"return encode(((java.lang.String)(obj)))"},"status":-2},{"failures":[],"tindex":"ac3715f7-3fcf-11e6-9015-f7b30c9a5333","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:92","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"s+\", \"S\")"},"variableMap":{"txt":"text"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:429","type":"CtAssignmentImpl","sourcecode":"text = text.toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale)"},"status":-2},{"failures":[20,21],"tindex":"ac3715f8-3fcf-11e6-9015-69d646352622","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:74","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ci\", \"si\")"},"status":-1},{"failures":[],"tindex":"ac3715f9-3fcf-11e6-9015-f5e0f452bbb5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:645","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = pattern"},"variableMap":{"pattern":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:112","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"r3\", \"R3\")"},"status":-2},{"failures":[],"tindex":"ac373d0a-3fcf-11e6-9015-bbd984c4cff9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:230","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(finalb, ((byte)(0)))"},"variableMap":{"finalb":"pBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:499","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(pBytes, ((byte)(0)))"},"status":-2},{"failures":[],"tindex":"ac373d0b-3fcf-11e6-9015-7764414bc064","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:117","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"2\", \"\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:106","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"w3\", \"W3\")"},"status":0},{"failures":[],"tindex":"ac373d0c-3fcf-11e6-9015-e704c3b3f34b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:893","type":"CtIfImpl","sourcecode":"if ((input.length()) == 0) {\n    return null;\n} "},"variableMap":{"input":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:248","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":0}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}