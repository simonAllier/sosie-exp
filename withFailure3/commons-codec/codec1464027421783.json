{"failureDictionary":{"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":24,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":57,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":11,"org.apache.commons.codec.binary.Base64Test.testBase64":56,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":9,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":29,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":69,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":2,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":36,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":39,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":8,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":16,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":13,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":14,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":17,"org.apache.commons.codec.binary.Base64Test.testUUID":19,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":50,"org.apache.commons.codec.binary.Base64Test.testSingletons":54,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":62,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":0,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":3,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":63,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":65,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":28,"org.apache.commons.codec.binary.Base64Test.testPairs":42,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":49,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":64,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":58,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":22,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":1,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":25,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":45,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":41,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":46,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":33,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":20,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":40,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":18,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":32,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":47,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":48,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":37,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":30,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":72,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":51,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":67,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":70,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":10,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":52,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":59,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":5,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":7,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":15,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":53,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":34,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":21,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":61,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":35,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":26,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":60,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":66,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":4,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":68,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":44,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":55,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":27,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":31,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":6,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":12,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":23,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":43,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":71,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":38},"transformations":[{"failures":[],"tindex":"8bb017c5-2112-11e6-861c-7b5ad192323e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"this.lineSeparator = null","position":"org.apache.commons.codec.binary.Base64:293","type":"CtAssignmentImpl","sourcecode":"this.byte[] = null"},"status":-2},{"failures":[0,1,2,3,4,5,6,7],"tindex":"8bb017c6-2112-11e6-861c-6d31ef480e9a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"buffer.append(org.apache.commons.codec.net.RFC1522Codec.SEP)","position":"org.apache.commons.codec.net.RFC1522Codec:75","type":"CtInvocationImpl","sourcecode":"buffer.append(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.char)"},"status":-1},{"failures":[8],"tindex":"8bb03ed7-2112-11e6-861c-455e9c26f5b8","series":0,"name":"replace","transplant":{"toString":"return \"NO_LANGUAGES\"","position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.DigestUtils.sha1Hex(data)","position":"org.apache.commons.codec.digest.DigestUtils:749","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha1Hex(data)"},"status":-1},{"failures":[],"tindex":"8bb03ed8-2112-11e6-861c-d9245fe32955","series":0,"name":"add","transplant":{"toString":"len += (((len + (lineLength)) - 1) / (lineLength)) * (chunkSeparatorLength)","position":"org.apache.commons.codec.binary.BaseNCodec:521","type":"CtOperatorAssignmentImpl","sourcecode":"len += (((len + (int)) - 1) / (int)) * (int)"},"variableMap":{"chunkSeparatorLength":"org.apache.commons.codec.binary.Base32.BITS_PER_ENCODED_BYTE","len":"lbitWorkArea","lineLength":"org.apache.commons.codec.binary.Base32.BITS_PER_ENCODED_BYTE"},"type":"adrStmt","transplantationPoint":{"toString":"context.lbitWorkArea = ((context.lbitWorkArea) << (org.apache.commons.codec.binary.Base32.BITS_PER_ENCODED_BYTE)) + result","position":"org.apache.commons.codec.binary.Base32:358","type":"CtAssignmentImpl","sourcecode":"context.long = ((context.long) << (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int)) + result"},"status":-2},{"failures":[9,10,11,12,13],"tindex":"8bb03ed9-2112-11e6-861c-4313481fd91e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"result = true","position":"org.apache.commons.codec.language.DoubleMetaphone:923","type":"CtAssignmentImpl","sourcecode":"result = true"},"status":-1},{"failures":[],"tindex":"8bb03eda-2112-11e6-861c-8706a2a0c670","series":0,"name":"add","transplant":{"toString":"from = to + 1","position":"org.apache.commons.codec.net.RFC1522Codec:142","type":"CtAssignmentImpl","sourcecode":"from = to + 1"},"variableMap":{"from":"index","to":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index += 2","position":"org.apache.commons.codec.language.DoubleMetaphone:393","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":0},{"failures":[0,1,2,3,4,5,6,7],"tindex":"8bb03edb-2112-11e6-861c-a172f300d94d","series":0,"name":"add","transplant":{"toString":"code.append('0')","position":"org.apache.commons.codec.language.Metaphone:304","type":"CtInvocationImpl","sourcecode":"code.append('0')"},"variableMap":{"code":"buffer"},"type":"adrStmt","transplantationPoint":{"toString":"buffer.append(org.apache.commons.codec.net.RFC1522Codec.SEP)","position":"org.apache.commons.codec.net.RFC1522Codec:75","type":"CtInvocationImpl","sourcecode":"buffer.append(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.char)"},"status":-1},{"failures":[],"tindex":"8bb065ec-2112-11e6-861c-bfa3cbb31267","series":0,"name":"add","transplant":{"toString":"return org.apache.commons.codec.language.Caverphone.this.caverphone(str1).equals(org.apache.commons.codec.language.Caverphone.this.caverphone(str2))","position":"org.apache.commons.codec.language.Caverphone:102","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone.this.caverphone(str1).equals(org.apache.commons.codec.language.Caverphone.this.caverphone(str2))"},"variableMap":{"str1":"pattern","str2":"context"},"type":"adrStmt","transplantationPoint":{"toString":"return context.startsWith(pattern)","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:199","type":"CtReturnImpl","sourcecode":"return context.startsWith(java.lang.String)"},"status":-2},{"failures":[14,15,16,17],"tindex":"8bb065ed-2112-11e6-861c-ad2e13a8643a","series":0,"name":"add","transplant":{"toString":"if (element == key) {\n    return true;\n} ","position":"org.apache.commons.codec.language.ColognePhonetic:301","type":"CtIfImpl","sourcecode":"if (element == key) {\n    return true;\n} "},"variableMap":{"key":"input","element":"input"},"type":"adrStmt","transplantationPoint":{"toString":"for (int i = 0 ; i < (chars.length()) ; i++) {\n    if ((chars.charAt(i)) == input) {\n        return true;\n    } \n}","position":"org.apache.commons.codec.language.bm.Rule:240","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (chars.length()) ; i++) {\n    if ((chars.charAt(i)) == input) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"8bb065ee-2112-11e6-861c-9b8c9e04ce4f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"last = '*'","position":"org.apache.commons.codec.language.RefinedSoundex:188","type":"CtAssignmentImpl","sourcecode":"last = '*'"},"status":-2},{"failures":[],"tindex":"8bb065ef-2112-11e6-861c-3d1a67ee28c2","series":0,"name":"replace","transplant":{"toString":"return bigBytes","position":"org.apache.commons.codec.binary.Base64:755","type":"CtReturnImpl","sourcecode":"return bigBytes"},"variableMap":{"bigBytes":"l_ascii"},"type":"adrStmt","transplantationPoint":{"toString":"return l_ascii","position":"org.apache.commons.codec.binary.BinaryCodec:257","type":"CtReturnImpl","sourcecode":"return l_ascii"},"status":-3},{"failures":[18,19,20,21],"tindex":"8bb065f0-2112-11e6-861c-079164c94eb5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (inAvail < 0) {\n    context.eof = true;\n} ","position":"org.apache.commons.codec.binary.Base64:432","type":"CtIfImpl","sourcecode":"if (inAvail < 0) {\n    context.boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"8bb08d01-2112-11e6-861c-41217fe4e804","series":0,"name":"add","transplant":{"toString":"name2 = removeVowels(name2)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:232","type":"CtAssignmentImpl","sourcecode":"name2 = removeVowels(name2)"},"variableMap":{"name2":"org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE"},"type":"adrStmt","transplantationPoint":{"toString":"name = name.replaceAll(\"\\\\s{2,}\\\\b\", org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:417","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"\\\\s{2,}\\\\b\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"status":-2},{"failures":[10],"tindex":"8bb08d02-2112-11e6-861c-913a44a5a0f6","series":0,"name":"replace","transplant":{"toString":"ii = keyLen","position":"org.apache.commons.codec.digest.Md5Crypt:235","type":"CtAssignmentImpl","sourcecode":"ii = keyLen"},"variableMap":{"ii":"index","keyLen":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index += 3","position":"org.apache.commons.codec.language.DoubleMetaphone:679","type":"CtOperatorAssignmentImpl","sourcecode":"index += 3"},"status":-1},{"failures":[22,23,24],"tindex":"8bb08d03-2112-11e6-861c-4716ddb06383","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"l\", \"2\")","position":"org.apache.commons.codec.language.Caverphone1:111","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"l\", \"2\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"h\", \"2\")","position":"org.apache.commons.codec.language.Caverphone1:105","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"h\", \"2\")"},"status":-1},{"failures":[],"tindex":"8bb08d04-2112-11e6-861c-d9bdf89b6060","series":0,"name":"replace","transplant":{"toString":"name2 = cleanName(name2)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:226","type":"CtAssignmentImpl","sourcecode":"name2 = cleanName(name2)"},"variableMap":{"name2":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"m+\", \"M\")","position":"org.apache.commons.codec.language.Caverphone1:97","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"m+\", \"M\")"},"status":-2},{"failures":[],"tindex":"8bb08d05-2112-11e6-861c-bb6cd9c3627a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"this.lineLength = useChunking ? (lineLength / encodedBlockSize) * encodedBlockSize : 0","position":"org.apache.commons.codec.binary.BaseNCodec:209","type":"CtAssignmentImpl","sourcecode":"this.int = useChunking ? (lineLength / encodedBlockSize) * encodedBlockSize : 0"},"status":-2},{"failures":[25,26,14,15,16,17],"tindex":"8bb0b416-2112-11e6-861c-c9c1247ebf19","series":0,"name":"replace","transplant":{"toString":"if ((cs1 == null) || (cs2 == null)) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.StringUtils:74","type":"CtIfImpl","sourcecode":"if ((cs1 == null) || (cs2 == null)) {\n    return false;\n} "},"variableMap":{"cs1":"input","cs2":"input"},"type":"adrStmt","transplantationPoint":{"toString":"if (!(input.subSequence(i, ipl).equals(org.apache.commons.codec.language.bm.Rule.this.pattern))) {\n    return false;\n} else if (!(org.apache.commons.codec.language.bm.Rule.this.rContext.isMatch(input.subSequence(ipl, input.length())))) {\n    return false;\n} ","position":"org.apache.commons.codec.language.bm.Rule:713","type":"CtIfImpl","sourcecode":"if (!(input.subSequence(i, ipl).equals(org.apache.commons.codec.language.bm.Rule.this.java.lang.String))) {\n    return false;\n} else if (!(org.apache.commons.codec.language.bm.Rule.this.org.apache.commons.codec.language.bm.Rule.RPattern.isMatch(input.subSequence(ipl, input.length())))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"8bb0b417-2112-11e6-861c-55dc74740df3","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set(',')","position":"org.apache.commons.codec.net.QCodec:77","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(',')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set('*')","position":"org.apache.commons.codec.net.QCodec:75","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('*')"},"status":0},{"failures":[],"tindex":"8bb0b418-2112-11e6-861c-1fb028f682ad","series":0,"name":"add","transplant":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set(' ')","position":"org.apache.commons.codec.net.QCodec:65","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(' ')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set('\\'')","position":"org.apache.commons.codec.net.QCodec:72","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('\\'')"},"status":0},{"failures":[10,12,13],"tindex":"8bb0b419-2112-11e6-861c-6f644358cab1","series":0,"name":"add","transplant":{"toString":"result.append('K')","position":"org.apache.commons.codec.language.DoubleMetaphone:281","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"if (((index > 2) && ((charAt(value, (index - 1))) == 'U')) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, \"C\", \"G\", \"L\", \"R\", \"T\"))) {\n    result.append('F');\n} else if ((index > 0) && ((charAt(value, (index - 1))) != 'I')) {\n    result.append('K');\n} ","position":"org.apache.commons.codec.language.DoubleMetaphone:483","type":"CtIfImpl","sourcecode":"if (((index > 2) && ((charAt(value, (index - 1))) == 'U')) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, \"C\", \"G\", \"L\", \"R\", \"T\"))) {\n    result.append('F');\n} else if ((index > 0) && ((charAt(value, (index - 1))) != 'I')) {\n    result.append('K');\n} "},"status":-1},{"failures":[],"tindex":"8bb0db2a-2112-11e6-861c-4b48be2d398d","series":0,"name":"add","transplant":{"toString":"txt = txt.replaceAll(\"3gh3\", \"3kh3\")","position":"org.apache.commons.codec.language.Caverphone1:89","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"3gh3\", \"3kh3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"m+\", \"M\")","position":"org.apache.commons.codec.language.Caverphone2:104","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"m+\", \"M\")"},"status":0},{"failures":[27],"tindex":"8bb0db2b-2112-11e6-861c-2955bb992cf8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"break","position":"org.apache.commons.codec.binary.Base64:441","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[],"tindex":"8bb0db2c-2112-11e6-861c-f909656ad073","series":0,"name":"replace","transplant":{"toString":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} ","position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"index"},"type":"adrStmt","transplantationPoint":{"toString":"if (((index == 0) || (isVowel(charAt(value, (index - 1))))) && (isVowel(charAt(value, (index + 1))))) {\n    result.append('H');\n    index += 2;\n} else {\n    index++;\n}","position":"org.apache.commons.codec.language.DoubleMetaphone:500","type":"CtIfImpl","sourcecode":"if (((index == 0) || (isVowel(charAt(value, (index - 1))))) && (isVowel(charAt(value, (index + 1))))) {\n    result.append('H');\n    index += 2;\n} else {\n    index++;\n}"},"status":-2},{"failures":[12,13],"tindex":"8bb0db2d-2112-11e6-861c-6746d634a346","series":0,"name":"replace","transplant":{"toString":"final boolean startsWithBox = content.startsWith(\"[\")","position":"org.apache.commons.codec.language.bm.Rule:545","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = content.startsWith(\"[\")"},"variableMap":{"content":"value"},"type":"adrStmt","transplantationPoint":{"toString":"final boolean slavoGermanic = isSlavoGermanic(value)","position":"org.apache.commons.codec.language.DoubleMetaphone:92","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = isSlavoGermanic(value)"},"status":-1},{"failures":[],"tindex":"8bb1023e-2112-11e6-861c-a57c939976dc","series":0,"name":"replace","transplant":{"toString":"if (b < 0) {\n    b = 256 + b;\n} ","position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"u"},"type":"adrStmt","transplantationPoint":{"toString":"if (u == 0) {\n    y++;\n    u = 128;\n} ","position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"status":-2},{"failures":[],"tindex":"8bb1023f-2112-11e6-861c-a155def9ced8","series":0,"name":"add","transplant":{"toString":"return org.apache.commons.codec.digest.HmacUtils.getHmacSha256(key).doFinal(valueToDigest)","position":"org.apache.commons.codec.digest.HmacUtils:421","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getHmacSha256(key).doFinal(valueToDigest)"},"variableMap":{"valueToDigest":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","key":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","position":"org.apache.commons.codec.binary.BinaryCodec:173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":-2},{"failures":[],"tindex":"8bb10240-2112-11e6-861c-e941c59abf9b","series":0,"name":"replace","transplant":{"toString":"return l_ascii","position":"org.apache.commons.codec.binary.BinaryCodec:287","type":"CtReturnImpl","sourcecode":"return l_ascii"},"variableMap":{"l_ascii":"org.apache.commons.codec.language.Nysiis.CHARS_A"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Nysiis.CHARS_A","position":"org.apache.commons.codec.language.Nysiis:126","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[]"},"status":0},{"failures":[],"tindex":"8bb10241-2112-11e6-861c-5139f8ac90fd","series":0,"name":"add","transplant":{"toString":"if (i > name2Size) {\n    break;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"inAvail","name2Size":"inAvail"},"type":"adrStmt","transplantationPoint":{"toString":"if (inAvail < 0) {\n    context.eof = true;\n} ","position":"org.apache.commons.codec.binary.Base32:342","type":"CtIfImpl","sourcecode":"if (inAvail < 0) {\n    context.boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"8bb10242-2112-11e6-861c-d55535a28ecd","series":0,"name":"add","transplant":{"toString":"return false","position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return true","position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"8bb10243-2112-11e6-861c-e1d0836e1e6a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (bytes == null) {\n    return null;\n} ","position":"org.apache.commons.codec.net.BCodec:93","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"status":0},{"failures":[28,29,30,31,32,33,34,35,36,37],"tindex":"8bb12954-2112-11e6-861c-d9077957cd38","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"while (todo > 0) {\n    int len = ((int)(java.lang.Math.min(b.length, todo)));\n    len = org.apache.commons.codec.binary.BaseNCodecInputStream.this.read(b, 0, len);\n    if (len == (org.apache.commons.codec.binary.BaseNCodec.EOF)) {\n        break;\n    } \n    todo -= len;\n}","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:200","type":"CtWhileImpl","sourcecode":"while (todo > 0) {\n    int int = ((int)(java.lang.Math.min(b.int, todo)));\n    len = org.apache.commons.codec.binary.BaseNCodecInputStream.this.read(b, 0, len);\n    if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n        break;\n    } \n    todo -= len;\n}"},"status":-1},{"failures":[],"tindex":"8bb12955-2112-11e6-861c-2fa38a36ef3f","series":0,"name":"replace","transplant":{"toString":"buffer.append(org.apache.commons.codec.net.RFC1522Codec.PREFIX)","position":"org.apache.commons.codec.net.RFC1522Codec:73","type":"CtInvocationImpl","sourcecode":"buffer.append(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String)"},"variableMap":{"org.apache.commons.codec.net.RFC1522Codec.PREFIX":"org.apache.commons.codec.language.MatchRatingApproachEncoder.PLAIN_ASCII","buffer":"sb"},"type":"adrStmt","transplantationPoint":{"toString":"sb.append(org.apache.commons.codec.language.MatchRatingApproachEncoder.PLAIN_ASCII.charAt(pos))","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:363","type":"CtInvocationImpl","sourcecode":"sb.append(org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.charAt(pos))"},"status":-2},{"failures":[],"tindex":"8bb12956-2112-11e6-861c-273a3199b441","series":0,"name":"replace","transplant":{"toString":"if (b == ' ') {\n    b = '+';\n} ","position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"c"},"type":"adrStmt","transplantationPoint":{"toString":"baseNCodec.encode(buf, 0, c, context)","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:160","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.encode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-2},{"failures":[38,39],"tindex":"8bb12957-2112-11e6-861c-6dfe1600ca9e","series":0,"name":"add","transplant":{"toString":"b ^= t","position":"org.apache.commons.codec.digest.UnixCrypt:408","type":"CtOperatorAssignmentImpl","sourcecode":"b ^= t"},"variableMap":{"b":"left","t":"left"},"type":"adrStmt","transplantationPoint":{"toString":"left = (t >>> 1) | (t << 31)","position":"org.apache.commons.codec.digest.UnixCrypt:297","type":"CtAssignmentImpl","sourcecode":"left = (t >>> 1) | (t << 31)"},"status":-1},{"failures":[10,11,12,13],"tindex":"8bb12958-2112-11e6-861c-f504d4ccbe95","series":0,"name":"replace","transplant":{"toString":"result.append('S')","position":"org.apache.commons.codec.language.DoubleMetaphone:284","type":"CtInvocationImpl","sourcecode":"result.append('S')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append('K')","position":"org.apache.commons.codec.language.DoubleMetaphone:458","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-1},{"failures":[],"tindex":"8bb12959-2112-11e6-861c-f342e7dc7354","series":0,"name":"add","transplant":{"toString":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\")","position":"org.apache.commons.codec.net.RFC1522Codec:140","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.util.NoSuchElementException(\"Can't fetch any language from the any language set.\")","position":"org.apache.commons.codec.language.bm.Languages:259","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"Can't fetch any language from the any language set.\")"},"status":-2},{"failures":[],"tindex":"8bb1506a-2112-11e6-861c-b1ddcadbd163","series":0,"name":"replace","transplant":{"toString":"for (int i = 'A' ; i <= 'Z' ; i++) {\n    org.apache.commons.codec.net.URLCodec.WWW_FORM_URL.set(i);\n}","position":"org.apache.commons.codec.net.URLCodec:78","type":"CtForImpl","sourcecode":"for (int int = 'A' ; i <= 'Z' ; i++) {\n    org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(i);\n}"},"variableMap":{"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"obj"},"type":"adrStmt","transplantationPoint":{"toString":"if (!(obj instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Metaphone encode is not of type java.lang.String\");\n} ","position":"org.apache.commons.codec.language.Metaphone:389","type":"CtIfImpl","sourcecode":"if (!(obj instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Metaphone encode is not of type java.lang.String\");\n} "},"status":-3},{"failures":[],"tindex":"8bb1506b-2112-11e6-861c-2d81c8fddc2b","series":0,"name":"replace","transplant":{"toString":"if (value == null) {\n    return null;\n} else if (value instanceof java.lang.String) {\n    return encode(((java.lang.String)(value)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (value.getClass().getName())) + \" cannot be encoded using BCodec\"));\n}","position":"org.apache.commons.codec.net.BCodec:198","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} else if (value instanceof java.lang.String) {\n    return encode(((java.lang.String)(value)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (value.getClass().getName())) + \" cannot be encoded using BCodec\"));\n}"},"variableMap":{"value":"value"},"type":"adrStmt","transplantationPoint":{"toString":"return decode(((java.lang.String)(value)))","position":"org.apache.commons.codec.net.BCodec:225","type":"CtReturnImpl","sourcecode":"return decode(((java.lang.String)(value)))"},"status":-2},{"failures":[5,6,40,18,41,42,19,43,44,45,46,47,48,20,49,50,51,52,53,54,55,56,57,58,59,60,27,21,61,62,63,64,65,66,28,67,68,69,70,71,29,30,31,32,72],"tindex":"8bb1506c-2112-11e6-861c-65eeed4047f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if ((b >= 0) && (b < (org.apache.commons.codec.binary.Base64.DECODE_TABLE.length))) {\n    final int result = org.apache.commons.codec.binary.Base64.DECODE_TABLE[b];\n    if (result >= 0) {\n        context.modulus = ((context.modulus) + 1) % (org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK);\n        context.ibitWorkArea = ((context.ibitWorkArea) << (org.apache.commons.codec.binary.Base64.BITS_PER_ENCODED_BYTE)) + result;\n        if ((context.modulus) == 0) {\n            buffer[((context.pos)++)] = ((byte)(((context.ibitWorkArea) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS)));\n            buffer[((context.pos)++)] = ((byte)(((context.ibitWorkArea) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS)));\n            buffer[((context.pos)++)] = ((byte)((context.ibitWorkArea) & (org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS)));\n        } \n    } \n} ","position":"org.apache.commons.codec.binary.Base64:443","type":"CtIfImpl","sourcecode":"if ((b >= 0) && (b < (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[].int))) {\n    final int int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[][b];\n    if (result >= 0) {\n        context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int);\n        context.int = ((context.int) << (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int)) + result;\n        if ((context.int) == 0) {\n            buffer[((context.int)++)] = ((byte)(((context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            buffer[((context.int)++)] = ((byte)(((context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        } \n    } \n} "},"status":-1},{"failures":[],"tindex":"8bb1506d-2112-11e6-861c-4746ae78d120","series":0,"name":"add","transplant":{"toString":"int txtLength","position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"int index = 0","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:465","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[38,39],"tindex":"8bb1777e-2112-11e6-861c-6b075e150a1a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"y++","position":"org.apache.commons.codec.digest.UnixCrypt:244","type":"CtUnaryOperatorImpl","sourcecode":"y++"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":42,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}