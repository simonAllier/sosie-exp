{"failureDictionary":{"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":174,"org.apache.commons.codec.binary.HexTest.testCustomCharset":83,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":69,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize":64,"org.apache.commons.codec.language.NysiisTest.testSnat":140,"org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage":63,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":74,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch":103,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":125,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":48,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":73,"org.apache.commons.codec.language.Caverphone1Test.testEncodeEmpty":5,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":32,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":30,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":31,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":16,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":170,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":182,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":15,"org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding":119,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":33,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":52,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":11,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull":98,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":59,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched":150,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":149,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":22,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":89,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":20,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":23,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":155,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail":175,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":43,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":2,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":45,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":44,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex":46,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples":105,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":17,"org.apache.commons.codec.language.NysiisTest.testCap":132,"org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac":172,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot":164,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":7,"org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage":56,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":118,"org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le":147,"org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis":42,"org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey":184,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse":104,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":157,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":40,"org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX":80,"org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant":186,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":41,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":77,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":117,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":146,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":167,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":177,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":109,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":166,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":85,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":97,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":121,"org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds":61,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":159,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":21,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail":169,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable":34,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":51,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":72,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString":107,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":114,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize":65,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":49,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":100,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":62,"org.apache.commons.codec.digest.CryptTest.testCryptWithBytes":187,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":93,"org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds":54,"org.apache.commons.codec.language.SoundexTest.testBadCharacters":24,"org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac":179,"org.apache.commons.codec.language.SoundexTest.testB650":29,"org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals":1,"org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA":81,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":71,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":115,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":126,"org.apache.commons.codec.language.SoundexTest.testNewInstance":37,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":94,"org.apache.commons.codec.language.NysiisTest.testTranan":143,"org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid":127,"org.apache.commons.codec.language.NysiisTest.testFal":135,"org.apache.commons.codec.language.NysiisTest.testSnad":139,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":111,"org.apache.commons.codec.digest.HmacUtilsTest.testNullKey":183,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully":161,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall":188,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":3,"org.apache.commons.codec.language.MetaphoneTest.testTCH":68,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":95,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":90,"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":4,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer1":26,"org.apache.commons.codec.language.MetaphoneTest.testPHTOF":76,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars":106,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":27,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":28,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":10,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":88,"org.apache.commons.codec.language.NysiisTest.testDropBy":141,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail":180,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":75,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":99,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":158,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":124,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":14,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":58,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":82,"org.apache.commons.codec.binary.Base64Test.testUUID":87,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":110,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":66,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":122,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":12,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":145,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":67,"org.apache.commons.codec.language.NysiisTest.testRule1":136,"org.apache.commons.codec.language.Caverphone1Test.testEndMb":0,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":96,"org.apache.commons.codec.language.NysiisTest.testRule6":137,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":123,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":79,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray":156,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":8,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":189,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":130,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":38,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":86,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject":108,"org.apache.commons.codec.language.Caverphone1Test.testLocaleIndependence":6,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":84,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected":153,"org.apache.commons.codec.language.NysiisTest.testBran":138,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":144,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2":163,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":35,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":112,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched":151,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":19,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize":57,"org.apache.commons.codec.net.URLCodecTest.testEncodeObjects":120,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":176,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":113,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail":178,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":128,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":78,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":70,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":53,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":60,"org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute":39,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":25,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse":102,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":18,"org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey":171,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":13,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":50,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean":152,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":92,"org.apache.commons.codec.language.NysiisTest.testDad":133,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray":168,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":185,"org.apache.commons.codec.language.NysiisTest.testOthers":142,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":91,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully":162,"org.apache.commons.codec.language.SoundexTest.testDifference":36,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":101,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":131,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":116,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize":55,"org.apache.commons.codec.language.NysiisTest.testDan":134,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":129,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":181,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":9,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":47,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully":165,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH":154,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully":160,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail":173,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":148},"transformations":[{"failures":[],"tindex":"b61c0555-4011-11e6-9cab-05760c932218","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:121","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[]"},"variableMap":{"org.apache.commons.codec.language.Nysiis.CHARS_AF":"soundexMapping"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:217","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Soundex.this.char[]"},"status":0},{"failures":[0,1,2,3,4,5,6],"tindex":"b61d3dd6-4011-11e6-9cab-07bb798e5d0d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:84","type":"CtAssignmentImpl","sourcecode":"java.lang.String = null"},"variableMap":{"lastReplacement":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:108","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"r\", \"2\")"},"status":-1},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],"tindex":"b61d3dd7-4011-11e6-9cab-e3cdf1cb88aa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:213","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.codec.language.bm.NameType org.apache.commons.codec.language.bm.NameType : org.apache.commons.codec.language.bm.NameType.values()) {\n    final java.util.Map<org.apache.commons.codec.language.bm.RuleType, java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>>> java.util.Map<org.apache.commons.codec.language.bm.RuleType, java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>>> = new java.util.EnumMap<org.apache.commons.codec.language.bm.RuleType, java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>>>(org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.java.lang.Class);\n    for (final org.apache.commons.codec.language.bm.RuleType org.apache.commons.codec.language.bm.RuleType : org.apache.commons.codec.language.bm.RuleType.values()) {\n        final java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>> java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>> = new java.util.HashMap<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>>();\n        final org.apache.commons.codec.language.bm.Languages org.apache.commons.codec.language.bm.Languages = org.apache.commons.codec.language.bm.Languages.getInstance(s);\n        for (final java.lang.String java.lang.String : ls.getLanguages()) {\n            try {\n                rs.put(l, org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(s, rt, l), org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l)));\n            } catch (final java.lang.IllegalStateException e) {\n                throw new java.lang.IllegalStateException((\"Problem processing \" + (org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l))) , e);\n            }\n        }\n        if (!(rt.equals(org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType))) {\n            rs.put(\"common\", org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(s, rt, \"common\"), org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, \"common\")));\n        } \n        rts.put(rt, java.util.Collections.unmodifiableMap(rs));\n    }\n    org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.util.Map<org.apache.commons.codec.language.bm.NameType, java.util.Map<org.apache.commons.codec.language.bm.RuleType, java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>>>>.put(s, java.util.Collections.unmodifiableMap(rts));\n}"},"status":-1},{"failures":[],"tindex":"b61d64e8-4011-11e6-9cab-598188813c94","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:89","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set('*')"},"variableMap":{"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:70","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('%')"},"status":0},{"failures":[20,21,22,23],"tindex":"b61d64e9-4011-11e6-9cab-277be5adcc10","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:577","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return ((input.length()) > 0) && ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(((input.length()) - 1)))) == shouldMatch);\n    }\n}"},"variableMap":{"input":"input","bContent":"bContent","shouldMatch":"endsWith"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:559","type":"CtIfImpl","sourcecode":"if (startsWith && endsWith) {\n    return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n        @java.lang.Override\n        public boolean isMatch(final java.lang.CharSequence input) {\n            return ((input.length()) == 1) && ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch);\n        }\n    };\n} else if (startsWith) {\n    return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n        @java.lang.Override\n        public boolean isMatch(final java.lang.CharSequence input) {\n            return ((input.length()) > 0) && ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch);\n        }\n    };\n} else if (endsWith) {\n    return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n        @java.lang.Override\n        public boolean isMatch(final java.lang.CharSequence input) {\n            return ((input.length()) > 0) && ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(((input.length()) - 1)))) == shouldMatch);\n        }\n    };\n} "},"status":-1},{"failures":[],"tindex":"b61d8bfa-4011-11e6-9cab-7d45335ece47","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:504","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b += 256;\n} "},"variableMap":{"b":"inAvail"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:432","type":"CtIfImpl","sourcecode":"if (inAvail < 0) {\n    context.boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"b61d8bfb-4011-11e6-9cab-8ff2661c3e09","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:80","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"tia\", \"sia\")"},"variableMap":{"txt":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:273","type":"CtAssignmentImpl","sourcecode":"line = line.substring(0, cmtI)"},"status":-2},{"failures":[],"tindex":"b61d8bfc-4011-11e6-9cab-7fcef78eb8e2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:390","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Metaphone encode is not of type java.lang.String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:301","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(e.getMessage() , e)"},"status":-2},{"failures":[],"tindex":"b61db30d-4011-11e6-9cab-215973b4ad45","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:297","type":"CtInvocationImpl","sourcecode":"key.deleteCharAt(((key.length()) - 1))"},"variableMap":{"key":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:202","type":"CtInvocationImpl","sourcecode":"code.append('K')"},"status":-2},{"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"tindex":"b61db30e-4011-11e6-9cab-5dc7753b0cc4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:281","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:281","type":"CtReturnImpl","sourcecode":"return new java.lang.String(out)"},"status":-1},{"failures":[],"tindex":"b61db30f-4011-11e6-9cab-2b09d1ca0033","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:188","type":"CtAssignmentImpl","sourcecode":"last = '*'"},"status":-2},{"failures":[47],"tindex":"b61db310-4011-11e6-9cab-694388e487fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:281","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:369","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 2, \"MC\")) {\n    result.append('K');\n} else {\n    result.append('X', 'K');\n}"},"status":-1},{"failures":[48,49,50],"tindex":"b61dda21-4011-11e6-9cab-116495e42e1e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:473","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[25], altResult[46], altResult[4], 4, buffer)"},"status":-1},{"failures":[],"tindex":"b61dda22-4011-11e6-9cab-45671cf10847","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:236","type":"CtLocalVariableImpl","sourcecode":"final int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:749","type":"CtLocalVariableImpl","sourcecode":"int int = bigInt.bitLength()"},"status":-2},{"failures":[51],"tindex":"b61dda23-4011-11e6-9cab-2b5baa4d470d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:190","type":"CtInvocationImpl","sourcecode":"code.append('K')"},"variableMap":{"code":"local"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:131","type":"CtInvocationImpl","sourcecode":"local.append(inwd, 1, ((inwd.int) - 1))"},"status":-1},{"failures":[52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"tindex":"b61dda24-4011-11e6-9cab-d79ec9636647","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:47","type":"CtAssignmentImpl","sourcecode":"this.org.apache.commons.codec.binary.BaseNCodec = baseNCodec"},"variableMap":{"baseNCodec":"baseNCodec"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:47","type":"CtAssignmentImpl","sourcecode":"this.org.apache.commons.codec.binary.BaseNCodec = basedCodec"},"status":-1},{"failures":[7,8,9,10,11,67,12,13,14,15,16,17,18,19,20,21,22,23],"tindex":"b61e0135-4011-11e6-9cab-d397eb23e00a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:160","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.codec.language.bm.NameType org.apache.commons.codec.language.bm.NameType : org.apache.commons.codec.language.bm.NameType.values()) {\n    org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.java.util.Map<org.apache.commons.codec.language.bm.NameType, org.apache.commons.codec.language.bm.Languages>.put(s, org.apache.commons.codec.language.bm.Languages.getInstance(org.apache.commons.codec.language.bm.Languages.langResourceName(s)));\n}"},"status":-1},{"failures":[],"tindex":"b61e0136-4011-11e6-9cab-b5489eb72601","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:284","type":"CtReturnImpl","sourcecode":"return \"ANY_LANGUAGE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:443","type":"CtReturnImpl","sourcecode":"return new java.lang.String(chrs)"},"status":-2},{"failures":[68,51,69],"tindex":"b61e0137-4011-11e6-9cab-c504fe6b3c6d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:149","type":"CtInvocationImpl","sourcecode":"sb.append(\"|\")"},"variableMap":{"sb":"local"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:134","type":"CtInvocationImpl","sourcecode":"local.append(inwd)"},"status":-1},{"failures":[],"tindex":"b61e2848-4011-11e6-9cab-995ff4e29e5a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:91","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"g\", \"k\")"},"status":0},{"failures":[],"tindex":"b61e2849-4011-11e6-9cab-0fa695a0c0e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:495","type":"CtLocalVariableImpl","sourcecode":"char char = '\u0000'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:191","type":"CtLocalVariableImpl","sourcecode":"final char char = org.apache.commons.codec.language.Soundex.this.map(preHWChar)"},"status":-2},{"failures":[],"tindex":"b61e284a-4011-11e6-9cab-9d448f9e83bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:114","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"y\", \"2\")"},"variableMap":{"txt":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:253","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.SoundexUtils.clean(str)"},"status":-2},{"failures":[70,71,72,73,74,75],"tindex":"b61e284b-4011-11e6-9cab-81a58e21a09d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:555","type":"CtInvocationImpl","sourcecode":"branch.finish()"},"variableMap":{"branch":"nextBranch"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:532","type":"CtIfImpl","sourcecode":"if (branching) {\n    nextBranches.add(nextBranch);\n} else {\n    break;\n}"},"status":-1},{"failures":[68,76,77,78,79,80,81],"tindex":"b61e4f5c-4011-11e6-9cab-bb8b7fb816d0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:365","type":"CtAssignmentImpl","sourcecode":"matches = substring.equals(test)"},"status":-1},{"failures":[],"tindex":"b61e4f5d-4011-11e6-9cab-d39eafdde9d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:219","type":"CtReturnImpl","sourcecode":"return int"},"variableMap":{"length":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:460","type":"CtReturnImpl","sourcecode":"return index"},"status":-2},{"failures":[],"tindex":"b61f87de-4011-11e6-9cab-8506914e0290","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:188","type":"CtReturnImpl","sourcecode":"return 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:226","type":"CtReturnImpl","sourcecode":"return 1"},"status":-2},{"failures":[47,82],"tindex":"b61f87df-4011-11e6-9cab-1101d903431a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:429","type":"CtInvocationImpl","sourcecode":"result.append('K', 'J')"},"status":-1},{"failures":[83,84,85,86,87,88],"tindex":"b61faef0-4011-11e6-9cab-f9afcc0f5cba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"variableMap":{"terminator":"index","to":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:177","type":"CtIfImpl","sourcecode":"if (digit == (-1)) {\n    throw new org.apache.commons.codec.DecoderException((((\"Illegal hexadecimal character \" + ch) + \" at index \") + index));\n} "},"status":-1},{"failures":[],"tindex":"b61faef1-4011-11e6-9cab-a30bd5cd9b1c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:47","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String;\n} "},"variableMap":{"txt":"str","org.apache.commons.codec.language.Caverphone1.SIX_1":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:259","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-2},{"failures":[89,48,49,50,90,91,92,93],"tindex":"b61faef2-4011-11e6-9cab-7be305c1b346","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:295","type":"CtInvocationImpl","sourcecode":"ctx1.reset()"},"variableMap":{"ctx1":"ctx"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:181","type":"CtInvocationImpl","sourcecode":"ctx.update(saltBytes)"},"status":-1},{"failures":[],"tindex":"b61fd603-4011-11e6-9cab-7d185e143172","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:350","type":"CtBreakImpl","sourcecode":"break"},"status":0},{"failures":[94,95,58,59],"tindex":"b61fd604-4011-11e6-9cab-4da7ce152bbe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:505","type":"CtOperatorAssignmentImpl","sourcecode":"b += 256"},"status":-1},{"failures":[96,97],"tindex":"b61fd605-4011-11e6-9cab-d141b2b9102e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.URLCodec:169","type":"CtInvocationImpl","sourcecode":"buffer.write(' ')"},"variableMap":{"buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:298","type":"CtInvocationImpl","sourcecode":"buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":-1},{"failures":[],"tindex":"b61fd606-4011-11e6-9cab-139da793627c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:239","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"bytes","raw":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:93","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"status":-2},{"failures":[8],"tindex":"b61fd607-4011-11e6-9cab-3dfef44c9d6a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:277","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"b61ffd18-4011-11e6-9cab-7d5bd3aa737b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:248","type":"CtReturnImpl","sourcecode":"return encode(str, getDefaultCharset())"},"status":-2},{"failures":[],"tindex":"b61ffd19-4011-11e6-9cab-83902e0bd7de","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:601","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-2},{"failures":[98],"tindex":"b61ffd1a-4011-11e6-9cab-2f7586d47e0f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:598","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[24,26,27,28,29,30,31,32,33,34,35,36,38,39,42,43,44,45],"tindex":"b61ffd1b-4011-11e6-9cab-a3ee7b3e5645","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:144","type":"CtReturnImpl","sourcecode":"return name"},"variableMap":{"name":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:167","type":"CtReturnImpl","sourcecode":"return soundex(str)"},"status":-1},{"failures":[70,71,72,73,74,99,100,101,75],"tindex":"b620242c-4011-11e6-9cab-d34cd2139751","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:209","type":"CtLocalVariableImpl","sourcecode":"final char char = salt.charAt(0)"},"variableMap":{"salt":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:497","type":"CtLocalVariableImpl","sourcecode":"final char char = input.charAt(index)"},"status":-1},{"failures":[89,90,91,92,93],"tindex":"b620242d-4011-11e6-9cab-0d58066b3daf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:467","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(((byte)(0)), altResult[31], altResult[30], 3, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:463","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[6], altResult[16], altResult[26], 4, buffer)"},"status":-1},{"failures":[],"tindex":"b620242e-4011-11e6-9cab-1169b4582f8f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:121","type":"CtReturnImpl","sourcecode":"return diff"},"variableMap":{"diff":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:752","type":"CtReturnImpl","sourcecode":"return index"},"status":-2},{"failures":[],"tindex":"b6204b3f-4011-11e6-9cab-bf2e6aaa4f79","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:369","type":"CtOperatorAssignmentImpl","sourcecode":"d &= 268435455"},"variableMap":{"d":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:730","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-2},{"failures":[],"tindex":"b6204b40-4011-11e6-9cab-998cb3d7a419","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:140","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:208","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = (lineLength > 0) && (chunkSeparatorLength > 0)"},"status":-2},{"failures":[96,97],"tindex":"b6204b41-4011-11e6-9cab-87b4879e0898","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:297","type":"CtInvocationImpl","sourcecode":"buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":-1},{"failures":[],"tindex":"b6204b42-4011-11e6-9cab-2b2688db62da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:239","type":"CtIfImpl","sourcecode":"if (((b[y]) & u) != 0) {\n    c |= 1;\n} "},"variableMap":{"b":"bytes","c":"length","u":"length","y":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:166","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (bytes.int) ; i++) {\n    final int int = bytes[i];\n    if (b == '+') {\n        buffer.write(' ');\n    } else if (b == (org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.byte)) {\n        try {\n            final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)]);\n            final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)]);\n            buffer.write(((char)((u << 4) + l)));\n        } catch (final java.lang.ArrayIndexOutOfBoundsException e) {\n            throw new org.apache.commons.codec.DecoderException(\"Invalid URL encoding: \" , e);\n        }\n    } else {\n        buffer.write(b);\n    }\n}"},"status":-2},{"failures":[],"tindex":"b6207253-4011-11e6-9cab-8fad7cbc44f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:227","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[9]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:220","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = ctx1.digest()"},"status":-2},{"failures":[102,103,104],"tindex":"b6207254-4011-11e6-9cab-ed3d42303250","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:219","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[11,20,21,22,23],"tindex":"b6207255-4011-11e6-9cab-1b6af92a096c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:505","type":"CtOperatorAssignmentImpl","sourcecode":"b += 256"},"variableMap":{"b":"patternLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:223","type":"CtAssignmentImpl","sourcecode":"patternLength = 1"},"status":-1},{"failures":[105],"tindex":"b6207256-4011-11e6-9cab-33eece04ba1e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:97","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"m+\", \"M\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:103","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"f+\", \"F\")"},"status":-1},{"failures":[106,107,108],"tindex":"b6209967-4011-11e6-9cab-cb42dfe088d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:437","type":"CtAssignmentImpl","sourcecode":"chrs[index] = element[1]"},"variableMap":{"chrs":"l_ascii","index":"jj","element":"l_ascii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:283","type":"CtAssignmentImpl","sourcecode":"l_ascii[(jj - bits)] = '1'"},"status":-1},{"failures":[109,110,111,112,113,114,115],"tindex":"b6209968-4011-11e6-9cab-9b49ef4feb78","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:297","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(saltBytes, ((byte)(0)))"},"variableMap":{"saltBytes":"saltBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:211","type":"CtInvocationImpl","sourcecode":"ctx.update(saltBytes)"},"status":-1},{"failures":[116,117,118,119,120,121],"tindex":"b6209969-4011-11e6-9cab-cfab9cbf6124","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:321","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md5(data))"},"variableMap":{"data":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:228","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUsAscii(encode(str.getBytes(charset)))"},"status":-1},{"failures":[122,123,124,125,126,127,128,129,130],"tindex":"b620c07a-4011-11e6-9cab-a5b723db3ce6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:383","type":"CtIfImpl","sourcecode":"if (!(ph.endsWith(\")\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme starts with '(' so must end with ')'\");\n} "},"variableMap":{"ph":"charset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:139","type":"CtIfImpl","sourcecode":"if (charset.equals(\"\")) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\");\n} "},"status":-1},{"failures":[131,132,133,134,135,136,137,138,139,140,141,142,143,144],"tindex":"b622bc4b-4011-11e6-9cab-df5e5d71d44d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:132","type":"CtInvocationImpl","sourcecode":"local.setCharAt(0, 'W')"},"variableMap":{"local":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:304","type":"CtIfImpl","sourcecode":"if ((last2Char == 'A') && (lastChar == 'Y')) {\n    key.deleteCharAt(((key.length()) - 2));\n} "},"status":-1},{"failures":[],"tindex":"b622bc4c-4011-11e6-9cab-bf7bd6e1a3ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:215","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[8]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:155","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = saltString.getBytes(org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-2},{"failures":[],"tindex":"b622bc4d-4011-11e6-9cab-615dc801e75e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:187","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int = i"},"status":-2},{"failures":[145],"tindex":"b622e35e-4011-11e6-9cab-ad2d8138b31b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:626","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha384(data))"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:321","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md5(data))"},"status":-1},{"failures":[22],"tindex":"b622e35f-4011-11e6-9cab-75686a9e5b04","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:123","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.Set<java.lang.String>) {\n    if (sl.java.util.Set<java.lang.String>.contains(lang)) {\n        ls.add(lang);\n    } \n}"},"variableMap":{"languages":"ls","ls":"ls","sl":"sl"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:141","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : sl.java.util.Set<java.lang.String>) {\n    ls.add(lang);\n}"},"status":-1},{"failures":[],"tindex":"b622e360-4011-11e6-9cab-a54f9527ad42","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:100","type":"CtForImpl","sourcecode":"for (int int = 33 ; i <= 60 ; i++) {\n    org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet.set(i);\n}"},"variableMap":{"org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:66","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('!')"},"status":0},{"failures":[],"tindex":"b6230971-4011-11e6-9cab-9fecc03f3865","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:297","type":"CtWhileImpl","sourcecode":"while (cp < (keyLen - blocksize)) {\n    java.lang.System.arraycopy(tempResult, 0, pBytes, cp, blocksize);\n    cp += blocksize;\n}"},"variableMap":{"blocksize":"length","tempResult":"tmp","pBytes":"bytes","keyLen":"length","cp":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:182","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (bytes.int) ; i++) {\n    final byte byte = bytes[i];\n    if (b != (org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte)) {\n        tmp[i] = b;\n    } else {\n        tmp[i] = org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte;\n    }\n}"},"status":-2},{"failures":[],"tindex":"b6230972-4011-11e6-9cab-755f66611ba6","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:260","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getMd5Digest().digest(data)"},"variableMap":{"data":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:104","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.decodeBase64(bytes)"},"status":-2},{"failures":[],"tindex":"b6230973-4011-11e6-9cab-47972d5e55fe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:74","type":"CtIfImpl","sourcecode":"if ((cs1 == null) || (cs2 == null)) {\n    return false;\n} "},"variableMap":{"cs1":"cs1","cs2":"cs2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:77","type":"CtIfImpl","sourcecode":"if ((cs1 instanceof java.lang.String) && (cs2 instanceof java.lang.String)) {\n    return cs1.equals(cs2);\n} "},"status":0},{"failures":[146],"tindex":"b6233084-4011-11e6-9cab-4feb98173546","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:326","type":"CtAssignmentImpl","sourcecode":"name1Char[(name1Size - i)] = ' '"},"variableMap":{"name1Char":"element","name1Size":"index","i":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:437","type":"CtAssignmentImpl","sourcecode":"chrs[index] = element[1]"},"status":-1},{"failures":[],"tindex":"b6233085-4011-11e6-9cab-035f467186b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:93","type":"CtIfImpl","sourcecode":"if (string == null) {\n    return null;\n} "},"variableMap":{"string":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:673","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha512(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"status":-2},{"failures":[47,82],"tindex":"b6233086-4011-11e6-9cab-554936f7194e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:388","type":"CtInvocationImpl","sourcecode":"result.append('J')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:419","type":"CtInvocationImpl","sourcecode":"result.append(\"KN\")"},"status":-1},{"failures":[147],"tindex":"b6233087-4011-11e6-9cab-51e5e941ab69","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:688","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha512(data))"},"variableMap":{"data":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:367","type":"CtReturnImpl","sourcecode":"return new java.lang.String(bytes , org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-1},{"failures":[148,149],"tindex":"b6235798-4011-11e6-9cab-df31f7280f7d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:343","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(d, c, 4, 252645135, results)"},"variableMap":{"c":"left","d":"left","results":"results"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:302","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(left, right, 8, 16711935, results)"},"status":-1},{"failures":[89,90,91,92,93],"tindex":"b6235799-4011-11e6-9cab-57fd0948564a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:464","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[27], altResult[7], altResult[17], 4, buffer)"},"status":-1},{"failures":[],"tindex":"b623579a-4011-11e6-9cab-55b3e41b4b5a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:352","type":"CtIfImpl","sourcecode":"if (accentedWord == null) {\n    return null;\n} "},"variableMap":{"accentedWord":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:95","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txtLength = txt.length()) == 0)) {\n    return \"\";\n} "},"status":0},{"failures":[150,151,152,153,154],"tindex":"b623579b-4011-11e6-9cab-3ba0a4d6490e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:46","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = source"},"variableMap":{"source":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:84","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = name.toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale)"},"status":-1},{"failures":[47,82],"tindex":"b6237eac-4011-11e6-9cab-f9b74ef7bdf2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:429","type":"CtInvocationImpl","sourcecode":"result.append('K', 'J')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:656","type":"CtInvocationImpl","sourcecode":"result.append(\"SK\")"},"status":-1},{"failures":[],"tindex":"b6237ead-4011-11e6-9cab-5f12863cbf7e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"modulus","y":"org.apache.commons.codec.binary.Base64.MASK_6BITS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:344","type":"CtSwitchImpl","sourcecode":"switch (context.int) {\n    case 0 :\n        break;\n    case 1 :\n        buffer[((context.int)++)] = byte[][(((context.int) >> 2) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n        buffer[((context.int)++)] = byte[][(((context.int) << 4) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n        if ((byte[]) == (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[])) {\n            buffer[((context.int)++)] = byte;\n            buffer[((context.int)++)] = byte;\n        } \n        break;\n    case 2 :\n        buffer[((context.int)++)] = byte[][(((context.int) >> 10) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n        buffer[((context.int)++)] = byte[][(((context.int) >> 4) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n        buffer[((context.int)++)] = byte[][(((context.int) << 2) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n        if ((byte[]) == (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[])) {\n            buffer[((context.int)++)] = byte;\n        } \n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Impossible modulus \" + (context.int)));\n}"},"status":-2},{"failures":[155,156],"tindex":"b623a5be-4011-11e6-9cab-b5a7028ef8f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:582","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, false, true)"},"variableMap":{"binaryData":"ascii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:141","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.fromAscii(ascii)"},"status":-1},{"failures":[],"tindex":"b623a5bf-4011-11e6-9cab-13092f326171","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:217","type":"CtAssignmentImpl","sourcecode":"key[i] = 0"},"variableMap":{"i":"pos","key":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:365","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte"},"status":-2},{"failures":[],"tindex":"b623a5c0-4011-11e6-9cab-9fb3c4993c56","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:208","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:340","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.digest.UnixCrypt.fourBytesToInt(key, 0)"},"status":-2},{"failures":[157,146,158,159],"tindex":"b623a5c1-4011-11e6-9cab-3964b2c44c33","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:361","type":"CtAssignmentImpl","sourcecode":"code = '4'"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:355","type":"CtAssignmentImpl","sourcecode":"code = '1'"},"status":-1},{"failures":[47,82],"tindex":"b623ccd2-4011-11e6-9cab-5940bf23125e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:555","type":"CtInvocationImpl","sourcecode":"result.append('L')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:423","type":"CtInvocationImpl","sourcecode":"result.append(\"KL\", \"L\")"},"status":-1},{"failures":[],"tindex":"b623ccd3-4011-11e6-9cab-bf64578acbf6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:186","type":"CtAssignmentImpl","sourcecode":"this.java.lang.CharSequence = input"},"status":-2},{"failures":[],"tindex":"b62616c4-4011-11e6-9cab-13d6512ca1d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:326","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"status":-2},{"failures":[83,84,85,86,87,88],"tindex":"b62616c5-4011-11e6-9cab-27fff04e298c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:92","type":"CtUnaryOperatorImpl","sourcecode":"j++"},"status":-1},{"failures":[160,161,162,163,164,165],"tindex":"b62616c6-4011-11e6-9cab-dbd818f88a67","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:190","type":"CtAssignmentImpl","sourcecode":"minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int"},"status":-1},{"failures":[],"tindex":"b6263dd7-4011-11e6-9cab-d7b0f79c901f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:283","type":"CtIfImpl","sourcecode":"if (lineLength > 0) {\n    this.int = (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int) + (lineSeparator.int);\n    this.byte[] = new byte[lineSeparator.int];\n    java.lang.System.arraycopy(lineSeparator, 0, org.apache.commons.codec.binary.Base64.this.byte[], 0, lineSeparator.int);\n} else {\n    this.int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int;\n    this.byte[] = null;\n}"},"variableMap":{"org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK":"read","encodeSize":"read","length":"read","lineSeparator":"buffer","lineLength":"read"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:770","type":"CtInvocationImpl","sourcecode":"mac.update(buffer, 0, read)"},"status":-2},{"failures":[166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185],"tindex":"b6263dd8-4011-11e6-9cab-ede5970c7489","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:63","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(org.apache.commons.codec.digest.HmacAlgorithms.org.apache.commons.codec.digest.HmacAlgorithms.org.apache.commons.codec.digest.HmacAlgorithms, key)"},"variableMap":{"org.apache.commons.codec.digest.HmacAlgorithms.HMAC_MD5":"algorithm","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:155","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(algorithm.toString(), key)"},"status":-1},{"failures":[],"tindex":"b6263dd9-4011-11e6-9cab-f9d97ee84ace","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:291","type":"CtAssignmentImpl","sourcecode":"left = right"},"variableMap":{"left":"blocksize","right":"blocksize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:299","type":"CtOperatorAssignmentImpl","sourcecode":"cp += blocksize"},"status":-2},{"failures":[],"tindex":"b6263dda-4011-11e6-9cab-ad1a725dfcdc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:142","type":"CtReturnImpl","sourcecode":"return string.getBytes(charsetName)"},"variableMap":{"string":"key","charsetName":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:674","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.hmacSha512(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"status":-2},{"failures":[],"tindex":"b62664eb-4011-11e6-9cab-05843741984c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:101","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Languages.SomeLanguages.this.java.util.Set<java.lang.String>"},"variableMap":{"languages":"languages"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:293","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Languages.this.java.util.Set<java.lang.String>"},"status":0},{"failures":[],"tindex":"b62664ec-4011-11e6-9cab-bb316a952ee0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:554","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, false)"},"variableMap":{"binaryData":"bigBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:755","type":"CtReturnImpl","sourcecode":"return bigBytes"},"status":-2},{"failures":[],"tindex":"b62664ed-4011-11e6-9cab-874ba8d640b2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:365","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.net.Utils.digit16(bytes[i])"},"variableMap":{"bytes":"data","i":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:141","type":"CtLocalVariableImpl","sourcecode":"final int int = data.int"},"status":-2},{"failures":[],"tindex":"b62664ee-4011-11e6-9cab-7d337184a1df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:148","type":"CtIfImpl","sourcecode":"if ((sb.length()) > 0) {\n    sb.append(\"|\");\n} "},"variableMap":{"sb":"builder"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:138","type":"CtIfImpl","sourcecode":"if (append && ((java.lang.StringBuilder.length()) < (org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.int))) {\n    java.lang.StringBuilder.append(replacement);\n    if ((java.lang.StringBuilder.length()) > (org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.int)) {\n        java.lang.StringBuilder.delete(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.int, java.lang.StringBuilder.length());\n    } \n    java.lang.String = null;\n} "},"status":-2},{"failures":[],"tindex":"b62664ef-4011-11e6-9cab-ab4aea4c8f42","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:287","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes)"},"status":-2},{"failures":[],"tindex":"b62664f0-4011-11e6-9cab-274974ece6e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:393","type":"CtLocalVariableImpl","sourcecode":"final int int = ((a << (16 - n)) ^ a) & m"},"variableMap":{"a":"length","m":"length","n":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:278","type":"CtLocalVariableImpl","sourcecode":"final int int = chars.int"},"status":-2},{"failures":[148,149],"tindex":"b62664f1-4011-11e6-9cab-c90e93595f3d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:763","type":"CtAssignmentImpl","sourcecode":"startSrc = 1"},"variableMap":{"startSrc":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:368","type":"CtOperatorAssignmentImpl","sourcecode":"c &= 268435455"},"status":-1},{"failures":[],"tindex":"b6268c02-4011-11e6-9cab-3ffaf62f64f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:295","type":"CtAssignmentImpl","sourcecode":"this.int = (org.apache.commons.codec.binary.Base64.this.int) - 1"},"variableMap":{"encodeSize":"maxPhonemes","decodeSize":"maxPhonemes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:188","type":"CtAssignmentImpl","sourcecode":"this.int = maxPhonemes"},"status":-2},{"failures":[186,187,89,48,49,50,188,90,91,92,189,93],"tindex":"b6268c03-4011-11e6-9cab-d73a25a4212f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:463","type":"CtReturnImpl","sourcecode":"return result.substring(1)"},"variableMap":{"result":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:506","type":"CtReturnImpl","sourcecode":"return buffer.toString()"},"status":-1},{"failures":[109,110,111,112,113,114,115],"tindex":"b6268c04-4011-11e6-9cab-150fc6fe857a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:226","type":"CtOperatorAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int += patternLength"},"variableMap":{"patternLength":"ii","i":"ii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:243","type":"CtOperatorAssignmentImpl","sourcecode":"ii >>= 1"},"status":-1},{"failures":[],"tindex":"b6268c05-4011-11e6-9cab-1f61c5bd20fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.NameType:42","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = name"},"variableMap":{"name":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:265","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(str).replaceFirst(\"SSS\")"},"status":-2},{"failures":[],"tindex":"b6268c06-4011-11e6-9cab-17fd476c6aca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:255","type":"CtIfImpl","sourcecode":"if ((str.length()) == 0) {\n    return str;\n} "},"variableMap":{"str":"salt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Crypt:71","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(keyBytes, salt)"},"status":-2},{"failures":[],"tindex":"b6268c07-4011-11e6-9cab-5571c3c6fce8","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:532","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha256(data))"},"variableMap":{"data":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Crypt:92","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Crypt.crypt(key, null)"},"status":-2},{"failures":[],"tindex":"b626b318-4011-11e6-9cab-8b0239c86216","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:172","type":"CtLocalVariableImpl","sourcecode":"final java.io.InputStream java.io.InputStream = org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.java.lang.Class.getClassLoader().getResourceAsStream(languagesResourceName)"},"variableMap":{"languagesResourceName":"org.apache.commons.codec.language.DaitchMokotoffSoundex.RESOURCE_FILE","org.apache.commons.codec.language.bm.Languages.class":"org.apache.commons.codec.language.DaitchMokotoffSoundex.class"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:229","type":"CtLocalVariableImpl","sourcecode":"final java.io.InputStream java.io.InputStream = org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.Class.getClassLoader().getResourceAsStream(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}