{"failureDictionary":{"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":10,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":7,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":20,"org.apache.commons.codec.language.NysiisTest.testSnat":33,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":17,"org.apache.commons.codec.language.NysiisTest.testDropBy":35,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":19,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":21,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":4,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":23,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":5,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":13,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":3,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":6,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully":0,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":9,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":2,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":8,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":11,"org.apache.commons.codec.language.NysiisTest.testDad":25,"org.apache.commons.codec.language.NysiisTest.testRule2":29,"org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero":39,"org.apache.commons.codec.language.NysiisTest.testRule1":28,"org.apache.commons.codec.language.NysiisTest.testOthers":36,"org.apache.commons.codec.language.NysiisTest.testRule6":30,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":16,"org.apache.commons.codec.language.NysiisTest.testTranan":37,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":15,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":22,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":1,"org.apache.commons.codec.language.NysiisTest.testDan":26,"org.apache.commons.codec.language.NysiisTest.testFal":27,"org.apache.commons.codec.language.NysiisTest.testCap":24,"org.apache.commons.codec.language.NysiisTest.testSnad":32,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":34,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":14,"org.apache.commons.codec.language.NysiisTest.testBran":31,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":38,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":18,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":12},"transformations":[{"failures":[0],"tindex":"b90fc2fe-2110-11e6-809c-998503769bdc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (accentedWord == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:352","type":"CtIfImpl","sourcecode":"if (accentedWord == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"b90fc2ff-2110-11e6-809c-7b23e3cbd757","series":0,"name":"add","transplant":{"toString":"if (b < 0) {\n    b += 256;\n} ","position":"org.apache.commons.codec.binary.Base32:504","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b += 256;\n} "},"variableMap":{"b":"length"},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.System.arraycopy(context.buffer, 0, b, 0, context.buffer.length)","position":"org.apache.commons.codec.binary.BaseNCodec:255","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(context.byte[], 0, b, 0, context.byte[].int)"},"status":-2},{"failures":[],"tindex":"b90fea10-2110-11e6-809c-17347fe10ef0","series":0,"name":"replace","transplant":{"toString":"return decodeText(str)","position":"org.apache.commons.codec.net.QCodec:269","type":"CtReturnImpl","sourcecode":"return decodeText(str)"},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"toString":"return encode(str, getCharset())","position":"org.apache.commons.codec.net.QCodec:250","type":"CtReturnImpl","sourcecode":"return encode(str, getCharset())"},"status":-2},{"failures":[],"tindex":"b90fea11-2110-11e6-809c-3ba3f9afffbc","series":0,"name":"replace","transplant":{"toString":"if (value == null) {\n    return null;\n} else if (value instanceof java.lang.String) {\n    return decode(((java.lang.String)(value)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (value.getClass().getName())) + \" cannot be decoded using BCodec\"));\n}","position":"org.apache.commons.codec.net.BCodec:222","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} else if (value instanceof java.lang.String) {\n    return decode(((java.lang.String)(value)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (value.getClass().getName())) + \" cannot be decoded using BCodec\"));\n}"},"variableMap":{"value":"obj"},"type":"adrStmt","transplantationPoint":{"toString":"if (obj instanceof byte[]) {\n    return decode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(\"Parameter supplied to Base-N decode is not a byte[] or a String\");\n}","position":"org.apache.commons.codec.binary.BaseNCodec:377","type":"CtIfImpl","sourcecode":"if (obj instanceof byte[]) {\n    return decode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(\"Parameter supplied to Base-N decode is not a byte[] or a String\");\n}"},"status":-2},{"failures":[],"tindex":"b90fea12-2110-11e6-809c-55efcf46b861","series":0,"name":"add","transplant":{"toString":"name2 = cleanName(name2)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:226","type":"CtAssignmentImpl","sourcecode":"name2 = cleanName(name2)"},"variableMap":{"name2":"replacement"},"type":"adrStmt","transplantationPoint":{"toString":"lastReplacement = replacement","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:147","type":"CtAssignmentImpl","sourcecode":"java.lang.String = replacement"},"status":-2},{"failures":[],"tindex":"b90fea13-2110-11e6-809c-a1e50c695788","series":0,"name":"replace","transplant":{"toString":"last = current","position":"org.apache.commons.codec.language.RefinedSoundex:199","type":"CtAssignmentImpl","sourcecode":"last = current"},"variableMap":{"current":"code","last":"code"},"type":"adrStmt","transplantationPoint":{"toString":"code = '6'","position":"org.apache.commons.codec.language.ColognePhonetic:389","type":"CtAssignmentImpl","sourcecode":"code = '6'"},"status":-2},{"failures":[],"tindex":"b90fea14-2110-11e6-809c-0d4f35fa4956","series":0,"name":"replace","transplant":{"toString":"rounds = java.lang.Math.max(org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_MIN, java.lang.Math.min(org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_MAX, rounds))","position":"org.apache.commons.codec.digest.Sha2Crypt:151","type":"CtAssignmentImpl","sourcecode":"rounds = java.lang.Math.max(org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.int, java.lang.Math.min(org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.int, rounds))"},"variableMap":{"org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_MAX":"left","org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_MIN":"right","rounds":"eSwap0"},"type":"adrStmt","transplantationPoint":{"toString":"right = org.apache.commons.codec.digest.UnixCrypt.dEncrypt(right, left, (i + 2), eSwap0, eSwap1, schedule)","position":"org.apache.commons.codec.digest.UnixCrypt:288","type":"CtAssignmentImpl","sourcecode":"right = org.apache.commons.codec.digest.UnixCrypt.dEncrypt(right, left, (i + 2), eSwap0, eSwap1, schedule)"},"status":-3},{"failures":[],"tindex":"b9101125-2110-11e6-809c-6b7ba1cf6b05","series":0,"name":"add","transplant":{"toString":"this.replacementDefault = replacementDefault.split(\"\\\\|\")","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:173","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String[] = replacementDefault.split(\"\\\\|\")"},"variableMap":{"replacementDefault":"replacementAtStart"},"type":"adrStmt","transplantationPoint":{"toString":"this.replacementAtStart = replacementAtStart.split(\"\\\\|\")","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:171","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String[] = replacementAtStart.split(\"\\\\|\")"},"status":-2},{"failures":[1,2,3,4,5,6],"tindex":"b91149a6-2110-11e6-809c-b7be63f3e4ce","series":0,"name":"replace","transplant":{"toString":"return true","position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return false","position":"org.apache.commons.codec.language.bm.Rule:716","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[7,8,9,10,11,12,13],"tindex":"b91149a7-2110-11e6-809c-93d210810c13","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"while (read > (-1)) {\n    digest.update(buffer, 0, read);\n    read = data.read(buffer, 0, org.apache.commons.codec.digest.DigestUtils.STREAM_BUFFER_LENGTH);\n}","position":"org.apache.commons.codec.digest.DigestUtils:796","type":"CtWhileImpl","sourcecode":"while (read > (-1)) {\n    digest.update(buffer, 0, read);\n    read = data.read(buffer, 0, org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.int);\n}"},"status":-1},{"failures":[],"tindex":"b91149a8-2110-11e6-809c-07c62a71717a","series":0,"name":"replace","transplant":{"toString":"if (value == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.DoubleMetaphone:88","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} "},"variableMap":{"value":"str"},"type":"adrStmt","transplantationPoint":{"toString":"if (str == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.Soundex:259","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-3},{"failures":[14,15,16,17,18,19,20,21],"tindex":"b91149a9-2110-11e6-809c-e781d2b7e35c","series":0,"name":"add","transplant":{"toString":"if (element == key) {\n    return true;\n} ","position":"org.apache.commons.codec.language.ColognePhonetic:301","type":"CtIfImpl","sourcecode":"if (element == key) {\n    return true;\n} "},"variableMap":{"key":"key","element":"key"},"type":"adrStmt","transplantationPoint":{"toString":"for (final char element : arr) {\n    if (element == key) {\n        return true;\n    } \n}","position":"org.apache.commons.codec.language.ColognePhonetic:300","type":"CtForEachImpl","sourcecode":"for (final char char : arr) {\n    if (element == key) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"b91170ba-2110-11e6-809c-15baf23c9c5d","series":0,"name":"replace","transplant":{"toString":"final boolean endsWith = regex.endsWith(\"$\")","position":"org.apache.commons.codec.language.bm.Rule:501","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = regex.endsWith(\"$\")"},"variableMap":{"regex":"content"},"type":"adrStmt","transplantationPoint":{"toString":"final boolean endsWithBox = content.endsWith(\"]\")","position":"org.apache.commons.codec.language.bm.Rule:546","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = content.endsWith(\"]\")"},"status":0},{"failures":[],"tindex":"b91170bb-2110-11e6-809c-2d1f44f57dc8","series":0,"name":"replace","transplant":{"toString":"char lastChar = '-'","position":"org.apache.commons.codec.language.ColognePhonetic:331","type":"CtLocalVariableImpl","sourcecode":"char char = '-'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"char lastCode = '/'","position":"org.apache.commons.codec.language.ColognePhonetic:332","type":"CtLocalVariableImpl","sourcecode":"char char = '/'"},"status":-2},{"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"tindex":"b91170bc-2110-11e6-809c-7f9a5748d1bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if ((chars[i]) != (chars[(i - 1)])) {\n    key.append(chars[i]);\n} ","position":"org.apache.commons.codec.language.Nysiis:287","type":"CtIfImpl","sourcecode":"if ((chars[i]) != (chars[(i - 1)])) {\n    key.append(chars[i]);\n} "},"status":-1},{"failures":[],"tindex":"b91170bd-2110-11e6-809c-cb705231ac9c","series":0,"name":"replace","transplant":{"toString":"if (str.endsWith(org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE)) {\n    str = str.substring(0, ((str.length()) - 1));\n} ","position":"org.apache.commons.codec.language.bm.Rule:617","type":"CtIfImpl","sourcecode":"if (str.endsWith(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n    str = str.substring(0, ((str.length()) - 1));\n} "},"variableMap":{"str":"cachedString","org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE":"cachedString"},"type":"adrStmt","transplantationPoint":{"toString":"while ((builder.length()) < (org.apache.commons.codec.language.DaitchMokotoffSoundex.MAX_LENGTH)) {\n    builder.append('0');\n    cachedString = null;\n}","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:116","type":"CtWhileImpl","sourcecode":"while ((java.lang.StringBuilder.length()) < (org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.int)) {\n    java.lang.StringBuilder.append('0');\n    java.lang.String = null;\n}"},"status":-2},{"failures":[],"tindex":"b91170be-2110-11e6-809c-898c710ca3a4","series":0,"name":"replace","transplant":{"toString":"flush(false)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"messageDigest.update(valueToDigest)","position":"org.apache.commons.codec.digest.DigestUtils:776","type":"CtInvocationImpl","sourcecode":"messageDigest.update(valueToDigest)"},"status":-2},{"failures":[39,3,4,5],"tindex":"b91170bf-2110-11e6-809c-536e63ae83bb","series":0,"name":"replace","transplant":{"toString":"return -1","position":"org.apache.commons.codec.language.bm.Rule:99","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return 0","position":"org.apache.commons.codec.language.bm.Rule:102","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":18,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}