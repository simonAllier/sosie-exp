{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":51,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":13,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":11,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":12,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects":204,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":194,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":14,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray":129,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":37,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":73,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":140,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":78,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":157,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt":148,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":60,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":156,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":212,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":22,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":24,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":23,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":97,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":98,"org.apache.commons.codec.language.NysiisTest.testCap":175,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":101,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":29,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":206,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":99,"org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent":26,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":28,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":100,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength":136,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":166,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":217,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":88,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":119,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":172,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":191,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":192,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":208,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":169,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":72,"org.apache.commons.codec.language.SoundexTest.testB650":10,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":57,"org.apache.commons.codec.language.SoundexTest.testNewInstance":18,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid":211,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":114,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":62,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":89,"org.apache.commons.codec.net.RFC1522CodecTest.testNullInput":210,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":164,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":139,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":110,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":165,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":58,"org.apache.commons.codec.language.NysiisTest.testDropBy":184,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":2,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":153,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":218,"org.apache.commons.codec.binary.Base64Test.testUUID":94,"org.apache.commons.codec.binary.Base64Test.testSingletons":107,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":0,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":80,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":59,"org.apache.commons.codec.binary.Base64Test.testPairs":93,"org.apache.commons.codec.language.NysiisTest.testRule2":195,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":79,"org.apache.commons.codec.language.NysiisTest.testRule1":179,"org.apache.commons.codec.language.NysiisTest.testRule7":198,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":65,"org.apache.commons.codec.language.NysiisTest.testRule6":197,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":1,"org.apache.commons.codec.language.NysiisTest.testRule5":196,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":71,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":19,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":145,"org.apache.commons.codec.language.NysiisTest.testBran":180,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":187,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray":74,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":68,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":56,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":207,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":124,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":105,"org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray":132,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":33,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":106,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":118,"org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding":159,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":77,"org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute":199,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":6,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":135,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":38,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":43,"org.apache.commons.codec.language.NysiisTest.testDad":176,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":84,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray":121,"org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid":30,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":96,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":70,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull":34,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":193,"org.apache.commons.codec.language.NysiisTest.testDan":177,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":126,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":86,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":3,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":123,"org.apache.commons.codec.binary.HexTest.testCustomCharset":143,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":158,"org.apache.commons.codec.language.NysiisTest.testSnat":182,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":202,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":44,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":122,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":127,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":160,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":87,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":55,"org.apache.commons.codec.binary.Base64Test.testTriplets":168,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":154,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":4,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":41,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":39,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":42,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":75,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":205,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":82,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":102,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":174,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples":220,"org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy":149,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString":130,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":92,"org.apache.commons.codec.language.Caverphone2Test.testEndMb":152,"org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis":200,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":20,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":21,"org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean":49,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":120,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":125,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":137,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull":214,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":63,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode":64,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":133,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":219,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":104,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":147,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":32,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":67,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":85,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":50,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":40,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable":15,"org.apache.commons.codec.net.URLCodecTest.testDecodeObjects":31,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":150,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":52,"org.apache.commons.codec.language.SoundexTest.testBadCharacters":5,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":113,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt":216,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":188,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":66,"org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex":144,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException":209,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":163,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":167,"org.apache.commons.codec.language.NysiisTest.testTranan":186,"org.apache.commons.codec.language.NysiisTest.testFal":178,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":27,"org.apache.commons.codec.language.SoundexTest.testLocaleIndependence":201,"org.apache.commons.codec.language.NysiisTest.testSnad":181,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength":131,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":69,"org.apache.commons.codec.language.NysiisTest.testLocaleIndependence":222,"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":48,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer1":7,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":8,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":9,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":36,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":173,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":170,"org.apache.commons.codec.binary.Base64Test.testBase64":109,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":47,"org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString":141,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":53,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":103,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":162,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":134,"org.apache.commons.codec.binary.HexTest.testEncodeZeroes":146,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":138,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":203,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":111,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":161,"org.apache.commons.codec.binary.Base64Test.testCodec112":171,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray":76,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":35,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":117,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":91,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":183,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":54,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":90,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":190,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":16,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":61,"org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex":142,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":83,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":189,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":112,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":115,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":215,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":155,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":151,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":81,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":221,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":128,"org.apache.commons.codec.language.NysiisTest.testOthers":185,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":108,"org.apache.commons.codec.language.SoundexTest.testDifference":17,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":25,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":213,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":116,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":45,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":46,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":95},"transformations":[{"failures":[],"tindex":"75af8b5c-3dc1-11e6-8ed1-9d19c06c113f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:97","type":"CtLocalVariableImpl","sourcecode":"int int = read(byte[], 0, 1)"},"status":-2},{"failures":[0,1,2],"tindex":"75af8b5d-3dc1-11e6-8ed1-8dede108269e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:90","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(i)"},"status":-1},{"failures":[3,4],"tindex":"75af8b5e-3dc1-11e6-8ed1-bb185b0e9282","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:329","type":"CtAssignmentImpl","sourcecode":"u = ((u ^ (u << 16)) ^ r) ^ (sArr[s])"},"status":-1},{"failures":[],"tindex":"75afb26f-3dc1-11e6-8ed1-c9d23257ef20","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:858","type":"CtReturnImpl","sourcecode":"return ((((value.indexOf('W')) > (-1)) || ((value.indexOf('K')) > (-1))) || ((value.indexOf(\"CZ\")) > (-1))) || ((value.indexOf(\"WITZ\")) > (-1))"},"variableMap":{"value":"language"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:92","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Languages.SomeLanguages.this.java.util.Set<java.lang.String>.contains(language)"},"status":-2},{"failures":[],"tindex":"75afb270-3dc1-11e6-8ed1-1109c389cbfd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:239","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"bytes","raw":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:254","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(printable, bytes, false)"},"status":-2},{"failures":[],"tindex":"75afb271-3dc1-11e6-8ed1-216bbf11c439","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:766","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.int]"},"variableMap":{"org.apache.commons.codec.digest.HmacUtils.STREAM_BUFFER_LENGTH":"keyLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:295","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[keyLen]"},"status":-2},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],"tindex":"75afb272-3dc1-11e6-8ed1-793a439696c1","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:326","type":"CtAssignmentImpl","sourcecode":"name1Char[(name1Size - i)] = ' '"},"variableMap":{"name1Char":"out","name1Size":"count","i":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:276","type":"CtAssignmentImpl","sourcecode":"out[(count++)] = mapped"},"status":-1},{"failures":[],"tindex":"75afb273-3dc1-11e6-8ed1-75bb24b091f1","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:284","type":"CtReturnImpl","sourcecode":"return \"ANY_LANGUAGE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:178","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[25,26,27,28,29,30,31,32],"tindex":"75afb274-3dc1-11e6-8ed1-f5929667a531","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:168","type":"CtIfImpl","sourcecode":"if (b == '+') {\n    buffer.write(' ');\n} else if (b == (org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.byte)) {\n    try {\n        final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)]);\n        final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)]);\n        buffer.write(((char)((u << 4) + l)));\n    } catch (final java.lang.ArrayIndexOutOfBoundsException e) {\n        throw new org.apache.commons.codec.DecoderException(\"Invalid URL encoding: \" , e);\n    }\n} else {\n    buffer.write(b);\n}"},"status":-1},{"failures":[33],"tindex":"75afb275-3dc1-11e6-8ed1-874065d10e39","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:304","type":"CtInvocationImpl","sourcecode":"code.append('0')"},"status":-1},{"failures":[],"tindex":"75afb276-3dc1-11e6-8ed1-e5850c30e523","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:84","type":"CtAssignmentImpl","sourcecode":"java.lang.String = null"},"status":0},{"failures":[34],"tindex":"75afd987-3dc1-11e6-8ed1-c1f057a400bc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:469","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"75afd988-3dc1-11e6-8ed1-a1c0f4b99a21","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:291","type":"CtIfImpl","sourcecode":"if (lineSeparator == null) {\n    throw new java.lang.IllegalArgumentException(((\"lineLength \" + lineLength) + \" > 0, but lineSeparator is null\"));\n} "},"variableMap":{"lineSeparator":"buffer","lineLength":"ibitWorkArea"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:445","type":"CtIfImpl","sourcecode":"if (result >= 0) {\n    context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int);\n    context.int = ((context.int) << (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int)) + result;\n    if ((context.int) == 0) {\n        buffer[((context.int)++)] = ((byte)(((context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n    } \n} "},"status":-2},{"failures":[35,36,37,38,39,40,41,42],"tindex":"75afd989-3dc1-11e6-8ed1-6db161dc4dfb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:475","type":"CtAssignmentImpl","sourcecode":"rules = new java.util.ArrayList<org.apache.commons.codec.language.bm.Rule>()"},"variableMap":{"rules":"rules"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:476","type":"CtInvocationImpl","sourcecode":"lines.put(patternKey, rules)"},"status":-1},{"failures":[43,44],"tindex":"75afd98a-3dc1-11e6-8ed1-db92008ef3db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:338","type":"CtAssignmentImpl","sourcecode":"cp = 0"},"status":-1},{"failures":[45,36,37,38],"tindex":"75afd98b-3dc1-11e6-8ed1-03a294547d0d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:284","type":"CtReturnImpl","sourcecode":"return \"ANY_LANGUAGE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:97","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Languages.SomeLanguages.this.java.util.Set<java.lang.String>.iterator().next()"},"status":-1},{"failures":[46,47],"tindex":"75afd98c-3dc1-11e6-8ed1-2bd59fcc9de8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:527","type":"CtInvocationImpl","sourcecode":"result.append('J', 'A')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:375","type":"CtInvocationImpl","sourcecode":"result.append('X')"},"status":-1},{"failures":[48],"tindex":"75afd98d-3dc1-11e6-8ed1-73b44d2fe4cf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:86","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^[aeiou]\", \"A\")"},"status":-1},{"failures":[],"tindex":"75afd98e-3dc1-11e6-8ed1-197ee7cc36d1","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:518","type":"CtIfImpl","sourcecode":"if (((int) > 0) && ((int) <= (context.int))) {\n    java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int);\n    context.int += byte[].int;\n    context.int = 0;\n} "},"variableMap":{"currentLinePos":"ibitWorkArea","pos":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS","context":"context","length":"modulus","buffer":"buffer","lineSeparator":"buffer","lineLength":"ibitWorkArea"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:466","type":"CtSwitchImpl","sourcecode":"switch (context.int) {\n    case 1 :\n        break;\n    case 2 :\n        context.int = (context.int) >> 4;\n        buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    case 3 :\n        context.int = (context.int) >> 2;\n        buffer[((context.int)++)] = ((byte)(((context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Impossible modulus \" + (context.int)));\n}"},"status":-2},{"failures":[49],"tindex":"75b0009f-3dc1-11e6-8ed1-cbc40b793889","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:260","type":"CtReturnImpl","sourcecode":"return count >= minRating"},"variableMap":{"count":"i","minRating":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:465","type":"CtIfImpl","sourcecode":"if ((!(isInAlphabet(arrayOctet[i]))) && ((!allowWSPad) || (((arrayOctet[i]) != (byte)) && (!(org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(arrayOctet[i])))))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"75b000a0-3dc1-11e6-8ed1-b123301a32b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:173","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String[] = replacementDefault.split(\"\\\\|\")"},"status":-2},{"failures":[50],"tindex":"75b000a1-3dc1-11e6-8ed1-9bf0efce176a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:474","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-1},{"failures":[50,51,46,47],"tindex":"75b000a2-3dc1-11e6-8ed1-b13967b5c515","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:748","type":"CtInvocationImpl","sourcecode":"result.append(\"KS\")"},"status":-1},{"failures":[],"tindex":"75b000a3-3dc1-11e6-8ed1-0b30cf52dee0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:352","type":"CtIfImpl","sourcecode":"if (accentedWord == null) {\n    return null;\n} "},"variableMap":{"accentedWord":"original"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:263","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.UnixCrypt.crypt(original.getBytes(org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset))"},"status":-2},{"failures":[50,51,46,47],"tindex":"75b000a4-3dc1-11e6-8ed1-e79544dc93a4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:295","type":"CtInvocationImpl","sourcecode":"result.append('X')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, \"I\", \"E\", \"H\")) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, \"HU\")))) {\n    if (((index == 1) && ((charAt(value, (index - 1))) == 'A')) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, \"UCCEE\", \"UCCES\"))) {\n        result.append(\"KS\");\n    } else {\n        result.append('X');\n    }\n    index += 3;\n} else {\n    result.append('K');\n    index += 2;\n}"},"status":-1},{"failures":[17],"tindex":"75b000a5-3dc1-11e6-8ed1-4bae6da1b536","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:260","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"75b000a6-3dc1-11e6-8ed1-691ac38f2a0c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:105","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(40)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:423","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(saltPrefix)"},"status":-2},{"failures":[52,53,54,55,56,57,58,59,60],"tindex":"75b027b7-3dc1-11e6-8ed1-6f83d329dc44","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:393","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int)"},"status":-1},{"failures":[61],"tindex":"75b027b8-3dc1-11e6-8ed1-0fddf56f00d1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:462","type":"CtInvocationImpl","sourcecode":"sb.append(\"Rule\")"},"variableMap":{"sb":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:197","type":"CtInvocationImpl","sourcecode":"code.append('K')"},"status":-1},{"failures":[46,47],"tindex":"75b027b9-3dc1-11e6-8ed1-7d4e5c77326f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:392","type":"CtInvocationImpl","sourcecode":"result.append(\"TK\")"},"status":-1},{"failures":[3,4],"tindex":"75b027ba-3dc1-11e6-8ed1-e1ff5d177aa1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.CharSequenceUtils:55","type":"CtLocalVariableImpl","sourcecode":"int int = start"},"variableMap":{"start":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:373","type":"CtLocalVariableImpl","sourcecode":"final int int = (((org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][4][(d & 63)]) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][5][(((d >>> 7) & 3) | ((d >>> 8) & 60))])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][6][((d >>> 15) & 63)])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][7][(((d >>> 21) & 15) | ((d >>> 22) & 48))])"},"status":-1},{"failures":[],"tindex":"75b027bb-3dc1-11e6-8ed1-4963fe5baedb","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:86","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^[aeiou]\", \"A\")"},"variableMap":{"txt":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:179","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.SoundexUtils.clean(str)"},"status":-2},{"failures":[62,63,64,65,66,67,68],"tindex":"75b027bc-3dc1-11e6-8ed1-6b8deb00d19b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:86","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('<')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:103","type":"CtForImpl","sourcecode":"for (int int = 62 ; i <= 126 ; i++) {\n    org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet.set(i);\n}"},"status":-1},{"failures":[],"tindex":"75b027bd-3dc1-11e6-8ed1-c15b95987b68","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:296","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacMd5(key, valueToDigest))"},"variableMap":{"valueToDigest":"str","key":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:269","type":"CtReturnImpl","sourcecode":"return decodeText(str)"},"status":-2},{"failures":[],"tindex":"75b027be-3dc1-11e6-8ed1-eb0c637319df","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:259","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"Can't fetch any language from the any language set.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:509","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be quoted-printable encoded\"))"},"status":-2},{"failures":[],"tindex":"75b04ecf-3dc1-11e6-8ed1-a772535d5535","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:256","type":"CtUnaryOperatorImpl","sourcecode":"currentLine++"},"status":0},{"failures":[],"tindex":"75b04ed0-3dc1-11e6-8ed1-25e4a200a164","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:187","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int = i"},"variableMap":{"i":"currentLine"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:256","type":"CtUnaryOperatorImpl","sourcecode":"currentLine++"},"status":-2},{"failures":[69,70,43,71,72,73],"tindex":"75b04ed1-3dc1-11e6-8ed1-8d5021004282","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:473","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[25], altResult[46], altResult[4], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:462","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[15], altResult[25], altResult[5], 4, buffer)"},"status":-1},{"failures":[74,75,76],"tindex":"75b04ed2-3dc1-11e6-8ed1-3300d825255c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:210","type":"CtIfImpl","sourcecode":"if ((ascii[(jj - bits)]) == '1') {\n    l_raw[ii] |= org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits];\n} "},"status":-1},{"failures":[],"tindex":"75b04ed3-3dc1-11e6-8ed1-c5a872a1d74c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:329","type":"CtLocalVariableImpl","sourcecode":"char char"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:190","type":"CtLocalVariableImpl","sourcecode":"final char char = str.charAt((index - 2))"},"status":-2},{"failures":[39,40,41,42],"tindex":"75b04ed4-3dc1-11e6-8ed1-0bdec067d33a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:141","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : sl.java.util.Set<java.lang.String>) {\n    ls.add(lang);\n}"},"variableMap":{"languages":"languages","ls":"ls","sl":"sl"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:123","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.Set<java.lang.String>) {\n    if (sl.java.util.Set<java.lang.String>.contains(lang)) {\n        ls.add(lang);\n    } \n}"},"status":-1},{"failures":[],"tindex":"75b04ed5-3dc1-11e6-8ed1-c78297d4d04e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:278","type":"CtIfImpl","sourcecode":"if (lineSeparator != null) {\n    if (containsAlphabetOrPad(lineSeparator)) {\n        final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n        throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n    } \n    if (lineLength > 0) {\n        this.int = (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int) + (lineSeparator.int);\n        this.byte[] = new byte[lineSeparator.int];\n        java.lang.System.arraycopy(lineSeparator, 0, org.apache.commons.codec.binary.Base64.this.byte[], 0, lineSeparator.int);\n    } else {\n        this.int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int;\n        this.byte[] = null;\n    }\n} else {\n    this.int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int;\n    this.byte[] = null;\n}"},"variableMap":{"org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK":"pos","encodeSize":"ibitWorkArea","this":"this","length":"length","lineSeparator":"org.apache.commons.codec.binary.Base64.DECODE_TABLE","lineLength":"inAvail"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:435","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < inAvail ; i++) {\n    final byte[] byte[] = ensureBufferSize(int, context);\n    final byte byte = in[(inPos++)];\n    if (b == (byte)) {\n        context.boolean = true;\n        break;\n    } else {\n        if ((b >= 0) && (b < (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[].int))) {\n            final int int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[][b];\n            if (result >= 0) {\n                context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int);\n                context.int = ((context.int) << (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int)) + result;\n                if ((context.int) == 0) {\n                    buffer[((context.int)++)] = ((byte)(((context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n                    buffer[((context.int)++)] = ((byte)(((context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n                    buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n                } \n            } \n        } \n    }\n}"},"status":-2},{"failures":[77,52,53,78,79,80,81,82,83,84,55,85,86,87,88,89,90,56,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117],"tindex":"75b04ed6-3dc1-11e6-8ed1-493cb45040ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:435","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < inAvail ; i++) {\n    final byte[] byte[] = ensureBufferSize(int, context);\n    final byte byte = in[(inPos++)];\n    if (b == (byte)) {\n        context.boolean = true;\n        break;\n    } else {\n        if ((b >= 0) && (b < (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[].int))) {\n            final int int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[][b];\n            if (result >= 0) {\n                context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int);\n                context.int = ((context.int) << (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int)) + result;\n                if ((context.int) == 0) {\n                    buffer[((context.int)++)] = ((byte)(((context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n                    buffer[((context.int)++)] = ((byte)(((context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n                    buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n                } \n            } \n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"75b075e7-3dc1-11e6-8ed1-890e91f94b7f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:777","type":"CtReturnImpl","sourcecode":"return messageDigest"},"variableMap":{"messageDigest":"digest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:801","type":"CtReturnImpl","sourcecode":"return digest"},"status":-2},{"failures":[50,51,46,47],"tindex":"75b075e8-3dc1-11e6-8ed1-b7b0eb9609d0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:692","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[115,116,118],"tindex":"75b075e9-3dc1-11e6-8ed1-c33c62b98194","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:94","type":"CtReturnImpl","sourcecode":"return upperName"},"variableMap":{"upperName":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:123","type":"CtReturnImpl","sourcecode":"return encodeText(value, charset)"},"status":-1},{"failures":[],"tindex":"75b075ea-3dc1-11e6-8ed1-d9179ab5e08b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:507","type":"CtReturnImpl","sourcecode":"return encode(((java.lang.String)(obj)))"},"variableMap":{"obj":"value","this":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:222","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} else if (value instanceof java.lang.String) {\n    return decode(((java.lang.String)(value)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (value.getClass().getName())) + \" cannot be decoded using BCodec\"));\n}"},"status":-2},{"failures":[],"tindex":"75b075eb-3dc1-11e6-8ed1-e954d19cbf7b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:647","type":"CtAssignmentImpl","sourcecode":"this.org.apache.commons.codec.language.bm.Rule.RPattern = org.apache.commons.codec.language.bm.Rule.pattern((\"^\" + rContext))"},"status":-2},{"failures":[119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147],"tindex":"75b075ec-3dc1-11e6-8ed1-f3df58fc1371","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:327","type":"CtAssignmentImpl","sourcecode":"name2Char[(name2Size - i)] = ' '"},"variableMap":{"name2Char":"out","i":"j","name2Size":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:146","type":"CtAssignmentImpl","sourcecode":"out[(j++)] = toDigits[(15 & (data[i]))]"},"status":-1},{"failures":[46,47],"tindex":"75b075ed-3dc1-11e6-8ed1-d94fdbcf3cd1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:727","type":"CtInvocationImpl","sourcecode":"result.append(\"TS\", \"FX\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:609","type":"CtInvocationImpl","sourcecode":"result.append('S')"},"status":-1},{"failures":[],"tindex":"75b075ee-3dc1-11e6-8ed1-5b960b6d8777","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:415","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"U\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"name":"txt","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:88","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"[aeiou]\", \"3\")"},"status":-2},{"failures":[69,148,70,43,71,72,73],"tindex":"75b075ef-3dc1-11e6-8ed1-231d27c80ad1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:296","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md5(data))"},"variableMap":{"data":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:105","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(keyBytes, salt, org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String, org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.int, org.apache.commons.codec.digest.MessageDigestAlgorithms.org.apache.commons.codec.digest.MessageDigestAlgorithms.java.lang.String)"},"status":-1},{"failures":[1,149],"tindex":"75b075f0-3dc1-11e6-8ed1-65c8a1fa76cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:189","type":"CtAssignmentImpl","sourcecode":"inExtendedComment = true"},"variableMap":{"inExtendedComment":"encodeBlanks"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:356","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.net.QCodec.this.boolean = b"},"status":-1},{"failures":[46,47],"tindex":"75b09d01-3dc1-11e6-8ed1-dd22ee78bfdf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:295","type":"CtInvocationImpl","sourcecode":"result.append('X')"},"status":-1},{"failures":[44,150,151],"tindex":"75b09d02-3dc1-11e6-8ed1-cf133befc391","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:483","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[56], altResult[14], altResult[35], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:488","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[40], altResult[61], altResult[19], 4, buffer)"},"status":-1},{"failures":[152],"tindex":"75b09d03-3dc1-11e6-8ed1-2bb05373d9a4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:90","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"gh\", \"22\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:104","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"m+\", \"M\")"},"status":-1},{"failures":[],"tindex":"75b09d04-3dc1-11e6-8ed1-9d64f9aa1e94","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:216","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (key.int) ; i++) {\n    key[i] = 0;\n}"},"status":0},{"failures":[3,4],"tindex":"75b09d05-3dc1-11e6-8ed1-2192bd2ef335","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:370","type":"CtLocalVariableImpl","sourcecode":"int int = (((org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][0][(c & 63)]) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][1][(((c >>> 6) & 3) | ((c >>> 7) & 60))])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][2][(((c >>> 13) & 15) | ((c >>> 14) & 48))])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][3][((((c >>> 20) & 1) | ((c >>> 21) & 6)) | ((c >>> 22) & 56))])"},"variableMap":{"c":"d","org.apache.commons.codec.digest.UnixCrypt.SKB":"org.apache.commons.codec.digest.UnixCrypt.SKB"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:373","type":"CtLocalVariableImpl","sourcecode":"final int int = (((org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][4][(d & 63)]) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][5][(((d >>> 7) & 3) | ((d >>> 8) & 60))])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][6][((d >>> 15) & 63)])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][7][(((d >>> 21) & 15) | ((d >>> 22) & 48))])"},"status":-1},{"failures":[],"tindex":"75b09d06-3dc1-11e6-8ed1-831389e02d35","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:391","type":"CtOperatorAssignmentImpl","sourcecode":"context.int += org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int"},"variableMap":{"currentLinePos":"b","org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK":"ibitWorkArea","context":"context"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:385","type":"CtAssignmentImpl","sourcecode":"context.int = ((context.int) << 8) + b"},"status":-2},{"failures":[],"tindex":"75b09d07-3dc1-11e6-8ed1-1b9c287779c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:298","type":"CtLocalVariableImpl","sourcecode":"final int int = (name1.length()) - 1"},"variableMap":{"name1":"name2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:299","type":"CtLocalVariableImpl","sourcecode":"final int int = (name2.length()) - 1"},"status":-2},{"failures":[],"tindex":"75b09d08-3dc1-11e6-8ed1-393b424377fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:352","type":"CtIfImpl","sourcecode":"if (accentedWord == null) {\n    return null;\n} "},"variableMap":{"accentedWord":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:138","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} "},"status":-2},{"failures":[69,70,43,71,72,73],"tindex":"75b09d09-3dc1-11e6-8ed1-5bc176e4235e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:478","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[9], altResult[30], altResult[51], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:462","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[15], altResult[25], altResult[5], 4, buffer)"},"status":-1},{"failures":[],"tindex":"75b09d0a-3dc1-11e6-8ed1-0d542cdfe1ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:277","type":"CtReturnImpl","sourcecode":"return ((((letter.equalsIgnoreCase(\"E\")) || (letter.equalsIgnoreCase(\"A\"))) || (letter.equalsIgnoreCase(\"O\"))) || (letter.equalsIgnoreCase(\"I\"))) || (letter.equalsIgnoreCase(\"U\"))"},"variableMap":{"letter":"base64"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:524","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.isBase64(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(base64))"},"status":-2},{"failures":[],"tindex":"75b1394b-3dc1-11e6-8ed1-f1700d29db9f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:199","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"bytes","ascii":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:170","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"75b1394c-3dc1-11e6-8ed1-fdd052f75b46","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.URLCodec:353","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.this.java.lang.String"},"variableMap":{"charset":"source"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:96","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.BeiderMorseEncoder.this.org.apache.commons.codec.language.bm.PhoneticEngine.encode(source)"},"status":-2},{"failures":[153,154,155,156,157,158,159,160,161,162,52,53,163,164,165,166,54,167,55,56,168,57,169,93,94,95,96,97,98,99,100,170,101,102,103,58,171,107,172,108,59,109,60,173,110,174,113,115,116,118],"tindex":"75b1394d-3dc1-11e6-8ed1-6feb0a53dba3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:430","type":"CtInvocationImpl","sourcecode":"encode(pArray, 0, pArray.int, context)"},"status":-1},{"failures":[],"tindex":"75b1394e-3dc1-11e6-8ed1-03df344df95d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:537","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return org.apache.commons.codec.language.bm.Rule.endsWith(input, content);\n    }\n}"},"variableMap":{"input":"input","content":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:529","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return org.apache.commons.codec.language.bm.Rule.startsWith(input, content);\n    }\n}"},"status":-2},{"failures":[],"tindex":"75b1394f-3dc1-11e6-8ed1-7394bce432d3","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:86","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String[] java.lang.String[] = new java.lang.String[]{ \"\\\\-\" , \"[&]\" , \"\\\\\\'\" , \"\\\\.\" , \"[\\\\,]\" }"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:552","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String[] java.lang.String[] = new java.lang.String[currentBranches.size()]"},"status":-2},{"failures":[],"tindex":"75b13950-3dc1-11e6-8ed1-8b4b37299269","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:387","type":"CtIfImpl","sourcecode":"if (replacedName.contains(dc)) {\n    final java.lang.String java.lang.String = dc.substring(0, 1);\n    replacedName = replacedName.replace(dc, singleLetter);\n} "},"variableMap":{"replacedName":"cachedString","dc":"cachedString"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:138","type":"CtIfImpl","sourcecode":"if (append && ((java.lang.StringBuilder.length()) < (org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.int))) {\n    java.lang.StringBuilder.append(replacement);\n    if ((java.lang.StringBuilder.length()) > (org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.int)) {\n        java.lang.StringBuilder.delete(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.int, java.lang.StringBuilder.length());\n    } \n    java.lang.String = null;\n} "},"status":-2},{"failures":[],"tindex":"75b13951-3dc1-11e6-8ed1-13aae8fb3d26","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:113","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[avail]"},"variableMap":{"avail":"keyLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:295","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[keyLen]"},"status":-2},{"failures":[50,46,47],"tindex":"75b16062-3dc1-11e6-8ed1-7333cbfffe83","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:369","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 2, \"MC\")) {\n    result.append('K');\n} else {\n    result.append('X', 'K');\n}"},"status":-1},{"failures":[],"tindex":"75b16063-3dc1-11e6-8ed1-47ba452ef474","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:329","type":"CtLocalVariableImpl","sourcecode":"char char"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:143","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit((b & 15), org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.int))"},"status":-2},{"failures":[],"tindex":"75b16064-3dc1-11e6-8ed1-1385d3edd355","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:207","type":"CtAssignmentImpl","sourcecode":"this.int = encodedBlockSize"},"variableMap":{"encodedBlockSize":"to"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:143","type":"CtAssignmentImpl","sourcecode":"to = text.indexOf(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.char, from)"},"status":-2},{"failures":[175,176,177,178,179,180,181,182,183,184,185,186,187],"tindex":"75b16065-3dc1-11e6-8ed1-573759b3dc1d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:180","type":"CtInvocationImpl","sourcecode":"code.append('X')"},"variableMap":{"code":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:274","type":"CtInvocationImpl","sourcecode":"key.append(str.charAt(0))"},"status":-1},{"failures":[],"tindex":"75b16066-3dc1-11e6-8ed1-d1bf7a6bbe18","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:236","type":"CtLocalVariableImpl","sourcecode":"final int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:185","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"75b16067-3dc1-11e6-8ed1-9d6253449292","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:296","type":"CtAssignmentImpl","sourcecode":"right = (left >>> 1) | (left << 31)"},"variableMap":{"left":"rounds","right":"rounds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:150","type":"CtAssignmentImpl","sourcecode":"rounds = java.lang.Integer.parseInt(m.group(3))"},"status":-2},{"failures":[50,46,47],"tindex":"75b16068-3dc1-11e6-8ed1-4b8f9cd71bc4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:844","type":"CtIfImpl","sourcecode":"if ((charAt(value, (index + 1))) == 'M') {\n    return true;\n} "},"status":-1},{"failures":[188,189,190,191,192,193,194,175,176,177,178,179,195,196,197,198,180,181,182,184,185,186,187,6,7,8,9,10,11,12,13,16,17,18,19,199,20,21,200,22,24,201],"tindex":"75b16069-3dc1-11e6-8ed1-31efbcfd963e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:165","type":"CtReturnImpl","sourcecode":"return firstThree + lastThree"},"variableMap":{"firstThree":"str","lastThree":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:54","type":"CtReturnImpl","sourcecode":"return str.toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale)"},"status":-1},{"failures":[],"tindex":"75b1606a-3dc1-11e6-8ed1-c55d1c2932d4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:135","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Languages.SomeLanguages.this"},"variableMap":{"this":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:134","type":"CtIfImpl","sourcecode":"if (other == (org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet)) {\n    return org.apache.commons.codec.language.bm.Languages.SomeLanguages.this;\n} else if (other == (org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet)) {\n    return other;\n} else {\n    final org.apache.commons.codec.language.bm.Languages.SomeLanguages org.apache.commons.codec.language.bm.Languages.SomeLanguages = ((org.apache.commons.codec.language.bm.Languages.SomeLanguages)(other));\n    final java.util.Set<java.lang.String> java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>(java.util.Set<java.lang.String>);\n    for (java.lang.String java.lang.String : sl.java.util.Set<java.lang.String>) {\n        ls.add(lang);\n    }\n    return org.apache.commons.codec.language.bm.Languages.LanguageSet.from(ls);\n}"},"status":-2},{"failures":[62,202,63,64,203,204,0,1,2,205],"tindex":"75b1606b-3dc1-11e6-8ed1-95d4d3074a15","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:330","type":"CtInvocationImpl","sourcecode":"buffer.write(b)"},"status":-1},{"failures":[206,207,208],"tindex":"75b1606c-3dc1-11e6-8ed1-1159a9f3df7f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:389","type":"CtAssignmentImpl","sourcecode":"code = '6'"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:379","type":"CtAssignmentImpl","sourcecode":"code = '4'"},"status":-1},{"failures":[209],"tindex":"75b1606d-3dc1-11e6-8ed1-03f06dc88180","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:98","type":"CtIfImpl","sourcecode":"if (!(raw instanceof byte[])) {\n    throw new org.apache.commons.codec.EncoderException(\"argument not a byte array\");\n} "},"status":-1},{"failures":[210],"tindex":"75b1606e-3dc1-11e6-8ed1-1768314875ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:284","type":"CtReturnImpl","sourcecode":"return \"ANY_LANGUAGE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:105","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"75b1877f-3dc1-11e6-8ed1-17b37782b8e0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:134","type":"CtIfImpl","sourcecode":"if (!(obj instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to RefinedSoundex encode is not of type java.lang.String\");\n} "},"status":0},{"failures":[],"tindex":"75b18780-3dc1-11e6-8ed1-ebe035d70c26","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:227","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[9]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:215","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[8]"},"status":-2},{"failures":[46,47],"tindex":"75b18781-3dc1-11e6-8ed1-e78ef5010c80","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:396","type":"CtInvocationImpl","sourcecode":"result.append('T')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:370","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-1},{"failures":[],"tindex":"75b18782-3dc1-11e6-8ed1-8183a50d65a1","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:208","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:47","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[202,63,64,211,212,203,65,213,214,215],"tindex":"75b18783-3dc1-11e6-8ed1-67c6755ba3b4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:284","type":"CtReturnImpl","sourcecode":"return \"ANY_LANGUAGE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:487","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.this.decode(str, org.apache.commons.codec.net.QuotedPrintableCodec.this.getCharset())"},"status":-1},{"failures":[216],"tindex":"75b18784-3dc1-11e6-8ed1-735bd6d3cad6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String"},"variableMap":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:105","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(keyBytes.getBytes(org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset))"},"status":-1},{"failures":[217,218,219,220,221],"tindex":"75b18785-3dc1-11e6-8ed1-953c87426820","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:52","type":"CtAssignmentImpl","sourcecode":"txt = txt.toLowerCase(java.util.Locale.java.util.Locale.java.util.Locale)"},"status":-1},{"failures":[],"tindex":"75b18786-3dc1-11e6-8ed1-19abe906903a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:151","type":"CtAssignmentImpl","sourcecode":"rounds = java.lang.Math.max(org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.int, java.lang.Math.min(org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.int, rounds))"},"variableMap":{"org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_MAX":"maxCodeLen","org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_MIN":"maxCodeLen","rounds":"maxCodeLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:261","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.this.int = maxCodeLen"},"status":-2},{"failures":[],"tindex":"75b18787-3dc1-11e6-8ed1-a73f490a0de3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:335","type":"CtIfImpl","sourcecode":"if (obj == null) {\n    return null;\n} else if (obj instanceof byte[]) {\n    return decode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be URL decoded\"));\n}"},"variableMap":{"obj":"ascii","this":"ascii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:125","type":"CtIfImpl","sourcecode":"if (ascii instanceof java.lang.String) {\n    return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((java.lang.String)(ascii)).toCharArray());\n} "},"status":-2},{"failures":[193,194,176,177,178,179,195,197,180,181,182,184,185,186,187,222],"tindex":"75b18788-3dc1-11e6-8ed1-cf401ed61cbb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:618","type":"CtAssignmentImpl","sourcecode":"str = str.substring(0, ((str.length()) - 1))"},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:265","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(str).replaceFirst(\"SSS\")"},"status":-1},{"failures":[],"tindex":"75b18789-3dc1-11e6-8ed1-a1da610425de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:106","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(10)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.B64:73","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-2},{"failures":[],"tindex":"75b1878a-3dc1-11e6-8ed1-8bb90c60061c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:235","type":"CtAssignmentImpl","sourcecode":"ii = keyLen"},"variableMap":{"ii":"b","keyLen":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:383","type":"CtOperatorAssignmentImpl","sourcecode":"b += 256"},"status":0},{"failures":[],"tindex":"75b1878b-3dc1-11e6-8ed1-1f02329fa058","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:758","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:208","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"status":-2},{"failures":[212,65,66,67,68],"tindex":"75b1878c-3dc1-11e6-8ed1-6b7c11fc68b2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:317","type":"CtForImpl","sourcecode":"for (int int = (bytes.int) - 2 ; i < (bytes.int) ; i++) {\n    b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n    encode = (!(printable.get(b))) || ((i > ((bytes.int) - 2)) && (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b)));\n    org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer);\n}"},"status":-1},{"failures":[],"tindex":"75b1ae9d-3dc1-11e6-8ed1-09d310ee8387","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:286","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(lineSeparator, 0, org.apache.commons.codec.binary.Base64.this.byte[], 0, lineSeparator.int)"},"variableMap":{"length":"length","lineSeparator":"lineSeparator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:374","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int)"},"status":-2},{"failures":[3,4],"tindex":"75b1ae9e-3dc1-11e6-8ed1-2ba9f2e91a3e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:308","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(left, right, 16, 65535, results)"},"variableMap":{"left":"d","right":"d","results":"results"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:343","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(d, c, 4, 252645135, results)"},"status":-1},{"failures":[],"tindex":"75b1ae9f-3dc1-11e6-8ed1-f751722d4032","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:389","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((context.int) >> 6) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))]"},"variableMap":{"encodeTable":"buffer","ibitWorkArea":"pos","pos":"pos","context":"context","org.apache.commons.codec.binary.Base64.MASK_6BITS":"pos","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:354","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}