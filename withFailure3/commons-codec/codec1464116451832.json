{"failureDictionary":{"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":57,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":60,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":50,"org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad":0,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":3,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":31,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":28,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":20,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":56,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":46,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":25,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects":7,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":24,"org.apache.commons.codec.binary.Base64Test.testBase64":54,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":65,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":21,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":64,"org.apache.commons.codec.binary.Base64Test.testTriplets":37,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":10,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":23,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":17,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":27,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":15,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":32,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":33,"org.apache.commons.codec.binary.Base64Test.testUUID":39,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":49,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":68,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":8,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":11,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":69,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":53,"org.apache.commons.codec.binary.Base64Test.testConstructors":1,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":48,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":6,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":55,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":58,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":9,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":18,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":42,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":43,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":47,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":62,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":44,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":45,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":61,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":4,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":66,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding":5,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":51,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":13,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":34,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":26,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":36,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":29,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":67,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":22,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":30,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":59,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":38,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":41,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":52,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3":12,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":63,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":2,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":35,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":19,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":14,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":40,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":16},"transformations":[{"failures":[],"tindex":"d5ba3fbc-21e1-11e6-93c9-49d1c9995b89","series":0,"name":"replace","transplant":{"toString":"lastReplacement = null","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:84","type":"CtAssignmentImpl","sourcecode":"java.lang.String = null"},"variableMap":{"lastReplacement":"str"},"type":"adrStmt","transplantationPoint":{"toString":"str = org.apache.commons.codec.language.SoundexUtils.clean(str)","position":"org.apache.commons.codec.language.Nysiis:253","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.SoundexUtils.clean(str)"},"status":-3},{"failures":[],"tindex":"d5bb030d-21e1-11e6-93c9-91d124272641","series":0,"name":"add","transplant":{"toString":"return org.apache.commons.codec.language.Caverphone.this.caverphone(((java.lang.String)(obj)))","position":"org.apache.commons.codec.language.Caverphone:77","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone.this.caverphone(((java.lang.String)(obj)))"},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"toString":"return decode(((java.lang.String)(value)))","position":"org.apache.commons.codec.net.BCodec:225","type":"CtReturnImpl","sourcecode":"return decode(((java.lang.String)(value)))"},"status":-2},{"failures":[],"tindex":"d5bb2a1e-21e1-11e6-93c9-955d3b5fd577","series":0,"name":"replace","transplant":{"toString":"this.unencodedBlockSize = unencodedBlockSize","position":"org.apache.commons.codec.binary.BaseNCodec:206","type":"CtAssignmentImpl","sourcecode":"this.int = unencodedBlockSize"},"variableMap":{"unencodedBlockSize":"pos"},"type":"adrStmt","transplantationPoint":{"toString":"context.pos = 0","position":"org.apache.commons.codec.binary.BaseNCodec:251","type":"CtAssignmentImpl","sourcecode":"context.int = 0"},"status":-2},{"failures":[],"tindex":"d5bb2a1f-21e1-11e6-93c9-fb4645ce5ee9","series":0,"name":"replace","transplant":{"toString":"lastChar = chr","position":"org.apache.commons.codec.language.ColognePhonetic:398","type":"CtAssignmentImpl","sourcecode":"lastChar = chr"},"variableMap":{"lastChar":"code","chr":"code"},"type":"adrStmt","transplantationPoint":{"toString":"code = '1'","position":"org.apache.commons.codec.language.ColognePhonetic:355","type":"CtAssignmentImpl","sourcecode":"code = '1'"},"status":-2},{"failures":[],"tindex":"d5bb2a20-21e1-11e6-93c9-633aa2abe9ce","series":0,"name":"replace","transplant":{"toString":"if (b < 0) {\n    b += 256;\n} ","position":"org.apache.commons.codec.binary.Base32:504","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b += 256;\n} "},"variableMap":{"b":"org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK"},"type":"adrStmt","transplantationPoint":{"toString":"if (lineLength > 0) {\n    this.encodeSize = (org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK) + (lineSeparator.length);\n    this.lineSeparator = new byte[lineSeparator.length];\n    java.lang.System.arraycopy(lineSeparator, 0, org.apache.commons.codec.binary.Base64.this.lineSeparator, 0, lineSeparator.length);\n} else {\n    this.encodeSize = org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK;\n    this.lineSeparator = null;\n}","position":"org.apache.commons.codec.binary.Base64:283","type":"CtIfImpl","sourcecode":"if (lineLength > 0) {\n    this.int = (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int) + (lineSeparator.int);\n    this.byte[] = new byte[lineSeparator.int];\n    java.lang.System.arraycopy(lineSeparator, 0, org.apache.commons.codec.binary.Base64.this.byte[], 0, lineSeparator.int);\n} else {\n    this.int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int;\n    this.byte[] = null;\n}"},"status":-2},{"failures":[],"tindex":"d5bb2a21-21e1-11e6-93c9-ef3dddbcc43c","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.binary.StringUtils.newString(bytes, org.apache.commons.codec.Charsets.UTF_8)","position":"org.apache.commons.codec.binary.StringUtils:383","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newString(bytes, org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"variableMap":{"bytes":"bytes","org.apache.commons.codec.Charsets.UTF_8":"org.apache.commons.codec.Charsets.UTF_16"},"type":"adrStmt","transplantationPoint":{"toString":"return new java.lang.String(bytes , org.apache.commons.codec.Charsets.UTF_16)","position":"org.apache.commons.codec.binary.StringUtils:335","type":"CtReturnImpl","sourcecode":"return new java.lang.String(bytes , org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":0},{"failures":[],"tindex":"d5bb5132-21e1-11e6-93c9-29f3b3a95bcb","series":0,"name":"add","transplant":{"toString":"boolean roundsCustom = false","position":"org.apache.commons.codec.digest.Sha2Crypt:140","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final boolean accept = parts[2].equals(\"true\")","position":"org.apache.commons.codec.language.bm.Lang:175","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = parts[2].equals(\"true\")"},"status":-2},{"failures":[0,1],"tindex":"d5bb5133-21e1-11e6-93c9-77f32872072f","series":0,"name":"replace","transplant":{"toString":"return false","position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return true","position":"org.apache.commons.codec.binary.BaseNCodec:501","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"d5bb5134-21e1-11e6-93c9-f5ebe08d846c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (bytes == null) {\n    return null;\n} ","position":"org.apache.commons.codec.net.QCodec:154","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"d5bb5135-21e1-11e6-93c9-7d3ec15682d4","series":0,"name":"add","transplant":{"toString":"final java.util.Set<java.lang.String> ls = new java.util.HashSet<java.lang.String>()","position":"org.apache.commons.codec.language.bm.Languages:171","type":"CtLocalVariableImpl","sourcecode":"final java.util.Set<java.lang.String> java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final java.util.Set<java.lang.String> langs = new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(in.split(\"[+]\")))","position":"org.apache.commons.codec.language.bm.Rule:373","type":"CtLocalVariableImpl","sourcecode":"final java.util.Set<java.lang.String> java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(in.split(\"[+]\")))"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11],"tindex":"d5bb5136-21e1-11e6-93c9-adf7b1f22c22","series":0,"name":"replace","transplant":{"toString":"if (b == ' ') {\n    b = '+';\n} ","position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"b"},"type":"adrStmt","transplantationPoint":{"toString":"if (b < 0) {\n    b = 256 + b;\n} ","position":"org.apache.commons.codec.net.QuotedPrintableCodec:326","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"status":-1},{"failures":[12,13,14,15],"tindex":"d5bb7847-21e1-11e6-93c9-d1669240e368","series":0,"name":"replace","transplant":{"toString":"len--","position":"org.apache.commons.codec.binary.Base64:764","type":"CtUnaryOperatorImpl","sourcecode":"len--"},"variableMap":{"len":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index += 2","position":"org.apache.commons.codec.language.DoubleMetaphone:476","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[],"tindex":"d5bb7848-21e1-11e6-93c9-e306e9fe5b85","series":0,"name":"replace","transplant":{"toString":"java.lang.String saltString","position":"org.apache.commons.codec.digest.Md5Crypt:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.String pattern = rule.getPattern()","position":"org.apache.commons.codec.language.bm.PhoneticEngine:212","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = rule.getPattern()"},"status":-2},{"failures":[],"tindex":"d5bb7849-21e1-11e6-93c9-7bd34d86a0d0","series":0,"name":"replace","transplant":{"toString":"c &= 268435455","position":"org.apache.commons.codec.digest.UnixCrypt:358","type":"CtOperatorAssignmentImpl","sourcecode":"c &= 268435455"},"variableMap":{"c":"right"},"type":"adrStmt","transplantationPoint":{"toString":"t = right","position":"org.apache.commons.codec.digest.UnixCrypt:295","type":"CtAssignmentImpl","sourcecode":"t = right"},"status":0},{"failures":[],"tindex":"d5bb784a-21e1-11e6-93c9-99b8b5b115ef","series":0,"name":"add","transplant":{"toString":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return input.equals(content);\n    }\n}","position":"org.apache.commons.codec.language.bm.Rule:517","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return input.equals(content);\n    }\n}"},"variableMap":{"input":"input","this":"this","content":"input"},"type":"adrStmt","transplantationPoint":{"toString":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return (input.length()) == 0;\n    }\n}","position":"org.apache.commons.codec.language.bm.Rule:510","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return (input.length()) == 0;\n    }\n}"},"status":-2},{"failures":[],"tindex":"d5bb9f5b-21e1-11e6-93c9-c7f2ab776917","series":0,"name":"add","transplant":{"toString":"final int sumLength = java.lang.Math.abs(((name1.length()) + (name2.length())))","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:250","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Math.abs(((name1.length()) + (name2.length())))"},"variableMap":{"name2":"value","name1":"value"},"type":"adrStmt","transplantationPoint":{"toString":"int index = isSilentStart(value) ? 1 : 0","position":"org.apache.commons.codec.language.DoubleMetaphone:93","type":"CtLocalVariableImpl","sourcecode":"int int = isSilentStart(value) ? 1 : 0"},"status":-2},{"failures":[],"tindex":"d5bb9f5c-21e1-11e6-93c9-4b8719e54f62","series":0,"name":"add","transplant":{"toString":"final char[] out = new char[]{ '0' , '0' , '0' , '0' }","position":"org.apache.commons.codec.language.Soundex:266","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[]{ '0' , '0' , '0' , '0' }"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final char[] l_ascii = new char[(raw.length) << 3]","position":"org.apache.commons.codec.binary.BinaryCodec:273","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[(raw.int) << 3]"},"status":-2},{"failures":[],"tindex":"d5bb9f5d-21e1-11e6-93c9-61f052458dde","series":0,"name":"replace","transplant":{"toString":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String sep = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain Base32 characters: [\" + sep) + \"]\"));\n} ","position":"org.apache.commons.codec.binary.Base32:295","type":"CtIfImpl","sourcecode":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain Base32 characters: [\" + sep) + \"]\"));\n} "},"variableMap":{"lineSeparator":"bytes"},"type":"adrStmt","transplantationPoint":{"toString":"for (final byte b : bytes) {\n    if (b == (org.apache.commons.codec.net.QCodec.UNDERSCORE)) {\n        hasUnderscores = true;\n        break;\n    } \n}","position":"org.apache.commons.codec.net.QCodec:174","type":"CtForEachImpl","sourcecode":"for (final byte byte : bytes) {\n    if (b == (org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte)) {\n        hasUnderscores = true;\n        break;\n    } \n}"},"status":-2},{"failures":[16,17],"tindex":"d5bb9f5e-21e1-11e6-93c9-732780476360","series":0,"name":"replace","transplant":{"toString":"final int startDst = (bitlen / 8) - len","position":"org.apache.commons.codec.binary.Base64:766","type":"CtLocalVariableImpl","sourcecode":"final int int = (bitlen / 8) - len"},"variableMap":{"bitlen":"a","len":"a"},"type":"adrStmt","transplantationPoint":{"toString":"final int t = ((a << (16 - n)) ^ a) & m","position":"org.apache.commons.codec.digest.UnixCrypt:393","type":"CtLocalVariableImpl","sourcecode":"final int int = ((a << (16 - n)) ^ a) & m"},"status":-1},{"failures":[18,19,20,21,22,23,24,25,26,27],"tindex":"d5bb9f5f-21e1-11e6-93c9-9b28ccb401e7","series":0,"name":"replace","transplant":{"toString":"if ((cs1 == null) || (cs2 == null)) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.StringUtils:74","type":"CtIfImpl","sourcecode":"if ((cs1 == null) || (cs2 == null)) {\n    return false;\n} "},"variableMap":{"cs1":"prefix","cs2":"input"},"type":"adrStmt","transplantationPoint":{"toString":"if ((prefix.length()) > (input.length())) {\n    return false;\n} ","position":"org.apache.commons.codec.language.bm.Rule:601","type":"CtIfImpl","sourcecode":"if ((prefix.length()) > (input.length())) {\n    return false;\n} "},"status":-1},{"failures":[13,14,15],"tindex":"d5bbc670-21e1-11e6-93c9-07256c4ec7f8","series":0,"name":"replace","transplant":{"toString":"result.append(\"X\", \"SK\")","position":"org.apache.commons.codec.language.DoubleMetaphone:654","type":"CtInvocationImpl","sourcecode":"result.append(\"X\", \"SK\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append('J', 'K')","position":"org.apache.commons.codec.language.DoubleMetaphone:450","type":"CtInvocationImpl","sourcecode":"result.append('J', 'K')"},"status":-1},{"failures":[],"tindex":"d5bbc671-21e1-11e6-93c9-6bd56e50dabf","series":0,"name":"replace","transplant":{"toString":"name2 = removeVowels(name2)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:232","type":"CtAssignmentImpl","sourcecode":"name2 = removeVowels(name2)"},"variableMap":{"name2":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"y\", \"2\")","position":"org.apache.commons.codec.language.Caverphone1:114","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"y\", \"2\")"},"status":-2},{"failures":[28,29,30],"tindex":"d5bbc672-21e1-11e6-93c9-7f10f0965e80","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[3], altResult[24], altResult[45], 4, buffer)","position":"org.apache.commons.codec.digest.Sha2Crypt:472","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[3], altResult[24], altResult[45], 4, buffer)"},"status":-1},{"failures":[],"tindex":"d5bbc673-21e1-11e6-93c9-93869de2462f","series":0,"name":"add","transplant":{"toString":"if (salt == null) {\n    throw new java.lang.IllegalArgumentException(\"Salt must not be null\");\n} ","position":"org.apache.commons.codec.digest.Sha2Crypt:141","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    throw new java.lang.IllegalArgumentException(\"Salt must not be null\");\n} "},"variableMap":{"salt":"replacedName"},"type":"adrStmt","transplantationPoint":{"toString":"for (final java.lang.String dc : org.apache.commons.codec.language.MatchRatingApproachEncoder.DOUBLE_CONSONANT) {\n    if (replacedName.contains(dc)) {\n        final java.lang.String singleLetter = dc.substring(0, 1);\n        replacedName = replacedName.replace(dc, singleLetter);\n    } \n}","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:386","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String[]) {\n    if (replacedName.contains(dc)) {\n        final java.lang.String java.lang.String = dc.substring(0, 1);\n        replacedName = replacedName.replace(dc, singleLetter);\n    } \n}"},"status":0},{"failures":[31],"tindex":"d5bbc674-21e1-11e6-93c9-f7df4099364b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"builder.delete(org.apache.commons.codec.language.DaitchMokotoffSoundex.MAX_LENGTH, builder.length())","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:142","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.delete(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.int, java.lang.StringBuilder.length())"},"status":-1},{"failures":[],"tindex":"d5bbc675-21e1-11e6-93c9-eb8342be1c10","series":0,"name":"replace","transplant":{"toString":"return \"B\"","position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return \"\"","position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"status":0},{"failures":[],"tindex":"d5bbed86-21e1-11e6-93c9-25f5785481a6","series":0,"name":"replace","transplant":{"toString":"return new java.lang.String(decode(org.apache.commons.codec.binary.StringUtils.getBytesUsAscii(str)) , charset)","position":"org.apache.commons.codec.net.QuotedPrintableCodec:471","type":"CtReturnImpl","sourcecode":"return new java.lang.String(decode(org.apache.commons.codec.binary.StringUtils.getBytesUsAscii(str)) , charset)"},"variableMap":{"str":"org.apache.commons.codec.language.Caverphone2.TEN_1","charset":"org.apache.commons.codec.language.Caverphone2.TEN_1"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Caverphone2.TEN_1","position":"org.apache.commons.codec.language.Caverphone2:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String"},"status":-2},{"failures":[],"tindex":"d5bbed87-21e1-11e6-93c9-5bbad6a32a59","series":0,"name":"replace","transplant":{"toString":"if (charset.equals(\"\")) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:139","type":"CtIfImpl","sourcecode":"if (charset.equals(\"\")) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\");\n} "},"variableMap":{"charset":"rightCharacter"},"type":"adrStmt","transplantationPoint":{"toString":"if (((leftCharacter.length()) != 1) || ((rightCharacter.length()) != 1)) {\n    throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + rawLine) + \" in \") + location));\n} ","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:293","type":"CtIfImpl","sourcecode":"if (((leftCharacter.length()) != 1) || ((rightCharacter.length()) != 1)) {\n    throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + rawLine) + \" in \") + location));\n} "},"status":-2},{"failures":[18,20,21,22,32,26,27,33],"tindex":"d5bbed88-21e1-11e6-93c9-2d0ec9cd71ed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"ph.append(str)","position":"org.apache.commons.codec.language.bm.PhoneticEngine:93","type":"CtInvocationImpl","sourcecode":"ph.append(str)"},"status":-1},{"failures":[],"tindex":"d5bbed89-21e1-11e6-93c9-a53a2677bd54","series":0,"name":"add","transplant":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.EMPTY_CHAR_ARRAY","position":"org.apache.commons.codec.binary.BinaryCodec:270","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.char[]"},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_CHAR_ARRAY":"org.apache.commons.codec.language.Nysiis.CHARS_FF"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Nysiis.CHARS_FF","position":"org.apache.commons.codec.language.Nysiis:154","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[]"},"status":-2},{"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68],"tindex":"d5bbed8a-21e1-11e6-93c9-b7cb9d738916","series":0,"name":"replace","transplant":{"toString":"final byte[] sBytes = new byte[saltLen]","position":"org.apache.commons.codec.digest.Sha2Crypt:337","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[saltLen]"},"variableMap":{"saltLen":"encodeSize"},"type":"adrStmt","transplantationPoint":{"toString":"final byte[] buffer = ensureBufferSize(encodeSize, context)","position":"org.apache.commons.codec.binary.Base64:379","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = ensureBufferSize(int, context)"},"status":-1},{"failures":[],"tindex":"d5bbed8b-21e1-11e6-93c9-f333b2177fbd","series":0,"name":"replace","transplant":{"toString":"final byte[] key = new byte[8]","position":"org.apache.commons.codec.digest.UnixCrypt:215","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[8]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"byte[] tempResult = altCtx.digest()","position":"org.apache.commons.codec.digest.Sha2Crypt:283","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = altCtx.digest()"},"status":-2},{"failures":[28,29,30],"tindex":"d5bbed8c-21e1-11e6-93c9-67b7cc464d9d","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[15], altResult[36], altResult[57], 4, buffer)","position":"org.apache.commons.codec.digest.Sha2Crypt:484","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[15], altResult[36], altResult[57], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[34], altResult[55], altResult[13], 4, buffer)","position":"org.apache.commons.codec.digest.Sha2Crypt:482","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[34], altResult[55], altResult[13], 4, buffer)"},"status":-1},{"failures":[],"tindex":"d5bc149d-21e1-11e6-93c9-87f64764828e","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set(':')","position":"org.apache.commons.codec.net.QCodec:84","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(':')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set('}')","position":"org.apache.commons.codec.net.QCodec:102","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('}')"},"status":0},{"failures":[],"tindex":"d5bc149e-21e1-11e6-93c9-75618a827f41","series":0,"name":"replace","transplant":{"toString":"if (value == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.DoubleMetaphone:88","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} "},"variableMap":{"value":"str"},"type":"adrStmt","transplantationPoint":{"toString":"if (str == null) {\n    return null;\n} ","position":"org.apache.commons.codec.net.URLCodec:289","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-3},{"failures":[],"tindex":"d5bc149f-21e1-11e6-93c9-cf95055f5032","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"try {\n    return org.apache.commons.codec.digest.HmacUtils.getHmacSha512(key).doFinal(valueToDigest);\n} catch (final java.lang.IllegalStateException e) {\n    throw new java.lang.IllegalArgumentException(e);\n}","position":"org.apache.commons.codec.digest.HmacUtils:634","type":"CtTryImpl","sourcecode":"try {\n    return org.apache.commons.codec.digest.HmacUtils.getHmacSha512(key).doFinal(valueToDigest);\n} catch (final java.lang.IllegalStateException e) {\n    throw new java.lang.IllegalArgumentException(e);\n}"},"status":-2},{"failures":[],"tindex":"d5bc62c0-21e1-11e6-93c9-43110815d029","series":0,"name":"replace","transplant":{"toString":"return null","position":"org.apache.commons.codec.binary.StringUtils:281","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return (\"Languages(\" + (languages.toString())) + \")\"","position":"org.apache.commons.codec.language.bm.Languages:150","type":"CtReturnImpl","sourcecode":"return (\"Languages(\" + (java.util.Set<java.lang.String>.toString())) + \")\""},"status":0},{"failures":[],"tindex":"d5bc62c1-21e1-11e6-93c9-6db65717223b","series":0,"name":"add","transplant":{"toString":"data = doDecoding(data)","position":"org.apache.commons.codec.net.RFC1522Codec:154","type":"CtAssignmentImpl","sourcecode":"data = doDecoding(data)"},"variableMap":{"data":"lineSeparator"},"type":"adrStmt","transplantationPoint":{"toString":"this.lineSeparator = new byte[lineSeparator.length]","position":"org.apache.commons.codec.binary.Base32:300","type":"CtAssignmentImpl","sourcecode":"this.byte[] = new byte[lineSeparator.int]"},"status":-2},{"failures":[8,9,10],"tindex":"d5bc89d2-21e1-11e6-93c9-599f272b19b8","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set('>')","position":"org.apache.commons.codec.net.QCodec:87","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('>')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set(i)","position":"org.apache.commons.codec.net.QCodec:98","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(i)"},"status":-1},{"failures":[69],"tindex":"d5bc89d3-21e1-11e6-93c9-d76c61309a05","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHex(byteArray)","position":"org.apache.commons.codec.binary.Hex:299","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHex(byteArray)"},"variableMap":{"byteArray":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","position":"org.apache.commons.codec.binary.BinaryCodec:117","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":40,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}