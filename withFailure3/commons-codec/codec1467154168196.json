{"failureDictionary":{"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter":131,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":65,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize":166,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":10,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":173,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully":24,"org.apache.commons.codec.language.ColognePhoneticTest.testEncodeEmpty":91,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":43,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":155,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary":71,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":14,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":52,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":60,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":84,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":83,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":111,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":112,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":116,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":82,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":113,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":68,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":75,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":114,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":86,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":153,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":22,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":179,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":145,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":129,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant":194,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":21,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":90,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":104,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize":163,"org.apache.commons.codec.binary.Base64Test.testEmptyBase64":127,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt":79,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":42,"org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8":56,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":94,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":4,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":49,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":138,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":186,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":11,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":148,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":167,"org.apache.commons.codec.binary.Base64Test.testIsStringBase64":172,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":135,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":152,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":121,"org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad":139,"org.apache.commons.codec.language.NysiisTest.testDropBy":177,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":88,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":2,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":101,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":180,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":32,"org.apache.commons.codec.binary.Base64Test.testUUID":107,"org.apache.commons.codec.binary.Base64Test.testSingletons":128,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":0,"org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt":81,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":157,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":133,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize":146,"org.apache.commons.codec.binary.Base64Test.testPairs":106,"org.apache.commons.codec.binary.Base64Test.testConstructors":109,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":156,"org.apache.commons.codec.language.NysiisTest.testRule7":176,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":16,"org.apache.commons.codec.language.NysiisTest.testRule6":175,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":1,"org.apache.commons.codec.language.NysiisTest.testRule5":174,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":183,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":150,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize":169,"org.apache.commons.codec.net.URLCodecTest.testEncodeObjects":76,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":85,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":35,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":124,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":7,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":125,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":182,"org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals":87,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant":187,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":64,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":63,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant":190,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize":165,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":26,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean":191,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":41,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter":117,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":57,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":110,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":40,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":144,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":20,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch":192,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize":162,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":12,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":97,"org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage":161,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":44,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":96,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":181,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":151,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":58,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":142,"org.apache.commons.codec.binary.Base64Test.testTriplets":103,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":102,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":23,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":29,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":27,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":30,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":3,"org.apache.commons.codec.binary.Base64Test.testIsUrlSafe":126,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray":67,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":140,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":118,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved":189,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":54,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes":66,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":105,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved":188,"org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX":184,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":31,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":13,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":19,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":89,"org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64":171,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":122,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":77,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":143,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":47,"org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds":160,"org.apache.commons.codec.binary.Base64Test.testNonBase64Test":134,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":28,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":95,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":36,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":45,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":99,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":55,"org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA":185,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":37,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":164,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":159,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":74,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":33,"org.apache.commons.codec.language.ColognePhoneticTest.testLocaleIndependence":92,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt":80,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":39,"org.apache.commons.codec.binary.Base64Test.testDecodePadOnly":132,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize":147,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":53,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan":70,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":98,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":115,"org.apache.commons.codec.binary.Base64Test.testBase64":51,"org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt":78,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":9,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved":193,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":100,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":119,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":62,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":38,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":15,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":61,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":136,"org.apache.commons.codec.binary.Base64Test.testCodec112":123,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":25,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":69,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":170,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":48,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":154,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":149,"org.apache.commons.codec.binary.Base64Test.testCodec68":130,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":34,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":178,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":141,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":137,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":5,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":18,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":93,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":59,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":46,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":158,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":50,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary":72,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":73,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize":168,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":17,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":6,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":8,"org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked":120,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":108},"transformations":[{"failures":[],"tindex":"91c68ce9-3d82-11e6-acb1-bfbc6c25d09b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:517","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return input.equals(content);\n    }\n}"},"variableMap":{"input":"input","content":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:561","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return ((input.length()) == 1) && ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch);\n    }\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7],"tindex":"91c68cea-3d82-11e6-acb1-b7fb02a5dfda","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:427","type":"CtInvocationImpl","sourcecode":"buffer.append(\"$\")"},"variableMap":{"buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:79","type":"CtInvocationImpl","sourcecode":"buffer.append(org.apache.commons.codec.binary.StringUtils.newStringUsAscii(rawData))"},"status":-1},{"failures":[8,9],"tindex":"91c68ceb-3d82-11e6-acb1-f19cd899afb7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:809","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"91c6b3fc-3d82-11e6-acb1-396171ffe453","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:191","type":"CtInvocationImpl","sourcecode":"ls.add(line)"},"variableMap":{"line":"lang","ls":"ls"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:142","type":"CtInvocationImpl","sourcecode":"ls.add(lang)"},"status":-2},{"failures":[],"tindex":"91c6b3fd-3d82-11e6-acb1-b11a0bccc8e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:181","type":"CtIfImpl","sourcecode":"if (atStart) {\n    return java.lang.String[];\n} "},"variableMap":{"atStart":"nextCharIsVowel","replacementAtStart":"replacementBeforeVowel"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:187","type":"CtIfImpl","sourcecode":"if (nextCharIsVowel) {\n    return java.lang.String[];\n} "},"status":0},{"failures":[],"tindex":"91c6b3fe-3d82-11e6-acb1-75c84704cc93","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.B64:73","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:105","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(40)"},"status":-2},{"failures":[0,2,10,4,11,12,13,14,15,16,17,18],"tindex":"91c6b3ff-3d82-11e6-acb1-2f304a25354d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.B64:59","type":"CtLocalVariableImpl","sourcecode":"int int = outLen"},"variableMap":{"outLen":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:365","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.net.Utils.digit16(bytes[i])"},"status":-1},{"failures":[],"tindex":"91c6b400-3d82-11e6-acb1-3954508c9286","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:83","type":"CtAssignmentImpl","sourcecode":"java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-2},{"failures":[],"tindex":"91c6b401-3d82-11e6-acb1-b71093f1dec2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:247","type":"CtWhileImpl","sourcecode":"while (cnt > 0) {\n    if ((cnt & 1) != 0) {\n        ctx.update(altResult, 0, blocksize);\n    } else {\n        ctx.update(keyBytes);\n    }\n    cnt >>= 1;\n}"},"variableMap":{"blocksize":"keyLen","altResult":"pBytes","keyBytes":"pBytes","ctx":"ctx","cnt":"keyLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:387","type":"CtInvocationImpl","sourcecode":"ctx.update(pBytes, 0, keyLen)"},"status":-2},{"failures":[19],"tindex":"91c6b402-3d82-11e6-acb1-ad0d79cbe7de","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:78","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"c\", \"k\")"},"status":-1},{"failures":[],"tindex":"91c6b403-3d82-11e6-acb1-29ed751b18e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:297","type":"CtInvocationImpl","sourcecode":"key.deleteCharAt(((key.length()) - 1))"},"variableMap":{"key":"local"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:113","type":"CtInvocationImpl","sourcecode":"local.append(inwd, 1, ((inwd.int) - 1))"},"status":-2},{"failures":[],"tindex":"91c6b404-3d82-11e6-acb1-1db0cd37c0f7","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:467","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(((byte)(0)), altResult[31], altResult[30], 3, buffer)"},"variableMap":{"altResult":"obj","buffer":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:150","type":"CtIfImpl","sourcecode":"if (!(obj instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Soundex encode is not of type java.lang.String\");\n} "},"status":-2},{"failures":[],"tindex":"91c6db15-3d82-11e6-acb1-d965fd4f8186","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:292","type":"CtIfImpl","sourcecode":"if ((key.length()) > 1) {\n    char char = key.charAt(((key.length()) - 1));\n    if (lastChar == 'S') {\n        key.deleteCharAt(((key.length()) - 1));\n        lastChar = key.charAt(((key.length()) - 1));\n    } \n    if ((key.length()) > 2) {\n        final char char = key.charAt(((key.length()) - 2));\n        if ((last2Char == 'A') && (lastChar == 'Y')) {\n            key.deleteCharAt(((key.length()) - 2));\n        } \n    } \n    if (lastChar == 'A') {\n        key.deleteCharAt(((key.length()) - 1));\n    } \n} "},"variableMap":{"key":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:465","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[18], altResult[28], altResult[8], 4, buffer)"},"status":-2},{"failures":[20,21,22,23],"tindex":"91c6db16-3d82-11e6-acb1-252678e86ec5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:211","type":"CtInvocationImpl","sourcecode":"buffer.setCharAt(0, charZero)"},"status":-1},{"failures":[8,9],"tindex":"91c6db17-3d82-11e6-acb1-8da85fbdf473","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:718","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-1},{"failures":[],"tindex":"91c6db18-3d82-11e6-acb1-35351e91ccc4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:294","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(context.byte[], context.int, b, bPos, len)"},"variableMap":{"b":"b","len":"offset","context":"context","buffer":"b","readPos":"length","bPos":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:85","type":"CtIfImpl","sourcecode":"if (b == null) {\n    throw new java.lang.NullPointerException();\n} else if ((offset < 0) || (len < 0)) {\n    throw new java.lang.IndexOutOfBoundsException();\n} else if ((offset > (b.int)) || ((offset + len) > (b.int))) {\n    throw new java.lang.IndexOutOfBoundsException();\n} else if (len > 0) {\n    if (boolean) {\n        org.apache.commons.codec.binary.BaseNCodec.encode(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context);\n    } else {\n        org.apache.commons.codec.binary.BaseNCodec.decode(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context);\n    }\n    flush(false);\n} "},"status":-2},{"failures":[24],"tindex":"91c6db19-3d82-11e6-acb1-cbc4674f8b09","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:221","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"91c6db1a-3d82-11e6-acb1-9198fd4f647d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:193","type":"CtAssignmentImpl","sourcecode":"this.boolean = strict"},"variableMap":{"strict":"eof"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:343","type":"CtAssignmentImpl","sourcecode":"context.boolean = true"},"status":-2},{"failures":[],"tindex":"91c6db1b-3d82-11e6-acb1-95614a9e5b02","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"flush(true)"},"status":-2},{"failures":[],"tindex":"91c6db1c-3d82-11e6-acb1-fb116c9c672a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:389","type":"CtAssignmentImpl","sourcecode":"replacedName = replacedName.replace(dc, singleLetter)"},"variableMap":{"singleLetter":"txt","replacedName":"txt","dc":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:91","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"g\", \"k\")"},"status":-2},{"failures":[],"tindex":"91c7022d-3d82-11e6-acb1-ade2c656fd73","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:389","type":"CtAssignmentImpl","sourcecode":"code = '6'"},"variableMap":{"code":"chr"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:235","type":"CtAssignmentImpl","sourcecode":"char[][int] = chr"},"status":-2},{"failures":[25,26,27,28,29,30],"tindex":"91c7022e-3d82-11e6-acb1-6941cee33549","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:532","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.startsWith(input, content)"},"variableMap":{"input":"input","content":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:718","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.this.org.apache.commons.codec.language.bm.Rule.RPattern.isMatch(input.subSequence(0, i))"},"status":-1},{"failures":[0,1,2,10,4],"tindex":"91c7022f-3d82-11e6-acb1-478927cb14da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:268","type":"CtTryImpl","sourcecode":"try {\n    return decodeText(str);\n} catch (final java.io.UnsupportedEncodingException e) {\n    throw new org.apache.commons.codec.DecoderException(e.getMessage() , e);\n}"},"status":-1},{"failures":[31,32,33,34,35,36,37],"tindex":"91c70230-3d82-11e6-acb1-8b163313d691","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:298","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(tempResult, 0, pBytes, cp, blocksize)"},"variableMap":{"blocksize":"ii","tempResult":"finalb","pBytes":"finalb","cp":"ii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:222","type":"CtWhileImpl","sourcecode":"while (ii > 0) {\n    ctx.update(finalb, 0, (ii > 16 ? 16 : ii));\n    ii -= 16;\n}"},"status":-1},{"failures":[38],"tindex":"91c70231-3d82-11e6-acb1-4baad94ac338","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:389","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.digest(org.apache.commons.codec.digest.DigestUtils.getSha1Digest(), data)"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:564","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.digest(org.apache.commons.codec.digest.DigestUtils.getSha384Digest(), data)"},"status":-1},{"failures":[],"tindex":"91c70232-3d82-11e6-acb1-a34c5ff05c54","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:346","type":"CtAssignmentImpl","sourcecode":"c = org.apache.commons.codec.digest.UnixCrypt.hPermOp(c, (-2), -859045888)"},"variableMap":{"c":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:574","type":"CtAssignmentImpl","sourcecode":"index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"P\", \"B\") ? index + 2 : index + 1"},"status":-2},{"failures":[39,40,41,42,43,44,45,46],"tindex":"91c70233-3d82-11e6-acb1-2f266d5d946f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:797","type":"CtInvocationImpl","sourcecode":"digest.update(buffer, 0, read)"},"variableMap":{"read":"blocksize","digest":"ctx","buffer":"altResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:371","type":"CtInvocationImpl","sourcecode":"ctx.update(altResult, 0, blocksize)"},"status":-1},{"failures":[],"tindex":"91c72944-3d82-11e6-acb1-ef3fb1d182dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:236","type":"CtLocalVariableImpl","sourcecode":"final int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:230","type":"CtLocalVariableImpl","sourcecode":"final int int = ch - 'A'"},"status":-2},{"failures":[],"tindex":"91c72945-3d82-11e6-acb1-4de8a86b4ac2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:171","type":"CtLocalVariableImpl","sourcecode":"final java.util.Set<java.lang.String> java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:373","type":"CtLocalVariableImpl","sourcecode":"final java.util.Set<java.lang.String> java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(in.split(\"[+]\")))"},"status":-2},{"failures":[20,23],"tindex":"91c72946-3d82-11e6-acb1-79109158d6cd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:235","type":"CtAssignmentImpl","sourcecode":"ii = keyLen"},"variableMap":{"ii":"u","keyLen":"u"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:242","type":"CtOperatorAssignmentImpl","sourcecode":"u >>>= 1"},"status":-1},{"failures":[],"tindex":"91c72947-3d82-11e6-acb1-7750d7ff8121","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:215","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[8]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:767","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[bitlen / 8]"},"status":-2},{"failures":[8,9,47],"tindex":"91c72948-3d82-11e6-acb1-a56fd3f0cf69","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:677","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"TION\")) {\n    result.append('X');\n    index += 3;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, \"TIA\", \"TCH\")) {\n    result.append('X');\n    index += 3;\n} else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"TH\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, \"TTH\"))) {\n    if (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, \"OM\", \"AM\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, \"VAN \", \"VON \"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) {\n        result.append('T');\n    } else {\n        result.append('0', 'T');\n    }\n    index += 2;\n} else {\n    result.append('T');\n    index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"T\", \"D\") ? index + 2 : index + 1;\n}"},"variableMap":{"result":"result","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:467","type":"CtIfImpl","sourcecode":"if ((index > 0) && (!(isVowel(charAt(value, (index - 1)))))) {\n    result.append('K');\n    index += 2;\n} else if (index == 0) {\n    if ((charAt(value, (index + 2))) == 'I') {\n        result.append('J');\n    } else {\n        result.append('K');\n    }\n    index += 2;\n} else if ((((index > 1) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 1, \"B\", \"H\", \"D\"))) || ((index > 2) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, \"B\", \"H\", \"D\")))) || ((index > 3) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 4), 1, \"B\", \"H\")))) {\n    index += 2;\n} else {\n    if (((index > 2) && ((charAt(value, (index - 1))) == 'U')) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, \"C\", \"G\", \"L\", \"R\", \"T\"))) {\n        result.append('F');\n    } else if ((index > 0) && ((charAt(value, (index - 1))) != 'I')) {\n        result.append('K');\n    } \n    index += 2;\n}"},"status":-1},{"failures":[],"tindex":"91c72949-3d82-11e6-acb1-eb521408c27f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:189","type":"CtAssignmentImpl","sourcecode":"inExtendedComment = true"},"variableMap":{"inExtendedComment":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:923","type":"CtAssignmentImpl","sourcecode":"result = true"},"status":-2},{"failures":[],"tindex":"91c7294a-3d82-11e6-acb1-d90afc9d076b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:184","type":"CtIfImpl","sourcecode":"if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n    inExtendedComment = false;\n} "},"variableMap":{"inExtendedComment":"slavoGermanic","org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_END":"value","line":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:97","type":"CtWhileImpl","sourcecode":"while ((!(result.isComplete())) && (index <= ((value.length()) - 1))) {\n    switch (value.charAt(index)) {\n        case 'A' :\n        case 'E' :\n        case 'I' :\n        case 'O' :\n        case 'U' :\n        case 'Y' :\n            index = handleAEIOUY(result, index);\n            break;\n        case 'B' :\n            result.append('P');\n            index = (charAt(value, (index + 1))) == 'B' ? index + 2 : index + 1;\n            break;\n        case '\\u00c7' :\n            result.append('S');\n            index++;\n            break;\n        case 'C' :\n            index = handleC(value, result, index);\n            break;\n        case 'D' :\n            index = handleD(value, result, index);\n            break;\n        case 'F' :\n            result.append('F');\n            index = (charAt(value, (index + 1))) == 'F' ? index + 2 : index + 1;\n            break;\n        case 'G' :\n            index = handleG(value, result, index, slavoGermanic);\n            break;\n        case 'H' :\n            index = handleH(value, result, index);\n            break;\n        case 'J' :\n            index = handleJ(value, result, index, slavoGermanic);\n            break;\n        case 'K' :\n            result.append('K');\n            index = (charAt(value, (index + 1))) == 'K' ? index + 2 : index + 1;\n            break;\n        case 'L' :\n            index = handleL(value, result, index);\n            break;\n        case 'M' :\n            result.append('M');\n            index = conditionM0(value, index) ? index + 2 : index + 1;\n            break;\n        case 'N' :\n            result.append('N');\n            index = (charAt(value, (index + 1))) == 'N' ? index + 2 : index + 1;\n            break;\n        case '\\u00d1' :\n            result.append('N');\n            index++;\n            break;\n        case 'P' :\n            index = handleP(value, result, index);\n            break;\n        case 'Q' :\n            result.append('K');\n            index = (charAt(value, (index + 1))) == 'Q' ? index + 2 : index + 1;\n            break;\n        case 'R' :\n            index = handleR(value, result, index, slavoGermanic);\n            break;\n        case 'S' :\n            index = handleS(value, result, index, slavoGermanic);\n            break;\n        case 'T' :\n            index = handleT(value, result, index);\n            break;\n        case 'V' :\n            result.append('F');\n            index = (charAt(value, (index + 1))) == 'V' ? index + 2 : index + 1;\n            break;\n        case 'W' :\n            index = handleW(value, result, index);\n            break;\n        case 'X' :\n            index = handleX(value, result, index);\n            break;\n        case 'Z' :\n            index = handleZ(value, result, index, slavoGermanic);\n            break;\n        default :\n            index++;\n            break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"91c7505b-3d82-11e6-acb1-2ff73c9623fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:284","type":"CtReturnImpl","sourcecode":"return \"ANY_LANGUAGE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:321","type":"CtReturnImpl","sourcecode":"return null"},"status":0},{"failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"tindex":"91c7505c-3d82-11e6-acb1-5bedb60eb92a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:223","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md2(data))"},"variableMap":{"data":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:257","type":"CtReturnImpl","sourcecode":"return bytes == null ? null : new java.lang.String(bytes , charset)"},"status":-1},{"failures":[],"tindex":"91c7505d-3d82-11e6-acb1-dfe40350add8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:277","type":"CtReturnImpl","sourcecode":"return ((((letter.equalsIgnoreCase(\"E\")) || (letter.equalsIgnoreCase(\"A\"))) || (letter.equalsIgnoreCase(\"O\"))) || (letter.equalsIgnoreCase(\"I\"))) || (letter.equalsIgnoreCase(\"U\"))"},"variableMap":{"letter":"suffix"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:280","type":"CtIfImpl","sourcecode":"if ((input.charAt(i)) != (suffix.charAt(j))) {\n    return false;\n} "},"status":-2},{"failures":[65],"tindex":"91c7505e-3d82-11e6-acb1-6fc7e87e350d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:573","type":"CtInvocationImpl","sourcecode":"result.append('P')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:741","type":"CtInvocationImpl","sourcecode":"result.append('S')"},"status":-1},{"failures":[8,9],"tindex":"91c7505f-3d82-11e6-acb1-69cb0d838f1d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:488","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-1},{"failures":[20,21,22,23],"tindex":"91c75060-3d82-11e6-acb1-690dccbdeb57","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:211","type":"CtInvocationImpl","sourcecode":"buffer.setCharAt(0, charZero)"},"variableMap":{"buffer":"buffer","charZero":"charOne"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:212","type":"CtInvocationImpl","sourcecode":"buffer.setCharAt(1, charOne)"},"status":-1},{"failures":[8],"tindex":"91c75061-3d82-11e6-acb1-3f1f437671aa","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:553","type":"CtInvocationImpl","sourcecode":"result.appendPrimary('L')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:662","type":"CtInvocationImpl","sourcecode":"result.append('X')"},"status":-1},{"failures":[],"tindex":"91c75062-3d82-11e6-acb1-0faa6220134f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:332","type":"CtLocalVariableImpl","sourcecode":"char char = '/'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:191","type":"CtLocalVariableImpl","sourcecode":"final char char = org.apache.commons.codec.language.Soundex.this.map(preHWChar)"},"status":-2},{"failures":[],"tindex":"91c77773-3d82-11e6-acb1-6162c5f1015d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:569","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUtf8(org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, false))"},"variableMap":{"binaryData":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:105","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(keyBytes, salt, org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String, org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.int, org.apache.commons.codec.digest.MessageDigestAlgorithms.org.apache.commons.codec.digest.MessageDigestAlgorithms.java.lang.String)"},"status":-2},{"failures":[],"tindex":"91c77774-3d82-11e6-acb1-b16c48d6ac54","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:42","type":"CtIfImpl","sourcecode":"if ((str == null) || ((str.length()) == 0)) {\n    return str;\n} "},"variableMap":{"str":"org.apache.commons.codec.language.Caverphone2.TEN_1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:47","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String;\n} "},"status":-2},{"failures":[66,67],"tindex":"91c77775-3d82-11e6-acb1-6732c8261cd5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:249","type":"CtForImpl","sourcecode":"for (int int = 0 ; bits < (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[].int) ; ++bits) {\n    if (((raw[ii]) & (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits])) == 0) {\n        l_ascii[(jj - bits)] = '0';\n    } else {\n        l_ascii[(jj - bits)] = '1';\n    }\n}"},"status":-1},{"failures":[8,9],"tindex":"91c77776-3d82-11e6-acb1-2b75a1dcd76e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:486","type":"CtInvocationImpl","sourcecode":"result.append('F')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:488","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-1},{"failures":[],"tindex":"91c77777-3d82-11e6-acb1-bd6b8491a2f4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:284","type":"CtReturnImpl","sourcecode":"return \"ANY_LANGUAGE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:165","type":"CtReturnImpl","sourcecode":"return firstThree + lastThree"},"status":-2},{"failures":[68,69],"tindex":"91c77778-3d82-11e6-acb1-63ef72dcd9bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:113","type":"CtInvocationImpl","sourcecode":"local.append(inwd, 1, ((inwd.int) - 1))"},"status":-1},{"failures":[70,71,72],"tindex":"91c77779-3d82-11e6-acb1-4d7c84b05c48","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:245","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[8,9],"tindex":"91c7777a-3d82-11e6-acb1-63b4352cb090","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:137","type":"CtAssignmentImpl","sourcecode":"b = '+'"},"variableMap":{"b":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:343","type":"CtOperatorAssignmentImpl","sourcecode":"index += 3"},"status":-1},{"failures":[],"tindex":"91c7777b-3d82-11e6-acb1-af32e93be222","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:206","type":"CtAssignmentImpl","sourcecode":"this.int = unencodedBlockSize"},"variableMap":{"unencodedBlockSize":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:544","type":"CtOperatorAssignmentImpl","sourcecode":"index += (rule.getPatternLength()) - 1"},"status":-2},{"failures":[],"tindex":"91c7777c-3d82-11e6-acb1-f978a21e257b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.URLCodec:78","type":"CtForImpl","sourcecode":"for (int int = 'A' ; i <= 'Z' ; i++) {\n    org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(i);\n}"},"variableMap":{"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:84","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(':')"},"status":0},{"failures":[],"tindex":"91c7777d-3d82-11e6-acb1-21d7589fc7c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:83","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"b\", \"p\")"},"variableMap":{"txt":"text"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:324","type":"CtAssignmentImpl","sourcecode":"text = preprocess(text)"},"status":-2},{"failures":[73,74,75,76,77],"tindex":"91c7777e-3d82-11e6-acb1-d5b2bfa4606d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:169","type":"CtInvocationImpl","sourcecode":"buffer.write(' ')"},"variableMap":{"buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:145","type":"CtInvocationImpl","sourcecode":"buffer.write(hex2)"},"status":-1},{"failures":[],"tindex":"91c79e8f-3d82-11e6-acb1-95da5e241601","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:199","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"bytes","ascii":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:170","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"91c79e90-3d82-11e6-acb1-4526b214267d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.RefinedSoundex:188","type":"CtAssignmentImpl","sourcecode":"last = '*'"},"variableMap":{"last":"mapped"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:273","type":"CtAssignmentImpl","sourcecode":"mapped = getMappingCode(str, (incount++))"},"status":-2},{"failures":[78,79,80,81],"tindex":"91c79e91-3d82-11e6-acb1-157ebcac96da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:134","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"Unable to resolve required resource:\" + (org.apache.commons.codec.language.bm.Lang.org.apache.commons.codec.language.bm.Lang.java.lang.String)))"},"variableMap":{"org.apache.commons.codec.language.bm.Lang.LANGUAGE_RULES_RN":"salt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:205","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt))"},"status":-1},{"failures":[82,83,84,85,86,87,88,89,90,91,92],"tindex":"91c79e92-3d82-11e6-acb1-759faaf1f8ec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:82","type":"CtAssignmentImpl","sourcecode":"this.char[] = org.apache.commons.codec.language.Soundex.org.apache.commons.codec.language.Soundex.char[]"},"variableMap":{"org.apache.commons.codec.language.Soundex.US_ENGLISH_MAPPING":"data","soundexMapping":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:212","type":"CtAssignmentImpl","sourcecode":"this.char[] = new char[buffSize]"},"status":-1},{"failures":[],"tindex":"91c79e93-3d82-11e6-acb1-1f9b92f5da8b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:411","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = input.substring(2)"},"variableMap":{"input":"source"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:46","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = source"},"status":-2},{"failures":[82,83,84,85,86,88,89,90],"tindex":"91c79e94-3d82-11e6-acb1-c522bd048f6a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:144","type":"CtReturnImpl","sourcecode":"return name"},"variableMap":{"name":"text"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:418","type":"CtReturnImpl","sourcecode":"return colognePhonetic(text)"},"status":-1},{"failures":[],"tindex":"91c79e95-3d82-11e6-acb1-a17b33c9a8a6","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:191","type":"CtInvocationImpl","sourcecode":"ls.add(line)"},"variableMap":{"line":"lang","ls":"ls"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:125","type":"CtInvocationImpl","sourcecode":"ls.add(lang)"},"status":0},{"failures":[93,94,95,96,97,98],"tindex":"91c79e96-3d82-11e6-acb1-57a2d506efba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:542","type":"CtInvocationImpl","sourcecode":"currentBranches.addAll(nextBranches)"},"status":-1},{"failures":[],"tindex":"91c79e97-3d82-11e6-acb1-7f82bad3b60c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:93","type":"CtIfImpl","sourcecode":"if (string == null) {\n    return null;\n} "},"variableMap":{"string":"ascii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:156","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.fromAscii(ascii.toCharArray())"},"status":-2},{"failures":[58,63,99,100,64,101,102],"tindex":"91c79e98-3d82-11e6-acb1-1d9b8c06e6bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"flush()"},"status":-1},{"failures":[103,48,49,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,50,131,132,133,51,134,52,53,135,136,137,54,55,138,139,140,141,57,142,143,144,58,145,146,147,148,149,150,151,62,152,153,154,155,156,157,158,159,63,160,99,161,162,163,100,164,165,166,167,168,169,101,102,5,6,170,7],"tindex":"91c79e99-3d82-11e6-acb1-dfa291e16bea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:312","type":"CtSwitchImpl","sourcecode":"switch (byteToCheck) {\n    case ' ' :\n    case '\\n' :\n    case '\\r' :\n    case '\\t' :\n        return true;\n    default :\n        return false;\n}"},"variableMap":{"byteToCheck":"element"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:500","type":"CtIfImpl","sourcecode":"if (((byte) == element) || (isInAlphabet(element))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"91c7c5aa-3d82-11e6-acb1-47b767f14253","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:93","type":"CtIfImpl","sourcecode":"if (c != 0) {\n    return c;\n} "},"variableMap":{"c":"r"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:101","type":"CtIfImpl","sourcecode":"if (r > 0) {\n    final byte byte = byte[][0];\n    return b < 0 ? 256 + b : b;\n} "},"status":-2},{"failures":[],"tindex":"91c7c5ab-3d82-11e6-acb1-3fb2fcf8f7aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:412","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"E\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"name":"name1LtRStart","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"name1LtRStart"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:312","type":"CtAssignmentImpl","sourcecode":"name1LtRStart = name1.substring(i, (i + 1))"},"status":-2},{"failures":[44,45,46],"tindex":"91c7c5ac-3d82-11e6-acb1-13aff1256540","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:461","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[24], altResult[4], altResult[14], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:473","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[25], altResult[46], altResult[4], 4, buffer)"},"status":-1},{"failures":[82,83,84,85,86,88,89,90],"tindex":"91c7c5ad-3d82-11e6-acb1-6d32df6972e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:301","type":"CtIfImpl","sourcecode":"if (element == key) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"91c7c5ae-3d82-11e6-acb1-fd1be8de86b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:376","type":"CtAssignmentImpl","sourcecode":"s = (s >>> 16) | (t & -65536)"},"variableMap":{"s":"n","t":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:153","type":"CtUnaryOperatorImpl","sourcecode":"n++"},"status":-2},{"failures":[],"tindex":"91c7c5af-3d82-11e6-acb1-4b3f3af004c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:363","type":"CtAssignmentImpl","sourcecode":"d = (d >>> 2) | (d << 26)"},"variableMap":{"d":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:621","type":"CtOperatorAssignmentImpl","sourcecode":"index += 3"},"status":-2},{"failures":[],"tindex":"91c7c5b0-3d82-11e6-acb1-b51d1f90f2d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:889","type":"CtIfImpl","sourcecode":"if (input == null) {\n    return null;\n} "},"variableMap":{"input":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:244","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-2},{"failures":[108,118,126,171,172],"tindex":"91c7c5b1-3d82-11e6-acb1-17ef07a91192","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"91c7c5b2-3d82-11e6-acb1-8bb41f02092f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:95","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txtLength = txt.length()) == 0)) {\n    return \"\";\n} "},"status":-2},{"failures":[],"tindex":"91c7c5b3-3d82-11e6-acb1-5775b4d492df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:91","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"g\", \"k\")"},"variableMap":{"txt":"lastReplacement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:84","type":"CtAssignmentImpl","sourcecode":"java.lang.String = null"},"status":-2},{"failures":[173,174,175,176,177],"tindex":"91c7c5b4-3d82-11e6-acb1-31ed4d1f2b3d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:275","type":"CtInvocationImpl","sourcecode":"code.append('F')"},"variableMap":{"code":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:297","type":"CtInvocationImpl","sourcecode":"key.deleteCharAt(((key.length()) - 1))"},"status":-1},{"failures":[],"tindex":"91c7c5b5-3d82-11e6-acb1-8198e45ea145","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:304","type":"CtAssignmentImpl","sourcecode":"this.byte[] = null"},"variableMap":{"lineSeparator":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:256","type":"CtAssignmentImpl","sourcecode":"context.byte[] = b"},"status":-2},{"failures":[8,9],"tindex":"91c7c5b6-3d82-11e6-acb1-3d1cc44a9bb3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:213","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.ColognePhonetic.CologneBuffer.this.int = 0"},"variableMap":{"length":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:296","type":"CtOperatorAssignmentImpl","sourcecode":"index += 3"},"status":-1},{"failures":[177],"tindex":"91c7ecc7-3d82-11e6-acb1-c9352ad9f7e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:130","type":"CtIfImpl","sourcecode":"if (curr == 'Q') {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n} else if (curr == 'Z') {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n} else if (curr == 'M') {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n} "},"variableMap":{"org.apache.commons.codec.language.Nysiis.CHARS_S":"org.apache.commons.codec.language.Nysiis.CHARS_NN","org.apache.commons.codec.language.Nysiis.CHARS_G":"org.apache.commons.codec.language.Nysiis.CHARS_NN","org.apache.commons.codec.language.Nysiis.CHARS_N":"org.apache.commons.codec.language.Nysiis.CHARS_C","curr":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:139","type":"CtIfImpl","sourcecode":"if (curr == 'K') {\n    if (next == 'N') {\n        return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n    } else {\n        return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n    }\n} "},"status":-1},{"failures":[8,9],"tindex":"91c7ecc8-3d82-11e6-acb1-110b7795e210","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:306","type":"CtAssignmentImpl","sourcecode":"this.int = (org.apache.commons.codec.binary.Base32.this.int) - 1"},"variableMap":{"encodeSize":"index","decodeSize":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:393","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[47],"tindex":"91c7ecc9-3d82-11e6-acb1-79cd9dc74bc7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:616","type":"CtIfImpl","sourcecode":"if (slavoGermanic) {\n    result.append('S');\n} else {\n    result.append('S', 'X');\n}"},"status":-1},{"failures":[178],"tindex":"91c7ecca-3d82-11e6-acb1-7dfd15842156","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:149","type":"CtInvocationImpl","sourcecode":"sb.append(\"|\")"},"variableMap":{"sb":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:197","type":"CtInvocationImpl","sourcecode":"code.append('K')"},"status":-1},{"failures":[],"tindex":"91c7eccb-3d82-11e6-acb1-7ffa6d66e1de","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:295","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[keyLen]"},"variableMap":{"keyLen":"decodeSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:375","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = ensureBufferSize(int, context)"},"status":-2},{"failures":[179,180],"tindex":"91c7eccc-3d82-11e6-acb1-63e68a26d986","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:80","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"tia\", \"sia\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:88","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"sh\", \"s2\")"},"status":-1},{"failures":[171,134,172],"tindex":"91c7eccd-3d82-11e6-acb1-6141b62a731a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:496","type":"CtIfImpl","sourcecode":"if (arrayOctet == null) {\n    return false;\n} "},"variableMap":{"arrayOctet":"arrayOctet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:538","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (arrayOctet.int) ; i++) {\n    if ((!(org.apache.commons.codec.binary.Base64.isBase64(arrayOctet[i]))) && (!(org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(arrayOctet[i])))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[181],"tindex":"91c7ecce-3d82-11e6-acb1-bb9b8a7a88b1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:285","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.md5(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"variableMap":{"data":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:460","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.hmacSha256(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"status":-1},{"failures":[182,183,184,185],"tindex":"91c7eccf-3d82-11e6-acb1-a346f9cc1ef6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:277","type":"CtInvocationImpl","sourcecode":"code.append(symb)"},"status":-1},{"failures":[],"tindex":"91c7ecd0-3d82-11e6-acb1-515f4de402aa","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:501","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"91c7ecd1-3d82-11e6-acb1-f95feee45ef8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:889","type":"CtIfImpl","sourcecode":"if (input == null) {\n    return null;\n} "},"variableMap":{"input":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:265","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"91c7ecd2-3d82-11e6-acb1-9fb8d6099876","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:286","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(lineSeparator, 0, org.apache.commons.codec.binary.Base64.this.byte[], 0, lineSeparator.int)"},"variableMap":{"length":"j","lineSeparator":"finalb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:239","type":"CtInvocationImpl","sourcecode":"ctx.update(finalb[j])"},"status":-2},{"failures":[],"tindex":"91c7ecd3-3d82-11e6-acb1-175cdc57d9ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:500","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(sBytes, ((byte)(0)))"},"variableMap":{"sBytes":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:503","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(keyBytes, ((byte)(0)))"},"status":-2},{"failures":[69,186],"tindex":"91c7ecd4-3d82-11e6-acb1-a595e1cbb48f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:222","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[],"tindex":"91c813e5-3d82-11e6-acb1-f31caa334950","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:70","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(e)"},"variableMap":{"e":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:291","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be encoded using Q codec\"))"},"status":-2},{"failures":[],"tindex":"91c813e6-3d82-11e6-acb1-c3a1b8981f60","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:311","type":"CtIfImpl","sourcecode":"if (ruleType == (org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType)) {\n    throw new java.lang.IllegalArgumentException((\"ruleType must not be \" + (org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType)));\n} "},"variableMap":{"org.apache.commons.codec.language.bm.RuleType.RULES":"org.apache.commons.codec.language.bm.RuleType.RULES","ruleType":"org.apache.commons.codec.language.bm.RuleType.RULES"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:213","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.codec.language.bm.NameType org.apache.commons.codec.language.bm.NameType : org.apache.commons.codec.language.bm.NameType.values()) {\n    final java.util.Map<org.apache.commons.codec.language.bm.RuleType, java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>>> java.util.Map<org.apache.commons.codec.language.bm.RuleType, java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>>> = new java.util.EnumMap<org.apache.commons.codec.language.bm.RuleType, java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>>>(org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.java.lang.Class);\n    for (final org.apache.commons.codec.language.bm.RuleType org.apache.commons.codec.language.bm.RuleType : org.apache.commons.codec.language.bm.RuleType.values()) {\n        final java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>> java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>> = new java.util.HashMap<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>>();\n        final org.apache.commons.codec.language.bm.Languages org.apache.commons.codec.language.bm.Languages = org.apache.commons.codec.language.bm.Languages.getInstance(s);\n        for (final java.lang.String java.lang.String : ls.getLanguages()) {\n            try {\n                rs.put(l, org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(s, rt, l), org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l)));\n            } catch (final java.lang.IllegalStateException e) {\n                throw new java.lang.IllegalStateException((\"Problem processing \" + (org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l))) , e);\n            }\n        }\n        if (!(rt.equals(org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType))) {\n            rs.put(\"common\", org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(s, rt, \"common\"), org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, \"common\")));\n        } \n        rts.put(rt, java.util.Collections.unmodifiableMap(rs));\n    }\n    org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.util.Map<org.apache.commons.codec.language.bm.NameType, java.util.Map<org.apache.commons.codec.language.bm.RuleType, java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>>>>.put(s, java.util.Collections.unmodifiableMap(rts));\n}"},"status":-2},{"failures":[187,188,189,190,191,192,193,194],"tindex":"91c813e7-3d82-11e6-acb1-bb2f557828a3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:363","type":"CtInvocationImpl","sourcecode":"sb.append(org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.charAt(pos))"},"status":-1},{"failures":[],"tindex":"91c813e8-3d82-11e6-acb1-1f4d10262dff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:362","type":"CtAssignmentImpl","sourcecode":"c = (c >>> 2) | (c << 26)"},"variableMap":{"c":"cp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:338","type":"CtAssignmentImpl","sourcecode":"cp = 0"},"status":-2},{"failures":[],"tindex":"91c813e9-3d82-11e6-acb1-95c5fc2f3463","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:71","type":"CtIfImpl","sourcecode":"if (cs1 == cs2) {\n    return true;\n} "},"variableMap":{"cs1":"input","cs2":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:280","type":"CtIfImpl","sourcecode":"if ((input.charAt(i)) != (suffix.charAt(j))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"91c813ea-3d82-11e6-acb1-e5550ec6d105","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:76","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"cy\", \"sy\")"},"status":0},{"failures":[49,104,121,129,133,52,142,150,154,99,100],"tindex":"91c813eb-3d82-11e6-acb1-8b128c6861cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:374","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int)"},"status":-1},{"failures":[40,43],"tindex":"91c813ec-3d82-11e6-acb1-0b978c6b068f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:469","type":"CtInvocationImpl","sourcecode":"sb.append('|')"},"variableMap":{"sb":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:427","type":"CtInvocationImpl","sourcecode":"buffer.append(\"$\")"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}