{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":88,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":5,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":108,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":145,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":143,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":144,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":120,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":146,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan":30,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":43,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":23,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":162,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary":6,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":56,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":82,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":84,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":70,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":83,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":69,"org.apache.commons.codec.language.NysiisTest.testCap":121,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":194,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":68,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":193,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":72,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":17,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":167,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":117,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":118,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":75,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":67,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":179,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":22,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":166,"org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac":173,"org.apache.commons.codec.language.SoundexTest.testB650":142,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":157,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":98,"org.apache.commons.codec.language.SoundexTest.testNewInstance":150,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":32,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":18,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":102,"org.apache.commons.codec.net.RFC1522CodecTest.testNullInput":61,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":185,"org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull":62,"org.apache.commons.codec.language.NysiisTest.testDropBy":9,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":73,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":178,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":96,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":13,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":89,"org.apache.commons.codec.binary.Base64Test.testUUID":190,"org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt":53,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":94,"org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty":93,"org.apache.commons.codec.language.NysiisTest.testRule2":126,"org.apache.commons.codec.language.NysiisTest.testRule1":125,"org.apache.commons.codec.language.NysiisTest.testRule7":129,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":57,"org.apache.commons.codec.language.Caverphone1Test.testEndMb":76,"org.apache.commons.codec.language.NysiisTest.testRule6":128,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":95,"org.apache.commons.codec.language.NysiisTest.testRule5":127,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":80,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":151,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":187,"org.apache.commons.codec.language.NysiisTest.testBran":130,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":136,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray":112,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":60,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":50,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":183,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":71,"org.apache.commons.codec.net.URLCodecTest.testEncodeObjects":195,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":171,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":197,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":4,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":101,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1":29,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2":3,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":21,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":10,"org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute":152,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":138,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":44,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":165,"org.apache.commons.codec.language.NysiisTest.testDad":122,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray":168,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":181,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":164,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":119,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":78,"org.apache.commons.codec.language.NysiisTest.testDan":123,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":174,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":54,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":86,"org.apache.commons.codec.binary.HexTest.testCustomCharset":186,"org.apache.commons.codec.language.NysiisTest.testSnat":132,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":103,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":160,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":63,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":159,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":47,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":169,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":175,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":46,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":87,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":16,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":182,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":14,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":55,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":37,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":35,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":38,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument":52,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":97,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":113,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":15,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray":111,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":27,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":77,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples":91,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes":109,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":48,"org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac":170,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":20,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":39,"org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis":155,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":153,"org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX":177,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":154,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":85,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":172,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":24,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":74,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":90,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":104,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":188,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":59,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":1,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":36,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable":147,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":158,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":198,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":64,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":11,"org.apache.commons.codec.language.SoundexTest.testBadCharacters":137,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":28,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":81,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":114,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":199,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":58,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero":33,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":184,"org.apache.commons.codec.language.NysiisTest.testTranan":135,"org.apache.commons.codec.language.NysiisTest.testFal":124,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":192,"org.apache.commons.codec.language.NysiisTest.testSnad":131,"org.apache.commons.codec.language.MetaphoneTest.testTCH":66,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":163,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars":110,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer1":139,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":140,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":141,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":26,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":42,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter":79,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":161,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":45,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":8,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":12,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":0,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":105,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":40,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument":51,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":31,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":133,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":189,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":19,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn":34,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":116,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":148,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":196,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":2,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":115,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":99,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":107,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":156,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":49,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":65,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":92,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":176,"org.apache.commons.codec.language.NysiisTest.testOthers":134,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":25,"org.apache.commons.codec.language.SoundexTest.testDifference":149,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":180,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":191,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":106,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":100,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":41,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":7},"transformations":[{"failures":[],"tindex":"750246d7-3fdb-11e6-83cc-43a273470e02","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"b","to":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:382","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b += 256;\n} "},"status":-2},{"failures":[0],"tindex":"75026de8-3fdb-11e6-83cc-8d78e2dfc2da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:310","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md5(data))"},"status":-1},{"failures":[1],"tindex":"75026de9-3fdb-11e6-83cc-ff200b8fa6b2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:244","type":"CtUnaryOperatorImpl","sourcecode":"y++"},"variableMap":{"y":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:750","type":"CtAssignmentImpl","sourcecode":"index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"C\", \"X\") ? index + 2 : index + 1"},"status":-1},{"failures":[2,3,4,5,6],"tindex":"750294fa-3fdb-11e6-83cc-f568c34955ae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:202","type":"CtInvocationImpl","sourcecode":"code.append('K')"},"status":-1},{"failures":[],"tindex":"750294fb-3fdb-11e6-83cc-4f25c44e8c93","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:498","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.isBase64(arrayOctet)"},"variableMap":{"arrayOctet":"org.apache.commons.codec.binary.Base64.URL_SAFE_ENCODE_TABLE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:306","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.codec.binary.Base64.this.byte[]) == (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[])"},"status":-2},{"failures":[1,7,8],"tindex":"750294fc-3fdb-11e6-83cc-47e7199b4c06","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:502","type":"CtInvocationImpl","sourcecode":"result.append('H')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:442","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, \"VAN \", \"VON \")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"ET\"))) {\n    result.append('K');\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 3, \"IER\")) {\n    result.append('J');\n} else {\n    result.append('J', 'K');\n}"},"status":-1},{"failures":[1,7,8],"tindex":"750294fd-3fdb-11e6-83cc-f9e35ef23900","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:654","type":"CtInvocationImpl","sourcecode":"result.append(\"X\", \"SK\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:365","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-1},{"failures":[9],"tindex":"7502bc0e-3fdb-11e6-83cc-3b63f25b9906","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:153","type":"CtIfImpl","sourcecode":"if ((curr == 'P') && (next == 'H')) {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n} "},"variableMap":{"next":"next","org.apache.commons.codec.language.Nysiis.CHARS_FF":"org.apache.commons.codec.language.Nysiis.CHARS_SSS","curr":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:148","type":"CtIfImpl","sourcecode":"if (((curr == 'S') && (next == 'C')) && (aNext == 'H')) {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n} "},"status":-1},{"failures":[7,8],"tindex":"7502bc0f-3fdb-11e6-83cc-77286f533c0e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:662","type":"CtInvocationImpl","sourcecode":"result.append('X')"},"status":-1},{"failures":[10,11,12,13,14],"tindex":"7502bc10-3fdb-11e6-83cc-0f6af8009d07","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:95","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.decode(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-1},{"failures":[],"tindex":"7502bc11-3fdb-11e6-83cc-bf65940058e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:301","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(e.getMessage() , e)"},"variableMap":{"e":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:227","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (value.getClass().getName())) + \" cannot be decoded using BCodec\"))"},"status":-2},{"failures":[15,16,17,18,19,20,21,22,23,24],"tindex":"7502bc12-3fdb-11e6-83cc-91c947ce6dfa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:206","type":"CtOperatorAssignmentImpl","sourcecode":"todo -= len"},"status":-1},{"failures":[],"tindex":"7502e323-3fdb-11e6-83cc-89426a5fe7ea","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:284","type":"CtReturnImpl","sourcecode":"return \"ANY_LANGUAGE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:420","type":"CtIfImpl","sourcecode":"if (isVowel(firstLetter)) {\n    return firstLetter + name;\n} else {\n    return name;\n}"},"status":-2},{"failures":[7,8],"tindex":"7502e324-3fdb-11e6-83cc-4bb1442533d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:659","type":"CtIfImpl","sourcecode":"if (((index == 0) && (!(isVowel(charAt(value, 3))))) && ((charAt(value, 3)) != 'W')) {\n    result.append('X', 'S');\n} else {\n    result.append('X');\n}"},"status":-1},{"failures":[],"tindex":"7502e325-3fdb-11e6-83cc-6f0bc35d542b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:758","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:454","type":"CtLocalVariableImpl","sourcecode":"final int int = currentLine"},"status":-2},{"failures":[],"tindex":"7502e326-3fdb-11e6-83cc-5fd54ea4171a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:304","type":"CtAssignmentImpl","sourcecode":"this.byte[] = null"},"variableMap":{"lineSeparator":"org.apache.commons.codec.binary.Base32.HEX_ENCODE_TABLE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:284","type":"CtAssignmentImpl","sourcecode":"this.byte[] = org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.byte[]"},"status":-2},{"failures":[],"tindex":"7502e327-3fdb-11e6-83cc-f9c04228d7ba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:150","type":"CtIfImpl","sourcecode":"if (!(obj instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Soundex encode is not of type java.lang.String\");\n} "},"status":0},{"failures":[25,26,27,28],"tindex":"7502e328-3fdb-11e6-83cc-8756892f8a19","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Crypt:67","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(keyBytes)"},"variableMap":{"keyBytes":"binaryData"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:569","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUtf8(org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, false))"},"status":-1},{"failures":[7,8],"tindex":"75030a39-3fdb-11e6-83cc-93c049525d00","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Hex:90","type":"CtUnaryOperatorImpl","sourcecode":"j++"},"variableMap":{"j":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:682","type":"CtOperatorAssignmentImpl","sourcecode":"index += 3"},"status":-1},{"failures":[29,30,31,4,32,33,34],"tindex":"75030a3a-3fdb-11e6-83cc-977971e5119c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:296","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = name2.toCharArray()"},"variableMap":{"name2":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:103","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = txt.toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale).toCharArray()"},"status":-1},{"failures":[],"tindex":"75030a3b-3fdb-11e6-83cc-91e6fabd60f9","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:144","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Languages.LanguageSet.from(ls)"},"variableMap":{"ls":"langs"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:64","type":"CtReturnImpl","sourcecode":"return langs.isEmpty() ? org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet : new org.apache.commons.codec.language.bm.Languages.SomeLanguages(langs)"},"status":-2},{"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],"tindex":"75030a3c-3fdb-11e6-83cc-1b6e601ecdb3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:161","type":"CtIfImpl","sourcecode":"if ((line.length()) == 0) {\n    continue;\n} "},"variableMap":{"line":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:184","type":"CtIfImpl","sourcecode":"if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n    inExtendedComment = false;\n} "},"status":-1},{"failures":[],"tindex":"75030a3d-3fdb-11e6-83cc-818b913b9ef1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:751","type":"CtAssignmentImpl","sourcecode":"bitlen = ((bitlen + 7) >> 3) << 3"},"variableMap":{"bitlen":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:307","type":"CtOperatorAssignmentImpl","sourcecode":"pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer)"},"status":-2},{"failures":[51,52],"tindex":"7503314e-3fdb-11e6-83cc-f77f788f9ad2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:193","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Negative skip length: \" + n))"},"status":-1},{"failures":[],"tindex":"7503314f-3fdb-11e6-83cc-ed230f6a36f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:236","type":"CtLocalVariableImpl","sourcecode":"final int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:340","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.digest.UnixCrypt.fourBytesToInt(key, 0)"},"status":-2},{"failures":[],"tindex":"75033150-3fdb-11e6-83cc-dd6bc08ee137","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:363","type":"CtAssignmentImpl","sourcecode":"code = '4'"},"status":-2},{"failures":[],"tindex":"75033151-3fdb-11e6-83cc-972bb4fa4d5e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"variableMap":{"terminator":"org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK","to":"org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:355","type":"CtIfImpl","sourcecode":"if (result >= 0) {\n    context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int);\n    context.long = ((context.long) << (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int)) + result;\n    if ((context.int) == 0) {\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 32) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 24) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n    } \n} "},"status":-2},{"failures":[53,54,55],"tindex":"75035862-3fdb-11e6-83cc-a58f4f9a3a73","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Crypt:75","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.UnixCrypt.crypt(keyBytes, salt)"},"status":-1},{"failures":[56,57,58,59,60],"tindex":"75035863-3fdb-11e6-83cc-63bd71272340","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:223","type":"CtAssignmentImpl","sourcecode":"patternLength = 1"},"variableMap":{"patternLength":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:321","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer)"},"status":-1},{"failures":[],"tindex":"75035864-3fdb-11e6-83cc-07e0c6f9c69b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"variableMap":{"terminator":"len","to":"bPos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:294","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(context.byte[], context.int, b, bPos, len)"},"status":-2},{"failures":[],"tindex":"75035865-3fdb-11e6-83cc-830cd1b26489","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:75","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"q\", \"k\")"},"variableMap":{"txt":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:88","type":"CtAssignmentImpl","sourcecode":"upperName = upperName.replaceAll(str, org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"status":-2},{"failures":[],"tindex":"75035866-3fdb-11e6-83cc-e990500c2f6d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:496","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int)"},"variableMap":{"pos":"ibitWorkArea","context":"context","length":"org.apache.commons.codec.binary.Base64.MASK_6BITS","buffer":"buffer","lineSeparator":"org.apache.commons.codec.binary.Base64.STANDARD_ENCODE_TABLE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:344","type":"CtSwitchImpl","sourcecode":"switch (context.int) {\n    case 0 :\n        break;\n    case 1 :\n        buffer[((context.int)++)] = byte[][(((context.int) >> 2) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n        buffer[((context.int)++)] = byte[][(((context.int) << 4) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n        if ((byte[]) == (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[])) {\n            buffer[((context.int)++)] = byte;\n            buffer[((context.int)++)] = byte;\n        } \n        break;\n    case 2 :\n        buffer[((context.int)++)] = byte[][(((context.int) >> 10) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n        buffer[((context.int)++)] = byte[][(((context.int) >> 4) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n        buffer[((context.int)++)] = byte[][(((context.int) << 2) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n        if ((byte[]) == (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[])) {\n            buffer[((context.int)++)] = byte;\n        } \n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Impossible modulus \" + (context.int)));\n}"},"status":-2},{"failures":[],"tindex":"75037f77-3fdb-11e6-83cc-670d3415c304","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:76","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('+')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:80","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('/')"},"status":0},{"failures":[],"tindex":"75037f78-3fdb-11e6-83cc-5b28c50d5734","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:127","type":"CtIfImpl","sourcecode":"if ((((name == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name))) || ((name.length()) == 1)) {\n    return org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String;\n} "},"variableMap":{"name":"firstLetter","org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"name","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:421","type":"CtReturnImpl","sourcecode":"return firstLetter + name"},"status":-2},{"failures":[],"tindex":"75037f79-3fdb-11e6-83cc-114de788bc77","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:546","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = content.endsWith(\"]\")"},"variableMap":{"content":"regex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:500","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = regex.startsWith(\"^\")"},"status":-2},{"failures":[],"tindex":"75037f7a-3fdb-11e6-83cc-034023a91cbb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:369","type":"CtIfImpl","sourcecode":"if (lastCode == '/') {\n    if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)) {\n        code = '4';\n    } else {\n        code = '8';\n    }\n} else {\n    if ((org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], lastChar)) || (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)))) {\n        code = '8';\n    } else {\n        code = '4';\n    }\n}"},"status":-2},{"failures":[],"tindex":"7504df0b-3fdb-11e6-83cc-afc6e8b70fb5","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.URLCodec:78","type":"CtForImpl","sourcecode":"for (int int = 'A' ; i <= 'Z' ; i++) {\n    org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(i);\n}"},"variableMap":{"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"printable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:329","type":"CtIfImpl","sourcecode":"if (printable.get(b)) {\n    buffer.write(b);\n} else {\n    org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer);\n}"},"status":0},{"failures":[61],"tindex":"7504df0c-3fdb-11e6-83cc-d74f0e20b8d6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:126","type":"CtIfImpl","sourcecode":"if (text == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"7504df0d-3fdb-11e6-83cc-1d3092648188","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:189","type":"CtIfImpl","sourcecode":"if ((m == null) || (!(m.find()))) {\n    throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n} "},"variableMap":{"salt":"obj","m":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:335","type":"CtIfImpl","sourcecode":"if (!(obj instanceof byte[])) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Base-N encode is not a byte[]\");\n} "},"status":-2},{"failures":[],"tindex":"7504df0e-3fdb-11e6-83cc-5fb3b4ae741c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:893","type":"CtIfImpl","sourcecode":"if ((input.length()) == 0) {\n    return null;\n} "},"variableMap":{"input":"source"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:436","type":"CtReturnImpl","sourcecode":"return soundex(source, false)[0]"},"status":-2},{"failures":[],"tindex":"7504df0f-3fdb-11e6-83cc-6d0264ea2e6d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:498","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(tempResult, ((byte)(0)))"},"variableMap":{"tempResult":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:503","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(keyBytes, ((byte)(0)))"},"status":-2},{"failures":[62],"tindex":"7504df10-3fdb-11e6-83cc-bd8142cdb2ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:255","type":"CtIfImpl","sourcecode":"if ((str.length()) == 0) {\n    return str;\n} "},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:225","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-1},{"failures":[63,64,65],"tindex":"7504df11-3fdb-11e6-83cc-17f5d6b5ed12","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:466","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[9], altResult[19], altResult[29], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:477","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[50], altResult[8], altResult[29], 4, buffer)"},"status":-1},{"failures":[66,67,5],"tindex":"7504df12-3fdb-11e6-83cc-85622829934f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:117","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"variableMap":{"builder":"local"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:134","type":"CtInvocationImpl","sourcecode":"local.append(inwd)"},"status":-1},{"failures":[],"tindex":"75050623-3fdb-11e6-83cc-fd5b813477fe","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:261","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.this.int = maxCodeLen"},"variableMap":{"maxCodeLen":"org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:303","type":"CtAssignmentImpl","sourcecode":"this.int = org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int"},"status":-2},{"failures":[],"tindex":"75050624-3fdb-11e6-83cc-51cb68935a93","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:751","type":"CtAssignmentImpl","sourcecode":"bitlen = ((bitlen + 7) >> 3) << 3"},"variableMap":{"bitlen":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:490","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-2},{"failures":[],"tindex":"75050625-3fdb-11e6-83cc-311f59e18255","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:395","type":"CtReturnImpl","sourcecode":"return a"},"variableMap":{"a":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:460","type":"CtReturnImpl","sourcecode":"return index"},"status":-2},{"failures":[68,69,70,71,72,73,74,75],"tindex":"75050626-3fdb-11e6-83cc-6d1202e56da0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:305","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[76,77],"tindex":"75050627-3fdb-11e6-83cc-cdd51f95ad6c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:94","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"p+\", \"P\")"},"status":-1},{"failures":[2,78,79,67,31,4,32,80,5,81],"tindex":"75050628-3fdb-11e6-83cc-1d6d366d329f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:306","type":"CtInvocationImpl","sourcecode":"code.append('T')"},"status":-1},{"failures":[82,83,84],"tindex":"75050629-3fdb-11e6-83cc-2fb5260371c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:185","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit((b & 15), 16))"},"variableMap":{"b":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:188","type":"CtLocalVariableImpl","sourcecode":"final char char = str.charAt((index - 1))"},"status":-1},{"failures":[],"tindex":"7505062a-3fdb-11e6-83cc-c1fed17f7d61","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:321","type":"CtLocalVariableImpl","sourcecode":"final int int = b"},"status":-2},{"failures":[],"tindex":"7505062b-3fdb-11e6-83cc-3791ae95e72d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:357","type":"CtAssignmentImpl","sourcecode":"d = ((((d & 255) << 16) | (d & 65280)) | ((d & 16711680) >>> 16)) | ((c & -268435456) >>> 4)"},"variableMap":{"c":"pos","d":"currentLinePos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:493","type":"CtOperatorAssignmentImpl","sourcecode":"context.int += (context.int) - savedPos"},"status":-2},{"failures":[85,86],"tindex":"75052d3c-3fdb-11e6-83cc-8579cdedcd9f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:83","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(raw)"},"variableMap":{"raw":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:338","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.updateHmac(org.apache.commons.codec.digest.HmacUtils.getHmacSha1(key), valueToDigest).doFinal()"},"status":-1},{"failures":[87,1,88,7,8],"tindex":"75052d3d-3fdb-11e6-83cc-4b9c0394bd3d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:223","type":"CtAssignmentImpl","sourcecode":"patternLength = 1"},"variableMap":{"patternLength":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:303","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[89,90,91,92],"tindex":"75052d3e-3fdb-11e6-83cc-ff23c4aa67b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:88","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"[aeiou]\", \"3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:105","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"n+\", \"N\")"},"status":-1},{"failures":[],"tindex":"75052d3f-3fdb-11e6-83cc-a395735f9dd8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:141","type":"CtInvocationImpl","sourcecode":"buffer.write(org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.byte)"},"variableMap":{"buffer":"buffer","org.apache.commons.codec.net.URLCodec.ESCAPE_CHAR":"org.apache.commons.codec.net.QuotedPrintableCodec.LF"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:315","type":"CtInvocationImpl","sourcecode":"buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":-2},{"failures":[],"tindex":"75052d40-3fdb-11e6-83cc-2df1b9eb5903","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:118","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"3\", \"\")"},"variableMap":{"txt":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:618","type":"CtAssignmentImpl","sourcecode":"str = str.substring(0, ((str.length()) - 1))"},"status":-2},{"failures":[93],"tindex":"75052d41-3fdb-11e6-83cc-b3ef64c238e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:352","type":"CtIfImpl","sourcecode":"if (accentedWord == null) {\n    return null;\n} "},"variableMap":{"accentedWord":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:893","type":"CtIfImpl","sourcecode":"if ((input.length()) == 0) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"75052d42-3fdb-11e6-83cc-81853a815af2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:428","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.Metaphone.this.int = maxCodeLen"},"variableMap":{"maxCodeLen":"maxLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:943","type":"CtAssignmentImpl","sourcecode":"this.int = maxLength"},"status":-2},{"failures":[94,95,96,97,98,99,100,101],"tindex":"75052d43-3fdb-11e6-83cc-03e43c67b07e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:304","type":"CtInvocationImpl","sourcecode":"code.append('0')"},"variableMap":{"code":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:77","type":"CtInvocationImpl","sourcecode":"buffer.append(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.char)"},"status":-1},{"failures":[102,103,104,56,105,57,106,107,94,96,108,98],"tindex":"75052d44-3fdb-11e6-83cc-91db1ac829ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.CharSequenceUtils:54","type":"CtLocalVariableImpl","sourcecode":"int int = thisStart"},"variableMap":{"thisStart":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:365","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.net.Utils.digit16(bytes[i])"},"status":-1},{"failures":[],"tindex":"75055455-3fdb-11e6-83cc-f73f257c7108","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:311","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(right, left, 4, 252645135, results)"},"variableMap":{"left":"jj","right":"bits","results":"org.apache.commons.codec.binary.BinaryCodec.BITS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:250","type":"CtIfImpl","sourcecode":"if (((raw[ii]) & (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits])) == 0) {\n    l_ascii[(jj - bits)] = '0';\n} else {\n    l_ascii[(jj - bits)] = '1';\n}"},"status":-2},{"failures":[109,110,111,112,113],"tindex":"75055456-3fdb-11e6-83cc-bf9efaabba6d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:226","type":"CtReturnImpl","sourcecode":"return (array == null) || ((array.int) == 0)"},"status":-1},{"failures":[],"tindex":"75055457-3fdb-11e6-83cc-391e61c5d1ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:214","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.this.nysiis(((java.lang.String)(obj)))"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:286","type":"CtIfImpl","sourcecode":"if (obj == null) {\n    return null;\n} else if (obj instanceof java.lang.String) {\n    return encode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be encoded using Q codec\"));\n}"},"status":-2},{"failures":[],"tindex":"75055458-3fdb-11e6-83cc-39e2ae07c9d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:92","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Languages.SomeLanguages.this.java.util.Set<java.lang.String>.contains(language)"},"status":-1},{"failures":[114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,9,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,82,83,84],"tindex":"75055459-3fdb-11e6-83cc-6d67de6bf4d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:48","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < len ; i++) {\n    if (java.lang.Character.isLetter(str.charAt(i))) {\n        chars[(count++)] = str.charAt(i);\n    } \n}"},"status":-1},{"failures":[],"tindex":"7505545a-3fdb-11e6-83cc-5f6c8b63aa61","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:216","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (key.int) ; i++) {\n    key[i] = 0;\n}"},"variableMap":{"length":"length","key":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:519","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int)"},"status":-2},{"failures":[95],"tindex":"7505545b-3fdb-11e6-83cc-b1094f58390c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:187","type":"CtAssignmentImpl","sourcecode":"tmp[i] = org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte"},"status":-1},{"failures":[],"tindex":"7505545c-3fdb-11e6-83cc-b522418e5531","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:225","type":"CtOperatorAssignmentImpl","sourcecode":"cnt -= blocksize"},"status":-2},{"failures":[97],"tindex":"75057b6d-3fdb-11e6-83cc-eb598e518841","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:100","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('{')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:81","type":"CtForImpl","sourcecode":"for (int int = '0' ; i <= '9' ; i++) {\n    org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(i);\n}"},"status":-1},{"failures":[156,157,158,159,160,161],"tindex":"75057b6e-3fdb-11e6-83cc-f75fc3741d85","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:493","type":"CtInvocationImpl","sourcecode":"currentBranches.add(new org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch())"},"variableMap":{"currentBranches":"currentBranches"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:542","type":"CtInvocationImpl","sourcecode":"currentBranches.addAll(nextBranches)"},"status":-1},{"failures":[],"tindex":"75057b6f-3fdb-11e6-83cc-c7fa267e00e4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:62","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^enough\", \"enou2f\")"},"status":0},{"failures":[162,63,64,65,163,164,165,166],"tindex":"75057b70-3fdb-11e6-83cc-3bbaf7b10706","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:499","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(pBytes, ((byte)(0)))"},"variableMap":{"pBytes":"altResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:316","type":"CtForImpl","sourcecode":"for (int int = 1 ; i <= (16 + ((altResult[0]) & 255)) ; i++) {\n    altCtx.update(saltBytes);\n}"},"status":-1},{"failures":[],"tindex":"75057b71-3fdb-11e6-83cc-894177898e73","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"len","to":"org.apache.commons.codec.binary.BaseNCodec.EOF"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"status":-2},{"failures":[167,85,168,169,170,86,171,172,173,174,175,176],"tindex":"75057b72-3fdb-11e6-83cc-3fb790c3c762","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:499","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(pBytes, ((byte)(0)))"},"variableMap":{"pBytes":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"status":-1},{"failures":[177],"tindex":"75057b73-3fdb-11e6-83cc-1def8e06d246","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:211","type":"CtInvocationImpl","sourcecode":"code.append('T')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:295","type":"CtInvocationImpl","sourcecode":"code.append('X')"},"status":-1},{"failures":[],"tindex":"75057b74-3fdb-11e6-83cc-5760572602e1","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:231","type":"CtLocalVariableImpl","sourcecode":"int int = 2"},"status":-2},{"failures":[156,157,158,159,160,178,179,180,161],"tindex":"75057b75-3fdb-11e6-83cc-a7361c666bbd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:379","type":"CtForEachImpl","sourcecode":"for (char char : input.toCharArray()) {\n    if (java.lang.Character.isWhitespace(ch)) {\n        continue;\n    } \n    ch = java.lang.Character.toLowerCase(ch);\n    if ((boolean) && (org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.lang.Character>.containsKey(ch))) {\n        ch = org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.lang.Character>.get(ch);\n    } \n    sb.append(ch);\n}"},"status":-1},{"failures":[10,11,12,181,182,183,184,185,13,14],"tindex":"75057b76-3fdb-11e6-83cc-1511810b4b05","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:251","type":"CtAssignmentImpl","sourcecode":"context.int = 0"},"status":-1},{"failures":[54,55],"tindex":"7505a287-3fdb-11e6-83cc-01a902888bb2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:304","type":"CtAssignmentImpl","sourcecode":"right = results[1]"},"status":-1},{"failures":[],"tindex":"7505a288-3fdb-11e6-83cc-9f9005974718","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:114","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"y\", \"2\")"},"variableMap":{"txt":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:415","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"U\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"status":-2},{"failures":[186,187,188,189,190,26],"tindex":"7505a289-3fdb-11e6-83cc-438f953d03ef","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:768","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(bigBytes, startSrc, resizedBytes, startDst, len)"},"variableMap":{"resizedBytes":"out","bigBytes":"out","len":"len","startSrc":"len","startDst":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:88","type":"CtForImpl","sourcecode":"for (int int = 0, int int = 0 ; j < len ; i++) {\n    int int = (org.apache.commons.codec.binary.Hex.toDigit(data[j], j)) << 4;\n    j++;\n    f = f | (org.apache.commons.codec.binary.Hex.toDigit(data[j], j));\n    j++;\n    out[i] = ((byte)(f & 255));\n}"},"status":-1},{"failures":[],"tindex":"7505a28a-3fdb-11e6-83cc-25d7846d67a2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:84","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"sh\", \"s2\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:125","type":"CtAssignmentImpl","sourcecode":"txt = txt + (org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String)"},"status":0},{"failures":[],"tindex":"7505a28b-3fdb-11e6-83cc-1f77450e2edd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:326","type":"CtLocalVariableImpl","sourcecode":"int int = r ^ (r >>> 16)"},"variableMap":{"r":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:446","type":"CtLocalVariableImpl","sourcecode":"final int int = context.int"},"status":-2},{"failures":[94,98],"tindex":"7505a28c-3fdb-11e6-83cc-1f23b7c5f73e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:103","type":"CtForImpl","sourcecode":"for (int int = 62 ; i <= 126 ; i++) {\n    org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet.set(i);\n}"},"variableMap":{"org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:70","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('%')"},"status":-1},{"failures":[56,57,58,59,60],"tindex":"7505a28d-3fdb-11e6-83cc-ddc26e86779f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:286","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < ((bytes.int) - 3) ; i++) {\n    int int = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n    if (pos < (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.int)) {\n        pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!(printable.get(b))), buffer);\n    } else {\n        org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, ((!(printable.get(b))) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b))), buffer);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n        pos = 1;\n    }\n}"},"status":-1},{"failures":[],"tindex":"7505a28e-3fdb-11e6-83cc-cf2fb4f8cebf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:379","type":"CtAssignmentImpl","sourcecode":"code = '4'"},"status":-2},{"failures":[],"tindex":"7505a28f-3fdb-11e6-83cc-c95b1302b628","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:208","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(\"             \")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:378","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-2},{"failures":[],"tindex":"7505c9a0-3fdb-11e6-83cc-1312084f474b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:387","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((context.int) >> 18) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))]"},"variableMap":{"encodeTable":"encodeTable","ibitWorkArea":"ibitWorkArea","pos":"ibitWorkArea","context":"context","org.apache.commons.codec.binary.Base64.MASK_6BITS":"org.apache.commons.codec.binary.Base64.MASK_6BITS","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:388","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((context.int) >> 12) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))]"},"status":-2},{"failures":[191,192,193,194,195],"tindex":"7505c9a1-3fdb-11e6-83cc-c90447cd9e8d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:169","type":"CtInvocationImpl","sourcecode":"buffer.write(' ')"},"variableMap":{"buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:139","type":"CtInvocationImpl","sourcecode":"buffer.write(b)"},"status":-1},{"failures":[94,98],"tindex":"7505c9a2-3fdb-11e6-83cc-cbc5618de929","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:87","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set('_')"},"variableMap":{"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:86","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('<')"},"status":-1},{"failures":[1,7,8],"tindex":"7505c9a3-3fdb-11e6-83cc-bd5b2e8f6002","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:226","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:377","type":"CtReturnImpl","sourcecode":"return index + 2"},"status":-1},{"failures":[],"tindex":"75075044-3fdb-11e6-83cc-65cfa51dcf38","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:377","type":"CtAssignmentImpl","sourcecode":"s = (s << 4) | (s >>> 28)"},"variableMap":{"s":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:438","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-2},{"failures":[],"tindex":"75075045-3fdb-11e6-83cc-1d112fdb08a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:106","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"r3\", \"R3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:91","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"g\", \"k\")"},"status":0},{"failures":[8],"tindex":"75075046-3fdb-11e6-83cc-47be2542865c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:654","type":"CtInvocationImpl","sourcecode":"result.append(\"X\", \"SK\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:604","type":"CtInvocationImpl","sourcecode":"result.append('X', 'S')"},"status":-1},{"failures":[],"tindex":"75077757-3fdb-11e6-83cc-9199c6ea7c0b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:111","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.codec.language.bm.Languages.SomeLanguages.this.java.util.Set<java.lang.String>.size()) == 1"},"variableMap":{"languages":"languages"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:106","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Languages.SomeLanguages.this.java.util.Set<java.lang.String>.isEmpty()"},"status":-2},{"failures":[196,197,198,199],"tindex":"75077758-3fdb-11e6-83cc-8765566f8eab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:724","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha512(key, valueToDigest))"},"variableMap":{"valueToDigest":"keyBytes","key":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:126","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(keyBytes.getBytes(org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset), salt)"},"status":-1},{"failures":[],"tindex":"75077759-3fdb-11e6-83cc-4d0f7f2eaa49","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:495","type":"CtLocalVariableImpl","sourcecode":"char char = '\u0000'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:209","type":"CtLocalVariableImpl","sourcecode":"final char char = salt.charAt(0)"},"status":-2},{"failures":[],"tindex":"7507775a-3fdb-11e6-83cc-4147a69da0f0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:173","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String[] = replacementDefault.split(\"\\\\|\")"},"variableMap":{"replacementDefault":"replacementBeforeVowel"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:172","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String[] = replacementBeforeVowel.split(\"\\\\|\")"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}