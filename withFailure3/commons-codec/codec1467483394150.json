{"failureDictionary":{"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":77,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":2,"org.apache.commons.codec.binary.HexTest.testCustomCharset":92,"org.apache.commons.codec.language.NysiisTest.testSnat":147,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":5,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":117,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":132,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":12,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":131,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":162,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":108,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":161,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":46,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":73,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":84,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects":10,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":45,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":138,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":16,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":163,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":42,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull":177,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":91,"org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde":18,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptNullData":56,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":58,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":37,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":52,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":102,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException":175,"org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation":180,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":50,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":53,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":29,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail":78,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":30,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":110,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":112,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":111,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":47,"org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac":75,"org.apache.commons.codec.language.NysiisTest.testCap":123,"org.apache.commons.codec.language.Caverphone2Test.testEndMb":65,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":38,"org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey":86,"org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis":171,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":169,"org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant":113,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":24,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":170,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":70,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":57,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":79,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":34,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":62,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":6,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":31,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":64,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":69,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":94,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":9,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":26,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":1,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":154,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":155,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":55,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":51,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail":72,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable":164,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":130,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch":136,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":13,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":173,"org.apache.commons.codec.digest.CryptTest.testCryptWithBytes":114,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":106,"org.apache.commons.codec.language.SoundexTest.testBadCharacters":156,"org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac":81,"org.apache.commons.codec.language.SoundexTest.testB650":107,"org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals":20,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":129,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":151,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":8,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":101,"org.apache.commons.codec.language.SoundexTest.testNewInstance":167,"org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16":178,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid":119,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":88,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully":135,"org.apache.commons.codec.language.NysiisTest.testTranan":150,"org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid":59,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":118,"org.apache.commons.codec.language.NysiisTest.testFal":140,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":23,"org.apache.commons.codec.language.SoundexTest.testLocaleIndependence":176,"org.apache.commons.codec.language.NysiisTest.testSnad":146,"org.apache.commons.codec.digest.HmacUtilsTest.testNullKey":85,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall":115,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":89,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":103,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":36,"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":21,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer1":158,"org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad":61,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":159,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":160,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":0,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":41,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":97,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail":82,"org.apache.commons.codec.language.NysiisTest.testDropBy":126,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":133,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":172,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":100,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":44,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":90,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":63,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":4,"org.apache.commons.codec.binary.Base64Test.testUUID":96,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":98,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":67,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":32,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":35,"org.apache.commons.codec.binary.Base64Test.testConstructors":60,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":120,"org.apache.commons.codec.language.NysiisTest.testRule2":142,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully":134,"org.apache.commons.codec.language.NysiisTest.testRule1":141,"org.apache.commons.codec.language.NysiisTest.testRule7":125,"org.apache.commons.codec.language.MetaphoneTest.testExceedLength":181,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":7,"org.apache.commons.codec.language.NysiisTest.testRule6":144,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":99,"org.apache.commons.codec.language.NysiisTest.testRule5":143,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111":66,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":39,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":116,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":109,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":95,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":148,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":93,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":127,"org.apache.commons.codec.language.NysiisTest.testBran":145,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":153,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":11,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":165,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":49,"org.apache.commons.codec.net.URLCodecTest.testEncodeObjects":25,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":15,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":152,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail":80,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":122,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":128,"org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute":168,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":157,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":33,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":48,"org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey":74,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":43,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":14,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":105,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":68,"org.apache.commons.codec.language.NysiisTest.testDad":139,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray":71,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":87,"org.apache.commons.codec.language.NysiisTest.testOthers":149,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":104,"org.apache.commons.codec.language.SoundexTest.testDifference":166,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":174,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":137,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla":17,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":22,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":179,"org.apache.commons.codec.language.NysiisTest.testDan":124,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":121,"org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1":28,"org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0":27,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":83,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":40,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":19,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail":76,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual":3,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":54},"transformations":[{"failures":[0,1,2,3,4],"tindex":"1bc20dde-4081-11e6-9480-f9f9b2bbd0e4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:964","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value)"},"status":-1},{"failures":[],"tindex":"1bc25bff-4081-11e6-9480-a99e37134132","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:361","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.boolean[][i]) {\n    c = (c >>> 2) | (c << 26);\n    d = (d >>> 2) | (d << 26);\n} else {\n    c = (c >>> 1) | (c << 27);\n    d = (d >>> 1) | (d << 27);\n}"},"status":-2},{"failures":[5,6,7,8,9,10,11],"tindex":"1bc25c00-4081-11e6-9480-73dde122ccb8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:87","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('>')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:107","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet.set(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":-1},{"failures":[],"tindex":"1bc28311-4081-11e6-9480-cb7fa2e432d1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:293","type":"CtAssignmentImpl","sourcecode":"this.byte[] = null"},"status":-2},{"failures":[12,13,14],"tindex":"1bc28312-4081-11e6-9480-d1111f17b30d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:469","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[0], altResult[21], altResult[42], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:485","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[37], altResult[58], altResult[16], 4, buffer)"},"status":-1},{"failures":[15],"tindex":"1bc28313-4081-11e6-9480-95893267876c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:296","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md5(data))"},"variableMap":{"data":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:602","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha384(key, valueToDigest))"},"status":-1},{"failures":[0,16,17,1,2,18,3,19,4],"tindex":"1bc28314-4081-11e6-9480-411d658eeb18","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String"},"variableMap":{"org.apache.commons.codec.language.Caverphone1.SIX_1":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:896","type":"CtReturnImpl","sourcecode":"return input.toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale)"},"status":-1},{"failures":[20,21],"tindex":"1bc2aa25-4081-11e6-9480-0bde3a830ae7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:106","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"r3\", \"R3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:108","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"r\", \"2\")"},"status":-1},{"failures":[22,23,24,25,26],"tindex":"1bc2aa26-4081-11e6-9480-3355caed203f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:183","type":"CtInvocationImpl","sourcecode":"buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"variableMap":{"org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR":"org.apache.commons.codec.net.URLCodec.ESCAPE_CHAR","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:141","type":"CtInvocationImpl","sourcecode":"buffer.write(org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.byte)"},"status":-1},{"failures":[],"tindex":"1bc2aa27-4081-11e6-9480-03007f039fc0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"variableMap":{"terminator":"length","to":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:433","type":"CtForImpl","sourcecode":"for (int int = 0 ; index < (chrs.int) ; index++) {\n    if ((chrs[index]) > 'Z') {\n        for (final char[] char[] : org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[][]) {\n            if ((chrs[index]) == (element[0])) {\n                chrs[index] = element[1];\n                break;\n            } \n        }\n    } \n}"},"status":-2},{"failures":[],"tindex":"1bc2d138-4081-11e6-9480-dfcf0d5b19cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:286","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[3], finalb[9], finalb[15], 4, passwd)"},"variableMap":{"finalb":"altResult","passwd":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:473","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[25], altResult[46], altResult[4], 4, buffer)"},"status":-2},{"failures":[],"tindex":"1bc2d139-4081-11e6-9480-7b4d6fef03f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:82","type":"CtAssignmentImpl","sourcecode":"this.char[] = org.apache.commons.codec.language.Soundex.org.apache.commons.codec.language.Soundex.char[]"},"variableMap":{"org.apache.commons.codec.language.Soundex.US_ENGLISH_MAPPING":"data","soundexMapping":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:207","type":"CtAssignmentImpl","sourcecode":"this.char[] = data"},"status":-2},{"failures":[27,28],"tindex":"1bc2d13a-4081-11e6-9480-d3aed78702b7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:177","type":"CtIfImpl","sourcecode":"if (digit == (-1)) {\n    throw new org.apache.commons.codec.DecoderException((((\"Illegal hexadecimal character \" + ch) + \" at index \") + index));\n} "},"status":-1},{"failures":[],"tindex":"1bc2d13b-4081-11e6-9480-391b89c09969","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.StringEncoderComparator:88","type":"CtReturnImpl","sourcecode":"return compareCode"},"variableMap":{"compareCode":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:544","type":"CtReturnImpl","sourcecode":"return index"},"status":-2},{"failures":[],"tindex":"1bc2f84c-4081-11e6-9480-cffb90164efa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:87","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('>')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:79","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('.')"},"status":0},{"failures":[],"tindex":"1bc2f84d-4081-11e6-9480-9f36584ca297","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:414","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to DaitchMokotoffSoundex encode is not of type java.lang.String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:671","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((\"Input array too big, the output array would be bigger (\" + len) + \") than the specified maximum size of \") + maxResultSize))"},"status":-2},{"failures":[19,4],"tindex":"1bc2f84e-4081-11e6-9480-1d809e328cd3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:805","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"1bc31f5f-4081-11e6-9480-75b48acfe690","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:389","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((context.int) >> 6) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))]"},"variableMap":{"encodeTable":"encodeTable","ibitWorkArea":"pos","pos":"pos","context":"context","org.apache.commons.codec.binary.Base64.MASK_6BITS":"pos","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:509","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 35))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))]"},"status":-2},{"failures":[],"tindex":"1bc31f60-4081-11e6-9480-bde5fb6cfc3c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:209","type":"CtOperatorAssignmentImpl","sourcecode":"n += 2"},"variableMap":{"n":"org.apache.commons.codec.binary.Base32.BYTES_PER_UNENCODED_BLOCK"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:502","type":"CtAssignmentImpl","sourcecode":"context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int)"},"status":-2},{"failures":[],"tindex":"1bc31f61-4081-11e6-9480-e3a14010ad8e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:125","type":"CtIfImpl","sourcecode":"if (urlsafe == null) {\n    urlsafe = org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet;\n} "},"variableMap":{"urlsafe":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS","org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:93","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('\\\\')"},"status":-2},{"failures":[29],"tindex":"1bc31f62-4081-11e6-9480-bb8625e488e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:74","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(')')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:82","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(i)"},"status":-1},{"failures":[],"tindex":"1bc34673-4081-11e6-9480-713f98f7b142","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:117","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"2\", \"\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:96","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"3gh3\", \"3kh3\")"},"status":0},{"failures":[],"tindex":"1bc34674-4081-11e6-9480-4d86b0a816b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:42","type":"CtIfImpl","sourcecode":"if ((str == null) || ((str.length()) == 0)) {\n    return str;\n} "},"variableMap":{"str":"accentedWord"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:352","type":"CtIfImpl","sourcecode":"if (accentedWord == null) {\n    return null;\n} "},"status":-2},{"failures":[30,7,8,9,11],"tindex":"1bc34675-4081-11e6-9480-eb040154d1ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:312","type":"CtIfImpl","sourcecode":"if (pos > ((org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.int) - 2)) {\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n} "},"variableMap":{"org.apache.commons.codec.net.QuotedPrintableCodec.LF":"org.apache.commons.codec.net.QuotedPrintableCodec.LF","pos":"b","org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR":"org.apache.commons.codec.net.QuotedPrintableCodec.LF","buffer":"buffer","org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH":"b","org.apache.commons.codec.net.QuotedPrintableCodec.CR":"org.apache.commons.codec.net.QuotedPrintableCodec.LF"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:288","type":"CtIfImpl","sourcecode":"if (pos < (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.int)) {\n    pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!(printable.get(b))), buffer);\n} else {\n    org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, ((!(printable.get(b))) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b))), buffer);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n    pos = 1;\n}"},"status":-1},{"failures":[31,32,33,34,35,36,37],"tindex":"1bc36d86-4081-11e6-9480-756cf189476f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:200","type":"CtInvocationImpl","sourcecode":"altCtx.update(saltBytes)"},"variableMap":{"altCtx":"digest","saltBytes":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:797","type":"CtInvocationImpl","sourcecode":"digest.update(buffer, 0, read)"},"status":-1},{"failures":[],"tindex":"1bc36d87-4081-11e6-9480-dded9c5a2859","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:42","type":"CtIfImpl","sourcecode":"if ((str == null) || ((str.length()) == 0)) {\n    return str;\n} "},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:270","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":0},{"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"tindex":"1bc36d88-4081-11e6-9480-dd3c0eaf7f37","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:185","type":"CtAssignmentImpl","sourcecode":"inExtendedComment = false"},"status":-1},{"failures":[],"tindex":"1bc36d89-4081-11e6-9480-2d5011316638","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:89","type":"CtIfImpl","sourcecode":"if ((salt != null) && (!(salt.startsWith(org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String)))) {\n    salt = (org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + salt;\n} "},"variableMap":{"salt":"str","org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:272","type":"CtWhileImpl","sourcecode":"while ((incount < (str.length())) && (count < (out.int))) {\n    mapped = getMappingCode(str, (incount++));\n    if (mapped != 0) {\n        if ((mapped != '0') && (mapped != last)) {\n            out[(count++)] = mapped;\n        } \n        last = mapped;\n    } \n}"},"status":-2},{"failures":[43,50,51,52,53],"tindex":"1bc3949a-4081-11e6-9480-6f2c5ec6638a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:510","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return (input.length()) == 0;\n    }\n}"},"variableMap":{"input":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:569","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return ((input.length()) > 0) && ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch);\n    }\n}"},"status":-1},{"failures":[54,55,56,57,58],"tindex":"1bc3949b-4081-11e6-9480-b99b44665783","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:230","type":"CtAssignmentImpl","sourcecode":"b[8] = 0"},"variableMap":{"b":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:217","type":"CtAssignmentImpl","sourcecode":"key[i] = 0"},"status":-1},{"failures":[35],"tindex":"1bc3949c-4081-11e6-9480-c15655ec6cc4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:567","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.hmacSha384(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"variableMap":{"valueToDigest":"data","key":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:579","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha384(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"status":-1},{"failures":[],"tindex":"1bc3949d-4081-11e6-9480-a9243dbdf264","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.B64:73","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:423","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(saltPrefix)"},"status":-2},{"failures":[],"tindex":"1bc3949e-4081-11e6-9480-71b7a3e25071","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:163","type":"CtIfImpl","sourcecode":"if ((curr == 'W') && (org.apache.commons.codec.language.Nysiis.isVowel(prev))) {\n    return new char[]{ prev };\n} "},"variableMap":{"prev":"curr","curr":"curr"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:167","type":"CtReturnImpl","sourcecode":"return new char[]{ curr }"},"status":-2},{"failures":[],"tindex":"1bc3bbaf-4081-11e6-9480-93c20ce3e601","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"b","to":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"status":-2},{"failures":[59],"tindex":"1bc3bbb0-4081-11e6-9480-e9b5023bdc18","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:271","type":"CtLocalVariableImpl","sourcecode":"final int int = line.indexOf(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)"},"variableMap":{"line":"text","org.apache.commons.codec.language.DaitchMokotoffSoundex.COMMENT":"text"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:132","type":"CtLocalVariableImpl","sourcecode":"final int int = (text.length()) - 2"},"status":-1},{"failures":[],"tindex":"1bc3bbb1-4081-11e6-9480-2b2dfa0d13af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:208","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:138","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[60,61],"tindex":"1bc3bbb2-4081-11e6-9480-5d30e1b409dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:496","type":"CtIfImpl","sourcecode":"if (arrayOctet == null) {\n    return false;\n} "},"variableMap":{"arrayOctet":"arrayOctet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:499","type":"CtForEachImpl","sourcecode":"for (final byte byte : arrayOctet) {\n    if (((byte) == element) || (isInAlphabet(element))) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"1bc3bbb3-4081-11e6-9480-a92d5afad319","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:189","type":"CtAssignmentImpl","sourcecode":"inExtendedComment = true"},"variableMap":{"inExtendedComment":"eof"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:349","type":"CtAssignmentImpl","sourcecode":"context.boolean = true"},"status":-2},{"failures":[62,63,64,65,66,67,68],"tindex":"1bc3bbb4-4081-11e6-9480-5bab23550902","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:120","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"2\", \"\")"},"status":-1},{"failures":[],"tindex":"1bc3bbb5-4081-11e6-9480-177809ffb619","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:332","type":"CtIfImpl","sourcecode":"if (str.startsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    str = str.substring(1);\n} "},"variableMap":{"str":"str","org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE":"org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:613","type":"CtIfImpl","sourcecode":"if (str.startsWith(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n    str = str.substring(1);\n} "},"status":-2},{"failures":[],"tindex":"1bc3e2c6-4081-11e6-9480-016d173f9f5f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:415","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"U\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"name":"txt","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:66","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"mb$\", \"m2\")"},"status":-2},{"failures":[],"tindex":"1bc3e2c7-4081-11e6-9480-ad7d123a9b45","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:126","type":"CtAssignmentImpl","sourcecode":"urlsafe = org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet"},"variableMap":{"urlsafe":"printable","org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:278","type":"CtAssignmentImpl","sourcecode":"printable = org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet"},"status":-2},{"failures":[],"tindex":"1bc3e2c8-4081-11e6-9480-15c90874b45f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:142","type":"CtAssignmentImpl","sourcecode":"from = to + 1"},"variableMap":{"from":"t","to":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:375","type":"CtAssignmentImpl","sourcecode":"schedule[(j++)] = (t << 16) | (s & 65535)"},"status":-2},{"failures":[],"tindex":"1bc3e2c9-4081-11e6-9480-95830dddc875","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"rightLength","name2Size":"rightLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:338","type":"CtWhileImpl","sourcecode":"while (rightLength > 0) {\n    chr = input.removeNext();\n    if ((rightLength = input.length()) > 0) {\n        nextChar = input.getNextChar();\n    } else {\n        nextChar = '-';\n    }\n    if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], chr)) {\n        code = '0';\n    } else if (((chr == 'H') || (chr < 'A')) || (chr > 'Z')) {\n        if (lastCode == '/') {\n            continue;\n        } \n        code = '-';\n    } else if ((chr == 'B') || ((chr == 'P') && (nextChar != 'H'))) {\n        code = '1';\n    } else if (((chr == 'D') || (chr == 'T')) && (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)))) {\n        code = '2';\n    } else if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], chr)) {\n        code = '3';\n    } else if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], chr)) {\n        code = '4';\n    } else if ((chr == 'X') && (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], lastChar)))) {\n        code = '4';\n        input.addLeft('S');\n        rightLength++;\n    } else if ((chr == 'S') || (chr == 'Z')) {\n        code = '8';\n    } else if (chr == 'C') {\n        if (lastCode == '/') {\n            if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)) {\n                code = '4';\n            } else {\n                code = '8';\n            }\n        } else {\n            if ((org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], lastChar)) || (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)))) {\n                code = '8';\n            } else {\n                code = '4';\n            }\n        }\n    } else if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], chr)) {\n        code = '8';\n    } else if (chr == 'R') {\n        code = '7';\n    } else if (chr == 'L') {\n        code = '5';\n    } else if ((chr == 'M') || (chr == 'N')) {\n        code = '6';\n    } else {\n        code = chr;\n    }\n    if ((code != '-') && ((((lastCode != code) && ((code != '0') || (lastCode == '/'))) || (code < '0')) || (code > '8'))) {\n        output.addRight(code);\n    } \n    lastChar = chr;\n    lastCode = code;\n}"},"status":-2},{"failures":[54,58],"tindex":"1bc409da-4081-11e6-9480-3526319eb74f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:235","type":"CtAssignmentImpl","sourcecode":"ii = keyLen"},"variableMap":{"ii":"left","keyLen":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:307","type":"CtAssignmentImpl","sourcecode":"left = results[1]"},"status":-1},{"failures":[1,19,4],"tindex":"1bc409db-4081-11e6-9480-df6a9c1f5b04","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:690","type":"CtInvocationImpl","sourcecode":"result.append('0', 'T')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:450","type":"CtInvocationImpl","sourcecode":"result.append('J', 'K')"},"status":-1},{"failures":[54,58],"tindex":"1bc409dc-4081-11e6-9480-738a7cfac8d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:369","type":"CtOperatorAssignmentImpl","sourcecode":"d &= 268435455"},"variableMap":{"d":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:313","type":"CtAssignmentImpl","sourcecode":"left = results[1]"},"status":-1},{"failures":[],"tindex":"1bc409dd-4081-11e6-9480-5b0d9ae1d4de","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:280","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator)"},"status":-2},{"failures":[69,70,71,72,73,74,75,76,77,78,15,79,80,81,82,83,84,85,86,87],"tindex":"1bc409de-4081-11e6-9480-2f2b91e934fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:63","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(org.apache.commons.codec.digest.HmacAlgorithms.org.apache.commons.codec.digest.HmacAlgorithms.org.apache.commons.codec.digest.HmacAlgorithms, key)"},"variableMap":{"org.apache.commons.codec.digest.HmacAlgorithms.HMAC_MD5":"algorithm","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:155","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(algorithm.toString(), key)"},"status":-1},{"failures":[88,89,90,91],"tindex":"1bc409df-4081-11e6-9480-4beecdecbfef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:505","type":"CtOperatorAssignmentImpl","sourcecode":"b += 256"},"status":-1},{"failures":[],"tindex":"1bc430f0-4081-11e6-9480-7d4b3a6ee114","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:151","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Soundex encode is not of type java.lang.String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:205","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt))"},"status":-2},{"failures":[],"tindex":"1bc430f1-4081-11e6-9480-351b232997d3","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:295","type":"CtAssignmentImpl","sourcecode":"this.int = (org.apache.commons.codec.binary.Base64.this.int) - 1"},"variableMap":{"encodeSize":"b","decodeSize":"t"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:408","type":"CtOperatorAssignmentImpl","sourcecode":"b ^= t"},"status":-2},{"failures":[],"tindex":"1bc430f2-4081-11e6-9480-b3b31e25148d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:187","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int = i"},"variableMap":{"i":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:362","type":"CtAssignmentImpl","sourcecode":"c = (c >>> 2) | (c << 26)"},"status":-2},{"failures":[1,2,19,4],"tindex":"1bc430f3-4081-11e6-9480-697337528cf8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:785","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"1bc430f4-4081-11e6-9480-9514b71a2cc1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:180","type":"CtReturnImpl","sourcecode":"return digit"},"variableMap":{"digit":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:325","type":"CtReturnImpl","sourcecode":"return index"},"status":-2},{"failures":[],"tindex":"1bc430f5-4081-11e6-9480-55ac1de8d609","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"cnt","to":"blocksize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:223","type":"CtWhileImpl","sourcecode":"while (cnt > blocksize) {\n    ctx.update(altResult, 0, blocksize);\n    cnt -= blocksize;\n}"},"status":-2},{"failures":[],"tindex":"1bc45806-4081-11e6-9480-9dc153f1a8cd","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:923","type":"CtAssignmentImpl","sourcecode":"result = true"},"variableMap":{"result":"inExtendedComment"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:189","type":"CtAssignmentImpl","sourcecode":"inExtendedComment = true"},"status":0},{"failures":[92,93,94,95,96,97],"tindex":"1bc45807-4081-11e6-9480-25bdf7110db3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:83","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(raw)"},"variableMap":{"raw":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:96","type":"CtReturnImpl","sourcecode":"return out"},"status":-1},{"failures":[19,4],"tindex":"1bc45808-4081-11e6-9480-e1815e4ad50e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:389","type":"CtOperatorAssignmentImpl","sourcecode":"index += 3"},"status":-1},{"failures":[],"tindex":"1bc45809-4081-11e6-9480-43fa3043ed93","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:129","type":"CtIfImpl","sourcecode":"if ((!(text.startsWith(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String))) || (!(text.endsWith(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String)))) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\");\n} "},"variableMap":{"org.apache.commons.codec.net.RFC1522Codec.POSTFIX":"target","org.apache.commons.codec.net.RFC1522Codec.PREFIX":"target","text":"target"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:921","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : criteria) {\n    if (target.equals(element)) {\n        result = true;\n        break;\n    } \n}"},"status":-2},{"failures":[],"tindex":"1bc4580a-4081-11e6-9480-57f8a71c59e9","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:231","type":"CtLocalVariableImpl","sourcecode":"int int = 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:251","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"1bc4580b-4081-11e6-9480-7700ae14a1a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:387","type":"CtIfImpl","sourcecode":"if (replacedName.contains(dc)) {\n    final java.lang.String java.lang.String = dc.substring(0, 1);\n    replacedName = replacedName.replace(dc, singleLetter);\n} "},"variableMap":{"replacedName":"org.apache.commons.codec.language.MatchRatingApproachEncoder.PLAIN_ASCII","dc":"org.apache.commons.codec.language.MatchRatingApproachEncoder.PLAIN_ASCII"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:362","type":"CtIfImpl","sourcecode":"if (pos > (-1)) {\n    sb.append(org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.charAt(pos));\n} else {\n    sb.append(c);\n}"},"status":-2},{"failures":[1,2,19,4],"tindex":"1bc4580c-4081-11e6-9480-05810412d258","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:502","type":"CtInvocationImpl","sourcecode":"result.append('H')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:458","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-1},{"failures":[98,99,100,29,101],"tindex":"1bc47f1d-4081-11e6-9480-91e35ebf9529","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:621","type":"CtReturnImpl","sourcecode":"return str"},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:211","type":"CtReturnImpl","sourcecode":"return encodeText(str, charset)"},"status":-1},{"failures":[],"tindex":"1bc47f1e-4081-11e6-9480-8b1d7ef9405d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:128","type":"CtReturnImpl","sourcecode":"return txt.substring(0, org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String.length())"},"variableMap":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"salt","txt":"salt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Crypt:75","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.UnixCrypt.crypt(keyBytes, salt)"},"status":-2},{"failures":[],"tindex":"1bc47f1f-4081-11e6-9480-07700b0f2a3f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:278","type":"CtAssignmentImpl","sourcecode":"last = mapped"},"variableMap":{"last":"chr","mapped":"chr"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:339","type":"CtAssignmentImpl","sourcecode":"chr = input.removeNext()"},"status":-2},{"failures":[102,12,13,14,103,104,105,106],"tindex":"1bc47f20-4081-11e6-9480-658a57f9cb1d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:211","type":"CtInvocationImpl","sourcecode":"ctx.update(saltBytes)"},"variableMap":{"ctx":"altCtx","saltBytes":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:275","type":"CtForImpl","sourcecode":"for (int int = 1 ; i <= keyLen ; i++) {\n    altCtx.update(keyBytes);\n}"},"status":-1},{"failures":[],"tindex":"1bc47f21-4081-11e6-9480-45b7f9fe00c5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:142","type":"CtAssignmentImpl","sourcecode":"name = getFirst3Last3(name)"},"status":0},{"failures":[],"tindex":"1bc47f22-4081-11e6-9480-59ebb8afaa4b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:284","type":"CtReturnImpl","sourcecode":"return \"ANY_LANGUAGE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:150","type":"CtReturnImpl","sourcecode":"return (\"Languages(\" + (java.util.Set<java.lang.String>.toString())) + \")\""},"status":-2},{"failures":[],"tindex":"1bc4a633-4081-11e6-9480-b356542db13c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"currentLinePos","y":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:518","type":"CtIfImpl","sourcecode":"if (((int) > 0) && ((int) <= (context.int))) {\n    java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int);\n    context.int += byte[].int;\n    context.int = 0;\n} "},"status":-2},{"failures":[107,108,109,110,111,112],"tindex":"1bc4a634-4081-11e6-9480-2155a0706a4e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:143","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit((b & 15), org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.int))"},"variableMap":{"b":"index","org.apache.commons.codec.net.URLCodec.RADIX":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:190","type":"CtLocalVariableImpl","sourcecode":"final char char = str.charAt((index - 2))"},"status":-1},{"failures":[],"tindex":"1bc4a635-4081-11e6-9480-112a0eb995b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:155","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(algorithm.toString(), key)"},"variableMap":{"key":"key","algorithm":"org.apache.commons.codec.digest.HmacAlgorithms.HMAC_SHA_384"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:117","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(org.apache.commons.codec.digest.HmacAlgorithms.org.apache.commons.codec.digest.HmacAlgorithms.org.apache.commons.codec.digest.HmacAlgorithms, key)"},"status":-2},{"failures":[113,114,102,12,13,14,115,103,104,105,116,106],"tindex":"1bc4a636-4081-11e6-9480-23250c12cd37","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:368","type":"CtIfImpl","sourcecode":"if (!(ph.endsWith(\"]\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\");\n} "},"variableMap":{"ph":"salt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:146","type":"CtIfImpl","sourcecode":"if ((m == null) || (!(m.find()))) {\n    throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n} "},"status":-1},{"failures":[],"tindex":"1bc4a637-4081-11e6-9480-23b3ced48a01","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"status":-2},{"failures":[],"tindex":"1bc4a638-4081-11e6-9480-3981dcf17ac4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"len","len":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:92","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.codec.binary.BaseNCodec.encode(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context);\n} else {\n    org.apache.commons.codec.binary.BaseNCodec.decode(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context);\n}"},"status":-2},{"failures":[98,100,117,101,118,5,6,119,30,120,7,121,122],"tindex":"1bc4cd49-4081-11e6-9480-691c3d930c07","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"i","len":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:360","type":"CtTryImpl","sourcecode":"try {\n    if ((bytes[(++i)]) == (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)) {\n        continue;\n    } \n    final int int = org.apache.commons.codec.net.Utils.digit16(bytes[i]);\n    final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)]);\n    buffer.write(((char)((u << 4) + l)));\n} catch (final java.lang.ArrayIndexOutOfBoundsException e) {\n    throw new org.apache.commons.codec.DecoderException(\"Invalid quoted-printable encoding\" , e);\n}"},"status":-1},{"failures":[],"tindex":"1bc4cd4a-4081-11e6-9480-1954971fa0ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:347","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], chr)) {\n    code = '0';\n} else if (((chr == 'H') || (chr < 'A')) || (chr > 'Z')) {\n    if (lastCode == '/') {\n        continue;\n    } \n    code = '-';\n} else if ((chr == 'B') || ((chr == 'P') && (nextChar != 'H'))) {\n    code = '1';\n} else if (((chr == 'D') || (chr == 'T')) && (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)))) {\n    code = '2';\n} else if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], chr)) {\n    code = '3';\n} else if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], chr)) {\n    code = '4';\n} else if ((chr == 'X') && (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], lastChar)))) {\n    code = '4';\n    input.addLeft('S');\n    rightLength++;\n} else if ((chr == 'S') || (chr == 'Z')) {\n    code = '8';\n} else if (chr == 'C') {\n    if (lastCode == '/') {\n        if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)) {\n            code = '4';\n        } else {\n            code = '8';\n        }\n    } else {\n        if ((org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], lastChar)) || (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)))) {\n            code = '8';\n        } else {\n            code = '4';\n        }\n    }\n} else if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], chr)) {\n    code = '8';\n} else if (chr == 'R') {\n    code = '7';\n} else if (chr == 'L') {\n    code = '5';\n} else if ((chr == 'M') || (chr == 'N')) {\n    code = '6';\n} else {\n    code = chr;\n}"},"status":-2},{"failures":[12,13,14],"tindex":"1bc4cd4b-4081-11e6-9480-91da9d56ec2b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:485","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[37], altResult[58], altResult[16], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:479","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[31], altResult[52], altResult[10], 4, buffer)"},"status":-1},{"failures":[123,124,125,126,127],"tindex":"1bc4cd4c-4081-11e6-9480-ff0d17254a92","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:275","type":"CtInvocationImpl","sourcecode":"code.append('F')"},"variableMap":{"code":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:311","type":"CtInvocationImpl","sourcecode":"key.deleteCharAt(((key.length()) - 1))"},"status":-1},{"failures":[128,129,130,131,132,133],"tindex":"1bc4cd4d-4081-11e6-9480-4bcbb992bff1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:532","type":"CtIfImpl","sourcecode":"if (branching) {\n    nextBranches.add(nextBranch);\n} else {\n    break;\n}"},"status":-1},{"failures":[54,58],"tindex":"1bc4f45e-4081-11e6-9480-b95e103476dc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:295","type":"CtAssignmentImpl","sourcecode":"this.int = (org.apache.commons.codec.binary.Base64.this.int) - 1"},"variableMap":{"encodeSize":"d","decodeSize":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:366","type":"CtAssignmentImpl","sourcecode":"d = (d >>> 1) | (d << 27)"},"status":-1},{"failures":[1,19,4],"tindex":"1bc4f45f-4081-11e6-9480-31fdf14a0cfb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:455","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-1},{"failures":[134,135,136],"tindex":"1bc4f460-4081-11e6-9480-759aad82d19a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:141","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    throw new java.lang.IllegalArgumentException(\"Salt must not be null\");\n} "},"variableMap":{"salt":"replacedName"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:386","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String[]) {\n    if (replacedName.contains(dc)) {\n        final java.lang.String java.lang.String = dc.substring(0, 1);\n        replacedName = replacedName.replace(dc, singleLetter);\n    } \n}"},"status":-1},{"failures":[1,2,19,4],"tindex":"1bc4f461-4081-11e6-9480-d3f5e76c3bf1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:654","type":"CtInvocationImpl","sourcecode":"result.append(\"X\", \"SK\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:560","type":"CtInvocationImpl","sourcecode":"result.append('L')"},"status":-1},{"failures":[],"tindex":"1bc4f462-4081-11e6-9480-a1d75303bb16","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:361","type":"CtAssignmentImpl","sourcecode":"code = '4'"},"status":-2},{"failures":[137,138,123,139,124,140,141,142,143,144,125,145,146,147,148,126,149,150,127,151,152,153,154,155,156,157,158,159,160,107,108,161,162,163,164,165,166,167,109,168,169,170,171,110,111,112],"tindex":"1bc4f463-4081-11e6-9480-993987a3c142","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:242","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(char[], start, newData, 0, length)"},"variableMap":{"data":"chars","start":"count","length":"len","newData":"chars"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:48","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < len ; i++) {\n    if (java.lang.Character.isLetter(str.charAt(i))) {\n        chars[(count++)] = str.charAt(i);\n    } \n}"},"status":-1},{"failures":[],"tindex":"1bc51b74-4081-11e6-9480-5d0cf0548030","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:140","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:208","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = (lineLength > 0) && (chunkSeparatorLength > 0)"},"status":-2},{"failures":[128,129,130,131,132,172,173,174,133],"tindex":"1bc51b75-4081-11e6-9480-f115fe3416d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:617","type":"CtIfImpl","sourcecode":"if (str.endsWith(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n    str = str.substring(0, ((str.length()) - 1));\n} "},"variableMap":{"str":"org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE","org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:336","type":"CtIfImpl","sourcecode":"if (str.endsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    str = str.substring(0, ((str.length()) - 1));\n} "},"status":-1},{"failures":[],"tindex":"1bc51b76-4081-11e6-9480-4511b1fd742a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:273","type":"CtReturnImpl","sourcecode":"return index + 1"},"variableMap":{"index":"minRating"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:199","type":"CtReturnImpl","sourcecode":"return minRating"},"status":-2},{"failures":[],"tindex":"1bc51b77-4081-11e6-9480-d1f3a371dfc7","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:385","type":"CtAssignmentImpl","sourcecode":"context.int = ((context.int) << 8) + b"},"variableMap":{"ibitWorkArea":"currentLinePos","b":"currentLinePos","context":"context"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:517","type":"CtOperatorAssignmentImpl","sourcecode":"context.int += org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int"},"status":-2},{"failures":[175],"tindex":"1bc51b78-4081-11e6-9480-771f408fb3f7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:130","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:175","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Unable to resolve required resource: \" + languagesResourceName))"},"status":-1},{"failures":[],"tindex":"1bc51b79-4081-11e6-9480-198aa0b95283","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:315","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = key.toString()"},"status":-2},{"failures":[137,138,123,139,124,140,141,142,143,144,125,145,146,147,126,149,150,127,151,152,153,154,155,157,158,159,160,107,108,161,162,165,166,167,109,168,169,170,171,110,112,176],"tindex":"1bc5428a-4081-11e6-9480-71cb470ff05d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:165","type":"CtReturnImpl","sourcecode":"return firstThree + lastThree"},"variableMap":{"firstThree":"str","lastThree":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:54","type":"CtReturnImpl","sourcecode":"return str.toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale)"},"status":-1},{"failures":[177],"tindex":"1bc5428b-4081-11e6-9480-9fdf4426f11e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:597","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"1bc5428c-4081-11e6-9480-6510fd22e2e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:431","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = text.toCharArray()"},"variableMap":{"text":"name2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:296","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = name2.toCharArray()"},"status":-2},{"failures":[],"tindex":"1bc5428d-4081-11e6-9480-25323ec2d33b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:413","type":"CtIfImpl","sourcecode":"if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n    inMultilineComment = false;\n} "},"variableMap":{"org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_END":"inputContext","line":"inputContext","inMultilineComment":"branching"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:515","type":"CtIfImpl","sourcecode":"if (rule.matches(inputContext)) {\n    if (branching) {\n        nextBranches.clear();\n    } \n    final java.lang.String[] java.lang.String[] = rule.getReplacements(inputContext, (lastChar == '\u0000'));\n    final boolean boolean = ((replacements.int) > 1) && branching;\n    for (final org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch : currentBranches) {\n        for (final java.lang.String java.lang.String : replacements) {\n            final org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch = branchingRequired ? branch.createBranch() : branch;\n            final boolean boolean = ((lastChar == 'm') && (ch == 'n')) || ((lastChar == 'n') && (ch == 'm'));\n            nextBranch.processNextReplacement(nextReplacement, force);\n            if (branching) {\n                nextBranches.add(nextBranch);\n            } else {\n                break;\n            }\n        }\n    }\n    if (branching) {\n        currentBranches.clear();\n        currentBranches.addAll(nextBranches);\n    } \n    index += (rule.getPatternLength()) - 1;\n    break;\n} "},"status":-2},{"failures":[],"tindex":"1bc5699e-4081-11e6-9480-cd047f1d5021","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:277","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = str.toCharArray()"},"variableMap":{"str":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:251","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = object instanceof java.lang.String ? ((java.lang.String)(object)).toCharArray() : ((char[])(object))"},"status":-2},{"failures":[],"tindex":"1bc5699f-4081-11e6-9480-cbaba13ec65a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:86","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"BeiderMorseEncoder encode parameter is not of type String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:82","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\")"},"status":-2},{"failures":[178],"tindex":"1bc569a0-4081-11e6-9480-1178018cbe39","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:500","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha256(data))"},"variableMap":{"data":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:335","type":"CtReturnImpl","sourcecode":"return new java.lang.String(bytes , org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-1},{"failures":[179,180,181],"tindex":"1bc569a1-4081-11e6-9480-355535cb663b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:122","type":"CtInvocationImpl","sourcecode":"local.append(inwd)"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}