{"failureDictionary":{"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":57,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":51,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched":93,"org.apache.commons.codec.binary.HexTest.testCustomCharset":138,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch":96,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":29,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testLocaleIndependence":50,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched":92,"org.apache.commons.codec.language.NysiisTest.testSnat":5,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":31,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":42,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":108,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":41,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched":98,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":73,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":71,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":72,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":167,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects":36,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":166,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":3,"org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding":25,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":30,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":74,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":23,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":64,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched":86,"org.apache.commons.codec.language.ColognePhoneticTest.testEncodeEmpty":130,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":60,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":102,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":0,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":171,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":173,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":54,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":157,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":28,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullData":176,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithEmptySalt":145,"org.apache.commons.codec.binary.Base64InputStreamTest.testRead0":103,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":111,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":133,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":82,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":84,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":83,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":123,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithInvalidSalt":146,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":122,"org.apache.commons.codec.language.NysiisTest.testCap":11,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":168,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":56,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched":91,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":158,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":118,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":121,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":80,"org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant":174,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":81,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":117,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":150,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":125,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":61,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":100,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode":32,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":110,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":128,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":140,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":35,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":120,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":1,"org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize":27,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":129,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":172,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable":75,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":40,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":152,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":44,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":59,"org.apache.commons.codec.digest.CryptTest.testCryptWithBytes":175,"org.apache.commons.codec.language.SoundexTest.testBadCharacters":65,"org.apache.commons.codec.language.SoundexTest.testB650":70,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched":88,"org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals":115,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched":85,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":39,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":34,"org.apache.commons.codec.language.SoundexTest.testNewInstance":78,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":55,"org.apache.commons.codec.language.NysiisTest.testTranan":8,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched":94,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":155,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":109,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched":95,"org.apache.commons.codec.language.NysiisTest.testFal":14,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":116,"org.apache.commons.codec.language.NysiisTest.testSnad":4,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched":97,"org.apache.commons.codec.language.ColognePhoneticTest.testLocaleIndependence":131,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall":177,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":62,"org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding":53,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer1":67,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":68,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":69,"org.apache.commons.codec.binary.HexTest.testDencodeEmpty":137,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":143,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":161,"org.apache.commons.codec.language.NysiisTest.testDropBy":6,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter":151,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":46,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact":22,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":43,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":127,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":107,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":63,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":165,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":26,"org.apache.commons.codec.binary.Base64Test.testUUID":142,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":106,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":136,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":163,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":162,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":114,"org.apache.commons.codec.language.NysiisTest.testRule2":16,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":112,"org.apache.commons.codec.language.NysiisTest.testRule1":15,"org.apache.commons.codec.language.NysiisTest.testRule7":19,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":135,"org.apache.commons.codec.language.NysiisTest.testRule6":18,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":33,"org.apache.commons.codec.language.NysiisTest.testRule5":17,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":105,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched":87,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111":147,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":156,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeWithInvalidObject":47,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":159,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":153,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":79,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":21,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException":24,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":141,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty":49,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":139,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt":144,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":9,"org.apache.commons.codec.language.NysiisTest.testBran":20,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":37,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":76,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched":89,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":170,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":148,"org.apache.commons.codec.net.URLCodecTest.testEncodeObjects":119,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":124,"org.apache.commons.codec.binary.Base32InputStreamTest.testRead0":104,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":154,"org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals":126,"org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding":134,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched":90,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":38,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":58,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":66,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":132,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":169,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":164,"org.apache.commons.codec.language.NysiisTest.testDad":12,"org.apache.commons.codec.language.NysiisTest.testOthers":7,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched":99,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":45,"org.apache.commons.codec.language.SoundexTest.testDifference":77,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":10,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":52,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":149,"org.apache.commons.codec.language.NysiisTest.testDan":13,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":113,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":160,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":2,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeNull":48,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":101},"transformations":[{"failures":[],"tindex":"bdce4ed5-418c-11e6-9916-09131210ff28","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:321","type":"CtReturnImpl","sourcecode":"return null"},"status":0},{"failures":[0],"tindex":"bdce75e6-418c-11e6-9916-7da4294b9641","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:508","type":"CtIfImpl","sourcecode":"if ((content.length()) == 0) {\n    return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n        @java.lang.Override\n        public boolean isMatch(final java.lang.CharSequence input) {\n            return (input.length()) == 0;\n        }\n    };\n} else {\n    return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n        @java.lang.Override\n        public boolean isMatch(final java.lang.CharSequence input) {\n            return input.equals(content);\n        }\n    };\n}"},"variableMap":{"input":"input","content":"regex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:589","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(regex);\n\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        final java.util.regex.Matcher java.util.regex.Matcher = java.util.regex.Pattern.matcher(input);\n        return matcher.find();\n    }\n}"},"status":-1},{"failures":[1,2],"tindex":"bdce9cf7-418c-11e6-9916-5b60232ce142","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:974","type":"CtInvocationImpl","sourcecode":"appendPrimary(primary)"},"status":-1},{"failures":[],"tindex":"bdce9cf8-418c-11e6-9916-0de2d9065977","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:893","type":"CtIfImpl","sourcecode":"if ((input.length()) == 0) {\n    return null;\n} "},"variableMap":{"input":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:255","type":"CtIfImpl","sourcecode":"if ((str.length()) == 0) {\n    return str;\n} "},"status":0},{"failures":[3,4,5,6,7,8,9],"tindex":"bdce9cf9-418c-11e6-9916-3fb5ba34ee9a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:148","type":"CtIfImpl","sourcecode":"if (((curr == 'S') && (next == 'C')) && (aNext == 'H')) {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n} "},"variableMap":{"next":"curr","org.apache.commons.codec.language.Nysiis.CHARS_SSS":"org.apache.commons.codec.language.Nysiis.CHARS_G","curr":"curr","aNext":"curr"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:130","type":"CtIfImpl","sourcecode":"if (curr == 'Q') {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n} else if (curr == 'Z') {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n} else if (curr == 'M') {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n} "},"status":-1},{"failures":[10,3,11,12,13,14,15,16,17,18,19,20,4,5,21,6,7,8,9],"tindex":"bdcec40a-418c-11e6-9916-779d8baad438","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:228","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.this.nysiis(str)"},"status":-1},{"failures":[],"tindex":"bdcec40b-418c-11e6-9916-31e31efe9211","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:215","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[8]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:243","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[(raw.int) << 3]"},"status":-2},{"failures":[22,23,24],"tindex":"bdcec40c-418c-11e6-9916-bb019c4ee34e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:161","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.BeiderMorseEncoder.this.org.apache.commons.codec.language.bm.PhoneticEngine = new org.apache.commons.codec.language.bm.PhoneticEngine(org.apache.commons.codec.language.bm.BeiderMorseEncoder.this.org.apache.commons.codec.language.bm.PhoneticEngine.getNameType() , ruleType , org.apache.commons.codec.language.bm.BeiderMorseEncoder.this.org.apache.commons.codec.language.bm.PhoneticEngine.isConcat() , org.apache.commons.codec.language.bm.BeiderMorseEncoder.this.org.apache.commons.codec.language.bm.PhoneticEngine.getMaxPhonemes())"},"status":-1},{"failures":[25],"tindex":"bdceeb1d-418c-11e6-9916-330fe20f3994","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:369","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:295","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(e.getMessage() , e)"},"status":-1},{"failures":[],"tindex":"bdceeb1e-418c-11e6-9916-e5114bf76c91","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.URLCodec:210","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.decodeUrl(bytes)"},"variableMap":{"bytes":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:453","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha256Digest().digest(data)"},"status":-2},{"failures":[2,26],"tindex":"bdceeb1f-418c-11e6-9916-f3f365c82776","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:338","type":"CtInvocationImpl","sourcecode":"result.append(\"KS\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:609","type":"CtInvocationImpl","sourcecode":"result.append('S')"},"status":-1},{"failures":[27,28,29,30],"tindex":"bdceeb20-418c-11e6-9916-5bc640f4eae8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:209","type":"CtReturnImpl","sourcecode":"return n - todo"},"variableMap":{"todo":"len","n":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:523","type":"CtReturnImpl","sourcecode":"return len"},"status":-1},{"failures":[31,32,33,34,35,36,37],"tindex":"bdcf1231-418c-11e6-9916-9bfab6160087","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:92","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('[')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:100","type":"CtForImpl","sourcecode":"for (int int = 33 ; i <= 60 ; i++) {\n    org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet.set(i);\n}"},"status":-1},{"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50],"tindex":"bdcf1232-418c-11e6-9916-5bd9ca4c949e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:268","type":"CtAssignmentImpl","sourcecode":"inMultilineComment = true"},"status":-1},{"failures":[],"tindex":"bdcf1233-418c-11e6-9916-9590982c1669","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:435","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = line.substring(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.lang.String.length()).trim()"},"variableMap":{"org.apache.commons.codec.language.bm.Rule.HASH_INCLUDE":"rawLine","line":"rawLine"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:410","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = rawLine"},"status":-2},{"failures":[],"tindex":"bdcf3944-418c-11e6-9916-2f123d5ad949","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:186","type":"CtInvocationImpl","sourcecode":"buffer.write(hex1)"},"variableMap":{"hex1":"hex2","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:187","type":"CtInvocationImpl","sourcecode":"buffer.write(hex2)"},"status":-2},{"failures":[],"tindex":"bdcf3945-418c-11e6-9916-797bd63c9689","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:124","type":"CtReturnImpl","sourcecode":"return txt.substring(0, org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String.length())"},"variableMap":{"txt":"str","org.apache.commons.codec.language.Caverphone1.SIX_1":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:256","type":"CtReturnImpl","sourcecode":"return str"},"status":0},{"failures":[],"tindex":"bdcf3946-418c-11e6-9916-d1683eeab8b1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:329","type":"CtLocalVariableImpl","sourcecode":"char char"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:331","type":"CtLocalVariableImpl","sourcecode":"char char = '-'"},"status":-2},{"failures":[],"tindex":"bdcf3947-418c-11e6-9916-29eb66fb17d8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:421","type":"CtAssignmentImpl","sourcecode":"index = index + 2"},"variableMap":{"index":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:368","type":"CtOperatorAssignmentImpl","sourcecode":"c &= 268435455"},"status":-2},{"failures":[1,51,2,26],"tindex":"bdcf6058-418c-11e6-9916-873fbdc4a676","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:713","type":"CtInvocationImpl","sourcecode":"result.append('A', 'F')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:399","type":"CtInvocationImpl","sourcecode":"result.append('T')"},"status":-1},{"failures":[],"tindex":"bdcf6059-418c-11e6-9916-2b698603c8d2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:92","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('[')"},"status":0},{"failures":[],"tindex":"bdcf605a-418c-11e6-9916-3ff11b1d932b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:79","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('.')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:92","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('[')"},"status":0},{"failures":[],"tindex":"bdcf605b-418c-11e6-9916-69035a4c824e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:217","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Soundex.this.char[]"},"variableMap":{"soundexMapping":"l_ascii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:287","type":"CtReturnImpl","sourcecode":"return l_ascii"},"status":-2},{"failures":[],"tindex":"bdcf876c-418c-11e6-9916-d79d0e8d4961","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:504","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b += 256;\n} "},"variableMap":{"b":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:360","type":"CtTryImpl","sourcecode":"try {\n    if ((bytes[(++i)]) == (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)) {\n        continue;\n    } \n    final int int = org.apache.commons.codec.net.Utils.digit16(bytes[i]);\n    final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)]);\n    buffer.write(((char)((u << 4) + l)));\n} catch (final java.lang.ArrayIndexOutOfBoundsException e) {\n    throw new org.apache.commons.codec.DecoderException(\"Invalid quoted-printable encoding\" , e);\n}"},"status":-2},{"failures":[],"tindex":"bdcf876d-418c-11e6-9916-b7dc996dbfc6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:187","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int = i"},"variableMap":{"i":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:311","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-2},{"failures":[52,53],"tindex":"bdcf876e-418c-11e6-9916-217672b58092","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:132","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"status":-1},{"failures":[],"tindex":"bdcf876f-418c-11e6-9916-211e652e906e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:361","type":"CtAssignmentImpl","sourcecode":"ctx = org.apache.commons.codec.digest.DigestUtils.getDigest(algorithm)"},"variableMap":{"ctx":"altCtx","algorithm":"algorithm"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:307","type":"CtAssignmentImpl","sourcecode":"altCtx = org.apache.commons.codec.digest.DigestUtils.getDigest(algorithm)"},"status":-2},{"failures":[54],"tindex":"bdcfae80-418c-11e6-9916-c14b3482cc3e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:76","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('+')"},"status":-1},{"failures":[],"tindex":"bdcfae81-418c-11e6-9916-396f316fbd70","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:69","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('$')"},"status":0},{"failures":[],"tindex":"bdcfae82-418c-11e6-9916-29be9035b7c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:266","type":"CtAssignmentImpl","sourcecode":"altCtx = org.apache.commons.codec.digest.DigestUtils.getDigest(algorithm)"},"status":0},{"failures":[],"tindex":"bdcfae83-418c-11e6-9916-bdd86c658b1e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:310","type":"CtIfImpl","sourcecode":"if (lastChar == 'A') {\n    key.deleteCharAt(((key.length()) - 1));\n} "},"variableMap":{"lastChar":"charOne","key":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:212","type":"CtInvocationImpl","sourcecode":"buffer.setCharAt(1, charOne)"},"status":-2},{"failures":[],"tindex":"bdcfae84-418c-11e6-9916-2fca67136347","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:365","type":"CtAssignmentImpl","sourcecode":"c = (c >>> 1) | (c << 27)"},"variableMap":{"c":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:679","type":"CtOperatorAssignmentImpl","sourcecode":"index += 3"},"status":-2},{"failures":[55,56,57,58,59,60,61,62,63,64],"tindex":"bdcfd595-418c-11e6-9916-4d9a1869d9fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:255","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(context.byte[], 0, b, 0, context.byte[].int)"},"variableMap":{"b":"decodeTable","context":"context","length":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS","buffer":"decodeTable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:353","type":"CtIfImpl","sourcecode":"if ((b >= 0) && (b < (org.apache.commons.codec.binary.Base32.this.byte[].int))) {\n    final int int = org.apache.commons.codec.binary.Base32.this.byte[][b];\n    if (result >= 0) {\n        context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int);\n        context.long = ((context.long) << (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int)) + result;\n        if ((context.int) == 0) {\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 32) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 24) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n            buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        } \n    } \n} "},"status":-1},{"failures":[65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84],"tindex":"bdcfd596-418c-11e6-9916-395ce35b1a0b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:275","type":"CtIfImpl","sourcecode":"if ((mapped != '0') && (mapped != last)) {\n    out[(count++)] = mapped;\n} "},"status":-1},{"failures":[85,86,87,88,89,90,91,92,93,94,95,96,97,98,99],"tindex":"bdcffca7-418c-11e6-9916-9d773ac66c75","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:319","type":"CtIfImpl","sourcecode":"if (name1LtRStart.equals(name2RtLStart)) {\n    name1Char[i] = ' ';\n    name2Char[i] = ' ';\n} "},"status":-1},{"failures":[1,2,26],"tindex":"bdcffca8-418c-11e6-9916-7351ee15ae76","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:695","type":"CtAssignmentImpl","sourcecode":"index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"T\", \"D\") ? index + 2 : index + 1"},"variableMap":{"index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:287","type":"CtAssignmentImpl","sourcecode":"index = handleCH(value, result, index)"},"status":-1},{"failures":[],"tindex":"bdcffca9-418c-11e6-9916-0982a06ca3a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"to","len":"terminator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"status":-2},{"failures":[],"tindex":"bdcffcaa-418c-11e6-9916-376367f4a979","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:390","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Metaphone encode is not of type java.lang.String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:286","type":"CtThrowImpl","sourcecode":"throw org.apache.commons.codec.binary.StringUtils.newIllegalStateException(charsetName, e)"},"status":-2},{"failures":[],"tindex":"bdcffcab-418c-11e6-9916-3b1f5e3e7f88","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:362","type":"CtAssignmentImpl","sourcecode":"c = (c >>> 2) | (c << 26)"},"variableMap":{"c":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:452","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-2},{"failures":[],"tindex":"bdcffcac-418c-11e6-9916-19a86ff80127","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:122","type":"CtIfImpl","sourcecode":"if (ascii instanceof char[]) {\n    return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((char[])(ascii)));\n} "},"variableMap":{"ascii":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:528","type":"CtIfImpl","sourcecode":"if (obj == null) {\n    return null;\n} else if (obj instanceof byte[]) {\n    return decode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be quoted-printable decoded\"));\n}"},"status":-2},{"failures":[100],"tindex":"bdd023bd-418c-11e6-9916-913a6b4d6120","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.RuleType:47","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.RuleType.this.java.lang.String"},"variableMap":{"name":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:532","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha256(data))"},"status":-1},{"failures":[],"tindex":"bdd023be-418c-11e6-9916-f3112498d209","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:626","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha384(data))"},"variableMap":{"data":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:247","type":"CtTryImpl","sourcecode":"try {\n    return encode(str, getDefaultCharset());\n} catch (final java.io.UnsupportedEncodingException e) {\n    throw new org.apache.commons.codec.EncoderException(e.getMessage() , e);\n}"},"status":-2},{"failures":[101,102],"tindex":"bdd023bf-418c-11e6-9916-e33a9be129d8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:292","type":"CtAssignmentImpl","sourcecode":"right = t"},"variableMap":{"t":"d","right":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:355","type":"CtAssignmentImpl","sourcecode":"d = results[0]"},"status":-1},{"failures":[38,39,40,41,42],"tindex":"bdd023c0-418c-11e6-9916-d523787ed165","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:540","type":"CtIfImpl","sourcecode":"if (branching) {\n    currentBranches.clear();\n    currentBranches.addAll(nextBranches);\n} "},"status":-1},{"failures":[],"tindex":"bdd023c1-418c-11e6-9916-1315b3d2c3f5","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:111","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Match Rating Approach encoder is not of type java.lang.String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:130","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\")"},"status":-2},{"failures":[],"tindex":"bdd04ad2-418c-11e6-9916-67472c490b2a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone:77","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone.this.caverphone(((java.lang.String)(obj)))"},"variableMap":{"obj":"pObject","this":"pObject"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:114","type":"CtReturnImpl","sourcecode":"return encode(((java.lang.String)(pObject)))"},"status":-2},{"failures":[103,104],"tindex":"bdd04ad3-418c-11e6-9916-29aac585220d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:188","type":"CtReturnImpl","sourcecode":"return 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:136","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[],"tindex":"bdd04ad4-418c-11e6-9916-6b286b2be32f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:240","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.BCodec.this.java.nio.charset.Charset"},"variableMap":{"charset":"charset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:312","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.this.java.nio.charset.Charset"},"status":0},{"failures":[105],"tindex":"bdd04ad5-418c-11e6-9916-eb4f53320fe6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:296","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(keyBytes, ((byte)(0)))"},"variableMap":{"keyBytes":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:182","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (bytes.int) ; i++) {\n    final byte byte = bytes[i];\n    if (b != (org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte)) {\n        tmp[i] = b;\n    } else {\n        tmp[i] = org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte;\n    }\n}"},"status":-1},{"failures":[],"tindex":"bdd04ad6-418c-11e6-9916-4304c9d1ae1e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:141","type":"CtIfImpl","sourcecode":"if ((java.lang.StringBuilder.length()) > (org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.int)) {\n    java.lang.StringBuilder.delete(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.int, java.lang.StringBuilder.length());\n} "},"variableMap":{"org.apache.commons.codec.language.DaitchMokotoffSoundex.MAX_LENGTH":"wdsz","builder":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:155","type":"CtSwitchImpl","sourcecode":"switch (symb) {\n    case 'A' :\n    case 'E' :\n    case 'I' :\n    case 'O' :\n    case 'U' :\n        if (n == 0) {\n            code.append(symb);\n        } \n        break;\n    case 'B' :\n        if ((isPreviousChar(local, n, 'M')) && (isLastChar(wdsz, n))) {\n            break;\n        } \n        code.append(symb);\n        break;\n    case 'C' :\n        if (((isPreviousChar(local, n, 'S')) && (!(isLastChar(wdsz, n)))) && ((org.apache.commons.codec.language.Metaphone.org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(local.charAt((n + 1)))) >= 0)) {\n            break;\n        } \n        if (regionMatch(local, n, \"CIA\")) {\n            code.append('X');\n            break;\n        } \n        if ((!(isLastChar(wdsz, n))) && ((org.apache.commons.codec.language.Metaphone.org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(local.charAt((n + 1)))) >= 0)) {\n            code.append('S');\n            break;\n        } \n        if ((isPreviousChar(local, n, 'S')) && (isNextChar(local, n, 'H'))) {\n            code.append('K');\n            break;\n        } \n        if (isNextChar(local, n, 'H')) {\n            if (((n == 0) && (wdsz >= 3)) && (isVowel(local, 2))) {\n                code.append('K');\n            } else {\n                code.append('X');\n            }\n        } else {\n            code.append('K');\n        }\n        break;\n    case 'D' :\n        if (((!(isLastChar(wdsz, (n + 1)))) && (isNextChar(local, n, 'G'))) && ((org.apache.commons.codec.language.Metaphone.org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(local.charAt((n + 2)))) >= 0)) {\n            code.append('J');\n            n += 2;\n        } else {\n            code.append('T');\n        }\n        break;\n    case 'G' :\n        if ((isLastChar(wdsz, (n + 1))) && (isNextChar(local, n, 'H'))) {\n            break;\n        } \n        if (((!(isLastChar(wdsz, (n + 1)))) && (isNextChar(local, n, 'H'))) && (!(isVowel(local, (n + 2))))) {\n            break;\n        } \n        if ((n > 0) && ((regionMatch(local, n, \"GN\")) || (regionMatch(local, n, \"GNED\")))) {\n            break;\n        } \n        if (isPreviousChar(local, n, 'G')) {\n            hard = true;\n        } else {\n            hard = false;\n        }\n        if (((!(isLastChar(wdsz, n))) && ((org.apache.commons.codec.language.Metaphone.org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(local.charAt((n + 1)))) >= 0)) && (!hard)) {\n            code.append('J');\n        } else {\n            code.append('K');\n        }\n        break;\n    case 'H' :\n        if (isLastChar(wdsz, n)) {\n            break;\n        } \n        if ((n > 0) && ((org.apache.commons.codec.language.Metaphone.org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(local.charAt((n - 1)))) >= 0)) {\n            break;\n        } \n        if (isVowel(local, (n + 1))) {\n            code.append('H');\n        } \n        break;\n    case 'F' :\n    case 'J' :\n    case 'L' :\n    case 'M' :\n    case 'N' :\n    case 'R' :\n        code.append(symb);\n        break;\n    case 'K' :\n        if (n > 0) {\n            if (!(isPreviousChar(local, n, 'C'))) {\n                code.append(symb);\n            } \n        } else {\n            code.append(symb);\n        }\n        break;\n    case 'P' :\n        if (isNextChar(local, n, 'H')) {\n            code.append('F');\n        } else {\n            code.append(symb);\n        }\n        break;\n    case 'Q' :\n        code.append('K');\n        break;\n    case 'S' :\n        if (((regionMatch(local, n, \"SH\")) || (regionMatch(local, n, \"SIO\"))) || (regionMatch(local, n, \"SIA\"))) {\n            code.append('X');\n        } else {\n            code.append('S');\n        }\n        break;\n    case 'T' :\n        if ((regionMatch(local, n, \"TIA\")) || (regionMatch(local, n, \"TIO\"))) {\n            code.append('X');\n            break;\n        } \n        if (regionMatch(local, n, \"TCH\")) {\n            break;\n        } \n        if (regionMatch(local, n, \"TH\")) {\n            code.append('0');\n        } else {\n            code.append('T');\n        }\n        break;\n    case 'V' :\n        code.append('F');\n        break;\n    case 'W' :\n    case 'Y' :\n        if ((!(isLastChar(wdsz, n))) && (isVowel(local, (n + 1)))) {\n            code.append(symb);\n        } \n        break;\n    case 'X' :\n        code.append('K');\n        code.append('S');\n        break;\n    case 'Z' :\n        code.append('S');\n        break;\n    default :\n        break;\n}"},"status":-2},{"failures":[106,105,107,108,109,31,110,32,111,112,33,113],"tindex":"bdd071e7-418c-11e6-9916-1308de19a5cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:373","type":"CtInvocationImpl","sourcecode":"buffer.write(b)"},"status":-1},{"failures":[114],"tindex":"bdd071e8-418c-11e6-9916-d5e02d70df19","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:755","type":"CtReturnImpl","sourcecode":"return bigBytes"},"variableMap":{"bigBytes":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:547","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha384Digest().digest(data)"},"status":-1},{"failures":[],"tindex":"bdd071e9-418c-11e6-9916-1b2608aa4bda","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:231","type":"CtLocalVariableImpl","sourcecode":"int int = 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:404","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"bdd071ea-418c-11e6-9916-13b324bb8ef6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:222","type":"CtIfImpl","sourcecode":"if (encode) {\n    return org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer);\n} else {\n    buffer.write(b);\n    return 1;\n}"},"status":-2},{"failures":[101,102],"tindex":"bdd071eb-418c-11e6-9916-4bd15ade4abf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:244","type":"CtUnaryOperatorImpl","sourcecode":"y++"},"status":-1},{"failures":[],"tindex":"bdd071ec-418c-11e6-9916-354c9025cdbf","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:117","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"2\", \"\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:64","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^enough\", \"enou2f\")"},"status":0},{"failures":[1,51,2,26],"tindex":"bdd098fd-418c-11e6-9916-03397ff05f6f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:522","type":"CtInvocationImpl","sourcecode":"result.append('J', 'H')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:500","type":"CtIfImpl","sourcecode":"if (((index == 0) || (isVowel(charAt(value, (index - 1))))) && (isVowel(charAt(value, (index + 1))))) {\n    result.append('H');\n    index += 2;\n} else {\n    index++;\n}"},"status":-1},{"failures":[115],"tindex":"bdd098fe-418c-11e6-9916-c7ca87b724d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:85","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"z\", \"s\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:114","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"y\", \"2\")"},"status":-1},{"failures":[52,116,117,118,119,120],"tindex":"bdd098ff-418c-11e6-9916-ebacd374dc01","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:88","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('@')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:76","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(i)"},"status":-1},{"failures":[],"tindex":"bdd09900-418c-11e6-9916-dfdcce5240b7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:165","type":"CtReturnImpl","sourcecode":"return data"},"variableMap":{"data":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:258","type":"CtReturnImpl","sourcecode":"return context.byte[]"},"status":-2},{"failures":[121,122,123,124,125,126,127,128,129,130,131],"tindex":"bdd09901-418c-11e6-9916-73b9bea49558","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:254","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"variableMap":{"length":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:275","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"status":-1},{"failures":[30],"tindex":"bdd09902-418c-11e6-9916-b9856abea02f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:518","type":"CtIfImpl","sourcecode":"if (((int) > 0) && ((int) <= (context.int))) {\n    java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int);\n    context.int += byte[].int;\n    context.int = 0;\n} "},"status":-1},{"failures":[],"tindex":"bdd09903-418c-11e6-9916-2dc7baa73d70","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"variableMap":{"terminator":"i","to":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:361","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.boolean[][i]) {\n    c = (c >>> 2) | (c << 26);\n    d = (d >>> 2) | (d << 26);\n} else {\n    c = (c >>> 1) | (c << 27);\n    d = (d >>> 1) | (d << 27);\n}"},"status":-2},{"failures":[2,26],"tindex":"bdd0c014-418c-11e6-9916-6dcf4183f7e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:417","type":"CtInvocationImpl","sourcecode":"result.append(\"N\", \"KN\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:762","type":"CtInvocationImpl","sourcecode":"result.append('J')"},"status":-1},{"failures":[],"tindex":"bdd0c015-418c-11e6-9916-43b39795fb72","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:204","type":"CtAssignmentImpl","sourcecode":"b = 256 + b"},"variableMap":{"b":"chunkSeparatorLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:210","type":"CtAssignmentImpl","sourcecode":"this.int = chunkSeparatorLength"},"status":-2},{"failures":[],"tindex":"bdd0c016-418c-11e6-9916-3123d7bd5ff7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:508","type":"CtIfImpl","sourcecode":"if ((content.length()) == 0) {\n    return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n        @java.lang.Override\n        public boolean isMatch(final java.lang.CharSequence input) {\n            return (input.length()) == 0;\n        }\n    };\n} else {\n    return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n        @java.lang.Override\n        public boolean isMatch(final java.lang.CharSequence input) {\n            return input.equals(content);\n        }\n    };\n}"},"variableMap":{"input":"input","content":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:589","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(regex);\n\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        final java.util.regex.Matcher java.util.regex.Matcher = java.util.regex.Pattern.matcher(input);\n        return matcher.find();\n    }\n}"},"status":-2},{"failures":[],"tindex":"bdd0c017-418c-11e6-9916-df337fc32d69","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:96","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"f+\", \"F\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:76","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"cy\", \"sy\")"},"status":0},{"failures":[],"tindex":"bdd0c018-418c-11e6-9916-a94c1a8330ce","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:94","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^y\", \"A\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:84","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"tia\", \"sia\")"},"status":0},{"failures":[],"tindex":"bdd0c019-418c-11e6-9916-c1756d325fdb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:61","type":"CtAssignmentImpl","sourcecode":"byte[][0] = ((byte)(i))"},"variableMap":{"i":"i","singleByte":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:217","type":"CtAssignmentImpl","sourcecode":"key[i] = 0"},"status":-2},{"failures":[132,133,28,29,134,30,135,136,55,58,62,63,64],"tindex":"bdd0e72a-418c-11e6-9916-65b8e2978793","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:295","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[keyLen]"},"variableMap":{"keyLen":"encodeSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:445","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = ensureBufferSize(int, context)"},"status":-1},{"failures":[101,102],"tindex":"bdd0e72b-418c-11e6-9916-99e0c7690942","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:296","type":"CtOperatorAssignmentImpl","sourcecode":"index += 3"},"variableMap":{"index":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:365","type":"CtAssignmentImpl","sourcecode":"c = (c >>> 1) | (c << 27)"},"status":-1},{"failures":[],"tindex":"bdd0e72c-418c-11e6-9916-f1bab51ffdcc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:287","type":"CtReturnImpl","sourcecode":"return l_ascii"},"variableMap":{"l_ascii":"org.apache.commons.codec.language.Nysiis.CHARS_NN"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:141","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[]"},"status":-2},{"failures":[137,138,139,140,141,142,143],"tindex":"bdd0e72d-418c-11e6-9916-21f727eca609","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"len","to":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"status":-1},{"failures":[144,145,146],"tindex":"bdd0e72e-418c-11e6-9916-e1fedeafef9f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:190","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt))"},"status":-1},{"failures":[147],"tindex":"bdd0e72f-418c-11e6-9916-21a0df22c9ed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:110","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^h\", \"A\")"},"status":-1},{"failures":[],"tindex":"bdd10e40-418c-11e6-9916-d5d6038a5521","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:227","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[9]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:212","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = altCtx.digest()"},"status":-2},{"failures":[],"tindex":"bdd10e41-418c-11e6-9916-29bc2cba9ef1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:70","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ci\", \"si\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:113","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"y3\", \"Y3\")"},"status":0},{"failures":[],"tindex":"bdd10e42-418c-11e6-9916-5f31515483ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:142","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.delete(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.int, java.lang.StringBuilder.length())"},"variableMap":{"org.apache.commons.codec.language.DaitchMokotoffSoundex.MAX_LENGTH":"rounds","builder":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:426","type":"CtInvocationImpl","sourcecode":"buffer.append(rounds)"},"status":-2},{"failures":[],"tindex":"bdd10e43-418c-11e6-9916-41081f2efbb0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:369","type":"CtIfImpl","sourcecode":"if (lastCode == '/') {\n    if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)) {\n        code = '4';\n    } else {\n        code = '8';\n    }\n} else {\n    if ((org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], lastChar)) || (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)))) {\n        code = '8';\n    } else {\n        code = '4';\n    }\n}"},"variableMap":{"org.apache.commons.codec.language.ColognePhonetic.AHKLOQRUX":"out","code":"last","nextChar":"mapped","lastChar":"mapped","lastCode":"mapped","org.apache.commons.codec.language.ColognePhonetic.AHOUKQX":"out","org.apache.commons.codec.language.ColognePhonetic.SZ":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:275","type":"CtIfImpl","sourcecode":"if ((mapped != '0') && (mapped != last)) {\n    out[(count++)] = mapped;\n} "},"status":-2},{"failures":[148,149,150,151,152,153,154,155,156],"tindex":"bdd10e44-418c-11e6-9916-290b2f89be9e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:252","type":"CtInvocationImpl","sourcecode":"code.append('H')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:211","type":"CtInvocationImpl","sourcecode":"code.append('T')"},"status":-1},{"failures":[],"tindex":"bdd10e45-418c-11e6-9916-6b847ef44d72","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:163","type":"CtIfImpl","sourcecode":"if ((curr == 'W') && (org.apache.commons.codec.language.Nysiis.isVowel(prev))) {\n    return new char[]{ prev };\n} "},"variableMap":{"prev":"curr","curr":"curr"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:167","type":"CtReturnImpl","sourcecode":"return new char[]{ curr }"},"status":-2},{"failures":[],"tindex":"bdd13556-418c-11e6-9916-796dc7819284","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:325","type":"CtIfImpl","sourcecode":"if (name1LtREnd.equals(name2RtLEnd)) {\n    name1Char[(name1Size - i)] = ' ';\n    name2Char[(name2Size - i)] = ' ';\n} "},"variableMap":{"name1Char":"out","name1Size":"count","name2RtLEnd":"str","name2Char":"out","i":"incount","name1LtREnd":"str","name2Size":"incount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:272","type":"CtWhileImpl","sourcecode":"while ((incount < (str.length())) && (count < (out.int))) {\n    mapped = getMappingCode(str, (incount++));\n    if (mapped != 0) {\n        if ((mapped != '0') && (mapped != last)) {\n            out[(count++)] = mapped;\n        } \n        last = mapped;\n    } \n}"},"status":-2},{"failures":[],"tindex":"bdd13557-418c-11e6-9916-078eb91dfb05","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:183","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(e.getMessage() , e)"},"variableMap":{"e":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:342","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be URL decoded\"))"},"status":-2},{"failures":[],"tindex":"bdd13558-418c-11e6-9916-5d9f87cfa5df","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:247","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":0},{"failures":[157],"tindex":"bdd13559-418c-11e6-9916-ef385f8f7863","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:116","type":"CtIfImpl","sourcecode":"if (ascii == null) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"status":-1},{"failures":[],"tindex":"bdd1355a-418c-11e6-9916-bd770184951e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:47","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String;\n} "},"variableMap":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"str","txt":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:226","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"bdd1355b-418c-11e6-9916-dfc5b51aebfc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:758","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:421","type":"CtLocalVariableImpl","sourcecode":"final int int = line.indexOf(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)"},"status":-2},{"failures":[],"tindex":"bdd15c6c-418c-11e6-9916-173573ab8053","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:197","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[512]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:157","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[boolean ? 4096 : 8192]"},"status":-2},{"failures":[],"tindex":"bdd15c6d-418c-11e6-9916-f526afc28c26","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:113","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[avail]"},"variableMap":{"avail":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:203","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[(ascii.int) >> 3]"},"status":-2},{"failures":[],"tindex":"bdd15c6e-418c-11e6-9916-d1fb634ab662","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:292","type":"CtIfImpl","sourcecode":"if ((key.length()) > 1) {\n    char char = key.charAt(((key.length()) - 1));\n    if (lastChar == 'S') {\n        key.deleteCharAt(((key.length()) - 1));\n        lastChar = key.charAt(((key.length()) - 1));\n    } \n    if ((key.length()) > 2) {\n        final char char = key.charAt(((key.length()) - 2));\n        if ((last2Char == 'A') && (lastChar == 'Y')) {\n            key.deleteCharAt(((key.length()) - 2));\n        } \n    } \n    if (lastChar == 'A') {\n        key.deleteCharAt(((key.length()) - 1));\n    } \n} "},"variableMap":{"key":"string"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:353","type":"CtIfImpl","sourcecode":"if ((index >= 0) && (index < ((string.length()) - 1))) {\n    matches = (string.charAt((index + 1))) == c;\n} "},"status":-2},{"failures":[],"tindex":"bdd15c6f-418c-11e6-9916-c52341634af9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:68","type":"CtReturnImpl","sourcecode":"return java.security.MessageDigest.getInstance(algorithm)"},"variableMap":{"algorithm":"org.apache.commons.codec.digest.MessageDigestAlgorithms.SHA_256"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:128","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getDigest(org.apache.commons.codec.digest.MessageDigestAlgorithms.org.apache.commons.codec.digest.MessageDigestAlgorithms.java.lang.String)"},"status":-2},{"failures":[121,122,123,124,125,127,128,129],"tindex":"bdd15c70-418c-11e6-9916-db2bde0eb5fb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:208","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.ColognePhonetic.CologneBuffer.this.int = data.int"},"status":-1},{"failures":[],"tindex":"bdd15c71-418c-11e6-9916-018082e2e825","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:284","type":"CtAssignmentImpl","sourcecode":"this.byte[] = org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.byte[]"},"variableMap":{"encodeTable":"org.apache.commons.codec.binary.Base64.STANDARD_ENCODE_TABLE","org.apache.commons.codec.binary.Base32.HEX_ENCODE_TABLE":"org.apache.commons.codec.binary.Base64.STANDARD_ENCODE_TABLE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:296","type":"CtAssignmentImpl","sourcecode":"this.byte[] = urlSafe ? org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[] : org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[]"},"status":-2},{"failures":[],"tindex":"bdd15c72-418c-11e6-9916-057480f38fc5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:208","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:132","type":"CtLocalVariableImpl","sourcecode":"final int int = (text.length()) - 2"},"status":-2},{"failures":[],"tindex":"bdd18383-418c-11e6-9916-5db6d302de18","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:208","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.StringEncoderComparator:77","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[2,26],"tindex":"bdd18384-418c-11e6-9916-fb4865705af2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:281","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:767","type":"CtInvocationImpl","sourcecode":"result.append(\"S\", \"TS\")"},"status":-1},{"failures":[158,159,160,161,23,162,163,164,165,166,167,168,169,170,171,172,0,173],"tindex":"bdd18385-418c-11e6-9916-cd6580608c37","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:617","type":"CtIfImpl","sourcecode":"if (str.endsWith(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n    str = str.substring(0, ((str.length()) - 1));\n} "},"variableMap":{"str":"org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE","org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:613","type":"CtIfImpl","sourcecode":"if (str.startsWith(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n    str = str.substring(1);\n} "},"status":-1},{"failures":[158,159,160,161,23,164,165,166,167,168,169,170,171,172,0,173],"tindex":"bdd18386-418c-11e6-9916-038e9c38e19e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:229","type":"CtInvocationImpl","sourcecode":"rs.put(\"common\", org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(s, rt, \"common\"), org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, \"common\")))"},"status":-1},{"failures":[158,159,160,161,23,164,165,166,167,168,169,170,171,172,0,173],"tindex":"bdd18387-418c-11e6-9916-fb7055e0e29e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:229","type":"CtInvocationImpl","sourcecode":"rs.put(\"common\", org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(s, rt, \"common\"), org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, \"common\")))"},"status":-1},{"failures":[174,175,176,177],"tindex":"bdd18388-418c-11e6-9916-e7875c92a7e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:521","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(keyBytes, null)"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}