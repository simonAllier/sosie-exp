{"failureDictionary":{"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":35,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":126,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testLocaleIndependence":65,"org.apache.commons.codec.language.NysiisTest.testSnat":7,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize":42,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":57,"org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage":80,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":84,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":87,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":0,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":56,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length":110,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":137,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":136,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":26,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":21,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":131,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":43,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":51,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":10,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":143,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":141,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":144,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":74,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":17,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":52,"org.apache.commons.codec.binary.Base64InputStreamTest.testRead0":20,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":89,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":76,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":78,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":109,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":77,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":95,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":94,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":66,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":67,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":138,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":34,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":127,"org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage":79,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":3,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData":69,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":116,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":4,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength":112,"org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean":2,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":50,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":16,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":44,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":101,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":27,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":88,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":99,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":111,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":22,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":114,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":49,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":81,"org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString":118,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":142,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":55,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":106,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":11,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":59,"org.apache.commons.codec.digest.CryptTest.testCryptWithBytes":9,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":41,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":15,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall":70,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":54,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":107,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":85,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":33,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2":125,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":30,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":86,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":115,"org.apache.commons.codec.language.NysiisTest.testSnad":6,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":103,"org.apache.commons.codec.language.ColognePhoneticTest.testLocaleIndependence":100,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall":113,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":45,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":13,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray":119,"org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull":39,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize":29,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":124,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":130,"org.apache.commons.codec.language.NysiisTest.testDropBy":8,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":61,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":58,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":98,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":83,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":135,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":47,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":102,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":82,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":133,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize":28,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":132,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":72,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":90,"org.apache.commons.codec.language.NysiisTest.testRule1":5,"org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds":23,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":91,"org.apache.commons.codec.language.Caverphone1Test.testEndMb":108,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":120,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray":75,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeWithInvalidObject":62,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":128,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":71,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":123,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty":64,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":31,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray":73,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":104,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":140,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":32,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":96,"org.apache.commons.codec.net.URLCodecTest.testEncodeObjects":117,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":18,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":105,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":121,"org.apache.commons.codec.binary.Base32InputStreamTest.testRead0":36,"org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals":97,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":93,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":53,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":40,"org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull":24,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize":37,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":139,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":134,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":12,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":1,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":19,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":68,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":14,"org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds":38,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":60,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":92,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":122,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":129,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":46,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeNull":63,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":25,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":48},"transformations":[{"failures":[],"tindex":"b03f07e8-4118-11e6-968d-59837158cada","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:371","type":"CtReturnImpl","sourcecode":"return (n + 1) == wdsz"},"variableMap":{"wdsz":"index","n":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:782","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"CHIA\")) {\n    return true;\n} else if (index <= 1) {\n    return false;\n} else if (isVowel(charAt(value, (index - 2)))) {\n    return false;\n} else if (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 3, \"ACH\"))) {\n    return false;\n} else {\n    final char char = charAt(value, (index + 2));\n    return ((c != 'I') && (c != 'E')) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, \"BACHER\", \"MACHER\"));\n}"},"status":-2},{"failures":[0,1],"tindex":"b03f5609-4118-11e6-968d-4938631e9e3f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:224","type":"CtInvocationImpl","sourcecode":"ctx.update(altResult, 0, blocksize)"},"status":-1},{"failures":[],"tindex":"b03f560a-4118-11e6-968d-f3a24fe239ed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:463","type":"CtInvocationImpl","sourcecode":"sb.append(\"{line=\").append(int)"},"variableMap":{"myLine":"length","sb":"local"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:120","type":"CtInvocationImpl","sourcecode":"local.append(inwd, 1, ((inwd.int) - 1))"},"status":-2},{"failures":[],"tindex":"b03f560b-4118-11e6-968d-c1148cec8fe9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:301","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(lineSeparator, 0, org.apache.commons.codec.binary.Base32.this.byte[], 0, lineSeparator.int)"},"variableMap":{"length":"length","lineSeparator":"lineSeparator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:286","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(lineSeparator, 0, org.apache.commons.codec.binary.Base64.this.byte[], 0, lineSeparator.int)"},"status":-2},{"failures":[],"tindex":"b03f560c-4118-11e6-968d-87c904dda163","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:212","type":"CtAssignmentImpl","sourcecode":"this.byte = pad"},"status":-2},{"failures":[],"tindex":"b040677d-4118-11e6-968d-f5939a3c0ff2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:768","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(bigBytes, startSrc, resizedBytes, startDst, len)"},"variableMap":{"resizedBytes":"key","bigBytes":"key","len":"length","startSrc":"length","startDst":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; (i < (key.int)) && (i < (original.int)) ; i++) {\n    final int int = original[i];\n    key[i] = ((byte)(iChar << 1));\n}"},"status":-2},{"failures":[2],"tindex":"b0408e8e-4118-11e6-968d-c3663333313b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:357","type":"CtReturnImpl","sourcecode":"return matches"},"variableMap":{"matches":"allowWSPad"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:465","type":"CtIfImpl","sourcecode":"if ((!(isInAlphabet(arrayOctet[i]))) && ((!allowWSPad) || (((arrayOctet[i]) != (byte)) && (!(org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(arrayOctet[i])))))) {\n    return false;\n} "},"status":-1},{"failures":[3,4],"tindex":"b0408e8f-4118-11e6-968d-e587b18d4f5e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:364","type":"CtInvocationImpl","sourcecode":"input.addLeft('S')"},"status":-1},{"failures":[],"tindex":"b0408e90-4118-11e6-968d-13867d9b2bf1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:336","type":"CtIfImpl","sourcecode":"if (str.endsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    str = str.substring(0, ((str.length()) - 1));\n} "},"variableMap":{"str":"cachedString","org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE":"cachedString"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:116","type":"CtWhileImpl","sourcecode":"while ((java.lang.StringBuilder.length()) < (org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.int)) {\n    java.lang.StringBuilder.append('0');\n    java.lang.String = null;\n}"},"status":-2},{"failures":[],"tindex":"b0408e91-4118-11e6-968d-79b51c7d1285","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:236","type":"CtLocalVariableImpl","sourcecode":"final int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:185","type":"CtLocalVariableImpl","sourcecode":"final int int = getPatternLength()"},"status":-2},{"failures":[],"tindex":"b0408e92-4118-11e6-968d-01286fe929a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"blocksize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:249","type":"CtInvocationImpl","sourcecode":"ctx.update(altResult, 0, blocksize)"},"status":-2},{"failures":[],"tindex":"b040b5a3-4118-11e6-968d-29b155fcd4a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:216","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (key.int) ; i++) {\n    key[i] = 0;\n}"},"variableMap":{"length":"length","key":"lineSeparator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:301","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(lineSeparator, 0, org.apache.commons.codec.binary.Base32.this.byte[], 0, lineSeparator.int)"},"status":-2},{"failures":[],"tindex":"b040b5a4-4118-11e6-968d-055ce9a9b0ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:105","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"h\", \"2\")"},"variableMap":{"txt":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:253","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.SoundexUtils.clean(str)"},"status":-2},{"failures":[],"tindex":"b040b5a5-4118-11e6-968d-9da9743f801a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:517","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.this.boolean"},"variableMap":{"concat":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:882","type":"CtReturnImpl","sourcecode":"return result"},"status":-2},{"failures":[5,6,7,8],"tindex":"b040b5a6-4118-11e6-968d-95ee710a3922","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:265","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(str).replaceFirst(\"SSS\")"},"status":-1},{"failures":[],"tindex":"b040b5a7-4118-11e6-968d-95e468314ca8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:336","type":"CtIfImpl","sourcecode":"if (str.endsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    str = str.substring(0, ((str.length()) - 1));\n} "},"variableMap":{"str":"str","org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:48","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < len ; i++) {\n    if (java.lang.Character.isLetter(str.charAt(i))) {\n        chars[(count++)] = str.charAt(i);\n    } \n}"},"status":-2},{"failures":[],"tindex":"b040b5a8-4118-11e6-968d-1972856a3e6b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:500","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha256(data))"},"variableMap":{"data":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Crypt:67","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(keyBytes)"},"status":-2},{"failures":[9,10,0,11,12,13,14,1,15],"tindex":"b040dcb9-4118-11e6-968d-f5a47b98647e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:252","type":"CtInvocationImpl","sourcecode":"code.append('H')"},"variableMap":{"code":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:429","type":"CtInvocationImpl","sourcecode":"buffer.append(saltString)"},"status":-1},{"failures":[],"tindex":"b040dcba-4118-11e6-968d-b1490bb1e12a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha1Digest()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:817","type":"CtReturnImpl","sourcecode":"return messageDigest"},"status":0},{"failures":[],"tindex":"b040dcbb-4118-11e6-968d-797281b2142f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:335","type":"CtReturnImpl","sourcecode":"return phonemeBuilder"},"variableMap":{"phonemeBuilder":"phonemeBuilder"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:196","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"},"status":-2},{"failures":[16],"tindex":"b040dcbc-4118-11e6-968d-4ff0ab5515f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:517","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha256(data))"},"status":-1},{"failures":[],"tindex":"b040dcbd-4118-11e6-968d-57ece8574c68","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:549","type":"CtAssignmentImpl","sourcecode":"lastChar = ch"},"variableMap":{"ch":"code","lastChar":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:377","type":"CtAssignmentImpl","sourcecode":"code = '8'"},"status":-2},{"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"b04103ce-4118-11e6-968d-f1b4a6a05c26","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:90","type":"CtReturnImpl","sourcecode":"return +1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:129","type":"CtIfImpl","sourcecode":"if (b == null) {\n    throw new java.lang.NullPointerException();\n} else if ((offset < 0) || (len < 0)) {\n    throw new java.lang.IndexOutOfBoundsException();\n} else if ((offset > (b.int)) || ((offset + len) > (b.int))) {\n    throw new java.lang.IndexOutOfBoundsException();\n} else if (len == 0) {\n    return 0;\n} else {\n    int int = 0;\n    while (readLen == 0) {\n        if (!(org.apache.commons.codec.binary.BaseNCodec.hasData(org.apache.commons.codec.binary.BaseNCodec.Context))) {\n            final byte[] byte[] = new byte[boolean ? 4096 : 8192];\n            final int int = java.io.InputStream.read(buf);\n            if (boolean) {\n                org.apache.commons.codec.binary.BaseNCodec.encode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context);\n            } else {\n                org.apache.commons.codec.binary.BaseNCodec.decode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context);\n            }\n        } \n        readLen = org.apache.commons.codec.binary.BaseNCodec.readResults(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context);\n    }\n    return readLen;\n}"},"status":-1},{"failures":[],"tindex":"b04103cf-4118-11e6-968d-555d7531ce22","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:158","type":"CtIfImpl","sourcecode":"if ((curr == 'H') && ((!(org.apache.commons.codec.language.Nysiis.isVowel(prev))) || (!(org.apache.commons.codec.language.Nysiis.isVowel(next))))) {\n    return new char[]{ prev };\n} "},"variableMap":{"next":"curr","prev":"curr","curr":"prev"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:163","type":"CtIfImpl","sourcecode":"if ((curr == 'W') && (org.apache.commons.codec.language.Nysiis.isVowel(prev))) {\n    return new char[]{ prev };\n} "},"status":0},{"failures":[],"tindex":"b0434dc0-4118-11e6-968d-9d78a461a86e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:278","type":"CtIfImpl","sourcecode":"if (lineSeparator != null) {\n    if (containsAlphabetOrPad(lineSeparator)) {\n        final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n        throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n    } \n    if (lineLength > 0) {\n        this.int = (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int) + (lineSeparator.int);\n        this.byte[] = new byte[lineSeparator.int];\n        java.lang.System.arraycopy(lineSeparator, 0, org.apache.commons.codec.binary.Base64.this.byte[], 0, lineSeparator.int);\n    } else {\n        this.int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int;\n        this.byte[] = null;\n    }\n} else {\n    this.int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int;\n    this.byte[] = null;\n}"},"status":-2},{"failures":[],"tindex":"b0434dc1-4118-11e6-968d-4bbed22c3bc8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:645","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = pattern"},"variableMap":{"pattern":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:106","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"w3\", \"W3\")"},"status":-2},{"failures":[],"tindex":"b0445f32-4118-11e6-968d-81442e800807","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:304","type":"CtAssignmentImpl","sourcecode":"this.byte[] = null"},"variableMap":{"lineSeparator":"org.apache.commons.codec.binary.Base32.HEX_ENCODE_TABLE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:284","type":"CtAssignmentImpl","sourcecode":"this.byte[] = org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.byte[]"},"status":-2},{"failures":[46,47],"tindex":"b0445f33-4118-11e6-968d-97faefbd2bb8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:727","type":"CtInvocationImpl","sourcecode":"result.append(\"TS\", \"FX\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:659","type":"CtIfImpl","sourcecode":"if (((index == 0) && (!(isVowel(charAt(value, 3))))) && ((charAt(value, 3)) != 'W')) {\n    result.append('X', 'S');\n} else {\n    result.append('X');\n}"},"status":-1},{"failures":[48,49,50,51],"tindex":"b0445f34-4118-11e6-968d-eb1940aa073e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:285","type":"CtForImpl","sourcecode":"for (int int = 0 ; j < 25 ; j++) {\n    for (int int = 0 ; i < 32 ; i += 4) {\n        left = org.apache.commons.codec.digest.UnixCrypt.dEncrypt(left, right, i, eSwap0, eSwap1, schedule);\n        right = org.apache.commons.codec.digest.UnixCrypt.dEncrypt(right, left, (i + 2), eSwap0, eSwap1, schedule);\n    }\n    t = left;\n    left = right;\n    right = t;\n}"},"variableMap":{"schedule":"results","t":"right","left":"right","eSwap0":"right","right":"right","eSwap1":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:308","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(left, right, 16, 65535, results)"},"status":-1},{"failures":[52],"tindex":"b0448645-4118-11e6-968d-91aa893fe80a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:256","type":"CtAssignmentImpl","sourcecode":"context.byte[] = b"},"status":-1},{"failures":[53,54,55,56,57,58,59,60,61,62,63,64,65],"tindex":"b0448646-4118-11e6-968d-4d9bbd4ebcf8","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:233","type":"CtAssignmentImpl","sourcecode":"hard = false"},"variableMap":{"hard":"inMultilineComment"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:268","type":"CtAssignmentImpl","sourcecode":"inMultilineComment = true"},"status":-1},{"failures":[66,67],"tindex":"b0448647-4118-11e6-968d-551adaafef1f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:706","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.binary.Base64().decode(base64Data)"},"variableMap":{"base64Data":"resizedBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:769","type":"CtReturnImpl","sourcecode":"return resizedBytes"},"status":-1},{"failures":[],"tindex":"b0448648-4118-11e6-968d-991ac58531e6","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:86","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('<')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:82","type":"CtForImpl","sourcecode":"for (int int = '0' ; i <= '9' ; i++) {\n    org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(i);\n}"},"status":0},{"failures":[],"tindex":"b0452289-4118-11e6-968d-8f73a2fcbf25","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:499","type":"CtForEachImpl","sourcecode":"for (final byte byte : arrayOctet) {\n    if (((byte) == element) || (isInAlphabet(element))) {\n        return true;\n    } \n}"},"variableMap":{"pad":"pad","arrayOctet":"arrayOctet","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:464","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (arrayOctet.int) ; i++) {\n    if ((!(isInAlphabet(arrayOctet[i]))) && ((!allowWSPad) || (((arrayOctet[i]) != (byte)) && (!(org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(arrayOctet[i])))))) {\n        return false;\n    } \n}"},"status":-2},{"failures":[68],"tindex":"b045228a-4118-11e6-968d-4f9181edb498","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:421","type":"CtReturnImpl","sourcecode":"return firstLetter + name"},"variableMap":{"name":"valueToDigest","firstLetter":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:724","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha512(key, valueToDigest))"},"status":-1},{"failures":[],"tindex":"b045499b-4118-11e6-968d-2bb6fad82b4a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:384","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Phoneme starts with '(' so must end with ')'\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:135","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to RefinedSoundex encode is not of type java.lang.String\")"},"status":0},{"failures":[],"tindex":"b045499c-4118-11e6-968d-5537ed800808","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:88","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} "},"variableMap":{"value":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:248","type":"CtReturnImpl","sourcecode":"return encode(str, getDefaultCharset())"},"status":-2},{"failures":[],"tindex":"b045499d-4118-11e6-968d-f77051a1e3c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:188","type":"CtAssignmentImpl","sourcecode":"minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int"},"variableMap":{"org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"ii","minRating":"ii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:224","type":"CtOperatorAssignmentImpl","sourcecode":"ii -= 16"},"status":-2},{"failures":[61],"tindex":"b045499e-4118-11e6-968d-5775facd3aae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:387","type":"CtAssignmentImpl","sourcecode":"code = '5'"},"variableMap":{"code":"ch"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:386","type":"CtAssignmentImpl","sourcecode":"ch = org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.lang.Character>.get(ch)"},"status":-1},{"failures":[],"tindex":"b045499f-4118-11e6-968d-4d229a4b2c62","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:80","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"tia\", \"sia\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:71","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ce\", \"se\")"},"status":0},{"failures":[],"tindex":"b04570b0-4118-11e6-968d-c378c33436b8","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:328","type":"CtOperatorAssignmentImpl","sourcecode":"v &= e1"},"variableMap":{"v":"index","e1":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:601","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":0},{"failures":[],"tindex":"b04570b1-4118-11e6-968d-67bf20fded55","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:670","type":"CtIfImpl","sourcecode":"if (len > maxResultSize) {\n    throw new java.lang.IllegalArgumentException((((\"Input array too big, the output array would be bigger (\" + len) + \") than the specified maximum size of \") + maxResultSize));\n} "},"variableMap":{"len":"lbitWorkArea","maxResultSize":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:355","type":"CtIfImpl","sourcecode":"if (result >= 0) {\n    context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int);\n    context.long = ((context.long) << (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int)) + result;\n    if ((context.int) == 0) {\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 32) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 24) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n    } \n} "},"status":-2},{"failures":[],"tindex":"b04570b2-4118-11e6-968d-1fc0c9638017","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{"this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:150","type":"CtIfImpl","sourcecode":"if (!(obj instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Soundex encode is not of type java.lang.String\");\n} "},"status":-2},{"failures":[],"tindex":"b04570b3-4118-11e6-968d-3d1f5d880399","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:126","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((java.lang.String)(ascii)).toCharArray())"},"variableMap":{"ascii":"ascii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:123","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((char[])(ascii)))"},"status":-2},{"failures":[69,70],"tindex":"b04570b4-4118-11e6-968d-d123bbb742ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:595","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUtf8(org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, false, true))"},"variableMap":{"binaryData":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:141","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Md5Crypt.md5Crypt(keyBytes, ((org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8))))"},"status":-1},{"failures":[10,13,14,1,71,15],"tindex":"b04570b5-4118-11e6-968d-23cdacc718fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:474","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[47], altResult[5], altResult[26], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:458","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[21], altResult[1], altResult[11], 4, buffer)"},"status":-1},{"failures":[],"tindex":"b04597c6-4118-11e6-968d-a9842b4944f5","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:242","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"b04597c7-4118-11e6-968d-257b8f04b264","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:185","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[72],"tindex":"b04597c8-4118-11e6-968d-f9c6394d1a4b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:733","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha1Hex(data)"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:594","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha384(data))"},"status":-1},{"failures":[],"tindex":"b04597c9-4118-11e6-968d-ff7e20e37b79","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:499","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(pBytes, ((byte)(0)))"},"variableMap":{"pBytes":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:162","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.decode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-2},{"failures":[],"tindex":"b04597ca-4118-11e6-968d-f1a20cf12b0a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:521","type":"CtOperatorAssignmentImpl","sourcecode":"len += (((len + (int)) - 1) / (int)) * (int)"},"variableMap":{"chunkSeparatorLength":"b","len":"lbitWorkArea","lineLength":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:507","type":"CtAssignmentImpl","sourcecode":"context.long = ((context.long) << 8) + b"},"status":-2},{"failures":[73,74,75],"tindex":"b04597cb-4118-11e6-968d-41a1e4e3a5c8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:209","type":"CtForImpl","sourcecode":"for (int int = 0 ; bits < (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[].int) ; ++bits) {\n    if ((ascii[(jj - bits)]) == '1') {\n        l_raw[ii] |= org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits];\n    } \n}"},"status":-1},{"failures":[],"tindex":"b045bedc-4118-11e6-968d-9f0778ac1947","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"patternLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:211","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.codec.language.bm.Rule org.apache.commons.codec.language.bm.Rule : rules) {\n    final java.lang.String java.lang.String = rule.getPattern();\n    patternLength = pattern.length();\n    if (rule.patternAndContextMatches(org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.java.lang.CharSequence, org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int)) {\n        org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.apply(rule.getPhoneme(), int);\n        org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.boolean = true;\n        break;\n    } \n}"},"status":-2},{"failures":[76,77,78],"tindex":"b045bedd-4118-11e6-968d-e5f7adebe0e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:189","type":"CtIfImpl","sourcecode":"if (('H' == hwChar) || ('W' == hwChar)) {\n    final char char = str.charAt((index - 2));\n    final char char = org.apache.commons.codec.language.Soundex.this.map(preHWChar);\n    if (((firstCode == mappedChar) || ('H' == preHWChar)) || ('W' == preHWChar)) {\n        return 0;\n    } \n} "},"status":-1},{"failures":[79,80],"tindex":"b047939e-4118-11e6-968d-e3aad7bef0cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:369","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:86","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException()"},"status":-1},{"failures":[],"tindex":"b047939f-4118-11e6-968d-ffacac31aa90","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:215","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[8]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:436","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = ensureBufferSize(int, context)"},"status":-2},{"failures":[],"tindex":"b047bab0-4118-11e6-968d-01477dbc1464","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String"},"variableMap":{"org.apache.commons.codec.language.Caverphone1.SIX_1":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:617","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha384(key, valueToDigest))"},"status":-2},{"failures":[3,4,81],"tindex":"b047bab1-4118-11e6-968d-f7279d364027","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:357","type":"CtAssignmentImpl","sourcecode":"code = '2'"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:361","type":"CtAssignmentImpl","sourcecode":"code = '4'"},"status":-1},{"failures":[],"tindex":"b047bab2-4118-11e6-968d-03747b0272f9","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:314","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \" C\", \" Q\", \" G\")) {\n    index += 3;\n} else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"C\", \"K\", \"Q\")) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"CE\", \"CI\")))) {\n    index += 2;\n} else {\n    index++;\n}"},"variableMap":{"index":"currentLine","value":"location"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:307","type":"CtTryImpl","sourcecode":"try {\n    final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[0]);\n    final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[1]);\n    final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[2]);\n    final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[3]);\n    final org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule = new org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule(pattern , replacement1 , replacement2 , replacement3);\n    final char char = r.java.lang.String.charAt(0);\n    java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> = ruleMapping.get(patternKey);\n    if (rules == null) {\n        rules = new java.util.ArrayList<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>();\n        ruleMapping.put(patternKey, rules);\n    } \n    rules.add(r);\n} catch (final java.lang.IllegalArgumentException e) {\n    throw new java.lang.IllegalStateException((((\"Problem parsing line '\" + currentLine) + \"' in \") + location) , e);\n}"},"status":-2},{"failures":[],"tindex":"b047bab3-4118-11e6-968d-014629c654ca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:283","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"status":-2},{"failures":[82,83,84,85,86,87,88,89,90,91,92,93],"tindex":"b047bab4-4118-11e6-968d-f7396d2f69c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.CharSequenceUtils:55","type":"CtLocalVariableImpl","sourcecode":"int int = start"},"variableMap":{"start":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:365","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.net.Utils.digit16(bytes[i])"},"status":-1},{"failures":[],"tindex":"b047e1c5-4118-11e6-968d-cdabc301128b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:353","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.hmacSha1(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"variableMap":{"valueToDigest":"charsetName","key":"charsetName"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:142","type":"CtReturnImpl","sourcecode":"return string.getBytes(charsetName)"},"status":-2},{"failures":[],"tindex":"b047e1c6-4118-11e6-968d-1d3e14e8cb17","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:185","type":"CtAssignmentImpl","sourcecode":"saltString = org.apache.commons.codec.digest.B64.getRandomSalt(8)"},"variableMap":{"saltString":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:95","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"k+\", \"K\")"},"status":-2},{"failures":[],"tindex":"b047e1c7-4118-11e6-968d-595688cf21ff","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:467","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"b047e1c8-4118-11e6-968d-471c65252e6e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:363","type":"CtAssignmentImpl","sourcecode":"d = (d >>> 2) | (d << 26)"},"variableMap":{"d":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:557","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-2},{"failures":[],"tindex":"b047e1c9-4118-11e6-968d-837a1b445607","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"length","name2Size":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:286","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(lineSeparator, 0, org.apache.commons.codec.binary.Base64.this.byte[], 0, lineSeparator.int)"},"status":-2},{"failures":[3,94,95,96,4,97,98,99,81,100],"tindex":"b047e1ca-4118-11e6-968d-791c7dbba4b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:728","type":"CtOperatorAssignmentImpl","sourcecode":"index += 4"},"variableMap":{"index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:236","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[101,102,103,104,105,106,107],"tindex":"b047e1cb-4118-11e6-968d-a1678ba95cde","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:277","type":"CtAssignmentImpl","sourcecode":"finalb = ctx1.digest()"},"status":-1},{"failures":[],"tindex":"b04808dc-4118-11e6-968d-c97af104b5a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:197","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[512]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:157","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet, bytes)"},"status":-2},{"failures":[],"tindex":"b04808dd-4118-11e6-968d-07df8e1a9ab7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:287","type":"CtIfImpl","sourcecode":"if ((chars[i]) != (chars[(i - 1)])) {\n    key.append(chars[i]);\n} "},"status":-2},{"failures":[],"tindex":"b04808de-4118-11e6-968d-15da98ecf7c0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:77","type":"CtIfImpl","sourcecode":"if ((cs1 instanceof java.lang.String) && (cs2 instanceof java.lang.String)) {\n    return cs1.equals(cs2);\n} "},"variableMap":{"cs1":"cs2","cs2":"cs2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:74","type":"CtIfImpl","sourcecode":"if ((cs1 == null) || (cs2 == null)) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"b04808df-4118-11e6-968d-1bc195a33ac0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:352","type":"CtIfImpl","sourcecode":"if (accentedWord == null) {\n    return null;\n} "},"variableMap":{"accentedWord":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:468","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-2},{"failures":[46,47],"tindex":"b0496870-4118-11e6-968d-f38e457a8107","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:713","type":"CtInvocationImpl","sourcecode":"result.append('A', 'F')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:388","type":"CtInvocationImpl","sourcecode":"result.append('J')"},"status":-1},{"failures":[],"tindex":"b0498f81-4118-11e6-968d-2934d0058f66","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.RefinedSoundex:77","type":"CtAssignmentImpl","sourcecode":"this.char[] = new char[mapping.int]"},"variableMap":{"mapping":"data","soundexMapping":"data","length":"buffSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:212","type":"CtAssignmentImpl","sourcecode":"this.char[] = new char[buffSize]"},"status":-2},{"failures":[108,109],"tindex":"b0498f82-4118-11e6-968d-d387ce81e072","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:98","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"n+\", \"N\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:97","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"m+\", \"M\")"},"status":-1},{"failures":[110,111,112],"tindex":"b0498f83-4118-11e6-968d-f7527f4cce88","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha1Digest()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:85","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getDigest(org.apache.commons.codec.digest.MessageDigestAlgorithms.org.apache.commons.codec.digest.MessageDigestAlgorithms.java.lang.String)"},"status":-1},{"failures":[9,10,0,11,12,113,13,14,1,71,15],"tindex":"b0498f84-4118-11e6-968d-71778c5ce273","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:430","type":"CtInvocationImpl","sourcecode":"buffer.append(\"$\")"},"status":-1},{"failures":[],"tindex":"b0498f85-4118-11e6-968d-a13041502564","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:257","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = scanner.nextLine()"},"status":-2},{"failures":[114,46,47],"tindex":"b049b696-4118-11e6-968d-6573db8c2d87","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:396","type":"CtInvocationImpl","sourcecode":"result.append('T')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:483","type":"CtIfImpl","sourcecode":"if (((index > 2) && ((charAt(value, (index - 1))) == 'U')) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, \"C\", \"G\", \"L\", \"R\", \"T\"))) {\n    result.append('F');\n} else if ((index > 0) && ((charAt(value, (index - 1))) != 'I')) {\n    result.append('K');\n} "},"status":-1},{"failures":[115,116,117],"tindex":"b049b697-4118-11e6-968d-93df375b49c2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:132","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"status":-1},{"failures":[118,74,119],"tindex":"b049b698-4118-11e6-968d-a166e21f2a2d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:706","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.binary.Base64().decode(base64Data)"},"variableMap":{"base64Data":"l_raw"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:188","type":"CtReturnImpl","sourcecode":"return l_raw"},"status":-1},{"failures":[],"tindex":"b049b699-4118-11e6-968d-c5a0c7c5ad0b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:277","type":"CtReturnImpl","sourcecode":"return ((((letter.equalsIgnoreCase(\"E\")) || (letter.equalsIgnoreCase(\"A\"))) || (letter.equalsIgnoreCase(\"O\"))) || (letter.equalsIgnoreCase(\"I\"))) || (letter.equalsIgnoreCase(\"U\"))"},"status":-2},{"failures":[82,120,83,84,85,121,122,123],"tindex":"b049b69a-4118-11e6-968d-8bbc3903a3e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:155","type":"CtReturnImpl","sourcecode":"return new java.lang.String(data , charset)"},"status":-1},{"failures":[],"tindex":"b049b69b-4118-11e6-968d-e3f9fe9f6feb","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:149","type":"CtReturnImpl","sourcecode":"return soundex(str)"},"status":-2},{"failures":[124,125,126,47],"tindex":"b049b69c-4118-11e6-968d-99676e3338da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:450","type":"CtInvocationImpl","sourcecode":"result.append('J', 'K')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:526","type":"CtIfImpl","sourcecode":"if ((index == 0) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"JOSE\")))) {\n    result.append('J', 'A');\n} else if (((isVowel(charAt(value, (index - 1)))) && (!slavoGermanic)) && (((charAt(value, (index + 1))) == 'A') || ((charAt(value, (index + 1))) == 'O'))) {\n    result.append('J', 'H');\n} else if (index == ((value.length()) - 1)) {\n    result.append('J', ' ');\n} else if ((!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.java.lang.String[]))) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, \"S\", \"K\", \"L\")))) {\n    result.append('J');\n} "},"status":-1},{"failures":[],"tindex":"b049ddad-4118-11e6-968d-e5b5203beb21","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:305","type":"CtInvocationImpl","sourcecode":"key.deleteCharAt(((key.length()) - 2))"},"variableMap":{"key":"local"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:134","type":"CtInvocationImpl","sourcecode":"local.append(inwd)"},"status":-2},{"failures":[],"tindex":"b049ddae-4118-11e6-968d-abf4664d91b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:141","type":"CtTryImpl","sourcecode":"try {\n    return string.getBytes(charsetName);\n} catch (final java.io.UnsupportedEncodingException e) {\n    throw org.apache.commons.codec.binary.StringUtils.newIllegalStateException(charsetName, e);\n}"},"status":-2},{"failures":[101,102,103,104,105,106,107],"tindex":"b049ddaf-4118-11e6-968d-f751cc013478","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:265","type":"CtInvocationImpl","sourcecode":"ctx1.update(saltBytes)"},"status":-1},{"failures":[],"tindex":"b049ddb0-4118-11e6-968d-0dc2138b504a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:301","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<org.apache.commons.codec.language.bm.Rule> java.util.List<org.apache.commons.codec.language.bm.Rule> = new java.util.ArrayList<org.apache.commons.codec.language.bm.Rule>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:209","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<org.apache.commons.codec.language.bm.Rule> java.util.List<org.apache.commons.codec.language.bm.Rule> = org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>.get(java.lang.CharSequence.subSequence(int, ((int) + patternLength)))"},"status":-2},{"failures":[],"tindex":"b049ddb1-4118-11e6-968d-934f9376c9d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:297","type":"CtWhileImpl","sourcecode":"while (cp < (keyLen - blocksize)) {\n    java.lang.System.arraycopy(tempResult, 0, pBytes, cp, blocksize);\n    cp += blocksize;\n}"},"variableMap":{"blocksize":"b","tempResult":"bytes","pBytes":"bytes","keyLen":"length","cp":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:317","type":"CtForImpl","sourcecode":"for (int int = (bytes.int) - 2 ; i < (bytes.int) ; i++) {\n    b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n    encode = (!(printable.get(b))) || ((i > ((bytes.int) - 2)) && (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b)));\n    org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, encode, buffer);\n}"},"status":-2},{"failures":[114,46,47],"tindex":"b049ddb2-4118-11e6-968d-cda710b00d76","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:414","type":"CtAssignmentImpl","sourcecode":"inMultilineComment = false"},"variableMap":{"inMultilineComment":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:878","type":"CtAssignmentImpl","sourcecode":"result = true"},"status":-1},{"failures":[127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144],"tindex":"b049ddb3-4118-11e6-968d-81ce16678d01","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:189","type":"CtAssignmentImpl","sourcecode":"inExtendedComment = true"},"status":-1},{"failures":[],"tindex":"b049ddb4-4118-11e6-968d-7333f6f52840","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:338","type":"CtAssignmentImpl","sourcecode":"context.boolean = true"},"status":-2},{"failures":[],"tindex":"b049ddb5-4118-11e6-968d-19f85060ec1b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:221","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"b04a03c6-4118-11e6-968d-11f8b766cdc6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:326","type":"CtLocalVariableImpl","sourcecode":"int int = r ^ (r >>> 16)"},"variableMap":{"r":"m"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:393","type":"CtLocalVariableImpl","sourcecode":"final int int = ((a << (16 - n)) ^ a) & m"},"status":-2},{"failures":[66,67],"tindex":"b04a03c7-4118-11e6-968d-15ff0776fe14","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:260","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getMd5Digest().digest(data)"},"variableMap":{"data":"resizedBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:769","type":"CtReturnImpl","sourcecode":"return resizedBytes"},"status":-1},{"failures":[],"tindex":"b04a03c8-4118-11e6-968d-6d69d4c52143","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:301","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(tempResult, 0, pBytes, cp, (keyLen - cp))"},"variableMap":{"tempResult":"lineSeparator","pBytes":"lineSeparator","keyLen":"length","cp":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:495","type":"CtIfImpl","sourcecode":"if (((int) > 0) && ((context.int) > 0)) {\n    java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int);\n    context.int += byte[].int;\n} "},"status":-2},{"failures":[],"tindex":"b04a03c9-4118-11e6-968d-7b351e319c88","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:505","type":"CtOperatorAssignmentImpl","sourcecode":"b += 256"},"variableMap":{"b":"unencodedBlockSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:206","type":"CtAssignmentImpl","sourcecode":"this.int = unencodedBlockSize"},"status":-2},{"failures":[],"tindex":"b04a03ca-4118-11e6-968d-bb138c64faa0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:499","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(pBytes, ((byte)(0)))"},"variableMap":{"pBytes":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:216","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (key.int) ; i++) {\n    key[i] = 0;\n}"},"status":0},{"failures":[],"tindex":"b04a03cb-4118-11e6-968d-f7dbf04f6a6e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:214","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.this.nysiis(((java.lang.String)(obj)))"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:310","type":"CtIfImpl","sourcecode":"if (obj == null) {\n    return null;\n} else if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be decoded using Q codec\"));\n}"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}