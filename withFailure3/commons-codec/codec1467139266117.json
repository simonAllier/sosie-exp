{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":71,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testLocaleIndependence":113,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":105,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":128,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":73,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":104,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":47,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":136,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":46,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":45,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":90,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects":133,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":142,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":9,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":87,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":3,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":60,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":63,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":58,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":61,"org.apache.commons.codec.language.RefinedSoundexTest.testLocaleIndependence":120,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail":124,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":22,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":25,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":144,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":138,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":151,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":50,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":76,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":31,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":139,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":30,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":17,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":18,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":91,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":21,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":86,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":39,"org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis":49,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":29,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched":100,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":19,"org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX":56,"org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant":95,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":20,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":53,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":6,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":33,"org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean":98,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":28,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":81,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":35,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":83,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":129,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":132,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":70,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":118,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":119,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":27,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":36,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":59,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail":121,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":103,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":74,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":107,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":11,"org.apache.commons.codec.digest.CryptTest.testCryptWithBytes":96,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":68,"org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull":97,"org.apache.commons.codec.language.SoundexTest.testB650":135,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone":72,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":152,"org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8":140,"org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA":57,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":102,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":115,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":13,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":131,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":8,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":37,"org.apache.commons.codec.digest.HmacUtilsTest.testNullKey":127,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":77,"org.apache.commons.codec.language.MetaphoneTest.testTCH":51,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":64,"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":78,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":5,"org.apache.commons.codec.language.MetaphoneTest.testPHTOF":52,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected":99,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":114,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":26,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":42,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail":126,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":109,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":34,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":106,"org.apache.commons.codec.binary.Base64Test.testBase64":150,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":44,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":82,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":1,"org.apache.commons.codec.binary.Base64Test.testUUID":15,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":12,"org.apache.commons.codec.binary.Base64Test.testSingletons":23,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":146,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":24,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":84,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":89,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":62,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":88,"org.apache.commons.codec.binary.Base64Test.testPairs":14,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":145,"org.apache.commons.codec.language.Caverphone1Test.testEndMb":79,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":130,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":94,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":55,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":40,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeWithInvalidObject":110,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":67,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":137,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":148,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty":112,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":7,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":117,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":134,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":93,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":10,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":32,"org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be":80,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":116,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull":38,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail":125,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":4,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":54,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":101,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":153,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":147,"org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute":48,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":143,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":92,"org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey":122,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":43,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":75,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":66,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":85,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":141,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":149,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":65,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":108,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla":69,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":41,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":0,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeNull":111,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":16,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail":123,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":2},"transformations":[{"failures":[0,1],"tindex":"df72d11e-3d5f-11e6-8878-7b0e19c49e5b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:188","type":"CtAssignmentImpl","sourcecode":"minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int"},"variableMap":{"org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"index","minRating":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:430","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[],"tindex":"df72d11f-3d5f-11e6-8878-ebf2628403ce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:88","type":"CtAssignmentImpl","sourcecode":"upperName = upperName.replaceAll(str, org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"str":"name2","upperName":"name2RtLStart","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"name2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:315","type":"CtAssignmentImpl","sourcecode":"name2RtLStart = name2.substring(i, (i + 1))"},"status":-2},{"failures":[2,3],"tindex":"df72f830-3d5f-11e6-8878-414afe00d05f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:142","type":"CtAssignmentImpl","sourcecode":"from = to + 1"},"variableMap":{"from":"c","to":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:357","type":"CtAssignmentImpl","sourcecode":"d = ((((d & 255) << 16) | (d & 65280)) | ((d & 16711680) >>> 16)) | ((c & -268435456) >>> 4)"},"status":-1},{"failures":[],"tindex":"df72f831-3d5f-11e6-8878-b9593e83f692","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:80","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"tia\", \"sia\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:76","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"x\", \"k\")"},"status":0},{"failures":[],"tindex":"df72f832-3d5f-11e6-8878-edd3f2e33279","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:342","type":"CtIfImpl","sourcecode":"if (inAvail < 0) {\n    context.boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"df72f833-3d5f-11e6-8878-b7b7c6dd9d8d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:411","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = input.substring(2)"},"variableMap":{"input":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:304","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String"},"status":-2},{"failures":[0,1],"tindex":"df72f834-3d5f-11e6-8878-03fa6740d4ea","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:392","type":"CtInvocationImpl","sourcecode":"result.append(\"TK\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:553","type":"CtInvocationImpl","sourcecode":"result.appendPrimary('L')"},"status":-1},{"failures":[],"tindex":"df72f835-3d5f-11e6-8878-6bd4397b9d6f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:532","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha256(data))"},"variableMap":{"data":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:423","type":"CtReturnImpl","sourcecode":"return name"},"status":-2},{"failures":[],"tindex":"df72f836-3d5f-11e6-8878-c53ba9846d97","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:68","type":"CtReturnImpl","sourcecode":"return java.security.MessageDigest.getInstance(algorithm)"},"variableMap":{"algorithm":"algorithm"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:67","type":"CtTryImpl","sourcecode":"try {\n    return java.security.MessageDigest.getInstance(algorithm);\n} catch (final java.security.NoSuchAlgorithmException e) {\n    throw new java.lang.IllegalArgumentException(e);\n}"},"status":-2},{"failures":[],"tindex":"df731f47-3d5f-11e6-8878-35b0eec44562","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:106","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"r3\", \"R3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:94","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^y\", \"A\")"},"status":0},{"failures":[],"tindex":"df7430b8-3d5f-11e6-8878-e58b622a1cd9","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:59","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^cough\", \"cou2f\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:62","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^rough\", \"rou2f\")"},"status":0},{"failures":[],"tindex":"df7430b9-3d5f-11e6-8878-ab833f4b1fed","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Soundex:281","type":"CtReturnImpl","sourcecode":"return new java.lang.String(out)"},"variableMap":{"out":"chars"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:56","type":"CtReturnImpl","sourcecode":"return new java.lang.String(chars , 0 , count).toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale)"},"status":-2},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"df7430ba-3d5f-11e6-8878-f9ba83981213","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:90","type":"CtUnaryOperatorImpl","sourcecode":"j++"},"variableMap":{"j":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:383","type":"CtOperatorAssignmentImpl","sourcecode":"b += 256"},"status":-1},{"failures":[2,27,28,3],"tindex":"df7430bb-3d5f-11e6-8878-4ddcd5e007d9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:212","type":"CtInvocationImpl","sourcecode":"buffer.setCharAt(1, charOne)"},"status":-1},{"failures":[29,30,31,32,33,34,35,36],"tindex":"df7430bc-3d5f-11e6-8878-975f945d0766","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:301","type":"CtIfImpl","sourcecode":"if (element == key) {\n    return true;\n} "},"variableMap":{"key":"key","element":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:300","type":"CtForEachImpl","sourcecode":"for (final char char : arr) {\n    if (element == key) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"df7457cd-3d5f-11e6-8878-5b3e3d2ad535","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"index","len":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:387","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, \"I\", \"E\", \"Y\")) {\n    result.append('J');\n    index += 3;\n} else {\n    result.append(\"TK\");\n    index += 2;\n}"},"status":-2},{"failures":[37],"tindex":"df7457ce-3d5f-11e6-8878-8b731b99d7e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:126","type":"CtAssignmentImpl","sourcecode":"urlsafe = org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet"},"status":-1},{"failures":[38],"tindex":"df7457cf-3d5f-11e6-8878-87ec3cb8ee80","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:248","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"df7457d0-3d5f-11e6-8878-c7a36a9dcd6c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:155","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(algorithm.toString(), key)"},"variableMap":{"key":"key","algorithm":"org.apache.commons.codec.digest.HmacAlgorithms.HMAC_SHA_256"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:99","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(org.apache.commons.codec.digest.HmacAlgorithms.org.apache.commons.codec.digest.HmacAlgorithms.org.apache.commons.codec.digest.HmacAlgorithms, key)"},"status":-2},{"failures":[],"tindex":"df7457d1-3d5f-11e6-8878-cd2cf7704258","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:152","type":"CtAssignmentImpl","sourcecode":"roundsCustom = true"},"variableMap":{"roundsCustom":"found"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:216","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.boolean = true"},"status":0},{"failures":[],"tindex":"df7457d2-3d5f-11e6-8878-13aeae1f9245","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:46","type":"CtAssignmentImpl","sourcecode":"this.boolean = doEncode"},"variableMap":{"doEncode":"inExtendedComment"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:185","type":"CtAssignmentImpl","sourcecode":"inExtendedComment = false"},"status":-2},{"failures":[39],"tindex":"df7457d3-3d5f-11e6-8878-9d3162730448","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:89","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set('*')"},"status":-1},{"failures":[40,41,42,43,44,45],"tindex":"df7457d4-3d5f-11e6-8878-db291f2b1679","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:74","type":"CtIfImpl","sourcecode":"if ((cs1 == null) || (cs2 == null)) {\n    return false;\n} "},"variableMap":{"cs1":"suffix","cs2":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:276","type":"CtIfImpl","sourcecode":"if ((suffix.length()) > (input.length())) {\n    return false;\n} "},"status":-1},{"failures":[46,47,48,49,50],"tindex":"df7457d5-3d5f-11e6-8878-37b249a884a5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:385","type":"CtAssignmentImpl","sourcecode":"code = '7'"},"variableMap":{"code":"last"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:271","type":"CtAssignmentImpl","sourcecode":"last = getMappingCode(str, 0)"},"status":-1},{"failures":[],"tindex":"df7457d6-3d5f-11e6-8878-99a6cd577dc9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:549","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = content.substring(1, ((content.length()) - 1))"},"status":-2},{"failures":[51,52,53,54,55,56,57],"tindex":"df7457d7-3d5f-11e6-8878-71a678ff269d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:362","type":"CtIfImpl","sourcecode":"if ((index >= 0) && (((index + (test.length())) - 1) < (string.length()))) {\n    final java.lang.String java.lang.String = string.substring(index, (index + (test.length())));\n    matches = substring.equals(test);\n} "},"status":-1},{"failures":[58,59,60,61],"tindex":"df7457d8-3d5f-11e6-8878-bb7a8c493db7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:605","type":"CtIfImpl","sourcecode":"if ((input.charAt(i)) != (prefix.charAt(i))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"df747ee9-3d5f-11e6-8878-01d4d412a42f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:409","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = name.substring(0, 1)"},"variableMap":{"name":"text"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:138","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = text.substring(from, to)"},"status":-2},{"failures":[],"tindex":"df747eea-3d5f-11e6-8878-cb682151e6a6","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:346","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QCodec.this.boolean"},"variableMap":{"encodeBlanks":"matches"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:348","type":"CtReturnImpl","sourcecode":"return matches"},"status":-2},{"failures":[62],"tindex":"df747eeb-3d5f-11e6-8878-9d3fc4ba1b51","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:692","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.binary.Base64().decode(base64String)"},"variableMap":{"base64String":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:285","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.md5(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"status":-1},{"failures":[63,64,65,66,67,68],"tindex":"df747eec-3d5f-11e6-8878-951204a35c67","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:472","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[3], altResult[24], altResult[45], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:465","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[18], altResult[28], altResult[8], 4, buffer)"},"status":-1},{"failures":[69,70,71,0,1,72],"tindex":"df747eed-3d5f-11e6-8878-5dc4c71e0b72","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:633","type":"CtIfImpl","sourcecode":"if ((index == ((value.length()) - 1)) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, \"AI\", \"OI\"))) {\n    result.appendAlternate('S');\n} else {\n    result.append('S');\n}"},"status":-1},{"failures":[],"tindex":"df747eee-3d5f-11e6-8878-d3aecd4a3350","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:284","type":"CtAssignmentImpl","sourcecode":"this.byte[] = org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.byte[]"},"variableMap":{"encodeTable":"lineSeparator","org.apache.commons.codec.binary.Base32.HEX_ENCODE_TABLE":"lineSeparator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:293","type":"CtAssignmentImpl","sourcecode":"this.byte[] = null"},"status":0},{"failures":[],"tindex":"df747eef-3d5f-11e6-8878-2d2c6bb47b93","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.CharSequenceUtils:62","type":"CtIfImpl","sourcecode":"if (c1 == c2) {\n    continue;\n} "},"variableMap":{"c1":"nextChar","c2":"lastChar"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:376","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], lastChar)) || (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)))) {\n    code = '8';\n} else {\n    code = '4';\n}"},"status":-2},{"failures":[63,73,74,75,64,65,66,68],"tindex":"df747ef0-3d5f-11e6-8878-079d91ffcc0b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:217","type":"CtInvocationImpl","sourcecode":"ctx1.update(keyBytes)"},"variableMap":{"ctx1":"ctx","keyBytes":"altResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:223","type":"CtWhileImpl","sourcecode":"while (cnt > blocksize) {\n    ctx.update(altResult, 0, blocksize);\n    cnt -= blocksize;\n}"},"status":-1},{"failures":[],"tindex":"df747ef1-3d5f-11e6-8878-eb7f7e5ed650","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:332","type":"CtLocalVariableImpl","sourcecode":"char char = '/'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:791","type":"CtLocalVariableImpl","sourcecode":"final char char = charAt(value, (index + 2))"},"status":-2},{"failures":[],"tindex":"df747ef2-3d5f-11e6-8878-0f98fdbe6c7f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:140","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:208","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = (lineLength > 0) && (chunkSeparatorLength > 0)"},"status":-2},{"failures":[],"tindex":"df747ef3-3d5f-11e6-8878-cf0158b7563c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:326","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"status":-2},{"failures":[76,77,78],"tindex":"df747ef4-3d5f-11e6-8878-29f09b450c15","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:105","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"h\", \"2\")"},"status":-1},{"failures":[2,3],"tindex":"df747ef5-3d5f-11e6-8878-2566f0d2bc30","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:305","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(right, left, 2, 858993459, results)"},"variableMap":{"left":"d","right":"d","results":"results"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:343","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(d, c, 4, 252645135, results)"},"status":-1},{"failures":[],"tindex":"df74a606-3d5f-11e6-8878-a3fddb117f00","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:742","type":"CtInvocationImpl","sourcecode":"mac.reset()"},"variableMap":{"mac":"mac"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:183","type":"CtInvocationImpl","sourcecode":"mac.init(keySpec)"},"status":-2},{"failures":[],"tindex":"df74a607-3d5f-11e6-8878-a7a815c413c4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:88","type":"CtAssignmentImpl","sourcecode":"upperName = upperName.replaceAll(str, org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"str":"text","upperName":"text","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"text"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:429","type":"CtAssignmentImpl","sourcecode":"text = text.toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale)"},"status":-2},{"failures":[],"tindex":"df754248-3d5f-11e6-8878-7dbd1088bd13","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:332","type":"CtLocalVariableImpl","sourcecode":"char char = '/'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:185","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit((b & 15), 16))"},"status":-2},{"failures":[],"tindex":"df754249-3d5f-11e6-8878-0f8c44377fcb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:376","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], lastChar)) || (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)))) {\n    code = '8';\n} else {\n    code = '4';\n}"},"variableMap":{"code":"nextChar","lastChar":"code","nextChar":"lastCode","org.apache.commons.codec.language.ColognePhonetic.AHOUKQX":"org.apache.commons.codec.language.ColognePhonetic.AHOUKQX","org.apache.commons.codec.language.ColognePhonetic.SZ":"org.apache.commons.codec.language.ColognePhonetic.AHOUKQX"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:369","type":"CtIfImpl","sourcecode":"if (lastCode == '/') {\n    if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)) {\n        code = '4';\n    } else {\n        code = '8';\n    }\n} else {\n    if ((org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], lastChar)) || (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)))) {\n        code = '8';\n    } else {\n        code = '4';\n    }\n}"},"status":-2},{"failures":[79],"tindex":"df75424a-3d5f-11e6-8878-f13e29397776","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:70","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ci\", \"si\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:66","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"mb$\", \"m2\")"},"status":-1},{"failures":[80],"tindex":"df75695b-3d5f-11e6-8878-4f2723f6b691","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:351","type":"CtReturnImpl","sourcecode":"return new java.lang.String(bytes , org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-1},{"failures":[81,82,83,84,85],"tindex":"df75695c-3d5f-11e6-8878-abee3dd2144e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:113","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"y3\", \"Y3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:58","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"e$\", \"\")"},"status":-1},{"failures":[],"tindex":"df75695d-3d5f-11e6-8878-bba54588963b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:524","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.isBase64(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(base64))"},"variableMap":{"base64":"str2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:415","type":"CtReturnImpl","sourcecode":"return metaphone(str1).equals(metaphone(str2))"},"status":0},{"failures":[86,40,41,42,87,88,89,43,44,90,45,91,92,93,58,59,60,61],"tindex":"df75695e-3d5f-11e6-8878-4bfb0bf139ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:409","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = name.substring(0, 1)"},"variableMap":{"name":"lang"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:265","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String.format(\"org/apache/commons/codec/language/bm/%s.txt\", lang)"},"status":-1},{"failures":[29,30,31,32,33,34,35,36],"tindex":"df75695f-3d5f-11e6-8878-3dfaab7c950a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.CharSequenceUtils:62","type":"CtIfImpl","sourcecode":"if (c1 == c2) {\n    continue;\n} "},"variableMap":{"c1":"code","c2":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:395","type":"CtInvocationImpl","sourcecode":"output.addRight(code)"},"status":-1},{"failures":[94],"tindex":"df756960-3d5f-11e6-8878-0d9b5035ccad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:93","type":"CtAssignmentImpl","sourcecode":"out[i] = ((byte)(f & 255))"},"variableMap":{"f":"i","i":"i","out":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:185","type":"CtAssignmentImpl","sourcecode":"tmp[i] = b"},"status":-1},{"failures":[0,1],"tindex":"df756961-3d5f-11e6-8878-5d9ae0096030","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:605","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-1},{"failures":[],"tindex":"df756962-3d5f-11e6-8878-4966095c4500","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:208","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Soundex.this.int"},"variableMap":{"maxLength":"digit"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:180","type":"CtReturnImpl","sourcecode":"return digit"},"status":-2},{"failures":[],"tindex":"df756963-3d5f-11e6-8878-6b5731fcbca2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:305","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(((bytes.int) - 3), bytes)"},"variableMap":{"bytes":"saltBytes","length":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:156","type":"CtLocalVariableImpl","sourcecode":"final int int = saltBytes.int"},"status":-2},{"failures":[],"tindex":"df756964-3d5f-11e6-8878-43915312acb6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:296","type":"CtAssignmentImpl","sourcecode":"this.byte[] = urlSafe ? org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[] : org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[]"},"status":-2},{"failures":[],"tindex":"df756965-3d5f-11e6-8878-5ffa77453fa1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:206","type":"CtAssignmentImpl","sourcecode":"this.int = unencodedBlockSize"},"variableMap":{"unencodedBlockSize":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:718","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-2},{"failures":[],"tindex":"df756966-3d5f-11e6-8878-d5d439404d38","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:188","type":"CtAssignmentImpl","sourcecode":"minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int"},"variableMap":{"org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"readLen","minRating":"readLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:165","type":"CtAssignmentImpl","sourcecode":"readLen = org.apache.commons.codec.binary.BaseNCodec.readResults(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":0},{"failures":[],"tindex":"df759077-3d5f-11e6-8878-f11acb93460a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:260","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[length]"},"variableMap":{"length":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:273","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[(raw.int) << 3]"},"status":-2},{"failures":[95,96],"tindex":"df759078-3d5f-11e6-8878-25cc4b1ff66e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Crypt:67","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(keyBytes)"},"status":-1},{"failures":[],"tindex":"df759079-3d5f-11e6-8878-25b007b56055","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:460","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[3], altResult[13], altResult[23], 4, buffer)"},"variableMap":{"altResult":"finalb","buffer":"passwd"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:288","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(((byte)(0)), ((byte)(0)), finalb[11], 2, passwd)"},"status":-2},{"failures":[],"tindex":"df75907a-3d5f-11e6-8878-654a248a6a28","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:184","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    saltString = org.apache.commons.codec.digest.B64.getRandomSalt(8);\n} else {\n    final java.util.regex.Pattern java.util.regex.Pattern = java.util.regex.Pattern.compile(((\"^\" + (prefix.replace(\"$\", \"\\\\$\"))) + \"([\\\\.\\\\/a-zA-Z0-9]{1,8}).*\"));\n    final java.util.regex.Matcher java.util.regex.Matcher = p.matcher(salt);\n    if ((m == null) || (!(m.find()))) {\n        throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n    } \n    saltString = m.group(1);\n}"},"status":-2},{"failures":[],"tindex":"df75907b-3d5f-11e6-8878-ab427f9af2fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:307","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (name1Char.int) ; i++) {\n    if (i > name2Size) {\n        break;\n    } \n    name1LtRStart = name1.substring(i, (i + 1));\n    name1LtREnd = name1.substring((name1Size - i), ((name1Size - i) + 1));\n    name2RtLStart = name2.substring(i, (i + 1));\n    name2RtLEnd = name2.substring((name2Size - i), ((name2Size - i) + 1));\n    if (name1LtRStart.equals(name2RtLStart)) {\n        name1Char[i] = ' ';\n        name2Char[i] = ' ';\n    } \n    if (name1LtREnd.equals(name2RtLEnd)) {\n        name1Char[(name1Size - i)] = ' ';\n        name2Char[(name2Size - i)] = ' ';\n    } \n}"},"status":-2},{"failures":[],"tindex":"df75907c-3d5f-11e6-8878-c919b19d1260","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:184","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit(((b >> 4) & 15), 16))"},"variableMap":{"b":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:185","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit((b & 15), 16))"},"status":-2},{"failures":[37],"tindex":"df75907d-3d5f-11e6-8878-2b95e007773e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:87","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('>')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:125","type":"CtIfImpl","sourcecode":"if (urlsafe == null) {\n    urlsafe = org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet;\n} "},"status":-1},{"failures":[],"tindex":"df75907e-3d5f-11e6-8878-9f24af65993e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:504","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b += 256;\n} "},"variableMap":{"b":"jj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:209","type":"CtForImpl","sourcecode":"for (int int = 0 ; bits < (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[].int) ; ++bits) {\n    if ((ascii[(jj - bits)]) == '1') {\n        l_raw[ii] |= org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits];\n    } \n}"},"status":-2},{"failures":[97],"tindex":"df75907f-3d5f-11e6-8878-b7e2a5ddaaa7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:284","type":"CtReturnImpl","sourcecode":"return \"ANY_LANGUAGE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:160","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[94],"tindex":"df759080-3d5f-11e6-8878-c7d55ed75c53","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:93","type":"CtAssignmentImpl","sourcecode":"out[i] = ((byte)(f & 255))"},"variableMap":{"f":"i","i":"i","out":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:185","type":"CtAssignmentImpl","sourcecode":"tmp[i] = b"},"status":-1},{"failures":[],"tindex":"df759081-3d5f-11e6-8878-03e40ac85e7f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:230","type":"CtReturnImpl","sourcecode":"return encodeText(str, charset)"},"variableMap":{"str":"str","charset":"str","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:250","type":"CtReturnImpl","sourcecode":"return encode(str, getCharset())"},"status":-2},{"failures":[],"tindex":"df759082-3d5f-11e6-8878-3509654bb45b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:286","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[3], finalb[9], finalb[15], 4, passwd)"},"variableMap":{"finalb":"altResult","passwd":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:466","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[9], altResult[19], altResult[29], 4, buffer)"},"status":-2},{"failures":[98],"tindex":"df759083-3d5f-11e6-8878-cb3b8058af16","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:464","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (arrayOctet.int) ; i++) {\n    if ((!(isInAlphabet(arrayOctet[i]))) && ((!allowWSPad) || (((arrayOctet[i]) != (byte)) && (!(org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(arrayOctet[i])))))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"df75b794-3d5f-11e6-8878-55cf52efb11c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:281","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:403","type":"CtReturnImpl","sourcecode":"return metaphone(str)"},"status":-2},{"failures":[0,1],"tindex":"df75b795-3d5f-11e6-8878-59330fb3c848","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:338","type":"CtInvocationImpl","sourcecode":"result.append(\"KS\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:448","type":"CtInvocationImpl","sourcecode":"result.append('J')"},"status":-1},{"failures":[],"tindex":"df75b796-3d5f-11e6-8878-112b5cdb13b1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:604","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (prefix.length()) ; i++) {\n    if ((input.charAt(i)) != (prefix.charAt(i))) {\n        return false;\n    } \n}"},"variableMap":{"input":"input","prefix":"suffix"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:276","type":"CtIfImpl","sourcecode":"if ((suffix.length()) > (input.length())) {\n    return false;\n} "},"status":-2},{"failures":[99,100],"tindex":"df75b797-3d5f-11e6-8878-e7affb025df0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:313","type":"CtAssignmentImpl","sourcecode":"name1LtREnd = name1.substring((name1Size - i), ((name1Size - i) + 1))"},"status":-1},{"failures":[],"tindex":"df75b798-3d5f-11e6-8878-879069a8f7d7","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:793","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.int]"},"variableMap":{"org.apache.commons.codec.digest.DigestUtils.STREAM_BUFFER_LENGTH":"readPos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:432","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[(context.int) - (context.int)]"},"status":-2},{"failures":[],"tindex":"df75b799-3d5f-11e6-8878-893110d7cd74","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:130","type":"CtAssignmentImpl","sourcecode":"this.java.nio.charset.Charset = charset"},"status":-2},{"failures":[71,0,1],"tindex":"df75b79a-3d5f-11e6-8878-e702eb88a1a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:450","type":"CtInvocationImpl","sourcecode":"result.append('J', 'K')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:681","type":"CtInvocationImpl","sourcecode":"result.append('X')"},"status":-1},{"failures":[0],"tindex":"df75b79b-3d5f-11e6-8878-4996f86e7f0e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:190","type":"CtLocalVariableImpl","sourcecode":"final char char = str.charAt((index - 2))"},"variableMap":{"str":"value","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:791","type":"CtLocalVariableImpl","sourcecode":"final char char = charAt(value, (index + 2))"},"status":-1},{"failures":[101,102,103,104,105,106,107,108,109,110,111,112,113],"tindex":"df75b79c-3d5f-11e6-8878-c33371844a76","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:279","type":"CtIfImpl","sourcecode":"if ((line.length()) == 0) {\n    continue;\n} "},"status":-1},{"failures":[7,9,10,11,12,13,114,24,25],"tindex":"df75b79d-3d5f-11e6-8878-37450280d574","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:296","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(keyBytes, ((byte)(0)))"},"variableMap":{"keyBytes":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:393","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int)"},"status":-1},{"failures":[70,71,0,1],"tindex":"df75b79e-3d5f-11e6-8878-f91ca845413c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:555","type":"CtInvocationImpl","sourcecode":"result.append('L')"},"status":-1},{"failures":[115,116,117,118,119,120],"tindex":"df762ccf-3d5f-11e6-8878-d74ef2b7b99a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:212","type":"CtInvocationImpl","sourcecode":"buffer.setCharAt(1, charOne)"},"variableMap":{"buffer":"sBuf","charOne":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:193","type":"CtIfImpl","sourcecode":"if (current == last) {\n    continue;\n} else if (current != 0) {\n    sBuf.append(current);\n} "},"status":-1},{"failures":[121,122,123,124,125,126,127],"tindex":"df762cd0-3d5f-11e6-8878-d3b6ef86b8f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:132","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:177","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Null key\")"},"status":-1},{"failures":[70,0,1],"tindex":"df762cd1-3d5f-11e6-8878-dd2db509b322","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:285","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[101,102,103,104,105,106,107,108,109,110,111,112,113],"tindex":"df762cd2-3d5f-11e6-8878-8b2cb7df9d35","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:368","type":"CtIfImpl","sourcecode":"if (!(ph.endsWith(\"]\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\");\n} "},"variableMap":{"ph":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:283","type":"CtIfImpl","sourcecode":"if (line.contains(\"=\")) {\n    final java.lang.String[] java.lang.String[] = line.split(\"=\");\n    if ((parts.int) != 2) {\n        throw new java.lang.IllegalArgumentException((((((\"Malformed folding statement split into \" + (parts.int)) + \" parts: \") + rawLine) + \" in \") + location));\n    } else {\n        final java.lang.String java.lang.String = parts[0];\n        final java.lang.String java.lang.String = parts[1];\n        if (((leftCharacter.length()) != 1) || ((rightCharacter.length()) != 1)) {\n            throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + rawLine) + \" in \") + location));\n        } \n        asciiFoldings.put(leftCharacter.charAt(0), rightCharacter.charAt(0));\n    }\n} else {\n    final java.lang.String[] java.lang.String[] = line.split(\"\\\\s+\");\n    if ((parts.int) != 4) {\n        throw new java.lang.IllegalArgumentException((((((\"Malformed rule statement split into \" + (parts.int)) + \" parts: \") + rawLine) + \" in \") + location));\n    } else {\n        try {\n            final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[0]);\n            final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[1]);\n            final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[2]);\n            final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[3]);\n            final org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule = new org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule(pattern , replacement1 , replacement2 , replacement3);\n            final char char = r.java.lang.String.charAt(0);\n            java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> = ruleMapping.get(patternKey);\n            if (rules == null) {\n                rules = new java.util.ArrayList<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>();\n                ruleMapping.put(patternKey, rules);\n            } \n            rules.add(r);\n        } catch (final java.lang.IllegalArgumentException e) {\n            throw new java.lang.IllegalStateException((((\"Problem parsing line '\" + currentLine) + \"' in \") + location) , e);\n        }\n    }\n}"},"status":-1},{"failures":[128,129,130,131,132,133,134],"tindex":"df762cd3-3d5f-11e6-8878-130a6b87213c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:67","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('\"')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:107","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet.set(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":-1},{"failures":[135,136,137,138,139,50],"tindex":"df762cd4-3d5f-11e6-8878-01eee66e4382","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:276","type":"CtReturnImpl","sourcecode":"return ch"},"variableMap":{"ch":"preHWChar"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:192","type":"CtIfImpl","sourcecode":"if (((firstCode == mappedChar) || ('H' == preHWChar)) || ('W' == preHWChar)) {\n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"df762cd5-3d5f-11e6-8878-7b47b86f5843","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:589","type":"CtInvocationImpl","sourcecode":"result.append('R')"},"variableMap":{"result":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:150","type":"CtIfImpl","sourcecode":"if (!(obj instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Soundex encode is not of type java.lang.String\");\n} "},"status":-2},{"failures":[],"tindex":"df7653e6-3d5f-11e6-8878-a3728025add3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:352","type":"CtIfImpl","sourcecode":"if (accentedWord == null) {\n    return null;\n} "},"variableMap":{"accentedWord":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:259","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-2},{"failures":[115],"tindex":"df7653e7-3d5f-11e6-8878-c1db3433494a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:90","type":"CtReturnImpl","sourcecode":"return +1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:116","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.SoundexUtils.difference(org.apache.commons.codec.language.RefinedSoundex.this, s1, s2)"},"status":-1},{"failures":[],"tindex":"df7653e8-3d5f-11e6-8878-03b5d3129fa4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:89","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set('*')"},"variableMap":{"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:78","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('-')"},"status":0},{"failures":[101,102,103,104,105,109],"tindex":"df7653e9-3d5f-11e6-8878-15c5b9fcc1d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:472","type":"CtReturnImpl","sourcecode":"return sb.toString()"},"status":-1},{"failures":[],"tindex":"df7653ea-3d5f-11e6-8878-35351027f77a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:129","type":"CtIfImpl","sourcecode":"if ((!(text.startsWith(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String))) || (!(text.endsWith(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String)))) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\");\n} "},"variableMap":{"org.apache.commons.codec.net.RFC1522Codec.POSTFIX":"boxContent","org.apache.commons.codec.net.RFC1522Codec.PREFIX":"boxContent","text":"boxContent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:553","type":"CtIfImpl","sourcecode":"if (negate) {\n    boxContent = boxContent.substring(1);\n} "},"status":-2},{"failures":[],"tindex":"df7653eb-3d5f-11e6-8878-a38154f50644","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:546","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = content.endsWith(\"]\")"},"variableMap":{"content":"content"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:503","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = content.contains(\"[\")"},"status":0},{"failures":[],"tindex":"df7653ec-3d5f-11e6-8878-d7483067d700","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:278","type":"CtAssignmentImpl","sourcecode":"last = mapped"},"variableMap":{"last":"code","mapped":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:353","type":"CtAssignmentImpl","sourcecode":"code = '-'"},"status":-2},{"failures":[2,3],"tindex":"df7653ed-3d5f-11e6-8878-b5f0846e1c7a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:308","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(left, right, 16, 65535, results)"},"variableMap":{"left":"right","right":"right","results":"results"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:302","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(left, right, 8, 16711935, results)"},"status":-1},{"failures":[],"tindex":"df7653ee-3d5f-11e6-8878-f3511c5cc28a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:364","type":"CtAssignmentImpl","sourcecode":"this.boolean = folding"},"variableMap":{"folding":"doEncode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:48","type":"CtAssignmentImpl","sourcecode":"this.boolean = doEncode"},"status":-2},{"failures":[99,100],"tindex":"df7653ef-3d5f-11e6-8878-a9893da6920b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:327","type":"CtAssignmentImpl","sourcecode":"name2Char[(name2Size - i)] = ' '"},"status":-1},{"failures":[70,0,1],"tindex":"df7653f0-3d5f-11e6-8878-8785e6c5626c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:668","type":"CtInvocationImpl","sourcecode":"result.append(\"SK\")"},"status":-1},{"failures":[140,141,142,143,144,145,146,147,148,13,149,150,25,26,151,152,153],"tindex":"df7653f1-3d5f-11e6-8878-93dc4b95f4a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:412","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha1(data))"},"variableMap":{"data":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:257","type":"CtReturnImpl","sourcecode":"return bytes == null ? null : new java.lang.String(bytes , charset)"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}