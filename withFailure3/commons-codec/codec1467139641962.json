{"failureDictionary":{"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":136,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":154,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":19,"org.apache.commons.codec.language.NysiisTest.testSnat":118,"org.apache.commons.codec.language.NysiisTest.testEncodeEmpty":124,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":82,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":80,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":81,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":40,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":153,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":157,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":39,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY":169,"org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding":49,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":106,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":83,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":133,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":34,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":132,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan":168,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":21,"org.apache.commons.codec.language.ColognePhoneticTest.testEncodeEmpty":160,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":67,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptNullData":128,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse":142,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":46,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis":166,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":44,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":47,"org.apache.commons.codec.language.RefinedSoundexTest.testLocaleIndependence":104,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":3,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":64,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully":146,"org.apache.commons.codec.language.RefinedSoundexTest.testEncodeEmpty":103,"org.apache.commons.codec.binary.Base64InputStreamTest.testRead0":126,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":93,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":95,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":162,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":53,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":94,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex":73,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse":140,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":52,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":41,"org.apache.commons.codec.language.NysiisTest.testCap":107,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":30,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":26,"org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis":92,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":51,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":90,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData":61,"org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent":23,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":25,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":91,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":165,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":55,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":152,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":156,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":8,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":147,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":57,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":151,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":29,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully":141,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":18,"org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds":144,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":101,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":102,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":58,"org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString":70,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":45,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable":84,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":13,"org.apache.commons.codec.net.URLCodecTest.testDecodeObjects":28,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":20,"org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds":145,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall":62,"org.apache.commons.codec.language.SoundexTest.testBadCharacters":74,"org.apache.commons.codec.language.SoundexTest.testB650":79,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":14,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":98,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":4,"org.apache.commons.codec.language.SoundexTest.testNewInstance":87,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":135,"org.apache.commons.codec.language.NysiisTest.testTranan":122,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3":129,"org.apache.commons.codec.language.NysiisTest.testFal":110,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":24,"org.apache.commons.codec.language.SoundexTest.testLocaleIndependence":97,"org.apache.commons.codec.language.NysiisTest.testSnad":117,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":10,"org.apache.commons.codec.language.ColognePhoneticTest.testLocaleIndependence":161,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":163,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":138,"org.apache.commons.codec.language.NysiisTest.testLocaleIndependence":125,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray":71,"org.apache.commons.codec.language.MetaphoneTest.testPHTOF":48,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer1":76,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":77,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":78,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":33,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan":167,"org.apache.commons.codec.language.NysiisTest.testDropBy":120,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":56,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":2,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":38,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":148,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":9,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":16,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":0,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":36,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":68,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":35,"org.apache.commons.codec.language.NysiisTest.testRule2":112,"org.apache.commons.codec.language.NysiisTest.testRule1":111,"org.apache.commons.codec.language.NysiisTest.testRule7":115,"org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds":59,"org.apache.commons.codec.language.NysiisTest.testRule6":114,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":1,"org.apache.commons.codec.language.NysiisTest.testRule5":113,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111":150,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray":65,"org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals":149,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":31,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":88,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":119,"org.apache.commons.codec.language.NysiisTest.testBran":116,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":123,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray":63,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":100,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":11,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":85,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":43,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":134,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":164,"org.apache.commons.codec.language.SoundexTest.testEncodeEmpty":96,"org.apache.commons.codec.net.URLCodecTest.testEncodeObjects":50,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":54,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":99,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":130,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":155,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":12,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":5,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":7,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":72,"org.apache.commons.codec.binary.Base32InputStreamTest.testRead0":127,"org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals":159,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":137,"org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute":89,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":75,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":42,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":37,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse":143,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":69,"org.apache.commons.codec.language.NysiisTest.testDad":108,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":131,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":158,"org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid":27,"org.apache.commons.codec.language.NysiisTest.testOthers":121,"org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds":60,"org.apache.commons.codec.language.SoundexTest.testDifference":86,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":105,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla":17,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":22,"org.apache.commons.codec.language.NysiisTest.testDan":109,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":6,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":32,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":15,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnameCornerCase_Nulls_NoMatch":139,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":66},"transformations":[{"failures":[0,1,2,3,4,5,6,7],"tindex":"bf77c195-3d60-11e6-89e6-e5128a568f01","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:469","type":"CtInvocationImpl","sourcecode":"sb.append('|')"},"variableMap":{"sb":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:73","type":"CtInvocationImpl","sourcecode":"buffer.append(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String)"},"status":-1},{"failures":[],"tindex":"bf77e8a6-3d60-11e6-89e6-9f3d2e2e005d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"encodeSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:290","type":"CtIfImpl","sourcecode":"if (lineLength > 0) {\n    if (lineSeparator == null) {\n        throw new java.lang.IllegalArgumentException(((\"lineLength \" + lineLength) + \" > 0, but lineSeparator is null\"));\n    } \n    if (containsAlphabetOrPad(lineSeparator)) {\n        final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n        throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain Base32 characters: [\" + sep) + \"]\"));\n    } \n    this.int = (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int) + (lineSeparator.int);\n    this.byte[] = new byte[lineSeparator.int];\n    java.lang.System.arraycopy(lineSeparator, 0, org.apache.commons.codec.binary.Base32.this.byte[], 0, lineSeparator.int);\n} else {\n    this.int = org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int;\n    this.byte[] = null;\n}"},"status":-2},{"failures":[8,9,10,11,12,13,14],"tindex":"bf780fb7-3d60-11e6-89e6-e9aaaf18437e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:268","type":"CtIfImpl","sourcecode":"if ((i % 7) != 0) {\n    ctx1.update(keyBytes);\n} "},"status":-1},{"failures":[],"tindex":"bf780fb8-3d60-11e6-89e6-ff3fecc2ec26","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:919","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = value.substring(start, (start + length))"},"variableMap":{"start":"from","length":"to","value":"text"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:138","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = text.substring(from, to)"},"status":-2},{"failures":[],"tindex":"bf780fb9-3d60-11e6-89e6-67179dc5b75b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"length","to":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; (i < (key.int)) && (i < (original.int)) ; i++) {\n    final int int = original[i];\n    key[i] = ((byte)(iChar << 1));\n}"},"status":-2},{"failures":[],"tindex":"bf780fba-3d60-11e6-89e6-bd8e9d0884b6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:236","type":"CtLocalVariableImpl","sourcecode":"final int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:160","type":"CtLocalVariableImpl","sourcecode":"final int int = name.length()"},"status":-2},{"failures":[],"tindex":"bf780fbb-3d60-11e6-89e6-1f24bddafaca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:77","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"v\", \"f\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:63","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^tough\", \"tou2f\")"},"status":0},{"failures":[15,16,17,18,19],"tindex":"bf780fbc-3d60-11e6-89e6-152aaf906cee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:188","type":"CtAssignmentImpl","sourcecode":"minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int"},"variableMap":{"org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"index","minRating":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:639","type":"CtAssignmentImpl","sourcecode":"index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"S\", \"Z\") ? index + 2 : index + 1"},"status":-1},{"failures":[],"tindex":"bf780fbd-3d60-11e6-89e6-4d58849e9bbb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:69","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"cq\", \"2q\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:112","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"j\", \"y\")"},"status":0},{"failures":[],"tindex":"bf7836ce-3d60-11e6-89e6-d94896d5c9b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:187","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int = i"},"variableMap":{"i":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:91","type":"CtAssignmentImpl","sourcecode":"f = f | (org.apache.commons.codec.binary.Hex.toDigit(data[j], j))"},"status":-2},{"failures":[],"tindex":"bf7836cf-3d60-11e6-89e6-d1bfc99dd988","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:436","type":"CtIfImpl","sourcecode":"if ((chrs[index]) == (element[0])) {\n    chrs[index] = element[1];\n    break;\n} "},"variableMap":{"chrs":"ascii","index":"length","element":"ascii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:181","type":"CtForImpl","sourcecode":"for (int int = 0, int int = (ascii.int) - 1 ; ii < (l_raw.int) ; ii++ , jj -= 8) {\n    for (int int = 0 ; bits < (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[].int) ; ++bits) {\n        if ((ascii[(jj - bits)]) == '1') {\n            l_raw[ii] |= org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits];\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"bf7836d0-3d60-11e6-89e6-3fd24912c0b4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:187","type":"CtIfImpl","sourcecode":"if (nextCharIsVowel) {\n    return java.lang.String[];\n} "},"variableMap":{"replacementBeforeVowel":"replacementAtStart","nextCharIsVowel":"atStart"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:181","type":"CtIfImpl","sourcecode":"if (atStart) {\n    return java.lang.String[];\n} "},"status":0},{"failures":[],"tindex":"bf7836d1-3d60-11e6-89e6-a3f2966527bf","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:504","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b += 256;\n} "},"variableMap":{"b":"cmtI"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:422","type":"CtIfImpl","sourcecode":"if (cmtI >= 0) {\n    line = line.substring(0, cmtI);\n} "},"status":-2},{"failures":[20,21],"tindex":"bf7836d2-3d60-11e6-89e6-598331ee05b6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:222","type":"CtAssignmentImpl","sourcecode":"key[i] = ((byte)(iChar << 1))"},"variableMap":{"iChar":"i","i":"i","key":"singleByte"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:61","type":"CtAssignmentImpl","sourcecode":"byte[][0] = ((byte)(i))"},"status":-1},{"failures":[],"tindex":"bf7836d3-3d60-11e6-89e6-67e04f7878e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:139","type":"CtIfImpl","sourcecode":"if (charset.equals(\"\")) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\");\n} "},"variableMap":{"charset":"target"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:921","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : criteria) {\n    if (target.equals(element)) {\n        result = true;\n        break;\n    } \n}"},"status":-2},{"failures":[22,23,24,25,26,27,28,29],"tindex":"bf7836d4-3d60-11e6-89e6-0db9564ed537","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:168","type":"CtIfImpl","sourcecode":"if (b == '+') {\n    buffer.write(' ');\n} else if (b == (org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.byte)) {\n    try {\n        final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)]);\n        final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)]);\n        buffer.write(((char)((u << 4) + l)));\n    } catch (final java.lang.ArrayIndexOutOfBoundsException e) {\n        throw new org.apache.commons.codec.DecoderException(\"Invalid URL encoding: \" , e);\n    }\n} else {\n    buffer.write(b);\n}"},"status":-1},{"failures":[],"tindex":"bf785de5-3d60-11e6-89e6-9f45b3e50ca5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:417","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"\\\\s{2,}\\\\b\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"name":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY","org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"upperName"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:92","type":"CtAssignmentImpl","sourcecode":"upperName = upperName.replaceAll(\"\\\\s+\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"status":-2},{"failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"bf785de6-3d60-11e6-89e6-2f0a629fc7a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:293","type":"CtIfImpl","sourcecode":"if (((leftCharacter.length()) != 1) || ((rightCharacter.length()) != 1)) {\n    throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + rawLine) + \" in \") + location));\n} "},"variableMap":{"rawLine":"body","leftCharacter":"body","rightCharacter":"body","location":"body"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:389","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : body.split(\"[|]\")) {\n    phs.add(org.apache.commons.codec.language.bm.Rule.parsePhoneme(part));\n}"},"status":-1},{"failures":[15,16],"tindex":"bf785de7-3d60-11e6-89e6-3924d1d94a3c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:723","type":"CtInvocationImpl","sourcecode":"result.appendAlternate('F')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:530","type":"CtInvocationImpl","sourcecode":"result.append('J', 'H')"},"status":-1},{"failures":[46],"tindex":"bf785de8-3d60-11e6-89e6-2f4eb8a3ff0d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:141","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    throw new java.lang.IllegalArgumentException(\"Salt must not be null\");\n} "},"variableMap":{"salt":"incl"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:436","type":"CtIfImpl","sourcecode":"if (incl.contains(\" \")) {\n    throw new java.lang.IllegalArgumentException((((\"Malformed import statement '\" + rawLine) + \"' in \") + location));\n} else {\n    lines.putAll(org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(incl), ((location + \"->\") + incl)));\n}"},"status":-1},{"failures":[48],"tindex":"bf785de9-3d60-11e6-89e6-85d13a9baa07","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:211","type":"CtInvocationImpl","sourcecode":"code.append('T')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:275","type":"CtInvocationImpl","sourcecode":"code.append('F')"},"status":-1},{"failures":[16,18,19],"tindex":"bf785dea-3d60-11e6-89e6-57982afad6a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:357","type":"CtInvocationImpl","sourcecode":"result.append('K', 'X')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:458","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-1},{"failures":[],"tindex":"bf785deb-3d60-11e6-89e6-019554af3ea2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:341","type":"CtIfImpl","sourcecode":"if ((rightLength = input.length()) > 0) {\n    nextChar = input.getNextChar();\n} else {\n    nextChar = '-';\n}"},"status":-2},{"failures":[],"tindex":"bf7884fc-3d60-11e6-89e6-ab372a7a2879","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:645","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = pattern"},"variableMap":{"pattern":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:114","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"y\", \"2\")"},"status":-2},{"failures":[],"tindex":"bf7884fd-3d60-11e6-89e6-e50d71d4c765","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:248","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"variableMap":{"str":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:47","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String;\n} "},"status":0},{"failures":[22,23,24,25,26,27,28,49,29],"tindex":"bf7884fe-3d60-11e6-89e6-937b8192e3b4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:239","type":"CtIfImpl","sourcecode":"if (((b[y]) & u) != 0) {\n    c |= 1;\n} "},"variableMap":{"b":"bytes","c":"i","u":"i","y":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:168","type":"CtIfImpl","sourcecode":"if (b == '+') {\n    buffer.write(' ');\n} else if (b == (org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.byte)) {\n    try {\n        final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)]);\n        final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)]);\n        buffer.write(((char)((u << 4) + l)));\n    } catch (final java.lang.ArrayIndexOutOfBoundsException e) {\n        throw new org.apache.commons.codec.DecoderException(\"Invalid URL encoding: \" , e);\n    }\n} else {\n    buffer.write(b);\n}"},"status":-1},{"failures":[],"tindex":"bf7884ff-3d60-11e6-89e6-2b61a2fc41fc","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:411","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"A\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"name":"str","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:337","type":"CtAssignmentImpl","sourcecode":"str = str.substring(0, ((str.length()) - 1))"},"status":-2},{"failures":[],"tindex":"bf788500-3d60-11e6-89e6-6fac724ea1df","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:83","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(raw)"},"variableMap":{"raw":"binaryData"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:677","type":"CtReturnImpl","sourcecode":"return b64.encode(binaryData)"},"status":-2},{"failures":[],"tindex":"bf788501-3d60-11e6-89e6-8bae16aaf5bc","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:209","type":"CtLocalVariableImpl","sourcecode":"final char char = salt.charAt(0)"},"variableMap":{"salt":"salt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:210","type":"CtLocalVariableImpl","sourcecode":"final char char = salt.charAt(1)"},"status":-2},{"failures":[22,24,25,26,50,29],"tindex":"bf788502-3d60-11e6-89e6-5b7d80d00dda","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:130","type":"CtForEachImpl","sourcecode":"for (final byte byte : bytes) {\n    int int = c;\n    if (b < 0) {\n        b = 256 + b;\n    } \n    if (urlsafe.get(b)) {\n        if (b == ' ') {\n            b = '+';\n        } \n        buffer.write(b);\n    } else {\n        buffer.write(org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.byte);\n        final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit(((b >> 4) & 15), org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.int));\n        final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit((b & 15), org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.int));\n        buffer.write(hex1);\n        buffer.write(hex2);\n    }\n}"},"status":-1},{"failures":[51,52,53,54,55,56,57,58],"tindex":"bf78ac13-3d60-11e6-89e6-f9d04e206874","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:443","type":"CtReturnImpl","sourcecode":"return new java.lang.String(chrs)"},"status":-1},{"failures":[],"tindex":"bf78ac14-3d60-11e6-89e6-ab9af042930b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:69","type":"CtAssignmentImpl","sourcecode":"this.java.nio.charset.Charset = charset"},"status":-2},{"failures":[],"tindex":"bf78ac15-3d60-11e6-89e6-9dea0b8543de","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:467","type":"CtIfImpl","sourcecode":"if ((index > 0) && (!(isVowel(charAt(value, (index - 1)))))) {\n    result.append('K');\n    index += 2;\n} else if (index == 0) {\n    if ((charAt(value, (index + 2))) == 'I') {\n        result.append('J');\n    } else {\n        result.append('K');\n    }\n    index += 2;\n} else if ((((index > 1) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 1, \"B\", \"H\", \"D\"))) || ((index > 2) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, \"B\", \"H\", \"D\")))) || ((index > 3) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 4), 1, \"B\", \"H\")))) {\n    index += 2;\n} else {\n    if (((index > 2) && ((charAt(value, (index - 1))) == 'U')) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, \"C\", \"G\", \"L\", \"R\", \"T\"))) {\n        result.append('F');\n    } else if ((index > 0) && ((charAt(value, (index - 1))) != 'I')) {\n        result.append('K');\n    } \n    index += 2;\n}"},"status":-2},{"failures":[59,60],"tindex":"bf78ac16-3d60-11e6-89e6-d56c8aeb4b5e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:130","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:134","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException()"},"status":-1},{"failures":[],"tindex":"bf78ac17-3d60-11e6-89e6-5d439638ef82","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"variableMap":{"terminator":"length","to":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:97","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(mapping, 0, org.apache.commons.codec.language.Soundex.this.char[], 0, mapping.int)"},"status":-2},{"failures":[61,62],"tindex":"bf78ac18-3d60-11e6-89e6-e918c45f93c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:281","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:141","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Md5Crypt.md5Crypt(keyBytes, ((org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8))))"},"status":-1},{"failures":[],"tindex":"bf78ac19-3d60-11e6-89e6-d507d3734101","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:453","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha256Digest().digest(data)"},"variableMap":{"data":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:272","type":"CtReturnImpl","sourcecode":"return context.byte[]"},"status":-2},{"failures":[],"tindex":"bf78ac1a-3d60-11e6-89e6-3b9f8f66dc74","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:789","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"bf78d32b-3d60-11e6-89e6-f7d319d616d0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:614","type":"CtAssignmentImpl","sourcecode":"str = str.substring(1)"},"status":-1},{"failures":[63,64,65],"tindex":"bf78d32c-3d60-11e6-89e6-319ceefa5718","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:211","type":"CtOperatorAssignmentImpl","sourcecode":"l_raw[ii] |= org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits]"},"status":-1},{"failures":[],"tindex":"bf78d32d-3d60-11e6-89e6-c500b608e767","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:95","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"k+\", \"K\")"},"variableMap":{"txt":"name1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:231","type":"CtAssignmentImpl","sourcecode":"name1 = removeVowels(name1)"},"status":-2},{"failures":[],"tindex":"bf78d32e-3d60-11e6-89e6-95434bbe2a2b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:105","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int"},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"minRating"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:199","type":"CtReturnImpl","sourcecode":"return minRating"},"status":-2},{"failures":[],"tindex":"bf78d32f-3d60-11e6-89e6-8166afe65282","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.StringEncoderComparator:77","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[66,67],"tindex":"bf78d330-3d60-11e6-89e6-8bcd8e89ec21","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.CharSequenceUtils:56","type":"CtLocalVariableImpl","sourcecode":"int int = length"},"variableMap":{"length":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:385","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(b[(offset++)])"},"status":-1},{"failures":[],"tindex":"bf78d331-3d60-11e6-89e6-7f052ce23f0f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:414","type":"CtAssignmentImpl","sourcecode":"inMultilineComment = false"},"variableMap":{"inMultilineComment":"eof"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:441","type":"CtAssignmentImpl","sourcecode":"context.boolean = true"},"status":-2},{"failures":[],"tindex":"bf78d332-3d60-11e6-89e6-c12af01ced5b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:76","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"x\", \"k\")"},"variableMap":{"txt":"org.apache.commons.codec.digest.Sha2Crypt.SHA256_PREFIX"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:103","type":"CtAssignmentImpl","sourcecode":"salt = (org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8))"},"status":-2},{"failures":[],"tindex":"bf78d333-3d60-11e6-89e6-e5073d10c6c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:101","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('|')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:68","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('#')"},"status":0},{"failures":[68,69],"tindex":"bf78d334-3d60-11e6-89e6-b74b34f98702","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:112","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"r3\", \"R3\")"},"status":-1},{"failures":[],"tindex":"bf78d335-3d60-11e6-89e6-7f31e6b5d7b1","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:116","type":"CtIfImpl","sourcecode":"if (ascii == null) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"ascii","ascii":"ascii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:125","type":"CtIfImpl","sourcecode":"if (ascii instanceof java.lang.String) {\n    return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((java.lang.String)(ascii)).toCharArray());\n} "},"status":0},{"failures":[70,64,71],"tindex":"bf78d336-3d60-11e6-89e6-81a20e038492","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:402","type":"CtAssignmentImpl","sourcecode":"b[(offset++)] = ((byte)((iValue >>> 24) & 255))"},"variableMap":{"b":"l_raw","offset":"bits","iValue":"ii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:184","type":"CtOperatorAssignmentImpl","sourcecode":"l_raw[ii] |= org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits]"},"status":-1},{"failures":[],"tindex":"bf78fa47-3d60-11e6-89e6-9bd20b551d26","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:414","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"O\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"name":"txt","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:102","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"why\", \"Why\")"},"status":-2},{"failures":[],"tindex":"bf78fa48-3d60-11e6-89e6-d134c8bcd823","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:517","type":"CtInvocationImpl","sourcecode":"nextBranches.clear()"},"status":0},{"failures":[15,16],"tindex":"bf78fa49-3d60-11e6-89e6-f512f3bf7ccc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:288","type":"CtAssignmentImpl","sourcecode":"this.int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int"},"variableMap":{"org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK":"index","encodeSize":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:605","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-1},{"failures":[66,67],"tindex":"bf78fa4a-3d60-11e6-89e6-7b97363182d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:240","type":"CtOperatorAssignmentImpl","sourcecode":"c |= 1"},"variableMap":{"c":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:388","type":"CtOperatorAssignmentImpl","sourcecode":"value |= (org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(b[(offset++)])) << 24"},"status":-1},{"failures":[51,52,53,54,55,56,57,58],"tindex":"bf78fa4b-3d60-11e6-89e6-0539296a75a7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:429","type":"CtAssignmentImpl","sourcecode":"text = text.toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale)"},"status":-1},{"failures":[66,67],"tindex":"bf78fa4c-3d60-11e6-89e6-8fd579443645","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:728","type":"CtOperatorAssignmentImpl","sourcecode":"index += 4"},"variableMap":{"index":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:349","type":"CtAssignmentImpl","sourcecode":"d = results[0]"},"status":-1},{"failures":[],"tindex":"bf78fa4d-3d60-11e6-89e6-5719e6080092","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:357","type":"CtAssignmentImpl","sourcecode":"d = ((((d & 255) << 16) | (d & 65280)) | ((d & 16711680) >>> 16)) | ((c & -268435456) >>> 4)"},"variableMap":{"c":"index","d":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:692","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-2},{"failures":[72],"tindex":"bf78fa4e-3d60-11e6-89e6-872af0d07cb2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:304","type":"CtInvocationImpl","sourcecode":"code.append('0')"},"status":-1},{"failures":[15,16,18,19],"tindex":"bf78fa4f-3d60-11e6-89e6-3f267e72a6ce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:785","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"bf78fa50-3d60-11e6-89e6-3ff191cb7fcd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:111","type":"CtIfImpl","sourcecode":"if ((es1 == null) || (es2 == null)) {\n    return 0;\n} "},"variableMap":{"es1":"value","es2":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:280","type":"CtIfImpl","sourcecode":"if (conditionC0(value, index)) {\n    result.append('K');\n    index += 2;\n} else if ((index == 0) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 6, \"CAESAR\"))) {\n    result.append('S');\n    index += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"CH\")) {\n    index = handleCH(value, result, index);\n} else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"CZ\")) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 4, \"WICZ\")))) {\n    result.append('S', 'X');\n    index += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 3, \"CIA\")) {\n    result.append('X');\n    index += 3;\n} else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"CC\")) && (!((index == 1) && ((charAt(value, 0)) == 'M')))) {\n    return handleCC(value, result, index);\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"CK\", \"CG\", \"CQ\")) {\n    result.append('K');\n    index += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"CI\", \"CE\", \"CY\")) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, \"CIO\", \"CIE\", \"CIA\")) {\n        result.append('S', 'X');\n    } else {\n        result.append('S');\n    }\n    index += 2;\n} else {\n    result.append('K');\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \" C\", \" Q\", \" G\")) {\n        index += 3;\n    } else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"C\", \"K\", \"Q\")) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"CE\", \"CI\")))) {\n        index += 2;\n    } else {\n        index++;\n    }\n}"},"status":-2},{"failures":[66,67],"tindex":"bf78fa51-3d60-11e6-89e6-2f2575d97de5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:347","type":"CtAssignmentImpl","sourcecode":"d = org.apache.commons.codec.digest.UnixCrypt.hPermOp(d, (-2), -859045888)"},"status":-1},{"failures":[73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125],"tindex":"bf792162-3d60-11e6-89e6-890e2f6965d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:366","type":"CtLocalVariableImpl","sourcecode":"final int int = ph.indexOf(\"[\")"},"variableMap":{"ph":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:45","type":"CtLocalVariableImpl","sourcecode":"final int int = str.length()"},"status":-1},{"failures":[],"tindex":"bf792163-3d60-11e6-89e6-ad4b08bf0bdb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:498","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(tempResult, ((byte)(0)))"},"variableMap":{"tempResult":"saltBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:297","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(saltBytes, ((byte)(0)))"},"status":-2},{"failures":[15,16,18],"tindex":"bf792164-3d60-11e6-89e6-7109acfc016e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:244","type":"CtUnaryOperatorImpl","sourcecode":"y++"},"variableMap":{"y":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:400","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-1},{"failures":[],"tindex":"bf792165-3d60-11e6-89e6-2d72201bd288","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:159","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.codec.binary.BaseNCodec.encode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context);\n} else {\n    org.apache.commons.codec.binary.BaseNCodec.decode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context);\n}"},"status":-2},{"failures":[126,127],"tindex":"bf792166-3d60-11e6-89e6-6f9fc2836026","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:99","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:136","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[66,128,67],"tindex":"bf792167-3d60-11e6-89e6-7f4acb3c0dbd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; (i < (key.int)) && (i < (original.int)) ; i++) {\n    final int int = original[i];\n    key[i] = ((byte)(iChar << 1));\n}"},"status":-1},{"failures":[15,16,129,18],"tindex":"bf792168-3d60-11e6-89e6-49a641c87adf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:275","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"variableMap":{"length":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:506","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-1},{"failures":[15,16,18],"tindex":"bf792169-3d60-11e6-89e6-813fbb5ffef4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:713","type":"CtInvocationImpl","sourcecode":"result.append('A', 'F')"},"status":-1},{"failures":[],"tindex":"bf79216a-3d60-11e6-89e6-676c17b38a83","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:275","type":"CtInvocationImpl","sourcecode":"code.append('F')"},"variableMap":{"code":"phonemeText"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:110","type":"CtAssignmentImpl","sourcecode":"this.java.lang.StringBuilder = new java.lang.StringBuilder(phonemeText)"},"status":-2},{"failures":[],"tindex":"bf79216b-3d60-11e6-89e6-912cae1461a8","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:889","type":"CtIfImpl","sourcecode":"if (input == null) {\n    return null;\n} "},"variableMap":{"input":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:167","type":"CtReturnImpl","sourcecode":"return name"},"status":-2},{"failures":[130,131,132,133,134,135,136,137,138],"tindex":"bf79216c-3d60-11e6-89e6-610d1f4c18c7","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:500","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(sBytes, ((byte)(0)))"},"variableMap":{"sBytes":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:155","type":"CtWhileImpl","sourcecode":"while (readLen == 0) {\n    if (!(org.apache.commons.codec.binary.BaseNCodec.hasData(org.apache.commons.codec.binary.BaseNCodec.Context))) {\n        final byte[] byte[] = new byte[boolean ? 4096 : 8192];\n        final int int = java.io.InputStream.read(buf);\n        if (boolean) {\n            org.apache.commons.codec.binary.BaseNCodec.encode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context);\n        } else {\n            org.apache.commons.codec.binary.BaseNCodec.decode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context);\n        }\n    } \n    readLen = org.apache.commons.codec.binary.BaseNCodec.readResults(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context);\n}"},"status":-1},{"failures":[139,140,141,142,143],"tindex":"bf79487d-3d60-11e6-89e6-e565205196f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:215","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"bf79487e-3d60-11e6-89e6-1184c447fba0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:369","type":"CtOperatorAssignmentImpl","sourcecode":"d &= 268435455"},"status":0},{"failures":[66,67],"tindex":"bf79487f-3d60-11e6-89e6-5552a99064c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.B64:57","type":"CtLocalVariableImpl","sourcecode":"int int = (((b2 << 16) & 16777215) | ((b1 << 8) & 65535)) | (b0 & 255)"},"variableMap":{"b2":"b","b0":"b","b1":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:321","type":"CtLocalVariableImpl","sourcecode":"final int int = b"},"status":-1},{"failures":[105,106,107,108,109,110,111,112,114,116,117,118,119,120,121,122,123],"tindex":"bf794880-3d60-11e6-89e6-b75d16380cfb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:288","type":"CtInvocationImpl","sourcecode":"key.append(chars[i])"},"status":-1},{"failures":[144,145],"tindex":"bf794881-3d60-11e6-89e6-e756f21751d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:369","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:90","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException()"},"status":-1},{"failures":[],"tindex":"bf794882-3d60-11e6-89e6-db295383ef18","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Crypt:67","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(keyBytes)"},"variableMap":{"keyBytes":"pArray"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:350","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUtf8(encode(pArray))"},"status":-2},{"failures":[],"tindex":"bf794883-3d60-11e6-89e6-ad4cee0213bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:249","type":"CtForImpl","sourcecode":"for (int int = 0 ; bits < (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[].int) ; ++bits) {\n    if (((raw[ii]) & (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits])) == 0) {\n        l_ascii[(jj - bits)] = '0';\n    } else {\n        l_ascii[(jj - bits)] = '1';\n    }\n}"},"variableMap":{"ii":"ii","jj":"bits","l_ascii":"l_raw","length":"jj","raw":"l_raw","org.apache.commons.codec.binary.BinaryCodec.BITS":"org.apache.commons.codec.binary.BinaryCodec.BITS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:210","type":"CtIfImpl","sourcecode":"if ((ascii[(jj - bits)]) == '1') {\n    l_raw[ii] |= org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits];\n} "},"status":-2},{"failures":[106,113,114,115,120],"tindex":"bf794884-3d60-11e6-89e6-ff4e86955cf8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:304","type":"CtInvocationImpl","sourcecode":"code.append('0')"},"variableMap":{"code":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:297","type":"CtInvocationImpl","sourcecode":"key.deleteCharAt(((key.length()) - 1))"},"status":-1},{"failures":[],"tindex":"bf794885-3d60-11e6-89e6-69e38af68fdc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:249","type":"CtReturnImpl","sourcecode":"return null"},"status":0},{"failures":[146],"tindex":"bf794886-3d60-11e6-89e6-99b0aaf3be3b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:353","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[110,111,120],"tindex":"bf794887-3d60-11e6-89e6-638b24c7f3ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:264","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(str).replaceFirst(\"FF\")"},"status":-1},{"failures":[],"tindex":"bf796f98-3d60-11e6-89e6-d394ab7c109d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:182","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = lsScanner.nextLine().trim()"},"variableMap":{"lsScanner":"scanner"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:257","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = scanner.nextLine()"},"status":0},{"failures":[],"tindex":"bf796f99-3d60-11e6-89e6-8dac00facc90","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:322","type":"CtReturnImpl","sourcecode":"return value < 0 ? value + 256 : value"},"variableMap":{"value":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:273","type":"CtReturnImpl","sourcecode":"return index + 1"},"status":-2},{"failures":[147,148,149,150,68,69],"tindex":"bf796f9a-3d60-11e6-89e6-69780c51018e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:85","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"d\", \"t\")"},"status":-1},{"failures":[30,31,32,33,34,37,38,39,40,41,42,43,44,45,46,47],"tindex":"bf796f9b-3d60-11e6-89e6-ef1848a0d922","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:161","type":"CtIfImpl","sourcecode":"if ((line.length()) == 0) {\n    continue;\n} "},"variableMap":{"line":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:184","type":"CtIfImpl","sourcecode":"if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n    inExtendedComment = false;\n} "},"status":-1},{"failures":[],"tindex":"bf796f9c-3d60-11e6-89e6-457df43537b7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"length","y":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:286","type":"CtIfImpl","sourcecode":"if ((parts.int) != 2) {\n    throw new java.lang.IllegalArgumentException((((((\"Malformed folding statement split into \" + (parts.int)) + \" parts: \") + rawLine) + \" in \") + location));\n} else {\n    final java.lang.String java.lang.String = parts[0];\n    final java.lang.String java.lang.String = parts[1];\n    if (((leftCharacter.length()) != 1) || ((rightCharacter.length()) != 1)) {\n        throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + rawLine) + \" in \") + location));\n    } \n    asciiFoldings.put(leftCharacter.charAt(0), rightCharacter.charAt(0));\n}"},"status":-2},{"failures":[],"tindex":"bf796f9d-3d60-11e6-89e6-2562892517db","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:65","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^trough\", \"trou2f\")"},"variableMap":{"txt":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:273","type":"CtAssignmentImpl","sourcecode":"line = line.substring(0, cmtI)"},"status":-2},{"failures":[151,152,153,154,155,156,157,158],"tindex":"bf796f9e-3d60-11e6-89e6-8b6cb1b218a6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:770","type":"CtInvocationImpl","sourcecode":"mac.update(buffer, 0, read)"},"status":-1},{"failures":[51,52,53,54,55,56,57,58],"tindex":"bf796f9f-3d60-11e6-89e6-c5311f979892","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:224","type":"CtReturnImpl","sourcecode":"return new java.lang.String(copyData(0, int))"},"status":-1},{"failures":[],"tindex":"bf796fa0-3d60-11e6-89e6-0d1e3a78c93e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:414","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"O\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"name":"txt","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:70","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ci\", \"si\")"},"status":-2},{"failures":[18],"tindex":"bf796fa1-3d60-11e6-89e6-6372b68f01e8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:656","type":"CtInvocationImpl","sourcecode":"result.append(\"SK\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:307","type":"CtInvocationImpl","sourcecode":"result.append('S', 'X')"},"status":-1},{"failures":[],"tindex":"bf796fa2-3d60-11e6-89e6-494b3827787b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:460","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[3], altResult[13], altResult[23], 4, buffer)"},"variableMap":{"altResult":"finalb","buffer":"passwd"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:287","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[4], finalb[10], finalb[5], 4, passwd)"},"status":-2},{"failures":[51,52,53,54,55,159,56,57,58,160,161],"tindex":"bf796fa3-3d60-11e6-89e6-05e533f5b7ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:90","type":"CtReturnImpl","sourcecode":"return +1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:219","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[162,163],"tindex":"bf796fa4-3d60-11e6-89e6-8964236dfd40","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:52","type":"CtAssignmentImpl","sourcecode":"txt = txt.toLowerCase(java.util.Locale.java.util.Locale.java.util.Locale)"},"status":-1},{"failures":[],"tindex":"bf7995b5-3d60-11e6-89e6-a3645295627a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:765","type":"CtInvocationImpl","sourcecode":"mac.reset()"},"status":0},{"failures":[],"tindex":"bf7995b6-3d60-11e6-89e6-37dbd22216a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:763","type":"CtAssignmentImpl","sourcecode":"startSrc = 1"},"variableMap":{"startSrc":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:208","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.ColognePhonetic.CologneBuffer.this.int = data.int"},"status":-2},{"failures":[],"tindex":"bf7995b7-3d60-11e6-89e6-ff36ab963976","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:376","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], lastChar)) || (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)))) {\n    code = '8';\n} else {\n    code = '4';\n}"},"status":-2},{"failures":[164,165,166,167,168,72,169],"tindex":"bf7995b8-3d60-11e6-89e6-3b949e620759","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:252","type":"CtInvocationImpl","sourcecode":"code.append('H')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:289","type":"CtInvocationImpl","sourcecode":"code.append('S')"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}