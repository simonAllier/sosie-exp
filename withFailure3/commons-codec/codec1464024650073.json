{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"179dcb98-210c-11e6-92fa-09c8ed5b5df0","series":0,"name":"replace","transplant":{"toString":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String sep = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n} ","position":"org.apache.commons.codec.binary.Base64:279","type":"CtIfImpl","sourcecode":"if (containsAlphabetOrPad(lineSeparator)) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + sep) + \"]\"));\n} "},"variableMap":{"lineSeparator":"b"},"type":"adrStmt","transplantationPoint":{"toString":"while (readLen == 0) {\n    if (!(baseNCodec.hasData(context))) {\n        final byte[] buf = new byte[doEncode ? 4096 : 8192];\n        final int c = in.read(buf);\n        if (doEncode) {\n            baseNCodec.encode(buf, 0, c, context);\n        } else {\n            baseNCodec.decode(buf, 0, c, context);\n        }\n    } \n    readLen = baseNCodec.readResults(b, offset, len, context);\n}","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:155","type":"CtWhileImpl","sourcecode":"while (readLen == 0) {\n    if (!(org.apache.commons.codec.binary.BaseNCodec.hasData(org.apache.commons.codec.binary.BaseNCodec.Context))) {\n        final byte[] byte[] = new byte[boolean ? 4096 : 8192];\n        final int int = java.io.InputStream.read(buf);\n        if (boolean) {\n            org.apache.commons.codec.binary.BaseNCodec.encode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context);\n        } else {\n            org.apache.commons.codec.binary.BaseNCodec.decode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context);\n        }\n    } \n    readLen = org.apache.commons.codec.binary.BaseNCodec.readResults(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context);\n}"},"status":-2},{"failures":[],"tindex":"179df2a9-210c-11e6-92fa-5179535a927a","series":0,"name":"replace","transplant":{"toString":"int startSrc = 0","position":"org.apache.commons.codec.binary.Base64:758","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"int b = c","position":"org.apache.commons.codec.net.URLCodec:131","type":"CtLocalVariableImpl","sourcecode":"int int = c"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":2,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}