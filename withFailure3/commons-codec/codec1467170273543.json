{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":7,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":42,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":110,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":78,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects":23,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":67,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":90,"org.apache.commons.codec.binary.Base64Test.testTriplets":116,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":13,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":1,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":34,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":50,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":82,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":83,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":108,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":8,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary":43,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":18,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":89,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":131,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":62,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":55,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":54,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples":101,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":121,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":122,"org.apache.commons.codec.language.Caverphone2Test.testEndMb":98,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":125,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":52,"org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX":41,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":123,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":70,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":124,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":57,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":26,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":95,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":3,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":16,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode":17,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":59,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":97,"org.apache.commons.codec.language.Caverphone2Test.testLocaleIndependence":105,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":22,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":73,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":87,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":6,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":114,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":115,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":53,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":33,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":85,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":38,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":31,"org.apache.commons.codec.net.URLCodecTest.testDecodeObjects":72,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":79,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":93,"org.apache.commons.codec.digest.CryptTest.testCryptWithBytes":76,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":49,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull":15,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":132,"org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals":61,"org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA":45,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":32,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":111,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":21,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":84,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":109,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":9,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2":75,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3":60,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":133,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":14,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":69,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":28,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall":81,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":63,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":11,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":46,"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":64,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":86,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":74,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":130,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":58,"org.apache.commons.codec.binary.Base64Test.testBase64":129,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":107,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":12,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":96,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":5,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":27,"org.apache.commons.codec.binary.Base64Test.testUUID":118,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":94,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":126,"org.apache.commons.codec.binary.Base64Test.testSingletons":127,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":106,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":88,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":102,"org.apache.commons.codec.binary.Base64Test.testPairs":117,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":19,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":20,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":40,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111":100,"org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals":99,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":65,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":77,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":92,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn":44,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":113,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":25,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":29,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":35,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":91,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":56,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":51,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":112,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":30,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":134,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":39,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":136,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1":36,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":24,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2":37,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":10,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":66,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":80,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":48,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":103,"org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid":71,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":120,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":128,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":47,"org.apache.commons.codec.language.Caverphone2Test.testEncodeEmpty":104,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":2,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":68,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":135,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":4,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":119,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":0},"transformations":[{"failures":[],"tindex":"11503cfa-3da8-11e6-890f-8ffe151ca3f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:508","type":"CtIfImpl","sourcecode":"if ((content.length()) == 0) {\n    return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n        @java.lang.Override\n        public boolean isMatch(final java.lang.CharSequence input) {\n            return (input.length()) == 0;\n        }\n    };\n} else {\n    return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n        @java.lang.Override\n        public boolean isMatch(final java.lang.CharSequence input) {\n            return input.equals(content);\n        }\n    };\n}"},"variableMap":{"input":"input","content":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:537","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return org.apache.commons.codec.language.bm.Rule.endsWith(input, content);\n    }\n}"},"status":-2},{"failures":[],"tindex":"1150640b-3da8-11e6-890f-d3ae6e7df6e0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:109","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"l3\", \"L3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:78","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"c\", \"k\")"},"status":0},{"failures":[0,1],"tindex":"1150640c-3da8-11e6-890f-8769acb7cc91","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:240","type":"CtOperatorAssignmentImpl","sourcecode":"c |= 1"},"variableMap":{"c":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:304","type":"CtAssignmentImpl","sourcecode":"right = results[1]"},"status":-1},{"failures":[],"tindex":"1150640d-3da8-11e6-890f-077615ce5634","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:70","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ci\", \"si\")"},"variableMap":{"txt":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:269","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(str).replaceFirst(\"Y\")"},"status":-2},{"failures":[],"tindex":"1150640e-3da8-11e6-890f-3f4094678b7f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:409","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = name.substring(0, 1)"},"variableMap":{"name":"lang"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:265","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String.format(\"org/apache/commons/codec/language/bm/%s.txt\", lang)"},"status":-2},{"failures":[],"tindex":"1150640f-3da8-11e6-890f-afd7a05a7e9a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:277","type":"CtIfImpl","sourcecode":"if (printable == null) {\n    printable = org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet;\n} "},"variableMap":{"org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS","printable":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:75","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('*')"},"status":-2},{"failures":[],"tindex":"11508b20-3da8-11e6-890f-21ccbde5fa3c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:206","type":"CtReturnImpl","sourcecode":"return doubleMetaphone(((java.lang.String)(obj)))"},"variableMap":{"obj":"source","this":"source"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.AbstractCaverphone:60","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.AbstractCaverphone.this.encode(((java.lang.String)(source)))"},"status":-2},{"failures":[],"tindex":"11508b21-3da8-11e6-890f-5113540683c9","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:647","type":"CtAssignmentImpl","sourcecode":"this.org.apache.commons.codec.language.bm.Rule.RPattern = org.apache.commons.codec.language.bm.Rule.pattern((\"^\" + rContext))"},"variableMap":{"rContext":"lContext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:646","type":"CtAssignmentImpl","sourcecode":"this.org.apache.commons.codec.language.bm.Rule.RPattern = org.apache.commons.codec.language.bm.Rule.pattern((lContext + \"$\"))"},"status":-2},{"failures":[2],"tindex":"11508b22-3da8-11e6-890f-d962e43ee43f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:291","type":"CtAssignmentImpl","sourcecode":"left = right"},"variableMap":{"left":"n","right":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:209","type":"CtOperatorAssignmentImpl","sourcecode":"n += 2"},"status":-1},{"failures":[],"tindex":"11508b23-3da8-11e6-890f-b7879d1f7124","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:167","type":"CtReturnImpl","sourcecode":"return readLen"},"variableMap":{"readLen":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.Utils:47","type":"CtReturnImpl","sourcecode":"return i"},"status":-2},{"failures":[3],"tindex":"11508b24-3da8-11e6-890f-33af67514763","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:426","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha1(data))"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:237","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md2(data))"},"status":-1},{"failures":[4,5,6,7],"tindex":"11508b25-3da8-11e6-890f-ff4f9bc31052","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:684","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, \"OM\", \"AM\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, \"VAN \", \"VON \"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) {\n    result.append('T');\n} else {\n    result.append('0', 'T');\n}"},"status":-1},{"failures":[],"tindex":"11508b26-3da8-11e6-890f-e92e03439ae1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:110","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ly\", \"Ly\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:73","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"tch\", \"2ch\")"},"status":0},{"failures":[6],"tindex":"11508b27-3da8-11e6-890f-a3ac305fc717","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:392","type":"CtInvocationImpl","sourcecode":"result.append(\"TK\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:619","type":"CtInvocationImpl","sourcecode":"result.append('S', 'X')"},"status":-1},{"failures":[],"tindex":"1150b238-3da8-11e6-890f-b5bbd32f1be6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:187","type":"CtIfImpl","sourcecode":"if (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (sumLength == (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"avail","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"avail","org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN":"avail","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"avail","org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"avail","minRating":"avail","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"avail","org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR":"avail","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"avail","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"avail","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"avail"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:112","type":"CtIfImpl","sourcecode":"if (avail > 0) {\n    final byte[] byte[] = new byte[avail];\n    final int int = org.apache.commons.codec.binary.BaseNCodec.readResults(buf, 0, avail, org.apache.commons.codec.binary.BaseNCodec.Context);\n    if (c > 0) {\n        java.io.OutputStream.write(buf, 0, c);\n    } \n} "},"status":-2},{"failures":[],"tindex":"1150b239-3da8-11e6-890f-ad72edd63769","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:68","type":"CtReturnImpl","sourcecode":"return java.security.MessageDigest.getInstance(algorithm)"},"variableMap":{"algorithm":"org.apache.commons.codec.digest.MessageDigestAlgorithms.MD2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:85","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getDigest(org.apache.commons.codec.digest.MessageDigestAlgorithms.org.apache.commons.codec.digest.MessageDigestAlgorithms.java.lang.String)"},"status":-2},{"failures":[8],"tindex":"1150b23a-3da8-11e6-890f-9d11eafb9561","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:85","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[len >> 1]"},"variableMap":{"len":"org.apache.commons.codec.binary.BaseNCodec.DEFAULT_BUFFER_RESIZE_FACTOR"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:254","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[(context.byte[].int) * (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)]"},"status":-1},{"failures":[9,10,11,12,13],"tindex":"1150b23b-3da8-11e6-890f-4f79f7ca9ef0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:361","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = ((byte)(((context.long) >> 24) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-1},{"failures":[],"tindex":"1150b23c-3da8-11e6-890f-a596e600d7cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.RefinedSoundex:64","type":"CtAssignmentImpl","sourcecode":"this.char[] = org.apache.commons.codec.language.RefinedSoundex.org.apache.commons.codec.language.RefinedSoundex.char[]"},"variableMap":{"soundexMapping":"mapping","org.apache.commons.codec.language.RefinedSoundex.US_ENGLISH_MAPPING":"mapping"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:77","type":"CtAssignmentImpl","sourcecode":"this.char[] = new char[mapping.int]"},"status":-2},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25],"tindex":"1150d94d-3da8-11e6-890f-edb693565fc8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:185","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getMd2Digest().digest(data)"},"variableMap":{"data":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:392","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet, bytes, boolean)"},"status":-1},{"failures":[26,27,28,29,30,31,32],"tindex":"1150d94e-3da8-11e6-890f-4b3417a03a6f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:273","type":"CtInvocationImpl","sourcecode":"ctx1.update(finalb, 0, org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.int)"},"status":-1},{"failures":[33,34],"tindex":"1150d94f-3da8-11e6-890f-935b8d6fd57b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:240","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (chars.length()) ; i++) {\n    if ((chars.charAt(i)) == input) {\n        return true;\n    } \n}"},"status":-1},{"failures":[35,36,37,38,39,40,41,42,43,44,45],"tindex":"1150d950-3da8-11e6-890f-bb14d97a8b1b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:152","type":"CtAssignmentImpl","sourcecode":"roundsCustom = true"},"variableMap":{"roundsCustom":"matches"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:355","type":"CtAssignmentImpl","sourcecode":"matches = (string.charAt((index + 1))) == c"},"status":-1},{"failures":[],"tindex":"1150d951-3da8-11e6-890f-edfff993c487","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:236","type":"CtLocalVariableImpl","sourcecode":"final int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:185","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[20,22],"tindex":"1150d952-3da8-11e6-890f-9bed4b6d1475","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:238","type":"CtOperatorAssignmentImpl","sourcecode":"c <<= 1"},"variableMap":{"c":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:293","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, ((!(printable.get(b))) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b))), buffer)"},"status":-1},{"failures":[],"tindex":"1150d953-3da8-11e6-890f-59d9ce320c91","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:297","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(saltBytes, ((byte)(0)))"},"variableMap":{"saltBytes":"tempResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:498","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(tempResult, ((byte)(0)))"},"status":0},{"failures":[],"tindex":"11510064-3da8-11e6-890f-d5b183c791b1","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:384","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Phoneme starts with '(' so must end with ')'\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:203","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (value.getClass().getName())) + \" cannot be encoded using BCodec\"))"},"status":-2},{"failures":[46,47,48,49,50],"tindex":"11510065-3da8-11e6-890f-37b9daa85d4a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:458","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[21], altResult[1], altResult[11], 4, buffer)"},"status":-1},{"failures":[],"tindex":"11510066-3da8-11e6-890f-63ba5e0e6824","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:414","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"O\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"name":"txt","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:104","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^h\", \"A\")"},"status":-2},{"failures":[4,5,6,7],"tindex":"11510067-3da8-11e6-890f-09191e5c171f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:584","type":"CtIfImpl","sourcecode":"if ((((index == ((value.length()) - 1)) && (!slavoGermanic)) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, \"IE\"))) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 4), 2, \"ME\", \"MA\")))) {\n    result.appendAlternate('R');\n} else {\n    result.append('R');\n}"},"status":-1},{"failures":[],"tindex":"11510068-3da8-11e6-890f-a3a287625e77","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:403","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha1(key, valueToDigest))"},"variableMap":{"valueToDigest":"str","key":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:228","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.this.nysiis(str)"},"status":-2},{"failures":[],"tindex":"11510069-3da8-11e6-890f-b142ab5a9d9e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:72","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"1151006a-3da8-11e6-890f-15ac34bb1fe3","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:296","type":"CtOperatorAssignmentImpl","sourcecode":"index += 3"},"variableMap":{"index":"org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:391","type":"CtOperatorAssignmentImpl","sourcecode":"context.int += org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int"},"status":-2},{"failures":[51],"tindex":"1151006b-3da8-11e6-890f-bf85680a6efe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:314","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getHmacSha1(key).doFinal(valueToDigest)"},"variableMap":{"valueToDigest":"key","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:527","type":"CtTryImpl","sourcecode":"try {\n    return org.apache.commons.codec.digest.HmacUtils.getHmacSha384(key).doFinal(valueToDigest);\n} catch (final java.lang.IllegalStateException e) {\n    throw new java.lang.IllegalArgumentException(e);\n}"},"status":-1},{"failures":[],"tindex":"1151006c-3da8-11e6-890f-bf733179fee0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:199","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"data","ascii":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:453","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha256Digest().digest(data)"},"status":-2},{"failures":[],"tindex":"1151277d-3da8-11e6-890f-a5072dcf4321","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:180","type":"CtAssignmentImpl","sourcecode":"this.java.util.List<org.apache.commons.codec.language.bm.Rule.Phoneme> = phonemes"},"status":-2},{"failures":[52,53],"tindex":"1151277e-3da8-11e6-890f-cfd5f1669d3b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:348","type":"CtAssignmentImpl","sourcecode":"code = '0'"},"variableMap":{"code":"lastChar"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:398","type":"CtAssignmentImpl","sourcecode":"lastChar = chr"},"status":-1},{"failures":[],"tindex":"1151277f-3da8-11e6-890f-554c983f47f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:332","type":"CtLocalVariableImpl","sourcecode":"char char = '/'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:184","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit(((b >> 4) & 15), 16))"},"status":-2},{"failures":[],"tindex":"11512780-3da8-11e6-890f-b1e5c81abeae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:72","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"cy\", \"sy\")"},"variableMap":{"txt":"org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:417","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"\\\\s{2,}\\\\b\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"status":-2},{"failures":[0,1],"tindex":"11512781-3da8-11e6-890f-cf7f43907d8d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:321","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"variableMap":{"index":"u"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:242","type":"CtOperatorAssignmentImpl","sourcecode":"u >>>= 1"},"status":-1},{"failures":[4,5],"tindex":"11512782-3da8-11e6-890f-8f5c799eba65","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:423","type":"CtInvocationImpl","sourcecode":"result.append(\"KL\", \"L\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:604","type":"CtInvocationImpl","sourcecode":"result.append('X', 'S')"},"status":-1},{"failures":[52,54,55,56,57,58,59,53],"tindex":"11512783-3da8-11e6-890f-6b4a9d0a1b3e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:399","type":"CtAssignmentImpl","sourcecode":"lastCode = code"},"status":-1},{"failures":[],"tindex":"11512784-3da8-11e6-890f-a378b1ec8072","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:331","type":"CtAssignmentImpl","sourcecode":"t = (t >>> 4) | (t << 28)"},"variableMap":{"t":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:251","type":"CtAssignmentImpl","sourcecode":"context.int = 0"},"status":-2},{"failures":[],"tindex":"11512785-3da8-11e6-890f-89c12bde8e1a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:889","type":"CtIfImpl","sourcecode":"if (input == null) {\n    return null;\n} "},"variableMap":{"input":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:468","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"11512786-3da8-11e6-890f-ef3ee6374e2f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:209","type":"CtOperatorAssignmentImpl","sourcecode":"n += 2"},"variableMap":{"n":"org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:190","type":"CtAssignmentImpl","sourcecode":"minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int"},"status":-2},{"failures":[],"tindex":"11512787-3da8-11e6-890f-31d5a24f2037","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:127","type":"CtIfImpl","sourcecode":"if ((((name == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name))) || ((name.length()) == 1)) {\n    return org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String;\n} "},"variableMap":{"name":"lastThree","org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"firstThree","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"firstThree"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:165","type":"CtReturnImpl","sourcecode":"return firstThree + lastThree"},"status":-2},{"failures":[4,5,60,6,7],"tindex":"11514e98-3da8-11e6-890f-23f70b2d3314","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:306","type":"CtAssignmentImpl","sourcecode":"this.int = (org.apache.commons.codec.binary.Base32.this.int) - 1"},"variableMap":{"encodeSize":"index","decodeSize":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:503","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[],"tindex":"11514e99-3da8-11e6-890f-274ed0998130","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.NameType:42","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = name"},"variableMap":{"name":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:65","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^trough\", \"trou2f\")"},"status":-2},{"failures":[],"tindex":"11514e9a-3da8-11e6-890f-d7c34786bd3b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.RefinedSoundex:199","type":"CtAssignmentImpl","sourcecode":"last = current"},"variableMap":{"current":"mapped","last":"last"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:278","type":"CtAssignmentImpl","sourcecode":"last = mapped"},"status":-2},{"failures":[],"tindex":"11514e9b-3da8-11e6-890f-eda4fc3d47ed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:142","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Salt must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:86","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"BeiderMorseEncoder encode parameter is not of type String\")"},"status":0},{"failures":[],"tindex":"11514e9c-3da8-11e6-890f-99015ba54320","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:141","type":"CtInvocationImpl","sourcecode":"buffer.write(org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.byte)"},"variableMap":{"buffer":"buffer","org.apache.commons.codec.net.URLCodec.ESCAPE_CHAR":"org.apache.commons.codec.net.QuotedPrintableCodec.LF"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:315","type":"CtInvocationImpl","sourcecode":"buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":-2},{"failures":[],"tindex":"11514e9d-3da8-11e6-890f-ff320055a818","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:162","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.decode(buf, 0, c, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-2},{"failures":[4,5,6],"tindex":"11514e9e-3da8-11e6-890f-cdde55b39fd5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:527","type":"CtInvocationImpl","sourcecode":"result.append('J', 'A')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:396","type":"CtInvocationImpl","sourcecode":"result.append('T')"},"status":-1},{"failures":[6],"tindex":"11514e9f-3da8-11e6-890f-1d787197930c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:284","type":"CtInvocationImpl","sourcecode":"result.append('S')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:616","type":"CtIfImpl","sourcecode":"if (slavoGermanic) {\n    result.append('S');\n} else {\n    result.append('S', 'X');\n}"},"status":-1},{"failures":[],"tindex":"11514ea0-3da8-11e6-890f-3b35535eddac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:385","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(b[(offset++)])"},"variableMap":{"b":"keyBytes","offset":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:136","type":"CtLocalVariableImpl","sourcecode":"final int int = keyBytes.int"},"status":-2},{"failures":[46,47,48,49,50],"tindex":"11514ea1-3da8-11e6-890f-5b9015630ec0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:461","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[24], altResult[4], altResult[14], 4, buffer)"},"status":-1},{"failures":[],"tindex":"11514ea2-3da8-11e6-890f-afb1719f373e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.BCodec:225","type":"CtReturnImpl","sourcecode":"return decode(((java.lang.String)(value)))"},"variableMap":{"this":"obj","value":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:505","type":"CtReturnImpl","sourcecode":"return encode(((byte[])(obj)))"},"status":-2},{"failures":[61,62,63,64],"tindex":"11514ea3-3da8-11e6-890f-0d2f2664b397","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:118","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"3\", \"\")"},"status":-1},{"failures":[],"tindex":"115175b4-3da8-11e6-890f-81b87775cdda","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:89","type":"CtIfImpl","sourcecode":"if ((salt != null) && (!(salt.startsWith(org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String)))) {\n    salt = (org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + salt;\n} "},"variableMap":{"salt":"dc","org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX":"dc"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:387","type":"CtIfImpl","sourcecode":"if (replacedName.contains(dc)) {\n    final java.lang.String java.lang.String = dc.substring(0, 1);\n    replacedName = replacedName.replace(dc, singleLetter);\n} "},"status":-2},{"failures":[],"tindex":"115175b5-3da8-11e6-890f-2d81a2cf91fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:231","type":"CtLocalVariableImpl","sourcecode":"int int = 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:47","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[65,66,33,34],"tindex":"115175b6-3da8-11e6-890f-adc6c52253ea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:602","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"115175b7-3da8-11e6-890f-a792a07944ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:305","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String"},"status":-2},{"failures":[44],"tindex":"115175b8-3da8-11e6-890f-496e08248d93","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:469","type":"CtInvocationImpl","sourcecode":"sb.append('|')"},"variableMap":{"sb":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:238","type":"CtInvocationImpl","sourcecode":"code.append('J')"},"status":-1},{"failures":[],"tindex":"115175b9-3da8-11e6-890f-399134a5a500","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:296","type":"CtTryImpl","sourcecode":"try {\n    final byte[] byte[] = object instanceof java.lang.String ? ((java.lang.String)(object)).getBytes(org.apache.commons.codec.binary.Hex.this.getCharset()) : ((byte[])(object));\n    return org.apache.commons.codec.binary.Hex.encodeHex(byteArray);\n} catch (final java.lang.ClassCastException e) {\n    throw new org.apache.commons.codec.EncoderException(e.getMessage() , e);\n}"},"status":-2},{"failures":[4,5,67,6,7],"tindex":"115175ba-3da8-11e6-890f-5b60f2957976","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:556","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = boxContent"},"variableMap":{"boxContent":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:919","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = value.substring(start, (start + length))"},"status":-1},{"failures":[68,69,70,71,72,73],"tindex":"115175bb-3da8-11e6-890f-7578c1005e91","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:221","type":"CtLocalVariableImpl","sourcecode":"int int = keyLen"},"variableMap":{"keyLen":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:172","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)])"},"status":-1},{"failures":[],"tindex":"115175bc-3da8-11e6-890f-852ad299b2f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:553","type":"CtIfImpl","sourcecode":"if (negate) {\n    boxContent = boxContent.substring(1);\n} "},"variableMap":{"negate":"found","boxContent":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:210","type":"CtIfImpl","sourcecode":"if (rules != null) {\n    for (final org.apache.commons.codec.language.bm.Rule org.apache.commons.codec.language.bm.Rule : rules) {\n        final java.lang.String java.lang.String = rule.getPattern();\n        patternLength = pattern.length();\n        if (rule.patternAndContextMatches(org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.java.lang.CharSequence, org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int)) {\n            org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.apply(rule.getPhoneme(), int);\n            org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.boolean = true;\n            break;\n        } \n    }\n} "},"status":-2},{"failures":[],"tindex":"115175bd-3da8-11e6-890f-87fcdfeebcde","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:450","type":"CtReturnImpl","sourcecode":"return new java.lang.String(org.apache.commons.codec.net.QuotedPrintableCodec.this.decode(org.apache.commons.codec.binary.StringUtils.getBytesUsAscii(str)) , charset)"},"status":-2},{"failures":[],"tindex":"115175be-3da8-11e6-890f-a17c94bfa966","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:192","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(bytes)"},"variableMap":{"bytes":"binaryData"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:677","type":"CtReturnImpl","sourcecode":"return b64.encode(binaryData)"},"status":-2},{"failures":[],"tindex":"115175bf-3da8-11e6-890f-25bae700183f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:260","type":"CtAssignmentImpl","sourcecode":"altResult = ctx.digest()"},"variableMap":{"altResult":"finalb","ctx":"ctx"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:250","type":"CtAssignmentImpl","sourcecode":"finalb = ctx.digest()"},"status":-2},{"failures":[],"tindex":"11519cd0-3da8-11e6-890f-b9a40ed78d49","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:368","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha1(key, valueToDigest))"},"variableMap":{"valueToDigest":"binaryData","key":"binaryData"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:595","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUtf8(org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, false, true))"},"status":-2},{"failures":[0,1],"tindex":"11519cd1-3da8-11e6-890f-b979532755fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:282","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"variableMap":{"index":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:394","type":"CtAssignmentImpl","sourcecode":"a = (a ^ t) ^ (t >>> (16 - n))"},"status":-1},{"failures":[],"tindex":"11519cd2-3da8-11e6-890f-f9e74aadd198","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:407","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(((((\"This method's parameter was expected to be of the type \" + (java.lang.String.java.lang.String.java.lang.Class.getName())) + \". But actually it was of the type \") + (object.getClass().getName())) + \".\"))"},"status":0},{"failures":[4,5,74,67,75,6,7],"tindex":"11519cd3-3da8-11e6-890f-7dbd4dbaa921","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:877","type":"CtIfImpl","sourcecode":"if (value.startsWith(element)) {\n    result = true;\n    break;\n} "},"variableMap":{"result":"result","value":"target","element":"target"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:922","type":"CtIfImpl","sourcecode":"if (target.equals(element)) {\n    result = true;\n    break;\n} "},"status":-1},{"failures":[76,46,47,48,77,49,50,78,79,80,81],"tindex":"11519cd4-3da8-11e6-890f-b960a7a1da7b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:430","type":"CtInvocationImpl","sourcecode":"buffer.append(\"$\")"},"status":-1},{"failures":[65,66,82,33,34,83],"tindex":"11519cd5-3da8-11e6-890f-013a6e23261d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:141","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : sl.java.util.Set<java.lang.String>) {\n    ls.add(lang);\n}"},"variableMap":{"languages":"ls","ls":"languages","sl":"sl"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:123","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.Set<java.lang.String>) {\n    if (sl.java.util.Set<java.lang.String>.contains(lang)) {\n        ls.add(lang);\n    } \n}"},"status":-1},{"failures":[4,5,6],"tindex":"11519cd6-3da8-11e6-890f-17e02403f080","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:396","type":"CtInvocationImpl","sourcecode":"result.append('T')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:668","type":"CtInvocationImpl","sourcecode":"result.append(\"SK\")"},"status":-1},{"failures":[39],"tindex":"11519cd7-3da8-11e6-890f-df6ce1288981","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:180","type":"CtInvocationImpl","sourcecode":"code.append('X')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:304","type":"CtInvocationImpl","sourcecode":"code.append('0')"},"status":-1},{"failures":[18,19,20],"tindex":"11519cd8-3da8-11e6-890f-d5df4a2370dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:363","type":"CtContinueImpl","sourcecode":"continue"},"status":-1},{"failures":[84,85,86,87,88,89,90,91,92,93,94],"tindex":"11519cd9-3da8-11e6-890f-3fd1df233ddd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:375","type":"CtOperatorAssignmentImpl","sourcecode":"context.int += byte[].int"},"status":-1},{"failures":[95,96,97,98,99,100,101,102,103,104,105],"tindex":"11519cda-3da8-11e6-890f-b58888be43f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:125","type":"CtAssignmentImpl","sourcecode":"txt = txt + (org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String)"},"status":-1},{"failures":[106,107,108,109,14,110,16,19,23,24],"tindex":"1151c3eb-3da8-11e6-890f-cfe195bcfbc2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:358","type":"CtOperatorAssignmentImpl","sourcecode":"c &= 268435455"},"variableMap":{"c":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:332","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer)"},"status":-1},{"failures":[],"tindex":"1151c3ec-3da8-11e6-890f-9183e9b3119e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:74","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(')')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"source"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:85","type":"CtIfImpl","sourcecode":"if (!(source instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"BeiderMorseEncoder encode parameter is not of type String\");\n} "},"status":-2},{"failures":[],"tindex":"1151c3ed-3da8-11e6-890f-950c7d889e00","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:299","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHex(byteArray)"},"variableMap":{"byteArray":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:340","type":"CtReturnImpl","sourcecode":"return decode(((java.lang.String)(obj)))"},"status":-2},{"failures":[],"tindex":"1151c3ee-3da8-11e6-890f-03d9f9695422","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:366","type":"CtAssignmentImpl","sourcecode":"d = (d >>> 1) | (d << 27)"},"variableMap":{"d":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:292","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-2},{"failures":[],"tindex":"1151c3ef-3da8-11e6-890f-a3f73ef66734","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:103","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"w\", \"2\")"},"variableMap":{"txt":"cachedString"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:85","type":"CtAssignmentImpl","sourcecode":"java.lang.String = null"},"status":-2},{"failures":[],"tindex":"1151c3f0-3da8-11e6-890f-f395d9e1fd3b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:85","type":"CtIfImpl","sourcecode":"if (b == null) {\n    throw new java.lang.NullPointerException();\n} else if ((offset < 0) || (len < 0)) {\n    throw new java.lang.IndexOutOfBoundsException();\n} else if ((offset > (b.int)) || ((offset + len) > (b.int))) {\n    throw new java.lang.IndexOutOfBoundsException();\n} else if (len > 0) {\n    if (boolean) {\n        org.apache.commons.codec.binary.BaseNCodec.encode(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context);\n    } else {\n        org.apache.commons.codec.binary.BaseNCodec.decode(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context);\n    }\n    flush(false);\n} "},"status":0},{"failures":[],"tindex":"1151c3f1-3da8-11e6-890f-fd1553830e0a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:85","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getDigest(org.apache.commons.codec.digest.MessageDigestAlgorithms.org.apache.commons.codec.digest.MessageDigestAlgorithms.java.lang.String)"},"variableMap":{"org.apache.commons.codec.digest.MessageDigestAlgorithms.MD2":"algorithm"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:68","type":"CtReturnImpl","sourcecode":"return java.security.MessageDigest.getInstance(algorithm)"},"status":-2},{"failures":[111,112,113,114,115],"tindex":"1151c3f2-3da8-11e6-890f-c980be4a8a37","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:359","type":"CtAssignmentImpl","sourcecode":"code = '3'"},"variableMap":{"code":"last"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:199","type":"CtAssignmentImpl","sourcecode":"last = current"},"status":-1},{"failures":[],"tindex":"1151c3f3-3da8-11e6-890f-95b093ad73dc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:212","type":"CtAssignmentImpl","sourcecode":"this.char[] = new char[buffSize]"},"variableMap":{"data":"mapping","buffSize":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:77","type":"CtAssignmentImpl","sourcecode":"this.char[] = new char[mapping.int]"},"status":-2},{"failures":[],"tindex":"1151c3f4-3da8-11e6-890f-23231a6a24de","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:197","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[512]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:85","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[len >> 1]"},"status":-2},{"failures":[46,47,48,49,50,78,79,80],"tindex":"1151c3f5-3da8-11e6-890f-331868ca4786","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"keyLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:275","type":"CtForImpl","sourcecode":"for (int int = 1 ; i <= keyLen ; i++) {\n    altCtx.update(keyBytes);\n}"},"status":-1},{"failures":[4,5,6],"tindex":"1151c3f6-3da8-11e6-890f-718d1bf29d23","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:442","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, \"VAN \", \"VON \")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"ET\"))) {\n    result.append('K');\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 3, \"IER\")) {\n    result.append('J');\n} else {\n    result.append('J', 'K');\n}"},"status":-1},{"failures":[],"tindex":"1151c3f7-3da8-11e6-890f-8711cfd404eb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.Utils:43","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Character.digit(((char)(b)), org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.int)"},"status":-2},{"failures":[],"tindex":"1151eb08-3da8-11e6-890f-df92cdabb36a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:182","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = lsScanner.nextLine().trim()"},"variableMap":{"lsScanner":"scanner"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:409","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = scanner.nextLine()"},"status":0},{"failures":[82,33,34,83],"tindex":"1151eb09-3da8-11e6-890f-f1807bbf3508","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:377","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.Phoneme(ph , org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet)"},"variableMap":{"ph":"ph","org.apache.commons.codec.language.bm.Languages.ANY_LANGUAGE":"org.apache.commons.codec.language.bm.Languages.ANY_LANGUAGE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:367","type":"CtIfImpl","sourcecode":"if (open >= 0) {\n    if (!(ph.endsWith(\"]\"))) {\n        throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a '[' but does not end in ']'\");\n    } \n    final java.lang.String java.lang.String = ph.substring(0, open);\n    final java.lang.String java.lang.String = ph.substring((open + 1), ((ph.length()) - 1));\n    final java.util.Set<java.lang.String> java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(in.split(\"[+]\")));\n    return new org.apache.commons.codec.language.bm.Rule.Phoneme(before , org.apache.commons.codec.language.bm.Languages.LanguageSet.from(langs));\n} else {\n    return new org.apache.commons.codec.language.bm.Rule.Phoneme(ph , org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet);\n}"},"status":-1},{"failures":[],"tindex":"1151eb0a-3da8-11e6-890f-b7d7c2c67a1d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:94","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(']')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:72","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('\\'')"},"status":0},{"failures":[],"tindex":"1151eb0b-3da8-11e6-890f-73b188051187","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:159","type":"CtAssignmentImpl","sourcecode":"line = line.trim()"},"variableMap":{"line":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:91","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"g\", \"k\")"},"status":-2},{"failures":[],"tindex":"1151eb0c-3da8-11e6-890f-a7ad90f00ee5","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:216","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.boolean = true"},"variableMap":{"found":"strict"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:150","type":"CtAssignmentImpl","sourcecode":"this.boolean = strict"},"status":-2},{"failures":[116,85,117,118,119,120,121,122,123,124,125,8,126,86,127,87,128,88,129,130,131,132,90,91,92,133,93,94,134,135,136],"tindex":"1151eb0d-3da8-11e6-890f-8123d7a84c0f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:421","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getHmacSha256(key).doFinal(valueToDigest)"},"variableMap":{"valueToDigest":"binaryData","key":"binaryData"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:677","type":"CtReturnImpl","sourcecode":"return b64.encode(binaryData)"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}