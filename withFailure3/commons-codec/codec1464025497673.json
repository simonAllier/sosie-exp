{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":20,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":15,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":19,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan":6,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":32,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":44,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":34,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY":9,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan":7,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis":5,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":14,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":2,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":29,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":47,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":48,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":42,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":41,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":40,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":4,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":18,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput":23,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":37,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":24,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":51,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":28,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":3,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":45,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":43,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":36,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":50,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":0,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":25,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":38,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":39,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":46,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":8,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":26,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":16,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":13,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":33,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":17,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone":22,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":12,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":27,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":35,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":49,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":11,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3":31,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":30,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":1,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":10,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual":21},"transformations":[{"failures":[],"tindex":"10d322d6-210e-11e6-b8b4-83c6d79d0ae5","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.found = true","position":"org.apache.commons.codec.language.bm.PhoneticEngine:216","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.boolean = true"},"variableMap":{"found":"encodeBlanks"},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.net.QCodec.this.encodeBlanks = b","position":"org.apache.commons.codec.net.QCodec:356","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.net.QCodec.this.boolean = b"},"status":-2},{"failures":[0,1,2],"tindex":"10d349e7-210e-11e6-b8b4-5b921d908199","series":0,"name":"replace","transplant":{"toString":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"TION\")) {\n    result.append('X');\n    index += 3;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, \"TIA\", \"TCH\")) {\n    result.append('X');\n    index += 3;\n} else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"TH\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, \"TTH\"))) {\n    if (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, \"OM\", \"AM\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, \"VAN \", \"VON \"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) {\n        result.append('T');\n    } else {\n        result.append('0', 'T');\n    }\n    index += 2;\n} else {\n    result.append('T');\n    index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"T\", \"D\") ? index + 2 : index + 1;\n}","position":"org.apache.commons.codec.language.DoubleMetaphone:677","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"TION\")) {\n    result.append('X');\n    index += 3;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, \"TIA\", \"TCH\")) {\n    result.append('X');\n    index += 3;\n} else if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"TH\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, \"TTH\"))) {\n    if (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, \"OM\", \"AM\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, \"VAN \", \"VON \"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) {\n        result.append('T');\n    } else {\n        result.append('0', 'T');\n    }\n    index += 2;\n} else {\n    result.append('T');\n    index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"T\", \"D\") ? index + 2 : index + 1;\n}"},"variableMap":{"result":"result","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"toString":"if (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, \"VAN \", \"VON \")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"ET\"))) {\n    result.append('K');\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 3, \"IER\")) {\n    result.append('J');\n} else {\n    result.append('J', 'K');\n}","position":"org.apache.commons.codec.language.DoubleMetaphone:442","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, \"VAN \", \"VON \")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, \"ET\"))) {\n    result.append('K');\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 3, \"IER\")) {\n    result.append('J');\n} else {\n    result.append('J', 'K');\n}"},"status":-1},{"failures":[],"tindex":"10d349e8-210e-11e6-b8b4-574645297b5a","series":0,"name":"replace","transplant":{"toString":"final java.lang.String input = cleanup(source)","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:490","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = cleanup(source)"},"variableMap":{"source":"l"},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.String combined = l + remainder","position":"org.apache.commons.codec.language.bm.PhoneticEngine:420","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = l + remainder"},"status":-2},{"failures":[3,4,5,6,7,8,9],"tindex":"10d370f9-210e-11e6-b8b4-dddf5f723d75","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"code.append('S')","position":"org.apache.commons.codec.language.Metaphone:289","type":"CtInvocationImpl","sourcecode":"code.append('S')"},"status":-1},{"failures":[1,2],"tindex":"10d370fa-210e-11e6-b8b4-e9c98b21a1f0","series":0,"name":"replace","transplant":{"toString":"result.appendAlternate('R')","position":"org.apache.commons.codec.language.DoubleMetaphone:587","type":"CtInvocationImpl","sourcecode":"result.appendAlternate('R')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.appendPrimary('L')","position":"org.apache.commons.codec.language.DoubleMetaphone:553","type":"CtInvocationImpl","sourcecode":"result.appendPrimary('L')"},"status":-1},{"failures":[10,11,12,13,14,15,16,17],"tindex":"10d370fb-210e-11e6-b8b4-fd412c88597c","series":0,"name":"add","transplant":{"toString":"ctx.update(keyBytes)","position":"org.apache.commons.codec.digest.Md5Crypt:201","type":"CtInvocationImpl","sourcecode":"ctx.update(keyBytes)"},"variableMap":{"keyBytes":"saltBytes","ctx":"altCtx"},"type":"adrStmt","transplantationPoint":{"toString":"altCtx.update(saltBytes)","position":"org.apache.commons.codec.digest.Sha2Crypt:317","type":"CtInvocationImpl","sourcecode":"altCtx.update(saltBytes)"},"status":-1},{"failures":[18],"tindex":"10d370fc-210e-11e6-b8b4-07c6a0756579","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (int index = 0 ; index < (chrs.length) ; index++) {\n    if ((chrs[index]) > 'Z') {\n        for (final char[] element : org.apache.commons.codec.language.ColognePhonetic.PREPROCESS_MAP) {\n            if ((chrs[index]) == (element[0])) {\n                chrs[index] = element[1];\n                break;\n            } \n        }\n    } \n}","position":"org.apache.commons.codec.language.ColognePhonetic:433","type":"CtForImpl","sourcecode":"for (int int = 0 ; index < (chrs.int) ; index++) {\n    if ((chrs[index]) > 'Z') {\n        for (final char[] char[] : org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[][]) {\n            if ((chrs[index]) == (element[0])) {\n                chrs[index] = element[1];\n                break;\n            } \n        }\n    } \n}"},"status":-1},{"failures":[19,0,20,21,1,22],"tindex":"10d370fd-210e-11e6-b8b4-9d3d02a14ebe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.primary.append(value)","position":"org.apache.commons.codec.language.DoubleMetaphone:958","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value)"},"status":-1},{"failures":[],"tindex":"10d3980e-210e-11e6-b8b4-4941d8c70671","series":0,"name":"replace","transplant":{"toString":"lastReplacement = null","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:84","type":"CtAssignmentImpl","sourcecode":"java.lang.String = null"},"variableMap":{"lastReplacement":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"^gn\", \"2n\")","position":"org.apache.commons.codec.language.Caverphone2:67","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^gn\", \"2n\")"},"status":-3},{"failures":[23],"tindex":"10d4344f-210e-11e6-b8b4-7313a564f1cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"throw new org.apache.commons.codec.EncoderException(\"DoubleMetaphone encode parameter is not of type String\")","position":"org.apache.commons.codec.language.DoubleMetaphone:204","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"DoubleMetaphone encode parameter is not of type String\")"},"status":-1},{"failures":[],"tindex":"10d43450-210e-11e6-b8b4-f7cd08e8bf20","series":0,"name":"replace","transplant":{"toString":"this.soundexMapping = org.apache.commons.codec.language.RefinedSoundex.US_ENGLISH_MAPPING","position":"org.apache.commons.codec.language.RefinedSoundex:64","type":"CtAssignmentImpl","sourcecode":"this.char[] = org.apache.commons.codec.language.RefinedSoundex.org.apache.commons.codec.language.RefinedSoundex.char[]"},"variableMap":{"soundexMapping":"soundexMapping","org.apache.commons.codec.language.RefinedSoundex.US_ENGLISH_MAPPING":"soundexMapping"},"type":"adrStmt","transplantationPoint":{"toString":"this.soundexMapping = mapping.toCharArray()","position":"org.apache.commons.codec.language.RefinedSoundex:90","type":"CtAssignmentImpl","sourcecode":"this.char[] = mapping.toCharArray()"},"status":-2},{"failures":[24,25,26,27,28,29,30],"tindex":"10d43451-210e-11e6-b8b4-bb44502f1e39","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"ctx.update(keyBytes[j])","position":"org.apache.commons.codec.digest.Md5Crypt:241","type":"CtInvocationImpl","sourcecode":"ctx.update(keyBytes[j])"},"status":-1},{"failures":[],"tindex":"10d43452-210e-11e6-b8b4-e90f23761e82","series":0,"name":"replace","transplant":{"toString":"if ((str == null) || ((str.length()) == 0)) {\n    return str;\n} ","position":"org.apache.commons.codec.language.SoundexUtils:42","type":"CtIfImpl","sourcecode":"if ((str == null) || ((str.length()) == 0)) {\n    return str;\n} "},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"toString":"if (str == null) {\n    return null;\n} ","position":"org.apache.commons.codec.net.QuotedPrintableCodec:597","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"10d45b63-210e-11e6-b8b4-c3fd1c04bae4","series":0,"name":"add","transplant":{"toString":"if (salt == null) {\n    throw new java.lang.IllegalArgumentException(\"Salt must not be null\");\n} ","position":"org.apache.commons.codec.digest.Sha2Crypt:141","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    throw new java.lang.IllegalArgumentException(\"Salt must not be null\");\n} "},"variableMap":{"salt":"line"},"type":"adrStmt","transplantationPoint":{"toString":"if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_END)) {\n    inExtendedComment = false;\n} ","position":"org.apache.commons.codec.language.bm.Languages:184","type":"CtIfImpl","sourcecode":"if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n    inExtendedComment = false;\n} "},"status":0},{"failures":[19,20,21,1,2,22],"tindex":"10d45b64-210e-11e6-b8b4-077e1ba7b038","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha512(data))","position":"org.apache.commons.codec.digest.DigestUtils:720","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha512(data))"},"variableMap":{"data":"input"},"type":"adrStmt","transplantationPoint":{"toString":"return input.toUpperCase(java.util.Locale.ENGLISH)","position":"org.apache.commons.codec.language.DoubleMetaphone:896","type":"CtReturnImpl","sourcecode":"return input.toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale)"},"status":-1},{"failures":[],"tindex":"10d45b65-210e-11e6-b8b4-d5c507db457b","series":0,"name":"add","transplant":{"toString":"return readLen","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:167","type":"CtReturnImpl","sourcecode":"return readLen"},"variableMap":{"readLen":"value"},"type":"adrStmt","transplantationPoint":{"toString":"return value < 0 ? value + 256 : value","position":"org.apache.commons.codec.digest.UnixCrypt:322","type":"CtReturnImpl","sourcecode":"return value < 0 ? value + 256 : value"},"status":-2},{"failures":[],"tindex":"10d45b66-210e-11e6-b8b4-bd7e78d9c37a","series":0,"name":"replace","transplant":{"toString":"c = (c >>> 2) | (c << 26)","position":"org.apache.commons.codec.digest.UnixCrypt:362","type":"CtAssignmentImpl","sourcecode":"c = (c >>> 2) | (c << 26)"},"variableMap":{"c":"right"},"type":"adrStmt","transplantationPoint":{"toString":"out[1] = right","position":"org.apache.commons.codec.digest.UnixCrypt:316","type":"CtAssignmentImpl","sourcecode":"out[1] = right"},"status":-2},{"failures":[],"tindex":"10d45b67-210e-11e6-b8b4-f1bc578f9af9","series":0,"name":"replace","transplant":{"toString":"return ((((letter.equalsIgnoreCase(\"E\")) || (letter.equalsIgnoreCase(\"A\"))) || (letter.equalsIgnoreCase(\"O\"))) || (letter.equalsIgnoreCase(\"I\"))) || (letter.equalsIgnoreCase(\"U\"))","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:277","type":"CtReturnImpl","sourcecode":"return ((((letter.equalsIgnoreCase(\"E\")) || (letter.equalsIgnoreCase(\"A\"))) || (letter.equalsIgnoreCase(\"O\"))) || (letter.equalsIgnoreCase(\"I\"))) || (letter.equalsIgnoreCase(\"U\"))"},"variableMap":{"letter":"str1"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.language.Caverphone.this.caverphone(str1).equals(org.apache.commons.codec.language.Caverphone.this.caverphone(str2))","position":"org.apache.commons.codec.language.Caverphone:102","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone.this.caverphone(str1).equals(org.apache.commons.codec.language.Caverphone.this.caverphone(str2))"},"status":-2},{"failures":[],"tindex":"10d45b68-210e-11e6-b8b4-4d1d8363066d","series":0,"name":"replace","transplant":{"toString":"final java.lang.String combined = l + remainder","position":"org.apache.commons.codec.language.bm.PhoneticEngine:420","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = l + remainder"},"variableMap":{"l":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY","remainder":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String name1LtREnd = org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:302","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String"},"status":-2},{"failures":[31,0,1,2],"tindex":"10d45b69-210e-11e6-b8b4-9fc536a0eac7","series":0,"name":"replace","transplant":{"toString":"ii -= 16","position":"org.apache.commons.codec.digest.Md5Crypt:224","type":"CtOperatorAssignmentImpl","sourcecode":"ii -= 16"},"variableMap":{"ii":"index"},"type":"adrStmt","transplantationPoint":{"toString":"index += 2","position":"org.apache.commons.codec.language.DoubleMetaphone:490","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[0,20,1,2],"tindex":"10d4827a-210e-11e6-b8b4-8f4014850405","series":0,"name":"replace","transplant":{"toString":"result.append('A', 'F')","position":"org.apache.commons.codec.language.DoubleMetaphone:713","type":"CtInvocationImpl","sourcecode":"result.append('A', 'F')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"toString":"result.append('L')","position":"org.apache.commons.codec.language.DoubleMetaphone:555","type":"CtInvocationImpl","sourcecode":"result.append('L')"},"status":-1},{"failures":[],"tindex":"10d4827b-210e-11e6-b8b4-b9e75583723c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"try {\n    final javax.crypto.spec.SecretKeySpec keySpec = new javax.crypto.spec.SecretKeySpec(key , algorithm);\n    final javax.crypto.Mac mac = javax.crypto.Mac.getInstance(algorithm);\n    mac.init(keySpec);\n    return mac;\n} catch (final java.security.NoSuchAlgorithmException e) {\n    throw new java.lang.IllegalArgumentException(e);\n} catch (final java.security.InvalidKeyException e) {\n    throw new java.lang.IllegalArgumentException(e);\n}","position":"org.apache.commons.codec.digest.HmacUtils:180","type":"CtTryImpl","sourcecode":"try {\n    final javax.crypto.spec.SecretKeySpec javax.crypto.spec.SecretKeySpec = new javax.crypto.spec.SecretKeySpec(key , algorithm);\n    final javax.crypto.Mac javax.crypto.Mac = javax.crypto.Mac.getInstance(algorithm);\n    mac.init(keySpec);\n    return mac;\n} catch (final java.security.NoSuchAlgorithmException e) {\n    throw new java.lang.IllegalArgumentException(e);\n} catch (final java.security.InvalidKeyException e) {\n    throw new java.lang.IllegalArgumentException(e);\n}"},"status":-2},{"failures":[],"tindex":"10d4827c-210e-11e6-b8b4-09a1713f0e2b","series":0,"name":"add","transplant":{"toString":"if (input.startsWith((l + \" \"))) {\n    final java.lang.String remainder = input.substring(((l.length()) + 1));\n    final java.lang.String combined = l + remainder;\n    return (((\"(\" + (encode(remainder))) + \")-(\") + (encode(combined))) + \")\";\n} ","position":"org.apache.commons.codec.language.bm.PhoneticEngine:417","type":"CtIfImpl","sourcecode":"if (input.startsWith((l + \" \"))) {\n    final java.lang.String java.lang.String = input.substring(((l.length()) + 1));\n    final java.lang.String java.lang.String = l + remainder;\n    return (((\"(\" + (encode(remainder))) + \")-(\") + (encode(combined))) + \")\";\n} "},"variableMap":{"input":"text","l":"text"},"type":"adrStmt","transplantationPoint":{"toString":"if (text == null) {\n    return null;\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:104","type":"CtIfImpl","sourcecode":"if (text == null) {\n    return null;\n} "},"status":-2},{"failures":[32,33,34],"tindex":"10d4827d-210e-11e6-b8b4-d9b45b2d5e69","series":0,"name":"replace","transplant":{"toString":"return true","position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return false","position":"org.apache.commons.codec.language.bm.Languages:269","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"10d4827e-210e-11e6-b8b4-f7d4234610b0","series":0,"name":"replace","transplant":{"toString":"if (text == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.ColognePhonetic:320","type":"CtIfImpl","sourcecode":"if (text == null) {\n    return null;\n} "},"variableMap":{"text":"str"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.net.QuotedPrintableCodec.this.encode(str, getCharset())","position":"org.apache.commons.codec.net.QuotedPrintableCodec:430","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.this.encode(str, getCharset())"},"status":-2},{"failures":[],"tindex":"10d4827f-210e-11e6-b8b4-3d8f96c2c0c8","series":0,"name":"add","transplant":{"toString":"if (text == null) {\n    return null;\n} ","position":"org.apache.commons.codec.language.ColognePhonetic:320","type":"CtIfImpl","sourcecode":"if (text == null) {\n    return null;\n} "},"variableMap":{"text":"charset"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.net.URLCodec.this.charset","position":"org.apache.commons.codec.net.URLCodec:365","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.this.java.lang.String"},"status":-2},{"failures":[],"tindex":"10d48280-210e-11e6-b8b4-3db5751ee963","series":0,"name":"add","transplant":{"toString":"return \"Q\"","position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return null","position":"org.apache.commons.codec.net.BCodec:160","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[35,36,37,38,39],"tindex":"10d48281-210e-11e6-b8b4-594677ac47c9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"sBuf.append(str.charAt(0))","position":"org.apache.commons.codec.language.RefinedSoundex:185","type":"CtInvocationImpl","sourcecode":"sBuf.append(str.charAt(0))"},"status":-1},{"failures":[],"tindex":"10d48282-210e-11e6-b8b4-c93266b5a61f","series":0,"name":"add","transplant":{"toString":"w >>= 6","position":"org.apache.commons.codec.digest.B64:62","type":"CtOperatorAssignmentImpl","sourcecode":"w >>= 6"},"variableMap":{"w":"r"},"type":"adrStmt","transplantationPoint":{"toString":"r = read(singleByte, 0, 1)","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:99","type":"CtAssignmentImpl","sourcecode":"r = read(byte[], 0, 1)"},"status":0},{"failures":[],"tindex":"10d4a993-210e-11e6-b8b4-bd419bfc83f3","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"ly\", \"Ly\")","position":"org.apache.commons.codec.language.Caverphone1:110","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ly\", \"Ly\")"},"variableMap":{"txt":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"adrStmt","transplantationPoint":{"toString":"upperName = upperName.replaceAll(\"\\\\s+\", org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:92","type":"CtAssignmentImpl","sourcecode":"upperName = upperName.replaceAll(\"\\\\s+\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"status":-2},{"failures":[10,11,12,13,14,15,16,17],"tindex":"10d4a994-210e-11e6-b8b4-af606751972a","series":0,"name":"add","transplant":{"toString":"if ((i % 7) != 0) {\n    ctx1.update(keyBytes);\n} ","position":"org.apache.commons.codec.digest.Md5Crypt:268","type":"CtIfImpl","sourcecode":"if ((i % 7) != 0) {\n    ctx1.update(keyBytes);\n} "},"variableMap":{"ctx1":"ctx","keyBytes":"altResult","i":"cnt"},"type":"adrStmt","transplantationPoint":{"toString":"if ((cnt & 1) != 0) {\n    ctx.update(altResult, 0, blocksize);\n} else {\n    ctx.update(keyBytes);\n}","position":"org.apache.commons.codec.digest.Sha2Crypt:248","type":"CtIfImpl","sourcecode":"if ((cnt & 1) != 0) {\n    ctx.update(altResult, 0, blocksize);\n} else {\n    ctx.update(keyBytes);\n}"},"status":-1},{"failures":[],"tindex":"10d4a995-210e-11e6-b8b4-a7bb5bc820d8","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[28], altResult[49], altResult[7], 4, buffer)","position":"org.apache.commons.codec.digest.Sha2Crypt:476","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[28], altResult[49], altResult[7], 4, buffer)"},"variableMap":{"altResult":"obj","buffer":"obj"},"type":"adrStmt","transplantationPoint":{"toString":"if (!(obj instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to RefinedSoundex encode is not of type java.lang.String\");\n} ","position":"org.apache.commons.codec.language.RefinedSoundex:134","type":"CtIfImpl","sourcecode":"if (!(obj instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to RefinedSoundex encode is not of type java.lang.String\");\n} "},"status":-2},{"failures":[40,41,42,43,18,44,45,46],"tindex":"10d4a996-210e-11e6-b8b4-67ca3970ad40","series":0,"name":"replace","transplant":{"toString":"return true","position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return false","position":"org.apache.commons.codec.language.ColognePhonetic:305","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[47,48,49,50,51],"tindex":"10d4a997-210e-11e6-b8b4-b3cbc515c8f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (int i = 0 ; i < ((bytes.length) - 3) ; i++) {\n    int b = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n    if (pos < (org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH)) {\n        pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!(printable.get(b))), buffer);\n    } else {\n        org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, ((!(printable.get(b))) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b))), buffer);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.CR);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.LF);\n        pos = 1;\n    }\n}","position":"org.apache.commons.codec.net.QuotedPrintableCodec:286","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < ((bytes.int) - 3) ; i++) {\n    int int = org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(i, bytes);\n    if (pos < (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.int)) {\n        pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!(printable.get(b))), buffer);\n    } else {\n        org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, ((!(printable.get(b))) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b))), buffer);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n        buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n        pos = 1;\n    }\n}"},"status":-1},{"failures":[15,16,17],"tindex":"10d4a998-210e-11e6-b8b4-2fa85f642137","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[22], altResult[43], altResult[1], 4, buffer)","position":"org.apache.commons.codec.digest.Sha2Crypt:470","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[22], altResult[43], altResult[1], 4, buffer)"},"status":-1},{"failures":[],"tindex":"10d4d0a9-210e-11e6-b8b4-1b9f9ccced09","series":0,"name":"replace","transplant":{"toString":"if (negate) {\n    boxContent = boxContent.substring(1);\n} ","position":"org.apache.commons.codec.language.bm.Rule:553","type":"CtIfImpl","sourcecode":"if (negate) {\n    boxContent = boxContent.substring(1);\n} "},"variableMap":{"negate":"inMultilineComment","boxContent":"org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_END"},"type":"adrStmt","transplantationPoint":{"toString":"if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_END)) {\n    inMultilineComment = false;\n} ","position":"org.apache.commons.codec.language.bm.Rule:413","type":"CtIfImpl","sourcecode":"if (line.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n    inMultilineComment = false;\n} "},"status":-2},{"failures":[],"tindex":"10d4d0aa-210e-11e6-b8b4-8bff1549501a","series":0,"name":"replace","transplant":{"toString":"sb.append('|')","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:469","type":"CtInvocationImpl","sourcecode":"sb.append('|')"},"variableMap":{"sb":"builder"},"type":"adrStmt","transplantationPoint":{"toString":"builder = new java.lang.StringBuilder()","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:83","type":"CtAssignmentImpl","sourcecode":"java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-2},{"failures":[],"tindex":"10d56ceb-210e-11e6-b8b4-03faa08f70ff","series":0,"name":"add","transplant":{"toString":"return org.apache.commons.codec.binary.Base64.encodeBase64(bytes)","position":"org.apache.commons.codec.net.BCodec:96","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.encodeBase64(bytes)"},"variableMap":{"bytes":"bigBytes"},"type":"adrStmt","transplantationPoint":{"toString":"return bigBytes","position":"org.apache.commons.codec.binary.Base64:755","type":"CtReturnImpl","sourcecode":"return bigBytes"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":38,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}