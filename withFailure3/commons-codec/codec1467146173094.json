{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":108,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched":166,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":137,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched":173,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":17,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":15,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":16,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":18,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR":171,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched":159,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan":64,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":72,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched":154,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse":3,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":35,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":103,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch":161,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":118,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":52,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":117,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":143,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":27,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":181,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":29,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":28,"org.apache.commons.codec.language.NysiisTest.testCap":129,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched":165,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot":184,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched":182,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":101,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":105,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant":195,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":34,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected":190,"org.apache.commons.codec.language.SoundexTest.testB650":14,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched":170,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":49,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":138,"org.apache.commons.codec.language.SoundexTest.testNewInstance":22,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched":162,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched":185,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched":177,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":67,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":139,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched":192,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":126,"org.apache.commons.codec.binary.Base64Test.testIsStringBase64":43,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":50,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected":158,"org.apache.commons.codec.language.NysiisTest.testDropBy":132,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":136,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":127,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":149,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch":168,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":77,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":134,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":51,"org.apache.commons.codec.language.NysiisTest.testRule7":131,"org.apache.commons.codec.language.Caverphone1Test.testEndMb":39,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":145,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":135,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched":155,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111":106,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":23,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":133,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched":160,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":94,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":54,"org.apache.commons.codec.net.URLCodecTest.testEncodeObjects":102,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched":156,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":80,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":66,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":85,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1":63,"org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding":120,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant":164,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":125,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":10,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant":186,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":73,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean":41,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":33,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray":86,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":32,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched":197,"org.apache.commons.codec.language.NysiisTest.testDan":130,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched":175,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnameCornerCase_Nulls_NoMatch":0,"org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString":45,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched":176,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch":183,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":74,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched":172,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch":189,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":119,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":140,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":36,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched":196,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":91,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":90,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":121,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":107,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":53,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":128,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":75,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":97,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":95,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":98,"org.apache.commons.codec.binary.Base64Test.testIsUrlSafe":42,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray":114,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":110,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved":174,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":61,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":40,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse":1,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex":8,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes":113,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":92,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":87,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved":169,"org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis":26,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":24,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":25,"org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean":46,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":76,"org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64":111,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":141,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode":142,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully":2,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":48,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":7,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":96,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable":19,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":81,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch":188,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":37,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":56,"org.apache.commons.codec.language.SoundexTest.testBadCharacters":9,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":62,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully":112,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched":157,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched":153,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":82,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched":179,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":47,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero":68,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":124,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched":180,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":100,"org.apache.commons.codec.language.SoundexTest.testLocaleIndependence":30,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":78,"org.apache.commons.codec.language.MetaphoneTest.testTCH":104,"org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace":44,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":31,"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":152,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer1":11,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":12,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":13,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":60,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":71,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":115,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":89,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":6,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":57,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":123,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":150,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":144,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":122,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":88,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched":191,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":65,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":55,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected":187,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn":69,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be":148,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":20,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":79,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":58,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":83,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":147,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched":163,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":116,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":93,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":38,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse":4,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":151,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":59,"org.apache.commons.codec.language.SoundexTest.testDifference":21,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":99,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":146,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":84,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange":178,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":70,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":5,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched":167,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH":194,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":109,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH":193},"transformations":[{"failures":[0,1,2,3,4],"tindex":"f458c007-3d6f-11e6-8cfa-9d5063799ed2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:215","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[5,6,7],"tindex":"f458e718-3d6f-11e6-8cfa-cb7cc9dfd3ac","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.URLCodec:137","type":"CtAssignmentImpl","sourcecode":"b = '+'"},"variableMap":{"b":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:452","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[],"tindex":"f458e719-3d6f-11e6-8cfa-3bebb9d4bb9b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:231","type":"CtLocalVariableImpl","sourcecode":"int int = 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:359","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"tindex":"f458e71a-3d6f-11e6-8cfa-63d369c465ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:176","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Character.digit(ch, 16)"},"variableMap":{"ch":"ch"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:230","type":"CtLocalVariableImpl","sourcecode":"final int int = ch - 'A'"},"status":-1},{"failures":[],"tindex":"f4590e2b-3d6f-11e6-8cfa-95b08531f6b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:889","type":"CtIfImpl","sourcecode":"if (input == null) {\n    return null;\n} "},"variableMap":{"input":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:167","type":"CtReturnImpl","sourcecode":"return soundex(str)"},"status":-2},{"failures":[31,32,33,34,35,36,37,38],"tindex":"f4590e2c-3d6f-11e6-8cfa-6d36c26f6c45","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:250","type":"CtAssignmentImpl","sourcecode":"finalb = ctx.digest()"},"variableMap":{"finalb":"altResult","ctx":"ctx"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:405","type":"CtAssignmentImpl","sourcecode":"altResult = ctx.digest()"},"status":-1},{"failures":[],"tindex":"f4590e2d-3d6f-11e6-8cfa-753556fb79ab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"i","y":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:319","type":"CtIfImpl","sourcecode":"if (name1LtRStart.equals(name2RtLStart)) {\n    name1Char[i] = ' ';\n    name2Char[i] = ' ';\n} "},"status":-2},{"failures":[],"tindex":"f4590e2e-3d6f-11e6-8cfa-75c31a72711d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:70","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ci\", \"si\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:85","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"z\", \"s\")"},"status":0},{"failures":[],"tindex":"f4590e2f-3d6f-11e6-8cfa-79720365bfa6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:94","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch = new org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:525","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch = branchingRequired ? branch.createBranch() : branch"},"status":-2},{"failures":[],"tindex":"f4590e30-3d6f-11e6-8cfa-4d6e35f3610b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:365","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.net.Utils.digit16(bytes[i])"},"variableMap":{"bytes":"data","i":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:141","type":"CtLocalVariableImpl","sourcecode":"final int int = data.int"},"status":-2},{"failures":[5,6],"tindex":"f4590e31-3d6f-11e6-8cfa-1fedf2eb6476","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:335","type":"CtIfImpl","sourcecode":"if (((index == 1) && ((charAt(value, (index - 1))) == 'A')) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, \"UCCEE\", \"UCCES\"))) {\n    result.append(\"KS\");\n} else {\n    result.append('X');\n}"},"status":-1},{"failures":[39,40],"tindex":"f4593542-3d6f-11e6-8cfa-4586ec243847","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:100","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"wy\", \"Wy\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:94","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"p+\", \"P\")"},"status":-1},{"failures":[],"tindex":"f4593543-3d6f-11e6-8cfa-65ec3b4e5b27","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:357","type":"CtAssignmentImpl","sourcecode":"d = ((((d & 255) << 16) | (d & 65280)) | ((d & 16711680) >>> 16)) | ((c & -268435456) >>> 4)"},"variableMap":{"c":"index","d":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:476","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-2},{"failures":[41],"tindex":"f4593544-3d6f-11e6-8cfa-07622bd57af2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:87","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : charsToTrim) {\n    upperName = upperName.replaceAll(str, org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String);\n}"},"status":-1},{"failures":[42,43,44,45,46],"tindex":"f4593545-3d6f-11e6-8cfa-fba26901684c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:312","type":"CtSwitchImpl","sourcecode":"switch (byteToCheck) {\n    case ' ' :\n    case '\\n' :\n    case '\\r' :\n    case '\\t' :\n        return true;\n    default :\n        return false;\n}"},"status":-1},{"failures":[47,48],"tindex":"f4593546-3d6f-11e6-8cfa-2916b753c3ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:238","type":"CtReturnImpl","sourcecode":"return (b == (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)) || (b == (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte))"},"status":-1},{"failures":[],"tindex":"f4593547-3d6f-11e6-8cfa-b7438883fc4b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:305","type":"CtInvocationImpl","sourcecode":"key.deleteCharAt(((key.length()) - 2))"},"variableMap":{"key":"local"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:131","type":"CtInvocationImpl","sourcecode":"local.append(inwd, 1, ((inwd.int) - 1))"},"status":-2},{"failures":[49,50,51,52,53,54,55,56,57],"tindex":"f4593548-3d6f-11e6-8cfa-43787a76f18c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:392","type":"CtIfImpl","sourcecode":"if (((int) > 0) && ((int) <= (context.int))) {\n    java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int);\n    context.int += byte[].int;\n    context.int = 0;\n} "},"status":-1},{"failures":[5,6,7],"tindex":"f4595c59-3d6f-11e6-8cfa-3f6ad39f66ad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:678","type":"CtInvocationImpl","sourcecode":"result.append('X')"},"status":-1},{"failures":[58],"tindex":"f4595c5a-3d6f-11e6-8cfa-c3dcca54420a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:252","type":"CtInvocationImpl","sourcecode":"code.append('H')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:197","type":"CtInvocationImpl","sourcecode":"code.append('K')"},"status":-1},{"failures":[],"tindex":"f4595c5b-3d6f-11e6-8cfa-05cb7db07d2f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:142","type":"CtAssignmentImpl","sourcecode":"from = to + 1"},"variableMap":{"from":"index","to":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:730","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":0},{"failures":[59,60,61,62],"tindex":"f4595c5c-3d6f-11e6-8cfa-41ee874be7a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:521","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(keyBytes, null)"},"variableMap":{"keyBytes":"binaryData"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:569","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUtf8(org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, false))"},"status":-1},{"failures":[],"tindex":"f4595c5d-3d6f-11e6-8cfa-1fec5b0f3ad6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:357","type":"CtAssignmentImpl","sourcecode":"d = ((((d & 255) << 16) | (d & 65280)) | ((d & 16711680) >>> 16)) | ((c & -268435456) >>> 4)"},"variableMap":{"c":"index","d":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:718","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-2},{"failures":[],"tindex":"f4595c5e-3d6f-11e6-8cfa-e17ad10695d6","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:159","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (data.int) ; i++) {\n    if ((data[i]) == (org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte)) {\n        data[i] = org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte;\n    } \n}"},"variableMap":{"org.apache.commons.codec.net.QCodec.BLANK":"pad","data":"decodeTable","length":"length","org.apache.commons.codec.net.QCodec.UNDERSCORE":"pad"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:345","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < inAvail ; i++) {\n    final byte byte = in[(inPos++)];\n    if (b == (byte)) {\n        context.boolean = true;\n        break;\n    } else {\n        final byte[] byte[] = ensureBufferSize(int, context);\n        if ((b >= 0) && (b < (org.apache.commons.codec.binary.Base32.this.byte[].int))) {\n            final int int = org.apache.commons.codec.binary.Base32.this.byte[][b];\n            if (result >= 0) {\n                context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int);\n                context.long = ((context.long) << (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int)) + result;\n                if ((context.int) == 0) {\n                    buffer[((context.int)++)] = ((byte)(((context.long) >> 32) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n                    buffer[((context.int)++)] = ((byte)(((context.long) >> 24) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n                    buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n                    buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n                    buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n                } \n            } \n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"f459836f-3d6f-11e6-8cfa-77fd7b0eb842","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:281","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:150","type":"CtReturnImpl","sourcecode":"return (\"Languages(\" + (java.util.Set<java.lang.String>.toString())) + \")\""},"status":-2},{"failures":[5,6],"tindex":"f4598370-3d6f-11e6-8cfa-8382098fbd3d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:271","type":"CtInvocationImpl","sourcecode":"result.append('A')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:635","type":"CtInvocationImpl","sourcecode":"result.appendAlternate('S')"},"status":-1},{"failures":[63,64,65,66,67,68,69],"tindex":"f4598371-3d6f-11e6-8cfa-19544d08c9ea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:296","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = name2.toCharArray()"},"variableMap":{"name2":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:103","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = txt.toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale).toCharArray()"},"status":-1},{"failures":[70,71,72,73],"tindex":"f4598372-3d6f-11e6-8cfa-f78e6f906575","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:97","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Languages.SomeLanguages.this.java.util.Set<java.lang.String>.iterator().next()"},"status":-1},{"failures":[],"tindex":"f4598373-3d6f-11e6-8cfa-9fc88f4d53be","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:161","type":"CtAssignmentImpl","sourcecode":"data[i] = org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte"},"variableMap":{"data":"buffer","i":"pos","org.apache.commons.codec.net.QCodec.UNDERSCORE":"pad"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:365","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte"},"status":-2},{"failures":[],"tindex":"f4598374-3d6f-11e6-8cfa-d552f35bbb7c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:311","type":"CtIfImpl","sourcecode":"if (ruleType == (org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType)) {\n    throw new java.lang.IllegalArgumentException((\"ruleType must not be \" + (org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType)));\n} "},"variableMap":{"org.apache.commons.codec.language.bm.RuleType.RULES":"rt","ruleType":"org.apache.commons.codec.language.bm.RuleType.RULES"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:228","type":"CtIfImpl","sourcecode":"if (!(rt.equals(org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType))) {\n    rs.put(\"common\", org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(s, rt, \"common\"), org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, \"common\")));\n} "},"status":-2},{"failures":[],"tindex":"f45d5405-3d6f-11e6-8cfa-1f137baae791","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:295","type":"CtAssignmentImpl","sourcecode":"t = right"},"status":0},{"failures":[74,75],"tindex":"f45d5406-3d6f-11e6-8cfa-31e3295795db","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:240","type":"CtOperatorAssignmentImpl","sourcecode":"c |= 1"},"variableMap":{"c":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:362","type":"CtAssignmentImpl","sourcecode":"c = (c >>> 2) | (c << 26)"},"status":-1},{"failures":[],"tindex":"f45d5407-3d6f-11e6-8cfa-a3e09bac0b2a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"maxResultSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:670","type":"CtIfImpl","sourcecode":"if (len > maxResultSize) {\n    throw new java.lang.IllegalArgumentException((((\"Input array too big, the output array would be bigger (\" + len) + \") than the specified maximum size of \") + maxResultSize));\n} "},"status":-2},{"failures":[5,6],"tindex":"f45d5408-3d6f-11e6-8cfa-957b9880009e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:522","type":"CtInvocationImpl","sourcecode":"result.append('J', 'H')"},"status":-1},{"failures":[31,32,33,34,35,36,37,38],"tindex":"f45d5409-3d6f-11e6-8cfa-ef7016e224c1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:386","type":"CtIfImpl","sourcecode":"if ((i % 7) != 0) {\n    ctx.update(pBytes, 0, keyLen);\n} "},"status":-1},{"failures":[],"tindex":"f45d540a-3d6f-11e6-8cfa-3331233f0f23","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:764","type":"CtUnaryOperatorImpl","sourcecode":"len--"},"variableMap":{"len":"org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:446","type":"CtAssignmentImpl","sourcecode":"context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int)"},"status":-2},{"failures":[76,77,78,79,80,81,82],"tindex":"f45d7b1b-3d6f-11e6-8cfa-bfebfd5f82e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:502","type":"CtInvocationImpl","sourcecode":"altCtx.reset()"},"variableMap":{"altCtx":"ctx1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:275","type":"CtInvocationImpl","sourcecode":"ctx1.update(keyBytes)"},"status":-1},{"failures":[],"tindex":"f45d7b1c-3d6f-11e6-8cfa-7d17d321237f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:231","type":"CtLocalVariableImpl","sourcecode":"int int = 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:172","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)])"},"status":-2},{"failures":[],"tindex":"f45d7b1d-3d6f-11e6-8cfa-115a490b0d3f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:121","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"3$\", \"A\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:91","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"[aeiou]\", \"3\")"},"status":0},{"failures":[74,75],"tindex":"f45d7b1e-3d6f-11e6-8cfa-0171d6a6e6e3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:306","type":"CtAssignmentImpl","sourcecode":"right = results[0]"},"status":-1},{"failures":[],"tindex":"f45d7b1f-3d6f-11e6-8cfa-13d2205e7248","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:231","type":"CtAssignmentImpl","sourcecode":"hard = true"},"variableMap":{"hard":"inMultilineComment"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:268","type":"CtAssignmentImpl","sourcecode":"inMultilineComment = true"},"status":0},{"failures":[],"tindex":"f45d7b20-3d6f-11e6-8cfa-3fbacf041cad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:121","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"3$\", \"A\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:84","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"sh\", \"s2\")"},"status":0},{"failures":[],"tindex":"f45d7b21-3d6f-11e6-8cfa-bd6a70bd5e63","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:290","type":"CtIfImpl","sourcecode":"if (lineLength > 0) {\n    if (lineSeparator == null) {\n        throw new java.lang.IllegalArgumentException(((\"lineLength \" + lineLength) + \" > 0, but lineSeparator is null\"));\n    } \n    if (containsAlphabetOrPad(lineSeparator)) {\n        final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(lineSeparator);\n        throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain Base32 characters: [\" + sep) + \"]\"));\n    } \n    this.int = (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int) + (lineSeparator.int);\n    this.byte[] = new byte[lineSeparator.int];\n    java.lang.System.arraycopy(lineSeparator, 0, org.apache.commons.codec.binary.Base32.this.byte[], 0, lineSeparator.int);\n} else {\n    this.int = org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int;\n    this.byte[] = null;\n}"},"variableMap":{"encodeSize":"length","org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK":"length","this":"this","length":"length","lineSeparator":"pArray","lineLength":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:410","type":"CtInvocationImpl","sourcecode":"decode(pArray, 0, pArray.int, context)"},"status":-2},{"failures":[83,84,85],"tindex":"f45d7b22-3d6f-11e6-8cfa-b96d5d2e69e8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:144","type":"CtReturnImpl","sourcecode":"return name"},"variableMap":{"name":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:162","type":"CtReturnImpl","sourcecode":"return encode(value, org.apache.commons.codec.net.BCodec.this.getCharset())"},"status":-1},{"failures":[],"tindex":"f45d7b23-3d6f-11e6-8cfa-67636631ac87","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:412","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha1(data))"},"variableMap":{"data":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:141","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Md5Crypt.md5Crypt(keyBytes, ((org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8))))"},"status":-2},{"failures":[76,77,78,79,80,81,82],"tindex":"f45d7b24-3d6f-11e6-8cfa-834bf88aa286","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:297","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(saltBytes, ((byte)(0)))"},"variableMap":{"saltBytes":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:259","type":"CtInvocationImpl","sourcecode":"ctx1.update(keyBytes)"},"status":-1},{"failures":[86],"tindex":"f45da235-3d6f-11e6-8cfa-6ba3d5bf28f4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:743","type":"CtInvocationImpl","sourcecode":"mac.update(valueToDigest)"},"status":-1},{"failures":[],"tindex":"f45da236-3d6f-11e6-8cfa-9da1e2dfb373","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:265","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String.format(\"org/apache/commons/codec/language/bm/%s.txt\", lang)"},"variableMap":{"lang":"content"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:549","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = content.substring(1, ((content.length()) - 1))"},"status":-2},{"failures":[],"tindex":"f45da237-3d6f-11e6-8cfa-c7afb25cd852","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:75","type":"CtInvocationImpl","sourcecode":"buffer.append(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.char)"},"variableMap":{"org.apache.commons.codec.net.RFC1522Codec.SEP":"c","buffer":"sb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:365","type":"CtInvocationImpl","sourcecode":"sb.append(c)"},"status":-2},{"failures":[],"tindex":"f45da238-3d6f-11e6-8cfa-9fe997e93fde","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:666","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.this.java.lang.String"},"variableMap":{"pattern":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:181","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.BCodec.this.decodeText(value)"},"status":-2},{"failures":[87,88,70,71,72,73,89,90,91,92,93,94,95,96,97,98],"tindex":"f45da239-3d6f-11e6-8cfa-f5d5f4f8bd21","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:222","type":"CtTryImpl","sourcecode":"try {\n    rs.put(l, org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(s, rt, l), org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l)));\n} catch (final java.lang.IllegalStateException e) {\n    throw new java.lang.IllegalStateException((\"Problem processing \" + (org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l))) , e);\n}"},"status":-1},{"failures":[],"tindex":"f45da23a-3d6f-11e6-8cfa-e983d52e2491","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.AbstractCaverphone:58","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Caverphone encode is not of type java.lang.String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:190","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt))"},"status":-2},{"failures":[99,100,101,102],"tindex":"f45da23b-3d6f-11e6-8cfa-f55150391f0f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:78","type":"CtForImpl","sourcecode":"for (int int = 'A' ; i <= 'Z' ; i++) {\n    org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(i);\n}"},"status":-1},{"failures":[103],"tindex":"f45da23c-3d6f-11e6-8cfa-894609339059","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:296","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md5(data))"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:733","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha1Hex(data)"},"status":-1},{"failures":[58,104],"tindex":"f45da23d-3d6f-11e6-8cfa-bd4045418804","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"n","name2Size":"wdsz"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:194","type":"CtIfImpl","sourcecode":"if (((n == 0) && (wdsz >= 3)) && (isVowel(local, 2))) {\n    code.append('K');\n} else {\n    code.append('X');\n}"},"status":-1},{"failures":[105,106],"tindex":"f45da23e-3d6f-11e6-8cfa-abd260dca8ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:105","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"h\", \"2\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:94","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^y\", \"A\")"},"status":-1},{"failures":[36,37,38],"tindex":"f45da23f-3d6f-11e6-8cfa-c944f50691a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:499","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(pBytes, ((byte)(0)))"},"variableMap":{"pBytes":"altResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:484","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[15], altResult[36], altResult[57], 4, buffer)"},"status":-1},{"failures":[5,6,107,7,108],"tindex":"f45da240-3d6f-11e6-8cfa-e18690e84df4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:767","type":"CtInvocationImpl","sourcecode":"result.append(\"S\", \"TS\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:570","type":"CtInvocationImpl","sourcecode":"result.append('F')"},"status":-1},{"failures":[109,110,111,43],"tindex":"f45dc951-3d6f-11e6-8cfa-37fbe4d79a1a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:510","type":"CtReturnImpl","sourcecode":"return (octet == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.byte)) || (((octet >= 0) && (octet < (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[].int))) && ((org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[][octet]) != (-1)))"},"status":-1},{"failures":[],"tindex":"f45dc952-3d6f-11e6-8cfa-8fcf60588c70","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:243","type":"CtOperatorAssignmentImpl","sourcecode":"ii >>= 1"},"status":-2},{"failures":[112],"tindex":"f45dc953-3d6f-11e6-8cfa-934f3c62699d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:209","type":"CtOperatorAssignmentImpl","sourcecode":"n += 2"},"variableMap":{"n":"minRating"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:196","type":"CtAssignmentImpl","sourcecode":"minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int"},"status":-1},{"failures":[],"tindex":"f45dc954-3d6f-11e6-8cfa-958174352e81","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:373","type":"CtLocalVariableImpl","sourcecode":"final int int = (((org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][4][(d & 63)]) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][5][(((d >>> 7) & 3) | ((d >>> 8) & 60))])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][6][((d >>> 15) & 63)])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][7][(((d >>> 21) & 15) | ((d >>> 22) & 48))])"},"status":-2},{"failures":[113,114],"tindex":"f45dc955-3d6f-11e6-8cfa-95ee8386d8c0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:500","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(sBytes, ((byte)(0)))"},"variableMap":{"sBytes":"raw"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:249","type":"CtForImpl","sourcecode":"for (int int = 0 ; bits < (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[].int) ; ++bits) {\n    if (((raw[ii]) & (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits])) == 0) {\n        l_ascii[(jj - bits)] = '0';\n    } else {\n        l_ascii[(jj - bits)] = '1';\n    }\n}"},"status":-1},{"failures":[36,37,38],"tindex":"f45dc956-3d6f-11e6-8cfa-b179e377417c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:230","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(finalb, ((byte)(0)))"},"variableMap":{"finalb":"altResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:490","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(((byte)(0)), ((byte)(0)), altResult[63], 2, buffer)"},"status":-1},{"failures":[],"tindex":"f45dc957-3d6f-11e6-8cfa-2b66f5224602","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:511","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 25))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))]"},"variableMap":{"encodeTable":"buffer","pos":"org.apache.commons.codec.binary.Base32.MASK_5BITS","org.apache.commons.codec.binary.Base32.MASK_5BITS":"org.apache.commons.codec.binary.Base32.MASK_5BITS","context":"context","lbitWorkArea":"lbitWorkArea","buffer":"encodeTable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:510","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 30))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))]"},"status":-2},{"failures":[115],"tindex":"f45dc958-3d6f-11e6-8cfa-a19ab8b27fcf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:386","type":"CtAssignmentImpl","sourcecode":"ch = org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.lang.Character>.get(ch)"},"status":-1},{"failures":[],"tindex":"f45dc959-3d6f-11e6-8cfa-e921e64df699","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:297","type":"CtInvocationImpl","sourcecode":"key.deleteCharAt(((key.length()) - 1))"},"variableMap":{"key":"builder"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:139","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(replacement)"},"status":-2},{"failures":[116,117,118,119,120,121,122,123,124,125,126,127,128],"tindex":"f45dc95a-3d6f-11e6-8cfa-2960aaaebcd4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:337","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[saltLen]"},"variableMap":{"saltLen":"encodeSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:445","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = ensureBufferSize(int, context)"},"status":-1},{"failures":[],"tindex":"f45dc95b-3d6f-11e6-8cfa-4d54401c92cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:517","type":"CtInvocationImpl","sourcecode":"nextBranches.clear()"},"status":0},{"failures":[],"tindex":"f45dc95c-3d6f-11e6-8cfa-23d18012b6b5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:265","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String.format(\"org/apache/commons/codec/language/bm/%s.txt\", lang)"},"variableMap":{"lang":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:304","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String"},"status":-2},{"failures":[],"tindex":"f45df06d-3d6f-11e6-8cfa-47473de84927","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:208","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:114","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Math.min(es1.length(), es2.length())"},"status":-2},{"failures":[],"tindex":"f45df06e-3d6f-11e6-8cfa-97d3c5134bd7","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:190","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(tmp)"},"variableMap":{"tmp":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:96","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.encodeBase64(bytes)"},"status":-2},{"failures":[129,130,131,132,133],"tindex":"f45df06f-3d6f-11e6-8cfa-693c59e957a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:180","type":"CtInvocationImpl","sourcecode":"code.append('X')"},"variableMap":{"code":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:311","type":"CtInvocationImpl","sourcecode":"key.deleteCharAt(((key.length()) - 1))"},"status":-1},{"failures":[],"tindex":"f45df070-3d6f-11e6-8cfa-8b02388eac8b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:207","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.boolean = false"},"status":0},{"failures":[],"tindex":"f45df071-3d6f-11e6-8cfa-832a5e6fc220","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:346","type":"CtAssignmentImpl","sourcecode":"c = org.apache.commons.codec.digest.UnixCrypt.hPermOp(c, (-2), -859045888)"},"variableMap":{"c":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:297","type":"CtAssignmentImpl","sourcecode":"left = (t >>> 1) | (t << 31)"},"status":-2},{"failures":[],"tindex":"f45df072-3d6f-11e6-8cfa-e5badd41d9f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:256","type":"CtLocalVariableImpl","sourcecode":"final int int = leftToRightThenRightToLeftProcessing(name1, name2)"},"status":-2},{"failures":[],"tindex":"f45df073-3d6f-11e6-8cfa-f116509ba659","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:184","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    saltString = org.apache.commons.codec.digest.B64.getRandomSalt(8);\n} else {\n    final java.util.regex.Pattern java.util.regex.Pattern = java.util.regex.Pattern.compile(((\"^\" + (prefix.replace(\"$\", \"\\\\$\"))) + \"([\\\\.\\\\/a-zA-Z0-9]{1,8}).*\"));\n    final java.util.regex.Matcher java.util.regex.Matcher = p.matcher(salt);\n    if ((m == null) || (!(m.find()))) {\n        throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n    } \n    saltString = m.group(1);\n}"},"variableMap":{"saltString":"text","salt":"org.apache.commons.codec.net.RFC1522Codec.POSTFIX","prefix":"text"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:129","type":"CtIfImpl","sourcecode":"if ((!(text.startsWith(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String))) || (!(text.endsWith(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String)))) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\");\n} "},"status":-2},{"failures":[],"tindex":"f45df074-3d6f-11e6-8cfa-6d796dc608f8","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:305","type":"CtInvocationImpl","sourcecode":"key.deleteCharAt(((key.length()) - 2))"},"variableMap":{"key":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:202","type":"CtInvocationImpl","sourcecode":"code.append('K')"},"status":-2},{"failures":[134,135,136,137,138,139,140,141,142,143,144,145,146,147],"tindex":"f45df075-3d6f-11e6-8cfa-e9298612b247","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:367","type":"CtInvocationImpl","sourcecode":"buffer.write(((char)((u << 4) + l)))"},"variableMap":{"u":"i","buffer":"buffer","l":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:359","type":"CtIfImpl","sourcecode":"if (b == (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)) {\n    try {\n        if ((bytes[(++i)]) == (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)) {\n            continue;\n        } \n        final int int = org.apache.commons.codec.net.Utils.digit16(bytes[i]);\n        final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)]);\n        buffer.write(((char)((u << 4) + l)));\n    } catch (final java.lang.ArrayIndexOutOfBoundsException e) {\n        throw new org.apache.commons.codec.DecoderException(\"Invalid quoted-printable encoding\" , e);\n    }\n} else if ((b != (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)) && (b != (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte))) {\n    buffer.write(b);\n} "},"status":-1},{"failures":[148],"tindex":"f45df076-3d6f-11e6-8cfa-452ab2b15ccf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:579","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha384(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"variableMap":{"data":"string"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:199","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.getBytes(string, org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-1},{"failures":[],"tindex":"f45e1787-3d6f-11e6-8cfa-2588273c898c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:193","type":"CtAssignmentImpl","sourcecode":"this.boolean = strict"},"variableMap":{"strict":"eof"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:440","type":"CtAssignmentImpl","sourcecode":"context.boolean = true"},"status":-2},{"failures":[],"tindex":"f45e1788-3d6f-11e6-8cfa-656accc31c05","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"c","len":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:348","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(d, c, 1, 1431655765, results)"},"status":-2},{"failures":[31,32,33,34,35],"tindex":"f45e1789-3d6f-11e6-8cfa-4b29e31cab5c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:500","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(sBytes, ((byte)(0)))"},"variableMap":{"sBytes":"altResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:458","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[21], altResult[1], altResult[11], 4, buffer)"},"status":-1},{"failures":[],"tindex":"f45e178a-3d6f-11e6-8cfa-8b6f4d078688","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:237","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md2(data))"},"status":-2},{"failures":[105,149,150,151],"tindex":"f45e178b-3d6f-11e6-8cfa-872c84c938a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:81","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"d\", \"t\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:74","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ci\", \"si\")"},"status":-1},{"failures":[],"tindex":"f45e178c-3d6f-11e6-8cfa-63ea90a0df9d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:281","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:281","type":"CtReturnImpl","sourcecode":"return new java.lang.String(out)"},"status":-2},{"failures":[152],"tindex":"f45e178d-3d6f-11e6-8cfa-815f502ffde0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:106","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"r3\", \"R3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:86","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^[aeiou]\", \"A\")"},"status":-1},{"failures":[],"tindex":"f45e178e-3d6f-11e6-8cfa-91ef53808f62","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((len & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"org.apache.commons.codec.binary.BaseNCodec.EOF"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:431","type":"CtInvocationImpl","sourcecode":"encode(pArray, 0, org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int, context)"},"status":-2},{"failures":[],"tindex":"f45e178f-3d6f-11e6-8cfa-7bf1fd9c78e8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:114","type":"CtReturnImpl","sourcecode":"return encode(((java.lang.String)(pObject)))"},"variableMap":{"pObject":"ascii","this":"ascii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:126","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((java.lang.String)(ascii)).toCharArray())"},"status":-2},{"failures":[],"tindex":"f45e1790-3d6f-11e6-8cfa-6f53fe96d6be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:495","type":"CtLocalVariableImpl","sourcecode":"char char = '\u0000'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:185","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit((b & 15), 16))"},"status":-2},{"failures":[],"tindex":"f45e3ea1-3d6f-11e6-8cfa-198140a01ed9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:47","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String;\n} "},"variableMap":{"txt":"str","org.apache.commons.codec.language.Caverphone1.SIX_1":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:247","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"f45e3ea2-3d6f-11e6-8cfa-a1852d72da99","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:217","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Soundex.this.char[]"},"variableMap":{"soundexMapping":"org.apache.commons.codec.language.Nysiis.CHARS_SSS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:149","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[]"},"status":-2},{"failures":[5,6],"tindex":"f45e3ea3-3d6f-11e6-8cfa-cf3b0f0a6e3c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:535","type":"CtInvocationImpl","sourcecode":"result.append('J')"},"status":-1},{"failures":[],"tindex":"f45e3ea4-3d6f-11e6-8cfa-e30978e85b59","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone:77","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone.this.caverphone(((java.lang.String)(obj)))"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:505","type":"CtReturnImpl","sourcecode":"return encode(((byte[])(obj)))"},"status":-2},{"failures":[],"tindex":"f45e3ea5-3d6f-11e6-8cfa-e30a8f66b05c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:68","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('#')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:77","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(',')"},"status":0},{"failures":[5,6,7],"tindex":"f45e3ea6-3d6f-11e6-8cfa-f95472e584c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:524","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.isBase64(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(base64))"},"variableMap":{"base64":"org.apache.commons.codec.language.DoubleMetaphone.VOWELS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:866","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.java.lang.String.indexOf(ch)) != (-1)"},"status":-1},{"failures":[116,117,122,123,124,125,126,127,128],"tindex":"f45e3ea7-3d6f-11e6-8cfa-fbd3722a2b8d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:507","type":"CtAssignmentImpl","sourcecode":"context.long = ((context.long) << 8) + b"},"status":-1},{"failures":[5,6,7],"tindex":"f45e3ea8-3d6f-11e6-8cfa-57564f8fda16","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:142","type":"CtAssignmentImpl","sourcecode":"from = to + 1"},"variableMap":{"from":"index","to":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:287","type":"CtAssignmentImpl","sourcecode":"index = handleCH(value, result, index)"},"status":-1},{"failures":[153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,41,187,188,189,190,191,192,193,194,195,196,197],"tindex":"f45e3ea9-3d6f-11e6-8cfa-37cb0638214c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:365","type":"CtInvocationImpl","sourcecode":"sb.append(c)"},"status":-1},{"failures":[152],"tindex":"f45e3eaa-3d6f-11e6-8cfa-3b682296b5fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:88","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"[aeiou]\", \"3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:79","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"tio\", \"sio\")"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}