{"failureDictionary":{"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":124,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":73,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":19,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testLocaleIndependence":83,"org.apache.commons.codec.language.NysiisTest.testSnat":113,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":78,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":136,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":77,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":94,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":58,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":56,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":57,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":38,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":84,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":37,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":21,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":101,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":59,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":93,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":32,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":15,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":99,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":44,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":127,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":143,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":42,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":45,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":18,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":17,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":66,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":7,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":68,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":67,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":39,"org.apache.commons.codec.language.NysiisTest.testCap":102,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":28,"org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis":65,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":121,"org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant":150,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":122,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":128,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":0,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":46,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":141,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":48,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":138,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":146,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":10,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":91,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":92,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":43,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable":60,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":76,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":5,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":80,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":95,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":149,"org.apache.commons.codec.language.SoundexTest.testBadCharacters":51,"org.apache.commons.codec.language.SoundexTest.testB650":55,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone":125,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":6,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":75,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":88,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":137,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":145,"org.apache.commons.codec.language.SoundexTest.testNewInstance":120,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":24,"org.apache.commons.codec.language.NysiisTest.testTranan":117,"org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid":13,"org.apache.commons.codec.language.NysiisTest.testFal":105,"org.apache.commons.codec.language.NysiisTest.testSnad":112,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":2,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":8,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":27,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105":25,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":148,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":142,"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":9,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer1":52,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":53,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":54,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":72,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":31,"org.apache.commons.codec.language.NysiisTest.testDropBy":115,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":82,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched":87,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":79,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":135,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":14,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":36,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":47,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":1,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":12,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":23,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":133,"org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt":151,"org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty":97,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":34,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":50,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":139,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":33,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":71,"org.apache.commons.codec.language.NysiisTest.testRule2":107,"org.apache.commons.codec.language.NysiisTest.testRule1":106,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":22,"org.apache.commons.codec.language.NysiisTest.testRule7":110,"org.apache.commons.codec.language.NysiisTest.testRule6":109,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":144,"org.apache.commons.codec.language.NysiisTest.testRule5":108,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":134,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111":49,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":29,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":132,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":63,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":114,"org.apache.commons.codec.language.NysiisTest.testBran":111,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":118,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":90,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":3,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":61,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":41,"org.apache.commons.codec.language.SoundexTest.testEncodeEmpty":123,"org.apache.commons.codec.language.SoundexTest.testEncodeNull":69,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":89,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":4,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":130,"org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding":20,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":74,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":26,"org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute":64,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":119,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":16,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":40,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":140,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":35,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":96,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean":86,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":147,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter":70,"org.apache.commons.codec.language.NysiisTest.testDad":103,"org.apache.commons.codec.language.NysiisTest.testOthers":116,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":126,"org.apache.commons.codec.language.SoundexTest.testDifference":62,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":81,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":100,"org.apache.commons.codec.language.NysiisTest.testDan":104,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":131,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":30,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":11,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch":85,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail":129,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":98},"transformations":[{"failures":[],"tindex":"810521cd-3db9-11e6-bfd2-1b2b52dd55f7","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:304","type":"CtAssignmentImpl","sourcecode":"this.byte[] = null"},"variableMap":{"lineSeparator":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:297","type":"CtAssignmentImpl","sourcecode":"context.byte[] = null"},"status":-2},{"failures":[0,1,2,3,4,5,6],"tindex":"810548de-3db9-11e6-bfd2-b78e04771260","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:499","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(pBytes, ((byte)(0)))"},"variableMap":{"pBytes":"saltBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:265","type":"CtInvocationImpl","sourcecode":"ctx1.update(saltBytes)"},"status":-1},{"failures":[],"tindex":"810548df-3db9-11e6-bfd2-2528565cbbe0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:172","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String[] = replacementBeforeVowel.split(\"\\\\|\")"},"variableMap":{"replacementBeforeVowel":"replacementAtStart"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:171","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String[] = replacementAtStart.split(\"\\\\|\")"},"status":-2},{"failures":[],"tindex":"810548e0-3db9-11e6-bfd2-11ad0bf5fee1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:98","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"n+\", \"N\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:63","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^gn\", \"2n\")"},"status":0},{"failures":[7,8,9],"tindex":"810548e1-3db9-11e6-bfd2-a1561aecf237","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:101","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"wh3\", \"Wh3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:93","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"t+\", \"T\")"},"status":-1},{"failures":[],"tindex":"810548e2-3db9-11e6-bfd2-19846c5166d2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:386","type":"CtIfImpl","sourcecode":"if ((i % 7) != 0) {\n    ctx.update(pBytes, 0, keyLen);\n} "},"variableMap":{"pBytes":"sBytes","ctx":"ctx","i":"blocksize","keyLen":"saltLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:356","type":"CtForImpl","sourcecode":"for (int int = 0 ; i <= (rounds - 1) ; i++) {\n    ctx = org.apache.commons.codec.digest.DigestUtils.getDigest(algorithm);\n    if ((i & 1) != 0) {\n        ctx.update(pBytes, 0, keyLen);\n    } else {\n        ctx.update(altResult, 0, blocksize);\n    }\n    if ((i % 3) != 0) {\n        ctx.update(sBytes, 0, saltLen);\n    } \n    if ((i % 7) != 0) {\n        ctx.update(pBytes, 0, keyLen);\n    } \n    if ((i & 1) != 0) {\n        ctx.update(altResult, 0, blocksize);\n    } else {\n        ctx.update(pBytes, 0, keyLen);\n    }\n    altResult = ctx.digest();\n}"},"status":0},{"failures":[],"tindex":"810548e3-3db9-11e6-bfd2-4de84f11d883","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:257","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = scanner.nextLine()"},"status":-2},{"failures":[10,11,12],"tindex":"810548e4-3db9-11e6-bfd2-db7338d0c490","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:245","type":"CtAssignmentImpl","sourcecode":"u = 128"},"variableMap":{"u":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:285","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[13],"tindex":"81056ff5-3db9-11e6-bfd2-473d5d850c17","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"status":-1},{"failures":[],"tindex":"81056ff6-3db9-11e6-bfd2-0d3c4207338f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:275","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"variableMap":{"length":"currentLine"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:408","type":"CtUnaryOperatorImpl","sourcecode":"currentLine++"},"status":0},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27],"tindex":"81056ff7-3db9-11e6-bfd2-e31649892029","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:500","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(sBytes, ((byte)(0)))"},"variableMap":{"sBytes":"lineSeparator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:508","type":"CtIfImpl","sourcecode":"if (0 == (context.int)) {\n    buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 35))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n    buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 30))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n    buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 25))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n    buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 20))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n    buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 15))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n    buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 10))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n    buffer[((context.int)++)] = byte[][(((int)(((context.long) >> 5))) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n    buffer[((context.int)++)] = byte[][(((int)(context.long)) & (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int))];\n    context.int += org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int;\n    if (((int) > 0) && ((int) <= (context.int))) {\n        java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int);\n        context.int += byte[].int;\n        context.int = 0;\n    } \n} "},"status":-1},{"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"81056ff8-3db9-11e6-bfd2-43c237045813","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:229","type":"CtInvocationImpl","sourcecode":"rs.put(\"common\", org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(s, rt, \"common\"), org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, \"common\")))"},"variableMap":{"rs":"rs","rt":"rt","s":"s"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:223","type":"CtInvocationImpl","sourcecode":"rs.put(l, org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(s, rt, l), org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l)))"},"status":-1},{"failures":[46,47,48,49,50],"tindex":"81056ff9-3db9-11e6-bfd2-21e5a22af5f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:90","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"gh\", \"22\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:111","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"h\", \"2\")"},"status":-1},{"failures":[],"tindex":"81056ffa-3db9-11e6-bfd2-1937aaef3c21","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:47","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String;\n} "},"variableMap":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"key","txt":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:724","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha512(key, valueToDigest))"},"status":-2},{"failures":[],"tindex":"8105970b-3db9-11e6-bfd2-e19c26e56110","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:63","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^gn\", \"2n\")"},"variableMap":{"txt":"name1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:235","type":"CtAssignmentImpl","sourcecode":"name1 = removeDoubleConsonants(name1)"},"status":-2},{"failures":[],"tindex":"8105970c-3db9-11e6-bfd2-35ed2a77e395","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:102","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    salt = (org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8));\n} "},"variableMap":{"salt":"inputContext","org.apache.commons.codec.digest.Sha2Crypt.SHA256_PREFIX":"inputContext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:514","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule : rules) {\n    if (rule.matches(inputContext)) {\n        if (branching) {\n            nextBranches.clear();\n        } \n        final java.lang.String[] java.lang.String[] = rule.getReplacements(inputContext, (lastChar == '\u0000'));\n        final boolean boolean = ((replacements.int) > 1) && branching;\n        for (final org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch : currentBranches) {\n            for (final java.lang.String java.lang.String : replacements) {\n                final org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch = branchingRequired ? branch.createBranch() : branch;\n                final boolean boolean = ((lastChar == 'm') && (ch == 'n')) || ((lastChar == 'n') && (ch == 'm'));\n                nextBranch.processNextReplacement(nextReplacement, force);\n                if (branching) {\n                    nextBranches.add(nextBranch);\n                } else {\n                    break;\n                }\n            }\n        }\n        if (branching) {\n            currentBranches.clear();\n            currentBranches.addAll(nextBranches);\n        } \n        index += (rule.getPatternLength()) - 1;\n        break;\n    } \n}"},"status":-2},{"failures":[51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],"tindex":"8105970d-3db9-11e6-bfd2-3fd0ad6e13ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:626","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha384(data))"},"variableMap":{"data":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:167","type":"CtReturnImpl","sourcecode":"return soundex(str)"},"status":-1},{"failures":[],"tindex":"8105970e-3db9-11e6-bfd2-4bb62a084cf4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:132","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException()"},"status":-2},{"failures":[70],"tindex":"8105970f-3db9-11e6-bfd2-85bfde58395a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:335","type":"CtIfImpl","sourcecode":"if (!(obj instanceof byte[])) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Base-N encode is not a byte[]\");\n} "},"status":-1},{"failures":[],"tindex":"81059710-3db9-11e6-bfd2-3b7283f7f497","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:362","type":"CtAssignmentImpl","sourcecode":"c = (c >>> 2) | (c << 26)"},"variableMap":{"c":"t"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:297","type":"CtAssignmentImpl","sourcecode":"left = (t >>> 1) | (t << 31)"},"status":-2},{"failures":[],"tindex":"81059711-3db9-11e6-bfd2-29002ff3e3b3","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:208","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"status":-2},{"failures":[],"tindex":"8105be22-3db9-11e6-bfd2-0f344f860fdd","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:361","type":"CtAssignmentImpl","sourcecode":"ctx = org.apache.commons.codec.digest.DigestUtils.getDigest(algorithm)"},"variableMap":{"ctx":"altCtx","algorithm":"algorithm"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:307","type":"CtAssignmentImpl","sourcecode":"altCtx = org.apache.commons.codec.digest.DigestUtils.getDigest(algorithm)"},"status":0},{"failures":[],"tindex":"8105be23-3db9-11e6-bfd2-2d85f06c3d49","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:340","type":"CtReturnImpl","sourcecode":"return decode(((java.lang.String)(obj)))"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:505","type":"CtReturnImpl","sourcecode":"return encode(((byte[])(obj)))"},"status":-2},{"failures":[71],"tindex":"8105be24-3db9-11e6-bfd2-d7e0a9e8bb16","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:733","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha1Hex(data)"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:594","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha384(data))"},"status":-1},{"failures":[10],"tindex":"8105be25-3db9-11e6-bfd2-ad7961824469","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:474","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-1},{"failures":[],"tindex":"8105be26-3db9-11e6-bfd2-c1f51a9a48d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha1Digest()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:777","type":"CtReturnImpl","sourcecode":"return messageDigest"},"status":0},{"failures":[],"tindex":"8105be27-3db9-11e6-bfd2-61c54de26f41","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:74","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"c\", \"k\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:85","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"z\", \"s\")"},"status":0},{"failures":[],"tindex":"8105be28-3db9-11e6-bfd2-adbc7ccc3eb2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:521","type":"CtAssignmentImpl","sourcecode":"context.int = 0"},"variableMap":{"currentLinePos":"length","context":"context"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:497","type":"CtOperatorAssignmentImpl","sourcecode":"context.int += byte[].int"},"status":-2},{"failures":[72,73,11],"tindex":"8105be29-3db9-11e6-bfd2-e33a4da36cea","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:209","type":"CtInvocationImpl","sourcecode":"code.append('J')"},"variableMap":{"code":"primary"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:958","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value)"},"status":-1},{"failures":[],"tindex":"8105e53a-3db9-11e6-bfd2-310bcc58932b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:305","type":"CtInvocationImpl","sourcecode":"key.deleteCharAt(((key.length()) - 2))"},"variableMap":{"key":"local"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:113","type":"CtInvocationImpl","sourcecode":"local.append(inwd, 1, ((inwd.int) - 1))"},"status":-2},{"failures":[74,75,76,77,78,79,80,81,82],"tindex":"8105e53b-3db9-11e6-bfd2-35ff98445460","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:267","type":"CtIfImpl","sourcecode":"if (line.startsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    inMultilineComment = true;\n} else {\n    final int int = line.indexOf(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String);\n    if (cmtI >= 0) {\n        line = line.substring(0, cmtI);\n    } \n    line = line.trim();\n    if ((line.length()) == 0) {\n        continue;\n    } \n    if (line.contains(\"=\")) {\n        final java.lang.String[] java.lang.String[] = line.split(\"=\");\n        if ((parts.int) != 2) {\n            throw new java.lang.IllegalArgumentException((((((\"Malformed folding statement split into \" + (parts.int)) + \" parts: \") + rawLine) + \" in \") + location));\n        } else {\n            final java.lang.String java.lang.String = parts[0];\n            final java.lang.String java.lang.String = parts[1];\n            if (((leftCharacter.length()) != 1) || ((rightCharacter.length()) != 1)) {\n                throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + rawLine) + \" in \") + location));\n            } \n            asciiFoldings.put(leftCharacter.charAt(0), rightCharacter.charAt(0));\n        }\n    } else {\n        final java.lang.String[] java.lang.String[] = line.split(\"\\\\s+\");\n        if ((parts.int) != 4) {\n            throw new java.lang.IllegalArgumentException((((((\"Malformed rule statement split into \" + (parts.int)) + \" parts: \") + rawLine) + \" in \") + location));\n        } else {\n            try {\n                final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[0]);\n                final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[1]);\n                final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[2]);\n                final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[3]);\n                final org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule = new org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule(pattern , replacement1 , replacement2 , replacement3);\n                final char char = r.java.lang.String.charAt(0);\n                java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> = ruleMapping.get(patternKey);\n                if (rules == null) {\n                    rules = new java.util.ArrayList<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>();\n                    ruleMapping.put(patternKey, rules);\n                } \n                rules.add(r);\n            } catch (final java.lang.IllegalArgumentException e) {\n                throw new java.lang.IllegalStateException((((\"Problem parsing line '\" + currentLine) + \"' in \") + location) , e);\n            }\n        }\n    }\n}"},"status":-1},{"failures":[74,75,76,77,78,79,80,81,82,83],"tindex":"8105e53c-3db9-11e6-bfd2-81f2b7df4551","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:99","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:177","type":"CtReturnImpl","sourcecode":"return java.lang.String.length()"},"status":-1},{"failures":[84],"tindex":"8105e53d-3db9-11e6-bfd2-5f776661e664","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:161","type":"CtReturnImpl","sourcecode":"return new java.lang.String(org.apache.commons.codec.binary.Hex.encodeHex(data))"},"variableMap":{"data":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:495","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha256(key, valueToDigest))"},"status":-1},{"failures":[],"tindex":"8105e53e-3db9-11e6-bfd2-8f78d3df78d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:377","type":"CtAssignmentImpl","sourcecode":"s = (s << 4) | (s >>> 28)"},"variableMap":{"s":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:287","type":"CtAssignmentImpl","sourcecode":"index = handleCH(value, result, index)"},"status":-2},{"failures":[],"tindex":"8105e53f-3db9-11e6-bfd2-eb4b46f00db7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:47","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String;\n} "},"variableMap":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"str","txt":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:53","type":"CtIfImpl","sourcecode":"if (count == len) {\n    return str.toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale);\n} "},"status":-2},{"failures":[],"tindex":"8105e540-3db9-11e6-bfd2-a39267dfb0db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:120","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.flush()"},"status":0},{"failures":[],"tindex":"8105e541-3db9-11e6-bfd2-bd0eb9038f40","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"l"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:174","type":"CtInvocationImpl","sourcecode":"buffer.write(((char)((u << 4) + l)))"},"status":-2},{"failures":[],"tindex":"81060c52-3db9-11e6-bfd2-452438e9a78d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:63","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(org.apache.commons.codec.digest.HmacAlgorithms.org.apache.commons.codec.digest.HmacAlgorithms.org.apache.commons.codec.digest.HmacAlgorithms, key)"},"variableMap":{"org.apache.commons.codec.digest.HmacAlgorithms.HMAC_MD5":"algorithm","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:155","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(algorithm.toString(), key)"},"status":-2},{"failures":[72,10,73,11,12],"tindex":"81060c53-3db9-11e6-bfd2-e953c97394e3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:423","type":"CtInvocationImpl","sourcecode":"result.append(\"KL\", \"L\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:399","type":"CtInvocationImpl","sourcecode":"result.append('T')"},"status":-1},{"failures":[],"tindex":"81060c54-3db9-11e6-bfd2-b9044526a75c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.BCodec:183","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(e.getMessage() , e)"},"variableMap":{"e":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:227","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (value.getClass().getName())) + \" cannot be decoded using BCodec\"))"},"status":-2},{"failures":[0,1,2,3,4,5,6],"tindex":"81060c55-3db9-11e6-bfd2-a7525f1730d6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:239","type":"CtInvocationImpl","sourcecode":"ctx.update(finalb[j])"},"status":-1},{"failures":[],"tindex":"81060c56-3db9-11e6-bfd2-95ab75f3ae1e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:431","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = text.toCharArray()"},"variableMap":{"text":"name2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:296","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = name2.toCharArray()"},"status":-2},{"failures":[],"tindex":"81060c57-3db9-11e6-bfd2-09ebf3200393","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.B64:59","type":"CtLocalVariableImpl","sourcecode":"int int = outLen"},"variableMap":{"outLen":"bAvail"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:293","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Math.min(available(context), bAvail)"},"status":-2},{"failures":[],"tindex":"81060c58-3db9-11e6-bfd2-477e25f665f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:100","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"wy\", \"Wy\")"},"variableMap":{"txt":"saltString"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:192","type":"CtAssignmentImpl","sourcecode":"saltString = m.group(1)"},"status":-2},{"failures":[11,12],"tindex":"81060c59-3db9-11e6-bfd2-1f737465885e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:589","type":"CtInvocationImpl","sourcecode":"result.append('R')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:392","type":"CtInvocationImpl","sourcecode":"result.append(\"TK\")"},"status":-1},{"failures":[85,86,87],"tindex":"81060c5a-3db9-11e6-bfd2-85c52edce78f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:92","type":"CtAssignmentImpl","sourcecode":"upperName = upperName.replaceAll(\"\\\\s+\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"status":-1},{"failures":[88,89,90,91,92],"tindex":"81060c5b-3db9-11e6-bfd2-b1f462662445","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:185","type":"CtInvocationImpl","sourcecode":"sBuf.append(str.charAt(0))"},"status":-1},{"failures":[],"tindex":"81060c5c-3db9-11e6-bfd2-79e145b92500","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:187","type":"CtIfImpl","sourcecode":"if (nextCharIsVowel) {\n    return java.lang.String[];\n} "},"variableMap":{"replacementBeforeVowel":"replacementAtStart","nextCharIsVowel":"atStart"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:181","type":"CtIfImpl","sourcecode":"if (atStart) {\n    return java.lang.String[];\n} "},"status":0},{"failures":[],"tindex":"81060c5d-3db9-11e6-bfd2-8746234193be","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:688","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha512(data))"},"variableMap":{"data":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:521","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(keyBytes, null)"},"status":-2},{"failures":[93,10,73,11,12],"tindex":"81060c5e-3db9-11e6-bfd2-3ba6a9dfcc8d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:419","type":"CtInvocationImpl","sourcecode":"result.append(\"KN\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:302","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-1},{"failures":[94,95,96],"tindex":"8106336f-3db9-11e6-bfd2-d97a06e57149","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:498","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(tempResult, ((byte)(0)))"},"variableMap":{"tempResult":"altResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:477","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[50], altResult[8], altResult[29], 4, buffer)"},"status":-1},{"failures":[],"tindex":"81063370-3db9-11e6-bfd2-d7f096ee8d2d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.NameType:42","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = name"},"variableMap":{"name":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:179","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.SoundexUtils.clean(str)"},"status":-2},{"failures":[0,1,2,3,4,5,6],"tindex":"81063371-3db9-11e6-bfd2-a1697693d187","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:296","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(keyBytes, ((byte)(0)))"},"variableMap":{"keyBytes":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:269","type":"CtInvocationImpl","sourcecode":"ctx1.update(keyBytes)"},"status":-1},{"failures":[],"tindex":"81063372-3db9-11e6-bfd2-b15c65e2a74f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"ii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:183","type":"CtIfImpl","sourcecode":"if ((ascii[(jj - bits)]) == '1') {\n    l_raw[ii] |= org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits];\n} "},"status":-2},{"failures":[97],"tindex":"81063373-3db9-11e6-bfd2-c189c28e60db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:892","type":"CtAssignmentImpl","sourcecode":"input = input.trim()"},"status":-1},{"failures":[],"tindex":"81063374-3db9-11e6-bfd2-99bf003a724b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"modulus","y":"modulus"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:378","type":"CtSwitchImpl","sourcecode":"switch (context.int) {\n    case 2 :\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 2) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    case 3 :\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 7) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    case 4 :\n        context.long = (context.long) >> 4;\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    case 5 :\n        context.long = (context.long) >> 1;\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    case 6 :\n        context.long = (context.long) >> 6;\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    case 7 :\n        context.long = (context.long) >> 3;\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 24) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Impossible modulus \" + (context.int)));\n}"},"status":-2},{"failures":[98,99],"tindex":"81063375-3db9-11e6-bfd2-17df95dddf44","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:764","type":"CtUnaryOperatorImpl","sourcecode":"len--"},"variableMap":{"len":"s"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:376","type":"CtAssignmentImpl","sourcecode":"s = (s >>> 16) | (t & -65536)"},"status":-1},{"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"81063376-3db9-11e6-bfd2-53b45eb0e85b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:552","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = boxContent.startsWith(\"^\")"},"variableMap":{"boxContent":"regex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:501","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = regex.endsWith(\"$\")"},"status":-1},{"failures":[74,75,76,77,78,82],"tindex":"81063377-3db9-11e6-bfd2-3116027c9f5c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:472","type":"CtReturnImpl","sourcecode":"return sb.toString()"},"status":-1},{"failures":[98,99],"tindex":"81063378-3db9-11e6-bfd2-77a4bbe09e9d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:225","type":"CtOperatorAssignmentImpl","sourcecode":"cnt -= blocksize"},"variableMap":{"blocksize":"d","cnt":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:347","type":"CtAssignmentImpl","sourcecode":"d = org.apache.commons.codec.digest.UnixCrypt.hPermOp(d, (-2), -859045888)"},"status":-1},{"failures":[88,89,90,91,92,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,51,119,52,53,54,55,56,57,58,59,60,61,62,120,63,64,121,122,65,66,67,68],"tindex":"81065a89-3db9-11e6-bfd2-f91ee60d6101","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:50","type":"CtAssignmentImpl","sourcecode":"chars[(count++)] = str.charAt(i)"},"status":-1},{"failures":[62,123],"tindex":"81065a8a-3db9-11e6-bfd2-d3b860e1c726","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:320","type":"CtIfImpl","sourcecode":"if (text == null) {\n    return null;\n} "},"variableMap":{"text":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:264","type":"CtReturnImpl","sourcecode":"return str"},"status":-1},{"failures":[],"tindex":"81065a8b-3db9-11e6-bfd2-115898394944","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:82","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ph\", \"fh\")"},"variableMap":{"txt":"boxContent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:554","type":"CtAssignmentImpl","sourcecode":"boxContent = boxContent.substring(1)"},"status":-2},{"failures":[],"tindex":"81065a8c-3db9-11e6-bfd2-33b17d63a6a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:418","type":"CtAssignmentImpl","sourcecode":"inMultilineComment = true"},"variableMap":{"inMultilineComment":"found"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:216","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.boolean = true"},"status":0},{"failures":[],"tindex":"81065a8d-3db9-11e6-bfd2-696622fce749","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:102","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    salt = (org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8));\n} "},"variableMap":{"salt":"line","org.apache.commons.codec.digest.Sha2Crypt.SHA256_PREFIX":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:422","type":"CtIfImpl","sourcecode":"if (cmtI >= 0) {\n    line = line.substring(0, cmtI);\n} "},"status":-2},{"failures":[124],"tindex":"81065a8e-3db9-11e6-bfd2-9bb71c5f0bc3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:299","type":"CtReturnImpl","sourcecode":"return new java.lang.String(org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(raw))"},"variableMap":{"raw":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:368","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha1(key, valueToDigest))"},"status":-1},{"failures":[48],"tindex":"81065a8f-3db9-11e6-bfd2-3111a9e6a9fc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:72","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"cy\", \"sy\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:98","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"g\", \"k\")"},"status":-1},{"failures":[],"tindex":"81065a90-3db9-11e6-bfd2-199506944282","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"status":-2},{"failures":[],"tindex":"81065a91-3db9-11e6-bfd2-e36d59dfda6b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:473","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[25], altResult[46], altResult[4], 4, buffer)"},"variableMap":{"altResult":"finalb","buffer":"passwd"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:288","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(((byte)(0)), ((byte)(0)), finalb[11], 2, passwd)"},"status":-2},{"failures":[98,99],"tindex":"81065a92-3db9-11e6-bfd2-dbc7c5885ec6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:394","type":"CtAssignmentImpl","sourcecode":"a = (a ^ t) ^ (t >>> (16 - n))"},"status":-1},{"failures":[125],"tindex":"81065a93-3db9-11e6-bfd2-45b897878cff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.StringEncoderComparator:84","type":"CtAssignmentImpl","sourcecode":"compareCode = s1.compareTo(s2)"},"status":-1},{"failures":[],"tindex":"81065a94-3db9-11e6-bfd2-0b77bc5a1d56","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:310","type":"CtIfImpl","sourcecode":"if (obj == null) {\n    return null;\n} else if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be decoded using Q codec\"));\n}"},"status":-2},{"failures":[],"tindex":"81065a95-3db9-11e6-bfd2-dfbada38f0ad","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:237","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md2(data))"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:426","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha1(data))"},"status":-2},{"failures":[94,95,96],"tindex":"810681a6-3db9-11e6-bfd2-7d362073e24b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:481","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[12], altResult[33], altResult[54], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:476","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[28], altResult[49], altResult[7], 4, buffer)"},"status":-1},{"failures":[126,127],"tindex":"810681a7-3db9-11e6-bfd2-e9acc05e402c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:211","type":"CtInvocationImpl","sourcecode":"code.append('T')"},"variableMap":{"code":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:427","type":"CtInvocationImpl","sourcecode":"buffer.append(\"$\")"},"status":-1},{"failures":[],"tindex":"810681a8-3db9-11e6-bfd2-27711b536766","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:86","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^[aeiou]\", \"A\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:81","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"v\", \"f\")"},"status":0},{"failures":[128,129,124],"tindex":"810681a9-3db9-11e6-bfd2-8f5153ec2bb4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:104","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.decodeBase64(bytes)"},"variableMap":{"bytes":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:313","type":"CtTryImpl","sourcecode":"try {\n    return org.apache.commons.codec.digest.HmacUtils.getHmacSha1(key).doFinal(valueToDigest);\n} catch (final java.lang.IllegalStateException e) {\n    throw new java.lang.IllegalArgumentException(e);\n}"},"status":-1},{"failures":[],"tindex":"810681aa-3db9-11e6-bfd2-eb0739ff5057","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:320","type":"CtIfImpl","sourcecode":"if (text == null) {\n    return null;\n} "},"variableMap":{"text":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:159","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} "},"status":-2},{"failures":[74,75,76,77,78,82],"tindex":"810681ab-3db9-11e6-bfd2-8f8d3d3082a2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:118","type":"CtAssignmentImpl","sourcecode":"java.lang.String = null"},"status":-1},{"failures":[],"tindex":"810681ac-3db9-11e6-bfd2-3f6eccec65eb","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:85","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"z\", \"s\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:52","type":"CtAssignmentImpl","sourcecode":"txt = txt.toLowerCase(java.util.Locale.java.util.Locale.java.util.Locale)"},"status":0},{"failures":[130,131,132,133,134,135,136,137],"tindex":"810681ad-3db9-11e6-bfd2-6fd1a2a03f6a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:411","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = input.substring(2)"},"variableMap":{"input":"text"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:147","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = text.substring(from, to)"},"status":-1},{"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"810681ae-3db9-11e6-bfd2-ed3cdb0b14b1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:614","type":"CtAssignmentImpl","sourcecode":"str = str.substring(1)"},"status":-1},{"failures":[0,1,2,3,4,5,6],"tindex":"810681af-3db9-11e6-bfd2-910a319f01e8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:284","type":"CtAssignmentImpl","sourcecode":"this.byte[] = org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.byte[]"},"variableMap":{"encodeTable":"finalb","org.apache.commons.codec.binary.Base32.HEX_ENCODE_TABLE":"finalb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:277","type":"CtAssignmentImpl","sourcecode":"finalb = ctx1.digest()"},"status":-1},{"failures":[],"tindex":"810681b0-3db9-11e6-bfd2-c5b9f8b02d26","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:499","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(pBytes, ((byte)(0)))"},"variableMap":{"pBytes":"altResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:396","type":"CtInvocationImpl","sourcecode":"ctx.update(altResult, 0, blocksize)"},"status":0},{"failures":[],"tindex":"810681b1-3db9-11e6-bfd2-53d6aae2095a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:448","type":"CtIfImpl","sourcecode":"if ((context.int) == 0) {\n    buffer[((context.int)++)] = ((byte)(((context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n    buffer[((context.int)++)] = ((byte)(((context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n    buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n} "},"status":-2},{"failures":[],"tindex":"810681b2-3db9-11e6-bfd2-6116fb7d5088","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:766","type":"CtLocalVariableImpl","sourcecode":"final int int = (bitlen / 8) - len"},"variableMap":{"bitlen":"j","len":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:89","type":"CtLocalVariableImpl","sourcecode":"int int = (org.apache.commons.codec.binary.Hex.toDigit(data[j], j)) << 4"},"status":-2},{"failures":[138,139,140,141,71,142,143],"tindex":"8106a8c3-3db9-11e6-bfd2-ef93f4680ab0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:797","type":"CtInvocationImpl","sourcecode":"digest.update(buffer, 0, read)"},"status":-1},{"failures":[],"tindex":"8106a8c4-3db9-11e6-bfd2-69d8b677e4d0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:411","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = input.substring(2)"},"variableMap":{"input":"lang"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:265","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String.format(\"org/apache/commons/codec/language/bm/%s.txt\", lang)"},"status":-2},{"failures":[144,145,146],"tindex":"8106a8c5-3db9-11e6-bfd2-7f64c3b780ab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:136","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:226","type":"CtReturnImpl","sourcecode":"return 1"},"status":-1},{"failures":[],"tindex":"8106a8c6-3db9-11e6-bfd2-8bafbcd76596","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:417","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"\\\\s{2,}\\\\b\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"name":"name","org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.NameType:42","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = name"},"status":-2},{"failures":[115],"tindex":"8106a8c7-3db9-11e6-bfd2-094d8e1c0ddd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:140","type":"CtIfImpl","sourcecode":"if (next == 'N') {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n} else {\n    return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[];\n}"},"status":-1},{"failures":[42,43,44,45],"tindex":"8106a8c8-3db9-11e6-bfd2-2be173578160","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:296","type":"CtOperatorAssignmentImpl","sourcecode":"index += 3"},"variableMap":{"index":"patternLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:223","type":"CtAssignmentImpl","sourcecode":"patternLength = 1"},"status":-1},{"failures":[],"tindex":"8106a8c9-3db9-11e6-bfd2-99bf4b2b5a7a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:742","type":"CtInvocationImpl","sourcecode":"mac.reset()"},"variableMap":{"mac":"mac"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:183","type":"CtInvocationImpl","sourcecode":"mac.init(keySpec)"},"status":-2},{"failures":[],"tindex":"8106a8ca-3db9-11e6-bfd2-01db4c083b47","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:423","type":"CtInvocationImpl","sourcecode":"result.append(\"KL\", \"L\")"},"variableMap":{"result":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:974","type":"CtInvocationImpl","sourcecode":"appendPrimary(primary)"},"status":-2},{"failures":[49,50,147],"tindex":"8106a8cb-3db9-11e6-bfd2-9db637a773d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:94","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^y\", \"A\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:90","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^[aeiou]\", \"A\")"},"status":-1},{"failures":[148,149,95,96,98,99,0,1,2,150,151],"tindex":"8106a8cc-3db9-11e6-bfd2-47a04cfff95a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.RuleType:47","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.RuleType.this.java.lang.String"},"variableMap":{"name":"org.apache.commons.codec.digest.Sha2Crypt.SHA256_PREFIX"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Crypt:66","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    return org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(keyBytes);\n} else if (salt.startsWith(org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String)) {\n    return org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(keyBytes, salt);\n} else if (salt.startsWith(org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String)) {\n    return org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(keyBytes, salt);\n} else if (salt.startsWith(org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String)) {\n    return org.apache.commons.codec.digest.Md5Crypt.md5Crypt(keyBytes, salt);\n} else {\n    return org.apache.commons.codec.digest.UnixCrypt.crypt(keyBytes, salt);\n}"},"status":-1},{"failures":[98,99],"tindex":"8106a8cd-3db9-11e6-bfd2-8d091935a07f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:251","type":"CtAssignmentImpl","sourcecode":"l_ascii[(jj - bits)] = '0'"},"variableMap":{"jj":"i","l_ascii":"key","bits":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:217","type":"CtAssignmentImpl","sourcecode":"key[i] = 0"},"status":-1},{"failures":[],"tindex":"8106a8ce-3db9-11e6-bfd2-ed5818e8dbdb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:229","type":"CtReturnImpl","sourcecode":"return ls.equals(org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet) ? org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet : ls"},"variableMap":{"ls":"other","org.apache.commons.codec.language.bm.Languages.ANY_LANGUAGE":"org.apache.commons.codec.language.bm.Languages.ANY_LANGUAGE","org.apache.commons.codec.language.bm.Languages.NO_LANGUAGES":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:134","type":"CtIfImpl","sourcecode":"if (other == (org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet)) {\n    return org.apache.commons.codec.language.bm.Languages.SomeLanguages.this;\n} else if (other == (org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet)) {\n    return other;\n} else {\n    final org.apache.commons.codec.language.bm.Languages.SomeLanguages org.apache.commons.codec.language.bm.Languages.SomeLanguages = ((org.apache.commons.codec.language.bm.Languages.SomeLanguages)(other));\n    final java.util.Set<java.lang.String> java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>(java.util.Set<java.lang.String>);\n    for (java.lang.String java.lang.String : sl.java.util.Set<java.lang.String>) {\n        ls.add(lang);\n    }\n    return org.apache.commons.codec.language.bm.Languages.LanguageSet.from(ls);\n}"},"status":-2},{"failures":[],"tindex":"8106a8cf-3db9-11e6-bfd2-71385c689169","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:172","type":"CtLocalVariableImpl","sourcecode":"final java.io.InputStream java.io.InputStream = org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.java.lang.Class.getClassLoader().getResourceAsStream(languagesResourceName)"},"variableMap":{"languagesResourceName":"org.apache.commons.codec.language.DaitchMokotoffSoundex.RESOURCE_FILE","org.apache.commons.codec.language.bm.Languages.class":"org.apache.commons.codec.language.DaitchMokotoffSoundex.class"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:229","type":"CtLocalVariableImpl","sourcecode":"final java.io.InputStream java.io.InputStream = org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.Class.getClassLoader().getResourceAsStream(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)"},"status":-2},{"failures":[],"tindex":"8106cfe0-3db9-11e6-bfd2-e94043ac64f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:208","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:251","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}