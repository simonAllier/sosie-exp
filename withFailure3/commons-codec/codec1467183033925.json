{"failureDictionary":{"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":2,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":21,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched":125,"org.apache.commons.codec.binary.HexTest.testCustomCharset":156,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch":136,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched":122,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":7,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":42,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":114,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched":127,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":6,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":17,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":33,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":32,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects":47,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY":141,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":81,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched":119,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":27,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":80,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan":140,"org.apache.commons.codec.binary.Base64Test.testTriplets":83,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":50,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":16,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":39,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis":139,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":37,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":40,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":72,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":142,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":94,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary":111,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":58,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":100,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":103,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":131,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples":164,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":88,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":34,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":89,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":147,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":93,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":23,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":63,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched":132,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":90,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":62,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":91,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":41,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":77,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":1,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":105,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":108,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":43,"org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii":51,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode":57,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":163,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":149,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":158,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":46,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":65,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":97,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":20,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4":126,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":104,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":38,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":5,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":9,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":18,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":74,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":15,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":55,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":112,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched":124,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":4,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched":130,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":45,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":73,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":84,"org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters":159,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched":120,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched":134,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid":160,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":79,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3":107,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":153,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":56,"org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput":106,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0":115,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":12,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":102,"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":155,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":76,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":96,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected":118,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":26,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":101,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":11,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":92,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched":135,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":8,"org.apache.commons.codec.binary.Base64Test.testBase64":99,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":71,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":31,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":162,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":0,"org.apache.commons.codec.binary.Base64Test.testUUID":85,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":75,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":95,"org.apache.commons.codec.binary.Base64Test.testSingletons":152,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":69,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":144,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":98,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":29,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":28,"org.apache.commons.codec.binary.Base64Test.testPairs":148,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":59,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":143,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":53,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":44,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":70,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched":116,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":24,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched":137,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":154,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":146,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":78,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":157,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":48,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":36,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":82,"org.apache.commons.codec.net.URLCodecTest.testEncodeObjects":64,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched":117,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":54,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":150,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":66,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":68,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":110,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":151,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":60,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2":109,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched":121,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":3,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":35,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":30,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":19,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":145,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":14,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":165,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":87,"org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid":161,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":52,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":13,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched":138,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":10,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":61,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched":128,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":113,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":67,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":25,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":22,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched":123,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":86,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched":129,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch":133,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":49},"transformations":[{"failures":[0],"tindex":"c71ac23e-3dc5-11e6-ac06-e14c45e0608c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:185","type":"CtInvocationImpl","sourcecode":"code.append('S')"},"variableMap":{"code":"alternate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:992","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value.substring(0, addChars))"},"status":-1},{"failures":[1,2],"tindex":"c71ae94f-3dc5-11e6-ac06-037571a81f1e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:246","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.hmacMd5(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"variableMap":{"valueToDigest":"valueToDigest","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:353","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.hmacSha1(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"status":-1},{"failures":[],"tindex":"c71ae950-3dc5-11e6-ac06-45e19daa8134","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.RefinedSoundex:64","type":"CtAssignmentImpl","sourcecode":"this.char[] = org.apache.commons.codec.language.RefinedSoundex.org.apache.commons.codec.language.RefinedSoundex.char[]"},"variableMap":{"soundexMapping":"soundexMapping","org.apache.commons.codec.language.RefinedSoundex.US_ENGLISH_MAPPING":"soundexMapping"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:90","type":"CtAssignmentImpl","sourcecode":"this.char[] = mapping.toCharArray()"},"status":-2},{"failures":[],"tindex":"c71ae951-3dc5-11e6-ac06-7922fb32ff0d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:284","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"c71ae952-3dc5-11e6-ac06-994a858f2fbc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:89","type":"CtIfImpl","sourcecode":"if ((salt != null) && (!(salt.startsWith(org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String)))) {\n    salt = (org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + salt;\n} "},"variableMap":{"salt":"line","org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:429","type":"CtIfImpl","sourcecode":"if ((line.length()) == 0) {\n    continue;\n} "},"status":-2},{"failures":[],"tindex":"c71ae953-3dc5-11e6-ac06-9f6a135dafd4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:498","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(tempResult, ((byte)(0)))"},"variableMap":{"tempResult":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:211","type":"CtIfImpl","sourcecode":"if (!(obj instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Nysiis encode is not of type java.lang.String\");\n} "},"status":-2},{"failures":[3,4,5,6,7,8,9,10,11],"tindex":"c71b1064-3dc5-11e6-ac06-f3f444609540","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"currentLine","len":"currentLine"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:307","type":"CtTryImpl","sourcecode":"try {\n    final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[0]);\n    final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[1]);\n    final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[2]);\n    final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[3]);\n    final org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule = new org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule(pattern , replacement1 , replacement2 , replacement3);\n    final char char = r.java.lang.String.charAt(0);\n    java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> = ruleMapping.get(patternKey);\n    if (rules == null) {\n        rules = new java.util.ArrayList<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>();\n        ruleMapping.put(patternKey, rules);\n    } \n    rules.add(r);\n} catch (final java.lang.IllegalArgumentException e) {\n    throw new java.lang.IllegalStateException((((\"Problem parsing line '\" + currentLine) + \"' in \") + location) , e);\n}"},"status":-1},{"failures":[12,13,14,15,16,17,18,19],"tindex":"c71b1065-3dc5-11e6-ac06-f30d9bd4f4d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:297","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(saltBytes, ((byte)(0)))"},"variableMap":{"saltBytes":"saltBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:317","type":"CtInvocationImpl","sourcecode":"altCtx.update(saltBytes)"},"status":-1},{"failures":[],"tindex":"c71b1066-3dc5-11e6-ac06-f12d38f92273","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:222","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} else if (value instanceof java.lang.String) {\n    return decode(((java.lang.String)(value)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (value.getClass().getName())) + \" cannot be decoded using BCodec\"));\n}"},"variableMap":{"this":"obj","value":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:417","type":"CtReturnImpl","sourcecode":"return encode(((java.lang.String)(obj)))"},"status":-2},{"failures":[20,21,22,0],"tindex":"c71baca7-3dc5-11e6-ac06-2fa3d20fac08","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:771","type":"CtAssignmentImpl","sourcecode":"index = (charAt(value, (index + 1))) == 'Z' ? index + 2 : index + 1"},"status":-1},{"failures":[],"tindex":"c71bd3b8-3dc5-11e6-ac06-a9bbc2e8053f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:62","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^enough\", \"enou2f\")"},"variableMap":{"txt":"saltString"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:185","type":"CtAssignmentImpl","sourcecode":"saltString = org.apache.commons.codec.digest.B64.getRandomSalt(8)"},"status":-2},{"failures":[],"tindex":"c71bd3b9-3dc5-11e6-ac06-1179b07d2661","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:928","type":"CtReturnImpl","sourcecode":"return result"},"status":-2},{"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"tindex":"c71bd3ba-3dc5-11e6-ac06-d3b37bd19fda","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:229","type":"CtInvocationImpl","sourcecode":"rs.put(\"common\", org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(s, rt, \"common\"), org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, \"common\")))"},"variableMap":{"rs":"rs","rt":"rt","s":"s"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:223","type":"CtInvocationImpl","sourcecode":"rs.put(l, org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(s, rt, l), org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l)))"},"status":-1},{"failures":[],"tindex":"c71bd3bb-3dc5-11e6-ac06-6d1b3dd6ec55","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:751","type":"CtAssignmentImpl","sourcecode":"bitlen = ((bitlen + 7) >> 3) << 3"},"variableMap":{"bitlen":"keyLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:235","type":"CtAssignmentImpl","sourcecode":"ii = keyLen"},"status":-2},{"failures":[24,30,37,38,39,40],"tindex":"c71bd3bc-3dc5-11e6-ac06-1954fe2cd161","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:529","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return org.apache.commons.codec.language.bm.Rule.startsWith(input, content);\n    }\n}"},"variableMap":{"input":"input","content":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:550","type":"CtIfImpl","sourcecode":"if (!(boxContent.contains(\"[\"))) {\n    final boolean boolean = boxContent.startsWith(\"^\");\n    if (negate) {\n        boxContent = boxContent.substring(1);\n    } \n    final java.lang.String java.lang.String = boxContent;\n    final boolean boolean = !negate;\n    if (startsWith && endsWith) {\n        return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n            @java.lang.Override\n            public boolean isMatch(final java.lang.CharSequence input) {\n                return ((input.length()) == 1) && ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch);\n            }\n        };\n    } else if (startsWith) {\n        return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n            @java.lang.Override\n            public boolean isMatch(final java.lang.CharSequence input) {\n                return ((input.length()) > 0) && ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch);\n            }\n        };\n    } else if (endsWith) {\n        return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n            @java.lang.Override\n            public boolean isMatch(final java.lang.CharSequence input) {\n                return ((input.length()) > 0) && ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(((input.length()) - 1)))) == shouldMatch);\n            }\n        };\n    } \n} "},"status":-1},{"failures":[41],"tindex":"c71bfacd-3dc5-11e6-ac06-59f0b01bee83","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:281","type":"CtAssignmentImpl","sourcecode":"l_ascii[(jj - bits)] = '0'"},"variableMap":{"jj":"index","l_ascii":"element","bits":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:437","type":"CtAssignmentImpl","sourcecode":"chrs[index] = element[1]"},"status":-1},{"failures":[42,43,44,45,46,47,48],"tindex":"c71bface-3dc5-11e6-ac06-5979ceeb79bd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:68","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('#')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:107","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet.set(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":-1},{"failures":[],"tindex":"c71c21df-3dc5-11e6-ac06-2b3ff39aa943","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:377","type":"CtAssignmentImpl","sourcecode":"s = (s << 4) | (s >>> 28)"},"variableMap":{"s":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:368","type":"CtOperatorAssignmentImpl","sourcecode":"c &= 268435455"},"status":-2},{"failures":[3,4,5,6,7,8,9,10,11],"tindex":"c71c21e0-3dc5-11e6-ac06-d7d26254041f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:762","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha1Hex(data)"},"variableMap":{"data":"cachedString"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:155","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[23,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40],"tindex":"c71c21e1-3dc5-11e6-ac06-f16273eff7bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:191","type":"CtInvocationImpl","sourcecode":"ls.add(line)"},"status":-1},{"failures":[],"tindex":"c71c21e2-3dc5-11e6-ac06-fd39c496c126","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:303","type":"CtAssignmentImpl","sourcecode":"this.int = org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int"},"variableMap":{"encodeSize":"savedPos","org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:493","type":"CtOperatorAssignmentImpl","sourcecode":"context.int += (context.int) - savedPos"},"status":-2},{"failures":[],"tindex":"c71c21e3-3dc5-11e6-ac06-ef21d5c33a90","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:350","type":"CtIfImpl","sourcecode":"if (lastCode == '/') {\n    continue;\n} "},"variableMap":{"lastCode":"hex1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:186","type":"CtInvocationImpl","sourcecode":"buffer.write(hex1)"},"status":-2},{"failures":[49,50],"tindex":"c71c21e4-3dc5-11e6-ac06-bd1976cdc150","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:331","type":"CtAssignmentImpl","sourcecode":"t = (t >>> 4) | (t << 28)"},"status":-1},{"failures":[23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40],"tindex":"c71c21e5-3dc5-11e6-ac06-0dd243f538e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:401","type":"CtLocalVariableImpl","sourcecode":"final java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>> java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>> = org.apache.commons.codec.language.bm.Rule.getInstanceMap(org.apache.commons.codec.language.bm.PhoneticEngine.this.org.apache.commons.codec.language.bm.NameType, org.apache.commons.codec.language.bm.PhoneticEngine.this.org.apache.commons.codec.language.bm.RuleType, \"common\")"},"variableMap":{"nameType":"nameType","ruleType":"rt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:355","type":"CtLocalVariableImpl","sourcecode":"final java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>> java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>> = org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.java.util.Map<org.apache.commons.codec.language.bm.NameType, java.util.Map<org.apache.commons.codec.language.bm.RuleType, java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>>>>.get(nameType).get(rt).get(lang)"},"status":-1},{"failures":[],"tindex":"c71c21e6-3dc5-11e6-ac06-19bb4ad3374f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:301","type":"CtIfImpl","sourcecode":"if (element == key) {\n    return true;\n} "},"variableMap":{"key":"c","element":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:101","type":"CtReturnImpl","sourcecode":"return ((((c == 'A') || (c == 'E')) || (c == 'I')) || (c == 'O')) || (c == 'U')"},"status":-2},{"failures":[20,22,0],"tindex":"c71c21e7-3dc5-11e6-ac06-051b4de8da2f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:284","type":"CtInvocationImpl","sourcecode":"result.append('S')"},"status":-1},{"failures":[],"tindex":"c71c21e8-3dc5-11e6-ac06-8d07137f97d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:801","type":"CtIfImpl","sourcecode":"if (index != 0) {\n    return false;\n} else if ((!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 5, \"HARAC\", \"HARIS\"))) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 3, \"HOR\", \"HYM\", \"HIA\", \"HEM\")))) {\n    return false;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 5, \"CHORE\")) {\n    return false;\n} else {\n    return true;\n}"},"variableMap":{"index":"org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE","value":"name1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:244","type":"CtIfImpl","sourcecode":"if ((java.lang.Math.abs(((name1.length()) - (name2.length())))) >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    return false;\n} "},"status":-2},{"failures":[51,52,53,54,55,56,43,57,58,59,44,45,46,47,60,48,61,62,63,64,65,66,67,68,69,70,71,72,73],"tindex":"c71c21e9-3dc5-11e6-ac06-7f2574aa9158","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:319","type":"CtReturnImpl","sourcecode":"return new java.lang.String(bytes , org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-1},{"failures":[],"tindex":"c71c48fa-3dc5-11e6-ac06-25259bf971b2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:108","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"r\", \"2\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:88","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"[aeiou]\", \"3\")"},"status":0},{"failures":[22,0],"tindex":"c71c48fb-3dc5-11e6-ac06-4fa1dfd051cf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:688","type":"CtInvocationImpl","sourcecode":"result.append('T')"},"status":-1},{"failures":[74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,52,98,99,100,101,102,103,55,66,67,68],"tindex":"c71c48fc-3dc5-11e6-ac06-558295ab4f39","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:386","type":"CtIfImpl","sourcecode":"if (0 == (context.int)) {\n    buffer[((context.int)++)] = byte[][(((context.int) >> 18) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n    buffer[((context.int)++)] = byte[][(((context.int) >> 12) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n    buffer[((context.int)++)] = byte[][(((context.int) >> 6) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n    buffer[((context.int)++)] = byte[][((context.int) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n    context.int += org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int;\n    if (((int) > 0) && ((int) <= (context.int))) {\n        java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int);\n        context.int += byte[].int;\n        context.int = 0;\n    } \n} "},"status":-1},{"failures":[],"tindex":"c71c48fd-3dc5-11e6-ac06-c97dd9f9d4e8","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:286","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(lineSeparator, 0, org.apache.commons.codec.binary.Base64.this.byte[], 0, lineSeparator.int)"},"variableMap":{"length":"ibitWorkArea","lineSeparator":"encodeTable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:386","type":"CtIfImpl","sourcecode":"if (0 == (context.int)) {\n    buffer[((context.int)++)] = byte[][(((context.int) >> 18) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n    buffer[((context.int)++)] = byte[][(((context.int) >> 12) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n    buffer[((context.int)++)] = byte[][(((context.int) >> 6) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n    buffer[((context.int)++)] = byte[][((context.int) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))];\n    context.int += org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int;\n    if (((int) > 0) && ((int) <= (context.int))) {\n        java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int);\n        context.int += byte[].int;\n        context.int = 0;\n    } \n} "},"status":-2},{"failures":[],"tindex":"c71c700e-3dc5-11e6-ac06-6d583d66fda9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:250","type":"CtTryImpl","sourcecode":"try {\n    final char[] char[] = object instanceof java.lang.String ? ((java.lang.String)(object)).toCharArray() : ((char[])(object));\n    return org.apache.commons.codec.binary.Hex.decodeHex(charArray);\n} catch (final java.lang.ClassCastException e) {\n    throw new org.apache.commons.codec.DecoderException(e.getMessage() , e);\n}"},"variableMap":{"e":"obj","object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:286","type":"CtIfImpl","sourcecode":"if (obj == null) {\n    return null;\n} else if (obj instanceof java.lang.String) {\n    return encode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be encoded using Q codec\"));\n}"},"status":-2},{"failures":[],"tindex":"c71f2f2f-3dc5-11e6-ac06-65730a8141e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:111","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"l\", \"2\")"},"variableMap":{"txt":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:413","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"I\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"status":-2},{"failures":[],"tindex":"c71f2f30-3dc5-11e6-ac06-a97bb043cee4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:262","type":"CtReturnImpl","sourcecode":"return newData"},"variableMap":{"newData":"org.apache.commons.codec.language.Nysiis.CHARS_AF"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:121","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[]"},"status":-2},{"failures":[45],"tindex":"c71f2f31-3dc5-11e6-ac06-df90fe0314cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:504","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b += 256;\n} "},"variableMap":{"b":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:312","type":"CtIfImpl","sourcecode":"if (pos > ((org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.int) - 2)) {\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n} "},"status":-1},{"failures":[],"tindex":"c71f2f32-3dc5-11e6-ac06-5fbb240e2d43","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:389","type":"CtAssignmentImpl","sourcecode":"replacedName = replacedName.replace(dc, singleLetter)"},"variableMap":{"singleLetter":"str","replacedName":"str","dc":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:270","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(str).replaceFirst(\"D\")"},"status":-2},{"failures":[49,104,105,50],"tindex":"c71f2f33-3dc5-11e6-ac06-337949d5bc6b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:298","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(tempResult, 0, pBytes, cp, blocksize)"},"variableMap":{"blocksize":"i","tempResult":"b","pBytes":"b","cp":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:234","type":"CtForImpl","sourcecode":"for ( ; i < 13 ; i++) {\n    int int = 0;\n    int int = 0;\n    for ( ; j < 6 ; j++) {\n        c <<= 1;\n        if (((b[y]) & u) != 0) {\n            c |= 1;\n        } \n        u >>>= 1;\n        if (u == 0) {\n            y++;\n            u = 128;\n        } \n        buffer.setCharAt(i, ((char)(org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][c])));\n    }\n}"},"status":-1},{"failures":[106],"tindex":"c71f5644-3dc5-11e6-ac06-5189c260d040","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:280","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"status":-1},{"failures":[23,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40],"tindex":"c71f5645-3dc5-11e6-ac06-f5945cc67169","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:223","type":"CtInvocationImpl","sourcecode":"rs.put(l, org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(s, rt, l), org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l)))"},"status":-1},{"failures":[],"tindex":"c71f5646-3dc5-11e6-ac06-318a7af37432","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:517","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return input.equals(content);\n    }\n}"},"variableMap":{"input":"input","content":"boxContent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:550","type":"CtIfImpl","sourcecode":"if (!(boxContent.contains(\"[\"))) {\n    final boolean boolean = boxContent.startsWith(\"^\");\n    if (negate) {\n        boxContent = boxContent.substring(1);\n    } \n    final java.lang.String java.lang.String = boxContent;\n    final boolean boolean = !negate;\n    if (startsWith && endsWith) {\n        return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n            @java.lang.Override\n            public boolean isMatch(final java.lang.CharSequence input) {\n                return ((input.length()) == 1) && ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch);\n            }\n        };\n    } else if (startsWith) {\n        return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n            @java.lang.Override\n            public boolean isMatch(final java.lang.CharSequence input) {\n                return ((input.length()) > 0) && ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch);\n            }\n        };\n    } else if (endsWith) {\n        return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n            @java.lang.Override\n            public boolean isMatch(final java.lang.CharSequence input) {\n                return ((input.length()) > 0) && ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(((input.length()) - 1)))) == shouldMatch);\n            }\n        };\n    } \n} "},"status":-2},{"failures":[],"tindex":"c71f5647-3dc5-11e6-ac06-e9b85f57a47a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:266","type":"CtAssignmentImpl","sourcecode":"altCtx = org.apache.commons.codec.digest.DigestUtils.getDigest(algorithm)"},"status":0},{"failures":[107,20,21,22,0],"tindex":"c71f5648-3dc5-11e6-ac06-878015137901","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:293","type":"CtIfImpl","sourcecode":"if (((leftCharacter.length()) != 1) || ((rightCharacter.length()) != 1)) {\n    throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + rawLine) + \" in \") + location));\n} "},"variableMap":{"rawLine":"value","leftCharacter":"value","rightCharacter":"value","location":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, \"I\", \"E\", \"H\")) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, \"HU\")))) {\n    if (((index == 1) && ((charAt(value, (index - 1))) == 'A')) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, \"UCCEE\", \"UCCES\"))) {\n        result.append(\"KS\");\n    } else {\n        result.append('X');\n    }\n    index += 3;\n} else {\n    result.append('K');\n    index += 2;\n}"},"status":-1},{"failures":[],"tindex":"c71f5649-3dc5-11e6-ac06-1917e0a806d6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:268","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"status":-2},{"failures":[3],"tindex":"c71f564a-3dc5-11e6-ac06-21a1de7e8bfd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:187","type":"CtIfImpl","sourcecode":"if (nextCharIsVowel) {\n    return java.lang.String[];\n} "},"status":-1},{"failures":[],"tindex":"c71f564b-3dc5-11e6-ac06-ebb879ca884c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:223","type":"CtAssignmentImpl","sourcecode":"patternLength = 1"},"variableMap":{"patternLength":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:394","type":"CtOperatorAssignmentImpl","sourcecode":"context.int += byte[].int"},"status":-2},{"failures":[20,22,0],"tindex":"c721521c-3dc5-11e6-ac06-6bae14ab1d01","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:282","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"variableMap":{"index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:506","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-1},{"failures":[12,13,14,15,16,17,18,19],"tindex":"c721521d-3dc5-11e6-ac06-054e54f982ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:297","type":"CtWhileImpl","sourcecode":"while (cp < (keyLen - blocksize)) {\n    java.lang.System.arraycopy(tempResult, 0, pBytes, cp, blocksize);\n    cp += blocksize;\n}"},"variableMap":{"blocksize":"saltLen","tempResult":"sBytes","pBytes":"sBytes","keyLen":"saltLen","cp":"saltLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:379","type":"CtInvocationImpl","sourcecode":"ctx.update(sBytes, 0, saltLen)"},"status":-1},{"failures":[74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,52,98,99,100,101,102,103,55,66,67,68],"tindex":"c721521e-3dc5-11e6-ac06-4172ba61d709","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:113","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[avail]"},"variableMap":{"avail":"encodeSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:379","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = ensureBufferSize(int, context)"},"status":-1},{"failures":[49,50],"tindex":"c721521f-3dc5-11e6-ac06-3166566d410f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:315","type":"CtAssignmentImpl","sourcecode":"out[0] = left"},"status":-1},{"failures":[],"tindex":"c7215220-3dc5-11e6-ac06-d1b4cd41855c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:67","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('\"')"},"status":0},{"failures":[44,45],"tindex":"c7215221-3dc5-11e6-ac06-f74457876c12","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:136","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:188","type":"CtReturnImpl","sourcecode":"return 3"},"status":-1},{"failures":[],"tindex":"c7215222-3dc5-11e6-ac06-1365fd090750","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:95","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('^')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:94","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(']')"},"status":0},{"failures":[],"tindex":"c7215223-3dc5-11e6-ac06-cbf38186f5a4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:338","type":"CtReturnImpl","sourcecode":"return encode(((byte[])(obj)))"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:286","type":"CtIfImpl","sourcecode":"if (obj == null) {\n    return null;\n} else if (obj instanceof java.lang.String) {\n    return encode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be encoded using Q codec\"));\n}"},"status":-2},{"failures":[],"tindex":"c7215224-3dc5-11e6-ac06-39f8225953d5","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:645","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = pattern"},"variableMap":{"pattern":"name2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:226","type":"CtAssignmentImpl","sourcecode":"name2 = cleanName(name2)"},"status":-2},{"failures":[70],"tindex":"c7215225-3dc5-11e6-ac06-c7049dbbab94","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:161","type":"CtAssignmentImpl","sourcecode":"data[i] = org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.byte"},"status":-1},{"failures":[],"tindex":"c7215226-3dc5-11e6-ac06-59967a58bd0e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:110","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ly\", \"Ly\")"},"status":0},{"failures":[],"tindex":"c7215227-3dc5-11e6-ac06-990dff6ea31b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:214","type":"CtIfImpl","sourcecode":"if (((name1 == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name1))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name1))) {\n    return false;\n} else if (((name2 == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name2))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name2))) {\n    return false;\n} else if (((name1.length()) == 1) || ((name2.length()) == 1)) {\n    return false;\n} else if (name1.equalsIgnoreCase(name2)) {\n    return true;\n} "},"variableMap":{"org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"cs2","name2":"cs1","name1":"cs1","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"cs2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:74","type":"CtIfImpl","sourcecode":"if ((cs1 == null) || (cs2 == null)) {\n    return false;\n} "},"status":-2},{"failures":[8,9,10],"tindex":"c7217938-3dc5-11e6-ac06-7964cd5760ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:436","type":"CtReturnImpl","sourcecode":"return soundex(source, false)[0]"},"status":-1},{"failures":[],"tindex":"c7217939-3dc5-11e6-ac06-b3ee83dd0a01","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:120","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.flush()"},"status":0},{"failures":[],"tindex":"c721793a-3dc5-11e6-ac06-330a46054bf4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"length","name2Size":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:433","type":"CtForImpl","sourcecode":"for (int int = 0 ; index < (chrs.int) ; index++) {\n    if ((chrs[index]) > 'Z') {\n        for (final char[] char[] : org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[][]) {\n            if ((chrs[index]) == (element[0])) {\n                chrs[index] = element[1];\n                break;\n            } \n        }\n    } \n}"},"status":-2},{"failures":[],"tindex":"c721793b-3dc5-11e6-ac06-114ca99d3868","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:763","type":"CtAssignmentImpl","sourcecode":"startSrc = 1"},"variableMap":{"startSrc":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:375","type":"CtOperatorAssignmentImpl","sourcecode":"context.int += byte[].int"},"status":-2},{"failures":[44,46],"tindex":"c721793c-3dc5-11e6-ac06-83ec0dfd11f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:169","type":"CtInvocationImpl","sourcecode":"buffer.write(' ')"},"variableMap":{"buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:296","type":"CtInvocationImpl","sourcecode":"buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":-1},{"failures":[108],"tindex":"c721793d-3dc5-11e6-ac06-5f18f15b0607","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.RuleType:47","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.RuleType.this.java.lang.String"},"variableMap":{"name":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:532","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha256(data))"},"status":-1},{"failures":[],"tindex":"c721793e-3dc5-11e6-ac06-a7e8286ac1c3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:113","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[avail]"},"variableMap":{"avail":"org.apache.commons.codec.digest.DigestUtils.STREAM_BUFFER_LENGTH"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:793","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.int]"},"status":-2},{"failures":[],"tindex":"c721793f-3dc5-11e6-ac06-5fc192ae8256","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:79","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"tio\", \"sio\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:113","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"y3\", \"Y3\")"},"status":0},{"failures":[],"tindex":"c7217940-3dc5-11e6-ac06-69e1fc21f91b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:338","type":"CtReturnImpl","sourcecode":"return encode(((byte[])(obj)))"},"variableMap":{"obj":"obj","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:380","type":"CtReturnImpl","sourcecode":"return decode(((java.lang.String)(obj)))"},"status":-2},{"failures":[20,21,22,0],"tindex":"c7217941-3dc5-11e6-ac06-7d2c76fcf8ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:306","type":"CtAssignmentImpl","sourcecode":"this.int = (org.apache.commons.codec.binary.Base32.this.int) - 1"},"variableMap":{"encodeSize":"index","decodeSize":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:750","type":"CtAssignmentImpl","sourcecode":"index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"C\", \"X\") ? index + 2 : index + 1"},"status":-1},{"failures":[109,110,111,112],"tindex":"c7217942-3dc5-11e6-ac06-8ffa6995688f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:211","type":"CtInvocationImpl","sourcecode":"code.append('T')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:240","type":"CtInvocationImpl","sourcecode":"code.append('K')"},"status":-1},{"failures":[],"tindex":"c7217943-3dc5-11e6-ac06-9b1387f2403b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:90","type":"CtReturnImpl","sourcecode":"return +1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:641","type":"CtReturnImpl","sourcecode":"return index"},"status":-2},{"failures":[56,42,43,58,59,44,113,60,69,71,114,73],"tindex":"c7217944-3dc5-11e6-ac06-5fe33cb1b91c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:362","type":"CtIfImpl","sourcecode":"if ((bytes[(++i)]) == (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)) {\n    continue;\n} "},"status":-1},{"failures":[115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138],"tindex":"c721a055-3dc5-11e6-ac06-2bd3c61ec743","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:326","type":"CtAssignmentImpl","sourcecode":"name1Char[(name1Size - i)] = ' '"},"variableMap":{"name1Char":"name2Char","name1Size":"i","i":"name2Size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:327","type":"CtAssignmentImpl","sourcecode":"name2Char[(name2Size - i)] = ' '"},"status":-1},{"failures":[],"tindex":"c721a056-3dc5-11e6-ac06-1f3e3904ad1d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:335","type":"CtIfImpl","sourcecode":"if (obj == null) {\n    return null;\n} else if (obj instanceof byte[]) {\n    return decode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be URL decoded\"));\n}"},"status":-2},{"failures":[20,21,22,0],"tindex":"c721a057-3dc5-11e6-ac06-7baa2abfa5bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:584","type":"CtIfImpl","sourcecode":"if ((((index == ((value.length()) - 1)) && (!slavoGermanic)) && (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, \"IE\"))) && (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 4), 2, \"ME\", \"MA\")))) {\n    result.appendAlternate('R');\n} else {\n    result.append('R');\n}"},"status":-1},{"failures":[],"tindex":"c721a058-3dc5-11e6-ac06-f5a2ae589391","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:305","type":"CtInvocationImpl","sourcecode":"key.deleteCharAt(((key.length()) - 2))"},"variableMap":{"key":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:240","type":"CtInvocationImpl","sourcecode":"code.append('K')"},"status":-2},{"failures":[],"tindex":"c721a059-3dc5-11e6-ac06-cb433e748455","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:419","type":"CtInvocationImpl","sourcecode":"result.append(\"KN\")"},"variableMap":{"result":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:974","type":"CtInvocationImpl","sourcecode":"appendPrimary(primary)"},"status":-2},{"failures":[23,24,25,26,27,30,31,32,33,34,36,37,38,39,40],"tindex":"c721a05a-3dc5-11e6-ac06-4b511c0a19e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:280","type":"CtIfImpl","sourcecode":"if ((input.charAt(i)) != (suffix.charAt(j))) {\n    return false;\n} "},"variableMap":{"input":"input","i":"i","j":"ipl","suffix":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:713","type":"CtIfImpl","sourcecode":"if (!(input.subSequence(i, ipl).equals(org.apache.commons.codec.language.bm.Rule.this.java.lang.String))) {\n    return false;\n} else if (!(org.apache.commons.codec.language.bm.Rule.this.org.apache.commons.codec.language.bm.Rule.RPattern.isMatch(input.subSequence(ipl, input.length())))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"c721a05b-3dc5-11e6-ac06-fb5b9b2cd8ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:125","type":"CtIfImpl","sourcecode":"if (urlsafe == null) {\n    urlsafe = org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet;\n} "},"variableMap":{"urlsafe":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS","org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:85","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(';')"},"status":-2},{"failures":[24,25,26,27,30,31,32,33,38,39],"tindex":"c721a05c-3dc5-11e6-ac06-b92687f84c15","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:601","type":"CtIfImpl","sourcecode":"if ((prefix.length()) > (input.length())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"c721a05d-3dc5-11e6-ac06-8391915fa528","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:332","type":"CtIfImpl","sourcecode":"if (str.startsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    str = str.substring(1);\n} "},"variableMap":{"str":"l","org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE":"l"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:222","type":"CtTryImpl","sourcecode":"try {\n    rs.put(l, org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(s, rt, l), org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l)));\n} catch (final java.lang.IllegalStateException e) {\n    throw new java.lang.IllegalStateException((\"Problem processing \" + (org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l))) , e);\n}"},"status":-2},{"failures":[],"tindex":"c721a05e-3dc5-11e6-ac06-a7bfa75e48d9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:273","type":"CtAssignmentImpl","sourcecode":"mapped = getMappingCode(str, (incount++))"},"status":-2},{"failures":[109,139,140,141],"tindex":"c721a05f-3dc5-11e6-ac06-e765c0846cfd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:468","type":"CtInvocationImpl","sourcecode":"sb.append('}')"},"variableMap":{"sb":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:185","type":"CtInvocationImpl","sourcecode":"code.append('S')"},"status":-1},{"failures":[],"tindex":"c721a060-3dc5-11e6-ac06-1d8e1888aaa6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.B64:62","type":"CtOperatorAssignmentImpl","sourcecode":"w >>= 6"},"variableMap":{"w":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:251","type":"CtAssignmentImpl","sourcecode":"context.int = 0"},"status":-2},{"failures":[49,50],"tindex":"c721a061-3dc5-11e6-ac06-77dd6754c25e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:369","type":"CtOperatorAssignmentImpl","sourcecode":"d &= 268435455"},"variableMap":{"d":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:301","type":"CtAssignmentImpl","sourcecode":"left = results[1]"},"status":-1},{"failures":[142,143,144,145,146,147,148,85,86,87,88,89,90,91,93,94,95,149,150,151,152,52,99,102,53,54,55,153,66,67,154],"tindex":"c721c772-3dc5-11e6-ac06-39e1dd22cd2f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:554","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, false)"},"variableMap":{"binaryData":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:414","type":"CtReturnImpl","sourcecode":"return result"},"status":-1},{"failures":[],"tindex":"c721c773-3dc5-11e6-ac06-93413fdc61cf","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:284","type":"CtInvocationImpl","sourcecode":"result.append('S')"},"variableMap":{"result":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:947","type":"CtInvocationImpl","sourcecode":"appendPrimary(value)"},"status":-2},{"failures":[155],"tindex":"c721c774-3dc5-11e6-ac06-bdb7bc3e4f05","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:104","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^h\", \"A\")"},"status":-1},{"failures":[156,157,158,159],"tindex":"c721c775-3dc5-11e6-ac06-772bcd910f7d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:83","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(raw)"},"variableMap":{"raw":"array"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:232","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.decodeHex(new java.lang.String(array , getCharset()).toCharArray())"},"status":-1},{"failures":[22,0],"tindex":"c721c776-3dc5-11e6-ac06-6f0b8ca615c9","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:417","type":"CtInvocationImpl","sourcecode":"result.append(\"N\", \"KN\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:611","type":"CtInvocationImpl","sourcecode":"result.append('X')"},"status":-1},{"failures":[],"tindex":"c721c777-3dc5-11e6-ac06-f55d7623abf1","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:316","type":"CtAssignmentImpl","sourcecode":"this.boolean = concat"},"variableMap":{"concat":"doEncode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:48","type":"CtAssignmentImpl","sourcecode":"this.boolean = doEncode"},"status":-2},{"failures":[17,18,19],"tindex":"c721c778-3dc5-11e6-ac06-f71e6432a30e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:473","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[25], altResult[46], altResult[4], 4, buffer)"},"status":-1},{"failures":[],"tindex":"c721c779-3dc5-11e6-ac06-d95a3a4d49a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:211","type":"CtInvocationImpl","sourcecode":"buffer.setCharAt(0, charZero)"},"variableMap":{"buffer":"sBuf","charZero":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:190","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (str.length()) ; i++) {\n    current = getMappingCode(str.charAt(i));\n    if (current == last) {\n        continue;\n    } else if (current != 0) {\n        sBuf.append(current);\n    } \n    last = current;\n}"},"status":-2},{"failures":[49,50],"tindex":"c721c77a-3dc5-11e6-ac06-8d135fba927f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:505","type":"CtOperatorAssignmentImpl","sourcecode":"b += 256"},"variableMap":{"b":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:352","type":"CtAssignmentImpl","sourcecode":"c = results[0]"},"status":-1},{"failures":[],"tindex":"c721c77b-3dc5-11e6-ac06-e36b5b8a9859","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:134","type":"CtIfImpl","sourcecode":"if (!(obj instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to RefinedSoundex encode is not of type java.lang.String\");\n} "},"status":0},{"failures":[49,50],"tindex":"c721c77c-3dc5-11e6-ac06-e7f8c2065a27","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:305","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(right, left, 2, 858993459, results)"},"variableMap":{"left":"d","right":"d","results":"results"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:343","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(d, c, 4, 252645135, results)"},"status":-1},{"failures":[160,161],"tindex":"c721c77d-3dc5-11e6-ac06-b12bf1027aae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.Utils:44","type":"CtIfImpl","sourcecode":"if (i == (-1)) {\n    throw new org.apache.commons.codec.DecoderException((((\"Invalid URL encoding: not a valid digit (radix \" + (org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.int)) + \"): \") + b));\n} "},"status":-1},{"failures":[],"tindex":"c721c77e-3dc5-11e6-ac06-7b848a377239","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:158","type":"CtLocalVariableImpl","sourcecode":"final int int = java.io.InputStream.read(buf)"},"status":-2},{"failures":[],"tindex":"c721c77f-3dc5-11e6-ac06-0f1f66bfd464","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:88","type":"CtAssignmentImpl","sourcecode":"upperName = upperName.replaceAll(str, org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"str":"org.apache.commons.codec.language.Caverphone2.TEN_1","upperName":"txt","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:125","type":"CtAssignmentImpl","sourcecode":"txt = txt + (org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String)"},"status":-2},{"failures":[162,163,164,165],"tindex":"c721c780-3dc5-11e6-ac06-67d5814a5899","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:95","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"k+\", \"K\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:105","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"n+\", \"N\")"},"status":-1},{"failures":[],"tindex":"c721c781-3dc5-11e6-ac06-eb6448210d29","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:211","type":"CtIfImpl","sourcecode":"if (!(obj instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Nysiis encode is not of type java.lang.String\");\n} "},"status":0}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}