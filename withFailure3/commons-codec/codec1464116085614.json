{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":43,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":30,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":23,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":29,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":36,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":34,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":13,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":31,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":37,"org.apache.commons.codec.language.ColognePhoneticTest.testEncodeEmpty":16,"org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde":44,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":6,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":2,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":48,"org.apache.commons.codec.language.DoubleMetaphone2Test.testLocaleIndependence":49,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":0,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":35,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":51,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":20,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":52,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":9,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":56,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":8,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":7,"org.apache.commons.codec.language.DoubleMetaphoneTest.testLocaleIndependence":46,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":3,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":4,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":11,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":55,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":14,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":10,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184":39,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":54,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":42,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":15,"org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals":12,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":28,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":26,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":24,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":32,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":25,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone":50,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":1,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":27,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":53,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2":40,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3":41,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":33,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla":38,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched":19,"org.apache.commons.codec.language.ColognePhoneticTest.testLocaleIndependence":17,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched":22,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":47,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder":18,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch":21,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":5,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual":45},"transformations":[{"failures":[],"tindex":"fb71d113-21e0-11e6-a228-b535a5e70851","series":0,"name":"replace","transplant":{"toString":"final byte[] b = new byte[9]","position":"org.apache.commons.codec.digest.UnixCrypt:227","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[9]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final byte[] buf = new byte[doEncode ? 4096 : 8192]","position":"org.apache.commons.codec.binary.BaseNCodecInputStream:157","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[boolean ? 4096 : 8192]"},"status":-2},{"failures":[],"tindex":"fb71f824-21e0-11e6-a228-cb8047377fd6","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.language.Caverphone1.SIX_1","position":"org.apache.commons.codec.language.Caverphone1:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String"},"variableMap":{"org.apache.commons.codec.language.Caverphone1.SIX_1":"salt"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.Md5Crypt.md5Crypt(keyBytes, salt)","position":"org.apache.commons.codec.digest.Crypt:73","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Md5Crypt.md5Crypt(keyBytes, salt)"},"status":-3},{"failures":[],"tindex":"fb71f825-21e0-11e6-a228-a3afae20720e","series":0,"name":"replace","transplant":{"toString":"flush(false)","position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"flush(false)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"lsScanner.close()","position":"org.apache.commons.codec.language.bm.Languages:196","type":"CtInvocationImpl","sourcecode":"lsScanner.close()"},"status":-2},{"failures":[0,1],"tindex":"fb71f826-21e0-11e6-a228-c14c30d969ef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"ci\", \"si\")","position":"org.apache.commons.codec.language.Caverphone2:74","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ci\", \"si\")"},"status":-1},{"failures":[],"tindex":"fb71f827-21e0-11e6-a228-ab34c73b4bed","series":0,"name":"add","transplant":{"toString":"return org.apache.commons.codec.digest.DigestUtils.sha256(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))","position":"org.apache.commons.codec.digest.DigestUtils:485","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha256(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"variableMap":{"data":"string"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.binary.StringUtils.getBytes(string, org.apache.commons.codec.Charsets.UTF_16LE)","position":"org.apache.commons.codec.binary.StringUtils:217","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.getBytes(string, org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-2},{"failures":[],"tindex":"fb721f38-21e0-11e6-a228-93b77d73634c","series":0,"name":"replace","transplant":{"toString":"return \"\"","position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return \"ANY_LANGUAGE\"","position":"org.apache.commons.codec.language.bm.Languages:284","type":"CtReturnImpl","sourcecode":"return \"ANY_LANGUAGE\""},"status":0},{"failures":[],"tindex":"fb721f39-21e0-11e6-a228-f12bc3423cdf","series":0,"name":"replace","transplant":{"toString":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone2.TEN_1;\n} ","position":"org.apache.commons.codec.language.Caverphone2:47","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String;\n} "},"variableMap":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"text","txt":"text"},"type":"adrStmt","transplantationPoint":{"toString":"if (text == null) {\n    return null;\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:104","type":"CtIfImpl","sourcecode":"if (text == null) {\n    return null;\n} "},"status":-3},{"failures":[2],"tindex":"fb721f3a-21e0-11e6-a228-6ff21c2e98ab","series":0,"name":"replace","transplant":{"toString":"return false","position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return true","position":"org.apache.commons.codec.language.bm.Rule:609","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[3,4],"tindex":"fb721f3b-21e0-11e6-a228-eff8e15fe89e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"bitlen = ((bitlen + 7) >> 3) << 3","position":"org.apache.commons.codec.binary.Base64:751","type":"CtAssignmentImpl","sourcecode":"bitlen = ((bitlen + 7) >> 3) << 3"},"status":-1},{"failures":[],"tindex":"fb721f3c-21e0-11e6-a228-ff717b30cf61","series":0,"name":"replace","transplant":{"toString":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} ","position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"ii","to":"ii"},"type":"adrStmt","transplantationPoint":{"toString":"while (ii > 0) {\n    if ((ii & 1) == 1) {\n        ctx.update(finalb[j]);\n    } else {\n        ctx.update(keyBytes[j]);\n    }\n    ii >>= 1;\n}","position":"org.apache.commons.codec.digest.Md5Crypt:237","type":"CtWhileImpl","sourcecode":"while (ii > 0) {\n    if ((ii & 1) == 1) {\n        ctx.update(finalb[j]);\n    } else {\n        ctx.update(keyBytes[j]);\n    }\n    ii >>= 1;\n}"},"status":-2},{"failures":[5,6],"tindex":"fb72464d-21e0-11e6-a228-077d91d4b58f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"d = (d >>> 2) | (d << 26)","position":"org.apache.commons.codec.digest.UnixCrypt:363","type":"CtAssignmentImpl","sourcecode":"d = (d >>> 2) | (d << 26)"},"status":-1},{"failures":[],"tindex":"fb72464e-21e0-11e6-a228-55fc89c0ece5","series":0,"name":"replace","transplant":{"toString":"this.encodeSize = org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK","position":"org.apache.commons.codec.binary.Base64:288","type":"CtAssignmentImpl","sourcecode":"this.int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int"},"variableMap":{"org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK":"b","encodeSize":"b"},"type":"adrStmt","transplantationPoint":{"toString":"b = 256 + b","position":"org.apache.commons.codec.net.URLCodec:133","type":"CtAssignmentImpl","sourcecode":"b = 256 + b"},"status":-3},{"failures":[],"tindex":"fb72464f-21e0-11e6-a228-33ad65446d9c","series":0,"name":"replace","transplant":{"toString":"final char[] chrs = text.toCharArray()","position":"org.apache.commons.codec.language.ColognePhonetic:431","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = text.toCharArray()"},"variableMap":{"text":"str"},"type":"adrStmt","transplantationPoint":{"toString":"final char[] chars = str.toCharArray()","position":"org.apache.commons.codec.language.Nysiis:277","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = str.toCharArray()"},"status":-3},{"failures":[],"tindex":"fb724650-21e0-11e6-a228-73c2744c9044","series":0,"name":"add","transplant":{"toString":"this.acceptOnMatch = acceptOnMatch","position":"org.apache.commons.codec.language.bm.Lang:88","type":"CtAssignmentImpl","sourcecode":"this.boolean = acceptOnMatch"},"variableMap":{"acceptOnMatch":"roundsCustom"},"type":"adrStmt","transplantationPoint":{"toString":"roundsCustom = true","position":"org.apache.commons.codec.digest.Sha2Crypt:152","type":"CtAssignmentImpl","sourcecode":"roundsCustom = true"},"status":-2},{"failures":[5,6],"tindex":"fb729471-21e0-11e6-a228-0f9070a936aa","series":0,"name":"replace","transplant":{"toString":"b ^= t","position":"org.apache.commons.codec.digest.UnixCrypt:408","type":"CtOperatorAssignmentImpl","sourcecode":"b ^= t"},"variableMap":{"b":"c","t":"c"},"type":"adrStmt","transplantationPoint":{"toString":"c = results[1]","position":"org.apache.commons.codec.digest.UnixCrypt:345","type":"CtAssignmentImpl","sourcecode":"c = results[1]"},"status":-1},{"failures":[7,8,9,10,11,12,13,14,15,16,17],"tindex":"fb729472-21e0-11e6-a228-ab3904ea95bd","series":0,"name":"replace","transplant":{"toString":"currentLine++","position":"org.apache.commons.codec.language.bm.Rule:408","type":"CtUnaryOperatorImpl","sourcecode":"currentLine++"},"variableMap":{"currentLine":"length"},"type":"adrStmt","transplantationPoint":{"toString":"(length)--","position":"org.apache.commons.codec.language.ColognePhonetic:275","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"status":-1},{"failures":[18,19,20,21,22],"tindex":"fb729473-21e0-11e6-a228-bdcee133168b","series":0,"name":"replace","transplant":{"toString":"final java.lang.String combined = l + remainder","position":"org.apache.commons.codec.language.bm.PhoneticEngine:420","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = l + remainder"},"variableMap":{"l":"name","remainder":"name"},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.String firstThree = name.substring(0, org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:163","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = name.substring(0, org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)"},"status":-1},{"failures":[23,24,25],"tindex":"fb729474-21e0-11e6-a228-05ac5af9580c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[50], altResult[8], altResult[29], 4, buffer)","position":"org.apache.commons.codec.digest.Sha2Crypt:477","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[50], altResult[8], altResult[29], 4, buffer)"},"status":-1},{"failures":[],"tindex":"fb729475-21e0-11e6-a228-95a5db75e2fe","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"p+\", \"P\")","position":"org.apache.commons.codec.language.Caverphone1:94","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"p+\", \"P\")"},"variableMap":{"txt":"input"},"type":"adrStmt","transplantationPoint":{"toString":"input = org.apache.commons.codec.language.bm.PhoneticEngine.join(words2, \" \")","position":"org.apache.commons.codec.language.bm.PhoneticEngine:452","type":"CtAssignmentImpl","sourcecode":"input = org.apache.commons.codec.language.bm.PhoneticEngine.join(words2, \" \")"},"status":-2},{"failures":[],"tindex":"fb72bb86-21e0-11e6-a228-37b46897fa79","series":0,"name":"replace","transplant":{"toString":"int v = r ^ (r >>> 16)","position":"org.apache.commons.codec.digest.UnixCrypt:326","type":"CtLocalVariableImpl","sourcecode":"int int = r ^ (r >>> 16)"},"variableMap":{"r":"i"},"type":"adrStmt","transplantationPoint":{"toString":"final int b = bytes[i]","position":"org.apache.commons.codec.net.QuotedPrintableCodec:358","type":"CtLocalVariableImpl","sourcecode":"final int int = bytes[i]"},"status":-2},{"failures":[],"tindex":"fb72bb87-21e0-11e6-a228-492f67639620","series":0,"name":"add","transplant":{"toString":"txt = txt.replaceAll(\"w3\", \"W3\")","position":"org.apache.commons.codec.language.Caverphone1:99","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"w3\", \"W3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"c\", \"k\")","position":"org.apache.commons.codec.language.Caverphone1:74","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"c\", \"k\")"},"status":0},{"failures":[],"tindex":"fb72bb88-21e0-11e6-a228-1fd37d552868","series":0,"name":"replace","transplant":{"toString":"b = 256 + b","position":"org.apache.commons.codec.net.QuotedPrintableCodec:204","type":"CtAssignmentImpl","sourcecode":"b = 256 + b"},"variableMap":{"b":"u"},"type":"adrStmt","transplantationPoint":{"toString":"u >>>= 1","position":"org.apache.commons.codec.digest.UnixCrypt:242","type":"CtOperatorAssignmentImpl","sourcecode":"u >>>= 1"},"status":-2},{"failures":[],"tindex":"fb72bb89-21e0-11e6-a228-192b6098477a","series":0,"name":"add","transplant":{"toString":"if ((binaryData == null) || ((binaryData.length) == 0)) {\n    return binaryData;\n} ","position":"org.apache.commons.codec.binary.Base64:662","type":"CtIfImpl","sourcecode":"if ((binaryData == null) || ((binaryData.int) == 0)) {\n    return binaryData;\n} "},"variableMap":{"binaryData":"pArray","length":"length"},"type":"adrStmt","transplantationPoint":{"toString":"if ((pArray == null) || ((pArray.length) == 0)) {\n    return pArray;\n} ","position":"org.apache.commons.codec.binary.BaseNCodec:406","type":"CtIfImpl","sourcecode":"if ((pArray == null) || ((pArray.int) == 0)) {\n    return pArray;\n} "},"status":-2},{"failures":[26,27,28,29,30,31,32,33,34],"tindex":"fb72bb8a-21e0-11e6-a228-0d39a697b90c","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md2(data))","position":"org.apache.commons.codec.digest.DigestUtils:249","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md2(data))"},"variableMap":{"data":"str"},"type":"adrStmt","transplantationPoint":{"toString":"return str","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:340","type":"CtReturnImpl","sourcecode":"return str"},"status":-1},{"failures":[35],"tindex":"fb72bb8b-21e0-11e6-a228-c98d5e7c298e","series":0,"name":"replace","transplant":{"toString":"return new org.apache.commons.codec.binary.Base64().decode(base64String)","position":"org.apache.commons.codec.binary.Base64:692","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.binary.Base64().decode(base64String)"},"variableMap":{"base64String":"data"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.digest.DigestUtils.md5(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))","position":"org.apache.commons.codec.digest.DigestUtils:285","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.md5(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"status":-1},{"failures":[],"tindex":"fb72bb8c-21e0-11e6-a228-395b8164f7d8","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"r$\", \"3\")","position":"org.apache.commons.codec.language.Caverphone2:113","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"r$\", \"3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"q\", \"k\")","position":"org.apache.commons.codec.language.Caverphone1:75","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"q\", \"k\")"},"status":0},{"failures":[],"tindex":"fb72bb8d-21e0-11e6-a228-17df386d7b3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"this.lineSeparator = new byte[lineSeparator.length]","position":"org.apache.commons.codec.binary.Base64:285","type":"CtAssignmentImpl","sourcecode":"this.byte[] = new byte[lineSeparator.int]"},"status":-2},{"failures":[],"tindex":"fb72e29e-21e0-11e6-a228-734fad1080ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"throw new org.apache.commons.codec.DecoderException(e.getMessage() , e)","position":"org.apache.commons.codec.net.BCodec:183","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(e.getMessage() , e)"},"status":-2},{"failures":[],"tindex":"fb72e29f-21e0-11e6-a228-89fbc69ffcd1","series":0,"name":"replace","transplant":{"toString":"name1 = removeDoubleConsonants(name1)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:235","type":"CtAssignmentImpl","sourcecode":"name1 = removeDoubleConsonants(name1)"},"variableMap":{"name1":"cachedString"},"type":"adrStmt","transplantationPoint":{"toString":"cachedString = builder.toString()","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:153","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.StringBuilder.toString()"},"status":-2},{"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],"tindex":"fb72e2a0-21e0-11e6-a228-8fb373130aa6","series":0,"name":"replace","transplant":{"toString":"if (!(ph.endsWith(\")\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme starts with '(' so must end with ')'\");\n} ","position":"org.apache.commons.codec.language.bm.Rule:383","type":"CtIfImpl","sourcecode":"if (!(ph.endsWith(\")\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme starts with '(' so must end with ')'\");\n} "},"variableMap":{"ph":"value"},"type":"adrStmt","transplantationPoint":{"toString":"for (final java.lang.String element : org.apache.commons.codec.language.DoubleMetaphone.SILENT_START) {\n    if (value.startsWith(element)) {\n        result = true;\n        break;\n    } \n}","position":"org.apache.commons.codec.language.DoubleMetaphone:876","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.java.lang.String[]) {\n    if (value.startsWith(element)) {\n        result = true;\n        break;\n    } \n}"},"status":-1},{"failures":[],"tindex":"fb72e2a1-21e0-11e6-a228-4b8b12303b2a","series":0,"name":"replace","transplant":{"toString":"txt = txt.replaceAll(\"t+\", \"T\")","position":"org.apache.commons.codec.language.Caverphone1:93","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"t+\", \"T\")"},"variableMap":{"txt":"name2"},"type":"adrStmt","transplantationPoint":{"toString":"name2 = removeVowels(name2)","position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:232","type":"CtAssignmentImpl","sourcecode":"name2 = removeVowels(name2)"},"status":-2},{"failures":[26,27,28,29,30,31,32,33,34],"tindex":"fb72e2a2-21e0-11e6-a228-4dbd6f2f6aa7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"str = str.substring(1)","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:333","type":"CtAssignmentImpl","sourcecode":"str = str.substring(1)"},"status":-1},{"failures":[],"tindex":"fb72e2a3-21e0-11e6-a228-b9b9e44691c1","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS.set('[')","position":"org.apache.commons.codec.net.QCodec:92","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('[')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"printable"},"type":"adrStmt","transplantationPoint":{"toString":"if (pos < (org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH)) {\n    pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!(printable.get(b))), buffer);\n} else {\n    org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, ((!(printable.get(b))) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b))), buffer);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.CR);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.LF);\n    pos = 1;\n}","position":"org.apache.commons.codec.net.QuotedPrintableCodec:288","type":"CtIfImpl","sourcecode":"if (pos < (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.int)) {\n    pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!(printable.get(b))), buffer);\n} else {\n    org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, ((!(printable.get(b))) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b))), buffer);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n    buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n    pos = 1;\n}"},"status":-3},{"failures":[51,52,53,54,55],"tindex":"fb72e2a4-21e0-11e6-a228-5936f82e098a","series":0,"name":"replace","transplant":{"toString":"y++","position":"org.apache.commons.codec.digest.UnixCrypt:244","type":"CtUnaryOperatorImpl","sourcecode":"y++"},"variableMap":{"y":"pos"},"type":"adrStmt","transplantationPoint":{"toString":"pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!(printable.get(b))), buffer)","position":"org.apache.commons.codec.net.QuotedPrintableCodec:290","type":"CtOperatorAssignmentImpl","sourcecode":"pos += org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(b, (!(printable.get(b))), buffer)"},"status":-1},{"failures":[56],"tindex":"fb72e2a5-21e0-11e6-a228-7b87365ddbf2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"hasUnderscores = true","position":"org.apache.commons.codec.net.QCodec:176","type":"CtAssignmentImpl","sourcecode":"hasUnderscores = true"},"status":-1},{"failures":[],"tindex":"fb7309b6-21e0-11e6-a228-edbce1e639f3","series":0,"name":"add","transplant":{"toString":"txt = txt.replaceAll(\"m+\", \"M\")","position":"org.apache.commons.codec.language.Caverphone1:97","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"m+\", \"M\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"toString":"txt = txt.replaceAll(\"dg\", \"2g\")","position":"org.apache.commons.codec.language.Caverphone1:78","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"dg\", \"2g\")"},"status":0},{"failures":[],"tindex":"fb7309b7-21e0-11e6-a228-17d9ee26a993","series":0,"name":"replace","transplant":{"toString":"if (!ignoreCase) {\n    return false;\n} ","position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"found"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.found","position":"org.apache.commons.codec.language.bm.PhoneticEngine:231","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.boolean"},"status":-2},{"failures":[36,40,43,47,48],"tindex":"fb7309b8-21e0-11e6-a228-dd5d6a865477","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"index++","position":"org.apache.commons.codec.language.DoubleMetaphone:541","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-1},{"failures":[],"tindex":"fb7309b9-21e0-11e6-a228-d7cbb58c9cae","series":0,"name":"replace","transplant":{"toString":"final java.lang.String[] branches = soundex(source, true)","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:463","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String[] java.lang.String[] = soundex(source, true)"},"variableMap":{"source":"line"},"type":"adrStmt","transplantationPoint":{"toString":"final java.lang.String[] parts = line.split(\"\\\\s+\")","position":"org.apache.commons.codec.language.bm.Lang:166","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String[] java.lang.String[] = line.split(\"\\\\s+\")"},"status":-2},{"failures":[],"tindex":"fb7309ba-21e0-11e6-a228-a9ce9129848b","series":0,"name":"replace","transplant":{"toString":"final int nextIndex = getPatternLength()","position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:185","type":"CtLocalVariableImpl","sourcecode":"final int int = getPatternLength()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"int left = 0","position":"org.apache.commons.codec.digest.UnixCrypt:282","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"fb7309bb-21e0-11e6-a228-2d58374c0fef","series":0,"name":"add","transplant":{"toString":"code.setLength(org.apache.commons.codec.language.Metaphone.this.getMaxCodeLen())","position":"org.apache.commons.codec.language.Metaphone:332","type":"CtInvocationImpl","sourcecode":"code.setLength(org.apache.commons.codec.language.Metaphone.this.getMaxCodeLen())"},"variableMap":{"code":"result"},"type":"adrStmt","transplantationPoint":{"toString":"for (final java.lang.String word : words2) {\n    result.append(\"-\").append(encode(word));\n}","position":"org.apache.commons.codec.language.bm.PhoneticEngine:459","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : words2) {\n    result.append(\"-\").append(encode(word));\n}"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":41,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}