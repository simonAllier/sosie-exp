{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":155,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":191,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched":115,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":107,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":164,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":106,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":165,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":127,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan":214,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched":110,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":95,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":76,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis":212,"org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation":188,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":15,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":61,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":118,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":173,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":108,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":87,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":174,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":1,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":35,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":36,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched":114,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":39,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":102,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":0,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":37,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":38,"org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent":99,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":101,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":185,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":3,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":52,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":146,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":26,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":136,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":59,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":85,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant":181,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":86,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":5,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail":198,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":94,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":75,"org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds":123,"org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac":205,"org.apache.commons.codec.language.SoundexTest.testB650":163,"org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals":148,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":56,"org.apache.commons.codec.language.SoundexTest.testNewInstance":169,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":11,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":27,"org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid":195,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":150,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":97,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Length":66,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":47,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":51,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":58,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected":112,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail":206,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched":120,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":135,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":88,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":68,"org.apache.commons.codec.binary.Base64Test.testUUID":32,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":140,"org.apache.commons.codec.binary.Base64Test.testSingletons":45,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":133,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":17,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":60,"org.apache.commons.codec.binary.Base64Test.testPairs":31,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":16,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":152,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":134,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":187,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":170,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched":113,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":29,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":2,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":154,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":43,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":143,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":44,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":64,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":186,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant":175,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":93,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":12,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":159,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant":178,"org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey":200,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":128,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean":179,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":74,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":21,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray":197,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":34,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":73,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":183,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":207,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":24,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched":116,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch":119,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail":202,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":104,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":92,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":203,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch":121,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":77,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":199,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":208,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":217,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY":194,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":218,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":25,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":22,"org.apache.commons.codec.binary.Base64Test.testTriplets":55,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":89,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":105,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":131,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":129,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":132,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":182,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":19,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail":204,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":40,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved":177,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":63,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":149,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples":70,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":30,"org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac":201,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":91,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved":176,"org.apache.commons.codec.digest.HmacUtilsTest.testEmptyKey":210,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":171,"org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX":189,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":172,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":196,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":137,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":96,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":139,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":4,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":69,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":42,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":23,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":153,"org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds":124,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":219,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":130,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable":166,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":144,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":78,"org.apache.commons.codec.net.URLCodecTest.testDecodeObjects":103,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":13,"org.apache.commons.codec.language.SoundexTest.testBadCharacters":158,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":10,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":192,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched":111,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched":109,"org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA":193,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":82,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":145,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":90,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":54,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched":117,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":100,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":141,"org.apache.commons.codec.digest.HmacUtilsTest.testNullKey":209,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength":65,"org.apache.commons.codec.language.MetaphoneTest.testTCH":81,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":72,"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":151,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer1":160,"org.apache.commons.codec.language.MetaphoneTest.testPHTOF":184,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":161,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":162,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":62,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":126,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan":213,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":57,"org.apache.commons.codec.binary.Base64Test.testBase64":46,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":216,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":156,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved":180,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":14,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":41,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":147,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":67,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":8,"org.apache.commons.codec.language.MetaphoneTest.testExceedLength":190,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched":122,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":125,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":50,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":6,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":53,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":28,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":84,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":142,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":167,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":80,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":20,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":83,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":9,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail":138,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":48,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":79,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":18,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":71,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":211,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":7,"org.apache.commons.codec.language.SoundexTest.testDifference":168,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":98,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":49,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":215,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":157,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":33},"transformations":[{"failures":[],"tindex":"d8e01cd7-3d9b-11e6-8489-7127d3bfd59f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:417","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"\\\\s{2,}\\\\b\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"name":"txt","org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:95","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"y\", \"3\")"},"status":-2},{"failures":[],"tindex":"d8e043e8-3d9b-11e6-8489-656734aaabb1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:199","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"bytes","ascii":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:154","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"d8e043e9-3d9b-11e6-8489-bd79bde2757e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:361","type":"CtAssignmentImpl","sourcecode":"code = '4'"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:387","type":"CtAssignmentImpl","sourcecode":"code = '5'"},"status":-1},{"failures":[],"tindex":"d8e043ea-3d9b-11e6-8489-33d28ae84a5a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:231","type":"CtLocalVariableImpl","sourcecode":"int int = 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:325","type":"CtLocalVariableImpl","sourcecode":"int int = c"},"status":-2},{"failures":[],"tindex":"d8e06afb-3d9b-11e6-8489-35198b008307","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:749","type":"CtLocalVariableImpl","sourcecode":"int int = bigInt.bitLength()"},"status":-2},{"failures":[],"tindex":"d8e06afc-3d9b-11e6-8489-9953200ab60a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:227","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[9]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:113","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[avail]"},"status":-2},{"failures":[],"tindex":"d8e06afd-3d9b-11e6-8489-b10e5c55d167","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.NameType:42","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = name"},"variableMap":{"name":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:412","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"E\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"status":-2},{"failures":[],"tindex":"d8e06afe-3d9b-11e6-8489-7f4492145353","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:224","type":"CtOperatorAssignmentImpl","sourcecode":"ii -= 16"},"variableMap":{"ii":"org.apache.commons.codec.binary.Base32.BYTES_PER_UNENCODED_BLOCK"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:502","type":"CtAssignmentImpl","sourcecode":"context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int)"},"status":-2},{"failures":[6,7,8,9,10,11],"tindex":"d8e06aff-3d9b-11e6-8489-35c717dd42bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:285","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.md5(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"variableMap":{"data":"base64String"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:692","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.binary.Base64().decode(base64String)"},"status":-1},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,6,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,7,46,47,8,9,10,11,48,49,50],"tindex":"d8e06b00-3d9b-11e6-8489-f5a69e6910d4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:445","type":"CtIfImpl","sourcecode":"if (result >= 0) {\n    context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int);\n    context.int = ((context.int) << (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int)) + result;\n    if ((context.int) == 0) {\n        buffer[((context.int)++)] = ((byte)(((context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n    } \n} "},"status":-1},{"failures":[13,14,51,52,53,54,22,25,29,55,56,32,33,34,35,36,37,38,57,39,40,41,58,59,7,60,46,61,62,47,63,10,48,49,64],"tindex":"d8e09211-3d9b-11e6-8489-c53ee3e5e935","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:390","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][((context.int) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))]"},"status":-1},{"failures":[],"tindex":"d8e09212-3d9b-11e6-8489-77183366c04d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:285","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[2], finalb[8], finalb[14], 4, passwd)"},"variableMap":{"finalb":"b","passwd":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:237","type":"CtForImpl","sourcecode":"for ( ; j < 6 ; j++) {\n    c <<= 1;\n    if (((b[y]) & u) != 0) {\n        c |= 1;\n    } \n    u >>>= 1;\n    if (u == 0) {\n        y++;\n        u = 128;\n    } \n    buffer.setCharAt(i, ((char)(org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][c])));\n}"},"status":-2},{"failures":[65,66,67],"tindex":"d8e09213-3d9b-11e6-8489-2131ad92d579","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:554","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, false)"},"variableMap":{"binaryData":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:260","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getMd5Digest().digest(data)"},"status":-1},{"failures":[68,69,70,71],"tindex":"d8e09214-3d9b-11e6-8489-7f9b7b436c15","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:105","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"n+\", \"N\")"},"status":-1},{"failures":[72,73,74,75,76,77,78,79],"tindex":"d8e09215-3d9b-11e6-8489-3559a753d2ed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:181","type":"CtInvocationImpl","sourcecode":"ctx.update(saltBytes)"},"status":-1},{"failures":[],"tindex":"d8e09216-3d9b-11e6-8489-e5f7d13b114f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:129","type":"CtIfImpl","sourcecode":"if ((!(text.startsWith(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String))) || (!(text.endsWith(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.java.lang.String)))) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\");\n} "},"variableMap":{"org.apache.commons.codec.net.RFC1522Codec.POSTFIX":"value","org.apache.commons.codec.net.RFC1522Codec.PREFIX":"value","text":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:551","type":"CtIfImpl","sourcecode":"if ((charAt(value, (index + 1))) == 'L') {\n    if (conditionL0(value, index)) {\n        result.appendPrimary('L');\n    } else {\n        result.append('L');\n    }\n    index += 2;\n} else {\n    index++;\n    result.append('L');\n}"},"status":-2},{"failures":[80,81],"tindex":"d8e09217-3d9b-11e6-8489-cfdbf75852ba","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:462","type":"CtInvocationImpl","sourcecode":"sb.append(\"Rule\")"},"variableMap":{"sb":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:199","type":"CtInvocationImpl","sourcecode":"code.append('X')"},"status":-1},{"failures":[82,83,84,85,86],"tindex":"d8e0b928-3d9b-11e6-8489-b34c3f132996","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:344","type":"CtAssignmentImpl","sourcecode":"nextChar = '-'"},"variableMap":{"nextChar":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:192","type":"CtAssignmentImpl","sourcecode":"current = getMappingCode(str.charAt(i))"},"status":-1},{"failures":[0,87,2,3,5],"tindex":"d8e0b929-3d9b-11e6-8489-09e0dd4b3bc8","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:357","type":"CtAssignmentImpl","sourcecode":"code = '2'"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:385","type":"CtAssignmentImpl","sourcecode":"code = '7'"},"status":-1},{"failures":[88,89,90,91,92,93,94,95,96,97],"tindex":"d8e0b92a-3d9b-11e6-8489-ed38bc2dacf5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:498","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(tempResult, ((byte)(0)))"},"variableMap":{"tempResult":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:378","type":"CtSwitchImpl","sourcecode":"switch (context.int) {\n    case 2 :\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 2) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    case 3 :\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 7) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    case 4 :\n        context.long = (context.long) >> 4;\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    case 5 :\n        context.long = (context.long) >> 1;\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    case 6 :\n        context.long = (context.long) >> 6;\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    case 7 :\n        context.long = (context.long) >> 3;\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 24) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Impossible modulus \" + (context.int)));\n}"},"status":-1},{"failures":[],"tindex":"d8e0b92b-3d9b-11e6-8489-cfa3606f928e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Hex:142","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[l << 1]"},"variableMap":{"l":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:46","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[len]"},"status":-2},{"failures":[98,99,100,101,102,103],"tindex":"d8e0b92c-3d9b-11e6-8489-b7f2a391c4e1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:179","type":"CtInvocationImpl","sourcecode":"buffer.write(b)"},"status":-1},{"failures":[104,105],"tindex":"d8e0b92d-3d9b-11e6-8489-438796e4d5e8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:363","type":"CtAssignmentImpl","sourcecode":"d = (d >>> 2) | (d << 26)"},"status":-1},{"failures":[106,107,108],"tindex":"d8e0e03e-3d9b-11e6-8489-1d8885fbb81e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.RefinedSoundex:188","type":"CtAssignmentImpl","sourcecode":"last = '*'"},"variableMap":{"last":"last"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:271","type":"CtAssignmentImpl","sourcecode":"last = getMappingCode(str, 0)"},"status":-1},{"failures":[109,110,111,112,113,114,115,116,117,118,119,120,121,122],"tindex":"d8e0e03f-3d9b-11e6-8489-d9960263980d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:226","type":"CtAssignmentImpl","sourcecode":"name2 = cleanName(name2)"},"status":-1},{"failures":[],"tindex":"d8e0e040-3d9b-11e6-8489-09e63f6d7d51","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:518","type":"CtIfImpl","sourcecode":"if (((int) > 0) && ((int) <= (context.int))) {\n    java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int);\n    context.int += byte[].int;\n    context.int = 0;\n} "},"variableMap":{"currentLinePos":"org.apache.commons.codec.binary.BaseNCodec.EOF","pos":"org.apache.commons.codec.binary.BaseNCodec.EOF","context":"context","length":"org.apache.commons.codec.binary.BaseNCodec.EOF","buffer":"pArray","lineSeparator":"pArray","lineLength":"org.apache.commons.codec.binary.BaseNCodec.EOF"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:411","type":"CtInvocationImpl","sourcecode":"decode(pArray, 0, org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int, context)"},"status":-2},{"failures":[123,124],"tindex":"d8e0e041-3d9b-11e6-8489-535399258acb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:182","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"The finalRules argument must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:90","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException()"},"status":-1},{"failures":[104,105],"tindex":"d8e0e042-3d9b-11e6-8489-8b47e53c4bbf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:299","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(right, left, 1, 1431655765, results)"},"variableMap":{"left":"eSwap0","right":"left","results":"schedule"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:285","type":"CtForImpl","sourcecode":"for (int int = 0 ; j < 25 ; j++) {\n    for (int int = 0 ; i < 32 ; i += 4) {\n        left = org.apache.commons.codec.digest.UnixCrypt.dEncrypt(left, right, i, eSwap0, eSwap1, schedule);\n        right = org.apache.commons.codec.digest.UnixCrypt.dEncrypt(right, left, (i + 2), eSwap0, eSwap1, schedule);\n    }\n    t = left;\n    left = right;\n    right = t;\n}"},"status":-1},{"failures":[77,78,79],"tindex":"d8e0e043-3d9b-11e6-8489-93d90e736978","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:483","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[56], altResult[14], altResult[35], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:469","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[0], altResult[21], altResult[42], 4, buffer)"},"status":-1},{"failures":[],"tindex":"d8e0e044-3d9b-11e6-8489-bb314c39d33e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:116","type":"CtIfImpl","sourcecode":"if (other == (org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet)) {\n    return other;\n} else if (other == (org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet)) {\n    return org.apache.commons.codec.language.bm.Languages.SomeLanguages.this;\n} else {\n    final org.apache.commons.codec.language.bm.Languages.SomeLanguages org.apache.commons.codec.language.bm.Languages.SomeLanguages = ((org.apache.commons.codec.language.bm.Languages.SomeLanguages)(other));\n    final java.util.Set<java.lang.String> java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>(java.lang.Math.min(java.util.Set<java.lang.String>.size(), sl.java.util.Set<java.lang.String>.size()));\n    for (java.lang.String java.lang.String : java.util.Set<java.lang.String>) {\n        if (sl.java.util.Set<java.lang.String>.contains(lang)) {\n            ls.add(lang);\n        } \n    }\n    return org.apache.commons.codec.language.bm.Languages.LanguageSet.from(ls);\n}"},"variableMap":{"other":"org.apache.commons.codec.language.bm.Languages.NO_LANGUAGES","languages":"langs","this":"org.apache.commons.codec.language.bm.Languages.NO_LANGUAGES","org.apache.commons.codec.language.bm.Languages.ANY_LANGUAGE":"org.apache.commons.codec.language.bm.Languages.NO_LANGUAGES","org.apache.commons.codec.language.bm.Languages.NO_LANGUAGES":"org.apache.commons.codec.language.bm.Languages.NO_LANGUAGES"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:64","type":"CtReturnImpl","sourcecode":"return langs.isEmpty() ? org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet : new org.apache.commons.codec.language.bm.Languages.SomeLanguages(langs)"},"status":-2},{"failures":[125,126,127,128,129,130,131,132],"tindex":"d8e10755-3d9b-11e6-8489-a590fa522999","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:303","type":"CtInvocationImpl","sourcecode":"allRules.addAll(rules)"},"variableMap":{"rules":"rules","allRules":"rules"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:478","type":"CtInvocationImpl","sourcecode":"rules.add(r)"},"status":-1},{"failures":[133,134,135],"tindex":"d8e10756-3d9b-11e6-8489-a5909920fde9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:72","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('\\'')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:90","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(i)"},"status":-1},{"failures":[],"tindex":"d8e10757-3d9b-11e6-8489-8930728278f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:184","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    saltString = org.apache.commons.codec.digest.B64.getRandomSalt(8);\n} else {\n    final java.util.regex.Pattern java.util.regex.Pattern = java.util.regex.Pattern.compile(((\"^\" + (prefix.replace(\"$\", \"\\\\$\"))) + \"([\\\\.\\\\/a-zA-Z0-9]{1,8}).*\"));\n    final java.util.regex.Matcher java.util.regex.Matcher = p.matcher(salt);\n    if ((m == null) || (!(m.find()))) {\n        throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n    } \n    saltString = m.group(1);\n}"},"variableMap":{"saltString":"value","salt":"value","prefix":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:552","type":"CtIfImpl","sourcecode":"if (conditionL0(value, index)) {\n    result.appendPrimary('L');\n} else {\n    result.append('L');\n}"},"status":-2},{"failures":[],"tindex":"d8e10758-3d9b-11e6-8489-c11d51cd3674","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:481","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[12], altResult[33], altResult[54], 4, buffer)"},"variableMap":{"altResult":"finalb","buffer":"passwd"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:287","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[4], finalb[10], finalb[5], 4, passwd)"},"status":-2},{"failures":[],"tindex":"d8e10759-3d9b-11e6-8489-577c76c81cbe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:128","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"argument not a byte array\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:205","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt))"},"status":-2},{"failures":[],"tindex":"d8e1075a-3d9b-11e6-8489-f7ea72a7d1a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:297","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(saltBytes, ((byte)(0)))"},"variableMap":{"saltBytes":"finalb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:298","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(finalb, ((byte)(0)))"},"status":-2},{"failures":[136,137,138],"tindex":"d8e1075b-3d9b-11e6-8489-996f46145f15","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:547","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getSha384Digest().digest(data)"},"variableMap":{"data":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:206","type":"CtTryImpl","sourcecode":"try {\n    return org.apache.commons.codec.digest.HmacUtils.getHmacMd5(key).doFinal(valueToDigest);\n} catch (final java.lang.IllegalStateException e) {\n    throw new java.lang.IllegalArgumentException(e);\n}"},"status":-1},{"failures":[139,140,141,142,143,144,145],"tindex":"d8e1075c-3d9b-11e6-8489-fb999d615c62","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:241","type":"CtInvocationImpl","sourcecode":"ctx.update(keyBytes[j])"},"status":-1},{"failures":[],"tindex":"d8e1075d-3d9b-11e6-8489-0759bafed2f1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:71","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('&')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:106","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet.set(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":0},{"failures":[],"tindex":"d8e1075e-3d9b-11e6-8489-33673317173a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:292","type":"CtAssignmentImpl","sourcecode":"this.int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int"},"status":-2},{"failures":[],"tindex":"d8e12e6f-3d9b-11e6-8489-d7ad1e872f34","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:106","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"r3\", \"R3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:84","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"tia\", \"sia\")"},"status":0},{"failures":[146,147,71],"tindex":"d8e12e70-3d9b-11e6-8489-6fc8c5a0767e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:98","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"n+\", \"N\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:116","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"l$\", \"3\")"},"status":-1},{"failures":[],"tindex":"d8e12e71-3d9b-11e6-8489-33e0cb13c1a5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:140","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:205","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt))"},"status":-2},{"failures":[],"tindex":"d8e12e72-3d9b-11e6-8489-855266f32a43","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (i > name2Size) {\n    break;\n} "},"variableMap":{"i":"count","name2Size":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:274","type":"CtIfImpl","sourcecode":"if (mapped != 0) {\n    if ((mapped != '0') && (mapped != last)) {\n        out[(count++)] = mapped;\n    } \n    last = mapped;\n} "},"status":0},{"failures":[],"tindex":"d8e12e73-3d9b-11e6-8489-690d1ea11368","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:203","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b = 256 + b;\n} "},"variableMap":{"b":"terminator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"status":-2},{"failures":[],"tindex":"d8e12e74-3d9b-11e6-8489-1581c8c328ec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:500","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(sBytes, ((byte)(0)))"},"variableMap":{"sBytes":"saltBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:504","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(saltBytes, ((byte)(0)))"},"status":-2},{"failures":[],"tindex":"d8e12e75-3d9b-11e6-8489-41f4294b9429","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (b == ' ') {\n    b = '+';\n} "},"variableMap":{"b":"l"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:367","type":"CtInvocationImpl","sourcecode":"buffer.write(((char)((u << 4) + l)))"},"status":-2},{"failures":[148,149,150,151],"tindex":"d8e12e76-3d9b-11e6-8489-519f69e7441b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:118","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"3\", \"\")"},"status":-1},{"failures":[152,153],"tindex":"d8e12e77-3d9b-11e6-8489-c3618dbd41a3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:299","type":"CtAssignmentImpl","sourcecode":"pos = 1"},"status":-1},{"failures":[104,105],"tindex":"d8e12e78-3d9b-11e6-8489-cdcedd07b2d6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:326","type":"CtLocalVariableImpl","sourcecode":"int int = r ^ (r >>> 16)"},"variableMap":{"r":"e0"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:327","type":"CtLocalVariableImpl","sourcecode":"int int = v & e0"},"status":-1},{"failures":[],"tindex":"d8e12e79-3d9b-11e6-8489-2975039d8438","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:284","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[1], finalb[7], finalb[13], 4, passwd)"},"variableMap":{"finalb":"altResult","passwd":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:471","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[44], altResult[2], altResult[23], 4, buffer)"},"status":-2},{"failures":[],"tindex":"d8e12e7a-3d9b-11e6-8489-1dd7259b185d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:286","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(lineSeparator, 0, org.apache.commons.codec.binary.Base64.this.byte[], 0, lineSeparator.int)"},"variableMap":{"length":"modulus","lineSeparator":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:378","type":"CtSwitchImpl","sourcecode":"switch (context.int) {\n    case 2 :\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 2) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    case 3 :\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 7) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    case 4 :\n        context.long = (context.long) >> 4;\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    case 5 :\n        context.long = (context.long) >> 1;\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    case 6 :\n        context.long = (context.long) >> 6;\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    case 7 :\n        context.long = (context.long) >> 3;\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 24) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Impossible modulus \" + (context.int)));\n}"},"status":-2},{"failures":[154],"tindex":"d8e12e7b-3d9b-11e6-8489-e72afae3b040","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:104","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.decodeBase64(bytes)"},"variableMap":{"bytes":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:552","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.updateHmac(org.apache.commons.codec.digest.HmacUtils.getHmacSha384(key), valueToDigest).doFinal()"},"status":-1},{"failures":[],"tindex":"d8e1558c-3d9b-11e6-8489-a39a12024df1","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:126","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.fromAscii(((java.lang.String)(ascii)).toCharArray())"},"variableMap":{"ascii":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:392","type":"CtReturnImpl","sourcecode":"return metaphone(((java.lang.String)(obj)))"},"status":-2},{"failures":[],"tindex":"d8e1558d-3d9b-11e6-8489-29d7fcb6c3ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:358","type":"CtAssignmentImpl","sourcecode":"context.long = ((context.long) << (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int)) + result"},"variableMap":{"result":"b","org.apache.commons.codec.binary.Base32.BITS_PER_ENCODED_BYTE":"b","context":"context","lbitWorkArea":"lbitWorkArea"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:507","type":"CtAssignmentImpl","sourcecode":"context.long = ((context.long) << 8) + b"},"status":-2},{"failures":[155,156],"tindex":"d8e1558e-3d9b-11e6-8489-15b39b4a5668","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:553","type":"CtInvocationImpl","sourcecode":"result.appendPrimary('L')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:560","type":"CtInvocationImpl","sourcecode":"result.append('L')"},"status":-1},{"failures":[134],"tindex":"d8e1558f-3d9b-11e6-8489-ab8760fa3588","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:356","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.net.QCodec.this.boolean = b"},"variableMap":{"b":"hasUnderscores","encodeBlanks":"hasUnderscores"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:176","type":"CtAssignmentImpl","sourcecode":"hasUnderscores = true"},"status":-1},{"failures":[157,156],"tindex":"d8e15590-3d9b-11e6-8489-9dfeb0f96773","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:424","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[158,159,160,161,162,163,164,106,107,165,166,167,168,169,170,171,172,173,174,108],"tindex":"d8e15591-3d9b-11e6-8489-8d6939f2bd6d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:274","type":"CtIfImpl","sourcecode":"if (mapped != 0) {\n    if ((mapped != '0') && (mapped != last)) {\n        out[(count++)] = mapped;\n    } \n    last = mapped;\n} "},"status":-1},{"failures":[175,176,177,178,179,120,121,122,180,181],"tindex":"d8e15592-3d9b-11e6-8489-4fb6727fb809","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:425","type":"CtInvocationImpl","sourcecode":"buffer.append(org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String)"},"variableMap":{"org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_PREFIX":"org.apache.commons.codec.language.MatchRatingApproachEncoder.PLAIN_ASCII","buffer":"sb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:363","type":"CtInvocationImpl","sourcecode":"sb.append(org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.charAt(pos))"},"status":-1},{"failures":[],"tindex":"d8e15593-3d9b-11e6-8489-771efe5d804a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:325","type":"CtLocalVariableImpl","sourcecode":"int int = c"},"status":-2},{"failures":[182],"tindex":"d8e15594-3d9b-11e6-8489-f5bb4c9a5220","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:81","type":"CtForImpl","sourcecode":"for (int int = '0' ; i <= '9' ; i++) {\n    org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(i);\n}"},"status":-1},{"failures":[80,183,81,184,185,186,187,188,189,190,191,192,193,194],"tindex":"d8e15595-3d9b-11e6-8489-8f42f8a49403","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:142","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit(((b >> 4) & 15), org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.int))"},"variableMap":{"b":"n","org.apache.commons.codec.net.URLCodec.RADIX":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:150","type":"CtLocalVariableImpl","sourcecode":"final char char = local.charAt(n)"},"status":-1},{"failures":[157,156],"tindex":"d8e15596-3d9b-11e6-8489-1726f435aae6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:690","type":"CtInvocationImpl","sourcecode":"result.append('0', 'T')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:611","type":"CtInvocationImpl","sourcecode":"result.append('X')"},"status":-1},{"failures":[],"tindex":"d8e15597-3d9b-11e6-8489-65b333d88fba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:148","type":"CtReturnImpl","sourcecode":"return out"},"variableMap":{"out":"org.apache.commons.codec.language.Nysiis.CHARS_S"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:133","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[]"},"status":-2},{"failures":[],"tindex":"d8e17ca8-3d9b-11e6-8489-d5938b2ac88c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:419","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = input.substring(((l.length()) + 1))"},"variableMap":{"input":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY","l":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:301","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String"},"status":-2},{"failures":[157,156],"tindex":"d8e17ca9-3d9b-11e6-8489-fd286c75794e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:393","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[],"tindex":"d8e17caa-3d9b-11e6-8489-8b2f64d288ea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:147","type":"CtAssignmentImpl","sourcecode":"java.lang.String = replacement"},"variableMap":{"lastReplacement":"name1","replacement":"name1LtRStart"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:312","type":"CtAssignmentImpl","sourcecode":"name1LtRStart = name1.substring(i, (i + 1))"},"status":-2},{"failures":[195],"tindex":"d8e17cab-3d9b-11e6-8489-6388b2922d0d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:148","type":"CtIfImpl","sourcecode":"if (!(getEncoding().equalsIgnoreCase(encoding))) {\n    throw new org.apache.commons.codec.DecoderException(((\"This codec cannot decode \" + encoding) + \" encoded content\"));\n} "},"status":-1},{"failures":[],"tindex":"d8e17cac-3d9b-11e6-8489-ab1d1c99199c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:75","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('*')"},"status":0},{"failures":[],"tindex":"d8e17cad-3d9b-11e6-8489-6d8a01291711","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:125","type":"CtAssignmentImpl","sourcecode":"txt = txt + (org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String)"},"variableMap":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"line","txt":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:423","type":"CtAssignmentImpl","sourcecode":"line = line.substring(0, cmtI)"},"status":-2},{"failures":[136,196,197,198,199,200,201,202,203,204,154,137,138,205,206,207,208,209,210,211],"tindex":"d8e17cae-3d9b-11e6-8489-591c2193862c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:63","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(org.apache.commons.codec.digest.HmacAlgorithms.org.apache.commons.codec.digest.HmacAlgorithms.org.apache.commons.codec.digest.HmacAlgorithms, key)"},"variableMap":{"org.apache.commons.codec.digest.HmacAlgorithms.HMAC_MD5":"algorithm","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:155","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(algorithm.toString(), key)"},"status":-1},{"failures":[],"tindex":"d8e17caf-3d9b-11e6-8489-7db2c40bcb3c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:504","type":"CtIfImpl","sourcecode":"if (b < 0) {\n    b += 256;\n} "},"variableMap":{"b":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:357","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (bytes.int) ; i++) {\n    final int int = bytes[i];\n    if (b == (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)) {\n        try {\n            if ((bytes[(++i)]) == (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)) {\n                continue;\n            } \n            final int int = org.apache.commons.codec.net.Utils.digit16(bytes[i]);\n            final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)]);\n            buffer.write(((char)((u << 4) + l)));\n        } catch (final java.lang.ArrayIndexOutOfBoundsException e) {\n            throw new org.apache.commons.codec.DecoderException(\"Invalid quoted-printable encoding\" , e);\n        }\n    } else if ((b != (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)) && (b != (org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte))) {\n        buffer.write(b);\n    } \n}"},"status":-2},{"failures":[136,196,199,203,154,137,208,211],"tindex":"d8e17cb0-3d9b-11e6-8489-77a430d162ec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:770","type":"CtInvocationImpl","sourcecode":"mac.update(buffer, 0, read)"},"status":-1},{"failures":[129,130,131,132],"tindex":"d8e17cb1-3d9b-11e6-8489-a7015ba97649","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:71","type":"CtIfImpl","sourcecode":"if (cs1 == cs2) {\n    return true;\n} "},"variableMap":{"cs1":"prefix","cs2":"prefix"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:604","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (prefix.length()) ; i++) {\n    if ((input.charAt(i)) != (prefix.charAt(i))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[73,76],"tindex":"d8e17cb2-3d9b-11e6-8489-41f7ae4dab4d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:462","type":"CtInvocationImpl","sourcecode":"sb.append(\"Rule\")"},"variableMap":{"sb":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:426","type":"CtInvocationImpl","sourcecode":"buffer.append(rounds)"},"status":-1},{"failures":[],"tindex":"d8e17cb3-3d9b-11e6-8489-4da7e55b7f5e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:250","type":"CtTryImpl","sourcecode":"try {\n    final char[] char[] = object instanceof java.lang.String ? ((java.lang.String)(object)).toCharArray() : ((char[])(object));\n    return org.apache.commons.codec.binary.Hex.decodeHex(charArray);\n} catch (final java.lang.ClassCastException e) {\n    throw new org.apache.commons.codec.DecoderException(e.getMessage() , e);\n}"},"variableMap":{"e":"obj","object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:533","type":"CtReturnImpl","sourcecode":"return decode(((java.lang.String)(obj)))"},"status":-2},{"failures":[80,185,212,213,214,186,194],"tindex":"d8e1a3c4-3d9b-11e6-8489-535da8cf13a5","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:252","type":"CtInvocationImpl","sourcecode":"code.append('H')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:289","type":"CtInvocationImpl","sourcecode":"code.append('S')"},"status":-1},{"failures":[],"tindex":"d8e1a3c5-3d9b-11e6-8489-2f652c0f814f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:324","type":"CtForEachImpl","sourcecode":"for (final byte byte : bytes) {\n    int int = c;\n    if (b < 0) {\n        b = 256 + b;\n    } \n    if (printable.get(b)) {\n        buffer.write(b);\n    } else {\n        org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer);\n    }\n}"},"variableMap":{"bytes":"object","buffer":"object","printable":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:406","type":"CtIfImpl","sourcecode":"if (!(object instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(((((\"This method's parameter was expected to be of the type \" + (java.lang.String.java.lang.String.java.lang.Class.getName())) + \". But actually it was of the type \") + (object.getClass().getName())) + \".\"));\n} "},"status":-2},{"failures":[],"tindex":"d8e1a3c6-3d9b-11e6-8489-69b87711c16c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:127","type":"CtIfImpl","sourcecode":"if ((((name == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name))) || ((name.length()) == 1)) {\n    return org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String;\n} "},"variableMap":{"name":"valueToDigest","org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"key","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:510","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha256(key, valueToDigest))"},"status":-2},{"failures":[125,215,126,128,216,217],"tindex":"d8e1a3c7-3d9b-11e6-8489-93c1cb248102","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:276","type":"CtIfImpl","sourcecode":"if ((suffix.length()) > (input.length())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"d8e1a3c8-3d9b-11e6-8489-ddb55de0df05","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:162","type":"CtIfImpl","sourcecode":"if (nameLength > (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    final java.lang.String java.lang.String = name.substring(0, org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int);\n    final java.lang.String java.lang.String = name.substring((nameLength - (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)), nameLength);\n    return firstThree + lastThree;\n} else {\n    return name;\n}"},"status":-2},{"failures":[],"tindex":"d8e1a3c9-3d9b-11e6-8489-61457a5d46aa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:291","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be encoded using Q codec\"))"},"status":-2},{"failures":[],"tindex":"d8e1a3ca-3d9b-11e6-8489-5be7ca13c3f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:147","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = text.substring(from, to)"},"status":-2},{"failures":[],"tindex":"d8e1a3cb-3d9b-11e6-8489-73af55362a72","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:371","type":"CtReturnImpl","sourcecode":"return (n + 1) == wdsz"},"status":-2},{"failures":[],"tindex":"d8e1a3cc-3d9b-11e6-8489-4bcfdd9d5593","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:402","type":"CtAssignmentImpl","sourcecode":"b[(offset++)] = ((byte)((iValue >>> 24) & 255))"},"variableMap":{"b":"buffer","offset":"ibitWorkArea","iValue":"org.apache.commons.codec.binary.Base64.MASK_6BITS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:389","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((context.int) >> 6) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))]"},"status":-2},{"failures":[218,219,155,157,156],"tindex":"d8e1a3cd-3d9b-11e6-8489-998f95abd6ed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:371","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = ph.substring(0, open)"},"variableMap":{"ph":"value","open":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:919","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = value.substring(start, (start + length))"},"status":-1},{"failures":[],"tindex":"d8e1a3ce-3d9b-11e6-8489-7fc7724c1230","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:76","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"x\", \"k\")"},"variableMap":{"txt":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:333","type":"CtAssignmentImpl","sourcecode":"str = str.substring(1)"},"status":-2},{"failures":[0,3,5],"tindex":"d8e1a3cf-3d9b-11e6-8489-d9b161ea23b8","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:283","type":"CtAssignmentImpl","sourcecode":"l_ascii[(jj - bits)] = '1'"},"variableMap":{"jj":"index","l_ascii":"chrs","bits":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:437","type":"CtAssignmentImpl","sourcecode":"chrs[index] = element[1]"},"status":-1},{"failures":[219],"tindex":"d8e1a3d0-3d9b-11e6-8489-abd3293ee514","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:522","type":"CtInvocationImpl","sourcecode":"result.append('J', 'H')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:619","type":"CtInvocationImpl","sourcecode":"result.append('S', 'X')"},"status":-1},{"failures":[],"tindex":"d8e1a3d1-3d9b-11e6-8489-9b066cf878dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:102","type":"CtIfImpl","sourcecode":"if (salt == null) {\n    salt = (org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8));\n} "},"variableMap":{"salt":"lang","org.apache.commons.codec.digest.Sha2Crypt.SHA256_PREFIX":"lang"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:357","type":"CtIfImpl","sourcecode":"if (rules == null) {\n    throw new java.lang.IllegalArgumentException(java.lang.String.format(\"No rules found for %s, %s, %s.\", nameType.getName(), rt.getName(), lang));\n} "},"status":-2},{"failures":[125,126,127,128,129,130,131,132],"tindex":"d8e1cae2-3d9b-11e6-8489-b3f2aa0a9ffd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:390","type":"CtInvocationImpl","sourcecode":"phs.add(org.apache.commons.codec.language.bm.Rule.parsePhoneme(part))"},"status":-1},{"failures":[149,150],"tindex":"d8e1cae3-3d9b-11e6-8489-bdd8eb7542f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:101","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"wh3\", \"Wh3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:52","type":"CtAssignmentImpl","sourcecode":"txt = txt.toLowerCase(java.util.Locale.java.util.Locale.java.util.Locale)"},"status":-1},{"failures":[],"tindex":"d8e1cae4-3d9b-11e6-8489-391547dd35b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:88","type":"CtAssignmentImpl","sourcecode":"upperName = upperName.replaceAll(str, org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"str":"txt","upperName":"txt","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:114","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"y\", \"2\")"},"status":-2},{"failures":[],"tindex":"d8e1cae5-3d9b-11e6-8489-c328c3c6e428","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:208","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.StringEncoderComparator:77","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[157,156],"tindex":"d8e1cae6-3d9b-11e6-8489-4599e0c15095","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:392","type":"CtInvocationImpl","sourcecode":"result.append(\"TK\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:388","type":"CtInvocationImpl","sourcecode":"result.append('J')"},"status":-1},{"failures":[],"tindex":"d8e1cae7-3d9b-11e6-8489-39f92f52dc82","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:297","type":"CtWhileImpl","sourcecode":"while (cp < (keyLen - blocksize)) {\n    java.lang.System.arraycopy(tempResult, 0, pBytes, cp, blocksize);\n    cp += blocksize;\n}"},"variableMap":{"blocksize":"keyLen","tempResult":"keyBytes","pBytes":"keyBytes","keyLen":"keyLen","cp":"keyLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:275","type":"CtForImpl","sourcecode":"for (int int = 1 ; i <= keyLen ; i++) {\n    altCtx.update(keyBytes);\n}"},"status":-2},{"failures":[],"tindex":"d8e1cae8-3d9b-11e6-8489-5940fce1f002","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:257","type":"CtAssignmentImpl","sourcecode":"ctx1 = org.apache.commons.codec.digest.DigestUtils.getMd5Digest()"},"status":0},{"failures":[],"tindex":"d8e1cae9-3d9b-11e6-8489-0db83c4d7474","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:765","type":"CtInvocationImpl","sourcecode":"mac.reset()"},"status":0},{"failures":[],"tindex":"d8e1caea-3d9b-11e6-8489-6d40400a009d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:370","type":"CtLocalVariableImpl","sourcecode":"int int = (((org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][0][(c & 63)]) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][1][(((c >>> 6) & 3) | ((c >>> 7) & 60))])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][2][(((c >>> 13) & 15) | ((c >>> 14) & 48))])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][3][((((c >>> 20) & 1) | ((c >>> 21) & 6)) | ((c >>> 22) & 56))])"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}