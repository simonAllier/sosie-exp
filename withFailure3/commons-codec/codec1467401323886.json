{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":95,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":32,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":30,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":31,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects":249,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":6,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":33,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray":211,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":192,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan":239,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":92,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse":104,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":109,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":220,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis":237,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":178,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":134,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully":261,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":71,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":133,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":43,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":45,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":44,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":56,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":55,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":147,"org.apache.commons.codec.language.NysiisTest.testCap":7,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":148,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":152,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":256,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":54,"org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant":119,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":149,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":150,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":230,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":243,"org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent":255,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":58,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":177,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":46,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":86,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":202,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":69,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":3,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":4,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":61,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":67,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":232,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":91,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":118,"org.apache.commons.codec.language.SoundexTest.testB650":29,"org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals":262,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":66,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":254,"org.apache.commons.codec.language.SoundexTest.testNewInstance":37,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":169,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":235,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":87,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":245,"org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput":108,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":263,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":173,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":219,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":164,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":176,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":68,"org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull":183,"org.apache.commons.codec.language.NysiisTest.testDropBy":20,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":59,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":252,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":174,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":47,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":76,"org.apache.commons.codec.binary.Base64Test.testUUID":144,"org.apache.commons.codec.binary.Base64Test.testSingletons":159,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":251,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":180,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":70,"org.apache.commons.codec.binary.Base64Test.testPairs":143,"org.apache.commons.codec.language.NysiisTest.testRule2":12,"org.apache.commons.codec.language.NysiisTest.testRule1":11,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":179,"org.apache.commons.codec.language.NysiisTest.testRule7":15,"org.apache.commons.codec.language.NysiisTest.testRule6":14,"org.apache.commons.codec.language.Caverphone1Test.testEndMb":259,"org.apache.commons.codec.language.NysiisTest.testRule5":13,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":258,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111":50,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":236,"org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals":49,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":117,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":38,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":225,"org.apache.commons.codec.language.NysiisTest.testBran":16,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":23,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":201,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":65,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":57,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse":101,"org.apache.commons.codec.net.URLCodecTest.testEncodeObjects":244,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":207,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":79,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":157,"org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray":213,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":125,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":158,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":234,"org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding":136,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":90,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":126,"org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute":39,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":25,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse":103,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":216,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":195,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":116,"org.apache.commons.codec.language.NysiisTest.testDad":8,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":128,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray":204,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":146,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":115,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":5,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":229,"org.apache.commons.codec.language.NysiisTest.testDan":9,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":208,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105":131,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnameCornerCase_Nulls_NoMatch":98,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":130,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":73,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse":97,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":171,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":206,"org.apache.commons.codec.binary.HexTest.testCustomCharset":223,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":135,"org.apache.commons.codec.language.NysiisTest.testSnat":18,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":246,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":110,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":198,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":205,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":209,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":197,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY":240,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":137,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":85,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":64,"org.apache.commons.codec.binary.Base64Test.testTriplets":140,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":175,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":74,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse":96,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":186,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":184,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":187,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":253,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":84,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":153,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":167,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":260,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse":99,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples":51,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString":212,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":142,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":199,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":89,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":188,"org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis":42,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse":106,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":40,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":41,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":203,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":121,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":75,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":93,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":217,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":48,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":60,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":214,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":247,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch":107,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":155,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":227,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully":102,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":129,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":94,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":185,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable":34,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":80,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":111,"org.apache.commons.codec.net.URLCodecTest.testDecodeObjects":257,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":62,"org.apache.commons.codec.digest.CryptTest.testCryptWithBytes":120,"org.apache.commons.codec.language.SoundexTest.testBadCharacters":24,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":168,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":0,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":81,"org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex":224,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":170,"org.apache.commons.codec.language.NysiisTest.testTranan":22,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":182,"org.apache.commons.codec.language.NysiisTest.testFal":10,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":242,"org.apache.commons.codec.language.NysiisTest.testSnad":17,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":77,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall":113,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105":172,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":114,"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":264,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer1":26,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":27,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":28,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":163,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":191,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan":238,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter":231,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":151,"org.apache.commons.codec.binary.Base64Test.testBase64":162,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch":100,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":196,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":83,"org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString":221,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":63,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":154,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":139,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":52,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":194,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":215,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":193,"org.apache.commons.codec.binary.HexTest.testEncodeZeroes":226,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":218,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":248,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":138,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":165,"org.apache.commons.codec.binary.Base64Test.testCodec112":156,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":189,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":124,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":233,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":19,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":141,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":72,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":88,"org.apache.commons.codec.binary.Base64Test.testCodec68":160,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":2,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":35,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":78,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":228,"org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex":222,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":1,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":127,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":166,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":122,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":250,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":132,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":200,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":112,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse":105,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":181,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":53,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":210,"org.apache.commons.codec.language.NysiisTest.testOthers":21,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":161,"org.apache.commons.codec.language.SoundexTest.testDifference":36,"org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1":265,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":241,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":123,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":190,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":82,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":145},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"060d50a6-3fc2-11e6-b980-01f426cad865","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:49","type":"CtIfImpl","sourcecode":"if (java.lang.Character.isLetter(str.charAt(i))) {\n    chars[(count++)] = str.charAt(i);\n} "},"status":-1},{"failures":[46,47,48,49,50,51,52,53],"tindex":"060d77b7-3fc2-11e6-b980-a168912cb8ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:58","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"e$\", \"\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:91","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"[aeiou]\", \"3\")"},"status":-1},{"failures":[54,55,56,57,58,59,60,61],"tindex":"060d77b8-3fc2-11e6-b980-4783f226cf9f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:300","type":"CtForEachImpl","sourcecode":"for (final char char : arr) {\n    if (element == key) {\n        return true;\n    } \n}"},"status":-1},{"failures":[62,63,64,65,66,67,68,69,70,71,72],"tindex":"060d77b9-3fc2-11e6-b980-870bd679a23e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:230","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(finalb, ((byte)(0)))"},"variableMap":{"finalb":"lineSeparator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:374","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int)"},"status":-1},{"failures":[],"tindex":"060d9eca-3fc2-11e6-b980-c71a5e8db953","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:117","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"2\", \"\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:89","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"z\", \"s\")"},"status":0},{"failures":[],"tindex":"060d9ecb-3fc2-11e6-b980-530b4b44a672","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:225","type":"CtInvocationImpl","sourcecode":"buffer.write(b)"},"variableMap":{"b":"avail","buffer":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:112","type":"CtIfImpl","sourcecode":"if (avail > 0) {\n    final byte[] byte[] = new byte[avail];\n    final int int = org.apache.commons.codec.binary.BaseNCodec.readResults(buf, 0, avail, org.apache.commons.codec.binary.BaseNCodec.Context);\n    if (c > 0) {\n        java.io.OutputStream.write(buf, 0, c);\n    } \n} "},"status":-2},{"failures":[],"tindex":"060d9ecc-3fc2-11e6-b980-a72bde2b0172","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:392","type":"CtReturnImpl","sourcecode":"return metaphone(((java.lang.String)(obj)))"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:531","type":"CtReturnImpl","sourcecode":"return decode(((byte[])(obj)))"},"status":-2},{"failures":[],"tindex":"060d9ecd-3fc2-11e6-b980-5ba058bb976c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:88","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} "},"variableMap":{"value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:181","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.BCodec.this.decodeText(value)"},"status":-2},{"failures":[],"tindex":"060d9ece-3fc2-11e6-b980-53ef4f32d03d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:239","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"binaryData","raw":"binaryData"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:677","type":"CtReturnImpl","sourcecode":"return b64.encode(binaryData)"},"status":-2},{"failures":[],"tindex":"060dc5df-3fc2-11e6-b980-a9e8b4e78cf0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:350","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha1(data)"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:658","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.digest(org.apache.commons.codec.digest.DigestUtils.getSha512Digest(), data)"},"status":-2},{"failures":[73,74],"tindex":"060dc5e0-3fc2-11e6-b980-8b5522b05d35","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:500","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(sBytes, ((byte)(0)))"},"variableMap":{"sBytes":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:239","type":"CtIfImpl","sourcecode":"if (((b[y]) & u) != 0) {\n    c |= 1;\n} "},"status":-1},{"failures":[75,76,77,78,79,80,81],"tindex":"060dc5e1-3fc2-11e6-b980-2fe44aaa5503","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:230","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(finalb, ((byte)(0)))"},"variableMap":{"finalb":"saltBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:218","type":"CtInvocationImpl","sourcecode":"ctx1.update(saltBytes)"},"status":-1},{"failures":[82,83],"tindex":"060dc5e2-3fc2-11e6-b980-91e51049d429","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:99","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:362","type":"CtReturnImpl","sourcecode":"return index + 2"},"status":-1},{"failures":[],"tindex":"060dc5e3-3fc2-11e6-b980-7d1aacd42a62","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:304","type":"CtAssignmentImpl","sourcecode":"this.byte[] = null"},"variableMap":{"lineSeparator":"org.apache.commons.codec.binary.Base32.ENCODE_TABLE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:287","type":"CtAssignmentImpl","sourcecode":"this.byte[] = org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.byte[]"},"status":-2},{"failures":[],"tindex":"060decf4-3fc2-11e6-b980-cdb76bdf8854","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:485","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha256(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(data))"},"variableMap":{"data":"charsetName"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:142","type":"CtReturnImpl","sourcecode":"return string.getBytes(charsetName)"},"status":-2},{"failures":[54,55,56,57,58,60,61],"tindex":"060decf5-3fc2-11e6-b980-275308b0cfe8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:348","type":"CtAssignmentImpl","sourcecode":"code = '0'"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:389","type":"CtAssignmentImpl","sourcecode":"code = '6'"},"status":-1},{"failures":[84,85,86,87,88,89,90,91,92,93],"tindex":"060decf6-3fc2-11e6-b980-19263bcdac93","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (i < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"org.apache.commons.codec.binary.BaseNCodec.EOF"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"status":-1},{"failures":[94,95,82,83],"tindex":"060decf7-3fc2-11e6-b980-81bd41991f3b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:291","type":"CtInvocationImpl","sourcecode":"result.append('S', 'X')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:709","type":"CtIfImpl","sourcecode":"if ((index == 0) && ((isVowel(charAt(value, (index + 1)))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"WH\")))) {\n    if (isVowel(charAt(value, (index + 1)))) {\n        result.append('A', 'F');\n    } else {\n        result.append('A');\n    }\n    index++;\n} else if ((((index == ((value.length()) - 1)) && (isVowel(charAt(value, (index - 1))))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, \"EWSKI\", \"EWSKY\", \"OWSKI\", \"OWSKY\"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) {\n    result.appendAlternate('F');\n    index++;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"WICZ\", \"WITZ\")) {\n    result.append(\"TS\", \"FX\");\n    index += 4;\n} else {\n    index++;\n}"},"status":-1},{"failures":[],"tindex":"060e1408-3fc2-11e6-b980-6f90fc3c6743","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:89","type":"CtIfImpl","sourcecode":"if ((salt != null) && (!(salt.startsWith(org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String)))) {\n    salt = (org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + salt;\n} "},"variableMap":{"salt":"charset","org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX":"charset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:139","type":"CtIfImpl","sourcecode":"if (charset.equals(\"\")) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\");\n} "},"status":-2},{"failures":[96,97,98,99,100,101,102,103,104,105,106,107],"tindex":"060e1409-3fc2-11e6-b980-b1f824207c19","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:214","type":"CtIfImpl","sourcecode":"if (((name1 == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name1))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name1))) {\n    return false;\n} else if (((name2 == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name2))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name2))) {\n    return false;\n} else if (((name1.length()) == 1) || ((name2.length()) == 1)) {\n    return false;\n} else if (name1.equalsIgnoreCase(name2)) {\n    return true;\n} "},"status":-1},{"failures":[82,83],"tindex":"060e140a-3fc2-11e6-b980-6bfea3329deb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:271","type":"CtInvocationImpl","sourcecode":"result.append('A')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:650","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 3), 2, \"OO\", \"ER\", \"EN\", \"UY\", \"ED\", \"EM\")) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 3), 2, \"ER\", \"EN\")) {\n        result.append(\"X\", \"SK\");\n    } else {\n        result.append(\"SK\");\n    }\n} else {\n    if (((index == 0) && (!(isVowel(charAt(value, 3))))) && ((charAt(value, 3)) != 'W')) {\n        result.append('X', 'S');\n    } else {\n        result.append('X');\n    }\n}"},"status":-1},{"failures":[],"tindex":"060e140b-3fc2-11e6-b980-070248c8b8f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:500","type":"CtIfImpl","sourcecode":"if (((index == 0) || (isVowel(charAt(value, (index - 1))))) && (isVowel(charAt(value, (index + 1))))) {\n    result.append('H');\n    index += 2;\n} else {\n    index++;\n}"},"status":-2},{"failures":[108],"tindex":"060e3b1c-3fc2-11e6-b980-99d57a610d1a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:280","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"status":-1},{"failures":[109,110,111,112,113,114,115,116,117,118,119,120],"tindex":"060e3b1d-3fc2-11e6-b980-5f3af7949294","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:257","type":"CtAssignmentImpl","sourcecode":"ctx1 = org.apache.commons.codec.digest.DigestUtils.getMd5Digest()"},"variableMap":{"ctx1":"ctx"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:361","type":"CtAssignmentImpl","sourcecode":"ctx = org.apache.commons.codec.digest.DigestUtils.getDigest(algorithm)"},"status":-1},{"failures":[],"tindex":"060e3b1e-3fc2-11e6-b980-6be169edd7d6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:728","type":"CtOperatorAssignmentImpl","sourcecode":"index += 4"},"variableMap":{"index":"org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:284","type":"CtAssignmentImpl","sourcecode":"this.int = (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int) + (lineSeparator.int)"},"status":-2},{"failures":[],"tindex":"060e3b1f-3fc2-11e6-b980-6ddac3d58b5a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:298","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(tempResult, 0, pBytes, cp, blocksize)"},"variableMap":{"blocksize":"length","tempResult":"lineSeparator","pBytes":"lineSeparator","cp":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:286","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(lineSeparator, 0, org.apache.commons.codec.binary.Base64.this.byte[], 0, lineSeparator.int)"},"status":-2},{"failures":[121],"tindex":"060e3b20-3fc2-11e6-b980-19babeeaf9d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:595","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUtf8(org.apache.commons.codec.binary.Base64.encodeBase64(binaryData, false, true))"},"variableMap":{"binaryData":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:261","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacMd5(key, valueToDigest))"},"status":-1},{"failures":[122,123,124,125,126,62,63,84,127,128,64,129,130,131,85,86,87,88,65,132,133,134,135,136,137,138,139,140,141,66,67,142,143,144,145,146,147,148,149,150,151,152,153,154,68,155,156,157,158,159,69,160,161,70,162,71,163,164,165,166,167,168,169,170,89,171,172,90,91,92,93,173,174,175,176,177,72,178,179,180,181,182],"tindex":"060e6231-3fc2-11e6-b980-7bb5e5786e87","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:269","type":"CtIfImpl","sourcecode":"if (((context.byte[]) == null) || ((context.byte[].int) < ((context.int) + size))) {\n    return resizeBuffer(context);\n} "},"status":-1},{"failures":[183],"tindex":"060e6232-3fc2-11e6-b980-47ce4d949d6e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:226","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201],"tindex":"060e6233-3fc2-11e6-b980-c566b3ca5cf8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:311","type":"CtIfImpl","sourcecode":"if (ruleType == (org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType)) {\n    throw new java.lang.IllegalArgumentException((\"ruleType must not be \" + (org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType)));\n} "},"variableMap":{"org.apache.commons.codec.language.bm.RuleType.RULES":"rt","ruleType":"rt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:221","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : ls.getLanguages()) {\n    try {\n        rs.put(l, org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.createScanner(s, rt, l), org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l)));\n    } catch (final java.lang.IllegalStateException e) {\n        throw new java.lang.IllegalStateException((\"Problem processing \" + (org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l))) , e);\n    }\n}"},"status":-1},{"failures":[],"tindex":"060e6234-3fc2-11e6-b980-5b7cbc71dc21","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:392","type":"CtReturnImpl","sourcecode":"return metaphone(((java.lang.String)(obj)))"},"variableMap":{"obj":"object","this":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:250","type":"CtTryImpl","sourcecode":"try {\n    final char[] char[] = object instanceof java.lang.String ? ((java.lang.String)(object)).toCharArray() : ((char[])(object));\n    return org.apache.commons.codec.binary.Hex.decodeHex(charArray);\n} catch (final java.lang.ClassCastException e) {\n    throw new org.apache.commons.codec.DecoderException(e.getMessage() , e);\n}"},"status":-2},{"failures":[],"tindex":"060e8945-3fc2-11e6-b980-e5e124f38396","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:206","type":"CtAssignmentImpl","sourcecode":"this.int = unencodedBlockSize"},"variableMap":{"unencodedBlockSize":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:299","type":"CtAssignmentImpl","sourcecode":"this.int = (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int) + (lineSeparator.int)"},"status":-2},{"failures":[202,203,204,205,206,207,121,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227],"tindex":"060e8946-3fc2-11e6-b980-bb140a8fb19f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:146","type":"CtAssignmentImpl","sourcecode":"out[(j++)] = toDigits[(15 & (data[i]))]"},"variableMap":{"data":"data","i":"j","j":"i","toDigits":"toDigits","out":"toDigits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:145","type":"CtAssignmentImpl","sourcecode":"out[(j++)] = toDigits[((240 & (data[i])) >>> 4)]"},"status":-1},{"failures":[228,229,230,231,232,233,234,235,236],"tindex":"060e8947-3fc2-11e6-b980-7d1ff0a67c80","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:211","type":"CtInvocationImpl","sourcecode":"code.append('T')"},"status":-1},{"failures":[],"tindex":"060e8948-3fc2-11e6-b980-21a364e599cf","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:214","type":"CtIfImpl","sourcecode":"if (((name1 == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name1))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name1))) {\n    return false;\n} else if (((name2 == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name2))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name2))) {\n    return false;\n} else if (((name1.length()) == 1) || ((name2.length()) == 1)) {\n    return false;\n} else if (name1.equalsIgnoreCase(name2)) {\n    return true;\n} "},"variableMap":{"org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"suffix","name2":"input","name1":"suffix","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"suffix"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:276","type":"CtIfImpl","sourcecode":"if ((suffix.length()) > (input.length())) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"060eb059-3fc2-11e6-b980-7d18a9af3720","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:101","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"wh3\", \"Wh3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:91","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"g\", \"k\")"},"status":0},{"failures":[228,230,237,238,239,234,240],"tindex":"060eb05a-3fc2-11e6-b980-b33f874df37d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:289","type":"CtInvocationImpl","sourcecode":"code.append('S')"},"status":-1},{"failures":[],"tindex":"060eb05b-3fc2-11e6-b980-c3570e80df3c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:216","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.boolean = true"},"variableMap":{"found":"strict"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:193","type":"CtAssignmentImpl","sourcecode":"this.boolean = strict"},"status":-2},{"failures":[],"tindex":"060eb05c-3fc2-11e6-b980-4926232ef471","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:399","type":"CtAssignmentImpl","sourcecode":"lastCode = code"},"variableMap":{"code":"code","lastCode":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:379","type":"CtAssignmentImpl","sourcecode":"code = '4'"},"status":0},{"failures":[],"tindex":"060eb05d-3fc2-11e6-b980-c5282ece66ec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:210","type":"CtAssignmentImpl","sourcecode":"this.int = chunkSeparatorLength"},"variableMap":{"chunkSeparatorLength":"startSrc"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:763","type":"CtAssignmentImpl","sourcecode":"startSrc = 1"},"status":-2},{"failures":[],"tindex":"060eb05e-3fc2-11e6-b980-79f91efef014","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"i","y":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:76","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(i)"},"status":-2},{"failures":[241,242,243,244],"tindex":"060eb05f-3fc2-11e6-b980-9f1a297da2a5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:78","type":"CtForImpl","sourcecode":"for (int int = 'A' ; i <= 'Z' ; i++) {\n    org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(i);\n}"},"status":-1},{"failures":[0,36],"tindex":"060eb060-3fc2-11e6-b980-2754fbf766cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:132","type":"CtLocalVariableImpl","sourcecode":"final int int = (text.length()) - 2"},"variableMap":{"text":"es2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:114","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Math.min(es1.length(), es2.length())"},"status":-1},{"failures":[],"tindex":"060ed771-3fc2-11e6-b980-95ceec300b1d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.NameType:51","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.NameType.this.java.lang.String"},"variableMap":{"name":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:144","type":"CtReturnImpl","sourcecode":"return name"},"status":-2},{"failures":[245,246,247,248,249,250,251,252,253,254],"tindex":"060ed772-3fc2-11e6-b980-db946ba895b9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:332","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer)"},"status":-1},{"failures":[],"tindex":"060ed773-3fc2-11e6-b980-538be15bd9fe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:262","type":"CtReturnImpl","sourcecode":"return newData"},"variableMap":{"newData":"org.apache.commons.codec.language.Nysiis.CHARS_FF"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:154","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.char[]"},"status":-2},{"failures":[94,82,83],"tindex":"060ed774-3fc2-11e6-b980-e7d2729c0e06","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:532","type":"CtInvocationImpl","sourcecode":"result.append('J', ' ')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:309","type":"CtInvocationImpl","sourcecode":"result.append('S')"},"status":-1},{"failures":[],"tindex":"060ed775-3fc2-11e6-b980-e1107bbd53db","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:443","type":"CtReturnImpl","sourcecode":"return new java.lang.String(chrs)"},"status":-2},{"failures":[122,123,124,141,142,143,144,145,146,147,148,149,150,152,153,154,155,157,158,159,161,162,164,165,166,168,169,178,179,180,181],"tindex":"060ed776-3fc2-11e6-b980-55e39a17b476","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:410","type":"CtInvocationImpl","sourcecode":"decode(pArray, 0, pArray.int, context)"},"status":-1},{"failures":[],"tindex":"060ed777-3fc2-11e6-b980-41a546b55793","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:296","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacMd5(key, valueToDigest))"},"variableMap":{"valueToDigest":"key","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:617","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha384(key, valueToDigest))"},"status":-2},{"failures":[147,148,149,150],"tindex":"060ed778-3fc2-11e6-b980-5b98e37bc231","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:338","type":"CtAssignmentImpl","sourcecode":"cp = 0"},"variableMap":{"cp":"bitlen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:751","type":"CtAssignmentImpl","sourcecode":"bitlen = ((bitlen + 7) >> 3) << 3"},"status":-1},{"failures":[73,74],"tindex":"060efe89-3fc2-11e6-b980-211b33588f9e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:209","type":"CtLocalVariableImpl","sourcecode":"final char char = salt.charAt(0)"},"variableMap":{"salt":"salt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:210","type":"CtLocalVariableImpl","sourcecode":"final char char = salt.charAt(1)"},"status":-1},{"failures":[241,255,242,243,256,257],"tindex":"060efe8a-3fc2-11e6-b980-ef8b76d5dbc7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:179","type":"CtInvocationImpl","sourcecode":"buffer.write(b)"},"status":-1},{"failures":[],"tindex":"060efe8b-3fc2-11e6-b980-79e1b03d4d1f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:106","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"r3\", \"R3\")"},"variableMap":{"txt":"cachedString"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:118","type":"CtAssignmentImpl","sourcecode":"java.lang.String = null"},"status":-2},{"failures":[122,123,125,62,63,64,65,132,133,134,135,136,137,138,139,140,66,67,143,144,145,146,147,148,149,150,151,152,153,154,68,159,69,161,70,162,71,163,164,167,168,170,173,174,175,176,177,72,182],"tindex":"060efe8c-3fc2-11e6-b980-f38b0950da3c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:314","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getHmacSha1(key).doFinal(valueToDigest)"},"variableMap":{"valueToDigest":"buf","key":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:434","type":"CtReturnImpl","sourcecode":"return buf"},"status":-1},{"failures":[251,258,252,253,254,122,123,125],"tindex":"060efe8d-3fc2-11e6-b980-9149b9befc8f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:275","type":"CtInvocationImpl","sourcecode":"code.append('F')"},"variableMap":{"code":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:75","type":"CtInvocationImpl","sourcecode":"buffer.append(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.char)"},"status":-1},{"failures":[],"tindex":"060efe8e-3fc2-11e6-b980-47e94be9b1d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:528","type":"CtIfImpl","sourcecode":"if (obj == null) {\n    return null;\n} else if (obj instanceof byte[]) {\n    return decode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be quoted-printable decoded\"));\n}"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:335","type":"CtIfImpl","sourcecode":"if (obj == null) {\n    return null;\n} else if (obj instanceof byte[]) {\n    return decode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return decode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be URL decoded\"));\n}"},"status":-2},{"failures":[],"tindex":"060efe8f-3fc2-11e6-b980-9db0ad76270e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:89","type":"CtIfImpl","sourcecode":"if ((salt != null) && (!(salt.startsWith(org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String)))) {\n    salt = (org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + salt;\n} "},"variableMap":{"salt":"salt","org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX":"salt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:189","type":"CtIfImpl","sourcecode":"if ((m == null) || (!(m.find()))) {\n    throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + salt));\n} "},"status":-2},{"failures":[],"tindex":"060f25a0-3fc2-11e6-b980-c33fe83d7433","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:188","type":"CtAssignmentImpl","sourcecode":"this.int = maxPhonemes"},"variableMap":{"maxPhonemes":"u"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:332","type":"CtOperatorAssignmentImpl","sourcecode":"el ^= (((((((org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][1][(t & 63)]) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][3][((t >>> 8) & 63)])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][5][((t >>> 16) & 63)])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][7][((t >>> 24) & 63)])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][0][(u & 63)])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][2][((u >>> 8) & 63)])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][4][((u >>> 16) & 63)])) | (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.int[][][6][((u >>> 24) & 63)])"},"status":-2},{"failures":[73,74],"tindex":"060f25a1-3fc2-11e6-b980-291f1adc3c36","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:327","type":"CtLocalVariableImpl","sourcecode":"int int = v & e0"},"variableMap":{"v":"r","e0":"r"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:330","type":"CtLocalVariableImpl","sourcecode":"int int = ((v ^ (v << 16)) ^ r) ^ (sArr[(s + 1)])"},"status":-1},{"failures":[259,260],"tindex":"060f25a2-3fc2-11e6-b980-b344f926b270","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:91","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"g\", \"k\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:97","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"m+\", \"M\")"},"status":-1},{"failures":[82,83],"tindex":"060f25a3-3fc2-11e6-b980-49394beb55b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:392","type":"CtInvocationImpl","sourcecode":"result.append(\"TK\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:370","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-1},{"failures":[],"tindex":"060f25a4-3fc2-11e6-b980-c7ec3bb36325","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:80","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"tia\", \"sia\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:93","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^y3\", \"Y3\")"},"status":0},{"failures":[],"tindex":"060f25a5-3fc2-11e6-b980-a728e2809bf3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:188","type":"CtAssignmentImpl","sourcecode":"this.int = maxPhonemes"},"variableMap":{"maxPhonemes":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:387","type":"CtOperatorAssignmentImpl","sourcecode":"value |= (org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(b[(offset++)])) << 16"},"status":-2},{"failures":[],"tindex":"060f25a6-3fc2-11e6-b980-e1c9ae5f5ffe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:414","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to DaitchMokotoffSoundex encode is not of type java.lang.String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:382","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"Parameter supplied to Base-N decode is not a byte[] or a String\")"},"status":-2},{"failures":[],"tindex":"060f25a7-3fc2-11e6-b980-015dd56ba92b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:388","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((context.int) >> 12) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))]"},"variableMap":{"encodeTable":"encodeTable","ibitWorkArea":"ibitWorkArea","pos":"pos","context":"context","org.apache.commons.codec.binary.Base64.MASK_6BITS":"org.apache.commons.codec.binary.Base64.MASK_6BITS","buffer":"encodeTable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:387","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][(((context.int) >> 18) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))]"},"status":-2},{"failures":[],"tindex":"060f4cb8-3fc2-11e6-b980-394115d21e38","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:336","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Base-N encode is not a byte[]\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:193","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Negative skip length: \" + n))"},"status":-2},{"failures":[],"tindex":"060f4cb9-3fc2-11e6-b980-7b09ca0211bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:295","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = name1.toCharArray()"},"variableMap":{"name1":"name2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:296","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = name2.toCharArray()"},"status":-2},{"failures":[5,6,7,8,9,10,11,12,14,16,17,18,19,20,21,22,23],"tindex":"060f4cba-3fc2-11e6-b980-19c350b72d86","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:288","type":"CtInvocationImpl","sourcecode":"key.append(chars[i])"},"status":-1},{"failures":[261],"tindex":"060f4cbb-3fc2-11e6-b980-5ff63356c6c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:353","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[94,82,83],"tindex":"060f4cbc-3fc2-11e6-b980-53884257bca6","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.StringEncoderComparator:86","type":"CtAssignmentImpl","sourcecode":"compareCode = 0"},"variableMap":{"compareCode":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:452","type":"CtOperatorAssignmentImpl","sourcecode":"index += 2"},"status":-1},{"failures":[262,260,263,264],"tindex":"060f4cbd-3fc2-11e6-b980-3b5ec069cc4d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:118","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"3\", \"\")"},"status":-1},{"failures":[62,63,85,90,174,175],"tindex":"060f4cbe-3fc2-11e6-b980-d742664a9184","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:499","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(pBytes, ((byte)(0)))"},"variableMap":{"pBytes":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:93","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.encode(b, offset, len, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-1},{"failures":[73,74],"tindex":"060f4cbf-3fc2-11e6-b980-f9869d1935b7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:285","type":"CtForImpl","sourcecode":"for (int int = 0 ; j < 25 ; j++) {\n    for (int int = 0 ; i < 32 ; i += 4) {\n        left = org.apache.commons.codec.digest.UnixCrypt.dEncrypt(left, right, i, eSwap0, eSwap1, schedule);\n        right = org.apache.commons.codec.digest.UnixCrypt.dEncrypt(right, left, (i + 2), eSwap0, eSwap1, schedule);\n    }\n    t = left;\n    left = right;\n    right = t;\n}"},"status":-1},{"failures":[54,58],"tindex":"060f4cc0-3fc2-11e6-b980-c9a4d4b418b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.RefinedSoundex:188","type":"CtAssignmentImpl","sourcecode":"last = '*'"},"variableMap":{"last":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:383","type":"CtAssignmentImpl","sourcecode":"code = '8'"},"status":-1},{"failures":[],"tindex":"060f73d1-3fc2-11e6-b980-f7075a84e8ec","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.BCodec:222","type":"CtIfImpl","sourcecode":"if (value == null) {\n    return null;\n} else if (value instanceof java.lang.String) {\n    return decode(((java.lang.String)(value)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (value.getClass().getName())) + \" cannot be decoded using BCodec\"));\n}"},"variableMap":{"this":"pObject","value":"pObject"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:114","type":"CtReturnImpl","sourcecode":"return encode(((java.lang.String)(pObject)))"},"status":-2},{"failures":[],"tindex":"060f73d2-3fc2-11e6-b980-31d34108d55a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:338","type":"CtReturnImpl","sourcecode":"return encode(((byte[])(obj)))"},"variableMap":{"obj":"source","this":"source"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:88","type":"CtReturnImpl","sourcecode":"return encode(((java.lang.String)(source)))"},"status":-2},{"failures":[],"tindex":"060f73d3-3fc2-11e6-b980-77e088d81cce","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:363","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.sha1(data)"},"variableMap":{"data":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:460","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.hmacSha256(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(key), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(valueToDigest))"},"status":-2},{"failures":[],"tindex":"060f73d4-3fc2-11e6-b980-5b114774d382","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:113","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"y3\", \"Y3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:100","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"wy\", \"Wy\")"},"status":0},{"failures":[94,95,82,83],"tindex":"060f73d5-3fc2-11e6-b980-a5baa7025fd5","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.StringEncoderComparator:86","type":"CtAssignmentImpl","sourcecode":"compareCode = 0"},"variableMap":{"compareCode":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:771","type":"CtAssignmentImpl","sourcecode":"index = (charAt(value, (index + 1))) == 'Z' ? index + 2 : index + 1"},"status":-1},{"failures":[],"tindex":"060f73d6-3fc2-11e6-b980-0d58560a4764","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:556","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = boxContent"},"variableMap":{"boxContent":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:84","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = name.toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale)"},"status":-2},{"failures":[],"tindex":"060f73d7-3fc2-11e6-b980-55f1d42e3c2f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:611","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha384(data))"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:310","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md5(data))"},"status":-2},{"failures":[94,95,83],"tindex":"060f9ae8-3fc2-11e6-b980-45f270637d36","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:970","type":"CtInvocationImpl","sourcecode":"appendAlternate(value)"},"status":-1},{"failures":[],"tindex":"060f9ae9-3fc2-11e6-b980-35a36d8b3721","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"patternLength","y":"patternLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:222","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.boolean)) {\n    patternLength = 1;\n} "},"status":-2},{"failures":[],"tindex":"060f9aea-3fc2-11e6-b980-8faa3392de18","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:431","type":"CtInvocationImpl","sourcecode":"encode(pArray, 0, org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int, context)"},"variableMap":{"pArray":"buffer","org.apache.commons.codec.binary.BaseNCodec.EOF":"length","this":"this","context":"context"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:249","type":"CtIfImpl","sourcecode":"if ((context.byte[]) == null) {\n    context.byte[] = new byte[getDefaultBufferSize()];\n    context.int = 0;\n    context.int = 0;\n} else {\n    final byte[] byte[] = new byte[(context.byte[].int) * (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)];\n    java.lang.System.arraycopy(context.byte[], 0, b, 0, context.byte[].int);\n    context.byte[] = b;\n}"},"status":-2},{"failures":[],"tindex":"060f9aeb-3fc2-11e6-b980-5186d75a6c70","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; (i < (key.int)) && (i < (original.int)) ; i++) {\n    final int int = original[i];\n    key[i] = ((byte)(iChar << 1));\n}"},"variableMap":{"original":"key","length":"length","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:216","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (key.int) ; i++) {\n    key[i] = 0;\n}"},"status":-2},{"failures":[153],"tindex":"060f9aec-3fc2-11e6-b980-65ab8e31db36","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:256","type":"CtAssignmentImpl","sourcecode":"context.byte[] = b"},"status":-1},{"failures":[],"tindex":"060f9aed-3fc2-11e6-b980-cb4193b2f188","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:155","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(algorithm.toString(), key)"},"variableMap":{"key":"key","algorithm":"org.apache.commons.codec.digest.HmacAlgorithms.HMAC_SHA_384"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:117","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(org.apache.commons.codec.digest.HmacAlgorithms.org.apache.commons.codec.digest.HmacAlgorithms.org.apache.commons.codec.digest.HmacAlgorithms, key)"},"status":-2},{"failures":[263],"tindex":"060f9aee-3fc2-11e6-b980-99b5c3f83c9f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:58","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"e$\", \"\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:79","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"tio\", \"sio\")"},"status":-1},{"failures":[],"tindex":"060f9aef-3fc2-11e6-b980-51742d25c32f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:211","type":"CtInvocationImpl","sourcecode":"ctx.update(saltBytes)"},"variableMap":{"ctx":"ctx1","saltBytes":"finalb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:261","type":"CtInvocationImpl","sourcecode":"ctx1.update(finalb, 0, org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.int)"},"status":0},{"failures":[94,95,82,83],"tindex":"060f9af0-3fc2-11e6-b980-77f49db2add5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:727","type":"CtInvocationImpl","sourcecode":"result.append(\"TS\", \"FX\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:740","type":"CtIfImpl","sourcecode":"if (index == 0) {\n    result.append('S');\n    index++;\n} else {\n    if (!((index == ((value.length()) - 1)) && ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 3, \"IAU\", \"EAU\")) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, \"AU\", \"OU\"))))) {\n        result.append(\"KS\");\n    } \n    index = org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, \"C\", \"X\") ? index + 2 : index + 1;\n}"},"status":-1},{"failures":[],"tindex":"060fc201-3fc2-11e6-b980-f5557ed6e94a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:454","type":"CtLocalVariableImpl","sourcecode":"final int int = currentLine"},"variableMap":{"currentLine":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:79","type":"CtLocalVariableImpl","sourcecode":"final int int = data.int"},"status":-2},{"failures":[122,123,124,126,62,63,84,127,128,64,129,130,85,86,87,88,65,141,142,143,144,145,146,147,148,149,150,152,153,154,155,157,158,159,161,162,164,165,166,168,169,178,179,180,181],"tindex":"060fc202-3fc2-11e6-b980-ad589d6d9ecd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:435","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < inAvail ; i++) {\n    final byte[] byte[] = ensureBufferSize(int, context);\n    final byte byte = in[(inPos++)];\n    if (b == (byte)) {\n        context.boolean = true;\n        break;\n    } else {\n        if ((b >= 0) && (b < (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[].int))) {\n            final int int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[][b];\n            if (result >= 0) {\n                context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int);\n                context.int = ((context.int) << (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int)) + result;\n                if ((context.int) == 0) {\n                    buffer[((context.int)++)] = ((byte)(((context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n                    buffer[((context.int)++)] = ((byte)(((context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n                    buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n                } \n            } \n        } \n    }\n}"},"status":-1},{"failures":[265],"tindex":"060fc203-3fc2-11e6-b980-1784318322f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:303","type":"CtReturnImpl","sourcecode":"return new java.lang.String(bytes , org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-1},{"failures":[],"tindex":"060fc204-3fc2-11e6-b980-5dbd67cd383e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:88","type":"CtAssignmentImpl","sourcecode":"this.boolean = acceptOnMatch"},"variableMap":{"acceptOnMatch":"inMultilineComment"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:268","type":"CtAssignmentImpl","sourcecode":"inMultilineComment = true"},"status":-2},{"failures":[],"tindex":"060fc205-3fc2-11e6-b980-656aa4248dfc","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:103","type":"CtAssignmentImpl","sourcecode":"salt = (org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8))"},"variableMap":{"salt":"txt","org.apache.commons.codec.digest.Sha2Crypt.SHA256_PREFIX":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:62","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^enough\", \"enou2f\")"},"status":-2},{"failures":[],"tindex":"060fc206-3fc2-11e6-b980-230426f40655","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:162","type":"CtReturnImpl","sourcecode":"return encode(value, org.apache.commons.codec.net.BCodec.this.getCharset())"},"status":-2},{"failures":[109,114,115,116,118],"tindex":"060fc207-3fc2-11e6-b980-838b605e5648","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:459","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[12], altResult[22], altResult[2], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:464","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[27], altResult[7], altResult[17], 4, buffer)"},"status":-1},{"failures":[119,120],"tindex":"060fe918-3fc2-11e6-b980-5b79deab471b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Crypt:67","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(keyBytes)"},"status":-1},{"failures":[],"tindex":"060fe919-3fc2-11e6-b980-e58fcd5d5396","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:376","type":"CtAssignmentImpl","sourcecode":"s = (s >>> 16) | (t & -65536)"},"variableMap":{"s":"offset","t":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:386","type":"CtOperatorAssignmentImpl","sourcecode":"value |= (org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(b[(offset++)])) << 8"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}