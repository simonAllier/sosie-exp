{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":193,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":209,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testLocaleIndependence":144,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched":159,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":115,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched":165,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":16,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":15,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":10,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR":163,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched":151,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":40,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched":146,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":23,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":231,"org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation":206,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":58,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch":153,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":107,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":171,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":17,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":130,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":79,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":80,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched":158,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot":175,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":83,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched":172,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":81,"org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant":122,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":82,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":203,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":49,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":69,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":216,"org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString":194,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":138,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":22,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected":181,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched":162,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":133,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":116,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched":154,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched":176,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid":106,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully":157,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":96,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched":168,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":70,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":102,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched":183,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved":174,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":230,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":92,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray":195,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected":150,"org.apache.commons.codec.language.NysiisTest.testDropBy":14,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched":178,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":137,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":114,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":120,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch":161,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":28,"org.apache.commons.codec.binary.Base64Test.testUUID":76,"org.apache.commons.codec.binary.Base64Test.testSingletons":89,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":112,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":60,"org.apache.commons.codec.binary.Base64Test.testPairs":75,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":59,"org.apache.commons.codec.language.NysiisTest.testRule7":13,"org.apache.commons.codec.language.NysiisTest.testRule6":12,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":109,"org.apache.commons.codec.language.NysiisTest.testRule5":11,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":113,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched":147,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111":121,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":205,"org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals":51,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeWithInvalidObject":141,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject":215,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty":143,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":100,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray":117,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":190,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched":152,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":48,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":72,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":3,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched":148,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":32,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":87,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":88,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":123,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":204,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":55,"org.apache.commons.codec.binary.HexTest.testEncodeEmpty":101,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":227,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":5,"org.apache.commons.codec.digest.B64Test.testB64from24bit":18,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":21,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":64,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray":218,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":78,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":20,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched":187,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":199,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched":166,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":222,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":67,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched":167,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch":173,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":0,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":220,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched":164,"org.apache.commons.codec.binary.HexTest.testCustomCharset":233,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch":180,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":103,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":136,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":24,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":135,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched":186,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":45,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":219,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":223,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":44,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY":212,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":196,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":68,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":65,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":1,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":8,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":6,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":9,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":118,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":124,"org.apache.commons.codec.binary.Base64Test.testIsUrlSafe":2,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":62,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":84,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples":52,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":46,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":74,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":37,"org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX":207,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":217,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":221,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":27,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":228,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":50,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":104,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode":105,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":225,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":86,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":236,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":66,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":189,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":192,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":7,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":134,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString":214,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":33,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch":179,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":25,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":56,"org.apache.commons.codec.digest.CryptTest.testCryptWithBytes":30,"org.apache.commons.codec.language.SoundexTest.testBadCharacters":127,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":95,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":210,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched":149,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt":237,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched":145,"org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA":211,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":34,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":125,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched":169,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":188,"org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex":234,"org.apache.commons.codec.language.MetaphoneTest.testWhy":201,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched":170,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":29,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall":191,"org.apache.commons.codec.language.MetaphoneTest.testTCH":200,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":19,"org.apache.commons.codec.language.MetaphoneTest.testPHTOF":202,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars":213,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":39,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":140,"org.apache.commons.codec.binary.Base64Test.testBase64":91,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":43,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":35,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":57,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":85,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":42,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":53,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":226,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":41,"org.apache.commons.codec.binary.HexTest.testEncodeZeroes":235,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":229,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":108,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully":156,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":93,"org.apache.commons.codec.language.MetaphoneTest.testExceedLength":208,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray":119,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":4,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched":182,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":99,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":73,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected":177,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":71,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":31,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":128,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":198,"org.apache.commons.codec.language.SoundexTest.testEncodeEmpty":131,"org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex":232,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":63,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184":197,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":94,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":97,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":111,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched":155,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":132,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":47,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":26,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":61,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":54,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":224,"org.apache.commons.codec.language.NysiisTest.testOthers":126,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":90,"org.apache.commons.codec.language.SoundexTest.testDifference":129,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":139,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":110,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":98,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":38,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":36,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched":160,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH":185,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeNull":142,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":77,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH":184},"transformations":[{"failures":[],"tindex":"430fb852-3d6a-11e6-8d5f-69c8746399ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:144","type":"CtReturnImpl","sourcecode":"return name"},"variableMap":{"name":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:100","type":"CtReturnImpl","sourcecode":"return txt.toUpperCase(java.util.Locale.java.util.Locale.java.util.Locale)"},"status":0},{"failures":[],"tindex":"430fdf63-3d6a-11e6-8d5f-0b8751936190","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:704","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"WR\")) {\n    result.append('R');\n    index += 2;\n} else {\n    if ((index == 0) && ((isVowel(charAt(value, (index + 1)))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, \"WH\")))) {\n        if (isVowel(charAt(value, (index + 1)))) {\n            result.append('A', 'F');\n        } else {\n            result.append('A');\n        }\n        index++;\n    } else if ((((index == ((value.length()) - 1)) && (isVowel(charAt(value, (index - 1))))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, \"EWSKI\", \"EWSKY\", \"OWSKI\", \"OWSKY\"))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, \"SCH\"))) {\n        result.appendAlternate('F');\n        index++;\n    } else if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, \"WICZ\", \"WITZ\")) {\n        result.append(\"TS\", \"FX\");\n        index += 4;\n    } else {\n        index++;\n    }\n}"},"variableMap":{"result":"result","this":"this","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:650","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 3), 2, \"OO\", \"ER\", \"EN\", \"UY\", \"ED\", \"EM\")) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 3), 2, \"ER\", \"EN\")) {\n        result.append(\"X\", \"SK\");\n    } else {\n        result.append(\"SK\");\n    }\n} else {\n    if (((index == 0) && (!(isVowel(charAt(value, 3))))) && ((charAt(value, 3)) != 'W')) {\n        result.append('X', 'S');\n    } else {\n        result.append('X');\n    }\n}"},"status":-2},{"failures":[0,1],"tindex":"430fdf64-3d6a-11e6-8d5f-9f5b88106bfd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:365","type":"CtUnaryOperatorImpl","sourcecode":"rightLength++"},"variableMap":{"rightLength":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:409","type":"CtAssignmentImpl","sourcecode":"results[0] = a"},"status":-1},{"failures":[2],"tindex":"430fdf65-3d6a-11e6-8d5f-9d956d32e02a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:306","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.codec.binary.Base64.this.byte[]) == (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[])"},"status":-1},{"failures":[],"tindex":"43100676-3d6a-11e6-8d5f-65d80074d3c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:199","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(ascii)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"bytes","ascii":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:392","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet, bytes, boolean)"},"status":-2},{"failures":[],"tindex":"43100677-3d6a-11e6-8d5f-a13e6b447f58","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:621","type":"CtReturnImpl","sourcecode":"return str"},"variableMap":{"str":"pattern"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:666","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.this.java.lang.String"},"status":-2},{"failures":[],"tindex":"43100678-3d6a-11e6-8d5f-834f77283f05","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:155","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(algorithm.toString(), key)"},"variableMap":{"key":"key","algorithm":"org.apache.commons.codec.digest.HmacAlgorithms.HMAC_SHA_384"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:117","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.getInitializedMac(org.apache.commons.codec.digest.HmacAlgorithms.org.apache.commons.codec.digest.HmacAlgorithms.org.apache.commons.codec.digest.HmacAlgorithms, key)"},"status":-2},{"failures":[3],"tindex":"43100679-3d6a-11e6-8d5f-b392429f48ed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:296","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md5(data))"},"variableMap":{"data":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:582","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.hmacSha384(key, valueToDigest))"},"status":-1},{"failures":[4,5,6,7,8,9],"tindex":"43102d8a-3d6a-11e6-8d5f-43c493a03ed2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:510","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n    @java.lang.Override\n    public boolean isMatch(final java.lang.CharSequence input) {\n        return (input.length()) == 0;\n    }\n}"},"variableMap":{"input":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:559","type":"CtIfImpl","sourcecode":"if (startsWith && endsWith) {\n    return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n        @java.lang.Override\n        public boolean isMatch(final java.lang.CharSequence input) {\n            return ((input.length()) == 1) && ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch);\n        }\n    };\n} else if (startsWith) {\n    return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n        @java.lang.Override\n        public boolean isMatch(final java.lang.CharSequence input) {\n            return ((input.length()) > 0) && ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch);\n        }\n    };\n} else if (endsWith) {\n    return new org.apache.commons.codec.language.bm.Rule.RPattern() {\n        @java.lang.Override\n        public boolean isMatch(final java.lang.CharSequence input) {\n            return ((input.length()) > 0) && ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(((input.length()) - 1)))) == shouldMatch);\n        }\n    };\n} "},"status":-1},{"failures":[10,11,12,13,14],"tindex":"43102d8b-3d6a-11e6-8d5f-f7e77258f861","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:296","type":"CtIfImpl","sourcecode":"if (lastChar == 'S') {\n    key.deleteCharAt(((key.length()) - 1));\n    lastChar = key.charAt(((key.length()) - 1));\n} "},"status":-1},{"failures":[],"tindex":"43102d8c-3d6a-11e6-8d5f-f938a4a4dabb","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:549","type":"CtAssignmentImpl","sourcecode":"lastChar = ch"},"variableMap":{"ch":"chr","lastChar":"chr"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:235","type":"CtAssignmentImpl","sourcecode":"char[][int] = chr"},"status":-2},{"failures":[],"tindex":"43102d8d-3d6a-11e6-8d5f-01305b9f7208","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:297","type":"CtInvocationImpl","sourcecode":"key.deleteCharAt(((key.length()) - 1))"},"variableMap":{"key":"sBuf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:196","type":"CtInvocationImpl","sourcecode":"sBuf.append(current)"},"status":-2},{"failures":[],"tindex":"4310549e-3d6a-11e6-8d5f-19ec68e93722","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:964","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value)"},"variableMap":{"alternate":"buffer","value":"org.apache.commons.codec.net.RFC1522Codec.SEP"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:75","type":"CtInvocationImpl","sourcecode":"buffer.append(org.apache.commons.codec.net.RFC1522Codec.org.apache.commons.codec.net.RFC1522Codec.char)"},"status":-2},{"failures":[15,16,17],"tindex":"4310549f-3d6a-11e6-8d5f-ebba940d5cf3","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:344","type":"CtAssignmentImpl","sourcecode":"nextChar = '-'"},"variableMap":{"nextChar":"last"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:271","type":"CtAssignmentImpl","sourcecode":"last = getMappingCode(str, 0)"},"status":-1},{"failures":[],"tindex":"431054a0-3d6a-11e6-8d5f-b50a80c914b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:98","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"n+\", \"N\")"},"variableMap":{"txt":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:262","type":"CtAssignmentImpl","sourcecode":"str = org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(str).replaceFirst(\"NN\")"},"status":-2},{"failures":[],"tindex":"431054a1-3d6a-11e6-8d5f-61e90a7cc61c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:364","type":"CtAssignmentImpl","sourcecode":"this.boolean = folding"},"variableMap":{"folding":"inExtendedComment"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:189","type":"CtAssignmentImpl","sourcecode":"inExtendedComment = true"},"status":-2},{"failures":[],"tindex":"431054a2-3d6a-11e6-8d5f-f95c644a862a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:193","type":"CtAssignmentImpl","sourcecode":"this.boolean = strict"},"variableMap":{"strict":"matches"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:365","type":"CtAssignmentImpl","sourcecode":"matches = substring.equals(test)"},"status":-2},{"failures":[],"tindex":"43107bb3-3d6a-11e6-8d5f-9de29392633c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:705","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha512(data))"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:310","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.md5(data))"},"status":-2},{"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"tindex":"43107bb4-3d6a-11e6-8d5f-b35e4d229c26","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.B64:75","type":"CtInvocationImpl","sourcecode":"saltString.append(org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.java.lang.String.charAt(new java.util.Random().nextInt(org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.java.lang.String.length())))"},"variableMap":{"saltString":"buffer","org.apache.commons.codec.digest.B64.B64T":"org.apache.commons.codec.digest.B64.B64T"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.B64:61","type":"CtInvocationImpl","sourcecode":"buffer.append(org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.java.lang.String.charAt((w & 63)))"},"status":-1},{"failures":[35],"tindex":"43107bb5-3d6a-11e6-8d5f-1d674cd73fb3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:185","type":"CtInvocationImpl","sourcecode":"code.append('S')"},"variableMap":{"code":"alternate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:992","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.this.java.lang.StringBuilder.append(value.substring(0, addChars))"},"status":-1},{"failures":[36,35],"tindex":"43107bb6-3d6a-11e6-8d5f-5b6982196a38","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:291","type":"CtInvocationImpl","sourcecode":"result.append('S', 'X')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:446","type":"CtInvocationImpl","sourcecode":"result.append('K')"},"status":-1},{"failures":[37,4,38,39,40,41,42,5,43,44,45,46,47,48,6,7,8,9],"tindex":"43107bb7-3d6a-11e6-8d5f-6553a74a6baa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:427","type":"CtAssignmentImpl","sourcecode":"line = line.trim()"},"status":-1},{"failures":[19,20,21,22,23,24,25,26],"tindex":"43107bb8-3d6a-11e6-8d5f-b3817319a270","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:498","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(tempResult, ((byte)(0)))"},"variableMap":{"tempResult":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:276","type":"CtInvocationImpl","sourcecode":"altCtx.update(keyBytes)"},"status":-1},{"failures":[49,50,51,52,53,54],"tindex":"43107bb9-3d6a-11e6-8d5f-f3d4fdcb58f1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:118","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"3\", \"\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:99","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"s+\", \"S\")"},"status":-1},{"failures":[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99],"tindex":"43107bba-3d6a-11e6-8d5f-47ea239b3311","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:445","type":"CtIfImpl","sourcecode":"if (result >= 0) {\n    context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int);\n    context.int = ((context.int) << (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int)) + result;\n    if ((context.int) == 0) {\n        buffer[((context.int)++)] = ((byte)(((context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n    } \n} "},"status":-1},{"failures":[100,101],"tindex":"4310a2cb-3d6a-11e6-8d5f-316f55bd4eb7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:117","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[]"},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"byteArray"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:299","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHex(byteArray)"},"status":-1},{"failures":[],"tindex":"4310a2cc-3d6a-11e6-8d5f-39660af51990","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:235","type":"CtAssignmentImpl","sourcecode":"ii = keyLen"},"variableMap":{"ii":"t","keyLen":"t"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:408","type":"CtOperatorAssignmentImpl","sourcecode":"b ^= t"},"status":-2},{"failures":[102,103,104,105,106,107,108,109,110,111,112,113,114,115,116],"tindex":"4310a2cd-3d6a-11e6-8d5f-29b55ce5ffd2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:222","type":"CtLocalVariableImpl","sourcecode":"int int = keyBytes.int"},"variableMap":{"keyBytes":"bytes","length":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:358","type":"CtLocalVariableImpl","sourcecode":"final int int = bytes[i]"},"status":-1},{"failures":[],"tindex":"4310a2ce-3d6a-11e6-8d5f-bf0c595b66d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:222","type":"CtWhileImpl","sourcecode":"while (ii > 0) {\n    ctx.update(finalb, 0, (ii > 16 ? 16 : ii));\n    ii -= 16;\n}"},"variableMap":{"ii":"blocksize","finalb":"altResult","ctx":"ctx"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:371","type":"CtInvocationImpl","sourcecode":"ctx.update(altResult, 0, blocksize)"},"status":-2},{"failures":[],"tindex":"4310a2cf-3d6a-11e6-8d5f-5fe63cf07a20","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:139","type":"CtIfImpl","sourcecode":"if (charset.equals(\"\")) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\");\n} "},"variableMap":{"charset":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:48","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < len ; i++) {\n    if (java.lang.Character.isLetter(str.charAt(i))) {\n        chars[(count++)] = str.charAt(i);\n    } \n}"},"status":-2},{"failures":[117,118,119],"tindex":"4310c8e0-3d6a-11e6-8d5f-3fc7d971582e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:211","type":"CtOperatorAssignmentImpl","sourcecode":"l_raw[ii] |= org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits]"},"status":-1},{"failures":[49,120,50,121,54],"tindex":"4310c8e1-3d6a-11e6-8d5f-dbd36a16a389","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:103","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"w\", \"2\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:114","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"r\", \"2\")"},"status":-1},{"failures":[50,54],"tindex":"4310c8e2-3d6a-11e6-8d5f-a128789b2105","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:99","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"w3\", \"W3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:102","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"k+\", \"K\")"},"status":-1},{"failures":[],"tindex":"4310c8e3-3d6a-11e6-8d5f-d92049b2d443","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:213","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.ColognePhonetic.CologneBuffer.this.int = 0"},"variableMap":{"length":"org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:303","type":"CtAssignmentImpl","sourcecode":"this.int = org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int"},"status":-2},{"failures":[],"tindex":"4310c8e4-3d6a-11e6-8d5f-6d2709b4a221","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:297","type":"CtWhileImpl","sourcecode":"while (cp < (keyLen - blocksize)) {\n    java.lang.System.arraycopy(tempResult, 0, pBytes, cp, blocksize);\n    cp += blocksize;\n}"},"variableMap":{"blocksize":"org.apache.commons.codec.digest.Md5Crypt.ROUNDS","tempResult":"finalb","pBytes":"saltBytes","keyLen":"org.apache.commons.codec.digest.Md5Crypt.ROUNDS","cp":"org.apache.commons.codec.digest.Md5Crypt.ROUNDS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:256","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < (org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.int) ; i++) {\n    ctx1 = org.apache.commons.codec.digest.DigestUtils.getMd5Digest();\n    if ((i & 1) != 0) {\n        ctx1.update(keyBytes);\n    } else {\n        ctx1.update(finalb, 0, org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.int);\n    }\n    if ((i % 3) != 0) {\n        ctx1.update(saltBytes);\n    } \n    if ((i % 7) != 0) {\n        ctx1.update(keyBytes);\n    } \n    if ((i & 1) != 0) {\n        ctx1.update(finalb, 0, org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.int);\n    } else {\n        ctx1.update(keyBytes);\n    }\n    finalb = ctx1.digest();\n}"},"status":-2},{"failures":[122],"tindex":"4310c8e5-3d6a-11e6-8d5f-c1b694ee1639","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:128","type":"CtReturnImpl","sourcecode":"return txt.substring(0, org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String.length())"},"variableMap":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"key","txt":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Crypt:92","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Crypt.crypt(key, null)"},"status":-1},{"failures":[97,98,123,112,113,114,124,116],"tindex":"4310c8e6-3d6a-11e6-8d5f-d3b58a23b6c3","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:185","type":"CtInvocationImpl","sourcecode":"code.append('S')"},"variableMap":{"code":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:76","type":"CtInvocationImpl","sourcecode":"buffer.append(org.apache.commons.codec.net.RFC1522Codec.this.getEncoding())"},"status":-1},{"failures":[],"tindex":"4310c8e7-3d6a-11e6-8d5f-af51d2ede435","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:316","type":"CtAssignmentImpl","sourcecode":"this.boolean = concat"},"variableMap":{"concat":"matches"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:346","type":"CtAssignmentImpl","sourcecode":"matches = (string.charAt((index - 1))) == c"},"status":-2},{"failures":[],"tindex":"4310c8e8-3d6a-11e6-8d5f-b558b8c38d03","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:320","type":"CtIfImpl","sourcecode":"if (text == null) {\n    return null;\n} "},"variableMap":{"text":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:259","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-2},{"failures":[0,1],"tindex":"4310c8e9-3d6a-11e6-8d5f-8b1199f1e4e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:345","type":"CtAssignmentImpl","sourcecode":"c = results[1]"},"status":-1},{"failures":[],"tindex":"4310c8ea-3d6a-11e6-8d5f-71420c9e0a7a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:283","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[0], finalb[6], finalb[12], 4, passwd)"},"variableMap":{"finalb":"altResult","passwd":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:477","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[50], altResult[8], altResult[29], 4, buffer)"},"status":-2},{"failures":[],"tindex":"4310c8eb-3d6a-11e6-8d5f-51b3104bb5c0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (u == 0) {\n    y++;\n    u = 128;\n} "},"variableMap":{"u":"index","y":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:466","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : branches) {\n    sb.append(branch);\n    if ((++index) < (branches.int)) {\n        sb.append('|');\n    } \n}"},"status":-2},{"failures":[],"tindex":"4310effc-3d6a-11e6-8d5f-45e3a78053b2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:495","type":"CtLocalVariableImpl","sourcecode":"char char = '\u0000'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:332","type":"CtLocalVariableImpl","sourcecode":"char char = '/'"},"status":-2},{"failures":[125,126,127,128,129,130,131],"tindex":"4310effd-3d6a-11e6-8d5f-ed609018c6a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:299","type":"CtLocalVariableImpl","sourcecode":"final int int = (name2.length()) - 1"},"variableMap":{"name2":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:45","type":"CtLocalVariableImpl","sourcecode":"final int int = str.length()"},"status":-1},{"failures":[24,25,26],"tindex":"4310effe-3d6a-11e6-8d5f-f118dc0001e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:483","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[56], altResult[14], altResult[35], 4, buffer)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:470","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[22], altResult[43], altResult[1], 4, buffer)"},"status":-1},{"failures":[6,7,8,9],"tindex":"4310efff-3d6a-11e6-8d5f-39ed7400942f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:409","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = name.substring(0, 1)"},"variableMap":{"name":"ph"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:388","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = ph.substring(1, ((ph.length()) - 1))"},"status":-1},{"failures":[],"tindex":"4310f000-3d6a-11e6-8d5f-ddf1ee76c12a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!ignoreCase) {\n    return false;\n} "},"variableMap":{"ignoreCase":"found"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:231","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.boolean"},"status":-2},{"failures":[],"tindex":"4310f001-3d6a-11e6-8d5f-a3c4f0e421ee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:504","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(saltBytes, ((byte)(0)))"},"status":0},{"failures":[4,39,40,5,6,7,8,9],"tindex":"4310f002-3d6a-11e6-8d5f-d73fec84c9cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:210","type":"CtIfImpl","sourcecode":"if (rules != null) {\n    for (final org.apache.commons.codec.language.bm.Rule org.apache.commons.codec.language.bm.Rule : rules) {\n        final java.lang.String java.lang.String = rule.getPattern();\n        patternLength = pattern.length();\n        if (rule.patternAndContextMatches(org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.java.lang.CharSequence, org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.int)) {\n            org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder.apply(rule.getPhoneme(), int);\n            org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.boolean = true;\n            break;\n        } \n    }\n} "},"status":-1},{"failures":[132,133,134,135,136,137,138,139,140],"tindex":"4310f003-3d6a-11e6-8d5f-4349a66c8581","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:462","type":"CtInvocationImpl","sourcecode":"sb.append(\"Rule\")"},"variableMap":{"sb":"sb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:388","type":"CtInvocationImpl","sourcecode":"sb.append(ch)"},"status":-1},{"failures":[55,56,57,58,59,60,61,62,63,64,65,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,88,90,91,92,93,94,95,96,97,98,99],"tindex":"4310f004-3d6a-11e6-8d5f-3d9a28c01c6a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:450","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = ((byte)(((context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-1},{"failures":[],"tindex":"4310f005-3d6a-11e6-8d5f-bd08890b95a7","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:399","type":"CtAssignmentImpl","sourcecode":"b[(offset++)] = ((byte)(iValue & 255))"},"variableMap":{"b":"encodeTable","offset":"pos","iValue":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:390","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][((context.int) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))]"},"status":-2},{"failures":[],"tindex":"4310f006-3d6a-11e6-8d5f-23d1f7e752e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:76","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"cy\", \"sy\")"},"status":0},{"failures":[],"tindex":"43111717-3d6a-11e6-8d5f-1b4b33ca8da1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"variableMap":{"terminator":"num","to":"num"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.B64:74","type":"CtForImpl","sourcecode":"for (int int = 1 ; i <= num ; i++) {\n    saltString.append(org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.java.lang.String.charAt(new java.util.Random().nextInt(org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.java.lang.String.length())));\n}"},"status":-2},{"failures":[4,39,40,5,6,7,8,9],"tindex":"43111718-3d6a-11e6-8d5f-9d6b14aca913","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:923","type":"CtAssignmentImpl","sourcecode":"result = true"},"variableMap":{"result":"found"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:207","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication.this.boolean = false"},"status":-1},{"failures":[],"tindex":"43111719-3d6a-11e6-8d5f-4b17b2ec2ee0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:64","type":"CtReturnImpl","sourcecode":"return langs.isEmpty() ? org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet : new org.apache.commons.codec.language.bm.Languages.SomeLanguages(langs)"},"variableMap":{"langs":"languages","org.apache.commons.codec.language.bm.Languages.NO_LANGUAGES":"org.apache.commons.codec.language.bm.Languages.NO_LANGUAGES"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:116","type":"CtIfImpl","sourcecode":"if (other == (org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet)) {\n    return other;\n} else if (other == (org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet)) {\n    return org.apache.commons.codec.language.bm.Languages.SomeLanguages.this;\n} else {\n    final org.apache.commons.codec.language.bm.Languages.SomeLanguages org.apache.commons.codec.language.bm.Languages.SomeLanguages = ((org.apache.commons.codec.language.bm.Languages.SomeLanguages)(other));\n    final java.util.Set<java.lang.String> java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>(java.lang.Math.min(java.util.Set<java.lang.String>.size(), sl.java.util.Set<java.lang.String>.size()));\n    for (java.lang.String java.lang.String : java.util.Set<java.lang.String>) {\n        if (sl.java.util.Set<java.lang.String>.contains(lang)) {\n            ls.add(lang);\n        } \n    }\n    return org.apache.commons.codec.language.bm.Languages.LanguageSet.from(ls);\n}"},"status":-2},{"failures":[],"tindex":"4311171a-3d6a-11e6-8d5f-f5570c46b939","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:87","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('>')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:73","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('(')"},"status":0},{"failures":[132,133,134,135,136,137,138,139,140,141,142,143,144],"tindex":"4311171b-3d6a-11e6-8d5f-4330e8e89e39","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:273","type":"CtAssignmentImpl","sourcecode":"line = line.substring(0, cmtI)"},"status":-1},{"failures":[145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187],"tindex":"4311171c-3d6a-11e6-8d5f-1169cf331aa0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:293","type":"CtIfImpl","sourcecode":"if (((leftCharacter.length()) != 1) || ((rightCharacter.length()) != 1)) {\n    throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + rawLine) + \" in \") + location));\n} "},"variableMap":{"rawLine":"replacedName","leftCharacter":"replacedName","rightCharacter":"replacedName","location":"replacedName"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:387","type":"CtIfImpl","sourcecode":"if (replacedName.contains(dc)) {\n    final java.lang.String java.lang.String = dc.substring(0, 1);\n    replacedName = replacedName.replace(dc, singleLetter);\n} "},"status":-1},{"failures":[19,20,21,22,23,24,25,26],"tindex":"4311171d-3d6a-11e6-8d5f-bbef18e65669","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:249","type":"CtInvocationImpl","sourcecode":"ctx.update(altResult, 0, blocksize)"},"status":-1},{"failures":[107,109,188,189,190],"tindex":"4311171e-3d6a-11e6-8d5f-eb4571e1630a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:395","type":"CtReturnImpl","sourcecode":"return a"},"variableMap":{"a":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:222","type":"CtIfImpl","sourcecode":"if (encode) {\n    return org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(b, buffer);\n} else {\n    buffer.write(b);\n    return 1;\n}"},"status":-1},{"failures":[191,122,30],"tindex":"4311171f-3d6a-11e6-8d5f-7730de09f777","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:541","type":"CtAssignmentImpl","sourcecode":"salt = (org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8))"},"status":-1},{"failures":[188],"tindex":"43111720-3d6a-11e6-8d5f-e538330d091d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:169","type":"CtInvocationImpl","sourcecode":"buffer.write(' ')"},"variableMap":{"buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:315","type":"CtInvocationImpl","sourcecode":"buffer.write(org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":-1},{"failures":[],"tindex":"43111721-3d6a-11e6-8d5f-6929b35b28b6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:187","type":"CtIfImpl","sourcecode":"if (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((sumLength >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (sumLength <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (sumLength == (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"i","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"diff","org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN":"diff","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"i","org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"diff","minRating":"i","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"i","org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR":"i","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"i","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"diff","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:117","type":"CtIfImpl","sourcecode":"if ((es1.charAt(i)) == (es2.charAt(i))) {\n    diff++;\n} "},"status":-2},{"failures":[37,4,38,39,40,5,43,44,45,46,47,48,6,7,8,9],"tindex":"43113e32-3d6a-11e6-8d5f-bf764995fd67","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:188","type":"CtIfImpl","sourcecode":"if (line.startsWith(org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n    inExtendedComment = true;\n} else if ((line.length()) > 0) {\n    ls.add(line);\n} "},"status":-1},{"failures":[],"tindex":"43113e33-3d6a-11e6-8d5f-37be65be82dd","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:185","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getMd2Digest().digest(data)"},"variableMap":{"data":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:190","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(tmp)"},"status":-2},{"failures":[140],"tindex":"43113e34-3d6a-11e6-8d5f-0f41f9461e50","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:290","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = parts[0]"},"variableMap":{"parts":"parts"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:291","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = parts[1]"},"status":-1},{"failures":[19,20,21,22,23,24,25,26],"tindex":"43113e35-3d6a-11e6-8d5f-7df1a680bc11","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:296","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(keyBytes, ((byte)(0)))"},"variableMap":{"keyBytes":"saltBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:181","type":"CtInvocationImpl","sourcecode":"ctx.update(saltBytes)"},"status":-1},{"failures":[192,193,36,35],"tindex":"43113e36-3d6a-11e6-8d5f-8725b0369c1d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:785","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"43113e37-3d6a-11e6-8d5f-cf5e578945cd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:312","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.this.java.nio.charset.Charset"},"variableMap":{"charset":"charset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:548","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.this.java.nio.charset.Charset"},"status":0},{"failures":[97,98,123],"tindex":"43113e38-3d6a-11e6-8d5f-496b64951cb5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:392","type":"CtReturnImpl","sourcecode":"return replacedName"},"variableMap":{"replacedName":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:162","type":"CtReturnImpl","sourcecode":"return encode(value, org.apache.commons.codec.net.BCodec.this.getCharset())"},"status":-1},{"failures":[],"tindex":"43113e39-3d6a-11e6-8d5f-475435b859dd","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:504","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[20,23],"tindex":"43113e3a-3d6a-11e6-8d5f-dd04f52b1cc3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:211","type":"CtInvocationImpl","sourcecode":"code.append('T')"},"variableMap":{"code":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:427","type":"CtInvocationImpl","sourcecode":"buffer.append(\"$\")"},"status":-1},{"failures":[],"tindex":"43113e3b-3d6a-11e6-8d5f-6d489bf9cf53","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:766","type":"CtLocalVariableImpl","sourcecode":"final int int = (bitlen / 8) - len"},"variableMap":{"bitlen":"length","len":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:201","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.char[].int"},"status":-2},{"failures":[],"tindex":"43113e3c-3d6a-11e6-8d5f-81d5c2d6b50d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:742","type":"CtInvocationImpl","sourcecode":"mac.reset()"},"variableMap":{"mac":"mac"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:183","type":"CtInvocationImpl","sourcecode":"mac.init(keySpec)"},"status":0},{"failures":[],"tindex":"4311654d-3d6a-11e6-8d5f-979d0519b36a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:662","type":"CtIfImpl","sourcecode":"if ((binaryData == null) || ((binaryData.int) == 0)) {\n    return binaryData;\n} "},"variableMap":{"binaryData":"pArray","length":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:406","type":"CtIfImpl","sourcecode":"if ((pArray == null) || ((pArray.int) == 0)) {\n    return pArray;\n} "},"status":-2},{"failures":[],"tindex":"4311654e-3d6a-11e6-8d5f-dd5e6f0dacec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:645","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = pattern"},"variableMap":{"pattern":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:413","type":"CtAssignmentImpl","sourcecode":"name = name.replaceAll(\"I\", org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"status":-2},{"failures":[194,118,195],"tindex":"4311654f-3d6a-11e6-8d5f-43e397aaeca0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:230","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(finalb, ((byte)(0)))"},"variableMap":{"finalb":"l_raw"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:181","type":"CtForImpl","sourcecode":"for (int int = 0, int int = (ascii.int) - 1 ; ii < (l_raw.int) ; ii++ , jj -= 8) {\n    for (int int = 0 ; bits < (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[].int) ; ++bits) {\n        if ((ascii[(jj - bits)]) == '1') {\n            l_raw[ii] |= org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits];\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"43116550-3d6a-11e6-8d5f-8d392348b410","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:305","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[196,197],"tindex":"43116551-3d6a-11e6-8d5f-97e550562814","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:71","type":"CtIfImpl","sourcecode":"if (cs1 == cs2) {\n    return true;\n} "},"status":-1},{"failures":[193],"tindex":"43116552-3d6a-11e6-8d5f-9bc1f35ae984","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:281","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:217","type":"CtReturnImpl","sourcecode":"return doubleMetaphone(value)"},"status":-1},{"failures":[],"tindex":"43116553-3d6a-11e6-8d5f-5966a5a28149","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:208","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:158","type":"CtLocalVariableImpl","sourcecode":"final int int = java.io.InputStream.read(buf)"},"status":-2},{"failures":[129],"tindex":"43116554-3d6a-11e6-8d5f-db6bfe81127f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:136","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:132","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.SoundexUtils.difference(org.apache.commons.codec.language.Soundex.this, s1, s2)"},"status":-1},{"failures":[198,199,200,201,202,203,204,205,206,207,208,209,210,211,212],"tindex":"43116555-3d6a-11e6-8d5f-a7cf225fae24","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:284","type":"CtReturnImpl","sourcecode":"return \"ANY_LANGUAGE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:335","type":"CtReturnImpl","sourcecode":"return code.toString()"},"status":-1},{"failures":[213,214,215],"tindex":"43116556-3d6a-11e6-8d5f-e991cadd905d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:278","type":"CtForImpl","sourcecode":"for (int int = 0, int int = (l_ascii.int) - 1 ; ii < (raw.int) ; ii++ , jj -= 8) {\n    for (int int = 0 ; bits < (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[].int) ; ++bits) {\n        if (((raw[ii]) & (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits])) == 0) {\n            l_ascii[(jj - bits)] = '0';\n        } else {\n            l_ascii[(jj - bits)] = '1';\n        }\n    }\n}"},"status":-1},{"failures":[216,217,218,219,220,3,221,222,223,224,225,226,227,228,229,230,231,232,233,234,100,235,236],"tindex":"43116557-3d6a-11e6-8d5f-f900a08a0a7e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:321","type":"CtAssignmentImpl","sourcecode":"name2Char[i] = ' '"},"variableMap":{"name2Char":"out","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:145","type":"CtAssignmentImpl","sourcecode":"out[(j++)] = toDigits[((240 & (data[i])) >>> 4)]"},"status":-1},{"failures":[36,35],"tindex":"43116558-3d6a-11e6-8d5f-6bb463bf95d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:728","type":"CtOperatorAssignmentImpl","sourcecode":"index += 4"},"variableMap":{"index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:343","type":"CtOperatorAssignmentImpl","sourcecode":"index += 3"},"status":-1},{"failures":[],"tindex":"43116559-3d6a-11e6-8d5f-8d7fe3b8a791","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:297","type":"CtWhileImpl","sourcecode":"while (cp < (keyLen - blocksize)) {\n    java.lang.System.arraycopy(tempResult, 0, pBytes, cp, blocksize);\n    cp += blocksize;\n}"},"variableMap":{"blocksize":"length","tempResult":"lineSeparator","pBytes":"buffer","keyLen":"lineLength","cp":"currentLinePos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:392","type":"CtIfImpl","sourcecode":"if (((int) > 0) && ((int) <= (context.int))) {\n    java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int);\n    context.int += byte[].int;\n    context.int = 0;\n} "},"status":-2},{"failures":[],"tindex":"4311655a-3d6a-11e6-8d5f-2fe90f8f2034","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:419","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = input.substring(((l.length()) + 1))"},"variableMap":{"input":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY","l":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:302","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String"},"status":-2},{"failures":[192,193,36,35],"tindex":"43118c6b-3d6a-11e6-8d5f-7fb7674229b2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:559","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-1},{"failures":[237],"tindex":"43118c6c-3d6a-11e6-8d5f-15043f0c0d10","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:128","type":"CtReturnImpl","sourcecode":"return txt.substring(0, org.apache.commons.codec.language.Caverphone2.org.apache.commons.codec.language.Caverphone2.java.lang.String.length())"},"variableMap":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"keyBytes","txt":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:105","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(keyBytes.getBytes(org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset))"},"status":-1},{"failures":[],"tindex":"43118c6d-3d6a-11e6-8d5f-3793f3a856ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:180","type":"CtReturnImpl","sourcecode":"return digit"},"variableMap":{"digit":"minRating"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:199","type":"CtReturnImpl","sourcecode":"return minRating"},"status":-2},{"failures":[58,59,60,61,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99],"tindex":"43118c6e-3d6a-11e6-8d5f-b997216a36a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"pArray"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:410","type":"CtInvocationImpl","sourcecode":"decode(pArray, 0, pArray.int, context)"},"status":-1},{"failures":[],"tindex":"43118c6f-3d6a-11e6-8d5f-19d32ec9d027","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:212","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Nysiis encode is not of type java.lang.String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:671","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((\"Input array too big, the output array would be bigger (\" + len) + \") than the specified maximum size of \") + maxResultSize))"},"status":-2},{"failures":[],"tindex":"43118c70-3d6a-11e6-8d5f-c380059bef66","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (to == terminator) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"variableMap":{"terminator":"org.apache.commons.codec.language.DaitchMokotoffSoundex.MAX_LENGTH","to":"org.apache.commons.codec.language.DaitchMokotoffSoundex.MAX_LENGTH"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:138","type":"CtIfImpl","sourcecode":"if (append && ((java.lang.StringBuilder.length()) < (org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.int))) {\n    java.lang.StringBuilder.append(replacement);\n    if ((java.lang.StringBuilder.length()) > (org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.int)) {\n        java.lang.StringBuilder.delete(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.int, java.lang.StringBuilder.length());\n    } \n    java.lang.String = null;\n} "},"status":-2},{"failures":[55],"tindex":"43118c71-3d6a-11e6-8d5f-efaf31ca60bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:432","type":"CtIfImpl","sourcecode":"if (inAvail < 0) {\n    context.boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"43118c72-3d6a-11e6-8d5f-431700dcd165","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:357","type":"CtReturnImpl","sourcecode":"return matches"},"variableMap":{"matches":"strict"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:237","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.this.boolean"},"status":0},{"failures":[],"tindex":"43118c73-3d6a-11e6-8d5f-15ea1542ac39","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:300","type":"CtAssignmentImpl","sourcecode":"this.byte[] = new byte[lineSeparator.int]"},"status":-2},{"failures":[],"tindex":"43118c74-3d6a-11e6-8d5f-c137fa0c6b24","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:260","type":"CtAssignmentImpl","sourcecode":"altResult = ctx.digest()"},"variableMap":{"altResult":"finalb","ctx":"ctx1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:277","type":"CtAssignmentImpl","sourcecode":"finalb = ctx1.digest()"},"status":-2},{"failures":[],"tindex":"43118c75-3d6a-11e6-8d5f-65495f077f24","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:893","type":"CtIfImpl","sourcecode":"if ((input.length()) == 0) {\n    return null;\n} "},"variableMap":{"input":"charsetName"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:284","type":"CtReturnImpl","sourcecode":"return new java.lang.String(bytes , charsetName)"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}