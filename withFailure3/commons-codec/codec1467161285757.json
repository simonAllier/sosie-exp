{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":53,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":77,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":75,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":76,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":95,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":78,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched":86,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":189,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":50,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":164,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":135,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary":183,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":26,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":91,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":83,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":13,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":14,"org.apache.commons.codec.language.NysiisTest.testCap":96,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot":67,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":18,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":147,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":0,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":15,"org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant":152,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":16,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":146,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":1,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":35,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":151,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":130,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":22,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":196,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":197,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":3,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":150,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":191,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize":141,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":61,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":188,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":49,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected":70,"org.apache.commons.codec.language.SoundexTest.testB650":74,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":56,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":9,"org.apache.commons.codec.language.SoundexTest.testNewInstance":79,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched":89,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":124,"org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid":45,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":133,"org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull":4,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched":93,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":143,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":168,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":163,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":28,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":34,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":21,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected":85,"org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull":54,"org.apache.commons.codec.language.NysiisTest.testDropBy":107,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched":92,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":2,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":60,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":169,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch":65,"org.apache.commons.codec.binary.Base64Test.testUUID":10,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":156,"org.apache.commons.codec.binary.Base64Test.testSingletons":118,"org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt":153,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":137,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":24,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize":131,"org.apache.commons.codec.binary.Base64Test.testPairs":113,"org.apache.commons.codec.language.NysiisTest.testRule1":100,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":136,"org.apache.commons.codec.language.NysiisTest.testRule6":102,"org.apache.commons.codec.language.NysiisTest.testRule5":101,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":185,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":173,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":80,"org.apache.commons.codec.language.NysiisTest.testBran":103,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":110,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched":87,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":33,"org.apache.commons.codec.net.URLCodecTest.testEncodeObjects":148,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":116,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":177,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":42,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":117,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":182,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2":181,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":187,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":139,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":71,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":160,"org.apache.commons.codec.digest.B64Test.testB64from24bit":171,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":48,"org.apache.commons.codec.language.NysiisTest.testDad":97,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":127,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":12,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":47,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":94,"org.apache.commons.codec.language.NysiisTest.testDan":98,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":129,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":43,"org.apache.commons.codec.language.NysiisTest.testSnat":105,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize":140,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":59,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":5,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":58,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":32,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":31,"org.apache.commons.codec.binary.Base64Test.testTriplets":8,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":170,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":44,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":125,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":19,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":29,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":112,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":186,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":81,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":82,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":155,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":161,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull":180,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":190,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":158,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":115,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":128,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":149,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":165,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4":66,"org.apache.commons.codec.binary.Base64Test.testNonBase64Test":121,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":57,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":178,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch":69,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":6,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":38,"org.apache.commons.codec.digest.CryptTest.testCryptWithBytes":154,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall":172,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":30,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":184,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt":176,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched":84,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":179,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":193,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":167,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":37,"org.apache.commons.codec.language.NysiisTest.testTranan":109,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched":90,"org.apache.commons.codec.language.NysiisTest.testFal":99,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":145,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0":64,"org.apache.commons.codec.language.NysiisTest.testSnad":104,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":157,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall":174,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":46,"org.apache.commons.codec.binary.Base64Test.testDecodePadOnly":120,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":72,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":73,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize":132,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":27,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":17,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":63,"org.apache.commons.codec.binary.Base64Test.testBase64":25,"org.apache.commons.codec.language.Caverphone1Test.testEncodeNull":192,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":52,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":20,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":39,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":166,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":159,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":162,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":122,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":142,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":106,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":111,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":36,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected":68,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":134,"org.apache.commons.codec.binary.Base64Test.testCodec68":119,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":195,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":175,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":126,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":194,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":123,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":40,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched":88,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":55,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":7,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":138,"org.apache.commons.codec.language.NysiisTest.testOthers":108,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":23,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":62,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":144,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":41,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":51,"org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked":114,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":11},"transformations":[{"failures":[],"tindex":"242c79e4-3d93-11e6-a8a9-cd30870220f7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:889","type":"CtIfImpl","sourcecode":"if (input == null) {\n    return null;\n} "},"variableMap":{"input":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:247","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"242ca0f5-3d93-11e6-a8a9-3bafa324ad44","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:208","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:758","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[0,1,2,3],"tindex":"242ca0f6-3d93-11e6-a8a9-c50da9f972f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:348","type":"CtAssignmentImpl","sourcecode":"code = '0'"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:355","type":"CtAssignmentImpl","sourcecode":"code = '1'"},"status":-1},{"failures":[4],"tindex":"242cc807-3d93-11e6-a8a9-5fdbcee0b16d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:139","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"242cc808-3d93-11e6-a8a9-997c7d5f3bee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:190","type":"CtAssignmentImpl","sourcecode":"this.java.nio.charset.Charset = org.apache.commons.codec.binary.Hex.org.apache.commons.codec.binary.Hex.java.nio.charset.Charset"},"variableMap":{"charset":"charset","org.apache.commons.codec.binary.Hex.DEFAULT_CHARSET":"charset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:149","type":"CtAssignmentImpl","sourcecode":"this.java.nio.charset.Charset = charset"},"status":-2},{"failures":[5,6,7],"tindex":"242cc809-3d93-11e6-a8a9-5f4518c20be3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:487","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[18], altResult[39], altResult[60], 4, buffer)"},"status":-1},{"failures":[],"tindex":"242cc80a-3d93-11e6-a8a9-77bbe86b9b23","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:449","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = ((byte)(((context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)))"},"variableMap":{"ibitWorkArea":"ibitWorkArea","pos":"ibitWorkArea","org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS":"pos","context":"context","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:451","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-2},{"failures":[1],"tindex":"242cc80b-3d93-11e6-a8a9-b999c0953431","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:433","type":"CtForImpl","sourcecode":"for (int int = 0 ; index < (chrs.int) ; index++) {\n    if ((chrs[index]) > 'Z') {\n        for (final char[] char[] : org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[][]) {\n            if ((chrs[index]) == (element[0])) {\n                chrs[index] = element[1];\n                break;\n            } \n        }\n    } \n}"},"status":-1},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"tindex":"242cc80c-3d93-11e6-a8a9-e9258c677e94","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:390","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = byte[][((context.int) & (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int))]"},"status":-1},{"failures":[],"tindex":"242cc80d-3d93-11e6-a8a9-3f7316c7c541","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:369","type":"CtIfImpl","sourcecode":"if (lastCode == '/') {\n    if (org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)) {\n        code = '4';\n    } else {\n        code = '8';\n    }\n} else {\n    if ((org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], lastChar)) || (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.char[], nextChar)))) {\n        code = '8';\n    } else {\n        code = '4';\n    }\n}"},"status":-2},{"failures":[],"tindex":"242cef1e-3d93-11e6-a8a9-19c65fbad5d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:391","type":"CtAssignmentImpl","sourcecode":"code = chr"},"variableMap":{"code":"code","chr":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:355","type":"CtAssignmentImpl","sourcecode":"code = '1'"},"status":-2},{"failures":[43,44],"tindex":"242cef1f-3d93-11e6-a8a9-5fdb2c6891aa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:297","type":"CtAssignmentImpl","sourcecode":"left = (t >>> 1) | (t << 31)"},"status":-1},{"failures":[45],"tindex":"242cef20-3d93-11e6-a8a9-e1b324d13c3c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:700","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:140","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\")"},"status":-1},{"failures":[],"tindex":"242cef21-3d93-11e6-a8a9-35bfbfbd30c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:742","type":"CtInvocationImpl","sourcecode":"mac.reset()"},"status":0},{"failures":[46,47,48,49,50,5,6,7],"tindex":"242cef22-3d93-11e6-a8a9-27de942dbb45","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:118","type":"CtUnaryOperatorImpl","sourcecode":"diff++"},"variableMap":{"diff":"cp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:338","type":"CtAssignmentImpl","sourcecode":"cp = 0"},"status":-1},{"failures":[51,52,53],"tindex":"242cef23-3d93-11e6-a8a9-edfe47accdb5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:532","type":"CtInvocationImpl","sourcecode":"result.append('J', ' ')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:518","type":"CtIfImpl","sourcecode":"if ((((index == 0) && ((charAt(value, (index + 4))) == ' ')) || ((value.length()) == 4)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, \"SAN \"))) {\n    result.append('H');\n} else {\n    result.append('J', 'H');\n}"},"status":-1},{"failures":[],"tindex":"242cef24-3d93-11e6-a8a9-1db3ce5e5d59","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:105","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(40)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:249","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(((prefix + saltString) + \"$\"))"},"status":-2},{"failures":[],"tindex":"242cef25-3d93-11e6-a8a9-a756705be588","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:519","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    len += (((len + (int)) - 1) / (int)) * (int);\n} "},"variableMap":{"chunkSeparatorLength":"result","len":"lbitWorkArea","lineLength":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:355","type":"CtIfImpl","sourcecode":"if (result >= 0) {\n    context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int);\n    context.long = ((context.long) << (org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int)) + result;\n    if ((context.int) == 0) {\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 32) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 24) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)(((context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n        buffer[((context.int)++)] = ((byte)((context.long) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n    } \n} "},"status":-2},{"failures":[54],"tindex":"242d1636-3d93-11e6-a8a9-9bdd0121f4ca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:226","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"242d1637-3d93-11e6-a8a9-0f3c7e27c759","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:700","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:149","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(((\"This codec cannot decode \" + encoding) + \" encoded content\"))"},"status":-2},{"failures":[55,56,57,58,59,60,61,62,63],"tindex":"242d1638-3d93-11e6-a8a9-fd3a2cc38948","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:267","type":"CtIfImpl","sourcecode":"if (line.startsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    inMultilineComment = true;\n} else {\n    final int int = line.indexOf(org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String);\n    if (cmtI >= 0) {\n        line = line.substring(0, cmtI);\n    } \n    line = line.trim();\n    if ((line.length()) == 0) {\n        continue;\n    } \n    if (line.contains(\"=\")) {\n        final java.lang.String[] java.lang.String[] = line.split(\"=\");\n        if ((parts.int) != 2) {\n            throw new java.lang.IllegalArgumentException((((((\"Malformed folding statement split into \" + (parts.int)) + \" parts: \") + rawLine) + \" in \") + location));\n        } else {\n            final java.lang.String java.lang.String = parts[0];\n            final java.lang.String java.lang.String = parts[1];\n            if (((leftCharacter.length()) != 1) || ((rightCharacter.length()) != 1)) {\n                throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + rawLine) + \" in \") + location));\n            } \n            asciiFoldings.put(leftCharacter.charAt(0), rightCharacter.charAt(0));\n        }\n    } else {\n        final java.lang.String[] java.lang.String[] = line.split(\"\\\\s+\");\n        if ((parts.int) != 4) {\n            throw new java.lang.IllegalArgumentException((((((\"Malformed rule statement split into \" + (parts.int)) + \" parts: \") + rawLine) + \" in \") + location));\n        } else {\n            try {\n                final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[0]);\n                final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[1]);\n                final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[2]);\n                final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[3]);\n                final org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule = new org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule(pattern , replacement1 , replacement2 , replacement3);\n                final char char = r.java.lang.String.charAt(0);\n                java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> = ruleMapping.get(patternKey);\n                if (rules == null) {\n                    rules = new java.util.ArrayList<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>();\n                    ruleMapping.put(patternKey, rules);\n                } \n                rules.add(r);\n            } catch (final java.lang.IllegalArgumentException e) {\n                throw new java.lang.IllegalStateException((((\"Problem parsing line '\" + currentLine) + \"' in \") + location) , e);\n            }\n        }\n    }\n}"},"status":-1},{"failures":[64,65,66,67,68,69,70],"tindex":"242d1639-3d93-11e6-a8a9-bbd8d5b427f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:422","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Metaphone.this.int"},"variableMap":{"maxCodeLen":"org.apache.commons.codec.language.MatchRatingApproachEncoder.SIX"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:339","type":"CtReturnImpl","sourcecode":"return java.lang.Math.abs(((org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int) - (strB.length())))"},"status":-1},{"failures":[71,72,73,74,75,76,77,78,79,80,81,82,83],"tindex":"242d163a-3d93-11e6-a8a9-11280b630edc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.RefinedSoundex:188","type":"CtAssignmentImpl","sourcecode":"last = '*'"},"variableMap":{"last":"last"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:278","type":"CtAssignmentImpl","sourcecode":"last = mapped"},"status":-1},{"failures":[84,85,86,87,88,89,90,91,92,93],"tindex":"242d3d4b-3d93-11e6-a8a9-871d8d02ec31","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:225","type":"CtAssignmentImpl","sourcecode":"name1 = cleanName(name1)"},"status":-1},{"failures":[],"tindex":"242d3d4c-3d93-11e6-a8a9-37caab4ea313","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:302","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.permOp(left, right, 8, 16711935, results)"},"variableMap":{"left":"length","right":"length","results":"org.apache.commons.codec.binary.BinaryCodec.BITS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:248","type":"CtForImpl","sourcecode":"for (int int = 0, int int = (l_ascii.int) - 1 ; ii < (raw.int) ; ii++ , jj -= 8) {\n    for (int int = 0 ; bits < (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[].int) ; ++bits) {\n        if (((raw[ii]) & (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.int[][bits])) == 0) {\n            l_ascii[(jj - bits)] = '0';\n        } else {\n            l_ascii[(jj - bits)] = '1';\n        }\n    }\n}"},"status":-2},{"failures":[94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110],"tindex":"242d3d4d-3d93-11e6-a8a9-718d2deb5a60","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:212","type":"CtInvocationImpl","sourcecode":"buffer.setCharAt(1, charOne)"},"variableMap":{"buffer":"key","charOne":"lastChar"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:301","type":"CtIfImpl","sourcecode":"if ((key.length()) > 2) {\n    final char char = key.charAt(((key.length()) - 2));\n    if ((last2Char == 'A') && (lastChar == 'Y')) {\n        key.deleteCharAt(((key.length()) - 2));\n    } \n} "},"status":-1},{"failures":[43,44],"tindex":"242d3d4e-3d93-11e6-a8a9-a3b683cd39e1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:408","type":"CtOperatorAssignmentImpl","sourcecode":"b ^= t"},"status":-1},{"failures":[],"tindex":"242d3d4f-3d93-11e6-a8a9-1160e11b4580","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:90","type":"CtAssignmentImpl","sourcecode":"salt = (org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + salt"},"variableMap":{"salt":"txt","org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:93","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^y3\", \"Y3\")"},"status":-2},{"failures":[111,112,113,10,11,12,13,14,15,16,18,19,20,114,115,116,117,118,119,23,120,25,121,28,122,123,30,124,125,126,127,31,128,129,32,130,131,132,133,134,33,135,136,137,138,139,38,140,141,39,40,41,142],"tindex":"242d3d50-3d93-11e6-a8a9-c5ace2c11144","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:340","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(tempResult, 0, sBytes, cp, blocksize)"},"variableMap":{"sBytes":"in","blocksize":"org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK","tempResult":"org.apache.commons.codec.binary.Base64.DECODE_TABLE","cp":"inAvail"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:435","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < inAvail ; i++) {\n    final byte[] byte[] = ensureBufferSize(int, context);\n    final byte byte = in[(inPos++)];\n    if (b == (byte)) {\n        context.boolean = true;\n        break;\n    } else {\n        if ((b >= 0) && (b < (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[].int))) {\n            final int int = org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.byte[][b];\n            if (result >= 0) {\n                context.int = ((context.int) + 1) % (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int);\n                context.int = ((context.int) << (org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.int)) + result;\n                if ((context.int) == 0) {\n                    buffer[((context.int)++)] = ((byte)(((context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n                    buffer[((context.int)++)] = ((byte)(((context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n                    buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)));\n                } \n            } \n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"242d6361-3d93-11e6-a8a9-4390ba3fb2c8","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:399","type":"CtAssignmentImpl","sourcecode":"b[(offset++)] = ((byte)(iValue & 255))"},"variableMap":{"b":"buffer","offset":"pos","iValue":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:451","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-2},{"failures":[],"tindex":"242d6362-3d93-11e6-a8a9-3bdf5ffc79cf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:77","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(',')"},"status":0},{"failures":[],"tindex":"242d6363-3d93-11e6-a8a9-a9a03ae98c1d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:450","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.bm.Rule.stripQuotes(parts[0])"},"variableMap":{"parts":"parts"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:310","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(parts[2])"},"status":-2},{"failures":[],"tindex":"242d6364-3d93-11e6-a8a9-4b3feafbbdde","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:75","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set('*')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:81","type":"CtForImpl","sourcecode":"for (int int = '0' ; i <= '9' ; i++) {\n    org.apache.commons.codec.net.QCodec.org.apache.commons.codec.net.QCodec.java.util.BitSet.set(i);\n}"},"status":0},{"failures":[5,6,7],"tindex":"242d6365-3d93-11e6-a8a9-150b6bd15575","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:473","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[25], altResult[46], altResult[4], 4, buffer)"},"status":-1},{"failures":[],"tindex":"242d6366-3d93-11e6-a8a9-31545b4c5b78","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:86","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String[] java.lang.String[] = new java.lang.String[]{ \"\\\\-\" , \"[&]\" , \"\\\\\\'\" , \"\\\\.\" , \"[\\\\,]\" }"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:552","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String[] java.lang.String[] = new java.lang.String[currentBranches.size()]"},"status":-2},{"failures":[143],"tindex":"242d6367-3d93-11e6-a8a9-592e5a66e8aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:82","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ph\", \"fh\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:101","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"wh3\", \"Wh3\")"},"status":-1},{"failures":[],"tindex":"242d6368-3d93-11e6-a8a9-4f5793d1a204","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:147","type":"CtAssignmentImpl","sourcecode":"java.lang.String = replacement"},"variableMap":{"lastReplacement":"txt","replacement":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:117","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"l\", \"2\")"},"status":0},{"failures":[],"tindex":"242d6369-3d93-11e6-a8a9-81da48135ede","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:137","type":"CtLocalVariableImpl","sourcecode":"final java.util.Scanner java.util.Scanner = new java.util.Scanner(lRulesIS , org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)"},"variableMap":{"lRulesIS":"langIS","org.apache.commons.codec.language.bm.ResourceConstants.ENCODING":"org.apache.commons.codec.language.bm.ResourceConstants.ENCODING"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:178","type":"CtLocalVariableImpl","sourcecode":"final java.util.Scanner java.util.Scanner = new java.util.Scanner(langIS , org.apache.commons.codec.language.bm.ResourceConstants.org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)"},"status":-2},{"failures":[144,145,146,147,148,149],"tindex":"242d8a7a-3d93-11e6-a8a9-db809c99f704","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (key == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:130","type":"CtForEachImpl","sourcecode":"for (final byte byte : bytes) {\n    int int = c;\n    if (b < 0) {\n        b = 256 + b;\n    } \n    if (urlsafe.get(b)) {\n        if (b == ' ') {\n            b = '+';\n        } \n        buffer.write(b);\n    } else {\n        buffer.write(org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.byte);\n        final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit(((b >> 4) & 15), org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.int));\n        final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit((b & 15), org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.int));\n        buffer.write(hex1);\n        buffer.write(hex2);\n    }\n}"},"status":-1},{"failures":[],"tindex":"242d8a7b-3d93-11e6-a8a9-bd65cce69876","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:338","type":"CtAssignmentImpl","sourcecode":"cp = 0"},"variableMap":{"cp":"org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:190","type":"CtAssignmentImpl","sourcecode":"minRating = org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.int"},"status":-2},{"failures":[51],"tindex":"242d8a7c-3d93-11e6-a8a9-5b36a9c9b8a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:429","type":"CtInvocationImpl","sourcecode":"result.append('K', 'J')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:472","type":"CtInvocationImpl","sourcecode":"result.append('J')"},"status":-1},{"failures":[43,150,151,44],"tindex":"242d8a7d-3d93-11e6-a8a9-0359822044f6","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:245","type":"CtAssignmentImpl","sourcecode":"u = 128"},"variableMap":{"u":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:378","type":"CtAssignmentImpl","sourcecode":"schedule[(j++)] = s"},"status":-1},{"failures":[],"tindex":"242d8a7e-3d93-11e6-a8a9-9ba0107e145d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:554","type":"CtAssignmentImpl","sourcecode":"boxContent = boxContent.substring(1)"},"variableMap":{"boxContent":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:892","type":"CtAssignmentImpl","sourcecode":"input = input.trim()"},"status":-2},{"failures":[],"tindex":"242d8a7f-3d93-11e6-a8a9-634a8b61f15e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:217","type":"CtAssignmentImpl","sourcecode":"key[i] = 0"},"variableMap":{"i":"ibitWorkArea","key":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:451","type":"CtAssignmentImpl","sourcecode":"buffer[((context.int)++)] = ((byte)((context.int) & (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-2},{"failures":[],"tindex":"242d8a80-3d93-11e6-a8a9-0950972abeda","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:767","type":"CtInvocationImpl","sourcecode":"result.append(\"S\", \"TS\")"},"variableMap":{"result":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:974","type":"CtInvocationImpl","sourcecode":"appendPrimary(primary)"},"status":-2},{"failures":[],"tindex":"242d8a81-3d93-11e6-a8a9-f9f530728b51","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:150","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.close()"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:120","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.flush()"},"status":-2},{"failures":[],"tindex":"242d8a82-3d93-11e6-a8a9-592cbab88fd5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:68","type":"CtReturnImpl","sourcecode":"return java.security.MessageDigest.getInstance(algorithm)"},"variableMap":{"algorithm":"org.apache.commons.codec.digest.MessageDigestAlgorithms.SHA_1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:112","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getDigest(org.apache.commons.codec.digest.MessageDigestAlgorithms.org.apache.commons.codec.digest.MessageDigestAlgorithms.java.lang.String)"},"status":-2},{"failures":[143],"tindex":"242d8a83-3d93-11e6-a8a9-7f4f5b1df430","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:60","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"^rough\", \"rou2f\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:101","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"wh3\", \"Wh3\")"},"status":-1},{"failures":[144,145,146,148,149],"tindex":"242db194-3d93-11e6-a8a9-0f357083d655","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:144","type":"CtInvocationImpl","sourcecode":"buffer.write(hex1)"},"status":-1},{"failures":[43,44,152,153,154,155,156,157,46,49,6,7],"tindex":"242db195-3d93-11e6-a8a9-21742469428e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:557","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.this.java.nio.charset.Charset.name()"},"variableMap":{"charset":"org.apache.commons.codec.Charsets.UTF_8"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Crypt:149","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Crypt.crypt(key.getBytes(org.apache.commons.codec.Charsets.org.apache.commons.codec.Charsets.java.nio.charset.Charset), salt)"},"status":-1},{"failures":[],"tindex":"242db196-3d93-11e6-a8a9-119241997490","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.RuleType:47","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.RuleType.this.java.lang.String"},"variableMap":{"name":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:403","type":"CtReturnImpl","sourcecode":"return metaphone(str)"},"status":0},{"failures":[],"tindex":"242db197-3d93-11e6-a8a9-a3bd4ca2e07d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:244","type":"CtIfImpl","sourcecode":"if (str == null) {\n    return null;\n} "},"status":0},{"failures":[150,151],"tindex":"242db198-3d93-11e6-a8a9-15c7e0ae1af0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:202","type":"CtAssignmentImpl","sourcecode":"salt = (\"\" + (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.char[][randomGenerator.nextInt(numSaltChars)])) + (org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.char[][randomGenerator.nextInt(numSaltChars)])"},"status":-1},{"failures":[],"tindex":"242db199-3d93-11e6-a8a9-697d0b7e424b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:121","type":"CtReturnImpl","sourcecode":"return diff"},"variableMap":{"diff":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:733","type":"CtReturnImpl","sourcecode":"return index"},"status":-2},{"failures":[],"tindex":"242db19a-3d93-11e6-a8a9-bd28ab58d2d7","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:136","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:395","type":"CtReturnImpl","sourcecode":"return a"},"status":-2},{"failures":[158,159,160,161,162,163,164],"tindex":"242db19b-3d93-11e6-a8a9-21b7bbbf7bbb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:759","type":"CtLocalVariableImpl","sourcecode":"int int = bigBytes.int"},"variableMap":{"bigBytes":"buffer","length":"org.apache.commons.codec.digest.DigestUtils.STREAM_BUFFER_LENGTH"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:794","type":"CtLocalVariableImpl","sourcecode":"int int = data.read(buffer, 0, org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.int)"},"status":-1},{"failures":[13,14],"tindex":"242db19c-3d93-11e6-a8a9-0398e9c7bb08","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:505","type":"CtOperatorAssignmentImpl","sourcecode":"b += 256"},"variableMap":{"b":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:764","type":"CtUnaryOperatorImpl","sourcecode":"len--"},"status":-1},{"failures":[],"tindex":"242db19d-3d93-11e6-a8a9-9731540fc047","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:97","type":"CtLocalVariableImpl","sourcecode":"int int = read(byte[], 0, 1)"},"status":-2},{"failures":[],"tindex":"242db19e-3d93-11e6-a8a9-e12296cb0114","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:392","type":"CtReturnImpl","sourcecode":"return replacedName"},"variableMap":{"replacedName":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:438","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.sha1(data))"},"status":-2},{"failures":[],"tindex":"242db19f-3d93-11e6-a8a9-13b294eb2a12","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:605","type":"CtIfImpl","sourcecode":"if ((input.charAt(i)) != (prefix.charAt(i))) {\n    return false;\n} "},"variableMap":{"input":"input","prefix":"input","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:718","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.this.org.apache.commons.codec.language.bm.Rule.RPattern.isMatch(input.subSequence(0, i))"},"status":-2},{"failures":[51,52,165],"tindex":"242dd8b0-3d93-11e6-a8a9-77c5e7c34524","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:716","type":"CtInvocationImpl","sourcecode":"result.append('A')"},"status":-1},{"failures":[166,167,168,169,170],"tindex":"242dd8b1-3d93-11e6-a8a9-edff4fb06c9d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:496","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, buffer, context.int, byte[].int)"},"status":-1},{"failures":[],"tindex":"242dd8b2-3d93-11e6-a8a9-09bf267887a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:346","type":"CtAssignmentImpl","sourcecode":"c = org.apache.commons.codec.digest.UnixCrypt.hPermOp(c, (-2), -859045888)"},"variableMap":{"c":"org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:517","type":"CtOperatorAssignmentImpl","sourcecode":"context.int += org.apache.commons.codec.binary.Base32.org.apache.commons.codec.binary.Base32.int"},"status":-2},{"failures":[],"tindex":"242dd8b3-3d93-11e6-a8a9-135aca79906b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:495","type":"CtLocalVariableImpl","sourcecode":"char char = '\u0000'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:184","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit(((b >> 4) & 15), 16))"},"status":-2},{"failures":[],"tindex":"242dd8b4-3d93-11e6-a8a9-3f9b246273d0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:488","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(altResult[40], altResult[61], altResult[19], 4, buffer)"},"variableMap":{"altResult":"finalb","buffer":"passwd"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:284","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(finalb[1], finalb[7], finalb[13], 4, passwd)"},"status":-2},{"failures":[171,155,156,172,157,46,47,48,173,49,50,5,6,7,174,175,176,177,178,179],"tindex":"242dd8b5-3d93-11e6-a8a9-b93b3be975a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.B64:61","type":"CtInvocationImpl","sourcecode":"buffer.append(org.apache.commons.codec.digest.B64.org.apache.commons.codec.digest.B64.java.lang.String.charAt((w & 63)))"},"status":-1},{"failures":[],"tindex":"242dd8b6-3d93-11e6-a8a9-3b176d044290","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:61","type":"CtAssignmentImpl","sourcecode":"byte[][0] = ((byte)(i))"},"variableMap":{"i":"i","singleByte":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:222","type":"CtAssignmentImpl","sourcecode":"key[i] = ((byte)(iChar << 1))"},"status":-2},{"failures":[180],"tindex":"242dd8b7-3d93-11e6-a8a9-711b77e6046f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:576","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[181,182,183,184],"tindex":"242dd8b8-3d93-11e6-a8a9-811d8d93722a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:240","type":"CtInvocationImpl","sourcecode":"code.append('K')"},"status":-1},{"failures":[185],"tindex":"242dd8b9-3d93-11e6-a8a9-c53b459c7f61","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:185","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.getMd2Digest().digest(data)"},"variableMap":{"data":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:190","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(tmp)"},"status":-1},{"failures":[],"tindex":"242dd8ba-3d93-11e6-a8a9-8d09b8f8d702","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:94","type":"CtReturnImpl","sourcecode":"return upperName"},"variableMap":{"upperName":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:180","type":"CtTryImpl","sourcecode":"try {\n    return org.apache.commons.codec.net.BCodec.this.decodeText(value);\n} catch (final java.io.UnsupportedEncodingException e) {\n    throw new org.apache.commons.codec.DecoderException(e.getMessage() , e);\n}"},"status":-2},{"failures":[],"tindex":"242dd8bb-3d93-11e6-a8a9-e75a8384e8d0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"status":-2},{"failures":[],"tindex":"242dffcc-3d93-11e6-a8a9-dd0bb00d7ebf","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:83","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(raw)"},"variableMap":{"raw":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:434","type":"CtReturnImpl","sourcecode":"return buf"},"status":-2},{"failures":[125,32,130,133,134,186,187,188,189,190],"tindex":"242dffcd-3d93-11e6-a8a9-ff907dc05680","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:206","type":"CtOperatorAssignmentImpl","sourcecode":"todo -= len"},"status":-1},{"failures":[51,52],"tindex":"242dffce-3d93-11e6-a8a9-0b1ec7e2b619","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:522","type":"CtInvocationImpl","sourcecode":"result.append('J', 'H')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:423","type":"CtInvocationImpl","sourcecode":"result.append(\"KL\", \"L\")"},"status":-1},{"failures":[],"tindex":"242dffcf-3d93-11e6-a8a9-49d5c6f89a67","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:89","type":"CtIfImpl","sourcecode":"if ((salt != null) && (!(salt.startsWith(org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String)))) {\n    salt = (org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + salt;\n} "},"variableMap":{"salt":"body","org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX":"body"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:389","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : body.split(\"[|]\")) {\n    phs.add(org.apache.commons.codec.language.bm.Rule.parsePhoneme(part));\n}"},"status":-2},{"failures":[],"tindex":"242dffd0-3d93-11e6-a8a9-69cb844cc439","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:559","type":"CtReturnImpl","sourcecode":"return result"},"variableMap":{"result":"replacementAtStart"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:182","type":"CtReturnImpl","sourcecode":"return java.lang.String[]"},"status":0},{"failures":[],"tindex":"242dffd1-3d93-11e6-a8a9-b1cfa1dec31c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:724","type":"CtUnaryOperatorImpl","sourcecode":"index++"},"status":-2},{"failures":[46,47,48,49,50,5,6,7],"tindex":"242dffd2-3d93-11e6-a8a9-8f68f26e846e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:275","type":"CtForImpl","sourcecode":"for (int int = 1 ; i <= keyLen ; i++) {\n    altCtx.update(keyBytes);\n}"},"variableMap":{"altCtx":"ctx","keyBytes":"altResult","keyLen":"cnt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:230","type":"CtInvocationImpl","sourcecode":"ctx.update(altResult, 0, cnt)"},"status":-1},{"failures":[185],"tindex":"242dffd3-3d93-11e6-a8a9-4d328412cee4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:222","type":"CtAssignmentImpl","sourcecode":"key[i] = ((byte)(iChar << 1))"},"variableMap":{"iChar":"i","i":"i","key":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:185","type":"CtAssignmentImpl","sourcecode":"tmp[i] = b"},"status":-1},{"failures":[191,31,33,36,38,39],"tindex":"242dffd4-3d93-11e6-a8a9-a7b6b7f78fe0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:371","type":"CtOperatorAssignmentImpl","sourcecode":"context.int += (context.int) - savedPos"},"status":-1},{"failures":[],"tindex":"242dffd5-3d93-11e6-a8a9-7f4ffcede865","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:105","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int"},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:395","type":"CtReturnImpl","sourcecode":"return a"},"status":-2},{"failures":[],"tindex":"242e26e6-3d93-11e6-a8a9-bf0ca9ce69b3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:704","type":"CtLocalVariableImpl","sourcecode":"final int int = i + patternLength"},"variableMap":{"patternLength":"keyLen","i":"keyLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:221","type":"CtLocalVariableImpl","sourcecode":"int int = keyLen"},"status":-2},{"failures":[],"tindex":"242e26e7-3d93-11e6-a8a9-ab49ba378a11","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:127","type":"CtIfImpl","sourcecode":"if ((((name == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(name))) || ((name.length()) == 1)) {\n    return org.apache.commons.codec.language.MatchRatingApproachEncoder.org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String;\n} "},"variableMap":{"name":"name","org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"name","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:167","type":"CtReturnImpl","sourcecode":"return name"},"status":-2},{"failures":[],"tindex":"242e26e8-3d93-11e6-a8a9-e18d2ff4b9b6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:286","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(lineSeparator, 0, org.apache.commons.codec.binary.Base64.this.byte[], 0, lineSeparator.int)"},"variableMap":{"length":"i","lineSeparator":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:171","type":"CtTryImpl","sourcecode":"try {\n    final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)]);\n    final int int = org.apache.commons.codec.net.Utils.digit16(bytes[(++i)]);\n    buffer.write(((char)((u << 4) + l)));\n} catch (final java.lang.ArrayIndexOutOfBoundsException e) {\n    throw new org.apache.commons.codec.DecoderException(\"Invalid URL encoding: \" , e);\n}"},"status":-2},{"failures":[],"tindex":"242e26e9-3d93-11e6-a8a9-2182c1b0212a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:239","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.isEmpty(raw)) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"bytes","raw":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:93","type":"CtIfImpl","sourcecode":"if (bytes == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"242e26ea-3d93-11e6-a8a9-2f27616d6ae4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:769","type":"CtReturnImpl","sourcecode":"return resizedBytes"},"variableMap":{"resizedBytes":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:190","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(tmp)"},"status":-2},{"failures":[165],"tindex":"242e26eb-3d93-11e6-a8a9-35f3ed7758f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:767","type":"CtInvocationImpl","sourcecode":"result.append(\"S\", \"TS\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:616","type":"CtIfImpl","sourcecode":"if (slavoGermanic) {\n    result.append('S');\n} else {\n    result.append('S', 'X');\n}"},"status":-1},{"failures":[],"tindex":"242e26ec-3d93-11e6-a8a9-f317904c78dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:502","type":"CtIfImpl","sourcecode":"if (obj == null) {\n    return null;\n} else if (obj instanceof byte[]) {\n    return encode(((byte[])(obj)));\n} else if (obj instanceof java.lang.String) {\n    return encode(((java.lang.String)(obj)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (obj.getClass().getName())) + \" cannot be quoted-printable encoded\"));\n}"},"status":-2},{"failures":[],"tindex":"242e26ed-3d93-11e6-a8a9-f1a29a132b1d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:227","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[9]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:212","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = altCtx.digest()"},"status":-2},{"failures":[45],"tindex":"242e26ee-3d93-11e6-a8a9-afd0a4c8dc05","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:309","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"pad must not be in alphabet or whitespace\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:130","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\")"},"status":-1},{"failures":[],"tindex":"242e26ef-3d93-11e6-a8a9-27fed31a79d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:587","type":"CtInvocationImpl","sourcecode":"result.appendAlternate('R')"},"variableMap":{"result":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:948","type":"CtInvocationImpl","sourcecode":"appendAlternate(value)"},"status":-2},{"failures":[],"tindex":"242e26f0-3d93-11e6-a8a9-319360b5e860","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:107","type":"CtAssignmentImpl","sourcecode":"txt = txt.replaceAll(\"ry\", \"Ry\")"},"variableMap":{"txt":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:427","type":"CtAssignmentImpl","sourcecode":"line = line.trim()"},"status":-2},{"failures":[47,50],"tindex":"242e26f1-3d93-11e6-a8a9-8dc296118d5e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:467","type":"CtInvocationImpl","sourcecode":"sb.append(\", rcon='\").append(rCon).append('\\'')"},"variableMap":{"rCon":"org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_PREFIX","sb":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:425","type":"CtInvocationImpl","sourcecode":"buffer.append(org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.java.lang.String)"},"status":-1},{"failures":[192],"tindex":"242e4e02-3d93-11e6-a8a9-6f573362a9e8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:47","type":"CtIfImpl","sourcecode":"if ((txt == null) || ((txt.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.org.apache.commons.codec.language.Caverphone1.java.lang.String;\n} "},"status":-1},{"failures":[],"tindex":"242e4e03-3d93-11e6-a8a9-93eb219a5a77","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:194","type":"CtInvocationImpl","sourcecode":"altCtx.update(keyBytes)"},"variableMap":{"altCtx":"altCtx","keyBytes":"saltBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:200","type":"CtInvocationImpl","sourcecode":"altCtx.update(saltBytes)"},"status":-2},{"failures":[193,194,195,196,197],"tindex":"242e4e04-3d93-11e6-a8a9-a3a434372f0a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:284","type":"CtReturnImpl","sourcecode":"return \"ANY_LANGUAGE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:203","type":"CtReturnImpl","sourcecode":"return sBuf.toString()"},"status":-1},{"failures":[51,52,165],"tindex":"242e4e05-3d93-11e6-a8a9-7327d763c5b6","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:284","type":"CtInvocationImpl","sourcecode":"result.append('S')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:396","type":"CtInvocationImpl","sourcecode":"result.append('T')"},"status":-1},{"failures":[155,156,157,175,177,178,179],"tindex":"242e4e06-3d93-11e6-a8a9-6b31a0b21293","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:297","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(saltBytes, ((byte)(0)))"},"variableMap":{"saltBytes":"finalb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:223","type":"CtInvocationImpl","sourcecode":"ctx.update(finalb, 0, (ii > 16 ? 16 : ii))"},"status":-1},{"failures":[],"tindex":"242e4e07-3d93-11e6-a8a9-c75fd0bba13f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:239","type":"CtIfImpl","sourcecode":"if (((b[y]) & u) != 0) {\n    c |= 1;\n} "},"variableMap":{"b":"b","c":"length","u":"org.apache.commons.codec.binary.BaseNCodec.EOF","y":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:200","type":"CtWhileImpl","sourcecode":"while (todo > 0) {\n    int int = ((int)(java.lang.Math.min(b.int, todo)));\n    len = org.apache.commons.codec.binary.BaseNCodecInputStream.this.read(b, 0, len);\n    if (len == (org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec.int)) {\n        break;\n    } \n    todo -= len;\n}"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":100,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}