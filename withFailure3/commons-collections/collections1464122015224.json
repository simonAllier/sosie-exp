{"failureDictionary":{"org.apache.commons.collections4.list.TreeListTest.testListEquals":13,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":45,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":33,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":35,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":47,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":62,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":39,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":61,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":32,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":41,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":11,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":66,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":25,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testRemove":7,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":74,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":17,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":77,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testEmptyListIteratorIsIndeedEmpty":2,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":6,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":23,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":34,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":18,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":24,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":27,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":55,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":15,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":68,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":71,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":29,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":70,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testReset":0,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":16,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":50,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":59,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":67,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":19,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":26,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":48,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":40,"org.apache.commons.collections4.CollectionUtilsTest.get":63,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":38,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":56,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":58,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":31,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":43,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":12,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":5,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":57,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":36,"org.apache.commons.collections4.map.ReferenceMapTest.testEmptyMapCompatibility":4,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":8,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":21,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":72,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":75,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":10,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":20,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":64,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":46,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testWalkForwardAndBack":3,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":49,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":51,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":54,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":42,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":65,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":76,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":52,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":14,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":22,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testIterator":1,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":73,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":30,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":9,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":53,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":28,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":44,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":60,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":37,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":69},"transformations":[{"failures":[0,1,2,3],"tindex":"c9c47f9d-21ee-11e6-897c-25b69bf6f0e8","series":0,"name":"replace","transplant":{"toString":"return result","position":"org.apache.commons.collections4.bag.AbstractMapBag:351","type":"CtReturnImpl","sourcecode":"return result"},"variableMap":{"result":"removed"},"type":"adrStmt","transplantationPoint":{"toString":"return (!(beforeFirst)) && (!(removed))","position":"org.apache.commons.collections4.iterators.SingletonListIterator:66","type":"CtReturnImpl","sourcecode":"return (!(boolean)) && (!(boolean))"},"status":-1},{"failures":[],"tindex":"c9c47f9e-21ee-11e6-897c-519cd1aa5698","series":0,"name":"add","transplant":{"toString":"if (endIndex < startIndex) {\n    throw new java.lang.IllegalArgumentException(\"End index must not be less than start index.\");\n} ","position":"org.apache.commons.collections4.iterators.ArrayIterator:99","type":"CtIfImpl","sourcecode":"if (endIndex < startIndex) {\n    throw new java.lang.IllegalArgumentException(\"End index must not be less than start index.\");\n} "},"variableMap":{"startIndex":"i","endIndex":"i"},"type":"adrStmt","transplantationPoint":{"toString":"if ((comparator.compare(curObject, leastObject)) < 0) {\n    leastObject = curObject;\n    leastIndex = i;\n} ","position":"org.apache.commons.collections4.iterators.CollatingIterator:368","type":"CtIfImpl","sourcecode":"if ((java.util.Comparator<? super E>.compare(curObject, leastObject)) < 0) {\n    leastObject = curObject;\n    leastIndex = i;\n} "},"status":0},{"failures":[],"tindex":"c9c4a6af-21ee-11e6-897c-6729e8bd4224","series":0,"name":"replace","transplant":{"toString":"if (index >= (maxElements)) {\n    index = 0;\n} ","position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (index >= (int)) {\n    index = 0;\n} "},"variableMap":{"maxElements":"bitIndex","index":"bitIndex"},"type":"adrStmt","transplantationPoint":{"toString":"if ((parent.bitIndex) == (-1)) {\n    buffer.append(\"parent=\").append(\"ROOT\");\n} else {\n    buffer.append(\"parent=\").append(parent.getKey()).append(\" [\").append(parent.bitIndex).append(\"]\");\n}","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1347","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) == (-1)) {\n    buffer.append(\"parent=\").append(\"ROOT\");\n} else {\n    buffer.append(\"parent=\").append(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey()).append(\" [\").append(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int).append(\"]\");\n}"},"status":-2},{"failures":[],"tindex":"c9c4a6b0-21ee-11e6-897c-2b2176861319","series":0,"name":"replace","transplant":{"toString":"if ((map.size()) != (size())) {\n    return false;\n} ","position":"org.apache.commons.collections4.map.AbstractHashedMap:1317","type":"CtIfImpl","sourcecode":"if ((map.size()) != (size())) {\n    return false;\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"toString":"try {\n    while (it.hasNext()) {\n        final java.lang.Object key = it.next();\n        final java.lang.Object value = it.getValue();\n        if (value == null) {\n            if (((map.get(key)) != null) || ((map.containsKey(key)) == false)) {\n                return false;\n            } \n        } else {\n            if ((value.equals(map.get(key))) == false) {\n                return false;\n            } \n        }\n    }\n} catch (final java.lang.ClassCastException ignored) {\n    return false;\n} catch (final java.lang.NullPointerException ignored) {\n    return false;\n}","position":"org.apache.commons.collections4.map.AbstractHashedMap:1321","type":"CtTryImpl","sourcecode":"try {\n    while (it.hasNext()) {\n        final java.lang.Object java.lang.Object = it.next();\n        final java.lang.Object java.lang.Object = it.getValue();\n        if (value == null) {\n            if (((map.get(key)) != null) || ((map.containsKey(key)) == false)) {\n                return false;\n            } \n        } else {\n            if ((value.equals(map.get(key))) == false) {\n                return false;\n            } \n        }\n    }\n} catch (final java.lang.ClassCastException ignored) {\n    return false;\n} catch (final java.lang.NullPointerException ignored) {\n    return false;\n}"},"status":0},{"failures":[],"tindex":"c9c4a6b1-21ee-11e6-897c-d91e0e9ef20a","series":0,"name":"replace","transplant":{"toString":"this.clazz = clazz","position":"org.apache.commons.collections4.map.MultiValueMap:547","type":"CtAssignmentImpl","sourcecode":"this.java.lang.Class<T> = clazz"},"variableMap":{"clazz":"classToInstantiate"},"type":"adrStmt","transplantationPoint":{"toString":"iClassToInstantiate = classToInstantiate","position":"org.apache.commons.collections4.functors.InstantiateFactory:81","type":"CtAssignmentImpl","sourcecode":"java.lang.Class<T> = classToInstantiate"},"status":-2},{"failures":[4,5,6],"tindex":"c9c542f2-21ee-11e6-897c-61e560426b9e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"doReadObject(in)","position":"org.apache.commons.collections4.map.ReferenceMap:181","type":"CtInvocationImpl","sourcecode":"doReadObject(in)"},"status":-1},{"failures":[],"tindex":"c9c542f3-21ee-11e6-897c-611e96b2f63c","series":0,"name":"add","transplant":{"toString":"return org.apache.commons.collections4.keyvalue.MultiKey.this","position":"org.apache.commons.collections4.keyvalue.MultiKey:279","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.keyvalue.MultiKey.this"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.collections4.functors.ExceptionTransformer.INSTANCE","position":"org.apache.commons.collections4.functors.ExceptionTransformer:71","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionTransformer.org.apache.commons.collections4.functors.ExceptionTransformer.org.apache.commons.collections4.Transformer"},"status":-2},{"failures":[7],"tindex":"c9c56a04-21ee-11e6-897c-c5200a4b2667","series":0,"name":"replace","transplant":{"toString":"throw new java.lang.IllegalArgumentException(\"The map size must be 1\")","position":"org.apache.commons.collections4.map.SingletonMap:122","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The map size must be 1\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalStateException()","position":"org.apache.commons.collections4.iterators.SingletonIterator:107","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException()"},"status":-1},{"failures":[],"tindex":"c9c56a05-21ee-11e6-897c-adcc532cdcf4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (coll != null) {\n    boolean result = false;\n    final java.util.Iterator<?> i = coll.iterator();\n    while (i.hasNext()) {\n        final java.lang.Object obj = i.next();\n        final boolean changed = remove(obj, getCount(obj));\n        result = result || changed;\n    }\n    return result;\n} else {\n    return decorated().removeAll(null);\n}","position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtIfImpl","sourcecode":"if (coll != null) {\n    boolean boolean = false;\n    final java.util.Iterator<?> java.util.Iterator<?> = coll.iterator();\n    while (i.hasNext()) {\n        final java.lang.Object java.lang.Object = i.next();\n        final boolean boolean = remove(obj, getCount(obj));\n        result = result || changed;\n    }\n    return result;\n} else {\n    return decorated().removeAll(null);\n}"},"status":-2},{"failures":[],"tindex":"c9c56a06-21ee-11e6-897c-992801a4ad71","series":0,"name":"replace","transplant":{"toString":"this.startIndex = startIndex","position":"org.apache.commons.collections4.iterators.ArrayIterator:92","type":"CtAssignmentImpl","sourcecode":"this.int = startIndex"},"variableMap":{"startIndex":"lastReturnedIndex"},"type":"adrStmt","transplantationPoint":{"toString":"lastReturnedIndex = -1","position":"org.apache.commons.collections4.queue.CircularFifoQueue:382","type":"CtAssignmentImpl","sourcecode":"int = -1"},"status":-2},{"failures":[],"tindex":"c9c56a07-21ee-11e6-897c-c9b5259279bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (null == element) {\n    throw new java.lang.NullPointerException(\"Attempted to add null object to queue\");\n} ","position":"org.apache.commons.collections4.queue.CircularFifoQueue:226","type":"CtIfImpl","sourcecode":"if (null == element) {\n    throw new java.lang.NullPointerException(\"Attempted to add null object to queue\");\n} "},"status":0},{"failures":[],"tindex":"c9c56a08-21ee-11e6-897c-8f25b08794ad","series":0,"name":"replace","transplant":{"toString":"final java.lang.Object[] array = org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet.this.decorated().toArray()","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:130","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object[] java.lang.Object[] = org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet.this.decorated().toArray()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.Object[] result = array","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:140","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object[] java.lang.Object[] = array"},"status":-2},{"failures":[],"tindex":"c9c56a09-21ee-11e6-897c-e173b58f9016","series":0,"name":"replace","transplant":{"toString":"return new org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>(entrySet())","position":"org.apache.commons.collections4.map.AbstractIterableMap:34","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>(entrySet())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return new org.apache.commons.collections4.map.AbstractHashedMap.HashMapIterator<K, V>(org.apache.commons.collections4.map.AbstractHashedMap.this)","position":"org.apache.commons.collections4.map.AbstractHashedMap:759","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractHashedMap.HashMapIterator<K, V>(org.apache.commons.collections4.map.AbstractHashedMap.this)"},"status":0},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"tindex":"c9c56a0a-21ee-11e6-897c-0309ad5074be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"left = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(iterator , start , (mid - 1) , mid , prev , org.apache.commons.collections4.list.TreeList.AVLNode.this)","position":"org.apache.commons.collections4.list.TreeList:375","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(iterator , start , (mid - 1) , mid , prev , org.apache.commons.collections4.list.TreeList.AVLNode.this)"},"status":-1},{"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"tindex":"c9c73ecb-21ee-11e6-897c-d9ed59ec97a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"previous = entry","position":"org.apache.commons.collections4.map.AbstractHashedMap:349","type":"CtAssignmentImpl","sourcecode":"previous = entry"},"status":-1},{"failures":[57,58,59,60,61,62],"tindex":"c9c73ecc-21ee-11e6-897c-57ddaaf1481f","series":0,"name":"replace","transplant":{"toString":"return buildSnake(vUp[(i - delta)], ((k + start1) - start2), end1, end2)","position":"org.apache.commons.collections4.sequence.SequencesComparator:206","type":"CtReturnImpl","sourcecode":"return buildSnake(int[][(i - delta)], ((k + start1) - start2), end1, end2)"},"variableMap":{"vUp":"vUp","start1":"delta","delta":"delta","end2":"start2","i":"d","end1":"end1","k":"start2","start2":"start1"},"type":"adrStmt","transplantationPoint":{"toString":"for (int k = delta - d ; k <= (delta + d) ; k += 2) {\n    final int i = (k + offset) - delta;\n    if ((k == (delta - d)) || ((k != (delta + d)) && ((vUp[(i + 1)]) <= (vUp[(i - 1)])))) {\n        vUp[i] = (vUp[(i + 1)]) - 1;\n    } else {\n        vUp[i] = vUp[(i - 1)];\n    }\n    int x = (vUp[i]) - 1;\n    int y = ((x - start1) + start2) - k;\n    while (((x >= start1) && (y >= start2)) && (equator.equate(sequence1.get(x), sequence2.get(y)))) {\n        vUp[i] = x--;\n        y--;\n    }\n    if ((((delta % 2) == 0) && ((-d) <= k)) && (k <= d)) {\n        if ((vUp[i]) <= (vDown[(i + delta)])) {\n            return buildSnake(vUp[i], ((k + start1) - start2), end1, end2);\n        } \n    } \n}","position":"org.apache.commons.collections4.sequence.SequencesComparator:212","type":"CtForImpl","sourcecode":"for (int int = delta - d ; k <= (delta + d) ; k += 2) {\n    final int int = (k + offset) - delta;\n    if ((k == (delta - d)) || ((k != (delta + d)) && ((int[][(i + 1)]) <= (int[][(i - 1)])))) {\n        int[][i] = (int[][(i + 1)]) - 1;\n    } else {\n        int[][i] = int[][(i - 1)];\n    }\n    int int = (int[][i]) - 1;\n    int int = ((x - start1) + start2) - k;\n    while (((x >= start1) && (y >= start2)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(x), java.util.List<T>.get(y)))) {\n        int[][i] = x--;\n        y--;\n    }\n    if ((((delta % 2) == 0) && ((-d) <= k)) && (k <= d)) {\n        if ((int[][i]) <= (int[][(i + delta)])) {\n            return buildSnake(int[][i], ((k + start1) - start2), end1, end2);\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"c9c765dd-21ee-11e6-897c-e7eab07bd93c","series":0,"name":"replace","transplant":{"toString":"return decorated().isFull()","position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:152","type":"CtReturnImpl","sourcecode":"return decorated().isFull()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return true","position":"org.apache.commons.collections4.queue.CircularFifoQueue:244","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"c9c765de-21ee-11e6-897c-630019150184","series":0,"name":"replace","transplant":{"toString":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(org.apache.commons.collections4.map.LinkedMap.this)","position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(org.apache.commons.collections4.map.LinkedMap.this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return ((java.util.List<E>)(decorated()))","position":"org.apache.commons.collections4.list.TransformedList:114","type":"CtReturnImpl","sourcecode":"return ((java.util.List<E>)(decorated()))"},"status":-2},{"failures":[],"tindex":"c9c765df-21ee-11e6-897c-45abc65741b4","series":0,"name":"add","transplant":{"toString":"parent.remove(getKey())","position":"org.apache.commons.collections4.map.Flat3Map:649","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.Flat3Map<K, V>.remove(getKey())"},"variableMap":{"parent":"normalMap"},"type":"adrStmt","transplantationPoint":{"toString":"normalMap.remove(key)","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:229","type":"CtInvocationImpl","sourcecode":"java.util.Map<K, V>.remove(key)"},"status":-2},{"failures":[],"tindex":"c9c765e0-21ee-11e6-897c-19a7fd0e1998","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"validate(object)","position":"org.apache.commons.collections4.list.PredicatedList:113","type":"CtInvocationImpl","sourcecode":"validate(object)"},"status":0},{"failures":[63,64,65],"tindex":"c9c765e1-21ee-11e6-897c-21e0118cc70f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (i == (-1)) {\n    return iterator.next();\n} ","position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtIfImpl","sourcecode":"if (i == (-1)) {\n    return iterator.next();\n} "},"status":-1},{"failures":[],"tindex":"c9c765e2-21ee-11e6-897c-a1b66c7d3fd3","series":0,"name":"replace","transplant":{"toString":"_reset()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:62","type":"CtInvocationImpl","sourcecode":"_reset()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"checkModCount()","position":"org.apache.commons.collections4.list.TreeList:1118","type":"CtInvocationImpl","sourcecode":"checkModCount()"},"status":-2},{"failures":[],"tindex":"c9c765e3-21ee-11e6-897c-d381a74bec21","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.collections4.functors.FunctorUtils.<T, T>copy(iTransformers)","position":"org.apache.commons.collections4.functors.ChainedTransformer:124","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.FunctorUtils.<T, T>copy(org.apache.commons.collections4.Transformer<? super T, ? extends T>[])"},"variableMap":{"iTransformers":"transformers"},"type":"adrStmt","transplantationPoint":{"toString":"return ((org.apache.commons.collections4.Transformer<I, O>[])(transformers.clone()))","position":"org.apache.commons.collections4.functors.FunctorUtils:172","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Transformer<I, O>[])(transformers.clone()))"},"status":-3},{"failures":[66,67,68,69,70,71,72,73,74,75,76,77],"tindex":"c9c765e4-21ee-11e6-897c-0dff4418e977","series":0,"name":"replace","transplant":{"toString":"return result","position":"org.apache.commons.collections4.bag.AbstractMapBag:351","type":"CtReturnImpl","sourcecode":"return result"},"variableMap":{"result":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"toString":"if (predicate.evaluate(object)) {\n    nextObject = object;\n    nextObjectSet = true;\n    return true;\n} ","position":"org.apache.commons.collections4.iterators.FilterIterator:176","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(object)) {\n    E = object;\n    boolean = true;\n    return true;\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":24,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}