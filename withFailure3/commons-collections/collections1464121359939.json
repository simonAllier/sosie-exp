{"failureDictionary":{"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":5,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet4":6,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet2":4,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":9,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":0,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":10,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":3,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":1,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":8,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":11,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":12,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":2,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet":7},"transformations":[{"failures":[],"tindex":"432ff204-21ed-11e6-821e-6b38cbfa172b","series":0,"name":"replace","transplant":{"toString":"if ((hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.iterators.ArrayIterator:147","type":"CtIfImpl","sourcecode":"if ((hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if (closure == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n} ","position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtIfImpl","sourcecode":"if (closure == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"432ff205-21ed-11e6-821e-bff58ba71e3c","series":0,"name":"replace","transplant":{"toString":"if ((size()) > 0) {\n    final java.util.Iterator<E> it = iterator();\n    while (it.hasNext()) {\n        it.next();\n        it.remove();\n    }\n} ","position":"org.apache.commons.collections4.list.CursorableLinkedList:255","type":"CtIfImpl","sourcecode":"if ((size()) > 0) {\n    final java.util.Iterator<E> java.util.Iterator<E> = iterator();\n    while (it.hasNext()) {\n        it.next();\n        it.remove();\n    }\n} "},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if ((coll.size()) > 0) {\n    decorated().put(key, coll);\n    result = true;\n} ","position":"org.apache.commons.collections4.map.MultiValueMap:265","type":"CtIfImpl","sourcecode":"if ((coll.size()) > 0) {\n    decorated().put(key, coll);\n    result = true;\n} "},"status":-2},{"failures":[],"tindex":"43301916-21ed-11e6-821e-8d54a23a638a","series":0,"name":"replace","transplant":{"toString":"if (size == 0) {\n    return ((org.apache.commons.collections4.Closure<E>)(defaultClosure == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : defaultClosure));\n} ","position":"org.apache.commons.collections4.functors.SwitchClosure:96","type":"CtIfImpl","sourcecode":"if (size == 0) {\n    return ((org.apache.commons.collections4.Closure<E>)(defaultClosure == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : defaultClosure));\n} "},"variableMap":{"defaultClosure":"closure","size":"count"},"type":"adrStmt","transplantationPoint":{"toString":"if (count == 1) {\n    return ((org.apache.commons.collections4.Closure<E>)(closure));\n} ","position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtIfImpl","sourcecode":"if (count == 1) {\n    return ((org.apache.commons.collections4.Closure<E>)(closure));\n} "},"status":-2},{"failures":[0,1,2,3],"tindex":"43301917-21ed-11e6-821e-5b0abeed88f0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"out.writeInt(valueType.value)","position":"org.apache.commons.collections4.map.AbstractReferenceMap:997","type":"CtInvocationImpl","sourcecode":"out.writeInt(org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.int)"},"status":-1},{"failures":[4,5,6,7],"tindex":"43301918-21ed-11e6-821e-87276e1ebc46","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if ((map.containsKey(key)) == false) {\n    return value.transform(((K)(key)));\n} ","position":"org.apache.commons.collections4.map.DefaultedMap:202","type":"CtIfImpl","sourcecode":"if ((java.util.Map<K, V>.containsKey(key)) == false) {\n    return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(key)));\n} "},"status":-1},{"failures":[],"tindex":"43301919-21ed-11e6-821e-95cf9065d4e5","series":0,"name":"replace","transplant":{"toString":"size += cSize","position":"org.apache.commons.collections4.list.AbstractLinkedList:1014","type":"CtOperatorAssignmentImpl","sourcecode":"int += cSize"},"variableMap":{"size":"total","cSize":"total"},"type":"adrStmt","transplantationPoint":{"toString":"total ^= key.hashCode()","position":"org.apache.commons.collections4.keyvalue.MultiKey:265","type":"CtOperatorAssignmentImpl","sourcecode":"total ^= key.hashCode()"},"status":-3},{"failures":[8,9,10,11,12],"tindex":"4330191a-21ed-11e6-821e-25278137a0f2","series":0,"name":"replace","transplant":{"toString":"return false","position":"org.apache.commons.collections4.bag.AbstractMapBag:415","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return decorated().add(object)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:96","type":"CtReturnImpl","sourcecode":"return decorated().add(object)"},"status":-1},{"failures":[],"tindex":"4330402b-21ed-11e6-821e-0179b5cd6ae0","series":0,"name":"replace","transplant":{"toString":"if (!(setPreviousObject())) {\n    return false;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:254","type":"CtIfImpl","sourcecode":"if (!(setPreviousObject())) {\n    return false;\n} "},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return decorated().addAll(coll)","position":"org.apache.commons.collections4.collection.PredicatedCollection:135","type":"CtReturnImpl","sourcecode":"return decorated().addAll(coll)"},"status":-2},{"failures":[],"tindex":"4330402c-21ed-11e6-821e-59bccce08277","series":0,"name":"replace","transplant":{"toString":"int j = start2","position":"org.apache.commons.collections4.sequence.SequencesComparator:262","type":"CtLocalVariableImpl","sourcecode":"int int = start2"},"variableMap":{"start2":"hashCode"},"type":"adrStmt","transplantationPoint":{"toString":"final int index = hashIndex(entry.hashCode, newCapacity)","position":"org.apache.commons.collections4.map.AbstractHashedMap:644","type":"CtLocalVariableImpl","sourcecode":"final int int = hashIndex(entry.int, newCapacity)"},"status":-2},{"failures":[],"tindex":"4330402d-21ed-11e6-821e-dfe0f2be75cf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"putAll(map)","position":"org.apache.commons.collections4.map.Flat3Map:116","type":"CtInvocationImpl","sourcecode":"putAll(map)"},"status":0},{"failures":[],"tindex":"4330402e-21ed-11e6-821e-457d2a1cd0bd","series":0,"name":"replace","transplant":{"toString":"for (final E e : org.apache.commons.collections4.queue.CircularFifoQueue.this) {\n    out.writeObject(e);\n}","position":"org.apache.commons.collections4.queue.CircularFifoQueue:120","type":"CtForEachImpl","sourcecode":"for (final E E : org.apache.commons.collections4.queue.CircularFifoQueue.this) {\n    out.writeObject(e);\n}"},"variableMap":{"out":"outputStream"},"type":"adrStmt","transplantationPoint":{"toString":"outputStream.writeInt(size())","position":"org.apache.commons.collections4.list.AbstractLinkedList:603","type":"CtInvocationImpl","sourcecode":"outputStream.writeInt(size())"},"status":-2},{"failures":[],"tindex":"4330402f-21ed-11e6-821e-7fe16b796c02","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.collections4.map.AbstractHashedMap.this.data = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[initialCapacity]","position":"org.apache.commons.collections4.map.AbstractHashedMap:150","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.this.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[initialCapacity]"},"variableMap":{"data":"data","initialCapacity":"length"},"type":"adrStmt","transplantationPoint":{"toString":"cloned.data = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[data.length]","position":"org.apache.commons.collections4.map.AbstractHashedMap:1288","type":"CtAssignmentImpl","sourcecode":"cloned.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int]"},"status":-2},{"failures":[],"tindex":"43306740-21ed-11e6-821e-99236ef46f2a","series":0,"name":"replace","transplant":{"toString":"return getSortedSet().first()","position":"org.apache.commons.collections4.set.TransformedSortedSet:117","type":"CtReturnImpl","sourcecode":"return getSortedSet().first()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return decorated().element()","position":"org.apache.commons.collections4.queue.AbstractQueueDecorator:80","type":"CtReturnImpl","sourcecode":"return decorated().element()"},"status":-2},{"failures":[],"tindex":"43306741-21ed-11e6-821e-3341d937bdba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"in.defaultReadObject()","position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:98","type":"CtInvocationImpl","sourcecode":"in.defaultReadObject()"},"status":0},{"failures":[],"tindex":"43306742-21ed-11e6-821e-cfbd011d6ae1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"while ((currentNode != (rootNode[dataElement.ordinal()])) && (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(currentNode, dataElement))) {\n    if (currentNode.isLeftChild(dataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> siblingNode = getRightChild(getParent(currentNode, dataElement), dataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(siblingNode, dataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(siblingNode, dataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getParent(currentNode, dataElement), dataElement);\n            rotateLeft(getParent(currentNode, dataElement), dataElement);\n            siblingNode = getRightChild(getParent(currentNode, dataElement), dataElement);\n        } \n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getLeftChild(siblingNode, dataElement), dataElement)) && (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getRightChild(siblingNode, dataElement), dataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(siblingNode, dataElement);\n            currentNode = getParent(currentNode, dataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getRightChild(siblingNode, dataElement), dataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getLeftChild(siblingNode, dataElement), dataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(siblingNode, dataElement);\n                rotateRight(siblingNode, dataElement);\n                siblingNode = getRightChild(getParent(currentNode, dataElement), dataElement);\n            } \n            copyColor(getParent(currentNode, dataElement), siblingNode, dataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getRightChild(siblingNode, dataElement), dataElement);\n            rotateLeft(getParent(currentNode, dataElement), dataElement);\n            currentNode = rootNode[dataElement.ordinal()];\n        }\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> siblingNode = getLeftChild(getParent(currentNode, dataElement), dataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(siblingNode, dataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(siblingNode, dataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getParent(currentNode, dataElement), dataElement);\n            rotateRight(getParent(currentNode, dataElement), dataElement);\n            siblingNode = getLeftChild(getParent(currentNode, dataElement), dataElement);\n        } \n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getRightChild(siblingNode, dataElement), dataElement)) && (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getLeftChild(siblingNode, dataElement), dataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(siblingNode, dataElement);\n            currentNode = getParent(currentNode, dataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getLeftChild(siblingNode, dataElement), dataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getRightChild(siblingNode, dataElement), dataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(siblingNode, dataElement);\n                rotateLeft(siblingNode, dataElement);\n                siblingNode = getLeftChild(getParent(currentNode, dataElement), dataElement);\n            } \n            copyColor(getParent(currentNode, dataElement), siblingNode, dataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getLeftChild(siblingNode, dataElement), dataElement);\n            rotateRight(getParent(currentNode, dataElement), dataElement);\n            currentNode = rootNode[dataElement.ordinal()];\n        }\n    }\n}","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1018","type":"CtWhileImpl","sourcecode":"while ((currentNode != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()])) && (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(currentNode, dataElement))) {\n    if (currentNode.isLeftChild(dataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = getRightChild(getParent(currentNode, dataElement), dataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(siblingNode, dataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(siblingNode, dataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getParent(currentNode, dataElement), dataElement);\n            rotateLeft(getParent(currentNode, dataElement), dataElement);\n            siblingNode = getRightChild(getParent(currentNode, dataElement), dataElement);\n        } \n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getLeftChild(siblingNode, dataElement), dataElement)) && (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getRightChild(siblingNode, dataElement), dataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(siblingNode, dataElement);\n            currentNode = getParent(currentNode, dataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getRightChild(siblingNode, dataElement), dataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getLeftChild(siblingNode, dataElement), dataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(siblingNode, dataElement);\n                rotateRight(siblingNode, dataElement);\n                siblingNode = getRightChild(getParent(currentNode, dataElement), dataElement);\n            } \n            copyColor(getParent(currentNode, dataElement), siblingNode, dataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getRightChild(siblingNode, dataElement), dataElement);\n            rotateLeft(getParent(currentNode, dataElement), dataElement);\n            currentNode = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()];\n        }\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = getLeftChild(getParent(currentNode, dataElement), dataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(siblingNode, dataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(siblingNode, dataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(getParent(currentNode, dataElement), dataElement);\n            rotateRight(getParent(currentNode, dataElement), dataElement);\n            siblingNode = getLeftChild(getParent(currentNode, dataElement), dataElement);\n        } \n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getRightChild(siblingNode, dataElement), dataElement)) && (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getLeftChild(siblingNode, dataElement), dataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(siblingNode, dataElement);\n            currentNode = getParent(currentNode, dataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(getLeftChild(siblingNode, dataElement), dataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getRightChild(siblingNode, dataElement), dataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(siblingNode, dataElement);\n                rotateLeft(siblingNode, dataElement);\n                siblingNode = getLeftChild(getParent(currentNode, dataElement), dataElement);\n            } \n            copyColor(getParent(currentNode, dataElement), siblingNode, dataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getParent(currentNode, dataElement), dataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(getLeftChild(siblingNode, dataElement), dataElement);\n            rotateRight(getParent(currentNode, dataElement), dataElement);\n            currentNode = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][dataElement.ordinal()];\n        }\n    }\n}"},"status":0},{"failures":[],"tindex":"43308e53-21ed-11e6-821e-1527b0b4f63d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"this.keyTransformer = keyTransformer","position":"org.apache.commons.collections4.map.TransformedMap:126","type":"CtAssignmentImpl","sourcecode":"this.org.apache.commons.collections4.Transformer<? super K, ? extends K> = keyTransformer"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":16,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}