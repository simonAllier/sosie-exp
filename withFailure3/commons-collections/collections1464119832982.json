{"failureDictionary":{"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":11,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":62,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":47,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":59,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":65,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":21,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":35,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":22,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":69,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":20,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":64,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":37,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":60,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":23,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":56,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":13,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":8,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":14,"org.apache.commons.collections4.collection.CompositeCollectionTest.testClear":5,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":40,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":6,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":25,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":7,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":44,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":15,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":51,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":50,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":52,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":57,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":18,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":39,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":55,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":54,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":10,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":43,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":53,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":48,"org.apache.commons.collections4.iterators.SingletonIterator2Test.testFullIterator":4,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":73,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":72,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":45,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":46,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testFullIterator":2,"org.apache.commons.collections4.PredicateUtilsTest.testExceptionPredicate":12,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":30,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":33,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":68,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":32,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":31,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":61,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":70,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":34,"org.apache.commons.collections4.map.LRUMapTest.testClone":16,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testEmptyIterator":1,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":28,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":29,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":63,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":19,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":26,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":17,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":66,"org.apache.commons.collections4.map.LinkedMapTest.testClone":38,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":41,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":58,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":27,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":49,"org.apache.commons.collections4.iterators.SingletonIterator2Test.testIterator":3,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":36,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testIterator":0,"org.apache.commons.collections4.ListUtilsTest.testEquals":71,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":24,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":67},"transformations":[{"failures":[],"tindex":"b50ccb71-21e9-11e6-8406-79756ebf53af","series":0,"name":"replace","transplant":{"toString":"return getQueue().remove()","position":"org.apache.commons.collections4.queue.TransformedQueue:131","type":"CtReturnImpl","sourcecode":"return getQueue().remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.collections4.iterators.ObjectArrayListIterator.this.array[((org.apache.commons.collections4.iterators.ObjectArrayListIterator.this.index)++)]","position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:128","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.ObjectArrayListIterator.this.E[][((org.apache.commons.collections4.iterators.ObjectArrayListIterator.this.int)++)]"},"status":-2},{"failures":[0,1,2,3,4],"tindex":"b50cf282-21e9-11e6-8406-713c80bb7c19","series":0,"name":"replace","transplant":{"toString":"throw new java.util.ConcurrentModificationException()","position":"org.apache.commons.collections4.bag.AbstractMapBag:203","type":"CtThrowImpl","sourcecode":"throw new java.util.ConcurrentModificationException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.util.NoSuchElementException()","position":"org.apache.commons.collections4.iterators.SingletonIterator:89","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"status":-1},{"failures":[],"tindex":"b50cf283-21e9-11e6-8406-0bbf4c89fa1b","series":0,"name":"add","transplant":{"toString":"return decorated().isFull()","position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:152","type":"CtReturnImpl","sourcecode":"return decorated().isFull()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return ret >= 0","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1808","type":"CtReturnImpl","sourcecode":"return ret >= 0"},"status":-2},{"failures":[],"tindex":"b50cf284-21e9-11e6-8406-859ab5a8d429","series":0,"name":"replace","transplant":{"toString":"final int leastIndex = least()","position":"org.apache.commons.collections4.iterators.CollatingIterator:251","type":"CtLocalVariableImpl","sourcecode":"final int int = least()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"int total = 0","position":"org.apache.commons.collections4.map.Flat3Map:1194","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"b50cf285-21e9-11e6-8406-99790be0c75a","series":0,"name":"add","transplant":{"toString":"return org.apache.commons.collections4.functors.NullPredicate.<T>nullPredicate()","position":"org.apache.commons.collections4.functors.IdentityPredicate:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NullPredicate.<T>nullPredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.collections4.functors.NullIsTruePredicate.nullIsTruePredicate(predicate)","position":"org.apache.commons.collections4.PredicateUtils:518","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NullIsTruePredicate.nullIsTruePredicate(predicate)"},"status":-2},{"failures":[],"tindex":"b50cf286-21e9-11e6-8406-db43a3edf701","series":0,"name":"replace","transplant":{"toString":"return ((java.util.ListIterator<E>)(getIterator())).hasPrevious()","position":"org.apache.commons.collections4.set.ListOrderedSet:396","type":"CtReturnImpl","sourcecode":"return ((java.util.ListIterator<E>)(getIterator())).hasPrevious()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return false","position":"org.apache.commons.collections4.map.AbstractReferenceMap:215","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"b50d1997-21e9-11e6-8406-259f20019c46","series":0,"name":"replace","transplant":{"toString":"leastIndex = i","position":"org.apache.commons.collections4.iterators.CollatingIterator:361","type":"CtAssignmentImpl","sourcecode":"leastIndex = i"},"variableMap":{"i":"size","leastIndex":"size"},"type":"adrStmt","transplantationPoint":{"toString":"size = 2","position":"org.apache.commons.collections4.map.Flat3Map:452","type":"CtAssignmentImpl","sourcecode":"int = 2"},"status":0},{"failures":[],"tindex":"b50d1998-21e9-11e6-8406-71fc89bb3ded","series":0,"name":"add","transplant":{"toString":"final int start = index * (size)","position":"org.apache.commons.collections4.ListUtils:690","type":"CtLocalVariableImpl","sourcecode":"final int int = index * (int)"},"variableMap":{"size":"length","index":"length"},"type":"adrStmt","transplantationPoint":{"toString":"int j = (array.length) - 1","position":"org.apache.commons.collections4.CollectionUtils:1439","type":"CtLocalVariableImpl","sourcecode":"int int = (array.int) - 1"},"status":-2},{"failures":[5,6],"tindex":"b50d1999-21e9-11e6-8406-f1b672549028","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (final java.util.Collection<E> coll : all) {\n    coll.clear();\n}","position":"org.apache.commons.collections4.collection.CompositeCollection:329","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    coll.clear();\n}"},"status":-1},{"failures":[],"tindex":"b50d199a-21e9-11e6-8406-13ee0aa5781f","series":0,"name":"replace","transplant":{"toString":"if ((validForUpdate) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} ","position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"canRemove"},"type":"adrStmt","transplantationPoint":{"toString":"if ((canRemove) == false) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\");\n} ","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:636","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\");\n} "},"status":0},{"failures":[],"tindex":"b50d199b-21e9-11e6-8406-27954d8aa341","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.NullPointerException(\"The list must not be null\")","position":"org.apache.commons.collections4.iterators.LoopingListIterator:59","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"The list must not be null\")"},"status":0},{"failures":[7,8],"tindex":"b50d40ac-21e9-11e6-8406-6533078511e0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"out.defaultWriteObject()","position":"org.apache.commons.collections4.map.LRUMap:415","type":"CtInvocationImpl","sourcecode":"out.defaultWriteObject()"},"status":-1},{"failures":[],"tindex":"b50d40ad-21e9-11e6-8406-39b47e157ba3","series":0,"name":"replace","transplant":{"toString":"buffer.append(\"}\\n\")","position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:71","type":"CtInvocationImpl","sourcecode":"buffer.append(\"}\\n\")"},"variableMap":{"buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"toString":"buffer.append(\"right=\").append(right.getKey()).append(\" [\").append(right.bitIndex).append(\"]\")","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1372","type":"CtInvocationImpl","sourcecode":"buffer.append(\"right=\").append(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey()).append(\" [\").append(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int).append(\"]\")"},"status":0},{"failures":[],"tindex":"b50d40ae-21e9-11e6-8406-754b02830f0f","series":0,"name":"add","transplant":{"toString":"decorated.decorated().putAll(transformed)","position":"org.apache.commons.collections4.map.TransformedSortedMap:98","type":"CtInvocationImpl","sourcecode":"decorated.decorated().putAll(transformed)"},"variableMap":{"transformed":"map","decorated":"map"},"type":"adrStmt","transplantationPoint":{"toString":"if ((map.containsKey(key)) == false) {\n    throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size\");\n} ","position":"org.apache.commons.collections4.map.FixedSizeSortedMap:119","type":"CtIfImpl","sourcecode":"if ((java.util.Map<K, V>.containsKey(key)) == false) {\n    throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size\");\n} "},"status":-2},{"failures":[],"tindex":"b50d40af-21e9-11e6-8406-5f0abdef124c","series":0,"name":"replace","transplant":{"toString":"getNodeFromCache()","position":"org.apache.commons.collections4.list.NodeCachingLinkedList:124","type":"CtInvocationImpl","sourcecode":"getNodeFromCache()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"org.apache.commons.collections4.list.AbstractLinkedList.Node.this.next = next","position":"org.apache.commons.collections4.list.AbstractLinkedList:673","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node.this.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = next"},"status":-2},{"failures":[],"tindex":"b50ec750-21e9-11e6-8406-afce63a4df5a","series":0,"name":"add","transplant":{"toString":"final java.util.Map<K, V> m = decorated()","position":"org.apache.commons.collections4.map.ListOrderedMap:452","type":"CtLocalVariableImpl","sourcecode":"final java.util.Map<K, V> java.util.Map<K, V> = decorated()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final java.util.Map<K, V> transformed = decorated.transformMap(map)","position":"org.apache.commons.collections4.map.TransformedMap:104","type":"CtLocalVariableImpl","sourcecode":"final java.util.Map<K, V> java.util.Map<K, V> = decorated.transformMap(map)"},"status":-2},{"failures":[],"tindex":"b50eee61-21e9-11e6-8406-394cfcaba9a3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (!(coll.contains(e.next()))) {\n    e.remove();\n    modified = true;\n} ","position":"org.apache.commons.collections4.bag.CollectionSortedBag:146","type":"CtIfImpl","sourcecode":"if (!(coll.contains(e.next()))) {\n    e.remove();\n    modified = true;\n} "},"status":-2},{"failures":[9],"tindex":"b50eee62-21e9-11e6-8406-a1af8062ae6d","series":0,"name":"replace","transplant":{"toString":"throw new java.lang.IllegalArgumentException(\"The map size must be 1\")","position":"org.apache.commons.collections4.map.SingletonMap:122","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The map size must be 1\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.UnsupportedOperationException(\"add() is not supported on CompositeCollection without a CollectionMutator strategy\")","position":"org.apache.commons.collections4.collection.CompositeCollection:220","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"add() is not supported on CompositeCollection without a CollectionMutator strategy\")"},"status":-1},{"failures":[],"tindex":"b50eee63-21e9-11e6-8406-83ca56f05d64","series":0,"name":"replace","transplant":{"toString":"throw new org.apache.commons.collections4.FunctorException(\"ExceptionTransformer invoked\")","position":"org.apache.commons.collections4.functors.ExceptionTransformer:67","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.collections4.FunctorException(\"ExceptionTransformer invoked\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalStateException(org.apache.commons.collections4.map.AbstractHashedMap.GETKEY_INVALID)","position":"org.apache.commons.collections4.map.AbstractReferenceMap:911","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String)"},"status":-1},{"failures":[],"tindex":"b50eee64-21e9-11e6-8406-c32398d36285","series":0,"name":"add","transplant":{"toString":"final int size = decorated().size()","position":"org.apache.commons.collections4.list.GrowthList:182","type":"CtLocalVariableImpl","sourcecode":"final int int = decorated().size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"int i = 0","position":"org.apache.commons.collections4.set.CompositeSet:164","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"b50eee65-21e9-11e6-8406-ad312c5dc986","series":0,"name":"replace","transplant":{"toString":"current = next","position":"org.apache.commons.collections4.list.AbstractLinkedList:829","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"variableMap":{"next":"next","current":"header"},"type":"adrStmt","transplantationPoint":{"toString":"header.next = header","position":"org.apache.commons.collections4.list.AbstractLinkedList:519","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":-2},{"failures":[],"tindex":"b50eee66-21e9-11e6-8406-8f00c00d5910","series":0,"name":"replace","transplant":{"toString":"return new KeySet()","position":"org.apache.commons.collections4.map.StaticBucketMap:351","type":"CtReturnImpl","sourcecode":"return new KeySet()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return values","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:279","type":"CtReturnImpl","sourcecode":"return java.util.Set<V>"},"status":-2},{"failures":[10,11],"tindex":"b50eee67-21e9-11e6-8406-236907b893ad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"removeNode(node)","position":"org.apache.commons.collections4.list.AbstractLinkedList:345","type":"CtInvocationImpl","sourcecode":"removeNode(node)"},"status":-1},{"failures":[],"tindex":"b50eee68-21e9-11e6-8406-1f9c977eef10","series":0,"name":"replace","transplant":{"toString":"if (!(hasPrevious())) {\n    throw new java.util.NoSuchElementException(\"Already at start of list.\");\n} ","position":"org.apache.commons.collections4.list.AbstractLinkedList:841","type":"CtIfImpl","sourcecode":"if (!(hasPrevious())) {\n    throw new java.util.NoSuchElementException(\"Already at start of list.\");\n} "},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"for (final E item : coll) {\n    validate(item);\n}","position":"org.apache.commons.collections4.collection.PredicatedCollection:132","type":"CtForEachImpl","sourcecode":"for (final E E : coll) {\n    validate(item);\n}"},"status":-2},{"failures":[12],"tindex":"b50f1579-21e9-11e6-8406-0f218ceb21f1","series":0,"name":"replace","transplant":{"toString":"throw new java.lang.IllegalArgumentException(\"The map must not be null\")","position":"org.apache.commons.collections4.set.MapBackedSet:76","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The map must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new org.apache.commons.collections4.FunctorException(\"ExceptionPredicate invoked\")","position":"org.apache.commons.collections4.functors.ExceptionPredicate:66","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.collections4.FunctorException(\"ExceptionPredicate invoked\")"},"status":-1},{"failures":[],"tindex":"b50f157a-21e9-11e6-8406-23780790ee54","series":0,"name":"add","transplant":{"toString":"return new org.apache.commons.collections4.set.UnmodifiableSortedSet<E>(set)","position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:59","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.set.UnmodifiableSortedSet<E>(set)"},"variableMap":{"set":"set"},"type":"adrStmt","transplantationPoint":{"toString":"return org.apache.commons.collections4.set.PredicatedSortedSet.predicatedSortedSet(set, predicate)","position":"org.apache.commons.collections4.SetUtils:307","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.PredicatedSortedSet.predicatedSortedSet(set, predicate)"},"status":-2},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"tindex":"b50f157b-21e9-11e6-8406-3bf758579091","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<java.util.Map.Entry<K, V>>emptyOrderedIterator()","position":"org.apache.commons.collections4.map.AbstractLinkedMap:399","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<java.util.Map.Entry<K, V>>emptyOrderedIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return new org.apache.commons.collections4.map.AbstractLinkedMap.EntrySetIterator<K, V>(org.apache.commons.collections4.map.AbstractLinkedMap.this)","position":"org.apache.commons.collections4.map.AbstractLinkedMap:401","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractLinkedMap.EntrySetIterator<K, V>(org.apache.commons.collections4.map.AbstractLinkedMap.this)"},"status":-1},{"failures":[],"tindex":"b50f157c-21e9-11e6-8406-718385cd532c","series":0,"name":"replace","transplant":{"toString":"if ((hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.iterators.ArrayListIterator:116","type":"CtIfImpl","sourcecode":"if ((hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if ((parent.modCount) != (expectedModCount)) {\n    throw new java.util.ConcurrentModificationException();\n} ","position":"org.apache.commons.collections4.map.AbstractHashedMap:1190","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>.int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"status":-2},{"failures":[],"tindex":"b50f157d-21e9-11e6-8406-495832be34a7","series":0,"name":"replace","transplant":{"toString":"return nextEntry().getValue()","position":"org.apache.commons.collections4.map.AbstractReferenceMap:891","type":"CtReturnImpl","sourcecode":"return nextEntry().getValue()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return getEntry(index).getValue()","position":"org.apache.commons.collections4.map.LinkedMap:155","type":"CtReturnImpl","sourcecode":"return getEntry(index).getValue()"},"status":-2},{"failures":[],"tindex":"b50f157e-21e9-11e6-8406-7bc3d15ef946","series":0,"name":"replace","transplant":{"toString":"throw new java.lang.IllegalStateException(\"Iterator getKey() can only be called after next() and before remove()\")","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:730","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Iterator getKey() can only be called after next() and before remove()\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.util.NoSuchElementException(org.apache.commons.collections4.map.AbstractHashedMap.NO_NEXT_ENTRY)","position":"org.apache.commons.collections4.map.Flat3Map:910","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String)"},"status":0},{"failures":[],"tindex":"b50f3c8f-21e9-11e6-8406-b3c282f25d51","series":0,"name":"replace","transplant":{"toString":"convertToMap()","position":"org.apache.commons.collections4.map.Flat3Map:388","type":"CtInvocationImpl","sourcecode":"convertToMap()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"incrementModCount()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:152","type":"CtInvocationImpl","sourcecode":"incrementModCount()"},"status":-2},{"failures":[],"tindex":"b50f3c90-21e9-11e6-8406-47ef3037844e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"array[i] = new UnmodifiableEntry(((java.util.Map.Entry<K, V>)(array[i])))","position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:114","type":"CtAssignmentImpl","sourcecode":"array[i] = new UnmodifiableEntry(((java.util.Map.Entry<K, V>)(array[i])))"},"status":0},{"failures":[],"tindex":"b50f3c91-21e9-11e6-8406-bb70f78de562","series":0,"name":"replace","transplant":{"toString":"if (index < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + index));\n} ","position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtIfImpl","sourcecode":"if (index < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + index));\n} "},"variableMap":{"index":"size"},"type":"adrStmt","transplantationPoint":{"toString":"rangeCheck(index, ((size) + 1))","position":"org.apache.commons.collections4.list.AbstractLinkedList:1005","type":"CtInvocationImpl","sourcecode":"rangeCheck(index, ((int) + 1))"},"status":0},{"failures":[58],"tindex":"b50f3c92-21e9-11e6-8406-3b1a7af48513","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (key == null) {\n    switch (size) {\n        case 3 :\n            if ((key3) == null) {\n                final V old = value3;\n                hash3 = 0;\n                key3 = null;\n                value3 = null;\n                size = 2;\n                return old;\n            } \n            if ((key2) == null) {\n                final V old = value2;\n                hash2 = hash3;\n                key2 = key3;\n                value2 = value3;\n                hash3 = 0;\n                key3 = null;\n                value3 = null;\n                size = 2;\n                return old;\n            } \n            if ((key1) == null) {\n                final V old = value1;\n                hash1 = hash3;\n                key1 = key3;\n                value1 = value3;\n                hash3 = 0;\n                key3 = null;\n                value3 = null;\n                size = 2;\n                return old;\n            } \n            return null;\n        case 2 :\n            if ((key2) == null) {\n                final V old = value2;\n                hash2 = 0;\n                key2 = null;\n                value2 = null;\n                size = 1;\n                return old;\n            } \n            if ((key1) == null) {\n                final V old = value1;\n                hash1 = hash2;\n                key1 = key2;\n                value1 = value2;\n                hash2 = 0;\n                key2 = null;\n                value2 = null;\n                size = 1;\n                return old;\n            } \n            return null;\n        case 1 :\n            if ((key1) == null) {\n                final V old = value1;\n                hash1 = 0;\n                key1 = null;\n                value1 = null;\n                size = 0;\n                return old;\n            } \n    }\n} else {\n    if ((size) > 0) {\n        final int hashCode = key.hashCode();\n        switch (size) {\n            case 3 :\n                if (((hash3) == hashCode) && (key.equals(key3))) {\n                    final V old = value3;\n                    hash3 = 0;\n                    key3 = null;\n                    value3 = null;\n                    size = 2;\n                    return old;\n                } \n                if (((hash2) == hashCode) && (key.equals(key2))) {\n                    final V old = value2;\n                    hash2 = hash3;\n                    key2 = key3;\n                    value2 = value3;\n                    hash3 = 0;\n                    key3 = null;\n                    value3 = null;\n                    size = 2;\n                    return old;\n                } \n                if (((hash1) == hashCode) && (key.equals(key1))) {\n                    final V old = value1;\n                    hash1 = hash3;\n                    key1 = key3;\n                    value1 = value3;\n                    hash3 = 0;\n                    key3 = null;\n                    value3 = null;\n                    size = 2;\n                    return old;\n                } \n                return null;\n            case 2 :\n                if (((hash2) == hashCode) && (key.equals(key2))) {\n                    final V old = value2;\n                    hash2 = 0;\n                    key2 = null;\n                    value2 = null;\n                    size = 1;\n                    return old;\n                } \n                if (((hash1) == hashCode) && (key.equals(key1))) {\n                    final V old = value1;\n                    hash1 = hash2;\n                    key1 = key2;\n                    value1 = value2;\n                    hash2 = 0;\n                    key2 = null;\n                    value2 = null;\n                    size = 1;\n                    return old;\n                } \n                return null;\n            case 1 :\n                if (((hash1) == hashCode) && (key.equals(key1))) {\n                    final V old = value1;\n                    hash1 = 0;\n                    key1 = null;\n                    value1 = null;\n                    size = 0;\n                    return old;\n                } \n        }\n    } \n}","position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtIfImpl","sourcecode":"if (key == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return old;\n            } \n            if ((K) == null) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return old;\n            } \n            if ((K) == null) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return old;\n            } \n            return null;\n        case 2 :\n            if ((K) == null) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 1;\n                return old;\n            } \n            if ((K) == null) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 1;\n                return old;\n            } \n            return null;\n        case 1 :\n            if ((K) == null) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 0;\n                return old;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = key.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == hashCode) && (key.equals(K))) {\n                    final V V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 2;\n                    return old;\n                } \n                if (((int) == hashCode) && (key.equals(K))) {\n                    final V V = V;\n                    int = int;\n                    K = K;\n                    V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 2;\n                    return old;\n                } \n                if (((int) == hashCode) && (key.equals(K))) {\n                    final V V = V;\n                    int = int;\n                    K = K;\n                    V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 2;\n                    return old;\n                } \n                return null;\n            case 2 :\n                if (((int) == hashCode) && (key.equals(K))) {\n                    final V V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 1;\n                    return old;\n                } \n                if (((int) == hashCode) && (key.equals(K))) {\n                    final V V = V;\n                    int = int;\n                    K = K;\n                    V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 1;\n                    return old;\n                } \n                return null;\n            case 1 :\n                if (((int) == hashCode) && (key.equals(K))) {\n                    final V V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 0;\n                    return old;\n                } \n        }\n    } \n}"},"status":-1},{"failures":[],"tindex":"b50f63a3-21e9-11e6-8406-331a2cb0854c","series":0,"name":"add","transplant":{"toString":"return code","position":"org.apache.commons.collections4.map.CompositeMap:483","type":"CtReturnImpl","sourcecode":"return code"},"variableMap":{"code":"hashCode"},"type":"adrStmt","transplantationPoint":{"toString":"return hashCode","position":"org.apache.commons.collections4.ListUtils:292","type":"CtReturnImpl","sourcecode":"return hashCode"},"status":-2},{"failures":[],"tindex":"b50f63a4-21e9-11e6-8406-3bc65d2f9569","series":0,"name":"replace","transplant":{"toString":"if ((size()) == 0) {\n    return \"{}\";\n} ","position":"org.apache.commons.collections4.map.AbstractHashedMap:1365","type":"CtIfImpl","sourcecode":"if ((size()) == 0) {\n    return \"{}\";\n} "},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if ((last) != null) {\n    return (((\"MapIterator[\" + (getKey())) + \"=\") + (getValue())) + \"]\";\n} ","position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:163","type":"CtIfImpl","sourcecode":"if ((java.util.Map.Entry<K, V>) != null) {\n    return (((\"MapIterator[\" + (getKey())) + \"=\") + (getValue())) + \"]\";\n} "},"status":-2},{"failures":[],"tindex":"b50f8ab5-21e9-11e6-8406-0de1a35effb2","series":0,"name":"replace","transplant":{"toString":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.this.map = decorated","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:44","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.this.java.util.Map<K, V> = decorated"},"variableMap":{"map":"map","decorated":"map"},"type":"adrStmt","transplantationPoint":{"toString":"map = ((java.util.Map<K, V>)(in.readObject()))","position":"org.apache.commons.collections4.map.LazyMap:155","type":"CtAssignmentImpl","sourcecode":"java.util.Map<K, V> = ((java.util.Map<K, V>)(in.readObject()))"},"status":-2},{"failures":[59,60],"tindex":"b50f8ab6-21e9-11e6-8406-39c6e375b5cf","series":0,"name":"replace","transplant":{"toString":"return true","position":"org.apache.commons.collections4.bag.AbstractMapBag:258","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if (iPredicate.evaluate(object)) {\n    return false;\n} ","position":"org.apache.commons.collections4.functors.NonePredicate:95","type":"CtIfImpl","sourcecode":"if (iPredicate.evaluate(object)) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"b50f8ab7-21e9-11e6-8406-e364ed4bca72","series":0,"name":"replace","transplant":{"toString":"clearNextObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:136","type":"CtInvocationImpl","sourcecode":"clearNextObject()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"out.writeObject(it.getValue())","position":"org.apache.commons.collections4.map.AbstractReferenceMap:1003","type":"CtInvocationImpl","sourcecode":"out.writeObject(it.getValue())"},"status":-2},{"failures":[],"tindex":"b50f8ab8-21e9-11e6-8406-5ff8161cc77f","series":0,"name":"replace","transplant":{"toString":"return lastReturnedNode","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1650","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"variableMap":{"lastReturnedNode":"node"},"type":"adrStmt","transplantationPoint":{"toString":"return node == null ? null : node.getParent(dataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:792","type":"CtReturnImpl","sourcecode":"return node == null ? null : node.getParent(dataElement)"},"status":-3},{"failures":[61],"tindex":"b50f8ab9-21e9-11e6-8406-31e8d97d298c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"header.previous = header","position":"org.apache.commons.collections4.list.AbstractLinkedList:520","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":-1},{"failures":[],"tindex":"b50f8aba-21e9-11e6-8406-a3964cdbdc73","series":0,"name":"replace","transplant":{"toString":"return \"Iterator[]\"","position":"org.apache.commons.collections4.map.AbstractHashedMap:1203","type":"CtReturnImpl","sourcecode":"return \"Iterator[]\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return answer","position":"org.apache.commons.collections4.MapUtils:391","type":"CtReturnImpl","sourcecode":"return answer"},"status":0},{"failures":[62,63,64,65,66,67,68,69,70],"tindex":"b50f8abb-21e9-11e6-8406-9f814cd660ec","series":0,"name":"add","transplant":{"toString":"insertValue(newNode)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:511","type":"CtInvocationImpl","sourcecode":"insertValue(newNode)"},"variableMap":{"newNode":"rval"},"type":"adrStmt","transplantationPoint":{"toString":"if (rval != null) {\n    while ((rval.getRight(dataElement)) != null) {\n        rval = rval.getRight(dataElement);\n    }\n} ","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:700","type":"CtIfImpl","sourcecode":"if (rval != null) {\n    while ((rval.getRight(dataElement)) != null) {\n        rval = rval.getRight(dataElement);\n    }\n} "},"status":-1},{"failures":[],"tindex":"b50f8abc-21e9-11e6-8406-c132cf574317","series":0,"name":"replace","transplant":{"toString":"if (n <= 0) {\n    throw new java.util.EmptyStackException();\n} else {\n    return remove((n - 1));\n}","position":"org.apache.commons.collections4.ArrayStack:122","type":"CtIfImpl","sourcecode":"if (n <= 0) {\n    throw new java.util.EmptyStackException();\n} else {\n    return remove((n - 1));\n}"},"variableMap":{"n":"size"},"type":"adrStmt","transplantationPoint":{"toString":"if (index < size) {\n    E object = decorated().get(index);\n    if (object == null) {\n        object = factory.create();\n        decorated().set(index, object);\n        return object;\n    } \n    return object;\n} ","position":"org.apache.commons.collections4.list.LazyList:113","type":"CtIfImpl","sourcecode":"if (index < size) {\n    E E = decorated().get(index);\n    if (object == null) {\n        object = org.apache.commons.collections4.Factory<? extends E>.create();\n        decorated().set(index, object);\n        return object;\n    } \n    return object;\n} "},"status":-2},{"failures":[],"tindex":"b50fb1cd-21e9-11e6-8406-ebe6346bbe63","series":0,"name":"replace","transplant":{"toString":"checkMod()","position":"org.apache.commons.collections4.map.AbstractReferenceMap:783","type":"CtInvocationImpl","sourcecode":"checkMod()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"for (final E e : coll) {\n    map.put(e, dummyValue);\n}","position":"org.apache.commons.collections4.set.MapBackedSet:124","type":"CtForEachImpl","sourcecode":"for (final E E : coll) {\n    java.util.Map<E, ? super V>.put(e, V);\n}"},"status":-2},{"failures":[],"tindex":"b50fb1ce-21e9-11e6-8406-6b6189b15bf4","series":0,"name":"add","transplant":{"toString":"int total = 17","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:258","type":"CtLocalVariableImpl","sourcecode":"int int = 17"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"final int myNewPosition = -(newTop.relativePosition)","position":"org.apache.commons.collections4.list.TreeList:746","type":"CtLocalVariableImpl","sourcecode":"final int int = -(newTop.int)"},"status":-2},{"failures":[],"tindex":"b50fb1cf-21e9-11e6-8406-8d828b7462c3","series":0,"name":"add","transplant":{"toString":"init()","position":"org.apache.commons.collections4.list.AbstractLinkedList:87","type":"CtInvocationImpl","sourcecode":"init()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if ((ref.get()) == null) {\n    it.remove();\n} ","position":"org.apache.commons.collections4.list.CursorableLinkedList:276","type":"CtIfImpl","sourcecode":"if ((ref.get()) == null) {\n    it.remove();\n} "},"status":-2},{"failures":[],"tindex":"b50fb1d0-21e9-11e6-8406-afbb4082303d","series":0,"name":"add","transplant":{"toString":"allNull = false","position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:100","type":"CtAssignmentImpl","sourcecode":"allNull = false"},"variableMap":{"allNull":"validForUpdate"},"type":"adrStmt","transplantationPoint":{"toString":"validForUpdate = false","position":"org.apache.commons.collections4.iterators.ReverseListIterator:161","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":0},{"failures":[71],"tindex":"b50fb1d1-21e9-11e6-8406-89fea024c874","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"obj1 = it1.next()","position":"org.apache.commons.collections4.ListUtils:258","type":"CtAssignmentImpl","sourcecode":"obj1 = it1.next()"},"status":-1},{"failures":[],"tindex":"b50fb1d2-21e9-11e6-8406-fb144beb3ece","series":0,"name":"replace","transplant":{"toString":"return org.apache.commons.collections4.iterators.EmptyOrderedMapIterator.<V, K>emptyOrderedMapIterator()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2146","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyOrderedMapIterator.<V, K>emptyOrderedMapIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"return new TrieMapIterator()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:823","type":"CtReturnImpl","sourcecode":"return new TrieMapIterator()"},"status":-2},{"failures":[],"tindex":"b50fb1d3-21e9-11e6-8406-371920ae9e73","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalStateException(org.apache.commons.collections4.map.AbstractHashedMap.SETVALUE_INVALID)","position":"org.apache.commons.collections4.map.Flat3Map:686","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String)"},"status":0},{"failures":[],"tindex":"b50fb1d4-21e9-11e6-8406-7f85a04b4854","series":0,"name":"replace","transplant":{"toString":"throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\")","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:246","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"throw new java.lang.IllegalStateException()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1634","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException()"},"status":0},{"failures":[],"tindex":"b50fd8e5-21e9-11e6-8406-2bb970f2ff87","series":0,"name":"replace","transplant":{"toString":"shrinkCacheToMaximumSize()","position":"org.apache.commons.collections4.list.NodeCachingLinkedList:115","type":"CtInvocationImpl","sourcecode":"shrinkCacheToMaximumSize()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"if (toKey != null) {\n    last = ceilingEntry(toKey);\n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1986","type":"CtIfImpl","sourcecode":"if (toKey != null) {\n    last = ceilingEntry(toKey);\n} "},"status":-2},{"failures":[72,73],"tindex":"b50fd8e6-21e9-11e6-8406-cfa0cfde42e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"comparatorChain.add(comparator)","position":"org.apache.commons.collections4.comparators.ComparatorChain:92","type":"CtInvocationImpl","sourcecode":"java.util.List<java.util.Comparator<E>>.add(comparator)"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":54,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}